<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.Annotations</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider">
      <summary vsli:raw="Extends the metadata information for a class by adding attributes and property information that is defined in an associated class.">연결된 클래스에 정의된 특성 및 속성 정보를 추가하여 클래스에 대한 메타데이터 정보를 확장합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider&quot; /&gt; class by using the specified type.">지정된 형식을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The type for which the metadata provider is created.">메타데이터 공급자가 만들어지는 형식입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider&quot; /&gt; class by using the specified metadata provider type and associated type.">지정된 메타데이터 공급자 형식 및 연결된 형식을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The type for which the metadata provider is created.">메타데이터 공급자가 만들어지는 형식입니다.</param>
      <param name="associatedMetadataType" vsli:raw="The associated type that contains the metadata.">메타데이터를 포함하는 연결된 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;associatedMetadataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="associatedMetadataType" /> 값이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
      <summary vsli:raw="Gets a type descriptor for the specified type and object.">지정된 형식과 개체의 형식 설명자를 가져옵니다.</summary>
      <param name="objectType" vsli:raw="The type of object to retrieve the type descriptor for.">형식 설명자를 검색할 개체의 형식입니다.</param>
      <param name="instance" vsli:raw="An instance of the type.">형식의 인스턴스입니다.</param>
      <returns vsli:raw="The descriptor that provides metadata for the type.">형식에 대한 메타데이터를 제공하는 설명자입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.AssociationAttribute">
      <summary vsli:raw="Specifies that an entity member represents a data relationship, such as a foreign key relationship.">엔터티 멤버가 외래 키 관계와 같은 데이터 관계를 나타내도록 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociationAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociationAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.AssociationAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the association.">연결의 이름입니다.</param>
      <param name="thisKey" vsli:raw="A comma-separated list of the property names of the key values on the &lt;paramref name=&quot;thisKey&quot; /&gt; side of the association.">연결의 <paramref name="thisKey" /> 쪽에 있는 키 값의 속성 이름을 표시하는 쉼표로 구분된 목록입니다.</param>
      <param name="otherKey" vsli:raw="A comma-separated list of the property names of the key values on the &lt;paramref name=&quot;otherKey&quot; /&gt; side of the association.">연결의 <paramref name="otherKey" /> 쪽에 있는 키 값의 속성 이름을 표시하는 쉼표로 구분된 목록입니다.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.IsForeignKey">
      <summary vsli:raw="Gets or sets a value that indicates whether the association member represents a foreign key.">연결 멤버가 외래 키를 나타내는지 여부를 표시하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the association represents a foreign key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결이 외래 키를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.Name">
      <summary vsli:raw="Gets the name of the association.">연결의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the association.">연결의 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey">
      <summary vsli:raw="Gets the property names of the key values on the OtherKey side of the association.">연결의 OtherKey 쪽에 있는 키 값의 속성 이름을 가져옵니다.</summary>
      <returns vsli:raw="A comma-separated list of the property names that represent the key values on the OtherKey side of the association.">연결의 OtherKey 쪽에 있는 키 값을 나타내는 속성 이름의 쉼표로 구분된 목록입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKeyMembers">
      <summary vsli:raw="Gets a collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" /> 속성에 지정된 개별 키 멤버의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" /> 속성에 지정된 개별 키 멤버의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey">
      <summary vsli:raw="Gets the property names of the key values on the ThisKey side of the association.">연결의 ThisKey 쪽에 있는 키 값의 속성 이름을 가져옵니다.</summary>
      <returns vsli:raw="A comma-separated list of the property names that represent the key values on the ThisKey side of the association.">연결의 ThisKey 쪽에 있는 키 값을 나타내는 속성 이름의 쉼표로 구분된 목록입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKeyMembers">
      <summary vsli:raw="Gets a collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" /> 속성에 지정된 개별 키 멤버의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" /> 속성에 지정된 개별 키 멤버의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CompareAttribute">
      <summary vsli:raw="Provides an attribute that compares two properties.">두 속성을 비교하는 특성을 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CompareAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.CompareAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="otherProperty" vsli:raw="The property to compare with the current property.">현재 속성과 비교할 속성입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">오류가 발생한 데이터 필드를 기반으로 하여 오류 메시지에 서식을 적용합니다.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">유효성 검사 오류를 발생시킨 필드의 이름입니다.</param>
      <returns vsli:raw="The formatted error message.">형식이 지정된 오류 메시지입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether a specified object is valid.">지정된 개체가 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object to validate.">유효성을 검사할 개체입니다.</param>
      <param name="validationContext" vsli:raw="An object that contains information about the validation request.">유효성 검사 요청에 대한 정보가 들어 있는 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />가 올바르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherProperty">
      <summary vsli:raw="Gets the property to compare with the current property.">현재 속성과 비교할 속성을 가져옵니다.</summary>
      <returns vsli:raw="The other property.">다른 속성입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherPropertyDisplayName">
      <summary vsli:raw="Gets the display name of the other property.">다른 속성의 표시 이름을 가져옵니다.</summary>
      <returns vsli:raw="The display name of the other property.">기타 속성의 표시 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.RequiresValidationContext">
      <summary vsli:raw="Gets a value that indicates whether the attribute requires validation context.">특성에 유효성 검사 컨텍스트가 필요한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute requires validation context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">특성에 유효성 검사 컨텍스트가 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute">
      <summary vsli:raw="Specifies that a property participates in optimistic concurrency checks.">속성이 낙관적 동시성 검사에 참여하도록 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CreditCardAttribute">
      <summary vsli:raw="Specifies that a data field value is a credit card number.">데이터 필드 값이 신용 카드 번호라고 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CreditCardAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.CreditCardAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified credit card number is valid.">지정된 신용 카드 번호가 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The value to validate.">유효성을 검사할 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the credit card number is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">신용 카드 번호가 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute">
      <summary vsli:raw="Specifies a custom validation method that is used to validate a property or class instance.">속성 또는 클래스 인스턴스의 유효성을 검사하는 데 사용되는 사용자 지정 유효성 검사 메서드를 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CustomValidationAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="validatorType" vsli:raw="The type that contains the method that performs custom validation.">사용자 지정 유효성 검사를 수행하는 메서드를 포함하는 형식입니다.</param>
      <param name="method" vsli:raw="The method that performs custom validation.">사용자 지정 유효성 검사를 수행하는 메서드입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats a validation error message.">유효성 검사 오류 메시지의 서식을 지정합니다.</summary>
      <param name="name" vsli:raw="The name to include in the formatted message.">서식이 지정된 메시지에 포함할 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">현재 특성 형식이 잘못되었습니다.</exception>
      <returns vsli:raw="An instance of the formatted error message.">서식 지정된 오류 메시지의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method">
      <summary vsli:raw="Gets the validation method.">유효성 검사 메서드를 가져옵니다.</summary>
      <returns vsli:raw="The name of the validation method.">유효성 검사 메서드의 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType">
      <summary vsli:raw="Gets the type that performs custom validation.">사용자 지정 유효성 검사를 수행하는 형식을 가져옵니다.</summary>
      <returns vsli:raw="The type that performs custom validation.">사용자 지정 유효성 검사를 수행하는 형식입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataType">
      <summary vsli:raw="Represents an enumeration of the data types associated with data fields and parameters.">데이터 필드 및 매개 변수와 연결된 데이터 형식의 열거형을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.CreditCard">
      <summary vsli:raw="Represents a credit card number.">신용 카드 번호를 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Currency">
      <summary vsli:raw="Represents a currency value.">통화 값을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Custom">
      <summary vsli:raw="Represents a custom data type.">사용자 지정 데이터 형식을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Date">
      <summary vsli:raw="Represents a date value.">날짜 값을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.DateTime">
      <summary vsli:raw="Represents an instant in time, expressed as a date and time of day.">날짜와 시간으로 표시된 시간을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Duration">
      <summary vsli:raw="Represents a continuous time during which an object exists.">개체가 존재하고 있는 연속 시간을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.EmailAddress">
      <summary vsli:raw="Represents an email address.">이메일 주소를 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Html">
      <summary vsli:raw="Represents an HTML file.">HTML 파일을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.ImageUrl">
      <summary vsli:raw="Represents a URL to an image.">이미지의 URL을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.MultilineText">
      <summary vsli:raw="Represents multi-line text.">여러 줄 텍스트를 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Password">
      <summary vsli:raw="Represent a password value.">암호 값을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PhoneNumber">
      <summary vsli:raw="Represents a phone number value.">전화 번호 값을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PostalCode">
      <summary vsli:raw="Represents a postal code.">우편 번호를 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Text">
      <summary vsli:raw="Represents text that is displayed.">표시되는 텍스트를 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Time">
      <summary vsli:raw="Represents a time value.">시간 값을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Upload">
      <summary vsli:raw="Represents file upload data type.">파일 업로드 데이터 형식을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Url">
      <summary vsli:raw="Represents a URL value.">URL 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataTypeAttribute">
      <summary vsli:raw="Specifies the name of an additional type to associate with a data field.">데이터 필드에 연결할 추가 형식의 이름을 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataTypeAttribute&quot; /&gt; class by using the specified type name.">지정된 형식 이름을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataType" vsli:raw="The name of the type to associate with the data field.">데이터 필드와 연결할 형식의 이름입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataTypeAttribute&quot; /&gt; class by using the specified field template name.">지정된 필드 템플릿 이름을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="customDataType" vsli:raw="The name of the custom field template to associate with the data field.">데이터 필드와 연결할 사용자 지정 필드 템플릿의 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;customDataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;).">
        <paramref name="customDataType" />이 <see langword="null" /> 또는 빈 문자열("")인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName">
      <summary vsli:raw="Returns the name of the type that is associated with the data field.">데이터 필드에 연결된 형식의 이름을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">현재 특성 형식이 잘못되었습니다.</exception>
      <returns vsli:raw="The name of the type associated with the data field.">데이터 필드에 연결된 형식의 이름입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is valid.">데이터 필드 값이 유효한지 확인합니다.</summary>
      <param name="value" vsli:raw="The data field value to validate.">유효성을 검사할 데이터 필드 값입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">현재 특성 형식이 잘못되었습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">항상 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType">
      <summary vsli:raw="Gets the name of custom field template that is associated with the data field.">데이터 필드에 연결된 사용자 지정 필드 템플릿의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the custom field template that is associated with the data field.">데이터 필드에 연결된 사용자 지정 필드 템플릿의 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType">
      <summary vsli:raw="Gets the type that is associated with the data field.">데이터 필드에 연결된 형식을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataType&quot; /&gt; values.">
        <see cref="T:System.ComponentModel.DataAnnotations.DataType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat">
      <summary vsli:raw="Gets a data-field display format.">데이터 필드 표시 형식을 가져옵니다.</summary>
      <returns vsli:raw="The data-field display format.">데이터 필드 표시 형식입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayAttribute">
      <summary vsli:raw="Provides a general-purpose attribute that lets you specify localizable strings for types and members of entity partial classes.">엔터티 partial 클래스의 형식과 멤버에 대해 지역화 가능한 문자열을 지정할 수 있도록 해주는 일반 용도의 특성을 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" /> 속성의 값을 반환합니다.</summary>
      <returns vsli:raw="The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField&quot; /&gt; if the property has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">속성이 초기화되었으면 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" />의 값이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter">
      <summary vsli:raw="Returns a value that indicates whether UI should be generated automatically in order to display filtering for this field.">이 필드에 대한 필터링을 표시하기 위해 UI를 자동으로 생성할지 여부를 나타내는 값을 반환합니다.</summary>
      <returns vsli:raw="The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter&quot; /&gt; if the property has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">속성이 초기화되었으면 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter" />의 값이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> 속성의 값을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property are initialized, but a public static property that has a name that matches the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; value could not be found for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 속성 및 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> 속성이 초기화되지만 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> 속성에 대한 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 값과 일치하는 이름을 가진 공용 정적 속성을 찾을 수 없습니다.</exception>
      <returns vsli:raw="The localized description, if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />이 지정되었으며 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> 속성이 리소스 키를 나타내면 지역화된 설명이고, 그렇지 않으면 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> 속성의 지역화되지 않은 값입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> 속성의 값을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; properties were set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 속성과 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> 속성이 모두 설정되었지만 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> 값과 일치하는 이름을 가진 공용 정적 속성을 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />에서 찾을 수 없습니다.</exception>
      <returns vsli:raw="A value that will be used for grouping fields in the UI, if &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;. If the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; property represents a resource key, a localized string is returned; otherwise, a non-localized string is returned.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" />이 초기화되었으면 UI의 필드 그룹화에 사용할 값이고, 그렇지 않으면 <see langword="null" />입니다. <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 속성이 지정되었으며 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> 속성이 리소스 키를 나타내면 지역화된 문자열이 반환되고, 그렇지 않으면 지역화되지 않은 문자열이 반환됩니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName">
      <summary vsli:raw="Returns a value that is used for field display in the UI.">UI의 필드 표시에 사용되는 값을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property are initialized, but a public static property that has a name that matches the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; value could not be found for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 속성 및 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> 속성이 초기화되지만 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> 속성에 대한 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 값과 일치하는 이름을 가진 공용 정적 속성을 찾을 수 없습니다.</exception>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property, if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> 속성이 지정되었으며 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 속성이 리소스 키를 나타내면 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> 속성의 지역화된 문자열이고, 그렇지 않으면 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> 속성의 지역화되지 않은 값입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" /> 속성의 값을 반환합니다.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order&quot; /&gt; property, if it has been set; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" /> 속성이 설정되어 있으면 해당 값이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> 속성의 값을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; properties were set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 속성과 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> 속성이 모두 설정되었지만 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> 값과 일치하는 이름을 가진 공용 정적 속성을 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />에서 찾을 수 없습니다.</exception>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 속성이 지정된 경우와 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> 속성이 리소스 키를 나타내는 경우 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> 속성의 지역화된 문자열이고, 그렇지 않으면 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> 속성의 지역화되지 않은 값입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> 속성의 값을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; properties were set, &#xA;but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 속성과 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> 속성이 모두 설정되었지만 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> 값과 일치하는 이름을 가진 공용 정적 속성을 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />에서 찾을 수 없습니다.</exception>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; value property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> 속성이 지정된 경우와 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 속성이 리소스 키를 나타내는 경우 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> 속성의 지역화된 문자열이고, 그렇지 않으면 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> 속성의 지역화되지 않은 값입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField">
      <summary vsli:raw="Gets or sets a value that indicates whether UI should be generated automatically in order to display this field.">이 필드를 표시하기 위해 UI를 자동으로 생성할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to get the property value before it was set.">속성 값이 설정되기 전에 가져오기를 시도했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if UI should be generated automatically to display this field; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 필드를 표시하기 위해 UI를 자동으로 생성해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering UI is automatically displayed for this field.">이 필드에 필터링 UI를 자동으로 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to get the property value before it was set.">속성 값이 설정되기 전에 가져오기를 시도했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if UI should be generated automatically to display filtering for this field; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 필드에 대한 필터링을 표시하기 위해 UI를 자동으로 생성해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description">
      <summary vsli:raw="Gets or sets a value that is used to display a description in the UI.">UI에 설명을 표시하는 데 사용되는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value that is used to display a description in the UI.">UI에 설명을 표시하는 데 사용되는 값입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName">
      <summary vsli:raw="Gets or sets a value that is used to group fields in the UI.">UI에서 필드를 그룹화하는 데 사용되는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A value that is used to group fields in the UI.">UI에서 필드를 그룹화하는 데 사용되는 값입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name">
      <summary vsli:raw="Gets or sets a value that is used for display in the UI.">UI에 표시하는 데 사용되는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A value that is used for display in the UI.">UI에 표시하는 데 사용되는 값입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order">
      <summary vsli:raw="Gets or sets the order weight of the column.">열의 순서 가중치를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The getter of this property has been invoked but its value has not been explicitly set using the setter.">이 속성의 getter가 호출되었지만 해당 값이 setter를 사용하여 명시적으로 설정되지 않았습니다.</exception>
      <returns vsli:raw="The order weight of the column.">열의 순서 가중치입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt">
      <summary vsli:raw="Gets or sets a value that will be used to set the watermark for prompts in the UI.">UI에서 프롬프트 워터마크를 설정하는 데 사용할 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A value that will be used to display a watermark in the UI.">UI에 워터마크를 표시하는 데 사용할 값입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType">
      <summary vsli:raw="Gets or sets the type that contains the resources for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt;, and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; properties.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> 및 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> 속성에 대한 리소스를 포함하는 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The type of the resource that contains the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt;, and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; properties.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> 및 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> 속성을 포함하는 리소스의 형식입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName">
      <summary vsli:raw="Gets or sets a value that is used for the grid column label.">표 형태 창의 열 레이블에 사용되는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A value that is for the grid column label.">표 형태 창의 열 레이블에 사용되는 값입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute">
      <summary vsli:raw="Specifies the column that is displayed in the referred table as a foreign-key column.">참조되는 테이블에서 외래 키 열로 표시되는 열을 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified column.">지정된 열을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">표시 열로 사용할 열의 이름입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified display and sort columns.">지정된 표시 및 정렬 열을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">표시 열로 사용할 열의 이름입니다.</param>
      <param name="sortColumn" vsli:raw="The name of the column to use for sorting.">정렬에 사용할 열의 이름입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified display column, and the specified sort column and sort order.">지정된 표시 열과 지정된 정렬 열 및 정렬 순서를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">표시 열로 사용할 열의 이름입니다.</param>
      <param name="sortColumn" vsli:raw="The name of the column to use for sorting.">정렬에 사용할 열의 이름입니다.</param>
      <param name="sortDescending" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to sort in descending order; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">내림차순으로 정렬하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumn">
      <summary vsli:raw="Gets the name of the column to use as the display field.">표시 필드로 사용할 열의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the display column.">표시 열의 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortColumn">
      <summary vsli:raw="Gets the name of the column to use for sorting.">정렬에 사용할 열의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the sort column.">정렬 열의 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortDescending">
      <summary vsli:raw="Gets a value that indicates whether to sort in descending or ascending order.">내림차순으로 정렬할지 아니면 오름차순으로 정렬할지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column will be sorted in descending order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">열이 내림차순으로 정렬되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute">
      <summary vsli:raw="Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.">ASP.NET Dynamic Data가 데이터 필드를 표시하고 서식 지정하는 방법을 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText">
      <summary vsli:raw="Returns the UI display string for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />에 대한 UI 표시 문자열을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; properties are set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; value cannot be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> 및 <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> 속성이 모두 설정되었지만 <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> 값과 일치하는 이름을 가진 공용 정적 속성을 <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />에서 찾을 수 없습니다.</exception>
      <returns vsli:raw="&lt;para&gt;The UI display string.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; has not been specified, the value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; is returned.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; has been specified and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; represents a resource key within that resource type, the localized value is returned.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; have not been set, returns &lt;see langword=&quot;null&quot; /&gt;.&lt;/para&gt;">
        <para>UI 표시 문자열입니다.</para>
        <para>
          <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />이 지정되지 않은 경우 <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />의 값이 반환됩니다.</para>
        <para>
          <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />이 지정되고 <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />가 해당 리소스 유형 내의 리소스 키를 나타내는 경우, 지역화된 값이 반환됩니다.</para>
        <para>
          <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> 및 <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />이 설정되지 않은 경우 <see langword="null" />을 반환합니다.</para>
      </returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode">
      <summary vsli:raw="Gets or sets a value that indicates whether the formatting string that is specified by the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString&quot; /&gt; property is applied to the field value when the data field is in edit mode.">데이터 필드가 편집 모드에 있는 경우 <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> 속성에서 지정하는 서식 문자열이 필드 값에 적용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting string applies to the field value in edit mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">편집 모드에서 필드 값에 서식 문자열이 적용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull">
      <summary vsli:raw="Gets or sets a value that indicates whether empty string values (&quot;&quot;) are automatically converted to &lt;see langword=&quot;null&quot; /&gt; when the data field is updated in the data source.">데이터 소스에서 데이터 필드가 업데이트되는 경우 빈 문자열 값("")이 자동으로 <see langword="null" />로 변환되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if empty string values are automatically converted to &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">빈 문자열 값이 자동으로 <see langword="true" />로 변환되면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString">
      <summary vsli:raw="Gets or sets the display format for the field value.">필드 값의 표시 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A formatting string that specifies the display format for the value of the data field. The default is an empty string (&quot;&quot;), which indicates that no special formatting is applied to the field value.">데이터 필드 값의 표시 형식을 지정하는 서식 문자열입니다. 기본값은 빈 문자열("")로, 필드 값에 특정 형식이 적용되지 않음을 나타냅니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode">
      <summary vsli:raw="Gets or sets a value that indicates whether the field should be HTML-encoded.">필드가 HTML 인코딩되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the field should be HTML-encoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">필드가 HTML 인코딩되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText">
      <summary vsli:raw="Gets or sets the text that is displayed for a field when the field's value is &lt;see langword=&quot;null&quot; /&gt;.">필드 값이 <see langword="null" />인 경우 해당 필드에 대해 표시되는 텍스트를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The text that is displayed for a field when the field's value is &lt;see langword=&quot;null&quot; /&gt;. The default is an empty string (&quot;&quot;), which indicates that this property is not set.">필드 값이 <see langword="null" />인 경우 해당 필드에 대해 표시되는 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the resources for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;.&#xA;        &#xA;Using &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; along with &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;, allows the &lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText&quot; /&gt; method to return localized values.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />에 대한 리소스가 포함된 <see cref="T:System.Type" />을 가져오거나 설정합니다.
        
<see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />을 <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />와 함께 사용하면 <see cref="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText" /> 메서드가 지역화된 값을 반환할 수 있습니다.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EditableAttribute">
      <summary vsli:raw="Indicates whether a data field is editable.">데이터 필드를 편집할 수 있는지 여부를 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EditableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EditableAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="allowEdit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that field is editable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">필드를 편집할 수 있도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit">
      <summary vsli:raw="Gets a value that indicates whether a field is editable.">필드를 편집할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the field is editable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">필드를 편집할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowInitialValue">
      <summary vsli:raw="Gets or sets a value that indicates whether an initial value is enabled.">초기 값의 사용 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an initial value is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 초기 값을 사용할 수 있으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute">
      <summary vsli:raw="Validates an email address.">전자 메일 주소의 유효성을 검사합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EmailAddressAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified value matches the pattern of a valid email address.">지정된 값이 유효한 전자 메일 주소의 패턴과 일치하는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The value to validate.">유효성을 검사할 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is valid or &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 값이 유효하거나 <see langword="true" />이면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute">
      <summary vsli:raw="Enables a .NET enumeration to be mapped to a data column.">.NET Framework 열거형을 데이터 열에 매핑할 수 있도록 합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="enumType" vsli:raw="The type of the enumeration.">열거형의 유형입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is valid.">데이터 필드 값이 유효한지 확인합니다.</summary>
      <param name="value" vsli:raw="The data field value to validate.">유효성을 검사할 데이터 필드 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data field value is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">데이터 필드 값이 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.EnumType">
      <summary vsli:raw="Gets or sets the enumeration type.">열거형 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The enumeration type.">열거형입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute">
      <summary vsli:raw="Validates file name extensions.">파일 이름 파일 확장명의 유효성을 검사합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">오류가 발생한 데이터 필드를 기반으로 하여 오류 메시지에 서식을 적용합니다.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">유효성 검사 오류를 발생시킨 필드의 이름입니다.</param>
      <returns vsli:raw="The formatted error message.">형식이 지정된 오류 메시지입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the specified file name extension or extensions is valid.">지정된 파일 이름 확장명이 올바른지 확인합니다.</summary>
      <param name="value" vsli:raw="A comma delimited list of valid file extensions.">올바른 파일 확장명의 쉼표로 구분된 목록입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the file name extension is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">파일 이름 확장이 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.Extensions">
      <summary vsli:raw="Gets or sets the file name extensions.">파일 이름 확장명을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The file name extensions, or the default file extensions (&quot;.png&quot;, &quot;.jpg&quot;, &quot;.jpeg&quot;, and &quot;.gif&quot;) if the property is not set.">파일 확장명이며, 속성이 설정되어 있지 않은 경우 기본 파일 확장명(".png", ".jpg", ".jpeg", and ".gif")입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute">
      <summary vsli:raw="Represents an attribute that is used to specify the filtering behavior for a column.">열의 필터링 동작을 지정하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint.">필터 UI 힌트를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">필터링에 사용할 컨트롤의 이름입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint and presentation layer name.">필터 UI 힌트 및 프레젠테이션 레이어 이름을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">필터링에 사용할 컨트롤의 이름입니다.</param>
      <param name="presentationLayer" vsli:raw="The name of the presentation layer that supports this control.">이 컨트롤을 지원하는 표시 계층의 이름입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint, presentation layer name, and control parameters.">필터 UI 힌트, 프레젠테이션 레이어 이름 및 컨트롤 매개 변수를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">필터링에 사용할 컨트롤의 이름입니다.</param>
      <param name="presentationLayer" vsli:raw="The name of the presentation layer that supports this control.">이 컨트롤을 지원하는 표시 계층의 이름입니다.</param>
      <param name="controlParameters" vsli:raw="The list of parameters for the control.">컨트롤의 매개 변수 목록입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this attribute instance is equal to a specified object.">이 특성 인스턴스가 지정된 개체와 동일한지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with this attribute instance.">이 특성 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed object is equal to this attribute instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">전달된 개체가 이 특성 인스턴스와 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this attribute instance.">이 특성 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="This attribute instance hash code.">이 특성 인스턴스 해시 코드.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters">
      <summary vsli:raw="Gets the name/value pairs that are used as parameters in the control's constructor.">컨트롤의 생성자에 매개 변수로 사용되는 이름/값 쌍을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">현재 특성 형식이 잘못되었습니다.</exception>
      <returns vsli:raw="The name/value pairs that are used as parameters in the control's constructor.">컨트롤의 생성자에 매개 변수로 사용되는 이름/값 쌍입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint">
      <summary vsli:raw="Gets the name of the control to use for filtering.">필터링에 사용할 컨트롤의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the control to use for filtering.">필터링에 사용할 컨트롤의 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer">
      <summary vsli:raw="Gets the name of the presentation layer that supports this control.">이 컨트롤을 지원하는 프레젠테이션 레이어의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the presentation layer that supports this control.">이 컨트롤을 지원하는 표시 계층의 이름입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.IValidatableObject">
      <summary vsli:raw="Provides a way for an object to be validated.">개체의 유효성을 검사할 수 있는 방법을 제공 합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether the specified object is valid.">지정된 개체가 올바른지 여부를 확인합니다.</summary>
      <param name="validationContext" vsli:raw="The validation context.">유효성 검사 컨텍스트입니다.</param>
      <returns vsli:raw="A collection that holds failed-validation information.">실패한 유효성 검사 정보를 보관하는 컬렉션입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.KeyAttribute">
      <summary vsli:raw="Denotes one or more properties that uniquely identify an entity.">엔터티를 고유하게 식별하는 속성을 하나 이상 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.KeyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.KeyAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute">
      <summary vsli:raw="Specifies the maximum length of array or string data allowed in a property.">속성에서 허용되는 배열 또는 문자열 데이터의 최대 길이를 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MaxLengthAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MaxLengthAttribute&quot; /&gt; class based on the &lt;paramref name=&quot;length&quot; /&gt; parameter.">
        <paramref name="length" /> 매개 변수를 기반으로 <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="length" vsli:raw="The maximum allowable length of array or string data.">배열 또는 문자열 데이터의 허용 가능한 최대 길이입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">지정된 오류 메시지에 서식을 적용합니다.</summary>
      <param name="name" vsli:raw="The name to include in the formatted string.">서식이 지정된 문자열에 포함할 이름입니다.</param>
      <returns vsli:raw="A localized string to describe the maximum acceptable length.">허용 가능한 최대 길이를 설명하는 지역화된 문자열입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">지정된 개체가 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object to validate.">유효성을 검사할 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Length is zero or less than negative one.">길이가 0이거나 -1보다 작은 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is null, or if the value is less than or equal to the specified maximum length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">값이 null이거나 지정된 최대 길이보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MaxLengthAttribute.Length">
      <summary vsli:raw="Gets the maximum allowable length of the array or string data.">배열 또는 문자열 데이터의 허용 가능한 최대 길이를 가져옵니다.</summary>
      <returns vsli:raw="The maximum allowable length of the array or string data.">배열 또는 문자열 데이터의 허용 가능한 최대 길이입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute">
      <summary vsli:raw="Specifies the metadata class to associate with a data model class.">데이터 모델 클래스와 연결할 메타데이터 클래스를 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadataClassType" vsli:raw="The metadata class to reference.">참조할 메타데이터 클래스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;metadataClassType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="metadataClassType" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.MetadataClassType">
      <summary vsli:raw="Gets the metadata class that is associated with a data-model partial class.">데이터 모델 partial 클래스와 연결된 메타데이터 클래스를 가져옵니다.</summary>
      <returns vsli:raw="The type value that represents the metadata class.">메타데이터 클래스를 나타내는 형식 값입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MinLengthAttribute">
      <summary vsli:raw="Specifies the minimum length of array or string data allowed in a property.">속성에서 허용되는 배열 또는 문자열 데이터의 최소 길이를 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MinLengthAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.MinLengthAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="length" vsli:raw="The length of the array or string data.">배열 또는 문자열 데이터의 길이입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">지정된 오류 메시지에 서식을 적용합니다.</summary>
      <param name="name" vsli:raw="The name to include in the formatted string.">서식이 지정된 문자열에 포함할 이름입니다.</param>
      <returns vsli:raw="A localized string to describe the minimum acceptable length.">허용 가능한 최소 길이를 설명하는 지역화된 문자열입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">지정된 개체가 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object to validate.">유효성을 검사할 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Length is less than zero.">길이가 0보다 작습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 개체가 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MinLengthAttribute.Length">
      <summary vsli:raw="Gets or sets the minimum allowable length of the array or string data.">배열 또는 문자열 데이터의 허용 가능한 최소 길이를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The minimum allowable length of the array or string data.">배열 또는 문자열 데이터의 허용 가능한 최소 길이입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.PhoneAttribute">
      <summary vsli:raw="Specifies that a data field value is a well-formed phone number.">데이터 필드 값을 잘 구성된 전화 번호로 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.PhoneAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.PhoneAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified phone number is in a valid phone number format.">지정된 전화 번호가 유효한 전화 번호 형식으로 되어 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The value to validate.">유효성을 검사할 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the phone number is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">전화 번호가 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RangeAttribute">
      <summary vsli:raw="Specifies the numeric range constraints for the value of a data field.">데이터 필드 값에 대한 숫자 범위 제약 조건을 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values.">지정된 최소값 및 최대값을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">데이터 필드 값에 대해 허용되는 최소값을 지정합니다.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">데이터 필드 값에 대해 허용되는 최대값을 지정합니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values.">지정된 최소값 및 최대값을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">데이터 필드 값에 대해 허용되는 최소값을 지정합니다.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">데이터 필드 값에 대해 허용되는 최대값을 지정합니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values and the specific type.">지정된 최소값 및 최대값과 특정 형식을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="Specifies the type of the object to test.">테스트할 개체 형식을 지정합니다.</param>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">데이터 필드 값에 대해 허용되는 최소값을 지정합니다.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">데이터 필드 값에 대해 허용되는 최대값을 지정합니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats the error message that is displayed when range validation fails.">범위 유효성 검사에 실패할 때 표시되는 오류 메시지의 형식을 지정합니다.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">유효성 검사 오류를 발생시킨 필드의 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">현재 특성 형식이 잘못되었습니다.</exception>
      <returns vsli:raw="The formatted error message.">형식이 지정된 오류 메시지입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is in the specified range.">데이터 필드의 값이 지정된 범위에 있는지 확인합니다.</summary>
      <param name="value" vsli:raw="The data field value to validate.">유효성을 검사할 데이터 필드 값입니다.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value was outside the allowed range.">데이터 필드 값이 허용된 범위 밖에 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">현재 특성 형식이 잘못되었습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is in the range; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 값이 범위에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ConvertValueInInvariantCulture">
      <summary vsli:raw="Gets or sets a value that determines whether any conversions of the value being validated to &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType&quot; /&gt; as set by the &lt;c&gt;type&lt;/c&gt; parameter of the &lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)&quot; /&gt; constructor use the invariant culture or the current culture.">
        <see cref="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)" /> 생성자의 <c>형식</c> 매개 변수에 의해 설정된 대로 <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType" />에 대해 유효성 검사 중인 값의 변환이 고정 문화권 또는 현재 문화권을 사용하는지 여부를 확인하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the invariant culture for any conversions; &lt;see langword=&quot;false&quot; /&gt; to use the culture that is current at the time of the validation.">
        <see langword="true" /> 모든 변환에 고정 문화권을 사용 하려면 <see langword="false" /> 유효성 검사 시 현재 문화권을 사용 하려면입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum">
      <summary vsli:raw="Gets the maximum allowed field value.">허용되는 최대 필드 값을 가져옵니다.</summary>
      <returns vsli:raw="The maximum value that is allowed for the data field.">데이터 필드에 대해 허용되는 최대값입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum">
      <summary vsli:raw="Gets the minimum allowed field value.">허용되는 최소 필드 값을 가져옵니다.</summary>
      <returns vsli:raw="The minimum value that is allowed for the data field.">데이터 필드에 허용 되는 최소값입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType">
      <summary vsli:raw="Gets the type of the data field whose value must be validated.">유효성을 검사해야 할 값이 포함된 데이터 필드의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The type of the data field whose value must be validated.">유효성을 검사해야 할 값이 포함된 데이터 필드의 형식입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ParseLimitsInInvariantCulture">
      <summary vsli:raw="Gets or sets a value that determines whether string values for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum&quot; /&gt; are parsed using the invariant culture rather than the current culture.">
        <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum" /> 및 <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum" />에 대한 문자열 값을 현재 문화권이 아닌 고정 문화권을 사용하여 구문 분석되는지 여부를 확인하는 값을 가져오거나 설정합니다.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
      <summary vsli:raw="Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.">ASP.NET Dynamic Data에 있는 데이터 필드 값이 지정된 정규식과 일치해야 한다고 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pattern" vsli:raw="The regular expression that is used to validate the data field value.">데이터 필드 값의 유효성을 검사하는 데 사용되는 정규식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats the error message to display if the regular expression validation fails.">정규식 유효성 검사에 실패할 경우 표시할 오류 메시지의 형식을 지정합니다.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">유효성 검사 오류를 발생시킨 필드의 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">현재 특성 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern&quot; /&gt; is not a valid regular expression.">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />은 올바른 정규식이 아닙니다.</exception>
      <returns vsli:raw="The formatted error message.">형식이 지정된 오류 메시지입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks whether the value entered by the user matches the regular expression pattern.">사용자가 입력한 값이 정규식 패턴과 일치하는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The data field value to validate.">유효성을 검사할 데이터 필드 값입니다.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value did not match the regular expression pattern.">데이터 필드 값이 정규식 패턴과 일치하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">현재 특성 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern&quot; /&gt; is not a valid regular expression.">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />은 올바른 정규식이 아닙니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if validation is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">유효성 검사가 성공하는 경우 <see langword="true" />, 아닌 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
      <summary vsli:raw="Gets or sets the amount of time in milliseconds to execute a single matching operation before the operation times out.">작업의 제한 시간이 초과되기 전에 단일 일치 작업을 실행하는 총 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The amount of time in milliseconds to execute a single matching operation.">단일 일치 작업을 실행 하는 데 걸린 시간 (밀리초)입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
      <summary vsli:raw="Gets the regular expression pattern.">정규식 패턴을 가져옵니다.</summary>
      <returns vsli:raw="The pattern to match.">일치시킬 패턴입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RequiredAttribute">
      <summary vsli:raw="Specifies that a data field value is required.">데이터 필드 값이 필요하다는 것을 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RequiredAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the required data field is not empty.">필수 데이터 필드의 값이 비어 있지 않은지 확인합니다.</summary>
      <param name="value" vsli:raw="The data field value to validate.">유효성을 검사할 데이터 필드 값입니다.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value was &lt;see langword=&quot;null&quot; /&gt;.">데이터 필드 값이 <see langword="null" />인 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if validation is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">유효성 검사가 성공하는 경우 <see langword="true" />, 아닌 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings">
      <summary vsli:raw="Gets or sets a value that indicates whether an empty string is allowed.">빈 문자열이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an empty string is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">빈 문자열이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute">
      <summary vsli:raw="Specifies whether a class or data column uses scaffolding.">클래스 또는 데이터 열이 스캐폴딩을 사용하는지 여부를 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute&quot; /&gt; using the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold&quot; /&gt; property.">
        <see cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" /> 속성을 사용하여 <see cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="scaffold" vsli:raw="The value that specifies whether scaffolding is enabled.">스캐폴딩이 사용되는지 여부를 지정하는 값입니다.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold">
      <summary vsli:raw="Gets or sets the value that specifies whether scaffolding is enabled.">스캐폴딩이 사용되는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if scaffolding is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">스캐폴딩이 활성화되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute">
      <summary vsli:raw="Represents the database column that a property is mapped to.">속성이 매핑되는 데이터베이스 열을 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the column the property is mapped to.">속성이 매핑되는 열의 이름입니다.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Name">
      <summary vsli:raw="Gets the name of the column the property is mapped to.">속성이 매핑되는 열의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the column the property is mapped to.">속성이 매핑되는 열의 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Order">
      <summary vsli:raw="Gets or sets the zero-based order of the column the property is mapped to.">속성이 매핑되는 열의 순서 값(0부터 시작)을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The order of the column.">열의 순서 값입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.TypeName">
      <summary vsli:raw="Gets or sets the database provider specific data type of the column the property is mapped to.">속성이 매핑되는 열의 데이터베이스 공급자별 데이터 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The database provider specific data type of the column the property is mapped to.">속성이 매핑되는 열의 데이터베이스 공급자별 데이터 형식입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute">
      <summary vsli:raw="Denotes that the class is a complex type. Complex types are non-scalar properties of entity types that enable scalar properties to be organized within entities. Complex types do not have keys and cannot be managed by the Entity Framework apart from the parent object.">클래스가 복합 형식임을 나타냅니다. 복합 형식은 스칼라 속성이 엔터티 내에 구성되도록 하는 엔터티 형식의 비스칼라 속성입니다. 복합 형식은 키가 없으며 Entity Framework에서 부모 개체와 별개로 관리될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute">
      <summary vsli:raw="Specifies how the database generates values for a property.">데이터베이스에서 속성 값을 생성하는 방법을 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="databaseGeneratedOption" vsli:raw="The database generated option.">데이터베이스에서 옵션을 생성합니다.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.DatabaseGeneratedOption">
      <summary vsli:raw="Gets or sets the pattern used to generate values for the property in the database.">데이터베이스에서 속성 값을 생성하는 데 사용되는 패턴을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The database generated option.">데이터베이스에서 옵션을 생성합니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption">
      <summary vsli:raw="Represents the pattern used to generate values for a property in the database.">데이터베이스에서 속성 값을 생성하는 데 사용되는 패턴을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed">
      <summary vsli:raw="The database generates a value when a row is inserted or updated.">데이터베이스에서 행이 삽입되거나 업데이트될 때 값을 생성합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity">
      <summary vsli:raw="The database generates a value when a row is inserted.">데이터베이스에서 행이 삽입될 때 값을 생성합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None">
      <summary vsli:raw="The database does not generate values.">데이터베이스에서 값을 생성하지 않습니다.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute">
      <summary vsli:raw="Denotes a property used as a foreign key in a relationship.">관계의 외래 키로 사용되는 속성을 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the associated navigation property, or the name of one or more associated foreign keys.">연결된 탐색 속성 또는 둘 이상의 연결된 외래 키 속성의 이름입니다.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.Name">
      <summary vsli:raw="Gets the name of the associated navigation property or of the associated foreign keys.">연결된 탐색 속성 또는 연결된 외래 키 속성의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the associated navigation property or of the associated foreign keys.">연결 된 탐색 속성 또는 연결 된 외래 키의 이름입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute">
      <summary vsli:raw="Specifies the inverse of a navigation property that represents the other end of the same relationship.">동일한 관계의 다른 쪽 End를 나타내는 탐색 속성의 역을 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&quot; /&gt; class using the specified property.">지정된 속성을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="property" vsli:raw="The navigation property representing the other end of the same relationship.">동일한 관계의 다른 쪽 End를 나타내는 탐색 속성입니다.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.Property">
      <summary vsli:raw="Gets the navigation property representing the other end of the same relationship.">동일한 관계의 다른 쪽 End를 나타내는 탐색 속성을 가져옵니다.</summary>
      <returns vsli:raw="The property of the attribute.">특성의 속성입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute">
      <summary vsli:raw="Denotes that a property or class should be excluded from database mapping.">속성이나 클래스가 데이터베이스 매핑에서 제외되어야 함을 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute">
      <summary vsli:raw="Specifies the database table that a class is mapped to.">클래스가 매핑되는 데이터베이스 테이블을 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.TableAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.TableAttribute&quot; /&gt; class using the specified name of the table.">지정된 테이블 이름을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of the table the class is mapped to.">클래스가 매핑되는 테이블의 이름입니다.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Name">
      <summary vsli:raw="Gets the name of the table the class is mapped to.">클래스가 매핑되는 테이블의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the table the class is mapped to.">클래스가 매핑되는 테이블의 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Schema">
      <summary vsli:raw="Gets or sets the schema of the table the class is mapped to.">클래스가 매핑되는 테이블의 스키마를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The schema of the table the class is mapped to.">클래스가 매핑되는 테이블의 스키마입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.StringLengthAttribute">
      <summary vsli:raw="Specifies the minimum and maximum length of characters that are allowed in a data field.">데이터 필드에 허용되는 최소 및 최대 문자 길이를 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.StringLengthAttribute&quot; /&gt; class by using a specified maximum length.">지정된 최대 길이를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="maximumLength" vsli:raw="The maximum length of a string.">문자열의 최대 길이입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">지정된 오류 메시지에 서식을 적용합니다.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">유효성 검사 오류를 발생시킨 필드의 이름입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maximumLength&quot; /&gt; is negative.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maximumLength&quot; /&gt; is less than &lt;paramref name=&quot;minimumLength&quot; /&gt;.">
        <paramref name="maximumLength" />가 음수입니다.  
  
또는 
 <paramref name="maximumLength" />가 <paramref name="minimumLength" />보다 작은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">현재 특성 형식이 잘못되었습니다.</exception>
      <returns vsli:raw="The formatted error message.">형식이 지정된 오류 메시지입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">지정된 개체가 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The object to validate.">유효성을 검사할 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maximumLength&quot; /&gt; is negative.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maximumLength&quot; /&gt; is less than &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength&quot; /&gt;.">
        <paramref name="maximumLength" />가 음수입니다.  
  
또는 
 <paramref name="maximumLength" />가 <see cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength" />보다 작은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">현재 특성 형식이 잘못되었습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 개체가 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength">
      <summary vsli:raw="Gets or sets the maximum length of a string.">문자열의 최대 길이를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum length a string.">문자열의 최대 길이입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength">
      <summary vsli:raw="Gets or sets the minimum length of a string.">문자열의 최소 길이를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The minimum length of a string.">문자열의 최소 길이입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.TimestampAttribute">
      <summary vsli:raw="Specifies the data type of the column as a row version.">열의 데이터 형식을 행 버전으로 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.TimestampAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.TimestampAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.TimestampAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
      <summary vsli:raw="Specifies the template or user control that Dynamic Data uses to display a data field.">동적 데이터에서 데이터 필드를 표시하기 위해 사용하는 템플릿 또는 사용자 정의 컨트롤을 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class by using a specified user control.">지정된 사용자 정의 컨트롤을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="uiHint" vsli:raw="The user control to use to display the data field.">데이터 필드를 표시하는 데 사용할 사용자 정의 컨트롤입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class using the specified user control and specified presentation layer.">지정된 사용자 컨트롤과 지정된 프레젠테이션 레이어를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="uiHint" vsli:raw="The user control (field template) to use to display the data field.">데이터 필드를 표시하는 데 사용할 사용자 정의 컨트롤(필드 템플릿)입니다.</param>
      <param name="presentationLayer" vsli:raw="The presentation layer that uses the class. Can be set to &quot;HTML&quot;, &quot;Silverlight&quot;, &quot;WPF&quot;, or &quot;WinForms&quot;.">클래스를 사용하는 프레젠테이션 계층입니다. "HTML", "Silverlight", "WPF" 또는 "WinForms"으로 설정할 수 있습니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class by using the specified user control, presentation layer, and control parameters.">지정된 사용자 컨트롤, 프레젠테이션 레이어 및 컨트롤 매개 변수를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="uiHint" vsli:raw="The user control (field template) to use to display the data field.">데이터 필드를 표시하는 데 사용할 사용자 정의 컨트롤(필드 템플릿)입니다.</param>
      <param name="presentationLayer" vsli:raw="The presentation layer that uses the class. Can be set to &quot;HTML&quot;, &quot;Silverlight&quot;, &quot;WPF&quot;, or &quot;WinForms&quot;.">클래스를 사용하는 프레젠테이션 계층입니다. "HTML", "Silverlight", "WPF" 또는 "WinForms"으로 설정할 수 있습니다.</param>
      <param name="controlParameters" vsli:raw="The object to use to retrieve values from any data sources.">데이터 소스의 값을 검색하는 데 사용할 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or it is a constraint key.  &#xA;  &#xA; -or-  &#xA;  &#xA; The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters&quot; /&gt; is not a string.">
        <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" />가 <see langword="null" />이거나 제약 조건 키인 경우  
  
또는 
<see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" />의 값은 문자열이 아닙니다.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether this instance is equal to the specified object.">이 인스턴스가 지정된 개체와 같은지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance, or a &lt;see langword=&quot;null&quot; /&gt; reference.">이 인스턴스와 비교할 개체이거나 <see langword="null" /> 참조입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 개체가 이 인스턴스와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current instance of the attribute.">특성의 현재 인스턴스에 대한 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="The attribute instance hash code.">특성 인스턴스의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Web.DynamicData.DynamicControlParameter&quot; /&gt; object to use to retrieve values from any data source.">데이터 소스의 값을 검색하는 데 사용할 <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> 개체를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">현재 특성 형식이 잘못되었습니다.</exception>
      <returns vsli:raw="A collection of key/value pairs.">키/값 쌍의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
      <summary vsli:raw="Gets or sets the presentation layer that uses the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> 클래스를 사용하는 프레젠테이션 계층을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The presentation layer that is used by this class.">이 클래스에서 사용하는 프레젠테이션 레이어입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
      <summary vsli:raw="Gets or sets the name of the field template to use to display the data field.">데이터 필드를 표시하는 데 사용할 필드 템플릿의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the field template that displays the data field.">데이터 필드를 표시하는 필드 템플릿의 이름입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UrlAttribute">
      <summary vsli:raw="Provides URL validation.">URL 유효성 검사를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UrlAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.UrlAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.IsValid(System.Object)">
      <summary vsli:raw="Validates the format of the specified URL.">지정된 URL 형식의 유효성을 검사합니다.</summary>
      <param name="value" vsli:raw="The URL to validate.">유효성을 검사할 URL입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the URL format is valid or &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">URL 형식이 유효하거나 <see langword="true" />이면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationAttribute">
      <summary vsli:raw="Serves as the base class for all validation attributes.">모든 유효성 검사 특성의 기본 클래스로 사용됩니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.Func{System.String})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class by using the function that enables access to validation resources.">유효성 검사 리소스에 액세스할 수 있도록 하는 함수를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="errorMessageAccessor" vsli:raw="The function that enables access to validation resources.">유효성 검사 리소스에 액세스할 수 있도록 하는 함수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;errorMessageAccessor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="errorMessageAccessor" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class by using the error message to associate with a validation control.">유효성 검사 컨트롤과 연결할 오류 메시지를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="errorMessage" vsli:raw="The error message to associate with a validation control.">유효성 검사 컨트롤과 연결할 오류 메시지입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">오류가 발생한 데이터 필드를 기반으로 하여 오류 메시지에 서식을 적용합니다.</summary>
      <param name="name" vsli:raw="The name to include in the formatted message.">서식이 지정된 메시지에 포함할 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">현재 특성 형식이 잘못되었습니다.</exception>
      <returns vsli:raw="An instance of the formatted error message.">서식 지정된 오류 메시지의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Checks whether the specified value is valid with respect to the current validation attribute.">현재 유효성 검사 특성에 따라 지정된 값이 유효한지 확인합니다.</summary>
      <param name="value" vsli:raw="The value to validate.">유효성을 검사할 값입니다.</param>
      <param name="validationContext" vsli:raw="The context information about the validation operation.">유효성 검사 작업에 대한 컨텍스트 정보입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">현재 특성 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validationContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationContext" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" />는 파생 클래스에서 구현되지 않았습니다.</exception>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> 클래스의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified value of the object is valid.">개체의 지정된 값이 유효한지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The value of the object to validate.">유효성을 검사할 개체의 값입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">현재 특성 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="Neither overload of &lt;see langword=&quot;IsValid&quot; /&gt; has been implemented by a derived class.">
        <see langword="IsValid" />의 오버로드 중 어느 것도 파생 클래스에 의해 구현되지 않았습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 값이 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the specified value with respect to the current validation attribute.">현재 유효성 검사 특성에 따라 지정된 값이 유효한지 검사합니다.</summary>
      <param name="value" vsli:raw="The value to validate.">유효성을 검사할 값입니다.</param>
      <param name="validationContext" vsli:raw="The context information about the validation operation.">유효성 검사 작업에 대한 컨텍스트 정보입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">현재 특성 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" />는 파생 클래스에서 구현되지 않았습니다.</exception>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> 클래스의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the specified object.">지정된 개체의 유효성을 검사합니다.</summary>
      <param name="value" vsli:raw="The object to validate.">유효성을 검사할 개체입니다.</param>
      <param name="validationContext" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; object that describes the context where the validation checks are performed. This parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">유효성 검사가 수행되는 컨텍스트를 설명하는 <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> 개체입니다. 이 매개 변수는 <see langword="null" />일 수 없습니다.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="Validation failed.">유효성 검사에 실패했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">현재 특성 형식이 잘못되었습니다.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" />는 파생 클래스에서 구현되지 않았습니다.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)">
      <summary vsli:raw="Validates the specified object.">지정된 개체의 유효성을 검사합니다.</summary>
      <param name="value" vsli:raw="The value of the object to validate.">유효성을 검사할 개체의 값입니다.</param>
      <param name="name" vsli:raw="The name to include in the error message.">오류 메시지에 포함할 이름입니다.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not valid.">
        <paramref name="value" />가 잘못된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">현재 특성 형식이 잘못되었습니다.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage">
      <summary vsli:raw="Gets or sets an error message to associate with a validation control if validation fails.">유효성 검사에 실패하는 경우 유효성 검사 컨트롤과 연결할 오류 메시지를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The error message that is associated with the validation control.">유효성 검사 컨트롤과 연결된 오류 메시지입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName">
      <summary vsli:raw="Gets or sets the error message resource name to use in order to look up the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType&quot; /&gt; property value if validation fails.">유효성 검사에 실패할 경우 <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType" /> 속성 값을 조회하는 데 사용할 오류 메시지 리소스 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The error message resource that is associated with a validation control.">유효성 검사 컨트롤과 연결된 오류 메시지 리소스입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType">
      <summary vsli:raw="Gets or sets the resource type to use for error-message lookup if validation fails.">유효성 검사에 실패할 경우 오류 메시지 조회에 사용할 리소스 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The type of error message that is associated with a validation control.">유효성 검사 컨트롤과 연결된 오류 메시지의 형식입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString">
      <summary vsli:raw="Gets the localized validation error message.">지역화된 유효성 검사 오류 메시지를 가져옵니다.</summary>
      <returns vsli:raw="The localized validation error message.">지역화된 유효성 검사 오류 메시지입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext">
      <summary vsli:raw="Gets a value that indicates whether the attribute requires validation context.">특성에 유효성 검사 컨텍스트가 필요한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute requires validation context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">특성에 유효성 검사 컨텍스트가 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationContext">
      <summary vsli:raw="Describes the context in which a validation check is performed.">유효성 검사가 수행되는 컨텍스트를 설명합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the specified object instance.">지정된 개체 인스턴스를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="instance" vsli:raw="The object instance to validate. It cannot be &lt;see langword=&quot;null&quot; /&gt;.">유효성을 검사할 개체 인스턴스입니다. <see langword="null" />일 수 없습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the specified object and an optional property bag.">지정된 개체와 선택적인 속성 모음을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="instance" vsli:raw="The object instance to validate.  It cannot be &lt;see langword=&quot;null&quot; /&gt;.">유효성을 검사할 개체 인스턴스입니다.  <see langword="null" />일 수 없습니다.</param>
      <param name="items" vsli:raw="An optional set of key/value pairs to make available to consumers.">소비자가 사용할 수 있도록 할 선택적 키/값 쌍의 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the service provider and dictionary of service consumers.">서비스 공급자와 서비스 사용자의 사전을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="instance" vsli:raw="The object to validate. This parameter is required.">유효성을 검사할 개체입니다. 이 매개 변수는 필수적 요소입니다.</param>
      <param name="serviceProvider" vsli:raw="The object that implements the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface. This parameter is optional.">
        <see cref="T:System.IServiceProvider" /> 인터페이스를 구현하는 개체입니다. 이 매개 변수는 선택 사항입니다.</param>
      <param name="items" vsli:raw="A dictionary of key/value pairs to make available to the service consumers. This parameter is optional.">서비스 소비자가 사용할 수 있게 만들려는 키/값 쌍의 사전입니다. 이 매개 변수는 선택 사항입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)">
      <summary vsli:raw="Returns the service that provides custom validation.">사용자 지정 유효성 검사를 제공하는 서비스를 반환합니다.</summary>
      <param name="serviceType" vsli:raw="The type of the service to use for validation.">유효성 검사에 사용할 서비스의 형식입니다.</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service is not available.">서비스의 인스턴스이거나, 서비스를 사용할 수 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; using a service provider that can return service instances by type when &lt;see cref=&quot;M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)&quot; /&gt; is called.">
        <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" />가 호출될 때 유형별 서비스 인스턴스를 반환할 수 있는 서비스 공급자를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" />를 초기화합니다.</summary>
      <param name="serviceProvider" vsli:raw="The service provider.">서비스 공급자입니다.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.DisplayName">
      <summary vsli:raw="Gets or sets the name of the member to validate.">유효성을 검사할 멤버의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the member to validate.">유효성을 검사할 멤버의 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.Items">
      <summary vsli:raw="Gets the dictionary of key/value pairs that is associated with this context.">이 컨텍스트와 연결된 키/값 쌍의 사전을 가져옵니다.</summary>
      <returns vsli:raw="The dictionary of the key/value pairs for this context.">이 컨텍스트에 대한 키/값 쌍의 사전입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName">
      <summary vsli:raw="Gets or sets the name of the member to validate.">유효성을 검사할 멤버의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the member to validate.">유효성을 검사할 멤버의 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance">
      <summary vsli:raw="Gets the object to validate.">유효성을 검사할 개체를 가져옵니다.</summary>
      <returns vsli:raw="The object to validate.">유효성을 검사할 개체입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectType">
      <summary vsli:raw="Gets the type of the object to validate.">유효성을 검사할 개체의 형식을 가져옵니다.</summary>
      <returns vsli:raw="The type of the object to validate.">유효성을 검사할 개체의 형식입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationException">
      <summary vsli:raw="Represents the exception that occurs during validation of a data field when the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class is used.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> 클래스가 사용될 때 데이터 필드의 유효성을 검사하는 동안 발생하는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using an error message generated by the system.">시스템에서 생성된 오류 메시지를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class by using a validation result, a validation attribute, and the value of the current exception.">유효성 검사 결과, 유효성 검사 특성 및 현재 예외의 값을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="validationResult" vsli:raw="The list of validation results.">유효성 검사 결과 목록입니다.</param>
      <param name="validatingAttribute" vsli:raw="The attribute that caused the current exception.">현재 예외를 발생시킨 특성입니다.</param>
      <param name="value" vsli:raw="The value of the object that caused the attribute to trigger the validation error.">특성이 유효성 검사 오류를 트리거하도록 만든 개체의 값입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using serialized data.">serialize된 데이터를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">직렬화된 데이터를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="Context information about the source or destination of the serialized object.">serialize된 개체의 소스 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message.">지정된 오류 메시지를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A specified message that states the error.">오류를 설명하는 지정된 메시지입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message, a validation attribute, and the value of the current exception.">지정된 오류 메시지, 유효성 검사 특성 및 현재 예외의 값을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="errorMessage" vsli:raw="The message that states the error.">오류를 설명하는 메시지입니다.</param>
      <param name="validatingAttribute" vsli:raw="The attribute that caused the current exception.">현재 예외를 발생시킨 특성입니다.</param>
      <param name="value" vsli:raw="The value of the object that caused the attribute to trigger validation error.">특성이 유효성 검사 오류를 트리거하도록 만든 개체의 값입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message and a collection of inner exception instances.">지정된 오류 메시지 및 내부 예외 인스턴스 컬렉션을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message.">오류 메시지입니다.</param>
      <param name="innerException" vsli:raw="The collection of validation exceptions.">유효성 검사 예외의 컬렉션입니다.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute">
      <summary vsli:raw="Gets the instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class that triggered this exception.">이 예외를 트리거한 <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> 클래스의 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="An instance of the validation attribute type that triggered this exception.">이 예외를 트리거한 유효성 검사 특성 형식의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult&quot; /&gt; instance that describes the validation error.">유효성 검사 오류를 설명하는 <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> 인스턴스를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult&quot; /&gt; instance that describes the validation error.">유효성 검사 오류를 설명하는 <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.Value">
      <summary vsli:raw="Gets the value of the object that causes the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class to trigger this exception.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> 클래스가 이 예외를 트리거하도록 만든 개체의 값을 가져옵니다.</summary>
      <returns vsli:raw="The value of the object that caused the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class to trigger the validation error.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> 클래스가 유효성 검사 오류를 트리거하도록 만든 개체의 값입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationResult">
      <summary vsli:raw="Represents a container for the results of a validation request.">유효성 검사 요청 결과의 컨테이너를 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.ValidationResult.Success">
      <summary vsli:raw="Represents the success of the validation (&lt;see langword=&quot;true&quot; /&gt; if validation was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;).">유효성 검사의 성공을 나타냅니다(유효성 검사가 성공한 경우 <see langword="true" />이고 그렇지 않은 경우 <see langword="false" />).</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using a &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> 개체를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="validationResult" vsli:raw="The validation result object.">유효성 검사 결과 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validationResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationResult" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using an error message.">오류 메시지를 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="errorMessage" vsli:raw="The error message.">오류 메시지입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using an error message and a list of members that have validation errors.">오류 메시지와 유효성 검사 오류가 있는 멤버 목록을 사용하여 <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="errorMessage" vsli:raw="The error message.">오류 메시지입니다.</param>
      <param name="memberNames" vsli:raw="The list of member names that have validation errors.">유효성 검사 오류가 있는 멤버 이름의 목록입니다.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.ToString">
      <summary vsli:raw="Returns a string representation of the current validation result.">현재 유효성 검사 결과의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="The current validation result.">현재 유효성 검사 결과입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage">
      <summary vsli:raw="Gets the error message for the validation.">유효성 검사에 대한 오류 메시지를 가져옵니다.</summary>
      <returns vsli:raw="The error message for the validation.">유효성 검사에 대한 오류 메시지입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.MemberNames">
      <summary vsli:raw="Gets the collection of member names that indicate which fields have validation errors.">유효성 검사 오류가 있는 필드를 나타내는 멤버 이름의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of member names that indicate which fields have validation errors.">유효성 검사 오류가 있는 필드를 나타내는 멤버 이름의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Validator">
      <summary vsli:raw="Defines a helper class that can be used to validate objects, properties, and methods when it is included in their associated &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; attributes.">개체, 속성 및 메서드가 연결된 <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> 특성에 포함될 때 유효성을 검사하는 데 사용할 수 있는 도우미 클래스를 정의합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context and validation results collection.">유효성 검사 컨텍스트와 유효성 검사 결과 컬렉션을 사용하여 지정된 개체가 유효한지 확인합니다.</summary>
      <param name="instance" vsli:raw="The object to validate.">유효성을 검사할 개체입니다.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">유효성을 검사할 개체를 설명하는 컨텍스트입니다.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">실패한 각 유효성 검사를 보유할 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt;on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" />가 <paramref name="validationContext" />의 <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" />와 일치하지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체가 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context, validation results collection, and a value that specifies whether to validate all properties.">유효성 검사 컨텍스트, 유효성 검사 결과 컬렉션 및 모든 속성의 유효성을 검사할지 여부를 지정하는 값을 사용하여 지정된 개체가 유효한지 확인합니다.</summary>
      <param name="instance" vsli:raw="The object to validate.">유효성을 검사할 개체입니다.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">유효성을 검사할 개체를 설명하는 컨텍스트입니다.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">실패한 각 유효성 검사를 보유할 컬렉션입니다.</param>
      <param name="validateAllProperties" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate all properties; if &lt;see langword=&quot;false&quot; /&gt;, only required attributes are validated.">모든 속성의 유효성을 검사할 경우 <see langword="true" />이고, <see langword="false" />이면 필요한 속성만 유효성을 검사합니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt;on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" />가 <paramref name="validationContext" />의 <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" />와 일치하지 않습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체가 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary vsli:raw="Validates the property.">속성의 유효성을 검사합니다.</summary>
      <param name="value" vsli:raw="The value to validate.">유효성을 검사할 값입니다.</param>
      <param name="validationContext" vsli:raw="The context that describes the property to validate.">유효성을 검사할 속성을 설명하는 컨텍스트입니다.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">실패한 각 유효성 검사를 보유할 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be assigned to the property.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />를 속성에 할당할 수 없습니다.  
  
또는 
 <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName&quot; /&gt; property of &lt;paramref name=&quot;validationContext&quot; /&gt; is not a valid property.">
        <paramref name="validationContext" />의 <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName" /> 속성은 올바른 속성이 아닙니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성이 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary vsli:raw="Returns a value that indicates whether the specified value is valid with the specified attributes.">지정된 값이 지정된 특성에 유효한지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="value" vsli:raw="The value to validate.">유효성을 검사할 값입니다.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">유효성을 검사할 개체를 설명하는 컨텍스트입니다.</param>
      <param name="validationResults" vsli:raw="A collection to hold failed validations.">실패한 유효성 검사를 보유할 컬렉션입니다.</param>
      <param name="validationAttributes" vsli:raw="The validation attributes.">유효성 검사 특성입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체가 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context.">유효성 검사 컨텍스트를 사용하여 지정된 개체가 유효한지 확인합니다.</summary>
      <param name="instance" vsli:raw="The object to validate.">유효성을 검사할 개체입니다.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">유효성을 검사할 개체를 설명하는 컨텍스트입니다.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The object is not valid.">개체가 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt; on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" />가 <paramref name="validationContext" />의 <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" />와 일치하지 않습니다.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context, and a value that specifies whether to validate all properties.">유효성 검사 컨텍스트와 모든 속성의 유효성을 검사할지 여부를 지정하는 값을 사용하여 지정된 개체가 유효한지 확인합니다.</summary>
      <param name="instance" vsli:raw="The object to validate.">유효성을 검사할 개체입니다.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">유효성을 검사할 개체를 설명하는 컨텍스트입니다.</param>
      <param name="validateAllProperties" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate all properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">모든 속성의 유효성을 검사하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is not valid.">
        <paramref name="instance" />가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt; on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" />가 <paramref name="validationContext" />의 <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" />와 일치하지 않습니다.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the property.">속성의 유효성을 검사합니다.</summary>
      <param name="value" vsli:raw="The value to validate.">유효성을 검사할 값입니다.</param>
      <param name="validationContext" vsli:raw="The context that describes the property to validate.">유효성을 검사할 속성을 설명하는 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be assigned to the property.">
        <paramref name="value" />를 속성에 할당할 수 없습니다.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is not valid.">
        <paramref name="value" /> 매개 변수가 잘못된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary vsli:raw="Validates the specified attributes.">지정된 특성의 유효성을 검사합니다.</summary>
      <param name="value" vsli:raw="The value to validate.">유효성을 검사할 값입니다.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">유효성을 검사할 개체를 설명하는 컨텍스트입니다.</param>
      <param name="validationAttributes" vsli:raw="The validation attributes.">유효성 검사 특성입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;validationContext&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationContext" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter does not validate with the &lt;paramref name=&quot;validationAttributes&quot; /&gt; parameter.">
        <paramref name="value" /> 매개 변수는 <paramref name="validationAttributes" /> 매개 변수로 유효성을 검사하지 않습니다.</exception>
    </member>
  </members>
</doc>