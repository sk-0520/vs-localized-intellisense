<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Tasks.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Tasks.Parallel">
      <summary vsli:raw="Provides support for parallel loops and regions.">병렬 루프 및 영역에 대한 지원을 제공합니다.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">반복을 병렬로 실행할 수 있고 루프 상태를 모니터링 및 조작할 수 있는 <see langword="for" /> 루프를 실행합니다.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">시작 인덱스(포함)입니다.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">끝 인덱스(제외)입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프의 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel.">반복이 병렬로 실행될 수 있는 <see langword="for" /> 루프를 실행합니다.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">시작 인덱스(포함)입니다.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">끝 인덱스(제외)입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="for" /> 작업을 루프를 실행합니다.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">시작 인덱스(포함)입니다.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">끝 인덱스(제외)입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop in which iterations may run in parallel and loop options can be configured.">반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있는 <see langword="for" /> 루프를 실행합니다.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">시작 인덱스(포함)입니다.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">끝 인덱스(제외)입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프의 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">64비트 인덱스를 사용하여 반복을 병렬로 실행할 수 있고 루프 상태를 모니터링 및 조작할 수 있는 <see langword="for" /> 루프를 실행합니다.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">시작 인덱스(포함)입니다.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">끝 인덱스(제외)입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ParallelLoopResult&quot; /&gt; structure that contains information on what portion of the loop completed.">완료된 루프의 부분에 대한 정보가 포함된 <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel.">64비트 인덱스를 사용하여 반복을 병렬로 실행할 수 있는 <see langword="for" /> 루프를 실행합니다.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">시작 인덱스(포함)입니다.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">끝 인덱스(제외)입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">64비트 인덱스를 사용하여 반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="for" /> 루프를 실행합니다.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">시작 인덱스(포함)입니다.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">끝 인덱스(제외)입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes in which iterations may run in parallel and loop options can be configured.">64비트 인덱스를 사용하여 반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있는 <see langword="for" /> 루프를 실행합니다.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">시작 인덱스(포함)입니다.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">끝 인덱스(제외)입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">스레드 로컬 데이터를 사용하여 반복을 병렬로 실행할 수 있고 루프 상태를 모니터링 및 조작할 수 있는 <see langword="for" /> 루프를 실행합니다.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">시작 인덱스(포함)입니다.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">끝 인덱스(제외)입니다.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">각 작업에 대한 로컬 데이터의 초기 상태를 반환하는 함수 대리자입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">각 작업의 로컬 상태에 대해 최종 동작을 수행하는 대리자입니다.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">스레드 로컬 데이터의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localInit" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localFinally" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프의 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">스레드 로컬 데이터를 사용하여 반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="for" /> 루프를 실행합니다.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">시작 인덱스(포함)입니다.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">끝 인덱스(제외)입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">각 작업에 대한 로컬 데이터의 초기 상태를 반환하는 함수 대리자입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">각 작업의 로컬 상태에 대해 최종 동작을 수행하는 대리자입니다.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">스레드 로컬 데이터의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localInit" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localFinally" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes and thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">64비트 인덱스와 스레드 로컬 데이터를 사용하여 반복을 병렬로 실행할 수 있고 루프 상태를 모니터링 및 조작할 수 있는 <see langword="for" /> 루프를 실행합니다.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">시작 인덱스(포함)입니다.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">끝 인덱스(제외)입니다.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">각 작업에 대한 로컬 데이터의 초기 상태를 반환하는 함수 대리자입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">각 작업의 로컬 상태에 대해 최종 동작을 수행하는 대리자입니다.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">스레드 로컬 데이터의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localInit" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localFinally" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;for&quot; /&gt; loop with 64-bit indexes and thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">64비트 인덱스와 스레드 로컬 데이터를 사용하여 반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="for" /> 루프를 실행합니다.</summary>
      <param name="fromInclusive" vsli:raw="The start index, inclusive.">시작 인덱스(포함)입니다.</param>
      <param name="toExclusive" vsli:raw="The end index, exclusive.">끝 인덱스(제외)입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each thread.">각 스레드에 대한 로컬 데이터의 초기 상태를 반환하는 함수 대리자입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each thread.">각 스레드의 로컬 상태에 대해 최종 동작을 수행하는 대리자입니다.</param>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">스레드 로컬 데이터의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localInit" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localFinally" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">반복을 병렬로 실행할 수 있고 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">원래 데이터 소스가 포함된 정렬할 수 있는 파티셔너입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized&quot; /&gt; property in the source orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Any methods in the source orderable partitioner return &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />에서 정렬할 수 있는 파티셔너의 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 속성은 <see langword="false" />를 반환합니다.  
  
또는 
소스에서 정렬할 수 있는 파티셔너의 <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> 속성은 <see langword="false" />를 반환합니다.  
  
또는 
소스 정렬 가능 파티셔너의 모든 메서드는 <see langword="null" />을 반환합니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception thrown from one of the specified delegates.">지정된 대리자 중 하나에서 throw된 예외입니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">원래 데이터 소스가 포함된 정렬할 수 있는 파티셔너입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is  &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />입니다.  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; orderable partitioner return &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />에서 정렬할 수 있는 파티셔너의 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 속성은 <see langword="false" />를 반환합니다.  
  
또는 
<paramref name="source" />에서 정렬할 수 있는 파티셔너의 <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> 속성은 <see langword="false" />를 반환합니다.  
  
또는 
<paramref name="source" /> 정렬할 수 있는 파티셔너에 있는 모든 메서드가 <see langword="null" />을 반환할 때 throw되는 예외입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">지정된 대리자 중 하나에서 throw된 예외가 포함되도록 throw되는 예외입니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">반복을 병렬로 실행할 수 있고 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.Concurrent.Partitioner" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">원래 데이터 소스가 포함된 Partitioner입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; A method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)&quot; /&gt; method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner does not return the correct number of partitions.">
        <paramref name="source" /> Partitioner의 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 속성은 <see langword="false" />를 반환합니다.  
  
또는 
<paramref name="source" /> Partitioner의 메서드는 <see langword="null" />를 반환합니다.  
  
또는 
<paramref name="source" /> Partitioner의 <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> 메서드가 올바른 파티션 수를 반환하지 않습니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">지정된 대리자 중 하나에서 throw된 예외가 포함되도록 throw되는 예외입니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel.">반복이 병렬로 실행될 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.Concurrent.Partitioner" /> 작업을 실행합니다.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">원래 데이터 소스가 포함된 Partitioner입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is  &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />입니다.  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)&quot; /&gt; method in the &lt;paramref name=&quot;source&quot; /&gt; partitioner does not return the correct number of partitions.">
        <paramref name="source" /> Partitioner의 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 속성은 <see langword="false" />를 반환합니다.  
  
또는 
<paramref name="source" /> 파티셔너에 있는 모든 메서드가 <see langword="null" />을 반환할 때 throw되는 예외입니다.  
  
또는 
<paramref name="source" /> Partitioner의 <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> 메서드가 올바른 파티션 수를 반환하지 않습니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">지정된 대리자 중 하나에서 throw된 예외가 포함되도록 throw되는 예외입니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.Concurrent.Partitioner" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">원래 데이터 소스가 포함된 Partitioner입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> Partitioner의 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 속성은 <see langword="false" />를 반환합니다.  
  
또는 
<paramref name="source" /> 파티셔너에 있는 모든 메서드가 <see langword="null" />을 반환할 때 throw되는 예외입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">지정된 대리자 중 하나에서 throw된 예외가 포함되도록 throw되는 예외입니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프의 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel and loop options can be configured.">반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.Concurrent.Partitioner" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">원래 데이터 소스가 포함된 Partitioner입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt; partitioner returns &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The exception that is thrown when any methods in the &lt;paramref name=&quot;source&quot; /&gt; partitioner return &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> Partitioner의 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 속성은 <see langword="false" />를 반환합니다.  
  
또는 
<paramref name="source" /> 파티셔너에 있는 모든 메서드가 <see langword="null" />을 반환할 때 throw되는 예외입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown to contain an exception thrown from one of the specified delegates.">지정된 대리자 중 하나에서 throw된 예외가 포함되도록 throw되는 예외입니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">64비트 인덱스를 사용하여 반복을 병렬로 실행할 수 있고 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.IEnumerable" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="An enumerable data source.">열거 가능한 데이터 소스입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">소스의 데이터 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">반복을 병렬로 실행할 수 있고 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.IEnumerable" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="An enumerable data source.">열거 가능한 데이터 소스입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">소스의 데이터 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel.">반복이 병렬로 실행될 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.IEnumerable" /> 작업을 실행합니다.</summary>
      <param name="source" vsli:raw="An enumerable data source.">열거 가능한 데이터 소스입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">소스의 데이터 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">64비트 인덱스를 사용하여 반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.IEnumerable" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="An enumerable data source.">열거 가능한 데이터 소스입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">소스의 데이터 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.IEnumerable" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="An enumerable data source.">열거 가능한 데이터 소스입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">소스의 데이터 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel and loop options can be configured.">반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.IEnumerable" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="An enumerable data source.">열거 가능한 데이터 소스입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">소스의 데이터 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">스레드 로컬 데이터를 사용하여 반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">원래 데이터 소스가 포함된 정렬할 수 있는 파티셔너입니다.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">각 작업에 대한 로컬 데이터의 초기 상태를 반환하는 함수 대리자입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">각 작업의 로컬 상태에 대해 최종 동작을 수행하는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">스레드 로컬 데이터의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localInit" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localFinally" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">
        <paramref name="source" />
        <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />의 <see cref="T:System.Collections.Concurrent.Partitioner" /> 속성은 <see langword="false" />를 반환하거나 파티셔너가 <see langword="null" /> 파티션을 반환합니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with 64-bit indexes and  with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.OrderablePartitioner`1&quot; /&gt; in which iterations may run in parallel , loop options can be configured, and the state of the loop can be monitored and manipulated.">64비트 인덱스와 스레드 로컬 데이터를 사용하여 반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="The orderable partitioner that contains the original data source.">원래 데이터 소스가 포함된 정렬할 수 있는 파티셔너입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">각 작업에 대한 로컬 데이터의 초기 상태를 반환하는 함수 대리자입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">각 작업의 로컬 상태에 대해 최종 동작을 수행하는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">스레드 로컬 데이터의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; or &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localInit" /> 또는 <paramref name="localFinally" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">
        <paramref name="source" />
        <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />의 <see cref="T:System.Collections.Concurrent.Partitioner" /> 속성은 <see langword="false" />를 반환하거나 파티셔너가 <see langword="null" /> 파티션을 반환합니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">스레드 로컬 데이터를 사용하여 반복을 병렬로 실행할 수 있고 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.Concurrent.Partitioner" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">원래 데이터 소스가 포함된 Partitioner입니다.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">각 작업에 대한 로컬 데이터의 초기 상태를 반환하는 함수 대리자입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">각 작업의 로컬 상태에 대해 최종 동작을 수행하는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">스레드 로컬 데이터의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localInit" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localFinally" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">
        <paramref name="source" />
        <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />의 <see cref="T:System.Collections.Concurrent.Partitioner" /> 속성은 <see langword="false" />를 반환하거나 파티셔너가 <see langword="null" /> 파티션을 반환합니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation  with thread-local data on a &lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">스레드 로컬 데이터를 사용하여 반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.Concurrent.Partitioner" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="The partitioner that contains the original data source.">원래 데이터 소스가 포함된 Partitioner입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">각 작업에 대한 로컬 데이터의 초기 상태를 반환하는 함수 대리자입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">각 작업의 로컬 상태에 대해 최종 동작을 수행하는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">스레드 로컬 데이터의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localInit" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localFinally" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions&quot; /&gt; property in the &lt;paramref name=&quot;source&quot; /&gt;&lt;see cref=&quot;T:System.Collections.Concurrent.Partitioner&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; or the partitioner returns &lt;see langword=&quot;null&quot; /&gt; partitions.">
        <paramref name="source" />
        <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />의 <see cref="T:System.Collections.Concurrent.Partitioner" /> 속성은 <see langword="false" />를 반환하거나 파티셔너가 <see langword="null" /> 파티션을 반환합니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.">스레드 로컬 데이터를 사용하여 반복을 병렬로 실행할 수 있고 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.IEnumerable" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="An enumerable data source.">열거 가능한 데이터 소스입니다.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">각 작업에 대한 로컬 데이터의 초기 상태를 반환하는 함수 대리자입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">각 작업의 로컬 상태에 대해 최종 동작을 수행하는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">소스의 데이터 형식입니다.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">스레드 로컬 데이터의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localInit" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localFinally" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel and the state of the loop can be monitored and manipulated.">스레드 로컬 데이터를 사용하여 반복을 병렬로 실행할 수 있고 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.IEnumerable" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="An enumerable data source.">열거 가능한 데이터 소스입니다.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">각 작업에 대한 로컬 데이터의 초기 상태를 반환하는 함수 대리자입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">각 작업의 로컬 상태에 대해 최종 동작을 수행하는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">소스의 데이터 형식입니다.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">스레드 로컬 데이터의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localInit" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localFinally" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">스레드 로컬 데이터를 사용하여 반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.IEnumerable" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="An enumerable data source.">열거 가능한 데이터 소스입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">각 작업에 대한 로컬 데이터의 초기 상태를 반환하는 함수 대리자입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">각 작업의 로컬 상태에 대해 최종 동작을 수행하는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">소스의 데이터 형식입니다.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">스레드 로컬 데이터의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localInit" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localFinally" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary vsli:raw="Executes a &lt;see langword=&quot;foreach&quot; /&gt; (&lt;see langword=&quot;For Each&quot; /&gt; in Visual Basic) operation with thread-local data and 64-bit indexes on an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.">64비트 인덱스와 스레드 로컬 데이터를 사용하여 반복을 병렬로 실행할 수 있고 루프 옵션을 구성할 수 있으며 루프 상태를 모니터링 및 조작할 수 있는 <see langword="foreach" />(Visual Basic의 경우 <see langword="For Each" />) 작업을 <see cref="T:System.Collections.IEnumerable" />에 대해 실행합니다.</summary>
      <param name="source" vsli:raw="An enumerable data source.">열거 가능한 데이터 소스입니다.</param>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="localInit" vsli:raw="The function delegate that returns the initial state of the local data for each task.">각 작업에 대한 로컬 데이터의 초기 상태를 반환하는 함수 대리자입니다.</param>
      <param name="body" vsli:raw="The delegate that is invoked once per iteration.">반복당 한 번씩 호출되는 대리자입니다.</param>
      <param name="localFinally" vsli:raw="The delegate that performs a final action on the local state of each task.">각 작업의 로컬 상태에 대해 최종 동작을 수행하는 대리자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the data in the source.">소스의 데이터 형식입니다.</typeparam>
      <typeparam name="TLocal" vsli:raw="The type of the thread-local data.">스레드 로컬 데이터의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;body&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localInit&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;localFinally&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="body" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localInit" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="localFinally" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is canceled.">
        <paramref name="parallelOptions" /> 인수의 <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that contains all the individual exceptions thrown on all threads.">모든 개별 예외를 포함하는 예외는 스레드에서 throw됩니다.</exception>
      <returns vsli:raw="A structure that contains information about which portion of the loop completed.">완료된 루프 부분에 대한 정보가 포함된 구조체입니다.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
      <summary vsli:raw="Executes each of the provided actions, possibly in parallel.">각각의 제공된 동작을 가능하면 병렬로 실행합니다.</summary>
      <param name="actions" vsli:raw="An array of &lt;see cref=&quot;T:System.Action&quot; /&gt; to execute.">실행할 <see cref="T:System.Action" />의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="actions" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown when any action in the &lt;paramref name=&quot;actions&quot; /&gt; array throws an exception.">
        <paramref name="actions" /> 배열에 있는 모든 작업이 예외를 throw하는 경우 throw되는 예외입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; array contains a &lt;see langword=&quot;null&quot; /&gt; element.">
        <paramref name="actions" /> 배열에 <see langword="null" /> 요소가 포함되어 있습니다.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
      <summary vsli:raw="Executes each of the provided actions, possibly in parallel, unless the operation is cancelled by the user.">사용자가 작업을 취소하지 않는다면 제공된 각 작업을 가능한 한 병렬로 실행합니다.</summary>
      <param name="parallelOptions" vsli:raw="An object that configures the behavior of this operation.">이 작업의 동작을 구성하는 개체입니다.</param>
      <param name="actions" vsli:raw="An array of actions to execute.">실행할 동작의 배열입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; is set.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationToken" />이 설정됩니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;parallelOptions&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="actions" /> 인수가 <see langword="null" />인 경우  
  
또는 
<paramref name="parallelOptions" /> 인수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The exception that is thrown when any action in the &lt;paramref name=&quot;actions&quot; /&gt; array throws an exception.">
        <paramref name="actions" /> 배열에 있는 모든 작업이 예외를 throw하는 경우 throw되는 예외입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;actions&quot; /&gt; array contains a &lt;see langword=&quot;null&quot; /&gt; element.">
        <paramref name="actions" /> 배열에 <see langword="null" /> 요소가 포함되어 있습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; in the &lt;paramref name=&quot;parallelOptions&quot; /&gt; has been disposed.">
        <paramref name="parallelOptions" />의 <see cref="T:System.Threading.CancellationTokenSource" />과 연결된 <see cref="T:System.Threading.CancellationToken" />가 삭제되었습니다.</exception>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopResult">
      <summary vsli:raw="Provides completion status on the execution of a &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop.">
        <see cref="T:System.Threading.Tasks.Parallel" /> 루프의 실행에 대한 완료 상태를 제공합니다.</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
      <summary vsli:raw="Gets whether the loop ran to completion, such that all iterations of the loop were executed and the loop didn't receive a request to end prematurely.">루프 실행이 완료되어 루프의 모든 반복이 실행되었고 루프가 중간에 끝나도록 요청을 받지 않았는지 여부를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the loop ran to completion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">루프 실행이 완료되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
      <summary vsli:raw="Gets the index of the lowest iteration from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called.">
        <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" />가 호출된 가장 낮은 반복의 인덱스를 가져옵니다.</summary>
      <returns vsli:raw="Returns an integer that represents the lowest iteration from which the Break statement was called.">Break 문이 호출된 가장 낮은 반복을 나타내는 정수를 반환합니다.</returns>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopState">
      <summary vsli:raw="Enables iterations of parallel loops to interact with other iterations. An instance of this class is provided by the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; class to each loop; you can not create instances in your code.">병렬 루프의 반복이 다른 반복과 상호 작용할 수 있도록 합니다. 이 클래스의 인스턴스는 <see cref="T:System.Threading.Tasks.Parallel" /> 클래스에 의해 각 루프에 제공됩니다. 코드에 인스턴스를 만들 수는 없습니다.</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Break">
      <summary vsli:raw="Communicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop should cease execution of iterations beyond the current iteration at the system's earliest convenience.">시스템의 편의상 빨리 수행하는 현재 반복 이외에 <see cref="T:System.Threading.Tasks.Parallel" /> 루프의 실행이 중단되도록 통신합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method was previously called. &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; and &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; may not be used in combination by iterations of the same loop.">
        <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> 메서드가 이미 호출된 경우 <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> 및 <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" />은 동일한 루프의 반복을 조합하여 사용할 수 없습니다.</exception>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Stop">
      <summary vsli:raw="Communicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; loop should cease execution at the system's earliest convenience.">시스템에서 편의상 빨리 수행하는 반복에서 <see cref="T:System.Threading.Tasks.Parallel" /> 루프의 실행이 중단되도록 통신합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; method was called previously. &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; and &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; may not be used in combination by iterations of the same loop.">
        <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> 메서드가 이미 호출되었습니다. <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> 및 <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" />은 동일한 루프의 반복을 조합하여 사용할 수 없습니다.</exception>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsExceptional">
      <summary vsli:raw="Gets whether any iteration of the loop has thrown an exception that went unhandled by that iteration.">루프 반복이 해당 반복에서 처리되지 않은 예외를 throw했는지 여부를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an unhandled exception was thrown; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 처리 되지 않은 예외가 throw 되 면이 고, 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsStopped">
      <summary vsli:raw="Gets whether any iteration of the loop has called the &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method.">루프 반복에서 <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> 메서드를 호출했는지 여부를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any iteration has stopped the loop by calling the &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Stop&quot; /&gt; method; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 메서드를 호출 하 여 반복에서 루프를 중지 했으면 <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> 이 고, 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration">
      <summary vsli:raw="Gets the lowest iteration of the loop from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called.">
        <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" />가 호출된 루프의 가장 낮은 반복을 가져옵니다.</summary>
      <returns vsli:raw="The lowest iteration from which &lt;see cref=&quot;M:System.Threading.Tasks.ParallelLoopState.Break&quot; /&gt; was called. In the case of a &lt;see cref=&quot;M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})&quot; /&gt; loop, the value is based on an internally-generated index.">가 호출 된 가장 낮은 반복 <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> 입니다. <see cref="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" /> 루프의 경우 값은 내부에서 생성된 인덱스를 기반으로 합니다.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration">
      <summary vsli:raw="Gets whether the current iteration of the loop should exit based on requests made by this or other iterations.">루프의 현재 반복이 해당 반복 또는 다른 반복에서 수행한 요청에 따라 종료되어야 하는지 여부를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current iteration should exit; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 현재 반복을 종료 하면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="T:System.Threading.Tasks.ParallelOptions">
      <summary vsli:raw="Stores options that configure the operation of methods on the &lt;see cref=&quot;T:System.Threading.Tasks.Parallel&quot; /&gt; class.">
        <see cref="T:System.Threading.Tasks.Parallel" /> 클래스의 메서드 작업을 구성하는 옵션을 저장합니다.</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; class.">
        <see cref="T:System.Threading.Tasks.ParallelOptions" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.CancellationToken">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance.">이 <see cref="T:System.Threading.Tasks.ParallelOptions" /> 인스턴스와 연결된 <see cref="T:System.Threading.CancellationToken" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The token that is associated with this instance.">이 인스턴스에 연결된 토큰입니다.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism">
      <summary vsli:raw="Gets or sets the maximum number of concurrent tasks enabled by this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance.">이 <see cref="T:System.Threading.Tasks.ParallelOptions" /> 인스턴스에서 사용되는 동시 작업의 최대 수를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property is being set to zero or to a value that is less than -1.">속성을 0 또는 -1보다 작은 값으로 설정하는 경우</exception>
      <returns vsli:raw="An integer that represents the maximum degree of parallelism.">병렬 처리의 최대 수준을 나타내는 정수입니다.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.TaskScheduler">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Threading.Tasks.TaskScheduler&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Threading.Tasks.ParallelOptions&quot; /&gt; instance. Setting this property to null indicates that the current scheduler should be used.">이 <see cref="T:System.Threading.Tasks.ParallelOptions" /> 인스턴스와 연결된 <see cref="T:System.Threading.Tasks.TaskScheduler" />를 가져오거나 설정합니다. 이 속성을 null로 설정하면 현재 스케줄러가 사용됨을 나타냅니다.</summary>
      <returns vsli:raw="The task scheduler that is associated with this instance.">이 인스턴스에 연결된 작업 스케줄러입니다.</returns>
    </member>
  </members>
</doc>