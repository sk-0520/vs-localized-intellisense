<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Channels</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Channels.BoundedChannelFullMode">
      <summary vsli:raw="Specifies the behavior to use when writing to a bounded channel that is already full.">이미 가득 찬 제한된 채널에 쓸 때 사용할 동작을 지정합니다.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropNewest">
      <summary vsli:raw="Removes and ignores the newest item in the channel in order to make room for the item being written.">항목을 쓸 공간을 확보하기 위해 채널의 가장 새로운 항목을 제거하고 무시합니다.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropOldest">
      <summary vsli:raw="Removes and ignores the oldest item in the channel in order to make room for the item being written.">항목을 쓸 공간을 확보하기 위해 채널의 가장 오래된 항목을 제거하고 무시합니다.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropWrite">
      <summary vsli:raw="Drops the item being written.">쓰고 있는 항목을 삭제합니다.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.Wait">
      <summary vsli:raw="Waits for space to be available in order to complete the write operation.">쓰기 작업을 완료하기 위해 공간을 사용할 수 있을 때까지 대기합니다.</summary>
    </member>
    <member name="T:System.Threading.Channels.BoundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of bounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">바인딩된 <see cref="T:System.Threading.Channels.Channel`1" /> 인스턴스의 동작을 제어하는 옵션을 제공합니다.</summary>
    </member>
    <member name="M:System.Threading.Channels.BoundedChannelOptions.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the options.">옵션을 초기화합니다.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the bounded channel may store.">제한된 채널이 저장할 수 있는 최대 항목 수입니다.</param>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.Capacity">
      <summary vsli:raw="Gets or sets the maximum number of items the bounded channel may store.">제한된 채널이 저장할 수 있는 최대 항목 수를 가져오거나 설정합니다.</summary>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.FullMode">
      <summary vsli:raw="Gets or sets the behavior incurred by write operations when the channel is full.">채널이 가득 찼을 때 쓰기 작업에서 발생하는 동작을 가져오거나 설정합니다.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel">
      <summary vsli:raw="Provides static methods for creating channels.">채널을 만들기 위한 정적 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Int32)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">지정된 최대 용량으로 채널을 만듭니다.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the channel may store.">채널이 저장할 수 있는 최대 항목 수입니다.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">채널의 데이터 형식을 지정 합니다.</typeparam>
      <returns vsli:raw="The created channel.">만들어진 채널입니다.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">지정된 최대 용량으로 채널을 만듭니다.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">채널 동작을 안내하는 옵션입니다.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">채널의 데이터 형식을 지정 합니다.</typeparam>
      <returns vsli:raw="The created channel.">만들어진 채널입니다.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1">
      <summary vsli:raw="Creates an unbounded channel usable by any number of readers and writers concurrently.">판독기 및 제한기가 개수와 관계없이 동시에 사용할 수 있는 제한 없는 채널을 만듭니다.</summary>
      <typeparam name="T" vsli:raw="The type of data in the channel.">채널의 데이터 형식입니다.</typeparam>
      <returns vsli:raw="The created channel.">만들어진 채널입니다.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1(System.Threading.Channels.UnboundedChannelOptions)">
      <summary vsli:raw="Creates an unbounded channel subject to the provided options.">제공된 옵션이 적용되는 제한 없는 채널을 만듭니다.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">채널 동작을 안내하는 옵션입니다.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">채널의 데이터 형식을 지정 합니다.</typeparam>
      <returns vsli:raw="The created channel.">만들어진 채널입니다.</returns>
    </member>
    <member name="T:System.Threading.Channels.Channel`1">
      <summary vsli:raw="Provides a base class for channels that support reading and writing elements of type &lt;typeparamref name=&quot;T&quot; /&gt;.">
        <typeparamref name="T" /> 형식의 요소 읽기 및 쓰기를 지원하는 채널의 기본 클래스를 제공합니다.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data readable and writable in the channel.">채널에서 읽을 수 있고 쓸 수 있는 데이터의 형식을 지정 합니다.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`1.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.Channel`1" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel`2">
      <summary vsli:raw="Provides a base class for channels that support reading elements of type &lt;typeparamref name=&quot;TRead&quot; /&gt; and writing elements of type &lt;typeparamref name=&quot;TWrite&quot; /&gt;.">
        <typeparamref name="TRead" /> 형식 요소 읽기 및 <typeparamref name="TWrite" /> 형식 요소 쓰기를 지원하는 채널의 기본 클래스를 제공합니다.</summary>
      <typeparam name="TWrite" vsli:raw="Specifies the type of data that may be written to the channel.">채널에 작성 될 수 있는 데이터의 형식을 지정 합니다.</typeparam>
      <typeparam name="TRead" vsli:raw="Specifies the type of data that may be read from the channel.">채널에서 읽을 수 있는 데이터의 형식을 지정 합니다.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.Channel`2" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelReader{`1}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its readable half.">
        <see cref="T:System.Threading.Channels.Channel`2" />에서 읽기 가능한 절반으로 암시적으로 캐스팅합니다.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">캐스팅되는 <see cref="T:System.Threading.Channels.Channel`2" />입니다.</param>
      <returns vsli:raw="The readable half.">읽기 가능한 절반입니다.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelWriter{`0}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its writable half.">
        <see cref="T:System.Threading.Channels.Channel`2" />에서 쓰기 가능한 절반으로 암시적으로 캐스팅합니다.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">캐스팅되는 <see cref="T:System.Threading.Channels.Channel`2" />입니다.</param>
      <returns vsli:raw="The writable half.">쓰기 가능한 절반입니다.</returns>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Reader">
      <summary vsli:raw="Gets the readable half of this channel.">이 채널의 읽기 가능한 절반을 가져옵니다.</summary>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Writer">
      <summary vsli:raw="Gets the writable half of this channel.">이 채널의 쓰기 가능한 절반을 가져옵니다.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelClosedException">
      <summary vsli:raw="Exception thrown when a channel is used after it's been closed.">채널이 닫힌 후에 사용되는 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.ChannelClosedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.ChannelClosedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">이 예외의 원인이 되는 예외입니다.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class with serialized data.">serialize된 데이터를 사용하여 <see cref="T:System.Threading.Channels.ChannelClosedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">serialize된 개체 데이터를 보유하는 개체입니다.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.ChannelClosedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The message that describes the error.">오류를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.ChannelClosedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The message that describes the error.">오류를 설명하는 메시지입니다.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">이 예외의 원인이 되는 예외입니다.</param>
    </member>
    <member name="T:System.Threading.Channels.ChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of channel instances.">채널 인스턴스의 동작을 제어하는 옵션을 제공합니다.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelOptions.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelOptions&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.ChannelOptions" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if operations performed on a channel may synchronously invoke continuations subscribed to&#xA;            notifications of pending async operations; &lt;see langword=&quot;false&quot; /&gt; if all continuations should be invoked asynchronously.">채널에서 수행된 작업이 보류 중인 비동기 작업의 알림을 구독하는 연속을 동기적으로 호출할 수 있으면 <see langword="true" />이고, 모든 연속이 비동기적으로 호출되어야 하면 <see langword="false" />입니다.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleReader">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; readers from the channel guarantee that there will only ever be at most one read operation at a time;&#xA;            &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">채널의 <see langword="true" /> 판독기는 한 번에 최대 하나의 읽기 작업만 있다는 것을 보장하고, 이러한 제약 조건이 없으면 <see langword="false" />입니다.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleWriter">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers to the channel guarantee that there will only ever be at most one write operation&#xA;            at a time; &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">채널의 기록기가 한 번에 최대 하나의 읽기 작업만 있다는 것을 보장하면 <see langword="true" />이고, 이러한 제약 조건이 없으면 <see langword="false" />입니다.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelReader`1">
      <summary vsli:raw="Provides a base class for reading from a channel.">채널에서 읽기 위한 기본 클래스를 제공합니다.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be read from the channel.">채널에서 읽을 수 있는 데이터의 형식을 지정 합니다.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelReader`1&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.ChannelReader`1" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Collections.Generic.IAsyncEnumerable`1&quot; /&gt; that enables reading all of the data from the channel.">채널의 모든 데이터를 읽을 수 있도록 <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" />을 만듭니다.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to use to cancel the enumeration. If data is immediately ready for reading, then that data may be yielded even after cancellation has been requested.">열거형을 취소할 때 사용하는 취소 토큰입니다.</param>
      <returns vsli:raw="The created async enumerable.">생성된 비동기 열거 가능한 항목입니다.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads an item from the channel.">채널에서 항목을 비동기적으로 읽습니다.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the read operation.">읽기 작업을 취소하는 데 사용되는 <see cref="T:System.Threading.CancellationToken" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that represents the asynchronous read operation.">비동기 읽기 작업을 나타내는 <see cref="T:System.Threading.Tasks.ValueTask`1" />입니다.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)">
      <summary vsli:raw="Attempts to read an item from the channel.">채널에서 항목을 읽으려고 합니다.</summary>
      <param name="item" vsli:raw="The read item, or a default value if no item could be read.">읽기 항목이거나, 읽을 수 있는 항목이 없는 경우에는 기본값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">항목을 읽은 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when data is available to read.">데이터를 읽을 수 있을 때 완료되는 <see cref="T:System.Threading.Tasks.ValueTask`1" />을 반환합니다.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">대기 작업을 취소하는 데 사용되는 <see cref="T:System.Threading.CancellationToken" />입니다.</param>
      <returns vsli:raw="&lt;para&gt;A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when data is available to read&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further data will ever be available to be read due to the channel completing successfully.&lt;/para&gt;&lt;para&gt;If the channel completes with an exception, the task will also complete with an exception.&lt;/para&gt;">
        <para>데이터를 읽을 수 있을 때 <see langword="true" /> 결과를 포함하거나 채널이 완료되어 추가 데이터를 읽을 수 없을 때 <see langword="false" /> 결과를 포함하여 완료되는 <see cref="T:System.Threading.Tasks.ValueTask`1" />입니다.</para>
        <para>예외가 발생하여 채널이 완료되면 작업도 예외와 함께 완료됩니다.</para>
      </returns>
    </member>
    <member name="P:System.Threading.Channels.ChannelReader`1.CanCount">
      <summary vsli:raw="Gets a value that indicates whether &lt;see cref=&quot;P:System.Threading.Channels.ChannelReader`1.Count&quot; /&gt; is available for use on this &lt;see cref=&quot;T:System.Threading.Channels.ChannelReader`1&quot; /&gt; instance.">
        <see cref="P:System.Threading.Channels.ChannelReader`1.Count" />를 <see cref="T:System.Threading.Channels.ChannelReader`1" /> 인스턴스에서 사용할 수 있는지를 나타내는 값을 가져옵니다.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelReader`1.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that completes when no more data will ever&#xA;            be available to be read from this channel.">이 채널에서 더 이상 데이터를 읽을 수 없을 때 완료되는 <see cref="T:System.Threading.Tasks.Task" />를 가져옵니다.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelReader`1.Count">
      <summary vsli:raw="Gets the current number of items available from this channel reader.">이 채널 판독기에서 사용할 수 있는 현재 항목 수를 가져옵니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Counting is not supported on this instance.">이 인스턴스에서는 계산이 지원되지 않습니다.</exception>
    </member>
    <member name="T:System.Threading.Channels.ChannelWriter`1">
      <summary vsli:raw="Provides a base class for writing to a channel.">채널에 쓰기 위한 기본 클래스를 제공합니다.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be written to the channel.">채널에 작성 될 수 있는 데이터의 형식을 지정 합니다.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelWriter`1&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.ChannelWriter`1" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)">
      <summary vsli:raw="Mark the channel as being complete, meaning no more items will be written to it.">채널을 완료되는 것으로 표시합니다. 이는 항목이 더 이상 채널에 기록되지 않음을 의미합니다.</summary>
      <param name="error" vsli:raw="Optional Exception indicating a failure that's causing the channel to complete.">채널이 완료되도록 하는 실패를 나타내는 선택적 예외입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The channel has already been marked as complete.">채널이 이미 완료로 표시되었습니다.</exception>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)">
      <summary vsli:raw="Attempts to mark the channel as being completed, meaning no more data will be written to it.">채널을 완료되는 것으로 표시하려고 합니다. 이는 데이터가 더 이상 채널에 기록되지 않음을 의미합니다.</summary>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; indicating the failure causing no more data to be written, or null for success.">데이터가 더 이상 기록되지 않도록 하는 실패를 나타내는 경우 <see cref="T:System.Exception" />이고, 성공의 경우 Null입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this operation successfully completes the channel; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the channel could not be marked for completion,&#xA;            for example due to having already been marked as such, or due to not supporting completion.&#xA;          .">이 작업이 성공적으로 채널을 완료하면 <see langword="true" />이고, 채널을 완료하도록 표시할 수 없으면(예를 들어 이미 완료로 표시되었거나 완료를 지원하지 않기 때문에) <see langword="false" />입니다.
.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)">
      <summary vsli:raw="Attempts to write the specified item to the channel.">지정된 항목을 채널에 쓰려고 합니다.</summary>
      <param name="item" vsli:raw="The item to write.">기록할 항목입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item was written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">항목이 기록된 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when space is available to write an item.">항목을 쓸 공간이 있을 때 완료되는 <see cref="T:System.Threading.Tasks.ValueTask`1" />을 반환합니다.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">대기 작업을 취소하는 데 사용되는 <see cref="T:System.Threading.CancellationToken" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when space is available to write an item&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further writing will be permitted.">항목을 쓸 공간이 있을 때 <see langword="true" /> 결과를 포함하거나 추가 쓰기가 허용되지 않을 때 <see langword="false" /> 결과를 포함하여 완료되는 <see cref="T:System.Threading.Tasks.ValueTask`1" />입니다.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes an item to the channel.">채널에 항목을 비동기적으로 씁니다.</summary>
      <param name="item" vsli:raw="The value to write to the channel.">채널에 쓸 값입니다.</param>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the write operation.">쓰기 작업을 취소하는 데 사용되는 <see cref="T:System.Threading.CancellationToken" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; that represents the asynchronous write operation.">비동기 쓰기 작업을 나타내는 <see cref="T:System.Threading.Tasks.ValueTask" />입니다.</returns>
    </member>
    <member name="T:System.Threading.Channels.UnboundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of unbounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">바인딩되지 않은 <see cref="T:System.Threading.Channels.Channel`1" /> 인스턴스의 동작을 제어하는 옵션을 제공합니다.</summary>
    </member>
    <member name="M:System.Threading.Channels.UnboundedChannelOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.UnboundedChannelOptions&quot; /&gt; class.">
        <see cref="T:System.Threading.Channels.UnboundedChannelOptions" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
  </members>
</doc>