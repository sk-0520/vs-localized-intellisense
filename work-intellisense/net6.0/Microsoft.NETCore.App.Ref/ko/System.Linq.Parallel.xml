<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Linq.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Linq.OrderedParallelQuery`1">
      <summary vsli:raw="Represents a sorted, parallel sequence.">정렬된 병렬 시퀀스를 나타냅니다.</summary>
      <typeparam name="TSource" vsli:raw="The type of elements in the source collection.">소스 컬렉션의 요소 형식입니다.</typeparam>
    </member>
    <member name="M:System.Linq.OrderedParallelQuery`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">시퀀스를 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">시퀀스를 반복하는 열거자입니다.</returns>
    </member>
    <member name="T:System.Linq.ParallelEnumerable">
      <summary vsli:raw="Provides a set of methods for querying objects that implement ParallelQuery{TSource}. This is the parallel equivalent of &lt;see cref=&quot;T:System.Linq.Enumerable&quot; /&gt;.">ParallelQuery{TSource}를 구현하는 개체를 쿼리하기 위한 메서드 집합을 제공합니다. <see cref="T:System.Linq.Enumerable" />과 같습니다.</summary>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence.">시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">집계할 시퀀스입니다.</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">각 요소에 대해 호출할 누적기 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="func" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The final accumulator value.">최종 누적기 값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value.">시퀀스에 대해 누적기 함수를 병렬로 적용합니다. 지정된 시드 값은 초기 누적기 값으로 사용됩니다.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">집계할 시퀀스입니다.</param>
      <param name="seed" vsli:raw="The initial accumulator value.">초기 누적기 값입니다.</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">각 요소에 대해 호출할 누적기 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">누적기 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="func" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The final accumulator value.">최종 누적기 값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.">시퀀스에 대해 누적기 함수를 병렬로 적용합니다. 이 오버로드는 순차적 구현에서는 사용할 수 없습니다.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">집계할 시퀀스입니다.</param>
      <param name="seed" vsli:raw="The initial accumulator value.">초기 누적기 값입니다.</param>
      <param name="updateAccumulatorFunc" vsli:raw="An accumulator function to be invoked on each element in a partition.">파티션의 각 요소에 대해 호출할 누적기 함수입니다.</param>
      <param name="combineAccumulatorsFunc" vsli:raw="An accumulator function to be invoked on the yielded accumulator result from each partition.">각 파티션의 생성된 누적기 결과에 대해 호출할 누적기 함수입니다.</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">최종 누적기 값을 결과 값으로 변환하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">누적기 값의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;updateAccumulatorFunc&quot; /&gt; or &lt;paramref name=&quot;combineAccumulatorsFunc&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="updateAccumulatorFunc" /> 또는 <paramref name="combineAccumulatorsFunc" /> 또는 <paramref name="resultSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The transformed final accumulator value.">변환된 최종 누적기 값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.">시퀀스에 대해 누적기 함수를 병렬로 적용합니다. 지정된 시드 값은 초기 누적기 값으로 사용되고 지정된 함수는 결과 값을 선택하는 데 사용됩니다.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">집계할 시퀀스입니다.</param>
      <param name="seed" vsli:raw="The initial accumulator value.">초기 누적기 값입니다.</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">각 요소에 대해 호출할 누적기 함수입니다.</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">최종 누적기 값을 결과 값으로 변환하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">누적기 값의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="func" /> 또는 <paramref name="resultSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The transformed final accumulator value.">변환된 최종 누적기 값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.">시퀀스에 대해 누적기 함수를 병렬로 적용합니다. 이 오버로드는 순차적 구현에서는 사용할 수 없습니다.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">집계할 시퀀스입니다.</param>
      <param name="seedFactory" vsli:raw="A function that returns the initial accumulator value.">초기 누적기 값을 반환하는 함수입니다.</param>
      <param name="updateAccumulatorFunc" vsli:raw="An accumulator function to be invoked on each element in a partition.">파티션의 각 요소에 대해 호출할 누적기 함수입니다.</param>
      <param name="combineAccumulatorsFunc" vsli:raw="An accumulator function to be invoked on the yielded accumulator result from each partition.">각 파티션의 생성된 누적기 결과에 대해 호출할 누적기 함수입니다.</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">최종 누적기 값을 결과 값으로 변환하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">누적기 값의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;seedFactory&quot; /&gt; or &lt;paramref name=&quot;updateAccumulatorFunc&quot; /&gt; or &lt;paramref name=&quot;combineAccumulatorsFunc&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="seedFactory" /> 또는 <paramref name="updateAccumulatorFunc" /> 또는 <paramref name="combineAccumulatorsFunc" /> 또는 <paramref name="resultSelector" />가 null 참조인 경우(Visual Basic에서는 Nothing).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The transformed final accumulator value.">변환된 최종 누적기 값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines in parallel whether all elements of a sequence satisfy a condition.">시퀀스의 모든 요소가 특정 조건에 맞는지 병렬로 확인합니다.</summary>
      <param name="source" vsli:raw="A sequence whose elements to apply the predicate to.">요소에 조건자를 적용할 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">소스 시퀀스의 모든 요소가 지정된 조건자의 테스트를 통과하거나 시퀀스가 비어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Determines whether a parallel sequence contains any elements.">병렬 시퀀스에 요소가 하나라도 있는지 확인합니다.</summary>
      <param name="source" vsli:raw="The sequence to check for emptiness.">비어 있는지 확인할 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains any elements; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">소스 시퀀스에 요소가 하나라도 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines in parallel whether any element of a sequence satisfies a condition.">시퀀스의 요소가 특정 조건에 맞는지 병렬로 확인합니다.</summary>
      <param name="source" vsli:raw="A sequence to whose elements the predicate will be applied.">해당 요소에 조건자를 적용할 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any elements in the source sequence pass the test in the specified predicate; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 조건자의 테스트를 통과하는 요소가 소스 시퀀스에 하나라도 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; into an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to force sequential evaluation of the query.">
        <see cref="T:System.Linq.ParallelQuery`1" />를 <see cref="T:System.Collections.Generic.IEnumerable`1" />로 변환하여 쿼리에 대한 순차적 확인을 강제합니다.</summary>
      <param name="source" vsli:raw="The sequence to cast as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />로 캐스팅할 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <returns vsli:raw="The input sequence typed as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />로 형식화된 입력 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
      <summary vsli:raw="Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.">순서가 없는 기본값을 무시하고 순서가 지정된 것처럼 데이터 소스를 취급하도록 합니다. AsOrdered는 AsParallel, ParallelEnumerable.Range 및 ParallelEnumerable.Repeat에 의해 반환된 제네릭이 아닌 시퀀스에 대해서만 호출할 수 있습니다.</summary>
      <param name="source" vsli:raw="The input sequence.">입력 시퀀스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="thrown if &lt;paramref name=&quot;source&quot; /&gt; contains no elements&#xA;&#xA; -or-&#xA;&#xA; if &lt;see langword=&quot;AsOrdered&quot; /&gt; is called midway through a query. It is allowed to be called immediately after &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)&quot; /&gt;, &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)&quot; /&gt;, or &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;source&quot; /&gt; is not one of &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)&quot; /&gt;, &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)&quot; /&gt;, or &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)&quot; /&gt;.">
        <paramref name="source" />에 요소가 없는 경우 throw됩니다. 
또는 
<see langword="AsOrdered" />가 쿼리 도중에 호출되는 경우 <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> 또는 <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" /> 직후 호출할 수 있습니다.

또는

<paramref name="source" />가 <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> 또는 <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" /> 중 하나가 아닌 경우</exception>
      <returns vsli:raw="The source sequence which will maintain the original ordering in the subsequent query operators.">후속 쿼리 연산자에서 원래 순서를 유지하는 소스 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.">순서가 없는 기본값을 무시하고 순서가 지정된 것처럼 데이터 소스를 취급하도록 합니다. AsOrdered는 AsParallel, ParallelEnumerable.Range 및 ParallelEnumerable.Repeat에 의해 반환된 제네릭 시퀀스에 대해서만 호출할 수 있습니다.</summary>
      <param name="source" vsli:raw="The input sequence.">입력 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;source&quot; /&gt; is not one of AsParallel, ParallelEnumerable.Range, or ParallelEnumerable.Repeat.">
        <paramref name="source" />에 요소가 없는 경우 throw됩니다. 
또는 
<paramref name="source" />가 AsParallel, ParallelEnumerable.Range 또는 ParallelEnumerable.Repeat 중 하나가 아닌 경우</exception>
      <returns vsli:raw="The source sequence which will maintain the original ordering in the subsequent query operators.">후속 쿼리 연산자에서 원래 순서를 유지하는 소스 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
      <summary vsli:raw="Enables parallelization of a query.">쿼리를 병렬화할 수 있도록 합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.Linq.ParallelQuery&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />로 변환할 <see cref="T:System.Linq.ParallelQuery" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <returns vsli:raw="The source as a ParallelQuery to bind to ParallelEnumerable extension methods.">ParallelEnumerable 확장명 메서드에 바인딩할 소스 ParallelQuery입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
      <summary vsli:raw="Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.">입력 시퀀스를 파티션으로 분할해야 하는 사용자 지정 파티셔너에 의해 발생한 쿼리를 병렬화할 수 있도록 합니다.</summary>
      <param name="source" vsli:raw="A partitioner over the input sequence.">입력 시퀀스에 대한 파티셔너입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <returns vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; as a ParallelQuery to bind to ParallelEnumerable extension methods.">ParallelEnumerable 확장 메서드에 바인딩할 <paramref name="source" /> ParallelQuery입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Enables parallelization of a query.">쿼리를 병렬화할 수 있도록 합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />로 변환할 <see cref="T:System.Linq.ParallelQuery`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <returns vsli:raw="The source as a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; to bind to ParallelEnumerable extension methods.">ParallelEnumerable 확장 메서드에 바인딩할 소스 <see cref="T:System.Linq.ParallelQuery`1" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; into an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to force sequential evaluation of the query.">
        <see cref="T:System.Linq.ParallelQuery`1" />를 <see cref="T:System.Collections.Generic.IEnumerable`1" />로 변환하여 쿼리에 대한 순차적 확인을 강제합니다.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; to convert to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">
        <see cref="T:System.Linq.ParallelQuery`1" />로 변환할 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <returns vsli:raw="The source as an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to bind to sequential extension methods.">순차적 확장 메서드에 바인딩할 소스 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Allows an intermediate query to be treated as if no ordering is implied among the elements.">요소 사이에 순서가 암시되지 않은 것처럼 중간 쿼리를 취급하도록 합니다.</summary>
      <param name="source" vsli:raw="The input sequence.">입력 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <returns vsli:raw="The source sequence with arbitrary order.">임의의 순서가 있는 소스 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="The source sequence.">소스 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨). <paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨). <paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨). <paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨). <paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨). <paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨). <paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨). <paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">시퀀스에 있는 요소의 합 또는 카운트가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨). <paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨). <paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(<see cref="T:System.AggregateException" />에서 내부 예외가 Throw됨). <paramref name="selector" /> 함수는 요소 형식에 대해 MaxValue보다 큰 값을 반환합니다.</exception>
      <returns vsli:raw="The average of the sequence of values.">값 시퀀스의 평균입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
      <summary vsli:raw="Converts the elements of a ParallelQuery to the specified type.">ParallelQuery의 요소를 지정된 형식으로 변환합니다.</summary>
      <param name="source" vsli:raw="The sequence that contains the elements to be converted.">변환될 요소가 들어 있는 시퀀스입니다.</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of &lt;paramref name=&quot;source&quot; /&gt; to.">
        <paramref name="source" />의 요소를 변환할 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source sequence could not be converted to &lt;paramref name=&quot;TResult&quot; /&gt;.">소스 시퀀스의 형식은 <paramref name="TResult" />로 변환할 수 없습니다.</exception>
      <returns vsli:raw="A sequence that contains each element of the source sequence converted to the specified type.">지정된 형식으로 변환되는 소스 시퀀스의 각 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Concat overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">이 Concat 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="first" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Concatenates two parallel sequences.">두 병렬 시퀀스를 연결합니다.</summary>
      <param name="first" vsli:raw="The first sequence to concatenate.">연결할 첫 번째 시퀀스입니다.</param>
      <param name="second" vsli:raw="The sequence to concatenate to the first sequence.">첫 번째 시퀀스에 연결할 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <returns vsli:raw="A sequence that contains the concatenated elements of the two input sequences.">두 입력 시퀀스의 연결된 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
      <summary vsli:raw="Determines in parallel whether a sequence contains a specified element by using the default equality comparer.">기본 같음 비교자를 사용하여 시퀀스에 지정된 요소가 들어 있는지 병렬로 확인합니다.</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">값을 찾을 시퀀스입니다.</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">시퀀스에서 찾을 값입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">소스 시퀀스에 지정된 값을 갖는 요소가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines in parallel whether a sequence contains a specified element by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />를 사용하여 시퀀스에 지정된 요소가 들어 있는지 여부를 병렬로 확인합니다.</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">값을 찾을 시퀀스입니다.</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">시퀀스에서 찾을 값입니다.</param>
      <param name="comparer" vsli:raw="An equality comparer to compare values.">값을 비교할 같음 비교자입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">소스 시퀀스에 지정된 값을 갖는 요소가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the number of elements in a parallel sequence.">병렬 시퀀스의 요소 수를 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">개수를 셀 요소가 들어 있는 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. (In this case the InnerException is &lt;see cref=&quot;T:System.OverflowException&quot; /&gt;) -or- One or more exceptions occurred during the evaluation of the query.">소스의 요소 수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우. (이 경우 InnerException은 <see cref="T:System.OverflowException" />입니다) - 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="The number of elements in the input sequence.">입력 시퀀스의 요소 수입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.">지정된 병렬 시퀀스에서 특정 조건에 맞는 요소 수를 나타내는 숫자를 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">개수를 셀 요소가 들어 있는 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. (In this case the InnerException is &lt;see cref=&quot;T:System.OverflowException&quot; /&gt;) -or- One or more exceptions occurred during the evaluation of the query.">소스의 요소 수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우. (이 경우 InnerException은 <see cref="T:System.OverflowException" />입니다) - 또는 - 쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">시퀀스에서 조건자 함수의 조건에 맞는 요소 수를 나타내는 숫자입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.">지정된 병렬 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 singleton 컬렉션의 형식 매개 변수 기본값을 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return a default value for if it is empty.">비어 있는 경우 기본값을 반환할 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />가 비어 있으면 default(TSource)가 들어 있는 시퀀스이고, 그렇지 않으면 <paramref name="source" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
      <summary vsli:raw="Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.">지정된 병렬 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 singleton 컬렉션의 지정된 값을 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return the specified value for if it is empty.">비어 있는 경우 지정된 값을 반환할 시퀀스입니다.</param>
      <param name="defaultValue" vsli:raw="The value to return if the sequence is empty.">시퀀스가 비어 있는 경우에 반환할 값입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains defaultValue if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />가 비어 있으면 defaultValue가 들어 있는 시퀀스이고, 그렇지 않으면 <paramref name="source" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.">기본 같음 비교자로 값을 비교하여 병렬 시퀀스에서 고유 요소를 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">중복 요소를 제거할 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains distinct elements from the source sequence.">소스 시퀀스의 고유 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Returns distinct elements from a parallel sequence by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />로 값을 비교하여 병렬 시퀀스에서 고유 요소를 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">중복 요소를 제거할 시퀀스입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">값을 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains distinct elements from the source sequence.">소스 시퀀스의 고유 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a parallel sequence.">병렬 시퀀스에서 지정된 인덱스의 요소를 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence to return an element from.">요소가 반환되는 시퀀스입니다.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">검색할 요소의 0부터 시작하는 인덱스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than or equal to the number of elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="index" />가 0보다 작거나 <paramref name="source" />의 요소 수보다 크거나 같은 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="The element at the specified position in the source sequence.">소스 시퀀스에서 지정된 위치의 요소입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.">병렬 시퀀스에서 지정된 인덱스의 요소를 반환하거나, 인덱스가 범위를 벗어나면 기본값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence to return an element from.">요소가 반환되는 시퀀스입니다.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">검색할 요소의 0부터 시작하는 인덱스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="default(TSource) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.">인덱스가 소스 시퀀스의 범위를 벗어나면 default(TSource)이고, 그렇지 않으면 소스 시퀀스에서 지정된 위치에 있는 요소입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Empty``1">
      <summary vsli:raw="Returns an empty ParallelQuery{TResult} that has the specified type argument.">지정된 형식 인수를 갖는 빈 ParallelQuery{TResult}를 반환합니다.</summary>
      <typeparam name="TResult" vsli:raw="The type to assign to the type parameter of the returned generic sequence.">반환되는 제네릭 시퀀스의 형식 매개 변수에 할당할 형식입니다.</typeparam>
      <returns vsli:raw="An empty sequence whose type argument is &lt;paramref name=&quot;TResult&quot; /&gt;.">해당 형식 인수가 <paramref name="TResult" />인 빈 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Except overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">이 Except 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="first" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Except overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">이 Except 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="first" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set difference of two parallel sequences by using the default equality comparer to compare values.">기본 같음 비교자로 값을 비교하여 두 병렬 시퀀스의 차집합을 구합니다.</summary>
      <param name="first" vsli:raw="A sequence whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">
        <paramref name="second" />에 없는 요소를 반환할 시퀀스입니다.</param>
      <param name="second" vsli:raw="A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">첫 번째 시퀀스에 요소가 있는 경우 반환되는 시퀀스에서 해당 요소를 제거할 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">두 시퀀스 요소의 차집합이 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set difference of two parallel sequences by using the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />로 값을 비교하여 두 병렬 시퀀스의 차집합을 구합니다.</summary>
      <param name="first" vsli:raw="A sequence whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">
        <paramref name="second" />에 없는 요소를 반환할 시퀀스입니다.</param>
      <param name="second" vsli:raw="A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">첫 번째 시퀀스에 요소가 있는 경우 반환되는 시퀀스에서 해당 요소를 제거할 시퀀스입니다.</param>
      <param name="comparer" vsli:raw="&lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">값을 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">두 시퀀스 요소의 차집합이 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the first element of a parallel sequence.">병렬 시퀀스의 첫 번째 요소를 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return the first element of.">첫 번째 요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The first element in the specified sequence.">지정된 시퀀스의 첫 번째 요소입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element in a parallel sequence that satisfies a specified condition.">병렬 시퀀스에서 지정된 조건에 맞는 첫 번째 요소를 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element in &lt;paramref name=&quot;source&quot; /&gt; satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" />의 조건에 맞는 <paramref name="predicate" /> 요소가 없는 경우.</exception>
      <returns vsli:raw="The first element in the sequence that passes the test in the specified predicate function.">시퀀스에서 지정된 조건자 함수의 테스트를 통과하는 첫 번째 요소입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.">병렬 시퀀스의 첫 번째 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return the first element of.">첫 번째 요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />가 비어 있으면 default(TSource)이고, 그렇지 않으면 <paramref name="source" />의 첫 번째 요소입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.">병렬 시퀀스에서 특정 조건에 맞는 첫 번째 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty or if no element passes the test specified by predicate; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test specified by predicate.">
        <paramref name="source" />가 비어 있거나 조건자에 지정된 테스트를 통과하는 요소가 없으면 default(TSource)이고, 그렇지 않으면 <paramref name="source" />에서 조건자에 지정된 테스트를 통과하는 첫 번째 요소입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
      <summary vsli:raw="Invokes in parallel the specified action for each element in the &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 각 요소에 대해 지정된 동작을 병렬로 수행합니다.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; whose elements will be processed by &lt;paramref name=&quot;action&quot; /&gt;.">요소가 <paramref name="action" />에서 처리될 <see cref="T:System.Linq.ParallelQuery`1" />입니다.</param>
      <param name="action" vsli:raw="An Action to invoke on each element.">각 요소에 대해 호출할 동작입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function.">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화합니다.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource}that contains elements to sort.">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">
        <paramref name="TKey" />에 따라 내림차순으로 정렬된 그룹 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt;.">지정된 키 선택기 함수에 따라 지정된 <see cref="T:System.Collections.Generic.IComparer`1" />로 키를 비교하여 시퀀스의 요소를 병렬로 그룹화합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.OrderedParallelQuery`1&quot; /&gt; that contains elements to sort.">정렬할 요소가 들어 있는 <see cref="T:System.Linq.OrderedParallelQuery`1" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">에서 반환 하는 키의 형식입니다 <paramref name="keySelector" /> &gt; .</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">
        <paramref name="TKey" />에 따라 내림차순으로 정렬된 그룹 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 지정된 함수를 사용하여 각 그룹의 요소를 프로젝션합니다.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.OrderedParallelQuery`1&quot; /&gt; that contains elements to sort.">정렬할 요소가 들어 있는 <see cref="T:System.Linq.OrderedParallelQuery`1" />입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">각 소스 요소를 <see cref="T:System.Linq.IGrouping`2" />의 요소에 매핑하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">
        <see cref="T:System.Linq.IGrouping`2" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">
        <paramref name="TKey" />에 따라 내림차순으로 정렬된 그룹 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a key selector function. The keys are compared by using a comparer and each group's elements are projected by using a specified function.">키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화합니다. 키는 비교자를 통해 비교되고 각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource}that contains elements to sort.">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping.">각 소스 요소를 IGrouping의 요소에 매핑하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An IComparer{TSource} to compare keys.">키를 비교할 IComparer{TSource}입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the IGrouping.">IGrouping에 있는 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">
        <paramref name="TKey" />에 따라 내림차순으로 정렬된 그룹 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">요소를 그룹화할 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">각 요소에 대해 키를 추출하는 함수입니다.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">각 그룹의 결과 값을 만드는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" />에서 반환하는 결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">각 요소가 그룹과 해당 키에 대한 프로젝션을 나타내는 <paramref name="TResult" /> 형식의 요소 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The keys are compared by using a specified comparer.">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다. 키는 지정된 비교자를 통해 비교됩니다.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">요소를 그룹화할 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">각 요소에 대해 키를 추출하는 함수입니다.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">각 그룹의 결과 값을 만드는 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" />에서 반환하는 결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence of groups.">그룹 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The elements of each group are projected by using a specified function.">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다. 각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">요소를 그룹화할 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">각 요소에 대해 키를 추출하는 함수입니다.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping&amp;lt;TKey, TElement&amp;gt;.">각 소스 요소를 IGrouping&lt;TKey, TElement&gt;의 요소에 매핑하는 함수입니다.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">각 그룹의 결과 값을 만드는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each IGrouping{TKey, TElement}.">각 IGrouping{TKey, TElement}에 있는 요소의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" />에서 반환하는 결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" /> 또는 <paramref name="resultSelector" />가 <see langword="null" />(Visual Basic에서는 <see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">각 요소가 그룹과 해당 키에 대한 프로젝션을 나타내는 <paramref name="TResult" /> 형식의 요소 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.">지정된 키 누적기 함수에 따라 시퀀스의 요소를 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다. 키 값은 지정된 비교자를 통해 비교되고 각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">요소를 그룹화할 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">각 요소에 대해 키를 추출하는 함수입니다.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping{Key, TElement}.">각 소스 요소를 IGrouping{Key, TElement}의 요소에 매핑하는 함수입니다.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">각 그룹의 결과 값을 만드는 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each IGrouping{TKey, TElement}.">각 IGrouping{TKey, TElement}에 있는 요소의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" />에서 반환하는 결과 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" /> 또는 <paramref name="resultSelector" />가 <see langword="null" />(Visual Basic에서는 <see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">각 요소가 그룹과 해당 키에 대한 프로젝션을 나타내는 <paramref name="TResult" /> 형식의 요소 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="This GroupJoin overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">이 GroupJoin 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="inner" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="This GroupJoin overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">이 GroupJoin 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="inner" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on equality of keys and groups the results. The default equality comparer is used to compare keys.">키가 같은지 여부에 따라 두 시퀀스의 요소를 병렬로 연관시키고 결과를 그룹화합니다. 기본 같음 비교자를 사용하여 키를 비교합니다.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">조인할 첫 번째 시퀀스입니다.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">첫 번째 시퀀스에 조인할 시퀀스입니다.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">첫 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">두 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">키 선택기 함수에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">결과 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" /> 또는 <paramref name="outer" /> 또는 <paramref name="inner" /> 또는 <paramref name="outerKeySelector" /> 또는 <paramref name="innerKeySelector" /> 또는 <paramref name="resultSelector" />가 <see langword="null" />(Visual Basic에서는 <see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">두 시퀀스에 대해 그룹화 조인을 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on key equality and groups the results. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">키가 같은지 여부에 따라 두 시퀀스의 요소를 병렬로 연관시키고 결과를 그룹화합니다. 지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />를 사용하여 키를 비교합니다.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">조인할 첫 번째 시퀀스입니다.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">첫 번째 시퀀스에 조인할 시퀀스입니다.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">키를 해시하여 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">첫 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">두 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">키 선택기 함수에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">결과 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" /> 또는 <paramref name="outer" /> 또는 <paramref name="inner" /> 또는 <paramref name="outerKeySelector" /> 또는 <paramref name="innerKeySelector" /> 또는 <paramref name="resultSelector" />가 <see langword="null" />(Visual Basic에서는 <see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">두 시퀀스에 대해 그룹화 조인을 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Intersect overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">이 Intersect 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="first" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Intersect overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">이 Intersect 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="first" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.">기본 같음 비교자로 값을 비교하여 두 병렬 시퀀스의 교집합을 구합니다.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">
        <paramref name="second" />에도 있는 고유 요소가 반환되는 시퀀스입니다.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements that also appear in the first sequence will be returned.">첫 번째 시퀀스에도 있는 고유 요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">두 시퀀스의 교집합을 이루는 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.">지정된 IEqualityComparer{T}로 값을 비교하여 두 병렬 시퀀스의 교집합을 구합니다.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">
        <paramref name="second" />에도 있는 고유 요소가 반환되는 시퀀스입니다.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements that also appear in the first sequence will be returned.">첫 번째 시퀀스에도 있는 고유 요소가 반환되는 시퀀스입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">값을 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">두 시퀀스의 교집합을 이루는 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="This Join overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">이 Join 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="inner" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="This Join overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">이 Join 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="inner" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on matching keys. The default equality comparer is used to compare keys.">일치하는 키를 기준으로 두 시퀀스의 요소를 병렬로 연관시킵니다. 기본 같음 비교자를 사용하여 키를 비교합니다.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">조인할 첫 번째 시퀀스입니다.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">첫 번째 시퀀스에 조인할 시퀀스입니다.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">첫 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">두 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">키 선택기 함수에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">결과 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" /> 또는 <paramref name="outer" /> 또는 <paramref name="inner" /> 또는 <paramref name="outerKeySelector" /> 또는 <paramref name="innerKeySelector" /> 또는 <paramref name="resultSelector" />가 <see langword="null" />(Visual Basic에서는 <see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">두 시퀀스에 대해 내부 조인을 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on matching keys. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">일치하는 키를 기준으로 두 시퀀스의 요소를 병렬로 연관시킵니다. 지정된 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />를 사용하여 키를 비교합니다.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">조인할 첫 번째 시퀀스입니다.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">첫 번째 시퀀스에 조인할 시퀀스입니다.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">키를 해시하여 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">첫 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">두 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">키 선택기 함수에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">결과 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="action" /> 또는 <paramref name="outer" /> 또는 <paramref name="inner" /> 또는 <paramref name="outerKeySelector" /> 또는 <paramref name="innerKeySelector" /> 또는 <paramref name="resultSelector" />가 <see langword="null" />(Visual Basic에서는 <see langword="Nothing" />)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">두 시퀀스에 대해 내부 조인을 수행하여 가져온 <paramref name="TResult" /> 형식 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the last element of a parallel sequence.">병렬 시퀀스의 마지막 요소를 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return the last element from.">마지막 요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The value at the last position in the source sequence.">소스 시퀀스에서 마지막 위치에 있는 값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a parallel sequence that satisfies a specified condition.">병렬 시퀀스에서 지정된 조건에 맞는 마지막 요소를 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element in &lt;paramref name=&quot;source&quot; /&gt; satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" />의 조건에 맞는 <paramref name="predicate" /> 요소가 없는 경우.</exception>
      <returns vsli:raw="The last element in the sequence that passes the test in the specified predicate function.">시퀀스에서 지정된 조건자 함수의 테스트를 통과하는 마지막 요소입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.">병렬 시퀀스의 마지막 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="default() if the source sequence is empty; otherwise, the last element in the sequence.">소스 시퀀스가 비어 있으면 default()이고, 그렇지 않으면 시퀀스의 마지막 요소입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.">병렬 시퀀스에서 특정 조건에 맞는 마지막 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="default() if the sequence is empty or if no elements pass the test in the predicate function; otherwise, the last element that passes the test in the predicate function.">시퀀스가 비어 있거나 조건자 함수의 테스트를 통과하는 요소가 없으면 default()이고, 그렇지 않으면 조건자 함수의 테스트를 통과하는 마지막 요소입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns an Int64 that represents the total number of elements in a parallel sequence.">병렬 시퀀스의 총 요소 수를 나타내는 Int64를 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">개수를 셀 요소가 들어 있는 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">소스의 요소 수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우. 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The computed result is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">계산된 결과가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</exception>
      <returns vsli:raw="The number of elements in the input sequence.">입력 시퀀스의 요소 수입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.">병렬 시퀀스에서 특정 조건에 맞는 요소 수를 나타내는 Int64를 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">개수를 셀 요소가 들어 있는 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">소스의 요소 수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우. 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The computed result is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">계산된 결과가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</exception>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">시퀀스에서 조건자 함수의 조건에 맞는 요소 수를 나타내는 숫자입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements in the source sequence.">소스 시퀀스의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">시퀀스의 각 요소에 대해 변환 함수를 병렬로 호출하고 최대값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">최대값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" />에서 반환하는 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The maximum value in the sequence.">시퀀스의 최대값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" />에 요소가 없는 경우</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">최소값을 확인할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" />에서 반환하는 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" />에 요소가 들어 있지 않으며 <paramref name="TSource" />는 nullable이 아닌 값 형식입니다.</exception>
      <returns vsli:raw="The minimum value in the sequence.">시퀀스의 최소값입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
      <summary vsli:raw="Filters the elements of a ParallelQuery based on a specified type.">지정된 형식에 따라 ParallelQuery의 요소를 필터링합니다.</summary>
      <param name="source" vsli:raw="The sequence with elements to filter.">요소를 필터링할 시퀀스입니다.</param>
      <typeparam name="TResult" vsli:raw="The type to filter the elements of the sequence on.">시퀀스의 요소를 필터링할 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains elements from the input sequence filtered by type.">형식별로 필터링된 입력 시퀀스에서 가져온 요소가 포함된 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in ascending order according to a key.">시퀀스의 요소를 키에 따라 오름차순으로 병렬 정렬합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">정렬할 값의 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">키에 따라 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.">지정된 비교자를 사용하여 시퀀스의 요소를 오름차순으로 병렬 정렬합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">정렬할 값의 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">키를 비교할 IComparer{TKey}입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">키에 따라 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in descending order according to a key.">시퀀스의 요소를 키에 따라 내림차순으로 병렬 정렬합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">정렬할 값의 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.">키에 따라 내림차순으로 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the elements of a sequence in descending order by using a specified comparer.">지정된 비교자를 사용하여 시퀀스의 요소를 내림차순으로 정렬합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">정렬할 값의 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">키를 비교할 IComparer{TKey}입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;KeySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="KeySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.">키에 따라 내림차순으로 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
      <summary vsli:raw="Generates a parallel sequence of integral numbers within a specified range.">지정된 범위 내의 정수 병렬 시퀀스를 생성합니다.</summary>
      <param name="start" vsli:raw="The value of the first integer in the sequence.">시퀀스의 첫 번째 정수 값입니다.</param>
      <param name="count" vsli:raw="The number of sequential integers to generate.">생성할 순차적 정수의 개수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0 -or- &lt;paramref name=&quot;start&quot; /&gt; + &lt;paramref name=&quot;count&quot; /&gt; - 1 is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="count" />가 0보다 작거나 <paramref name="start" /> + <paramref name="count" /> - 1이 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</exception>
      <returns vsli:raw="An IEnumerable&amp;lt;Int32&amp;gt; in C# or IEnumerable(Of Int32) in Visual Basic that contains a range of sequential integral numbers.">순차적 정수 범위가 들어 있는 IEnumerable&lt;Int32&gt;(C#의 경우) 또는 IEnumerable(Of Int32)(Visual Basic의 경우)입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
      <summary vsli:raw="Generates a parallel sequence that contains one repeated value.">반복되는 단일 값이 들어 있는 병렬 시퀀스를 생성합니다.</summary>
      <param name="element" vsli:raw="The value to be repeated.">반복할 값입니다.</param>
      <param name="count" vsli:raw="The number of times to repeat the value in the generated sequence.">생성된 시퀀스에서 값을 반복할 횟수입니다.</param>
      <typeparam name="TResult" vsli:raw="The type of the value to be repeated in the result sequence.">결과 시퀀스에서 반복할 값의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="count" /> 가 0보다 작습니다.</exception>
      <returns vsli:raw="A sequence that contains a repeated value.">반복되는 단일 값이 들어 있는 시퀀스를 생성합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Inverts the order of the elements in a parallel sequence.">병렬 시퀀스의 요소 순서를 반전합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to reverse.">반전할 값의 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence whose elements correspond to those of the input sequence in reverse order.">입력 시퀀스의 요소 순서를 뒤집은 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects in parallel each element of a sequence into a new form.">시퀀스의 각 요소를 새 폼에 병렬로 프로젝션합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">변형 함수를 호출할 값 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements returned by selector.">Selector에서 반환 하는 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 각 요소에 대해 변환 함수를 호출한 결과로 얻어지는 요소가 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
      <summary vsli:raw="Projects in parallel each element of a sequence into a new form by incorporating the element's index.">요소의 인덱스를 통합하여 시퀀스의 각 요소를 새 폼에 병렬로 프로젝션합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">변형 함수를 호출할 값 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements returned by selector.">Selector에서 반환 하는 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query. This condition might occur in streaming scenarios.">
        <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 쿼리에 의해 열거됩니다. 이 조건은 스트리밍 시나리오에서 발생할 수 있습니다.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;, based on the index supplied to &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" />에 공급된 인덱스에 기초하여 <paramref name="source" />의 각 요소에 대해 변환 함수를 호출한 결과로 얻어지는 요소가 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects in parallel each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and flattens the resulting sequences into one sequence.">시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />에 평행으로 투영하고 결과 시퀀스를 단일 시퀀스로 평면화합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">계산할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by selector.">선택기가 반환하는 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 일대다 변형 함수를 호출한 결과로 얻어지는 요소가 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects in parallel each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, and flattens the resulting sequences into one sequence. The index of each source element is used in the projected form of that element.">시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />에 평행으로 투영하고 결과 시퀀스를 단일 시퀀스로 평면화합니다. 각 소스 요소의 인덱스는 해당 요소의 투영된 폼에 사용됩니다.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">계산할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by selector.">선택기가 반환하는 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">
        <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 쿼리에 의해 열거됩니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 일대다 변형 함수를 호출한 결과로 얻어지는 요소가 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.">시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />로 투영하고, 결과 시퀀스를 단일 시퀀스로 평면화한 다음 포함된 각 요소에 대해 결과 선택기 함수를 호출합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">계산할 값의 시퀀스입니다.</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">각 소스 요소에 적용할 변형 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">
        <paramref name="collectionSelector" />에서 수집하는 중간 요소의 형식입니다.</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements in the result sequence.">결과 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">
        <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 쿼리에 의해 열거됩니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; based on the index supplied to &lt;paramref name=&quot;collectionSelector&quot; /&gt;, and then mapping each of those sequence elements and their corresponding source element to a result element.">
        <paramref name="collectionSelector" />에 제공된 인덱스를 기준으로 <paramref name="source" />의 각 요소에 대해 일대다 변환 함수 <paramref name="collectionSelector" />를 호출한 다음 이러한 시퀀스 요소와 해당 소스 요소를 각각 결과 요소에 매핑한 결과로 얻어지는 요소가 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein. The index of each source element is used in the intermediate projected form of that element.">시퀀스의 각 요소를 <see cref="T:System.Collections.Generic.IEnumerable`1" />로 투영하고, 결과 시퀀스를 단일 시퀀스로 평면화한 다음 포함된 각 요소에 대해 결과 선택기 함수를 호출합니다. 각 소스 요소의 인덱스는 해당 요소의 투영된 중간 폼에 사용됩니다.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">계산할 값의 시퀀스입니다.</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">각 소스 요소에 적용할 변형 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">
        <paramref name="collectionSelector" />에서 수집하는 중간 요소의 형식입니다.</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements to return.">반환할 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">
        <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 쿼리에 의해 열거됩니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; based on the index supplied to &lt;paramref name=&quot;collectionSelector&quot; /&gt;, and then mapping each of those sequence elements and their corresponding source element to a result element.">
        <paramref name="collectionSelector" />에 제공된 인덱스를 기준으로 <paramref name="source" />의 각 요소에 대해 일대다 변환 함수 <paramref name="collectionSelector" />를 호출한 다음 이러한 시퀀스 요소와 해당 소스 요소를 각각 결과 요소에 매핑한 결과로 얻어지는 요소가 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This SequenceEqual overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">이 SequenceEqual 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="first" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="Thrown every time this method is called.">이 메서드를 호출할 때마다 throw됩니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This SequenceEqual overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">이 SequenceEqual 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="first" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="Thrown every time this method is called.">이 메서드를 호출할 때마다 throw됩니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.">해당 형식에 대한 기본 같음 비교자를 통해 요소를 비교하여 두 병렬 시퀀스가 서로 같은지 확인합니다.</summary>
      <param name="first" vsli:raw="A sequence to compare to second.">두 번째와 비교할 시퀀스입니다.</param>
      <param name="second" vsli:raw="A sequence to compare to the first input sequence.">첫 번째 입력 시퀀스와 비교할 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 소스 시퀀스의 길이가 같고 해당 형식의 기본 같음 비교자에 따라 상응하는 요소가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.">지정된 IEqualityComparer{T}를 통해 해당 요소를 비교하여 두 병렬 시퀀스가 서로 같은지 확인합니다.</summary>
      <param name="first" vsli:raw="A sequence to compare to &lt;paramref name=&quot;second&quot; /&gt;.">
        <paramref name="second" />와 비교할 시퀀스입니다.</param>
      <param name="second" vsli:raw="A sequence to compare to the first input sequence.">첫 번째 입력 시퀀스와 비교할 시퀀스입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to use to compare elements.">요소를 비교하는 데 사용할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 소스 시퀀스의 길이가 같고 해당 형식의 기본 같음 비교자에 따라 상응하는 요소가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.">병렬 시퀀스의 유일한 요소를 반환하고, 시퀀스의 요소가 정확히 하나가 아니면 예외를 throw합니다.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">단일 요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The input sequence contains more than one element. -or- The input sequence is empty.">입력 시퀀스에 요소가 두 개 이상 있습니다. -또는- 입력 시퀀스가 비어 있는 경우</exception>
      <returns vsli:raw="The single element of the input sequence.">입력 시퀀스의 단일 요소입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.">병렬 시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하고, 이러한 요소가 둘 이상 있으면 예외를 throw합니다.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">단일 요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;. -or- More than one element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="predicate" />의 조건을 충족하는 요소가 없는 경우 또는 <paramref name="predicate" />의 조건을 충족하는 요소가 둘 이상인 경우</exception>
      <returns vsli:raw="The single element of the input sequence that satisfies a condition.">입력 시퀀스에서 특정 조건에 맞는 단일 요소입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.">병렬 시퀀스의 유일한 요소를 반환하거나 시퀀스가 비어 있으면 기본값을 반환합니다. 시퀀스에 요소가 둘 이상 있으면 예외를 throw합니다.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">단일 요소가 반환되는 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; has more than one element.">
        <paramref name="source" />에 둘 이상의 요소가 있는 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="The single element of the input sequence, or default() if the sequence contains no elements.">입력 시퀀스의 단일 요소이거나, 시퀀스에 요소가 없으면 default()입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.">병렬 시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하거나 이러한 요소가 없으면 기본값을 반환합니다. 조건에 맞는 요소가 둘 이상 있으면 예외를 throw합니다.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">단일 요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is empty or multiple elements are returned.">
        <paramref name="source" />가 비어 있거나 여러 요소가 반환됩니다.</exception>
      <returns vsli:raw="The single element of the input sequence that satisfies the condition, or default() if no such element is found.">입력 시퀀스에서 조건에 맞는 단일 요소이거나, 이러한 요소가 없으면 default()입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.">병렬 시퀀스에서 지정된 수의 요소를 건너뛴 다음 나머지 요소를 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">요소가 반환되는 시퀀스입니다.</param>
      <param name="count" vsli:raw="The number of elements to skip before returning the remaining elements.">나머지 요소를 반환하기 전에 건너뛸 요소 수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Count is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;">개수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains the elements that occur after the specified index in the input sequence.">입력 시퀀스에서 지정된 인덱스 뒤에 나오는 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.">지정된 조건이 true이면 병렬 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.">입력 시퀀스에서 조건자에 지정된 테스트를 통과하지 않는 급수의 첫 요소부터 시작되는 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements. The element's index is used in the logic of the predicate function.">지정된 조건이 true이면 병렬 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다. 조건자 함수의 논리에 요소의 인덱스가 사용됩니다.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">각 소스 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">
        <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 쿼리에 의해 열거됩니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.">입력 시퀀스에서 조건자에 지정된 테스트를 통과하지 않는 급수의 첫 요소부터 시작되는 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Decimal.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Double.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Decimal.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Double.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or-  One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Single.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Single.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Decimal.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Double.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements in the source sequence.">소스 시퀀스의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Decimal.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Double.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Int64.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or-  One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Single.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">합을 계산할 값의 시퀀스입니다.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">각 요소에 적용할 변환 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="selector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">합계가 <see cref="F:System.Single.MaxValue" />보다 큰 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="The sum of the projected values in the sequence.">시퀀스에 있는 프로젝션된 값의 합입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns a specified number of contiguous elements from the start of a parallel sequence.">병렬 시퀀스 시작 위치에서 지정된 수의 연속 요소를 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">요소가 반환되는 시퀀스입니다.</param>
      <param name="count" vsli:raw="The number of elements to return.">반환할 요소 수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains the specified number of elements from the start of the input sequence.">입력 시퀀스의 시작 위치부터 지정된 수의 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns elements from a parallel sequence as long as a specified condition is true.">지정된 조건이 true인 동안 병렬 시퀀스에서 요소를 반환합니다.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.">입력 시퀀스에서 요소가 테스트를 더 이상 통과하지 않는 위치보다 앞에 나오는 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Returns elements from a parallel sequence as long as a specified condition is true. The element's index is used in the logic of the predicate function.">지정된 조건이 true인 동안 병렬 시퀀스에서 요소를 반환합니다. 조건자 함수의 논리에 요소의 인덱스가 사용됩니다.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">요소가 반환되는 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">각 소스 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by this query.">이 쿼리에 의해 <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 열거됩니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains elements from the input sequence that occur before the element at which the test no longer passes.">입력 시퀀스에서 요소가 테스트를 더 이상 통과하지 않는 위치보다 앞에 나오는 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.">시퀀스의 요소를 키에 따라 오름차순으로 다시 병렬 정렬합니다.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">키에 따라 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.">시퀀스의 요소를 지정된 비교자를 사용하여 오름차순으로 다시 병렬 정렬합니다.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">키를 비교할 IComparer{TKey}입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">키에 따라 정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.">시퀀스의 요소를 키에 따라 내림차순으로 다시 병렬 정렬합니다.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence whose elements are sorted descending according to a key.">요소가 키에 따라 내림차순으로 정렬된 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.">시퀀스의 요소를 지정된 비교자를 사용하여 내림차순으로 다시 병렬 정렬합니다.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">키를 비교할 IComparer{TKey}입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence whose elements are sorted descending according to a key.">요소가 키에 따라 내림차순으로 정렬된 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Creates an array from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">
        <see cref="T:System.Linq.ParallelQuery`1" />을 사용하여 배열을 만듭니다.</summary>
      <param name="source" vsli:raw="A sequence to create an array from.">배열을 만드는 데 사용할 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="An array that contains the elements from the input sequence.">입력 시퀀스의 요소가 들어 있는 배열입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function.">지정된 키 선택기 함수에 따라 <see cref="T:System.Collections.Generic.Dictionary`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />를 만듭니다.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.Dictionary`2" />를 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">각 요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" />는 null을 참조하는(Visual Basic의 Nothing) 키를 생성합니다. -또는- <paramref name="keySelector" />가 두 요소에 대해 중복된 키를 생성하는 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values.">키와 값이 들어 있는 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function and key comparer.">지정된 키 선택기 함수와 키 비교자에 따라 <see cref="T:System.Linq.ParallelQuery`1" />에서 <see cref="T:System.Collections.Generic.Dictionary`2" />를 만듭니다.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.Dictionary`2" />를 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">각 요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" />는 null을 참조하는(Visual Basic의 Nothing) 키를 생성합니다. -또는- <paramref name="keySelector" />가 두 요소에 대해 중복된 키를 생성하는 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values.">키와 값이 들어 있는 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to specified key selector and element selector functions.">지정된 키 선택기와 요소 선택기 함수에 따라 <see cref="T:System.Collections.Generic.Dictionary`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />를 만듭니다.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.Dictionary`2" />를 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">각 요소에서 키를 추출하는 함수입니다.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" />에서 반환하는 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" />는 null을 참조하는(Visual Basic의 Nothing) 키를 생성합니다. -또는- <paramref name="keySelector" />가 두 요소에 대해 중복된 키를 생성하는 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">입력 시퀀스에서 선택한 <paramref name="TElement" /> 형식 값이 들어 있는 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function, a comparer, and an element selector function.">지정된 키 선택기 함수, 비교자 및 요소 선택기 함수에 따라 <see cref="T:System.Collections.Generic.Dictionary`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />를 만듭니다.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.Dictionary`2" />를 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">각 요소에서 키를 추출하는 함수입니다.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" />에서 반환하는 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" />는 null을 참조하는(Visual Basic의 Nothing) 키를 생성합니다. -또는- <paramref name="keySelector" />가 두 요소에 대해 중복된 키를 생성하는 경우 또는 쿼리를 확인하는 동안 하나 이상의 예외가 발생한 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">입력 시퀀스에서 선택한 <paramref name="TElement" /> 형식 값이 들어 있는 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from an &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">
        <see cref="T:System.Linq.ParallelQuery`1" />에서 <see cref="T:System.Collections.Generic.List`1" />을 만듭니다.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from.">
        <see cref="T:System.Collections.Generic.List`1" />를 만드는 데 사용할 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 요소의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that contains elements from the input sequence.">입력 시퀀스의 요소가 들어 있는 <see cref="T:System.Collections.Generic.List`1" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function.">지정된 키 선택기 함수에 따라 <see cref="T:System.Linq.ILookup`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />을 만듭니다.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">
        <see cref="T:System.Linq.ILookup`2" />을 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">각 요소에서 키를 추출하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains keys and values.">키와 값이 들어 있는 <see cref="T:System.Linq.ILookup`2" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function and key comparer.">지정된 키 선택기 함수와 키 비교자에 따라 <see cref="T:System.Linq.ILookup`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />을 만듭니다.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">
        <see cref="T:System.Linq.ILookup`2" />을 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">각 요소에서 키를 추출하는 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains keys and values.">키와 값이 들어 있는 <see cref="T:System.Linq.ILookup`2" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to specified key selector and element selector functions.">지정된 키 선택기와 요소 선택기 함수에 따라 <see cref="T:System.Linq.ILookup`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />을 만듭니다.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">
        <see cref="T:System.Linq.ILookup`2" />을 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">각 요소에서 키를 추출하는 함수입니다.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" />에서 반환하는 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">입력 시퀀스에서 선택한 <paramref name="TElement" /> 형식 값이 포함된 <see cref="T:System.Linq.ILookup`2" />입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function, a comparer and an element selector function.">지정된 키 선택기 함수, 비교자 및 요소 선택기 함수에 따라 <see cref="T:System.Linq.ILookup`2" />를 사용하여 <see cref="T:System.Linq.ParallelQuery`1" />을 만듭니다.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">
        <see cref="T:System.Linq.ILookup`2" />을 만드는 데 사용할 시퀀스입니다.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">각 요소에서 키를 추출하는 함수입니다.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">키를 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">
        <paramref name="elementSelector" />에서 반환하는 값의 형식입니다.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="keySelector" /> 또는 <paramref name="elementSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A Lookup&amp;lt;(Of &amp;lt;(TKey, TElement&amp;gt;)&amp;gt;) that contains values of type TElement selected from the input sequence.">입력 시퀀스에서 선택한 TElement 형식의 값이 들어 있는 Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;)입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Union overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">이 Union 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="first" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Union overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">이 Union 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="first" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set union of two parallel sequences by using the default equality comparer.">기본 같음 비교자를 사용하여 두 병렬 시퀀스의 합집합을 구합니다.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements form the first set for the union.">해당 고유 요소가 합집합의 첫 번째 집합을 이루는 시퀀스입니다.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements form the second set for the union.">해당 고유 요소가 합집합의 두 번째 집합을 이루는 시퀀스입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains the elements from both input sequences, excluding duplicates.">두 입력 시퀀스의 모든 요소가 들어 있는 시퀀스이며, 중복 요소는 제외됩니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.">지정된 IEqualityComparer{T}를 사용하여 두 병렬 시퀀스의 합집합을 구합니다.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements form the first set for the union.">해당 고유 요소가 합집합의 첫 번째 집합을 이루는 시퀀스입니다.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements form the second set for the union.">해당 고유 요소가 합집합의 두 번째 집합을 이루는 시퀀스입니다.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">값을 비교할 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">입력 시퀀스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 또는 <paramref name="second" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains the elements from both input sequences, excluding duplicates.">두 입력 시퀀스의 모든 요소가 들어 있는 시퀀스이며, 중복 요소는 제외됩니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters in parallel a sequence of values based on a predicate.">조건자에 따라 값의 시퀀스를 병렬로 필터링합니다.</summary>
      <param name="source" vsli:raw="A sequence to filter.">필터링할 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">소스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains elements from the input sequence that satisfy the condition.">입력 시퀀스에서 조건에 맞는 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Filters in parallel a sequence of values based on a predicate. Each element's index is used in the logic of the predicate function.">조건자에 따라 값의 시퀀스를 병렬로 필터링합니다. 조건자 함수의 논리에 각 요소의 인덱스가 사용됩니다.</summary>
      <param name="source" vsli:raw="A sequence to filter.">필터링할 시퀀스입니다.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">소스 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> 또는 <paramref name="predicate" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">
        <see cref="F:System.Int32.MaxValue" />개 이상의 요소가 쿼리에 의해 열거됩니다.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that contains elements from the input sequence that satisfy the condition.">입력 시퀀스에서 조건에 맞는 요소가 들어 있는 시퀀스입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; to associate with the query.">쿼리와 연결할 <see cref="T:System.Threading.CancellationToken" />을 설정합니다.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">옵션을 설정할 ParallelQuery입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">취소 토큰입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;paramref name=&quot;cancellationToken&quot; /&gt; has been disposed.">
        <paramref name="cancellationToken" />과 연결된 <see cref="T:System.Threading.CancellationTokenSource" />는 삭제되었습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt; is used multiple times in the query.">
        <paramref name="WithCancellation" />은 쿼리에서 여러 번 사용됩니다.</exception>
      <returns vsli:raw="A ParallelQuery representing the same query as &lt;paramref name=&quot;source&quot; /&gt;, but with the registered cancellation token.">소스와 같은 쿼리를 나타내고 등록된 취소 토큰을 포함하는 ParallelQuery입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Sets the degree of parallelism to use in a query. Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.">쿼리에서 사용할 병렬 처리 수준을 설정합니다. 병렬 처리 수준은 쿼리를 처리하기 위해 동시에 실행되는 작업의 최대 수입니다.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the limit on the degrees of parallelism.">병렬 처리 수준에 대한 제한을 설정할 ParallelQuery입니다.</param>
      <param name="degreeOfParallelism" vsli:raw="The degree of parallelism for the query.">쿼리에 사용할 병렬 처리 수준입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;degreeOfParallelism&quot; /&gt; is less than 1 or greater than 512.">
        <paramref name="degreeOfParallelism" />이 1보다 작거나 512보다 큽니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="WithDegreeOfParallelism is used multiple times in the query.">WithDegreeOfParallelism은 쿼리에서 여러 번 사용됩니다.</exception>
      <returns vsli:raw="ParallelQuery representing the same query as source, with the limit on the degrees of parallelism set.">소스와 같은 쿼리를 나타내고 병렬 처리 수준 제한이 설정된 ParallelQuery입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
      <summary vsli:raw="Sets the execution mode of the query.">쿼리의 실행 모드를 설정합니다.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">옵션을 설정할 ParallelQuery입니다.</param>
      <param name="executionMode" vsli:raw="The mode in which to execute the query.">쿼리를 실행할 모드입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;executionMode&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Linq.ParallelExecutionMode&quot; /&gt; value.">
        <paramref name="executionMode" />는 유효한 <see cref="T:System.Linq.ParallelExecutionMode" /> 값이 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="WithExecutionMode is used multiple times in the query.">WithExecutionMode는 쿼리에서 여러 번 사용됩니다.</exception>
      <returns vsli:raw="ParallelQuery representing the same query as source, but with the registered execution mode.">소스와 같은 쿼리를 나타내고 등록된 실행 모드를 포함하는 ParallelQuery입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
      <summary vsli:raw="Sets the merge options for this query, which specify how the query will buffer output.">쿼리가 출력을 버퍼링하는 방식을 지정하는 병합 옵션을 이 쿼리에 대해 설정합니다.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">옵션을 설정할 ParallelQuery입니다.</param>
      <param name="mergeOptions" vsli:raw="The merge options to set for this query.">이 쿼리에 대해 설정할 병합 옵션입니다.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" />의 요소 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mergeOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Linq.ParallelMergeOptions&quot; /&gt; value.">
        <paramref name="mergeOptions" />는 유효한 <see cref="T:System.Linq.ParallelMergeOptions" /> 값이 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;WithMergeOptions&quot; /&gt; is used multiple times in the query.">
        <paramref name="WithMergeOptions" />은 쿼리에서 여러 번 사용됩니다.</exception>
      <returns vsli:raw="ParallelQuery representing the same query as source, but with the registered merge options.">소스와 같은 쿼리를 나타내고 등록된 병합 옵션을 포함하는 ParallelQuery입니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="This Zip overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">이 Zip 오버로드는 호출되면 안 됩니다. 이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="first" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="second" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <typeparam name="TFirst" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TSecond" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">이 형식 매개 변수는 사용되지 않습니다.</typeparam>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">이 메서드가 호출될 때 발생하는 예외입니다.</exception>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">이 오버로드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="Merges in parallel two sequences by using the specified predicate function.">지정된 조건자 함수를 사용하여 두 시퀀스를 병렬로 병합합니다.</summary>
      <param name="first" vsli:raw="The first sequence to zip.">zip을 수행할 첫 번째 시퀀스입니다.</param>
      <param name="second" vsli:raw="The second sequence to zip.">zip을 수행할 두 번째 시퀀스입니다.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</param>
      <typeparam name="TFirst" vsli:raw="The type of the elements of the first sequence.">첫 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TSecond" vsli:raw="The type of the elements of the second sequence.">두 번째 시퀀스 요소의 형식입니다.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the return elements.">반환 요소의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> 또는 <paramref name="second" /> 또는 <paramref name="resultSelector" />는 null 참조(Visual Basic에서는 Nothing)입니다.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">
        <paramref name="WithCancellation" /> 통해 전달된 토큰으로 쿼리가 취소된 경우</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">쿼리를 확인하는 동안 하나 이상의 예외가 발생했습니다.</exception>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing &lt;paramref name=&quot;resultSelector&quot; /&gt; pairwise on two sequences. If the sequence lengths are unequal, this truncates to the length of the shorter sequence.">두 시퀀스에 대해 <paramref name="TResult" /> pairwise를 수행하여 가져온 <paramref name="resultSelector" /> 형식 요소가 들어 있는 시퀀스입니다. 시퀀스 길이가 같지 않으면 짧은 시퀀스 길이에 맞춰 긴 시퀀스를 자릅니다.</returns>
    </member>
    <member name="T:System.Linq.ParallelExecutionMode">
      <summary vsli:raw="The query execution mode is a hint that specifies how the system should handle performance trade-offs when parallelizing queries.">쿼리 실행 모드는 쿼리를 병렬화할 때 시스템에서 성능 저하를 처리하는 방식을 지정하는 힌트입니다.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.Default">
      <summary vsli:raw="This is the default setting. PLINQ will examine the query's structure and will only parallelize the query if will likely result in speedup. If the query structure indicates that speedup is not likely to be obtained, then PLINQ will execute the query as an ordinary LINQ to Objects query.">이 값은 기본 설정입니다. PLINQ는 쿼리 구조를 검사하여 속도가 개선될 가능성이 있는 경우만 쿼리를 병렬화합니다. 쿼리 구조를 검사한 결과 속도 개선의 가능성이 없는 경우 PLINQ는 쿼리를 일반 LINQ to Objects 쿼리로 실행합니다.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.ForceParallelism">
      <summary vsli:raw="Parallelize the entire query, even if that means using high-overhead algorithms. Use this flag in cases where you know that parallel execution of the query will result in speedup, but PLINQ in the Default mode would execute it as sequential.">오버헤드가 높은 알고리즘을 사용해야 하는 경우에도 전체 쿼리를 병렬화합니다. 쿼리의 병렬 실행으로 속도가 개선될 가능성이 있는 경우에만 이 플래그를 사용합니다. 그러나 기본 모드에서 PLINQ를 사용하면 쿼리가 순차적으로 실행됩니다.</summary>
    </member>
    <member name="T:System.Linq.ParallelMergeOptions">
      <summary vsli:raw="Specifies the preferred type of output merge to use in a query. In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence. This is a hint only, and may not be respected by the system when parallelizing all queries.">쿼리에서 사용할 출력 병합 의 기본 형식을 지정 합니다. 다시 말해, PLINQ가 다양한 파티션의 결과를 단일 결과 시퀀스로 병합하는 방법을 나타냅니다. 이것은 힌트일 뿐이며 모든 쿼리를 병렬화하는 경우 시스템에서 무시될 수 있습니다.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.AutoBuffered">
      <summary vsli:raw="Use a merge with output buffers of a size chosen by the system. Results will accumulate into an output buffer before they are available to the consumer of the query.">시스템에서 선택한 크기의 출력 버퍼를 이용하는 병합을 사용합니다. 이렇게 하면 결과가 쿼리 소비자에게 제공되기 전에 출력 버퍼에 누적됩니다.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.Default">
      <summary vsli:raw="Use the default merge type, which is AutoBuffered.">기본 병합 형식인 AutoBuffered를 사용합니다.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.FullyBuffered">
      <summary vsli:raw="Use a merge with full output buffers. The system will accumulate all of the results before making any of them available to the consumer of the query.">전체 출력 버퍼를 이용하는 병합을 사용합니다. 시스템에서 결과를 쿼리 소비자에게 제공하기 전에 모든 결과를 누적합니다.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.NotBuffered">
      <summary vsli:raw="Use a merge without output buffers. As soon as result elements have been computed, make that element available to the consumer of the query.">출력 버퍼를 이용하지 않는 병합을 사용합니다. 결과 요소가 계산되는 즉시 쿼리 소비자에게 제공됩니다.</summary>
    </member>
    <member name="T:System.Linq.ParallelQuery">
      <summary vsli:raw="Represents a parallel sequence.">병렬 시퀀스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Linq.ParallelQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">시퀀스를 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">시퀀스를 반복하는 열거자입니다.</returns>
    </member>
    <member name="T:System.Linq.ParallelQuery`1">
      <summary vsli:raw="Represents a parallel sequence.">병렬 시퀀스를 나타냅니다.</summary>
      <typeparam name="TSource" vsli:raw="The type of element in the source sequence.">소스 시퀀스의 요소 형식입니다.</typeparam>
    </member>
    <member name="M:System.Linq.ParallelQuery`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">시퀀스를 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">시퀀스를 반복하는 열거자입니다.</returns>
    </member>
  </members>
</doc>