<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary>
        <see langword="Shell" /> 함수를 호출할 때 호출된 프로그램에 사용할 창 스타일을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary>창이 숨겨지고 포커스가 숨겨진 창에 전달됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbHide" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary>창이 포커스가 있는 전체 화면으로 표시됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbMaximizedFocus" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary>창이 포커스가 있는 아이콘으로 표시됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbMinimizedFocus" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary>창이 아이콘으로 표시됩니다. 현재 활성 창은 활성 상태로 남습니다. 이 멤버는 Visual Basic 상수 <see langword="vbMinimizedNoFocus" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary>창에 포커스가 생기며 원래 크기와 위치로 복원됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbNormalFocus" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary>창이 가장 최근 크기와 위치로 복원됩니다. 현재 활성 창은 활성 상태로 남습니다. 이 멤버는 Visual Basic 상수 <see langword="vbNormalNoFocus" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary>
        <see langword="CallByName" /> 함수를 호출할 때 호출되는 프로시저 형식을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary>속성 값을 가져옵니다.  이 멤버는 Visual Basic 상수 <see langword="vbGet" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary>개체 속성 값을 결정합니다. 이 멤버는 Visual Basic 상수 <see langword="vbLet" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary>메서드를 호출합니다.  이 멤버는 Visual Basic 상수 <see langword="vbMethod" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary>속성 값을 결정합니다.  이 멤버는 Visual Basic 상수 <see langword="vbSet" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary>Visual Basic <see langword="Collection" />은 하나의 단위로 참조할 수 있는 정렬된 항목 집합입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary>새 Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> 개체를 만들어 반환합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary>
        <see langword="Collection" /> 개체에 요소를 추가합니다.</summary>
      <param name="Item">필수 요소. 컬렉션에 추가할 요소를 지정하는 임의의 유형의 개체입니다.</param>
      <param name="Key">선택 사항입니다. 위치 인덱스 대신 컬렉션의 이 새 요소에 액세스하는 데 사용할 수 있는 키 문자열을 지정하는 고유 <see langword="String" /> 식입니다.</param>
      <param name="Before">선택 사항입니다. 컬렉션에서 상대적 위치를 지정하는 식입니다. 컬렉션에서 추가되는 요소는 <paramref name="Before" /> 인수에 의해 식별되는 요소 앞에 옵니다. <paramref name="Before" />가 숫자 식인 경우 이 인수는 1에서 컬렉션의 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 속성 값 사이의 숫자여야 합니다. <paramref name="Before" />가 <see langword="String" /> 식인 경우 이 인수는 참조되는 요소가 컬렉션에 추가될 때 지정한 키 문자열과 일치해야 합니다. <paramref name="Before" />와 <paramref name="After" />를 둘 다 지정할 수는 없습니다.</param>
      <param name="After">선택 사항입니다. 컬렉션에서 상대적 위치를 지정하는 식입니다. 컬렉션에서 추가되는 요소는 <paramref name="After" /> 인수에 의해 식별되는 요소 뒤에 옵니다. <paramref name="After" />가 숫자 식인 경우 이 인수는 1에서 컬렉션의 <see langword="Count" /> 속성 값 사이의 숫자여야 합니다. <paramref name="After" />가 <see langword="String" /> 식인 경우 이 인수는 참조되는 요소가 컬렉션에 추가될 때 지정한 키 문자열과 일치해야 합니다. <paramref name="Before" />와 <paramref name="After" />를 둘 다 지정할 수는 없습니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary>Visual Basic <see langword="Collection" /> 개체의 모든 요소를 삭제합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary>Visual Basic <see langword="Collection" /> 개체에 특정 키를 가진 요소가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="Key">필수 요소. 컬렉션 요소를 검색할 키를 지정하는 <see langword="String" /> 식입니다.</param>
      <returns>Visual Basic <see langword="Collection" /> 개체에 특정 키가 있는 요소가 포함되어 있으면 <see langword="true" />이고. 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary>컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용할 수 있는 열거자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary>
        <see langword="Collection" /> 개체에서 요소를 제거합니다.</summary>
      <param name="Index">컬렉션 요소의 위치를 지정하는 숫자 식입니다. <paramref name="Index" />는 1에서 컬렉션의 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 속성 값 사이의 숫자여야 합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary>
        <see langword="Collection" /> 개체에서 요소를 제거합니다.</summary>
      <param name="Key">위치 인덱스 대신 컬렉션의 요소에 액세스하는 데 사용할 수 있는 키 문자열을 지정하는 고유 <see langword="String" /> 식입니다. <paramref name="Key" />는 요소가 컬렉션에 추가될 때 지정한 <paramref name="Key" /> 인수와 일치해야 합니다.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary>컬렉션에 있는 요소 수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 요소 수입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary>위치나 키를 기준으로 <see langword="Collection" /> 개체의 특정 요소를 가져옵니다.</summary>
      <param name="Index">컬렉션 요소의 위치를 지정하는 숫자 식입니다. <paramref name="Index" />는 1에서 컬렉션의 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 속성 값 사이의 숫자여야 합니다. 또는 (B) 컬렉션 요소의 키 문자열이나 위치를 지정하는 <see langword="Object" /> 식입니다.</param>
      <returns>
        <see langword="Collection" />위치나 키를 기준으로 하는 개체의 특정 요소입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary>위치나 키를 기준으로 <see langword="Collection" /> 개체의 특정 요소를 가져옵니다.</summary>
      <param name="Index">컬렉션 요소의 위치를 지정하는 숫자 식입니다. <paramref name="Index" />는 1에서 컬렉션의 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 속성 값 사이의 숫자여야 합니다. 또는 (B) 컬렉션 요소의 키 문자열이나 위치를 지정하는 <see langword="Object" /> 식입니다.</param>
      <returns>
        <see langword="Collection" />위치나 키를 기준으로 하는 개체의 특정 요소입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary>위치나 키를 기준으로 <see langword="Collection" /> 개체의 특정 요소를 가져옵니다.</summary>
      <param name="Key">위치 인덱스 대신 컬렉션의 요소에 액세스하는 데 사용할 수 있는 키 문자열을 지정하는 고유 <see langword="String" /> 식입니다. <paramref name="Key" />는 요소가 컬렉션에 추가될 때 지정한 <paramref name="Key" /> 인수와 일치해야 합니다.</param>
      <returns>
        <see langword="Collection" />위치나 키를 기준으로 하는 개체의 특정 요소입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary>
        <see langword="ComClassAttribute" /> 특성은 메타데이터를 추가하도록 컴파일러에 지시하여 클래스를 COM 개체로 노출할 수 있도록 합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary>
        <see langword="ComClassAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary>
        <see langword="ComClassAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="_ClassID">클래스를 고유하게 식별하는 데 사용되는 <see langword="ClassID" /> 속성 값을 초기화합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary>
        <see langword="ComClassAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="_ClassID">클래스를 고유하게 식별하는 데 사용되는 <see langword="ClassID" /> 속성 값을 초기화합니다.</param>
      <param name="_InterfaceID">인터페이스를 고유하게 식별하는 데 사용되는 <see langword="InterfaceID" /> 속성 값을 초기화합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary>
        <see langword="ComClassAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="_ClassID">클래스를 고유하게 식별하는 데 사용되는 <see langword="ClassID" /> 속성 값을 초기화합니다.</param>
      <param name="_InterfaceID">인터페이스를 고유하게 식별하는 데 사용되는 <see langword="InterfaceID" /> 속성 값을 초기화합니다.</param>
      <param name="_EventId">이벤트를 고유하게 식별하는 데 사용되는 <see langword="EventID" /> 속성 값을 초기화합니다.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary>클래스를 고유하게 식별하는 데 사용되는 클래스 ID를 가져옵니다.</summary>
      <returns>읽기 전용입니다. COM 개체를 만들 때 컴파일러에서 클래스를 고유하게 식별하는 데 사용할 수 있는 문자열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary>이벤트를 고유하게 식별하는 데 사용되는 이벤트 ID를 가져옵니다.</summary>
      <returns>읽기 전용입니다. COM 개체를 만들 때 컴파일러에서 해당 클래스의 이벤트를 고유하게 식별하는 데 사용할 수 있는 문자열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary>인터페이스를 고유하게 식별하는 데 사용되는 인터페이스 ID를 가져옵니다.</summary>
      <returns>읽기 전용입니다. COM 개체를 만들 때 컴파일러에서 해당 클래스의 인터페이스를 고유하게 식별하는 데 사용할 수 있는 문자열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary>COM 인터페이스 이름이 해당 클래스나 기본 클래스의 다른 멤버를 숨긴다는 것을 나타냅니다.</summary>
      <returns>COM 인터페이스 이름이 해당 클래스나 기본 클래스의 다른 멤버를 숨긴다는 것을 나타내는 <see langword="Boolean" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary>비교 함수를 호출할 때 문자열이 비교되는 방법을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary>이진 비교를 수행합니다. 이 멤버는 Visual Basic 상수 <see langword="vbBinaryCompare" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary>텍스트 비교를 수행합니다. 이 멤버는 Visual Basic 상수 <see langword="vbTextCompare" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary>지정된 개체에 해당하는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Boolean" /> 값으로 변환할 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Boolean" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary>지정된 문자열에 해당하는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Boolean" /> 값으로 변환할 문자열입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Boolean" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary>지정된 개체에 해당하는 <see langword="Byte" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Byte" /> 값으로 변환할 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Byte" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary>지정된 문자열에 해당하는 <see langword="Byte" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Byte" /> 값으로 변환할 문자열입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Byte" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary>지정된 개체에 해당하는 <see langword="CharArray" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="CharArray" /> 값으로 변환할 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="CharArray" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary>지정된 문자열에 해당하는 <see langword="CharArray" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="CharArray" /> 값으로 변환할 문자열입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="CharArray" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary>지정된 개체에 해당하는 <see langword="Char" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Char" /> 값으로 변환할 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Char" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary>지정된 문자열에 해당하는 <see langword="Char" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Char" /> 값으로 변환할 문자열입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Char" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary>다양한 유형 변환을 수행하는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary>개체를 지정된 형식으로 변환합니다.</summary>
      <param name="Expression">변환할 개체입니다.</param>
      <param name="TargetType">개체를 변환할 대상 형식입니다.</param>
      <returns>지정된 대상 형식의 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary>개체를 지정된 형식으로 변환합니다.</summary>
      <param name="Expression">변환할 개체입니다.</param>
      <param name="TargetType">개체를 변환할 대상 형식입니다.</param>
      <returns>지정된 대상 형식의 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary>지정된 바이트 수를 사용하여 <see cref="T:System.Char" /> 값을 문자열로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="Char" /> 값입니다.</param>
      <param name="Count">
        <see langword="Char" /> 값의 바이트 수입니다.</param>
      <returns>지정된 값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary>
        <see cref="T:System.Char" /> 배열을 문자열로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="Char" /> 배열입니다.</param>
      <returns>지정된 배열의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Char" /> 배열의 하위 집합을 문자열로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="Char" /> 배열입니다.</param>
      <param name="StartIndex">시작 위치의 인덱스(0부터 시작)입니다.</param>
      <param name="Length">하위 집합의 길이(바이트)입니다.</param>
      <returns>시작 위치에서 지정된 길이까지의 주어진 배열에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary>개체를 <see cref="T:System.Boolean" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>
        <see langword="Boolean" /> 값입니다. 개체가 null이면 <see langword="False" />이고, 그렇지 않으면 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary>문자열을 <see cref="T:System.Boolean" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>
        <see langword="Boolean" /> 값입니다. 문자열이 null이면 <see langword="False" />이고, 그렇지 않으면 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary>개체를 <see cref="T:System.Byte" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see langword="Byte" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary>문자열을 <see cref="T:System.Byte" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see langword="Byte" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary>개체를 <see cref="T:System.Char" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see langword="Char" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary>문자열을 <see cref="T:System.Char" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see langword="Char" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary>개체를 1차원 <see cref="T:System.Char" /> 배열로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>1차원 <see langword="Char" /> 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary>문자열을 1차원 <see cref="T:System.Char" /> 배열로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>1차원 <see langword="Char" /> 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary>개체를 <see cref="T:System.DateTime" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see langword="DateTime" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary>문자열을 <see cref="T:System.DateTime" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see langword="DateTime" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary>
        <see cref="T:System.Boolean" /> 값을 <see cref="T:System.Decimal" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 부울 값입니다.</param>
      <returns>부울 값의 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary>개체를 <see cref="T:System.Decimal" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary>문자열을 <see cref="T:System.Decimal" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary>개체를 <see cref="T:System.Double" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary>문자열을 <see cref="T:System.Double" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary>개체를 제네릭 형식 <paramref name="T" />로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <typeparam name="T">
        <paramref name="Value" />를 변환할 형식입니다.</typeparam>
      <returns>제네릭 형식 <paramref name="T" />의 개체 또는 구조체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary>개체를 정수 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see langword="int" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary>문자열을 정수 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see langword="int" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary>개체를 <see langword="Long" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see langword="Long" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary>문자열을 <see langword="Long" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see langword="Long" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary>개체를 <see cref="T:System.SByte" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see langword="SByte" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary>문자열을 <see cref="T:System.SByte" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see langword="SByte" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary>개체를 <see langword="Short" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see langword="Short" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary>문자열을 <see langword="Short" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see langword="Short" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary>개체를 <see cref="T:System.Single" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see cref="T:System.Single" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary>
        <see cref="T:System.String" />을 <see cref="T:System.Single" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see cref="T:System.Single" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary>
        <see cref="T:System.Boolean" /> 값을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="Boolean" /> 값입니다.</param>
      <returns>
        <see langword="String" /> 값의 <see langword="Boolean" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary>
        <see cref="T:System.Byte" /> 값을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="Byte" /> 값입니다.</param>
      <returns>
        <see langword="String" /> 값의 <see langword="Byte" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary>
        <see cref="T:System.Char" /> 값을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="Char" /> 값입니다.</param>
      <returns>
        <see langword="String" /> 값의 <see langword="Char" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary>
        <see cref="T:System.DateTime" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="DateTime" /> 값입니다.</param>
      <returns>
        <see langword="String" /> 값의 <see langword="DateTime" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary>
        <see cref="T:System.Decimal" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="Decimal" /> 값입니다.</param>
      <returns>
        <see langword="String" /> 값의 <see langword="Decimal" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>지정된 숫자 서식을 사용하여 <see cref="T:System.Decimal" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="decimal" /> 값입니다.</param>
      <param name="NumberFormat">
        <see cref="T:System.Globalization.NumberFormatInfo" />에 따라 사용할 숫자 서식입니다.</param>
      <returns>
        <see langword="String" /> 값의 <see langword="Decimal" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary>
        <see cref="T:System.Double" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 <see cref="T:System.Double" /> 값입니다.</param>
      <returns>
        <see cref="T:System.Double" /> 값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>지정된 숫자 서식을 사용하여 <see cref="T:System.Double" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 <see cref="T:System.Double" /> 값입니다.</param>
      <param name="NumberFormat">
        <see cref="T:System.Globalization.NumberFormatInfo" />에 따라 사용할 숫자 서식입니다.</param>
      <returns>
        <see cref="T:System.Double" /> 값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary>
        <see langword="Short" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="Short" /> 값입니다.</param>
      <returns>
        <see langword="String" /> 값의 <see langword="Short" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary>정수 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="int" /> 값입니다.</param>
      <returns>
        <see langword="String" /> 값의 <see langword="int" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary>
        <see langword="Long" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="Long" /> 값입니다.</param>
      <returns>
        <see langword="String" /> 값의 <see langword="Long" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary>개체를 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see langword="String" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary>
        <see cref="T:System.Single" /> 값(단정밀도 부동 소수점 숫자)을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 <see cref="T:System.Single" /> 값입니다.</param>
      <returns>
        <see cref="T:System.Single" /> 값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>지정된 숫자 서식을 사용하여 <see cref="T:System.Single" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 <see cref="T:System.Single" /> 값입니다.</param>
      <param name="NumberFormat">
        <see cref="T:System.Globalization.NumberFormatInfo" />에 따라 사용할 숫자 서식입니다.</param>
      <returns>
        <see cref="T:System.Single" /> 값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary>
        <see langword="uint" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="Uint" /> 값입니다.</param>
      <returns>
        <see langword="String" /> 값의 <see langword="Uint" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary>
        <see langword="Ulong" /> 값을 <see cref="T:System.String" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 <see langword="Ulong" /> 값입니다.</param>
      <returns>
        <see langword="String" /> 값의 <see langword="Ulong" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary>개체를 <see langword="Uint" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see langword="Uint" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary>문자열을 <see langword="Uint" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see langword="Uint" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary>개체를 <see langword="Ulong" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see langword="Ulong" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary>문자열을 <see langword="Ulong" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see langword="Ulong" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary>개체를 <see langword="Ushort" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 개체입니다.</param>
      <returns>개체의 <see langword="Ushort" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary>문자열을 <see langword="Ushort" /> 값으로 변환합니다.</summary>
      <param name="Value">변환할 문자열입니다.</param>
      <returns>문자열의 <see langword="Ushort" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary>지정된 개체에 해당하는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Date" /> 값으로 변환할 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary>지정된 문자열에 해당하는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Date" /> 값으로 변환할 문자열입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary>지정된 문자열 및 문화권 정보에 해당하는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Date" /> 값으로 변환할 문자열입니다.</param>
      <param name="culture">필수 요소. 문화권에 따라 날짜 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary>지정된 <see langword="Decimal" /> 값에 해당하는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Boolean" /> 값으로 변환할 <see langword="Decimal" /> 값입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary>지정된 개체에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Decimal" /> 값으로 변환할 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>지정된 개체 및 숫자 형식 정보에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Decimal" /> 값으로 변환할 개체입니다.</param>
      <param name="NumberFormat">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary>지정된 문자열에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Decimal" /> 값으로 변환할 문자열입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>지정된 문자열 및 숫자 형식 정보에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Decimal" /> 값으로 변환할 문자열입니다.</param>
      <param name="NumberFormat">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>지정된 문자열 및 숫자 형식 정보에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Decimal" /> 값으로 변환할 문자열입니다.</param>
      <param name="NumberFormat">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Decimal" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary>클래스에 적용되는 경우 컴파일러가 기본 합성 생성자에서 구성 요소 초기화 메서드를 암시적으로 호출합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" /> 특성의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary>지정된 개체에 해당하는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>지정된 개체에 해당하는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 개체입니다.</param>
      <param name="NumberFormat">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary>지정된 문자열에 해당하는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 문자열입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>지정된 문자열 및 숫자 형식 정보에 해당하는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 문자열입니다.</param>
      <param name="NumberFormat">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary>지정된 문자열에 해당하는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 문자열입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>지정된 문자열 및 숫자 형식 정보에 해당하는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 문자열입니다.</param>
      <param name="NumberFormat">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see cref="T:System.Double" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary>Visual Basic 컴파일러는 정적 지역 초기화 중 이 클래스를 사용합니다. 이 클래스는 코드에서 직접 호출할 수 없습니다. 정적 지역 변수를 초기화하지 못하면 이 형식의 예외가 throw됩니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary>지정된 개체에 해당하는 <see langword="Integer" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Integer" /> 값으로 변환할 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Integer" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary>지정된 문자열에 해당하는 <see langword="Integer" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Integer" /> 값으로 변환할 문자열입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Integer" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary>이 클래스는 Visual Basic 2005부터 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>개체 메서드를 런타임에 바인딩하여 호출합니다.</summary>
      <param name="o">메서드를 호출할 개체입니다.</param>
      <param name="objType">개체의 형식입니다.</param>
      <param name="name">호출할 <paramref name="o" />의 메서드 이름입니다.</param>
      <param name="args">메서드에 전달할 매개 변수 값의 배열입니다.</param>
      <param name="paramnames">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
      <param name="CopyBack">
        <see langword="Boolean" /> 값의 배열이며, <see langword="True" />이면 관련 매개 변수가 <see langword="ByRef" />로 전달됩니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>개체의 런타임에 바인딩된 값을 반환합니다.</summary>
      <param name="o">값을 반환할 개체입니다.</param>
      <param name="objType">개체의 형식입니다.</param>
      <param name="name">값을 검색할 <paramref name="o" />의 멤버 이름입니다.</param>
      <param name="args">
        <paramref name="o" />가 일차원 또는 다차원 배열인 경우 <paramref name="o" />의 위치를 지정하는 하나 이상의 인덱스 값 배열이거나 개체 <paramref name="o" />에 전달할 인수 값 배열입니다.</param>
      <param name="paramnames">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
      <param name="CopyBack">
        <see langword="Boolean" /> 값의 배열이며, <see langword="True" />이면 관련 매개 변수가 <see langword="ByRef" />로 전달됩니다.</param>
      <returns>
        <paramref name="o" />가 배열인 경우 <paramref name="o" />에서 <paramref name="args" />에 지정된 위치의 값입니다. <paramref name="o" />가 개체인 경우 <paramref name="o" />의 명명된 매개 변수와 <paramref name="paramnames" />의 해당 관련 값을 사용하여 호출한 <paramref name="args" />의 반환 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>지정된 인덱스 또는 매개 변수를 사용하여 개체의 런타임에 바인딩된 값을 반환합니다.</summary>
      <param name="o">값을 반환할 개체입니다.</param>
      <param name="args">
        <paramref name="o" />가 일차원 또는 다차원 배열인 경우 <paramref name="o" />의 위치를 지정하는 하나 이상의 인덱스 값 배열이거나 개체 <paramref name="o" />에 전달할 인수 값 배열입니다.</param>
      <param name="paramnames">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
      <returns>
        <paramref name="o" />가 배열인 경우 <paramref name="o" />에서 <paramref name="args" />에 지정된 위치의 값입니다. <paramref name="o" />가 개체인 경우 <paramref name="o" />의 명명된 매개 변수와 <paramref name="paramnames" />의 해당 관련 값을 사용하여 호출한 <paramref name="args" />의 반환 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>지정된 매개 변수를 사용하여 개체의 런타임에 바인딩된 값을 설정합니다.</summary>
      <param name="o">값을 설정할 개체입니다.</param>
      <param name="args">
        <paramref name="o" />가 일차원 또는 다차원 배열인 경우 <paramref name="o" />의 위치를 지정하는 하나 이상의 인덱스 값 배열이거나 개체 <paramref name="o" />에 전달할 인수 값 배열입니다.</param>
      <param name="paramnames">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>지정된 매개 변수를 사용하여 개체의 런타임에 바인딩된 값을 설정합니다.</summary>
      <param name="o">값을 설정할 개체입니다.</param>
      <param name="args">
        <paramref name="o" /> 개체에 전달할 매개 변수 값이 하나 이상 들어 있는 배열입니다.</param>
      <param name="paramnames">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
      <param name="OptimisticSet">
        <see langword="True" />로 지정하면 설정 멤버가 없는 경우 예외가 throw되지 않습니다.</param>
      <param name="RValueBase">
        <see langword="True" />로 지정하면 <paramref name="o" />를 런타임에 바인딩된 식의 결과로 식별합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary>지정된 매개 변수를 사용하여 개체 멤버의 런타임에 바인딩된 값을 설정합니다.</summary>
      <param name="o">멤버 값을 설정할 개체입니다.</param>
      <param name="objType">개체의 형식입니다.</param>
      <param name="name">설정할 멤버 이름입니다.</param>
      <param name="args">
        <paramref name="o" />의 멤버에 전달할 매개 변수 값이 하나 이상 들어 있는 배열입니다.</param>
      <param name="paramnames">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>지정된 매개 변수를 사용하여 개체 멤버의 런타임에 바인딩된 값을 설정합니다.</summary>
      <param name="o">멤버 값을 설정할 개체입니다.</param>
      <param name="objType">개체의 형식입니다.</param>
      <param name="name">설정할 멤버 이름입니다.</param>
      <param name="args">
        <paramref name="o" />의 멤버에 전달할 매개 변수 값이 하나 이상 들어 있는 배열입니다.</param>
      <param name="paramnames">
        <paramref name="args" /> 배열의 값이 전달될 매개 변수의 이름이 있는 배열입니다.</param>
      <param name="OptimisticSet">
        <see langword="True" />로 지정하면 설정 멤버가 없는 경우 예외가 throw되지 않습니다.</param>
      <param name="RValueBase">
        <see langword="True" />로 지정하면 <paramref name="o" />를 런타임에 바인딩된 식의 결과로 식별합니다.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary>이 클래스는 Visual Basic 컴파일러에서 Like Operator에 대한 작업을 수행하는 데 사용하는 도우미를 제공합니다. 이 클래스는 코드에서 직접 호출할 수 없습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>지정한 두 개체에 대한 이진 또는 텍스트 문자열 비교를 수행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Source">비교할 문자열입니다.</param>
      <param name="Pattern">
        <paramref name="Source" />와 비교할 문자열입니다.</param>
      <param name="CompareOption">텍스트 비교를 사용할지 여부를 지정하는 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 열거형입니다. <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />이면 이 메서드는 텍스트 비교를 사용하고, <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />이면 이 메서드는 이진 비교를 사용합니다.</param>
      <returns>문자열이 일치하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>지정한 두 문자열에 대한 이진 또는 텍스트 문자열 비교를 수행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Source">비교할 문자열입니다.</param>
      <param name="Pattern">
        <paramref name="Source" />와 비교할 문자열입니다.</param>
      <param name="CompareOption">텍스트 비교를 사용할지 여부를 지정하는 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 열거형입니다. <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />이면 이 메서드는 텍스트 비교를 사용하고, <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />이면 이 메서드는 이진 비교를 사용합니다.</param>
      <returns>문자열이 일치하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary>지정된 개체에 해당하는 <see langword="Long" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Long" /> 값으로 변환할 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Long" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary>지정된 문자열에 해당하는 <see langword="Long" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Long" /> 값으로 변환할 문자열입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Long" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary>이 클래스는 Visual Basic 컴파일러에서 런타임에 바인딩하는 호출에 사용하는 도우미를 제공하며, 코드에서 직접 호출할 수 없습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary>런타임에 바인딩된 메서드 또는 함수 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="MemberName">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <param name="IgnoreReturn">반환 값을 무시할 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값입니다.</param>
      <returns>호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary>런타임에 바인딩된 속성 가져오기 또는 필드 액세스 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="MemberName">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <returns>호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary>런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <param name="OptimisticSet">설정 작업이 작동할지 여부를 확인하는 데 사용되는 <see langword="Boolean" /> 값입니다. 속성 또는 필드에 중간 값이 설정되어 있다고 생각되면 <see langword="True" />로 설정하고, 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
      <param name="RValueBase">런타임 참조의 기본 참조가 <see langword="Boolean" />인 경우를 지정하는 <see langword="RValue" /> 값입니다. 런타임 참조의 기본 참조가 <see langword="True" />이면 <see langword="RValue" />로 설정합니다. 이렇게 하면 값 형식의 <see langword="RValues" /> 필드에 대한 런타임 할당의 런타임 예외를 생성할 수 있습니다. 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>런타임에 바인딩된 기본 속성 또는 필드 가져오기나 기본 메서드 또는 함수 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다. <paramref name="Instance" />가 <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" /> 형식이면 동적 언어 런타임을 사용하여 바인딩하고, 그렇지 않으면 표준 런타임에 바인딩을 수행합니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <param name="ReportErrors">오류 발생 시 예외를 throw할지 여부를 지정하는 데 사용되는 <see langword="Boolean" /> 값입니다. 예외를 throw하려면 <see langword="True" />로 설정합니다. 오류 발생 시 <see langword="False" />을 반환하려면 <see langword="Nothing" />로 설정합니다.</param>
      <returns>호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>런타임에 바인딩된 기본 속성 또는 필드 가져오기나 기본 메서드 또는 함수 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <param name="ReportErrors">오류 발생 시 예외를 throw할지 여부를 지정하는 데 사용되는 <see langword="Boolean" /> 값입니다. 예외를 throw하려면 <see langword="True" />로 설정합니다. 오류 발생 시 <see langword="False" />을 반환하려면 <see langword="Nothing" />로 설정합니다.</param>
      <returns>호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary>런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="MemberName">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="MemberName">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="OptimisticSet">설정 작업이 작동할지 여부를 확인하는 데 사용되는 <see langword="Boolean" /> 값입니다. 속성 또는 필드에 중간 값이 설정되어 있다고 생각되면 <see langword="True" />로 설정하고, 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
      <param name="RValueBase">런타임 참조의 기본 참조가 <see langword="Boolean" />인 경우를 지정하는 <see langword="RValue" /> 값입니다. 런타임 참조의 기본 참조가 <see langword="True" />이면 <see langword="RValue" />로 설정합니다. 이렇게 하면 값 형식의 <see langword="RValues" /> 필드에 대한 런타임 할당의 런타임 예외를 생성할 수 있습니다. 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary>런타임에 바인딩된 메서드 또는 함수 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Type">호출 개체의 형식입니다.</param>
      <param name="MemberName">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <param name="TypeArguments">인수 형식의 배열로, 제네릭 호출에서 인수 형식을 전달하는 데만 사용됩니다.</param>
      <param name="CopyBack">런타임 바인더에서 <see langword="Boolean" /> 매개 변수와 일치하는 인수를 호출 사이트에 전달하는 데 사용하는 <see langword="ByRef" /> 값의 배열입니다. 각각의 <see langword="True" /> 값은 인수가 일치하며 <see langword="LateCall" /> 호출이 완료된 후 복사되어야 함을 나타냅니다.</param>
      <param name="IgnoreReturn">반환 값을 무시할 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값입니다.</param>
      <returns>호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>런타임에 바인딩된 기본 메서드 또는 함수 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <param name="ReportErrors">오류 발생 시 예외를 throw할지 여부를 지정하는 데 사용되는 <see langword="Boolean" /> 값입니다. 예외를 throw하려면 <see langword="True" />로 설정합니다. 오류 발생 시 <see langword="False" />을 반환하려면 <see langword="Nothing" />로 설정합니다.</param>
      <returns>호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary>런타임에 바인딩된 속성 가져오기 또는 필드 액세스 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Type">호출 개체의 형식입니다.</param>
      <param name="MemberName">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <param name="TypeArguments">인수 형식의 배열로, 제네릭 호출에서 인수 형식을 전달하는 데만 사용됩니다.</param>
      <param name="CopyBack">런타임 바인더에서 <see langword="Boolean" /> 매개 변수와 일치하는 인수를 호출 사이트에 전달하는 데 사용하는 <see langword="ByRef" /> 값의 배열입니다. 각각의 <see langword="True" /> 값은 인수가 일치하며 <see langword="LateCall" /> 호출이 완료된 후 복사되어야 함을 나타냅니다.</param>
      <returns>호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>런타임에 바인딩된 기본 속성 또는 필드 가져오기를 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <param name="ReportErrors">오류 발생 시 예외를 throw할지 여부를 지정하는 데 사용되는 <see langword="Boolean" /> 값입니다. 예외를 throw하려면 <see langword="True" />로 설정합니다. 오류 발생 시 <see langword="False" />을 반환하려면 <see langword="Nothing" />로 설정합니다.</param>
      <returns>호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>런타임에 바인딩된 속성 가져오기 또는 필드 액세스 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <returns>호출 개체의 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <param name="OptimisticSet">설정 작업이 작동할지 여부를 확인하는 데 사용되는 <see langword="Boolean" /> 값입니다. 속성 또는 필드에 중간 값이 설정되어 있다고 생각되면 <see langword="True" />로 설정하고, 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
      <param name="RValueBase">런타임 참조의 기본 참조가 <see langword="Boolean" />인 경우를 지정하는 <see langword="RValue" /> 값입니다. 런타임 참조의 기본 참조가 <see langword="True" />이면 <see langword="RValue" />로 설정합니다. 이렇게 하면 값 형식의 <see langword="RValues" /> 필드에 대한 런타임 할당의 런타임 예외를 생성할 수 있습니다. 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary>런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Type">호출 개체의 형식입니다.</param>
      <param name="MemberName">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <param name="TypeArguments">인수 형식의 배열로, 제네릭 호출에서 인수 형식을 전달하는 데만 사용됩니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary>런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Type">호출 개체의 형식입니다.</param>
      <param name="MemberName">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <param name="TypeArguments">인수 형식의 배열로, 제네릭 호출에서 인수 형식을 전달하는 데만 사용됩니다.</param>
      <param name="OptimisticSet">설정 작업이 작동할지 여부를 확인하는 데 사용되는 <see langword="Boolean" /> 값입니다. 속성 또는 필드에 중간 값이 설정되어 있다고 생각되면 <see langword="True" />로 설정하고, 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
      <param name="RValueBase">런타임 참조의 기본 참조가 <see langword="Boolean" />인 경우를 지정하는 <see langword="RValue" /> 값입니다. 런타임 참조의 기본 참조가 <see langword="True" />이면 <see langword="RValue" />로 설정합니다. 이렇게 하면 값 형식의 <see langword="RValues" /> 필드에 대한 런타임 할당의 런타임 예외를 생성할 수 있습니다. 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
      <param name="CallType">호출되는 프로시저 형식을 나타내는 <see cref="T:Microsoft.VisualBasic.CallType" /> 형식의 열거형 멤버입니다. CallType 값은 <see langword="Method" />, <see langword="Get" /> 또는 <see langword="Set" />이 될 수 있습니다. 이 경우에는 <see langword="Set" />만 사용됩니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary>런타임에 바인딩된 속성 설정 또는 필드 쓰기 호출을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="Instance">속성이나 메서드를 노출하는 호출 개체의 인스턴스입니다.</param>
      <param name="Type">호출 개체의 형식입니다.</param>
      <param name="MemberName">호출 개체의 속성 또는 메서드 이름입니다.</param>
      <param name="Arguments">호출되는 속성이나 메서드에 전달할 인수를 포함하는 배열입니다.</param>
      <param name="ArgumentNames">인수 이름의 배열입니다.</param>
      <param name="TypeArguments">인수 형식의 배열로, 제네릭 호출에서 인수 형식을 전달하는 데만 사용됩니다.</param>
      <param name="OptimisticSet">설정 작업이 작동할지 여부를 확인하는 데 사용되는 <see langword="Boolean" /> 값입니다. 속성 또는 필드에 중간 값이 설정되어 있다고 생각되면 <see langword="True" />로 설정하고, 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
      <param name="RValueBase">런타임 참조의 기본 참조가 <see langword="Boolean" />인 경우를 지정하는 <see langword="RValue" /> 값입니다. 런타임 참조의 기본 참조가 <see langword="True" />이면 <see langword="RValue" />로 설정합니다. 이렇게 하면 값 형식의 <see langword="RValues" /> 필드에 대한 런타임 할당의 런타임 예외를 생성할 수 있습니다. 그렇지 않으면 <see langword="False" />로 설정합니다.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary>Visual Basic 컴파일러는 개체 흐름 제어에 이 클래스를 사용합니다. 이 클래스는 코드에서 직접 호출할 수 없습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>지정된 형식에 대한 동기화 잠금이 있는지 검사합니다.</summary>
      <param name="Expression">동기화 잠금이 있는지 검사할 데이터 형식입니다.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary>Visual Basic 컴파일러에 <see langword="For...Next" /> 루프를 컴파일하기 위한 서비스를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>
        <see langword="For...Next" /> 루프를 초기화합니다.</summary>
      <param name="Counter">루프 카운터 변수입니다.</param>
      <param name="Start">루프 카운터의 초기 값입니다.</param>
      <param name="Limit">
        <see langword="To" /> 옵션의 값입니다.</param>
      <param name="StepValue">
        <see langword="Step" /> 옵션의 값입니다.</param>
      <param name="LoopForResult">루프 값에 대해 확인된 값을 포함하는 개체입니다.</param>
      <param name="CounterResult">다음 루프 반복의 카운터 값입니다.</param>
      <returns>루프가 종료되었으면 <see langword="False" />이고, 그렇지 않으면 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>루프 카운터, <see langword="Step" /> 및 <see langword="To" /> 값이 올바른지 확인합니다.</summary>
      <param name="count">필수 요소. 루프 카운터 변수에 전달된 초기 값을 나타내는 <see langword="Decimal" /> 값입니다.</param>
      <param name="limit">필수 요소. <see langword="Decimal" /> 키워드를 사용하여 전달된 값을 나타내는 <see langword="To" /> 값입니다.</param>
      <param name="StepValue">필수 요소. <see langword="Decimal" /> 키워드를 사용하여 전달된 값을 나타내는 <see langword="Step" /> 값입니다.</param>
      <returns>
        <paramref name="StepValue" />가 0보다 크고 <paramref name="count" />가 <paramref name="limit" />보다 작거나 같은 경우, 또는 <paramref name="StepValue" />가 0보다 작거나 같고 <paramref name="count" />가 <paramref name="limit" />보다 크거나 같은 경우 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>
        <see langword="For...Next" /> 루프를 증가시킵니다.</summary>
      <param name="Counter">루프 카운터 변수입니다.</param>
      <param name="LoopObj">루프 값에 대해 확인된 값을 포함하는 개체입니다.</param>
      <param name="CounterResult">다음 루프 반복의 카운터 값입니다.</param>
      <returns>루프가 종료되었으면 <see langword="False" />이고, 그렇지 않으면 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>루프 카운터, <see langword="Step" /> 및 <see langword="To" /> 값이 올바른지 확인합니다.</summary>
      <param name="count">필수 요소. 루프 카운터 변수에 전달된 초기 값을 나타내는 <see cref="T:System.Single" /> 값입니다.</param>
      <param name="limit">필수 요소. <see cref="T:System.Single" /> 키워드를 사용하여 전달된 값을 나타내는 <see langword="To" /> 값입니다.</param>
      <param name="StepValue">필수 요소. <see cref="T:System.Single" /> 키워드를 사용하여 전달된 값을 나타내는 <see langword="Step" /> 값입니다.</param>
      <returns>
        <paramref name="StepValue" />가 0보다 크고 <paramref name="count" />가 <paramref name="limit" />보다 작거나 같은 경우, 또는 <paramref name="StepValue" />가 0보다 작거나 같고 <paramref name="count" />가 <paramref name="limit" />보다 크거나 같은 경우 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>루프 카운터, <see langword="Step" /> 및 <see langword="To" /> 값이 올바른지 확인합니다.</summary>
      <param name="count">필수 요소. 루프 카운터 변수에 전달된 초기 값을 나타내는 <see cref="T:System.Double" /> 값입니다.</param>
      <param name="limit">필수 요소. <see cref="T:System.Double" /> 키워드를 사용하여 전달된 값을 나타내는 <see langword="To" /> 값입니다.</param>
      <param name="StepValue">필수 요소. <see cref="T:System.Double" /> 키워드를 사용하여 전달된 값을 나타내는 <see langword="Step" /> 값입니다.</param>
      <returns>
        <paramref name="StepValue" />가 0보다 크고 <paramref name="count" />가 <paramref name="limit" />보다 작거나 같은 경우, 또는 <paramref name="StepValue" />가 0보다 작거나 같고 <paramref name="count" />가 <paramref name="limit" />보다 크거나 같은 경우 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary>더하기(+) 연산을 수행합니다.</summary>
      <param name="o1">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="o2">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="o1" />와 <paramref name="o2" />의 합입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary>비트 <see langword="And" /> 연산을 수행합니다.</summary>
      <param name="obj1">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="obj2">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns>
        <paramref name="obj1" />과 <paramref name="obj2" />가 모두 1로 계산되면 1이고, 그렇지 않으면 0입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary>비트 <see langword="Or" /> 연산을 수행합니다.</summary>
      <param name="obj1">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="obj2">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns>
        <paramref name="obj1" /> 및 <paramref name="obj2" />가 모두 0으로 계산되면 0이고, 그렇지 않으면 1입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary>
        <see langword="Xor" /> 연산을 수행합니다.</summary>
      <param name="obj1">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="obj2">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns>두 숫자 비트 패턴의 배타적 비트 논리합을 나타내는 숫자 값입니다. 자세한 내용은 Xor Operator를 참조하세요.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary>나누기(/) 연산을 수행합니다.</summary>
      <param name="o1">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="o2">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="o1" />를 <paramref name="o2" />로 나눈 전체 몫(나머지 포함)입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary>boxed 기본값을 반환합니다. 이 메서드는 구조체를 여러 번 복사하지 않도록 하는 데 사용됩니다.</summary>
      <param name="o">필수 요소. 임의의 식입니다.</param>
      <returns>개체로 형식화된 <paramref name="o" />의 기본값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary>정수 나누기(\) 연산을 수행합니다.</summary>
      <param name="o1">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="o2">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="o1" />를 <paramref name="o2" />로 나눠 나머지는 버리고 정수 부분만 남긴 몫입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>
        <see langword="Like" /> 비교를 수행합니다.</summary>
      <param name="vLeft">필수 요소. 임의의 식입니다.</param>
      <param name="vRight">필수 요소. Like Operator에 설명된 패턴 일치 규칙을 따르는 문자열 식입니다.</param>
      <param name="CompareOption">필수 요소. 작업에서 텍스트 비교를 사용할지 이진 비교를 사용할지를 지정하는 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 값입니다.</param>
      <returns>
        <paramref name="vLeft" />의 값에 대한 문자열 표현이 <paramref name="vRight" />에 들어 있는 패턴을 따르면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. <paramref name="vLeft" /> 및 <paramref name="vRight" />이 모두 <see langword="True" />이면 <see langword="Nothing" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary>나머지(<see langword="Mod" />) 연산을 수행합니다.</summary>
      <param name="o1">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="o2">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="o1" />를 <paramref name="o2" />로 나눈 나머지입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary>곱하기(*) 연산을 수행합니다.</summary>
      <param name="o1">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="o2">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="o1" />와 <paramref name="o2" />의 곱입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary>단항 빼기(-) 연산을 수행합니다.</summary>
      <param name="obj">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="obj" />의 음수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary>
        <see langword="Not" /> 연산을 수행합니다.</summary>
      <param name="obj">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns>
        <see langword="Boolean" /> 연산의 경우 <paramref name="obj" />가 <see langword="False" />이면 <see langword="True" />이고, 그렇지 않으면 <see langword="True" />입니다. 비트 연산의 경우 <paramref name="obj" />가 0이면 1이고, 그렇지 않으면 0입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary>이진 비교를 수행하거나, 두 개체가 지정된 경우 텍스트 문자열 비교를 수행합니다.</summary>
      <param name="o1">필수 요소. 임의의 식입니다.</param>
      <param name="o2">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>
        <list type="table">
          <listheader>
            <term> 값</term>
            <description> 조건</description>
          </listheader>
          <item>
            <term> -1</term>
            <description>
              <paramref name="o1" />가 <paramref name="o2" />보다 작은 경우</description>
          </item>
          <item>
            <term> 0</term>
            <description>
              <paramref name="o1" />이(가) <paramref name="o2" />와 같은 경우.</description>
          </item>
          <item>
            <term> 1</term>
            <description>
              <paramref name="o1" />가 <paramref name="o2" />보다 큰 경우</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary>단항 더하기(+) 연산을 수행합니다.</summary>
      <param name="obj">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="obj" />의 값 <paramref name="obj" />의 부호는 변경되지 않습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary>지수(^) 연산을 수행합니다.</summary>
      <param name="obj1">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="obj2">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="obj1" />를 <paramref name="obj2" />번 거듭제곱한 결과입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary>산술 왼쪽 시프트(&lt;&lt;) 연산을 수행합니다.</summary>
      <param name="o1">필수 요소. 정수 숫자 식입니다. 이동할 비트 패턴입니다. 데이터 형식은 정수 계열 형식(<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> 또는 <see langword="ULong" />)이어야 합니다.</param>
      <param name="amount">필수 요소. 숫자 식입니다. 비트 패턴을 이동할 비트 수입니다. 데이터 형식은 <see langword="Integer" />이거나 <see langword="Integer" />로 확장되어야 합니다.</param>
      <returns>정수 숫자 값입니다. 비트 패턴을 이동한 결과입니다. 데이터 형식은 <paramref name="o1" />의 형식과 같습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary>산술 오른쪽 시프트(&gt;&gt;) 연산을 수행합니다.</summary>
      <param name="o1">필수 요소. 정수 숫자 식입니다. 이동할 비트 패턴입니다. 데이터 형식은 정수 계열 형식(<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> 또는 <see langword="ULong" />)이어야 합니다.</param>
      <param name="amount">필수 요소. 숫자 식입니다. 비트 패턴을 이동할 비트 수입니다. 데이터 형식은 <see langword="Integer" />이거나 <see langword="Integer" />로 확장되어야 합니다.</param>
      <returns>정수 숫자 값입니다. 비트 패턴을 이동한 결과입니다. 데이터 형식은 <paramref name="o1" />의 형식과 같습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary>문자열 연결(&amp;) 연산을 수행합니다.</summary>
      <param name="vLeft">필수 요소. 임의의 식입니다.</param>
      <param name="vRight">필수 요소. 임의의 식입니다.</param>
      <returns>
        <paramref name="vLeft" />와 <paramref name="vRight" />를 연결한 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary>빼기(-) 연산을 수행합니다.</summary>
      <param name="o1">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="o2">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="o1" />와 <paramref name="o2" />의 차이입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary>
        <see langword="Xor" /> 비교를 수행합니다.</summary>
      <param name="obj1">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="obj2">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns>
        <see langword="Boolean" /> 또는 숫자 값입니다. <see langword="Boolean" /> 비교의 경우 반환 값은 두 <see langword="Boolean" /> 값의 배타적 논리합입니다. 비트(숫자) 연산의 경우 반환 값은 두 숫자 비트 패턴의 배타적 비트 논리합을 나타내는 숫자 값입니다. 자세한 내용은 Xor Operator를 참조하세요.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary>Visual Basic 컴파일러에서 내부적으로 사용하는 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> 및 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />와 같은 런타임에 바인딩된 수학 연산자를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary>Visual Basic 더하기(+) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="Left" />와 <paramref name="Right" />의 합입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary>Visual Basic <see langword="And" /> 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="Right">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns>
        <see langword="Boolean" /> 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />가 모두 <see langword="True" />로 계산되면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 비트 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />가 모두 1로 계산되면 1이고, 그렇지 않으면 0입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Visual Basic 같음(=) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>
        <paramref name="Left" />과 <paramref name="Right" />가 같으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Visual Basic 보다 큼(&gt;) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>
        <see langword="True" />이 <paramref name="Left" />보다 크면 <paramref name="Right" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Visual Basic 보다 크거나 같음(&gt;=) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>
        <paramref name="Left" />가 <paramref name="Right" />보다 크거나 같으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Visual Basic 보다 작음(&lt;) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>
        <paramref name="Left" />가 <paramref name="Right" />보다 작으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Visual Basic 보다 작거나 같음(&lt;=) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>
        <paramref name="Left" />가 <paramref name="Right" />보다 작거나 같으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Visual Basic 같지 않음(&lt;&gt;) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>
        <see langword="True" />가 <paramref name="Left" />와 다르면 <paramref name="Right" />이고, 그러지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary>이진 비교를 수행하거나, 두 문자열이 지정된 경우 텍스트 문자열 비교를 수행합니다.</summary>
      <param name="Left">필수 요소. 임의의 <see langword="String" /> 식입니다.</param>
      <param name="Right">필수 요소. 임의의 <see langword="String" /> 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>
        <list type="table">
          <listheader>
            <term> 값</term>
            <description> 조건</description>
          </listheader>
          <item>
            <term> -1</term>
            <description>
              <paramref name="Left" />가 <paramref name="Right" />보다 작은 경우</description>
          </item>
          <item>
            <term> 0</term>
            <description>
              <paramref name="Left" />이(가) <paramref name="Right" />와 같은 경우.</description>
          </item>
          <item>
            <term> 1</term>
            <description>
              <paramref name="Left" />가 <paramref name="Right" />보다 큰 경우</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary>Visual Basic 연결(&amp;) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <returns>
        <paramref name="Left" />와 <paramref name="Right" />를 연결한 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>오버로드된 Visual Basic 같음(=) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>오버로드된 같음 연산자의 결과입니다. 연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>오버로드된 Visual Basic 보다 큼(&gt;) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>오버로드된 보다 큼 연산자의 결과입니다. 연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>오버로드된 Visual Basic 보다 크거나 같음(&gt;=) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>오버로드된 보다 크거나 같음 연산자의 결과입니다. 연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>오버로드된 Visual Basic 보다 작음(&lt;) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>오버로드된 보다 작음 연산자의 결과입니다. 연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>오버로드된 Visual Basic 보다 작거나 같음(&lt;=) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>오버로드된 보다 작거나 같음 연산자의 결과입니다. 연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>오버로드된 Visual Basic 같지 않음(&lt;&gt;) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 식입니다.</param>
      <param name="Right">필수 요소. 임의의 식입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>오버로드된 같지 않음 연산자의 결과입니다. 연산자 오버로드가 지원되지 않는 경우에는 <see langword="False" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary>Visual Basic 나누기(/) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="Left" />를 <paramref name="Right" />로 나눈 전체 몫(나머지 포함)입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary>Visual Basic 지수(^) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="Left" />를 <paramref name="Right" />번 거듭제곱한 결과입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary>런타임에 바인딩된 사용자 정의 연산자 계산을 실행합니다. 이 도우미 메서드는 코드에서 직접 호출할 수 없습니다.</summary>
      <param name="vbOp">사용자 정의 연산자입니다.</param>
      <param name="arguments" />
      <returns>사용자 정의 연산자에서 반환된 결과입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary>Visual Basic 정수 나누기(\) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="Left" />를 <paramref name="Right" />로 나눠 나머지는 버리고 정수 부분만 남긴 몫입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary>Visual Basic 산술 왼쪽 시프트(&lt;&lt;) 연산자를 나타냅니다.</summary>
      <param name="Operand">필수 요소. 정수 숫자 식입니다. 이동할 비트 패턴입니다. 데이터 형식은 정수 계열 형식(<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> 또는 <see langword="ULong" />)이어야 합니다.</param>
      <param name="Amount">필수 요소. 숫자 식입니다. 비트 패턴을 이동할 비트 수입니다. 데이터 형식은 <see langword="Integer" />이거나 <see langword="Integer" />로 확장되어야 합니다.</param>
      <returns>정수 숫자 값입니다. 비트 패턴을 이동한 결과입니다. 데이터 형식은 <paramref name="Operand" />의 형식과 같습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary>Visual Basic <see langword="Mod" /> 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="Left" />를 <paramref name="Right" />로 나눈 나머지입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary>Visual Basic 곱하기(*) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="Left" />와 <paramref name="Right" />의 곱입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary>Visual Basic 단항 빼기(-) 연산자를 나타냅니다.</summary>
      <param name="Operand">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="Operand" />의 음수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary>Visual Basic <see langword="Not" /> 연산자를 나타냅니다.</summary>
      <param name="Operand">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns>
        <see langword="Boolean" /> 연산의 경우 <paramref name="Operand" />가 <see langword="False" />이면 <see langword="True" />이고, 그렇지 않으면 <see langword="True" />입니다. 비트 연산의 경우 <paramref name="Operand" />가 0이면 1이고, 그렇지 않으면 0입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary>Visual Basic <see langword="Or" /> 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="Right">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns>
        <see langword="Boolean" /> 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />가 모두 <see langword="False" />로 계산되면 <see langword="False" />이고, 그렇지 않으면 <see langword="True" />입니다. 비트 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />이 모두 0으로 계산되면 0이고, 그렇지 않으면 1입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary>Visual Basic 단항 더하기(-) 연산자를 나타냅니다.</summary>
      <param name="Operand">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="Operand" />의 값 <paramref name="Operand" />의 부호는 변경되지 않습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary>Visual Basic 산술 오른쪽 시프트(&gt;&gt;) 연산자를 나타냅니다.</summary>
      <param name="Operand">필수 요소. 정수 숫자 식입니다. 이동할 비트 패턴입니다. 데이터 형식은 정수 계열 형식(<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> 또는 <see langword="ULong" />)이어야 합니다.</param>
      <param name="Amount">필수 요소. 숫자 식입니다. 비트 패턴을 이동할 비트 수입니다. 데이터 형식은 <see langword="Integer" />이거나 <see langword="Integer" />로 확장되어야 합니다.</param>
      <returns>정수 숫자 값입니다. 비트 패턴을 이동한 결과입니다. 데이터 형식은 <paramref name="Operand" />의 형식과 같습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary>Visual Basic 빼기(-) 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 숫자 식입니다.</param>
      <param name="Right">필수 요소. 임의의 숫자 식입니다.</param>
      <returns>
        <paramref name="Left" />와 <paramref name="Right" />의 차이입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary>Visual Basic <see langword="Xor" /> 연산자를 나타냅니다.</summary>
      <param name="Left">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <param name="Right">필수 요소. 임의의 <see langword="Boolean" /> 또는 숫자 식입니다.</param>
      <returns>
        <see langword="Boolean" /> 또는 숫자 값입니다. <see langword="Boolean" /> 비교의 경우 반환 값은 두 <see langword="Boolean" /> 값의 배타적 논리합입니다. 비트(숫자) 연산의 경우 반환 값은 두 숫자 비트 패턴의 배타적 비트 논리합을 나타내는 숫자 값입니다. 자세한 내용은 Xor Operator를 참조하세요.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary>현재 <see langword="Option Compare" /> 설정을 인수의 기본값으로 전달하도록 지정합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary>Visual Basic 컴파일러는 Visual Basic 디버깅을 위해 이진 또는 텍스트 비교 중에서 어떤 비교 옵션이 사용되는지를 나타내기 위해 이 도우미 클래스를 내보냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" /> 클래스의 새 인스턴스를 초기화합니다. 이 메서드는 도우미 메서드입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary>Visual Basic <see langword="Err" /> 개체에 대한 도우미를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary>
        <see langword="Clear" /> 개체의 <see langword="Err" /> 메서드 작업을 수행합니다. 도우미 메서드입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary>
        <see langword="Raise" /> 개체의 <see langword="Err" /> 메서드 작업을 수행합니다. 도우미 메서드입니다.</summary>
      <param name="hr">오류 속성을 식별하는 정수 값입니다. Visual Basic 오류의 범위는 0~65535 사이이며, 0~512 사이의 범위는 시스템 오류로 예약되어 있고, 513~65535 사이의 범위는 사용자 정의 오류로 사용할 수 있습니다.</param>
      <returns>
        <see cref="T:System.Exception" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary>호출 어셈블리에 대한 모든 파일을 닫고 프로세스를 중지합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary>Visual Basic 컴파일러에서는 이 도우미 메서드를 사용하여 <see langword="Err" /> 개체에서 예외를 캡처합니다.</summary>
      <param name="ex">catch할 <see cref="T:System.Exception" /> 개체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary>Visual Basic 컴파일러에서는 이 도우미 메서드를 사용하여 <see langword="Err" /> 개체에서 예외를 캡처합니다.</summary>
      <param name="ex">catch할 <see cref="T:System.Exception" /> 개체입니다.</param>
      <param name="lErl">예외의 줄 번호입니다.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary>지정된 개체에 해당하는 <see langword="Short" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Short" /> 값으로 변환할 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Short" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary>지정된 문자열에 해당하는 <see langword="Short" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Short" /> 값으로 변환할 문자열입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="Short" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary>지정된 개체에 해당하는 <see cref="T:System.Single" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Single" /> 값으로 변환할 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see cref="T:System.Single" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>지정된 개체에 해당하는 <see cref="T:System.Single" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Single" /> 값으로 변환할 개체입니다.</param>
      <param name="NumberFormat">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see cref="T:System.Single" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary>지정된 문자열에 해당하는 <see cref="T:System.Single" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Single" /> 값으로 변환할 문자열입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see cref="T:System.Single" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>지정된 문자열 및 숫자 형식 정보에 해당하는 <see cref="T:System.Single" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Single" /> 값으로 변환할 문자열입니다.</param>
      <param name="NumberFormat">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see cref="T:System.Single" /> 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary>이 클래스는 표준 모듈 구문을 IL(Intermediate Language)에 내보낼 때 해당 구문에 적용되는 특성을 제공합니다. 이 클래스는 코드에서 직접 호출할 수 없습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary>Visual Basic 컴파일러는 정적 로컬 멤버를 초기화할 때 이 클래스를 내부적으로 사용합니다. 이 클래스는 코드에서 직접 호출할 수 없습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary>정적 로컬 멤버의 초기화 플래그 상태(초기화되었는지 여부)를 반환합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary>이 클래스는 Visual Basic 2005 이상에서는 사용되지 않습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary>지정된 <see langword="String" />에 해당하는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Boolean" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary>지정된 <see langword="String" />에 해당하는 <see langword="Byte" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Byte" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary>지정된 <see langword="String" />에 해당하는 <see langword="Char" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Char" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary>지정된 날짜에 해당하는 <see langword="String" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="String" /> 값으로 변환할 날짜입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary>지정된 <see langword="String" />에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Decimal" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>지정된 <see langword="String" /> 및 숫자 형식 정보에 해당하는 <see langword="Decimal" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Decimal" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <param name="NumberFormat">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary>지정 된에 해당 하는 문자열 값을 반환 합니다 <see cref="T:System.Double" /> .</summary>
      <param name="Value">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 <see cref="T:System.String" />입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>지정 된 및 숫자 형식 정보에 해당 하는 문자열을 반환 <see cref="T:System.Double" /> 합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Double" /> 값으로 변환할 <see cref="T:System.String" />입니다.</param>
      <param name="NumberFormat">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns>
        <paramref name="Value" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary>지정된 <see langword="String" />에 해당하는 <see langword="Integer" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Integer" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary>지정된 <see langword="String" />(64비트 정수)에 해당하는 <see cref="T:System.Int64" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Int64" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary>지정된 개체에 해당하는 <see langword="String" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="String" /> 값으로 변환할 개체입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary>지정된 <see langword="String" />(16비트 정수)에 해당하는 <see cref="T:System.Int16" /> 값을 반환합니다.</summary>
      <param name="Value">필수 요소. <see langword="Int616" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns>
        <paramref name="Value" />에 해당하는 <see langword="String" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary>지정 된에 해당 하는 문자열 값을 반환 합니다 <see cref="T:System.Single" /> .</summary>
      <param name="Value">필수 요소. <see cref="T:System.Single" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <returns>에 해당 하는 문자열 값 <paramref name="Value" /> 입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>지정 된 및 숫자 형식 정보에 해당 하는 문자열 값을 반환 <see cref="T:System.Single" /> 합니다.</summary>
      <param name="Value">필수 요소. <see cref="T:System.Single" /> 값으로 변환할 <see langword="String" />입니다.</param>
      <param name="NumberFormat">문화권에 따라 숫자 값의 서식이 지정되고 표시되는 방법을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</param>
      <returns>에 해당 하는 문자열 값 <paramref name="Value" /> 입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary>
        <paramref name="sDest" /> 매개 변수를 <paramref name="sInsert" /> 매개 변수의 내용으로 덮어씁니다.</summary>
      <param name="sDest">필수 요소. 수정할 문자열 변수입니다.</param>
      <param name="StartPosition">필수 요소. <paramref name="sDest" /> 매개 변수에서 덮어쓰기 시작할 위치입니다. 인덱스는 1부터 시작합니다.</param>
      <param name="MaxInsertLength">필수 요소. <paramref name="sInsert" /> 매개 변수에서 첫 번째 문자부터 사용할 최대 문자 수입니다.</param>
      <param name="sInsert">필수 요소. <paramref name="sDest" /> 매개 변수에 덮어쓸 문자열 값입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary>두 문자열을 비교합니다.</summary>
      <param name="sLeft">필수 요소. <paramref name="sRight" />와 비교할 문자열입니다.</param>
      <param name="sRight">필수 요소. <paramref name="sLeft" />와 비교할 문자열입니다.</param>
      <param name="TextCompare">필수 요소. 대/소문자를 구분하지 않고 비교하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
      <returns>
        <list type="table">
          <listheader>
            <term> 값</term>
            <description> 조건</description>
          </listheader>
          <item>
            <term> 0</term>
            <description> 두 문자열이 같은 경우</description>
          </item>
          <item>
            <term> 0보다 작음</term>
            <description>
              <paramref name="sLeft" />가 <paramref name="sRight" />보다 작은 경우</description>
          </item>
          <item>
            <term> 0보다 큼</term>
            <description>
              <paramref name="sLeft" />가 <paramref name="sRight" />보다 큰 경우</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
        <paramref name="Source" /> 및 <paramref name="Pattern" /> 매개 변수를 비교하고 <see langword="Like" /> 연산자와 같은 결과를 반환합니다.</summary>
      <param name="Source">필수 요소. 임의의 <see langword="String" /> 식입니다.</param>
      <param name="Pattern">Like 연산자에 설명된 패턴 일치 규칙을 따르는 <see langword="String" /> 식입니다.</param>
      <param name="CompareOption">
        <see cref="T:Microsoft.VisualBasic.CompareMethod" />에 따라 문자열을 패턴과 비교하는 방법을 지정합니다. 이진 비교의 경우 <see langword="vbBinaryCompare" />이거나, 시스템의 <see langword="vbTextCompare" /> 값으로 결정되는 대/소문자를 구분하지 않는 텍스트 정렬 순서에 따른 비교의 경우 <see langword="LocaleID" />일 수 있습니다.</param>
      <returns>문자열이 패턴을 충족하는지 여부를 나타내는 <see langword="Boolean" /> 값입니다. 문자열의 값이 패턴에 포함된 패턴을 충족하면 결과는 <see langword="True" />이고, 문자열이 패턴을 충족하지 않으면 결과는 <see langword="False" />입니다. 문자열과 패턴이 모두 빈 문자열이면 결과는 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary>이진 비교를 사용하여 <paramref name="Source" /> 및 <paramref name="Pattern" /> 매개 변수를 비교하고 <see langword="Like" /> 연산자와 같은 결과를 반환합니다.</summary>
      <param name="Source">필수 요소. 임의의 <see langword="String" /> 식입니다.</param>
      <param name="Pattern">필수 요소. Like 연산자에 설명된 패턴 일치 규칙을 따르는 <see langword="String" /> 식입니다.</param>
      <returns>문자열이 패턴을 충족하는지 여부를 나타내는 <see langword="Boolean" /> 값입니다. 문자열의 값이 패턴에 포함된 패턴을 충족하면 결과는 <see langword="True" />이고, 문자열이 패턴을 충족하지 않으면 결과는 <see langword="False" />입니다. 문자열과 패턴이 모두 빈 문자열이면 결과는 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary>텍스트 비교를 사용하여 <paramref name="Source" /> 및 <paramref name="Pattern" /> 매개 변수를 비교하고 <see langword="Like" /> 연산자와 같은 결과를 반환합니다.</summary>
      <param name="Source">필수 요소. 임의의 <see langword="String" /> 식입니다.</param>
      <param name="Pattern">필수 요소. Like 연산자에 설명된 패턴 일치 규칙을 따르는 <see langword="String" /> 식입니다.</param>
      <returns>문자열이 패턴을 충족하는지 여부를 나타내는 <see langword="Boolean" /> 값입니다. 문자열의 값이 패턴에 포함된 패턴을 충족하면 결과는 <see langword="True" />이고, 문자열이 패턴을 충족하지 않으면 결과는 <see langword="False" />입니다. 문자열과 패턴이 모두 빈 문자열이면 결과는 <see langword="True" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary>Visual Basic 컴파일러에서 사용하는 유틸리티가 들어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary>Visual Basic 컴파일러에서 <see langword="Redim" />에 대한 도우미로 사용됩니다.</summary>
      <param name="arySrc">복사할 배열입니다.</param>
      <param name="aryDest">대상 배열입니다.</param>
      <returns>복사된 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.GetResourceString(System.String,System.String[])">
      <summary>지역화된 리소스 문자열 또는 오류 메시지를 검색하고 서식을 지정합니다.</summary>
      <param name="ResourceKey">검색할 문자열 또는 오류 메시지의 식별자입니다.</param>
      <param name="Args">문자열 또는 오류 메시지의 자리 표시자를 대체할 매개 변수의 배열입니다.</param>
      <returns>서식 지정된 리소스 문자열 또는 오류 메시지입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary>
        <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> 모듈에는 개체, 애플리케이션 및 시스템과 상호 작용하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>개체의 메서드를 실행하거나 개체의 속성을 설정 또는 반환합니다.</summary>
      <param name="Instance">필수 요소. <see langword="Object" />. 형식이며 속성이나 메서드를 노출하는 개체에 대한 포인터입니다.</param>
      <param name="MethodName">필수 요소. <see langword="String" />. 형식이며 개체의 속성이나 메서드 이름이 포함된 문자열 식입니다.</param>
      <param name="UseCallType">필수 요소. 호출되는 프로시저 형식을 나타내는 <see cref="T:Microsoft.VisualBasic.CallType" /> 형식의 열거형 멤버입니다. <see langword="CallType" /> 값은 <see langword="Method" />, <see langword="Get" /> 또는 <see langword="Set" />이 될 수 있습니다.</param>
      <param name="Arguments">선택 사항입니다. <see langword="ParamArray" />. 형식이며 호출되는 속성이나 메서드에 전달될 인수가 포함된 매개 변수 배열입니다.</param>
      <returns>개체의 메서드를 실행하거나 개체의 속성을 설정 또는 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary>식이 숫자로 계산될 수 있는지 여부를 나타내는 부울 값을 반환합니다.</summary>
      <param name="Expression">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns>식이 숫자로 계산될 수 있는지 여부를 나타내는 부울 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary>변수의 시스템 데이터 형식 이름을 포함하는 문자열 값을 반환합니다.</summary>
      <param name="VbName">필수 요소. Visual Basic 형식 이름을 포함하는 문자열 변수입니다.</param>
      <returns>변수의 시스템 데이터 형식 이름을 포함하는 문자열 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary>변수에 대한 데이터 형식 정보를 포함하는 문자열 값을 반환합니다.</summary>
      <param name="Expression">필수 요소. <see langword="Object" /> 변수입니다. <see langword="Option Strict" />가 <see langword="Off" />이면 구조체를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</param>
      <returns>변수에 대한 데이터 형식 정보를 포함하는 문자열 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary>변수의 Visual Basic 데이터 형식 이름을 포함하는 문자열 값을 반환합니다.</summary>
      <param name="SystemName">필수 요소. 공용 언어 런타임에서 사용되는 형식 이름을 포함하는 문자열 변수입니다.</param>
      <returns>변수의 Visual Basic 데이터 형식 이름을 포함하는 문자열 값을 반환합니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary>
        <see langword="Constants" /> 모듈에는 기타 상수가 포함되어 있습니다. 이 상수는 코드의 모든 위치에서 사용할 수 있습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary>메시지 상자에서 <see langword="Abort" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary>
        <see langword="Abort" /> 함수가 호출될 때 <see langword="Retry" />, <see langword="Ignore" /> 및 <see langword="MsgBox" /> 단추가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary>
        <see langword="MsgBox" /> 함수가 호출될 때 메시지 상자가 모달 대화 상자로 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary>파일 액세스 함수에 대한 마지막 백업 작업 이후 파일이 변경되었음을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary>variant 개체의 형식이 배열임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary>인쇄 및 표시 함수의 백스페이스 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary>비교 함수가 호출될 때 이진 비교가 수행되어야 함을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary>variant 개체의 형식이 <see langword="Boolean" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary>variant 개체의 형식이 <see langword="Byte" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary>메시지 상자에서 <see langword="Cancel" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary>인쇄 및 표시 함수의 캐리지 리턴 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary>
        <see langword="MsgBox" /> 함수가 호출될 때 중대 오류 메시지 아이콘이 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary>인쇄 및 표시 함수의 캐리지 리턴 문자/줄 바꿈 문자 조합을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary>variant 개체의 형식이 <see langword="Currency" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary>variant 개체의 형식이 <see langword="Date" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary>variant 개체의 형식이 <see langword="Decimal" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary>메시지 상자가 나타날 때 맨 왼쪽 단추가 기본 단추로 선택됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary>메시지 상자가 나타날 때 왼쪽에서 두 번째 단추가 기본 단추로 선택됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary>메시지 상자가 나타날 때 왼쪽에서 세 번째 단추가 기본 단추로 선택됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary>파일이 파일 액세스 함수에 대한 디렉터리 또는 폴더임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary>variant 개체의 형식이 <see langword="Double" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary>variant 개체의 형식이 <see langword="Empty" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary>
        <see langword="MsgBox" /> 함수가 호출될 때 느낌표 아이콘이 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary>숫자 서식 지정 함수가 호출될 때 <see langword="Boolean" /> 값으로 <see langword="False" />가 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary>날짜 관련 함수가 호출될 때 해당 연도에서 4일 이상의 요일이 있는 첫째 주가 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary>날짜 관련 함수가 호출될 때 해당 연도에서 전체 요일이 있는 첫째 주가 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary>날짜 관련 함수가 호출될 때 해당 연도에서 1월 1일이 속하는 주가 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary>인쇄 함수의 용지 공급 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary>날짜 관련 함수가 호출될 때 금요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary>
        <see langword="FormatDateTime" /> 함수가 호출될 때 현재 문화권의 일반 날짜 서식이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary>
        <see langword="CallByName" /> 함수가 호출될 때 속성 값이 검색되어야 함을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary>파일이 파일 액세스 함수에 대한 숨겨진 파일임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary>
        <see langword="Shell" /> 함수가 호출될 때 호출된 프로그램에 대해 창 스타일이 숨겨짐을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary>
        <see langword="StrConv" /> 함수가 호출될 때 히라가나 문자가 가타카나 문자로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary>메시지 상자에서 <see langword="Ignore" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary>
        <see langword="MsgBox" /> 함수가 호출될 때 정보 아이콘이 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary>variant 개체의 형식이 <see langword="Integer" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary>
        <see langword="StrConv" /> 함수가 호출될 때 가타카나 문자가 히라가나 문자로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary>
        <see langword="CallByName" /> 함수가 호출될 때 속성 값이 개체 인스턴스로 설정되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary>인쇄 및 표시 함수의 줄 바꿈 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary>
        <see langword="StrConv" /> 함수가 호출될 때 파일 시스템 규칙 대신 언어 규칙을 사용하여 대/소문자가 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary>variant 개체의 형식이 <see langword="Long" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary>
        <see langword="FormatDateTime" /> 함수가 호출될 때 현재 문화권의 자세한 날짜 서식이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary>
        <see langword="FormatDateTime" /> 함수가 호출될 때 현재 문화권의 자세한 시간 서식이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary>
        <see langword="StrConv" /> 함수가 호출될 때 문자가 소문자로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary>
        <see langword="Shell" /> 함수가 호출될 때 호출된 프로그램에 대해 포커스가 있는 창 스타일이 최대화됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary>
        <see langword="CallByName" /> 함수가 호출될 때 메서드가 호출되어야 함을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary>
        <see langword="Shell" /> 함수가 호출될 때 호출된 프로그램에 대해 포커스가 있는 창 스타일이 최소화됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary>
        <see langword="Shell" /> 함수가 호출될 때 호출된 프로그램에 대해 포커스가 없는 창 스타일이 최소화됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary>날짜 관련 함수가 호출될 때 월요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary>
        <see langword="Help" /> 함수가 호출될 때 <see langword="MsgBox" /> 단추가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary>
        <see langword="MsgBox" /> 함수가 호출될 때 텍스트가 오른쪽에 맞춰짐을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary>
        <see langword="MsgBox" /> 함수가 호출될 때 오른쪽에서 왼쪽으로 읽는 텍스트(히브리어 및 아랍어 시스템)가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary>
        <see langword="MsgBox" /> 함수가 호출될 때 메시지 상자가 전경에 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary>
        <see langword="StrConv" /> 함수가 호출될 때 넓은 문자(더블바이트)가 좁은 문자(싱글바이트)로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary>인쇄 및 표시 함수의 줄 바꿈 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary>메시지 상자에서 <see langword="No" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary>파일이 파일 액세스 함수에 대한 일반 파일임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary>
        <see langword="Shell" /> 함수가 호출될 때 호출된 프로그램에 대해 창 스타일이 포커스가 있는 표준 스타일임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary>
        <see langword="Shell" /> 함수가 호출될 때 호출된 프로그램에 대해 창 스타일이 포커스가 없는 표준 스타일임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary>variant 개체의 형식이 <see langword="Nothing" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary>인쇄 및 표시 함수의 null 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary>인쇄 및 표시 함수의 길이가 0인 문자열을 나타나며 외부 프로시저를 호출하는 데 사용됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary>variant 개체의 형식이 <see langword="Object" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary>개체 오류 번호를 나타냅니다. 사용자 정의 오류 번호는 이 값보다 커야 합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary>메시지 상자에서 <see langword="OK" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary>
        <see langword="OK" /> 함수가 호출될 때 <see langword="Cancel" /> 및 <see langword="MsgBox" /> 단추가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary>
        <see langword="OK" /> 함수가 호출될 때 <see langword="MsgBox" /> 단추만 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary>
        <see langword="StrConv" /> 함수가 호출될 때 문자열에서 모든 단어의 첫 글자가 대문자로 변환되고 나머지는 소문자로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary>
        <see langword="MsgBox" /> 함수가 호출될 때 물음표 아이콘이 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary>파일이 파일 액세스 함수에 대한 읽기 전용 파일임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary>메시지 상자에서 <see langword="Retry" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary>
        <see langword="Retry" /> 함수가 호출될 때 <see langword="Cancel" /> 및 <see langword="MsgBox" /> 단추가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary>날짜 관련 함수가 호출될 때 토요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary>
        <see langword="CallByName" /> 함수가 호출될 때 속성 값이 설정되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary>
        <see langword="FormatDateTime" /> 함수가 호출될 때 현재 문화권의 간단한 날짜 서식이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary>
        <see langword="FormatDateTime" /> 함수가 호출될 때 현재 문화권의 간단한 시간 서식이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary>
        <see langword="StrConv" /> 함수가 호출될 때 문자가 중국어 간체로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary>variant 개체의 형식이 <see cref="T:System.Single" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary>variant 개체의 형식이 <see langword="String" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary>날짜 관련 함수가 호출될 때 일요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary>파일이 파일 액세스 함수에 대한 시스템 파일임을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary>
        <see langword="MsgBox" /> 함수가 호출될 때 메시지 상자가 모달 대화 상자로 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary>인쇄 및 표시 함수의 탭 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary>비교 함수가 호출될 때 텍스트 비교가 수행되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary>날짜 관련 함수가 호출될 때 목요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary>
        <see langword="StrConv" /> 함수가 호출될 때 문자가 중국어 번체로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary>숫자 서식 지정 함수가 호출될 때 <see langword="Boolean" /> 값으로 <see langword="True" />가 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary>날짜 관련 함수가 호출될 때 화요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary>
        <see langword="StrConv" /> 함수가 호출될 때 문자가 대문자로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary>숫자 서식 지정 함수가 호출될 때 기본 <see langword="Boolean" /> 값이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary>variant 개체의 형식이 사용자 정의 형식임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary>날짜 관련 함수가 호출될 때 해당 시스템에서 해당 연도의 첫째 주로 지정한 주가 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary>날짜 관련 함수가 호출될 때 해당 시스템에서 주의 첫째 요일로 지정한 요일이 사용되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary>variant 개체의 형식이 <see langword="Variant" />임을 나타냅니다. <see langword="VarType" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary>인쇄 함수의 캐리지 리턴 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary>파일 액세스 함수에 대한 볼륨 레이블 파일 특성을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary>날짜 관련 함수가 호출될 때 수요일이 해당 주의 첫째 요일로 사용되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary>
        <see langword="StrConv" /> 함수가 호출될 때 좁은 문자(싱글바이트)가 넓은 문자(더블바이트)로 변환되어야 함을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary>메시지 상자에서 <see langword="Yes" /> 단추가 클릭되었음을 나타냅니다. <see langword="MsgBox" /> 함수에 의해 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary>
        <see langword="Yes" /> 함수가 호출될 때 <see langword="No" /> 및 <see langword="MsgBox" /> 단추가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary>
        <see langword="Yes" /> 함수가 호출될 때 <see langword="No" />, <see langword="Cancel" /> 및 <see langword="MsgBox" /> 단추가 표시됨을 나타냅니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary>
        <see langword="ControlChars" /> 모듈에는 제어 문자로 사용되는 상수가 포함되어 있습니다. 이 상수는 코드의 모든 위치에서 사용할 수 있습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary>백스페이스 문자(<see langword="vbBack" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary>캐리지 리턴 문자(<see langword="vbCr" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary>캐리지 리턴/줄 바꿈 문자 조합(<see langword="vbCrLf" />)을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary>인쇄 함수의 용지 공급 문자(<see langword="vbFormFeed" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary>라인 피드 문자(<see langword="vbLf" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary>줄 바꿈 문자(<see langword="vbNewLine" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary>null 문자(<see langword="vbNullChar" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary>큰따옴표 문자를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary>탭 문자(<see langword="vbTab" />)를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary>세로 탭 문자(<see langword="vbVerticalTab" />)를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.ControlChars" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary>
        <see langword="Conversion" /> 모듈에는 다양한 변환 작업을 수행하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary>개체를 지정된 형식으로 변환합니다.</summary>
      <param name="Expression">변환할 개체입니다.</param>
      <param name="TargetType">개체를 변환할 대상 형식입니다.</param>
      <returns>런타임에서의 형식이 요청된 대상 형식인 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary>개체를 지정된 제네릭 형식으로 변환합니다.</summary>
      <param name="Expression">변환할 개체입니다.</param>
      <typeparam name="TargetType">개체를 변환할 대상 형식입니다.</typeparam>
      <returns>요청된 제네릭 형식으로 정적 형식이 지정된 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary>지정한 오류 번호에 해당하는 오류 메시지를 반환합니다.</summary>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" />이 범위에서 벗어난 경우.</exception>
      <returns>최근 런타임 오류에 해당하는 오류 메시지입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary>지정한 오류 번호에 해당하는 오류 메시지를 반환합니다.</summary>
      <param name="ErrorNumber">선택 사항입니다. 유효한 임의의 오류 번호입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" />이 범위에서 벗어난 경우.</exception>
      <returns>지정한 오류 번호에 해당하는 오류 메시지입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Decimal" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see cref="T:System.Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Short" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Integer" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Long" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Object" /> 형식의 수이거나 임의의 유효한 숫자 식입니다. <paramref name="Number" />에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see cref="T:System.Single" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary>숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary>숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary>숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary>숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary>숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary>숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary>숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary>숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary>숫자의 16진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 16진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Decimal" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see cref="T:System.Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Short" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Integer" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Long" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Object" /> 형식의 수이거나 임의의 유효한 숫자 식입니다. <paramref name="Number" />에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary>숫자의 정수 부분을 반환합니다.</summary>
      <param name="Number">필수 요소. <see cref="T:System.Single" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">Number를 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">Number가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 정수 부분입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary>숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary>숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary>숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary>숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary>숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary>숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary>숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary>숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary>숫자의 8진수 값을 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 8진수 값을 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary>숫자를 나타내는 <see langword="String" />을 반환합니다.</summary>
      <param name="Number">필수 요소. 임의의 유효한 숫자 식을 포함하는 <see langword="Object" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" />을(를) 지정하지 않았습니다.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Number" />가 숫자 형식이 아닙니다.</exception>
      <returns>숫자의 <see langword="String" /> 표현입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary>문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</summary>
      <param name="Expression">필수 요소. 모든 유효한 <see langword="String" /> 식, <see langword="Object" /> 변수 또는 <see langword="Char" /> 값입니다. <paramref name="Expression" />이 <see langword="Object" /> 형식인 경우 해당 값을 <see langword="String" />으로 변환할 수 있어야 합니다. 그렇지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" />이 너무 큰 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" />은 <see langword="String" />으로 변환할 수 없는 <see langword="Object" /> 형식의 식인 경우</exception>
      <returns>문자열에 포함된 숫자는 적절한 형식의 숫자 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary>문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</summary>
      <param name="Expression">필수 요소. 모든 유효한 <see langword="String" /> 식, <see langword="Object" /> 변수 또는 <see langword="Char" /> 값입니다. <paramref name="Expression" />이 <see langword="Object" /> 형식인 경우 해당 값을 <see langword="String" />으로 변환할 수 있어야 합니다. 그렇지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" />이 너무 큰 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" />은 <see langword="String" />으로 변환할 수 없는 <see langword="Object" /> 형식의 식인 경우</exception>
      <returns>문자열에 포함된 숫자는 적절한 형식의 숫자 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary>문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</summary>
      <param name="InputStr">필수 요소. 모든 유효한 <see langword="String" /> 식, <see langword="Object" /> 변수 또는 <see langword="Char" /> 값입니다. <paramref name="Expression" />이 <see langword="Object" /> 형식인 경우 해당 값을 <see langword="String" />으로 변환할 수 있어야 합니다. 그렇지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" />이 너무 큰 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" />은 <see langword="String" />으로 변환할 수 없는 <see langword="Object" /> 형식의 식인 경우</exception>
      <returns>문자열에 포함된 숫자는 적절한 형식의 숫자 값입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary>
        <see langword="DateAndTime" /> 모듈에는 날짜 및 시간 작업에 사용되는 프로시저와 속성이 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary>지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값을 반환합니다.</summary>
      <param name="Interval">필수 요소. 추가할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
      <param name="Number">필수 요소. 더할 간격의 수를 나타내는 부동 소수점 식입니다. 미래의 날짜/시간 값을 구하는 경우에는 양수이고 과거의 날짜/시간 값을 구하는 경우에는 음수입니다. <paramref name="Interval" />이 시간, 분 또는 초로 지정되는 경우에는 소수 부분이 포함될 수 있습니다. 다른 <paramref name="Interval" /> 값의 경우에 <paramref name="Number" />의 소수 부분은 무시됩니다.</param>
      <param name="DateValue">필수 요소. 간격을 더할 날짜와 시간을 나타내는 식입니다. <paramref name="DateValue" /> 자체는 호출 프로그램에서 변경되지 않습니다.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" />가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">계산된 날짜가 0001년 1월 1일 00:00:00시 이전 또는 9999년 12월 31일 23:59:59시 이후입니다.</exception>
      <returns>지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary>지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값을 반환합니다.</summary>
      <param name="Interval">필수 요소. 추가할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
      <param name="Number">필수 요소. 더할 간격의 수를 나타내는 부동 소수점 식입니다. <paramref name="Number" />는 미래의 날짜/시간 값을 구하는 경우에는 양수이고 과거의 날짜/시간 값을 구하는 경우에는 음수입니다. <paramref name="Interval" />이 시간, 분 또는 초로 지정되는 경우에는 소수 부분이 포함될 수 있습니다. 다른 <paramref name="Interval" /> 값의 경우에 <paramref name="Number" />의 소수 부분은 무시됩니다.</param>
      <param name="DateValue">필수 요소. 간격을 더할 날짜와 시간을 나타내는 식입니다. <paramref name="DateValue" /> 자체는 호출 프로그램에서 변경되지 않습니다.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" />가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">계산된 날짜가 0001년 1월 1일 00:00:00시 이전 또는 9999년 12월 31일 23:59:59시 이후입니다.</exception>
      <returns>지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값을 반환합니다.</summary>
      <param name="Interval">필수 요소. <paramref name="Date1" />과 <paramref name="Date2" /> 사이의 시간차 단위로 사용할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
      <param name="Date1">필수 요소. 계산에 사용할 첫째 날짜/시간 값입니다.</param>
      <param name="Date2">필수 요소. 계산에 사용할 둘째 날짜/시간 값입니다.</param>
      <param name="DayOfWeek">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
      <param name="WeekOfYear">선택 사항입니다. 연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" /> 또는 <paramref name="DayofWeek" />가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> 또는 <paramref name="Date2" />가 잘못된 형식입니다.</exception>
      <returns>두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값을 반환합니다.</summary>
      <param name="Interval">필수 요소. <paramref name="Date1" />과 <paramref name="Date2" /> 사이의 시간차 단위로 사용할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
      <param name="Date1">필수 요소. 계산에 사용할 첫째 날짜/시간 값입니다.</param>
      <param name="Date2">필수 요소. 계산에 사용할 둘째 날짜/시간 값입니다.</param>
      <param name="DayOfWeek">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
      <param name="WeekOfYear">선택 사항입니다. 연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" /> 또는 <paramref name="DayofWeek" />가 범위를 벗어났습니다.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> 또는 <paramref name="Date2" />가 잘못된 형식입니다.</exception>
      <returns>두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>지정된 <see langword="Date" /> 값의 지정된 구성 요소를 포함하는 정수 값을 반환합니다.</summary>
      <param name="Interval">필수 요소. 반환할 날짜/시간 값의 부분을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
      <param name="DateValue">필수 요소. 계산할 <see langword="Date" /> 값입니다.</param>
      <param name="FirstDayOfWeekValue">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
      <param name="FirstWeekOfYearValue">선택 사항입니다. 연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" />가 잘못된 경우</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</exception>
      <returns>지정된 <see langword="Date" /> 값의 지정된 구성 요소가 포함된 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>지정된 <see langword="Date" /> 값의 지정된 구성 요소가 포함된 값을 반환합니다.</summary>
      <param name="Interval">필수 요소. 반환할 날짜/시간 값의 부분을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
      <param name="DateValue">필수 요소. 계산할 <see langword="Date" /> 값입니다.</param>
      <param name="DayOfWeek">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
      <param name="WeekOfYear">선택 사항입니다. 연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</exception>
      <returns>지정된 <see langword="Date" /> 값의 지정된 구성 요소가 포함된 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary>시간 정보가 자정(00:00:00)으로 설정된 상태에서 지정된 년, 월, 일을 나타내는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="Year">필수 요소. 1에서 9999까지의 정수 식입니다. 이 범위 아래의 값도 사용할 수 있습니다. <paramref name="Year" />가 0부터 99인 경우에는 아래의 "설명" 단원에 나온 것처럼 1930과 2029 사이의 값으로 해석되며, <paramref name="Year" />가 1보다 작은 경우에는 현재 연도에서 해당 값을 뺍니다.</param>
      <param name="Month">필수 요소. 1에서 12까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다. <paramref name="Month" />의 값은 1만큼 오프셋되어 계산된 연도의 1월에 적용됩니다. 즉, (<paramref name="Month" /> - 1)이 1월에 더해집니다. 필요한 경우에는 연도가 다시 계산됩니다. 다음은 Day 값이 계산된 결과입니다. 
<paramref name="Month" />가 1이면 계산된 연도의 1월입니다.  
  
<paramref name="Month" />가 0이면 이전 연도의 12월입니다.  
  
<paramref name="Month" />가 -1이면 이전 연도의 11월입니다.  
  
<paramref name="Month" />가 13이면 다음 연도의 1월입니다.</param>
      <param name="Day">필수 요소. 1에서 31까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다. <paramref name="Day" />의 값은 1만큼 오프셋되어 계산된 월의 1일에 적용됩니다. 즉, (<paramref name="Day" />- 1)이 해당 월의 1일에 더해집니다. 필요한 경우에는 월과 연도가 다시 계산됩니다. 다음은 Day 값이 계산된 결과입니다. 
<paramref name="Day" />가 1이면 계산된 월의 1일입니다.  
  
<paramref name="Day" />가 0이면 이전 월의 마지막 날짜입니다.  
  
<paramref name="Day" />가 -1이면 이전 월의 끝에서 두 번째 날짜입니다.  
  
<paramref name="Day" />가 현재 월의 마지막 날짜 값을 넘으면 다음 월의 해당되는 날짜입니다. 예를 들어, <paramref name="Month" />가 4이고 <paramref name="Day" />가 31이면 5월 1일입니다.</param>
      <returns>시간 정보가 자정(00:00:00)으로 설정된 상태에서 지정된 년, 월, 일을 나타내는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary>시간 정보가 자정(00:00:00)으로 설정된 상태에서 문자열로 표시된 날짜 정보가 들어 있는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="StringDate">필수 요소. 1년 1월 1일 00:00:00부터 9999년 12월 31일 23:59:59까지의 날짜/시간 값을 나타내는 문자열 식입니다.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringDate" />에 잘못된 날짜 정보가 들어 있습니다.</exception>
      <returns>시간 정보가 자정(00:00:00)으로 설정된 상태에서 문자열로 표시된 날짜 정보가 들어 있는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary>날짜를 나타내는 1에서 31까지의 정수 값을 반환합니다.</summary>
      <param name="DateValue">필수 요소. 일을 추출할 <see langword="Date" /> 값입니다.</param>
      <returns>날짜를 나타내는 1에서 31까지의 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary>시간을 나타내는 0에서 23까지의 정수 값을 반환합니다.</summary>
      <param name="TimeValue">필수 요소. 시간을 추출할 <see langword="Date" /> 값입니다.</param>
      <returns>시간을 나타내는 0에서 23까지의 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary>분을 나타내는 0에서 59까지의 정수 값을 반환합니다.</summary>
      <param name="TimeValue">필수 요소. 분을 추출할 <see langword="Date" /> 값입니다.</param>
      <returns>분을 나타내는 0에서 59까지의 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary>월을 나타내는 1에서 12까지의 정수 값을 반환합니다.</summary>
      <param name="DateValue">필수 요소. 월을 추출할 <see langword="Date" /> 값입니다.</param>
      <returns>월을 나타내는 1에서 12까지의 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary>지정된 월의 이름을 포함하는 문자열 값을 반환합니다.</summary>
      <param name="Month">필수 요소. 1부터 13 사이의 숫자로 지정된 월 이름입니다. 여기서 1은 1월을 나타내고 12는 12월을 나타냅니다. 13개월용 달력의 경우에는 값 13을 사용할 수 있습니다. 시스템에서 12개월용 달력을 사용하는 경우 <paramref name="Month" />가 13이면 <c>MonthName</c>은 빈 문자열을 반환합니다.</param>
      <param name="Abbreviate">선택 사항입니다. 월 이름을 축약하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Month" />가 1보다 작거나 13보다 큽니다.</exception>
      <returns>지정된 월의 이름을 포함하는 문자열 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary>초를 나타내는 0에서 59까지의 정수 값을 반환합니다.</summary>
      <param name="TimeValue">필수 요소. 초를 추출할 <see langword="Date" /> 값입니다.</param>
      <returns>초를 나타내는 0에서 59까지의 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary>날짜 정보가 1년 1월 1일로 설정된 상태에서 지정된 시, 분, 초를 나타내는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="Hour">필수 요소. 0에서 23까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</param>
      <param name="Minute">필수 요소. 0에서 59까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다. <paramref name="Minute" />의 값은 계산된 시간에 더해지므로 음수 값은 계산된 시간에서 이 값만큼 뺀 분을 지정합니다.</param>
      <param name="Second">필수 요소. 0에서 59까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다. <paramref name="Second" />의 값은 계산된 분에 더해지므로 음수 값은 계산된 분에서 이 값만큼 뺀 초를 지정합니다.</param>
      <exception cref="T:System.ArgumentException">인수의 범위가 -2,147,483,648 ~ 2,147,483,647을 벗어났습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">계산된 시간이 -24 시보다 작습니다.</exception>
      <returns>날짜 정보가 1년 1월 1일로 설정된 상태에서 지정된 시, 분, 초를 나타내는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary>날짜 정보가 1년 1월 1일로 설정된 상태에서 문자열로 표시된 시간 정보가 들어 있는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="StringTime">필수 요소. 1년 1월 1일 00:00:00부터 9999년 12월 31일 23:59:59까지의 날짜/시간 값을 나타내는 문자열 식입니다.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringTime" />에 잘못된 날짜 정보가 들어 있습니다.</exception>
      <returns>날짜 정보가 1년 1월 1일로 설정된 상태에서 문자열로 표시된 시간 정보를 포함하는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>요일을 나타내는 숫자를 포함하는 정수 값을 반환합니다.</summary>
      <param name="DateValue">필수 요소. 요일을 확인할 <see langword="Date" /> 값입니다.</param>
      <param name="DayOfWeek">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="DayOfWeek" />가 0보다 작거나 7보다 큽니다.</exception>
      <returns>요일을 나타내는 숫자를 포함하는 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>지정한 평일의 이름을 포함하는 문자열 값을 반환합니다.</summary>
      <param name="Weekday">필수 요소. 정수입니다. 형식이며 요일에 대해 지정된 1부터 7까지의 숫자 값입니다. 1은 주의 첫째 요일을 나타내고 7은 주의 마지막 요일을 나타냅니다. 첫째 요일과 마지막 요일은 <paramref name="FirstDayOfWeekValue" />의 설정에 따라 달라집니다.</param>
      <param name="Abbreviate">선택 사항입니다. 해당 요일 이름이 약식 이름인지 여부를 나타내는 <see langword="Boolean" /> 값입니다. 이 인수가 생략된 경우 기본값은 <see langword="False" />이며 해당 요일 이름이 약식 이름이 아님을 나타냅니다.</param>
      <param name="FirstDayOfWeekValue">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see langword="FirstDayOfWeek.System" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Weekday" />가 1-7 범위를 벗어났거나 <paramref name="FirstDayOfWeekValue" />가 0-7 범위를 벗어났습니다.</exception>
      <returns>지정한 평일의 이름을 포함하는 문자열 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary>연도를 나타내는 1에서 9999까지의 정수 값을 반환합니다.</summary>
      <param name="DateValue">필수 요소. 연도를 추출할 원래 <see langword="Date" /> 값입니다.</param>
      <returns>연도를 나타내는 1에서 9999까지의 정수 값입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary>시스템의 현재 날짜를 나타내는 문자열 값을 반환하거나 설정합니다.</summary>
      <exception cref="T:System.InvalidCastException">
        <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" /> 값을 설정하는 데 사용된 형식이 잘못되었습니다.</exception>
      <returns>시스템의 현재 날짜를 나타내는 문자열 값을 반환하거나 설정합니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary>시스템 설정에 따라 현재 날짜와 시간이 들어 있는 값을 반환합니다.</summary>
      <returns>시스템에 따라 현재 날짜 및 시간입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary>시스템 설정에 따라 현재 시간이 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</summary>
      <returns>시스템 설정에 따라 현재 시간이 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary>자정 이후 경과된 초 수를 나타내는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
      <returns>자정 이후 경과 된 시간 (초)을 나타내는 값입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary>시스템의 현재 시간을 나타내는 문자열 값을 반환하거나 설정합니다.</summary>
      <exception cref="T:System.InvalidCastException">
        <see langword="TimeString" /> 값을 설정하는 데 사용된 형식이 잘못되었습니다.</exception>
      <returns>시스템의 현재 시간을 나타내는 문자열 값을 반환하거나 설정합니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary>사용 중인 시스템에 따라 현재 날짜가 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</summary>
      <returns>사용 중인 시스템에 따라 현재 날짜가 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary>
        <see langword="FormatDateTime" /> 함수를 호출할 때 날짜가 표시되는 방법을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary>실수로 날짜와 시간을 표시합니다. 숫자에 소수 부분이 없으면 날짜만 표시합니다. 숫자에 정수 부분이 없으면 시간만 표시합니다. 날짜와 시간은 시스템의 국가별 설정에 따라 결정됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbGeneralDate" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary>시스템의 국가별 설정에 지정된 자세한 날짜 형식을 사용하여 날짜를 표시합니다. 이 멤버는 Visual Basic 상수 <see langword="vbLongDate" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary>시스템의 국가별 설정에 지정된 자세한 시간 형식을 사용하여 시간을 표시합니다. 이 멤버는 Visual Basic 상수 <see langword="vbLongTime" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary>시스템의 국가별 설정에 지정된 간단한 날짜 형식을 사용하여 날짜를 표시합니다. 이 멤버는 Visual Basic 상수 <see langword="vbShortDate" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary>시스템의 국가별 설정에 지정된 간단한 시간 형식을 사용하여 시간을 표시합니다. 이 멤버는 Visual Basic 상수 <see langword="vbShortTime" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary>날짜 관련 함수를 호출할 때 날짜 간격을 결정하고 형식을 지정하는 방법을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary>월간 일자(1~31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary>연간 일자(1~366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary>시간(0~23)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary>분(0~59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary>월(1~12)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary>연간 사분기(1~4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary>초(0~59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary>요일(1~7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary>연간 주(1~53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary>Year</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary>금융 메서드를 호출할 때 지불 만기일을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary>날짜 간격의 시작 지점에 위치합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary>날짜 간격의 끝 지점에 위치합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary>
        <see langword="ErrObject" /> 모듈에는 <see langword="Err" /> 개체를 사용하여 런타임 오류를 식별하고 처리하는 속성과 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary>
        <see langword="Err" /> 개체의 모든 속성 설정을 지웁니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary>발생한 오류를 나타내는 예외를 반환합니다.</summary>
      <returns>발생한 오류를 나타내는 예외입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary>런타임 오류를 생성하며 <see langword="Error" /> 문 대신 사용할 수 있습니다.</summary>
      <param name="Number">필수 요소. 오류의 속성을 식별하는 <see langword="Long" /> 형식의 정수입니다. Visual Basic 오류의 범위는 0~65535 사이이며, 0~512 사이의 범위는 시스템 오류로 예약되어 있고, 513~65535 사이의 범위는 사용자 정의 오류로 사용할 수 있습니다. <see langword="Number" /> 속성을 클래스 모듈의 사용자 고유 오류 코드로 설정하는 경우 <see langword="vbObjectError" /> 상수에 사용자의 오류 코드 번호를 추가합니다. 예를 들어, 513 오류 번호를 생성하려면 <c>vbObjectError + 513</c>을 <see langword="Number" /> 속성에 할당합니다.</param>
      <param name="Source">선택 사항입니다. 오류를 생성한 개체 또는 애플리케이션의 이름을 지정하는 <see langword="String" /> 식입니다. 개체에 대해 이 속성을 설정할 때는 <c>project</c>.<c>class</c> 형식을 사용합니다. <paramref name="Source" />가 지정되어 있지 않으면 현재 Visual Basic 프로젝트의 프로세스 ID가 사용됩니다.</param>
      <param name="Description">선택 사항입니다. 오류를 설명하는 <see langword="String" /> 식입니다. 이 인수가 지정되지 않으면 <see langword="Number" /> 속성의 값이 검사됩니다. Visual Basic 런타임 오류 코드에 매핑될 수 있는 경우 <see langword="Error" /> 함수로 반환되는 문자열이 <see langword="Description" /> 속성으로 사용됩니다. <see langword="Number" /> 속성과 일치하는 Visual Basic 오류가 없으면 "애플리케이션 정의 또는 개체 정의 오류입니다."라는 메시지가 사용됩니다.</param>
      <param name="HelpFile">선택 사항입니다. 이 오류에 대한 도움말을 찾을 수 있는 도움말 파일의 정규화된 경로입니다. 이 인수가 지정되지 않으면 Visual Basic은 Visual Basic 도움말 파일의 정규화된 드라이브, 경로 및 파일 이름을 사용합니다.</param>
      <param name="HelpContext">선택 사항입니다. 오류에 대한 도움말이 제공되는 <paramref name="HelpFile" /> 내의 항목을 식별하는 컨텍스트 ID입니다. 이 인수가 생략된 경우 <see langword="Number" /> 속성에 해당하는 오류의 Visual Basic 도움말 파일 컨텍스트 ID가 있으면 해당 ID가 사용됩니다.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary>오류와 연결된 설명 문자열을 포함하는 <see langword="String" /> 식을 반환하거나 설정합니다. 읽기/쓰기입니다.</summary>
      <returns>오류와 연결된 설명 문자열을 포함하는 <see langword="String" /> 식을 반환하거나 설정합니다. 읽기/쓰기입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary>마지막으로 실행된 문의 줄 번호를 나타내는 정수를 가져옵니다.</summary>
      <returns>마지막으로 실행 된 문의 줄 번호입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpContext">
      <summary>도움말 파일 항목의 컨텍스트 ID를 포함하는 <see langword="Integer" />를 반환하거나 설정합니다. 읽기/쓰기입니다.</summary>
      <returns>도움말 파일 항목의 컨텍스트 ID를 포함하는 <see langword="Integer" />를 반환하거나 설정합니다. 읽기/쓰기입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpFile">
      <summary>도움말 파일의 정규화된 경로를 포함하는 <see langword="String" /> 식을 반환하거나 설정합니다. 읽기/쓰기입니다.</summary>
      <returns>도움말 파일의 정규화된 경로를 포함하는 <see langword="String" /> 식을 반환하거나 설정합니다. 읽기/쓰기입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary>DLL(동적 연결 라이브러리)을 호출하는 경우 생성되는 시스템 오류 코드를 가져옵니다.</summary>
      <returns>DLL (동적 연결 라이브러리)을 호출 하 여 생성 된 시스템 오류 코드입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary>오류를 지정하는 숫자 값을 반환하거나 설정합니다. 읽기/쓰기입니다.</summary>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 65535보다 큽니다.</exception>
      <returns>오류를 지정하는 숫자 값을 반환하거나 설정합니다. 읽기/쓰기입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Source">
      <summary>오류를 생성한 원래 개체 또는 애플리케이션의 이름을 지정하는 <see langword="String" /> 식을 반환하거나 설정합니다. 읽기/쓰기입니다.</summary>
      <returns>오류를 생성한 원래 개체 또는 애플리케이션의 이름을 지정하는 <see langword="String" /> 식을 반환하거나 설정합니다. 읽기/쓰기입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary>파일 액세스 함수를 호출할 때 사용할 파일 특성을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary>마지막 백업 이후에 파일이 변경되었습니다. 이 멤버는 Visual Basic 상수 <see langword="vbArchive" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary>디렉터리 또는 폴더입니다. 이 멤버는 Visual Basic 상수 <see langword="vbDirectory" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary>숨겨져 있습니다. 이 멤버는 Visual Basic 상수 <see langword="vbHidden" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary>표준(<see langword="Dir" /> 및 <see langword="SetAttr" />의 기본값)입니다. 이 파일에는 별도의 특성이 적용되지 않습니다. 이 멤버는 Visual Basic 상수 <see langword="vbNormal" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary>읽기 전용입니다. 이 멤버는 Visual Basic 상수 <see langword="vbReadOnly" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary>시스템 파일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbSystem" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary>볼륨 레이블입니다. 이 특성은 <see langword="SetAttr" />와 함께 사용할 수 없습니다. 이 멤버는 Visual Basic 상수 <see langword="vbVolume" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary>삭제될 디렉터리에 파일이나 디렉터리가 포함된 경우 수행해야 하는 작업을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary>디렉터리와 함께 디렉터리의 내용을 삭제합니다. 기본.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary>디렉터리가 비어 있지 않은 경우 <see cref="T:System.IO.IOException" />을 throw합니다. 예외의 <see langword="Data" /> 속성은 삭제할 수 없는 파일을 나열합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary>텍스트 필드가 구분되는지 또는 고정된 너비인지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary>필드가 구분됨을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary>필드가 고정 너비임을 나타냅니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary>드라이브, 파일 및 디렉터리를 사용하기 위한 속성 및 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary>두 경로를 결합하여 올바른 형식의 경로를 반환합니다.</summary>
      <param name="baseDirectory">
        <see langword="String" />. 결합할 첫 번째 경로입니다.</param>
      <param name="relativePath">
        <see langword="String" />. 결합할 두 번째 경로입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> 또는  <paramref name="relativePath" />에 잘못된 경로가 있습니다.</exception>
      <returns>지정된 경로의 조합입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary>디렉터리의 내용을 다른 디렉터리에 복사합니다.</summary>
      <param name="sourceDirectoryName">복사할 디렉터리입니다.</param>
      <param name="destinationDirectoryName">디렉터리 내용이 복사될 위치입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">소스 디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException">소스 경로와 대상 경로가 같은 경우</exception>
      <exception cref="T:System.InvalidOperationException">작업이 순환적인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 폴더 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">대상 파일은 있지만 액세스할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>디렉터리의 내용을 다른 디렉터리에 복사합니다.</summary>
      <param name="sourceDirectoryName">복사할 디렉터리입니다.</param>
      <param name="destinationDirectoryName">디렉터리 내용이 복사될 위치입니다.</param>
      <param name="showUI">작업 진행을 시각적으로 추적할지 여부입니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">소스 디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException">소스 경로와 대상 경로가 같은 경우</exception>
      <exception cref="T:System.InvalidOperationException">작업이 순환적인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 폴더 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">대상 파일은 있지만 액세스할 수 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" />가 <see langword="UIOption.AllDialogs" />로 설정되어 있는데 사용자가 작업을 취소했거나 디렉터리에서 하나 이상의 파일을 복사할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>디렉터리의 내용을 다른 디렉터리에 복사합니다.</summary>
      <param name="sourceDirectoryName">복사할 디렉터리입니다.</param>
      <param name="destinationDirectoryName">디렉터리 내용이 복사될 위치입니다.</param>
      <param name="showUI">작업 진행을 시각적으로 추적할지 여부입니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="onUserCancel">작업 중에 사용자가 취소 를 클릭 하는 경우 수행할 작업을 지정 합니다. 기본값은 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">소스 디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException">소스 경로와 대상 경로가 같은 경우</exception>
      <exception cref="T:System.InvalidOperationException">작업이 순환적인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 폴더 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">대상 파일은 있지만 액세스할 수 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" />가 <see langword="UIOption.AllDialogs" />로 설정되어 있는데 사용자가 작업을 취소했거나 디렉터리에서 하나 이상의 파일을 복사할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>디렉터리의 내용을 다른 디렉터리에 복사합니다.</summary>
      <param name="sourceDirectoryName">복사할 디렉터리입니다.</param>
      <param name="destinationDirectoryName">디렉터리 내용이 복사될 위치입니다.</param>
      <param name="overwrite">기존 파일을 덮어쓰려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">소스 디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException">소스 경로와 대상 경로가 같은 경우</exception>
      <exception cref="T:System.InvalidOperationException">작업이 순환적인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 폴더 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">대상 파일은 있지만 액세스할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary>파일을 새 위치에 복사합니다.</summary>
      <param name="sourceFileName">복사할 파일입니다.</param>
      <param name="destinationFileName">파일을 복사할 대상 위치입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" />에 경로 정보가 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 또는 <paramref name="sourceFileName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException">대상 디렉터리에서 같은 이름의 파일이 사용 중인 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>파일을 새 위치에 복사합니다.</summary>
      <param name="sourceFileName">복사할 파일입니다.</param>
      <param name="destinationFileName">파일을 복사할 대상 위치입니다.</param>
      <param name="showUI">작업 진행을 시각적으로 추적할지 여부입니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" />에 경로 정보가 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 또는 <paramref name="sourceFileName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException">대상 파일이 있고 <paramref name="overwrite" />가 <see langword="False" />로 설정된 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>파일을 새 위치에 복사합니다.</summary>
      <param name="sourceFileName">복사할 파일입니다.</param>
      <param name="destinationFileName">파일을 복사할 대상 위치입니다.</param>
      <param name="showUI">작업 진행을 시각적으로 추적할지 여부입니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="onUserCancel">작업 중에 사용자가 취소 를 클릭 하는 경우 수행할 작업을 지정 합니다. 기본값은 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" />에 경로 정보가 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 또는 <paramref name="sourceFileName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException">대상 파일이 있고 <paramref name="overwrite" />가 <see langword="False" />로 설정된 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" />이 <see langword="ThrowException" />으로 설정된 상태에서 사용자가 작업을 취소했거나 지정되지 않은 I/O 오류가 발생한 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary>파일을 새 위치에 복사합니다.</summary>
      <param name="sourceFileName">복사할 파일입니다.</param>
      <param name="destinationFileName">파일을 복사할 대상 위치입니다.</param>
      <param name="overwrite">기존 파일을 덮어써야 하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" />에 경로 정보가 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 또는 <paramref name="sourceFileName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException">대상 파일이 있고 <paramref name="overwrite" />가 <see langword="False" />로 설정된 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary>디렉터리를 만듭니다.</summary>
      <param name="directory">디렉터리의 이름과 위치입니다.</param>
      <exception cref="T:System.ArgumentException">디렉터리 이름 형식이 잘못된 경우. 예를 들어, 파일 이름에 잘못된 문자가 들어 있거나 파일 이름이 공백인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">디렉터리 이름이 너무 긴 경우</exception>
      <exception cref="T:System.NotSupportedException">디렉터리 이름이 콜론(:)인 경우</exception>
      <exception cref="T:System.IO.IOException">만들 디렉터리의 부모 디렉터리가 읽기 전용인 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 디렉터리를 만들 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>디렉터리를 삭제합니다.</summary>
      <param name="directory">삭제할 디렉터리입니다.</param>
      <param name="onDirectoryNotEmpty">삭제될 디렉터리에 파일이나 디렉터리가 포함된 경우 수행해야 하는 작업을 지정합니다. 기본값은 <see langword="DeleteDirectoryOption.DeleteAllContents" />입니다.</param>
      <exception cref="T:System.ArgumentException">경로가 길이가 0인 문자열이거나, 형식이 잘못되었거나, 공백만 포함하거나, 와일드카드 문자를 비롯한 잘못된 문자를 포함하는 경우 경로가 \\.\로 시작하는 디바이스 경로인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">디렉터리가 없거나 파일인 경우</exception>
      <exception cref="T:System.IO.IOException">디렉터리나 하위 디렉터리의 파일이 사용되고 있는 경우</exception>
      <exception cref="T:System.NotSupportedException">디렉터리 이름에 콜론(:)이 포함됩니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException">사용자가 작업을 취소했거나 디렉터리를 삭제할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>디렉터리를 삭제합니다.</summary>
      <param name="directory">삭제할 디렉터리입니다.</param>
      <param name="showUI">작업 진행을 시각적으로 추적할지 여부를 지정합니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="recycle">삭제 된 파일을 휴지통으로 보낼지 여부를 지정 합니다. 기본값은 <see langword="RecycleOption.DeletePermanently" />입니다.</param>
      <exception cref="T:System.ArgumentException">경로가 길이가 0인 문자열이거나, 형식이 잘못되었거나, 공백만 포함하거나, 와일드카드 문자를 비롯한 잘못된 문자를 포함하는 경우 경로가 \\.\로 시작하는 디바이스 경로인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">디렉터리가 없거나 파일인 경우</exception>
      <exception cref="T:System.IO.IOException">디렉터리나 하위 디렉터리의 파일이 사용되고 있는 경우</exception>
      <exception cref="T:System.NotSupportedException">디렉터리 이름에 콜론(:)이 포함됩니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException">사용자가 작업을 취소했거나 디렉터리를 삭제할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>디렉터리를 삭제합니다.</summary>
      <param name="directory">삭제할 디렉터리입니다.</param>
      <param name="showUI">작업 진행을 시각적으로 추적할지 여부를 지정합니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="recycle">삭제 된 파일을 휴지통으로 보낼지 여부를 지정 합니다. 기본값은 <see langword="RecycleOption.DeletePermanently" />입니다.</param>
      <param name="onUserCancel">사용자가 취소를 클릭 하는 경우 예외를 throw 할지 여부를 지정 합니다.</param>
      <exception cref="T:System.ArgumentException">경로가 길이가 0인 문자열이거나, 형식이 잘못되었거나, 공백만 포함하거나, 와일드카드 문자를 비롯한 잘못된 문자를 포함하는 경우 경로가 \\.\로 시작하는 디바이스 경로인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">디렉터리가 없거나 파일인 경우</exception>
      <exception cref="T:System.IO.IOException">디렉터리나 하위 디렉터리의 파일이 사용되고 있는 경우</exception>
      <exception cref="T:System.NotSupportedException">디렉터리 이름에 콜론(:)이 포함됩니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException">사용자가 작업을 취소했거나 디렉터리를 삭제할 수 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary>파일을 삭제합니다.</summary>
      <param name="file">삭제할 파일의 이름과 경로입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 파일을 지정해야 하는 경로 마지막에 슬래시가 있거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.IOException">파일이 사용 중인 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 파일을 삭제할 권한이 없거나 파일이 읽기 전용인 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>파일을 삭제합니다.</summary>
      <param name="file">삭제할 파일의 이름과 경로입니다.</param>
      <param name="showUI">작업 진행을 시각적으로 추적할지 여부입니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="recycle">삭제 된 파일을 휴지통으로 보낼지 여부를 지정 합니다. 기본값은 <see langword="RecycleOption.DeletePermanently" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 파일을 지정해야 하는 경로 마지막에 슬래시가 있거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.IOException">파일이 사용 중인 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 파일을 삭제할 권한이 없거나 파일이 읽기 전용인 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>파일을 삭제합니다.</summary>
      <param name="file">삭제할 파일의 이름과 경로입니다.</param>
      <param name="showUI">작업 진행을 시각적으로 추적할지 여부입니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="recycle">삭제 된 파일을 휴지통으로 보낼지 여부를 지정 합니다. 기본값은 <see langword="RecycleOption.DeletePermanently" />입니다.</param>
      <param name="onUserCancel">사용자가 작업을 취소하는 경우 예외를 throw할지 여부를 지정합니다. 기본값은 <see langword="UICancelOption.ThrowException" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 파일을 지정해야 하는 경로 마지막에 슬래시가 있거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.IO.IOException">파일이 사용 중인 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 파일을 삭제할 권한이 없거나 파일이 읽기 전용인 경우</exception>
      <exception cref="T:System.OperationCanceledException">사용자가 작업을 취소했고 <paramref name="onUserCancel" />이 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />으로 설정된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary>지정된 디렉터리가 있으면 <see langword="True" />를 반환합니다.</summary>
      <param name="directory">디렉터리 경로입니다.</param>
      <returns>디렉터리가 있으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 매개 변수가 디렉터리가 아닌 파일의 이름 및 경로를 나타내는 경우에도 이 메서드는 <see langword="False" />를 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary>지정된 파일이 있으면 <see langword="True" />를 반환합니다.</summary>
      <param name="file">파일의 이름과 경로입니다.</param>
      <exception cref="T:System.ArgumentException">파일의 이름이 백슬래시(\)로 끝나는 경우</exception>
      <returns>이 메서드는 해당 파일이 있으면 <see langword="True" />를 반환하고, 그렇지 않으면 <see langword="False" />를 반환합니다. 매개 변수가 파일이 아닌 디렉터리의 경로를 나타내는 경우에도 이 메서드는 <see langword="False" />를 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>지정된 텍스트를 포함하는 파일 이름을 나타내는 문자열의 읽기 전용 컬렉션을 반환합니다.</summary>
      <param name="directory">검색할 디렉터리입니다.</param>
      <param name="containsText">검색 텍스트입니다.</param>
      <param name="ignoreCase">검색 시 대/소문자를 구분해야 하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="True" />입니다.</param>
      <param name="searchType">하위 폴더를 포함할지 여부입니다. 기본값은 <see langword="SearchOption.SearchTopLevelOnly" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0 인 문자열인 경우에는 경로가 유효 하지 않습니다. 공백만 포함 합니다. 잘못 된 문자가 포함 되어 있습니다. 또는 <c> \\ . \</c>로 시작 하는 장치 경로입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정한 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.IOException">지정한 디렉터리가 기존 파일을 가리킵니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">지정한 디렉터리 경로에 콜론(:)이 포함되어 있거나 잘못된 형식입니다.</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
      <returns>지정된 텍스트가 들어 있는 파일 이름의 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>지정된 텍스트를 포함하는 파일 이름을 나타내는 문자열의 읽기 전용 컬렉션을 반환합니다.</summary>
      <param name="directory">검색할 디렉터리입니다.</param>
      <param name="containsText">검색 텍스트입니다.</param>
      <param name="ignoreCase">검색 시 대/소문자를 구분해야 하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="True" />입니다.</param>
      <param name="searchType">하위 폴더를 포함할지 여부입니다. 기본값은 <see langword="SearchOption.SearchTopLevelOnly" />입니다.</param>
      <param name="fileWildcards">일치할 패턴입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0 인 문자열인 경우에는 경로가 유효 하지 않습니다. 공백만 포함 합니다. 잘못 된 문자가 포함 되어 있습니다. 또는 <c> \\ . \</c>로 시작 하는 장치 경로입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정한 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.IOException">지정한 디렉터리가 기존 파일을 가리킵니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">지정한 디렉터리 경로에 콜론(:)이 포함되어 있거나 잘못된 형식입니다.</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
      <returns>지정된 텍스트가 들어 있는 파일 이름의 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary>디렉터리에 있는 하위 디렉터리의 경로 이름을 나타내는 문자열 컬렉션을 반환합니다.</summary>
      <param name="directory">디렉터리의 이름과 경로입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정한 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.IOException">지정한 디렉터리가 기존 파일을 가리킵니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
      <returns>지정된 디렉터리 안에 있는 하위 디렉터리의 경로 이름으로 구성된 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>디렉터리에 있는 하위 디렉터리의 경로 이름을 나타내는 문자열 컬렉션을 반환합니다.</summary>
      <param name="directory">디렉터리의 이름과 경로입니다.</param>
      <param name="searchType">하위 폴더를 포함할지 여부입니다. 기본값은 <see langword="SearchOption.SearchTopLevelOnly" />입니다.</param>
      <param name="wildcards">이름을 일치시킬 패턴입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">지정한 와일드카드 문자 중 하나 이상이 <see langword="Nothing" />이거나, 빈 문자열이거나, 공백만 있는 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">지정한 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.IOException">지정한 디렉터리가 기존 파일을 가리킵니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
      <returns>지정된 디렉터리 안에 있는 하위 디렉터리의 경로 이름으로 구성된 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary>지정한 경로에 대한 <see cref="T:System.IO.DirectoryInfo" /> 개체를 반환합니다.</summary>
      <param name="directory">
        <see langword="String" />. 디렉터리 경로입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">디렉터리 경로에 콜론(:)이 포함되어 있거나 잘못된 형식입니다.</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns>지정된 경로에 대한 <see cref="T:System.IO.DirectoryInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary>지정한 드라이브에 대한 <see cref="T:System.IO.DriveInfo" /> 개체를 반환합니다.</summary>
      <param name="drive">검사할 드라이브입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns>지정된 드라이브에 대한 <see cref="T:System.IO.DriveInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary>지정한 파일에 대한 <see cref="T:System.IO.FileInfo" /> 개체를 반환합니다.</summary>
      <param name="file">파일의 이름과 경로입니다.</param>
      <exception cref="T:System.ArgumentException">경로 이름 형식이 잘못되었습니다. 예를 들어 파일 이름에 잘못된 문자가 들어 있거나 공백이 있을 수 있습니다. 파일 이름 마지막에 슬래시가 있는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.NotSupportedException">경로에서 문자열 중간에 콜론이 포함된 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 너무 깁니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용자에게 필요한 권한이 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 파일에 대한 ACL(액세스 제어 목록) 액세스 권한이 없는 경우</exception>
      <returns>지정된 파일에 대한 <see cref="T:System.IO.FileInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary>디렉터리에 있는 파일 이름을 나타내는 문자열의 읽기 전용 컬렉션을 반환합니다.</summary>
      <param name="directory">검색할 디렉터리입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">검색할 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" />가 기존 파일을 가리키는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
      <returns>지정된 디렉터리에 있는 파일 이름의 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>디렉터리에 있는 파일 이름을 나타내는 문자열의 읽기 전용 컬렉션을 반환합니다.</summary>
      <param name="directory">검색할 디렉터리입니다.</param>
      <param name="searchType">하위 폴더를 포함할지 여부입니다. 기본값은 <see langword="SearchOption.SearchTopLevelOnly" />입니다.</param>
      <param name="wildcards">일치할 패턴입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">검색할 디렉터리가 없습니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" />가 기존 파일을 가리키는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
      <returns>지정된 디렉터리에 있는 파일 이름의 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary>제공된 경로에서 파일 이름을 구문 분석합니다.</summary>
      <param name="path">필수 요소. 구문 분석할 경로입니다. <see langword="String" />.</param>
      <returns>지정된 경로의 파일 이름입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary>제공된 경로의 부모 경로를 반환합니다.</summary>
      <param name="path">검사할 경로입니다.</param>
      <exception cref="T:System.ArgumentException">경로가 루트 경로이기 때문에 부모 경로를 포함하지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <returns>제공된 경로의 부모 경로입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary>디스크에서 크기가 0바이트인 고유한 이름의 임시 파일을 만들고 해당 파일의 전체 경로를 반환합니다.</summary>
      <returns>임시 파일의 전체 경로를 포함하는 <see langword="String" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary>디렉터리를 한 위치에서 다른 위치로 이동합니다.</summary>
      <param name="sourceDirectoryName">이동할 디렉터리의 경로입니다.</param>
      <param name="destinationDirectoryName">소스 디렉터리가 이동되는 대상 디렉터리의 경로입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException">소스는 루트 디렉터리이며 소스 경로와 대상 경로가 같습니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.InvalidOperationException">작업이 순환적인 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>디렉터리를 한 위치에서 다른 위치로 이동합니다.</summary>
      <param name="sourceDirectoryName">이동할 디렉터리의 경로입니다.</param>
      <param name="destinationDirectoryName">소스 디렉터리가 이동되는 대상 디렉터리의 경로입니다.</param>
      <param name="showUI">작업 진행을 시각적으로 추적할지 여부를 지정합니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException">대상 디렉터리가 이미 있고 <paramref name="overwrite" />가 <see langword="False" />로 설정됩니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.InvalidOperationException">작업이 순환적인 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>디렉터리를 한 위치에서 다른 위치로 이동합니다.</summary>
      <param name="sourceDirectoryName">이동할 디렉터리의 경로입니다.</param>
      <param name="destinationDirectoryName">소스 디렉터리가 이동되는 대상 디렉터리의 경로입니다.</param>
      <param name="showUI">작업 진행을 시각적으로 추적할지 여부를 지정합니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="onUserCancel">사용자가 작업을 취소하는 경우 예외를 throw할지 여부를 지정합니다. 기본값은 <see langword="UICancelOption.ThrowException" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" />이 <see langword="ThrowException" />으로 설정되고 파일의 하위 디렉터리를 복사할 수 없는 경우</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" />이 <see langword="ThrowException" />으로 설정되고 사용자가 작업을 취소하거나 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.InvalidOperationException">작업이 순환적인 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>디렉터리를 한 위치에서 다른 위치로 이동합니다.</summary>
      <param name="sourceDirectoryName">이동할 디렉터리의 경로입니다.</param>
      <param name="destinationDirectoryName">소스 디렉터리가 이동되는 대상 디렉터리의 경로입니다.</param>
      <param name="overwrite">기존 디렉터리를 덮어써야 하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, 경로가 디바이스 경로인 경우(\\.\로 시작됨)와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationDirectoryName" />가 <see langword="Nothing" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException">대상 디렉터리가 이미 있고 <paramref name="overwrite" />가 <see langword="False" />로 설정됩니다.</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.InvalidOperationException">작업이 순환적인 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary>파일을 새 위치로 이동합니다.</summary>
      <param name="sourceFileName">이동할 파일의 경로입니다.</param>
      <param name="destinationFileName">파일이 이동되는 대상 디렉터리의 경로입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>파일을 새 위치로 이동합니다.</summary>
      <param name="sourceFileName">이동할 파일의 경로입니다.</param>
      <param name="destinationFileName">파일이 이동되는 대상 디렉터리의 경로입니다.</param>
      <param name="showUI">작업 진행을 시각적으로 추적할지 여부를 지정합니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>파일을 새 위치로 이동합니다.</summary>
      <param name="sourceFileName">이동할 파일의 경로입니다.</param>
      <param name="destinationFileName">파일이 이동되는 대상 디렉터리의 경로입니다.</param>
      <param name="showUI">작업 진행을 시각적으로 추적할지 여부를 지정합니다. 기본값은 <see langword="UIOption.OnlyErrorDialogs" />입니다.</param>
      <param name="onUserCancel">사용자가 작업을 취소하는 경우 예외를 throw할지 여부를 지정합니다. 기본값은 <see langword="UICancelOption.ThrowException" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" />이 <see langword="ThrowException" />으로 설정된 상태에서 사용자가 작업을 취소했거나 지정되지 않은 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary>파일을 새 위치로 이동합니다.</summary>
      <param name="sourceFileName">이동할 파일의 경로입니다.</param>
      <param name="destinationFileName">파일이 이동되는 대상 디렉터리의 경로입니다.</param>
      <param name="overwrite">기존 파일을 덮어쓰려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">소스 파일이 올바르지 않거나 없는 경우</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary>
        <see langword="OpenTextFieldParser" /> 메서드를 사용하면 로그와 같은 구조적 텍스트 파일을 쉽고 효과적으로 구문 분석하는 방법을 제공하는 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체를 만들 수 있습니다. <see langword="TextFieldParser" /> 개체는 구분된 파일과 고정 너비 파일을 모두 읽는 데 사용될 수 있습니다.</summary>
      <param name="file">
        <see langword="TextFieldParser" />로 열 파일입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">지정된 형식을 사용하여 행을 구문 분석할 수 없는 경우 예외 메시지에는 예외를 발생시키는 줄이 지정되어 있지만 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 속성은 해당 줄에 포함되어 있는 텍스트에 할당됩니다.</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns>지정된 파일을 읽을 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>
        <see langword="OpenTextFieldParser" /> 메서드를 사용하면 로그와 같은 구조적 텍스트 파일을 쉽고 효과적으로 구문 분석하는 방법을 제공하는 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체를 만들 수 있습니다. <see langword="TextFieldParser" /> 개체는 구분된 파일과 고정 너비 파일을 모두 읽는 데 사용될 수 있습니다.</summary>
      <param name="file">
        <see langword="TextFieldParser" />로 열 파일입니다.</param>
      <param name="fieldWidths">필드의 너비입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">지정된 형식을 사용하여 행을 구문 분석할 수 없는 경우 예외 메시지에는 예외를 발생시키는 줄이 지정되어 있지만 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 속성은 해당 줄에 포함되어 있는 텍스트에 할당됩니다.</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns>지정된 파일을 읽을 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary>
        <see langword="OpenTextFieldParser" /> 메서드를 사용하면 로그와 같은 구조적 텍스트 파일을 쉽고 효과적으로 구문 분석하는 방법을 제공하는 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체를 만들 수 있습니다. <see langword="TextFieldParser" /> 개체는 구분된 파일과 고정 너비 파일을 모두 읽는 데 사용될 수 있습니다.</summary>
      <param name="file">
        <see langword="TextFieldParser" />로 열 파일입니다.</param>
      <param name="delimiters">필드에 사용하는 구분 기호입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">지정된 형식을 사용하여 행을 구문 분석할 수 없는 경우 예외 메시지에는 예외를 발생시키는 줄이 지정되어 있지만 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 속성은 해당 줄에 포함되어 있는 텍스트에 할당됩니다.</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns>지정된 파일을 읽을 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary>파일을 읽기 위해 <see cref="T:System.IO.StreamReader" /> 개체를 엽니다.</summary>
      <param name="file">읽을 파일입니다.</param>
      <exception cref="T:System.ArgumentException">파일 이름이 백슬래시(\)로 끝나는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">지정된 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">파일을 읽는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns>파일을 읽을 <see cref="T:System.IO.StreamReader" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>파일을 읽기 위해 <see cref="T:System.IO.StreamReader" /> 개체를 엽니다.</summary>
      <param name="file">읽을 파일입니다.</param>
      <param name="encoding">파일 내용에 사용할 인코딩입니다. 기본값은 ASCII입니다.</param>
      <exception cref="T:System.ArgumentException">파일 이름이 백슬래시(\)로 끝나는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">지정된 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Security.SecurityException">파일을 읽는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns>파일을 읽을 <see cref="T:System.IO.StreamReader" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>지정된 파일에 쓰기 위해 <see cref="T:System.IO.StreamWriter" /> 개체를 엽니다.</summary>
      <param name="file">기록할 파일입니다.</param>
      <param name="append">파일 내용에 추가하려면 <see langword="True" />이고, 파일 내용을 덮어쓰려면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentException">파일 이름의 마지막에 슬래시가 있는 경우</exception>
      <returns>지정된 파일에 기록할 <see cref="T:System.IO.StreamWriter" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>지정된 파일에 쓰기 위해 <see cref="T:System.IO.StreamWriter" />를 엽니다.</summary>
      <param name="file">기록할 파일입니다.</param>
      <param name="append">파일 내용에 추가하려면 <see langword="True" />이고, 파일 내용을 덮어쓰려면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <param name="encoding">파일에 쓸 때 사용할 인코딩입니다. 기본값은 ASCII입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.ArgumentException">파일 이름의 마지막에 슬래시가 있는 경우</exception>
      <returns>지정된 파일에 기록할 <see cref="T:System.IO.StreamWriter" /> 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary>파일의 내용을 바이트 배열로 반환합니다.</summary>
      <param name="file">읽을 파일입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.OutOfMemoryException">문자열을 버퍼에 쓰기 위한 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns>파일의 내용을 포함하는 <see langword="Byte" /> 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary>텍스트 파일의 내용을 <see langword="String" />으로 반환합니다.</summary>
      <param name="file">읽을 파일의 이름과 경로입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.OutOfMemoryException">문자열을 버퍼에 쓰기 위한 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns>파일의 내용을 포함하는 <see langword="String" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary>텍스트 파일의 내용을 <see langword="String" />으로 반환합니다.</summary>
      <param name="file">읽을 파일의 이름과 경로입니다.</param>
      <param name="encoding">파일을 읽을 때 사용할 문자 인코딩입니다. 기본값은 UTF-8입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.OutOfMemoryException">문자열을 버퍼에 쓰기 위한 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <returns>파일의 내용을 포함하는 <see langword="String" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary>디렉터리의 이름을 바꿉니다.</summary>
      <param name="directory">이름을 바꿀 디렉터리의 경로와 이름입니다.</param>
      <param name="newName">디렉터리의 새 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" />에 경로 정보가 포함된 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" />이(가) <see langword="Nothing" />인 경우  
  
또는 
 <paramref name="newName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="newName" />에 지정된 이름을 갖는 파일이나 디렉터리가 이미 있는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary>파일 이름을 바꿉니다.</summary>
      <param name="file">이름을 바꿀 파일입니다.</param>
      <param name="newName">파일의 새 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" />에는 백슬래시(\)로 끝나는 경로 정보가 포함되어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우  
  
또는 
 <paramref name="newName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">디렉터리가 없는 경우</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="newName" />에 지정된 이름을 갖는 파일이나 디렉터리가 이미 있는 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>이진 파일에 데이터를 씁니다.</summary>
      <param name="file">기록할 파일의 경로와 이름입니다.</param>
      <param name="data">파일에 쓸 데이터입니다.</param>
      <param name="append">파일 내용에 추가하려면 <see langword="True" />이고, 파일 내용을 덮어쓰려면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.OutOfMemoryException">문자열을 버퍼에 쓰기 위한 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>파일에 텍스트를 씁니다.</summary>
      <param name="file">기록할 파일입니다.</param>
      <param name="text">파일에 쓸 텍스트입니다.</param>
      <param name="append">파일 내용에 추가하려면 <see langword="True" />이고, 파일 내용을 덮어쓰려면 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.OutOfMemoryException">문자열을 버퍼에 쓰기 위한 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>파일에 텍스트를 씁니다.</summary>
      <param name="file">기록할 파일입니다.</param>
      <param name="text">파일에 쓸 텍스트입니다.</param>
      <param name="append">파일 내용에 추가하려면 <see langword="True" />이고, 파일 내용을 덮어쓰려면 <see langword="False" />입니다.</param>
      <param name="encoding">파일에 쓸 때 사용할 인코딩입니다.</param>
      <exception cref="T:System.ArgumentException">길이가 0인 문자열이거나, 공백만 포함하거나, 잘못된 문자를 포함하거나, \\.\로 시작하는 디바이스 경로와 같은 여러 가지 이유 중 하나로 경로가 올바르지 않은 경우, 슬래시()로 끝나는 경우.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">다른 프로세스에서 파일을 사용 중이거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException">경로가 시스템 정의 최대 길이를 초과하는 경우</exception>
      <exception cref="T:System.NotSupportedException">경로의 파일 이름이나 디렉터리 이름에 콜론(:)이 있거나 이름의 형식이 잘못된 경우</exception>
      <exception cref="T:System.OutOfMemoryException">문자열을 버퍼에 쓰기 위한 메모리가 부족한 경우</exception>
      <exception cref="T:System.Security.SecurityException">경로를 보는 데 필요한 권한이 사용자에게 없는 경우</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary>현재 디렉터리를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">경로가 잘못된 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException">사용자에게 필요한 권한이 없는 경우</exception>
      <returns>파일 I/O 작업의 현재 디렉터리입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary>사용 가능한 모든 드라이브 이름의 읽기 전용 컬렉션을 반환합니다.</summary>
      <returns>
        <see cref="T:System.IO.DriveInfo" /> 개체인 사용 가능한 모든 드라이브의 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary>
        <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> 메서드가 지정한 형식을 사용하여 행을 구문 분석할 수 없는 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialize된 데이터를 사용하여 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info">발생되는 예외에 대해 직렬화된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 구조체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 <see cref="T:System.String" />입니다.</param>
      <param name="innerException">현재 예외의 원인이 되는 <see cref="T:System.Exception" /> 개체입니다. <see cref="P:System.Exception.InnerException" /> 매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)가 아니면 내부 예외를 처리하는 catch 블록에서 현재 예외가 발생합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary>지정한 오류 메시지와 줄 번호를 사용하여 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 메시지입니다.</param>
      <param name="lineNumber">형식이 잘못된 줄의 줄 번호입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary>지정한 오류 메시지, 줄 번호 및 이 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 메시지입니다.</param>
      <param name="lineNumber">형식이 잘못된 줄의 줄 번호입니다.</param>
      <param name="innerException">현재 예외의 원인이 되는 <see cref="T:System.Exception" />입니다. <see cref="P:System.Exception.InnerException" /> 매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)가 아니면 내부 예외를 처리하는 catch 블록에서 현재 예외가 발생합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>예외에 대한 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</summary>
      <param name="info">발생되는 예외에 대해 직렬화된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="context">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 구조체입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary>현재 예외에 대한 문자열 표현을 만들고 반환합니다.</summary>
      <returns>현재 예외에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary>형식이 잘못된 줄의 줄 번호를 가져옵니다.</summary>
      <returns>형식이 잘못된 줄의 줄 번호입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary>파일을 영구적으로 삭제할지 아니면 휴지통에 보관할지 여부를 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary>파일이나 디렉터리를 영구적으로 삭제합니다. 기본.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary>파일이나 디렉터리를 휴지통으로 보냅니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary>모든 디렉터리를 검색할지 최상위 디렉터리만 검색할지 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary>지정한 디렉터리와 이 디렉터리 내의 모든 하위 디렉터리를 검색합니다. 기본.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary>지정한 디렉터리만 검색하고 이 디렉터리 내의 하위 디렉터리는 검색하지 않습니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary>일반적으로 참조되는 디렉터리에 액세스하기 위한 속성을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary>
        <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" /> 클래스의 인스턴스를 반환합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary>모든 사용자에 대한 애플리케이션 데이터 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission">시스템 및 사용자 환경 변수에 대한 액세스를 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns>모든 사용자에 대한 애플리케이션 데이터 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary>현재 사용자에 대한 애플리케이션 데이터 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns>현재 사용자에 대한 애플리케이션 데이터 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary>바탕 화면 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns>바탕 화면 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary>내 문서 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns>내 문서 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary>내 음악 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns>내 음악 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary>내 그림 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns>내 그림 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary>Program Files 디렉터리를 가리키는 경로를 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns>에 대 한 경로 Program Files 디렉터리입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary>Programs 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns>Programs 디렉터리의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary>Temp 디렉터리를 가리키는 경로 이름을 가져옵니다.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">일반적으로 운영 체제에서 디렉터리를 지원하지 않아 경로가 빈 경우</exception>
      <returns>Temp 디렉터리의 경로입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary>구조화된 텍스트 파일을 구문 분석하기 위한 메서드와 속성을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary>
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. 구문 분석할 스트림입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" />을 읽을 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. 구문 분석할 스트림입니다.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. 파일에서 인코딩을 확인할 수 없는 경우 사용할 문자 인코딩입니다. 기본값은 <see cref="P:System.Text.Encoding.UTF8" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 또는 <paramref name="defaultEncoding" />가 <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" />을 읽을 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. 구문 분석할 스트림입니다.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. 파일에서 인코딩을 확인할 수 없는 경우 사용할 문자 인코딩입니다. 기본값은 <see cref="P:System.Text.Encoding.UTF8" />입니다.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. 파일의 시작 부분에서 바이트 순서 표시를 찾을지 여부를 나타냅니다. 기본값은 <see langword="True" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 또는 <paramref name="defaultEncoding" />가 <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" />을 읽을 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. 구문 분석할 스트림입니다.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. 파일에서 인코딩을 확인할 수 없는 경우 사용할 문자 인코딩입니다. 기본값은 <see cref="P:System.Text.Encoding.UTF8" />입니다.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. 파일의 시작 부분에서 바이트 순서 표시를 찾을지 여부를 나타냅니다. 기본값은 <see langword="True" />입니다.</param>
      <param name="leaveOpen">
        <see langword="Boolean" />. <see langword="TextFieldParser" /> 개체가 닫힐 때 <paramref name="stream" />을 열어둘지 여부를 나타냅니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 또는 <paramref name="defaultEncoding" />가 <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" />을 읽을 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary>
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="reader">
        <see cref="T:System.IO.TextReader" />. 구분 분석할 <see cref="T:System.IO.TextReader" /> 스트림입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" />이(가) <see langword="Nothing" />인 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary>
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path">
        <see langword="String" />. 구문 분석할 파일의 전체 경로입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />이 빈 문자열인 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary>
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path">
        <see langword="String" />. 구문 분석할 파일의 전체 경로입니다.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. 파일에서 인코딩을 확인할 수 없는 경우 사용할 문자 인코딩입니다. 기본값은 <see cref="P:System.Text.Encoding.UTF8" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 빈 문자열이거나 <paramref name="defaultEncoding" />이 <see langword="Nothing" />입니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>
        <see langword="TextFieldParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="path">
        <see langword="String" />. 구문 분석할 파일의 전체 경로입니다.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. 파일에서 인코딩을 확인할 수 없는 경우 사용할 문자 인코딩입니다. 기본값은 <see cref="P:System.Text.Encoding.UTF8" />입니다.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. 파일의 시작 부분에서 바이트 순서 표시를 찾을지 여부를 나타냅니다. 기본값은 <see langword="True" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" />가 빈 문자열이거나 <paramref name="defaultEncoding" />이 <see langword="Nothing" />입니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary>현재 <see langword="TextFieldParser" /> 개체를 닫습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary>해당 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체에서 사용하는 리소스를 해제합니다.</summary>
      <param name="disposing">Boolean입니다. <see langword="True" />는 관리되는 리소스와 관리되지 않는 리소스를 모두 해제합니다. <see langword="False" />는 관리되지 않는 리소스만 해제합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary>가비지 수집기에서 회수하기 전에 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary>커서를 앞으로 이동하지 않고 지정한 문자 수를 읽습니다.</summary>
      <param name="numberOfChars">읽을 문자 수입니다. 필수 요소.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="numberOfChars" /> 가 0보다 작습니다.</exception>
      <returns>지정된 수의 읽을 문자가 포함된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary>현재 줄의 모든 필드를 읽고 문자열 배열로서 반환한 다음 데이터가 포함된 다음 줄로 커서를 이동합니다.</summary>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">지정된 형식을 사용하여 필드를 구문 분석할 수 없는 경우</exception>
      <returns>현재 줄의 필드 값이 들어 있는 문자열 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary>현재 줄을 문자열로 반환하고 커서를 다음 줄로 이동합니다.</summary>
      <returns>파일 또는 스트림의 현재 줄입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary>텍스트 파일의 나머지를 읽고 문자열로 반환합니다.</summary>
      <returns>파일 또는 스트림의 나머지 텍스트입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary>판독기의 구분 기호를 지정된 값으로 설정하고 필드 형식을 <see langword="Delimited" />로 설정합니다.</summary>
      <param name="delimiters">
        <see langword="String" /> 형식의 배열입니다.</param>
      <exception cref="T:System.ArgumentException">구분 기호의 길이가 0인 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary>지정한 값에 대한 판독기의 구분 기호를 설정합니다.</summary>
      <param name="fieldWidths">
        <see langword="Integer" />의 배열입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>해당 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체에서 사용하는 리소스를 해제합니다.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary>주석 토큰을 정의합니다. 주석 토큰은 줄 시작 부분에서 해당 줄이 주석이므로 파서에서 무시해야 함을 나타내는 문자열입니다.</summary>
      <exception cref="T:System.ArgumentException">주석 토큰에 공백을 포함하고 있는 경우</exception>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체의 모든 주석 토큰이 들어 있는 문자열 배열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary>텍스트 파일의 구분 기호를 정의합니다.</summary>
      <exception cref="T:System.ArgumentException">구분기호는 줄 바꿈 문자, 빈 문자열 또는 <see langword="Nothing" />으로 설정됩니다.</exception>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 개체의 모든 필드 구분 기호가 들어 있는 문자열 배열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary>현재 커서 위치와 파일 끝 사이에 공백 또는 주석이 없는 줄이 있는 경우 <see langword="True" />를 반환합니다.</summary>
      <returns>읽을 데이터가 더 이상 없으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary>최신 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 예외를 발생시킨 줄을 반환합니다.</summary>
      <returns>최신 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 예외를 발생시킨 줄입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary>최신 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 예외를 발생시킨 줄 번호를 반환합니다.</summary>
      <returns>최신 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 예외를 발생시킨 줄의 번호입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary>구문 분석되는 텍스트 파일에서 각 열의 너비를 나타냅니다.</summary>
      <exception cref="T:System.ArgumentException">배열의 마지막 항목을 제외한 위치의 너비 값이 0 이하인 경우</exception>
      <returns>구문 분석되는 텍스트 파일에 있는 각 열의 너비가 들어 있는 정수 배열입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary>구분된 파일을 구문 분석할 때 필드가 따옴표로 묶여 있는지 여부를 나타냅니다.</summary>
      <returns>필드가 따옴표로 묶여 있으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary>현재 줄 번호를 반환하거나 스트림에서 더 이상 문자를 사용할 수 없으면 -1을 반환합니다.</summary>
      <returns>현재 줄 번호입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary>구문 분석할 파일이 구분된 파일인지 또는 고정 너비 파일인지 여부를 나타냅니다.</summary>
      <returns>구문 분석할 파일이 구분된 파일인지 또는 고정 너비 파일인지를 나타내는 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> 값입니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary>필드 값에서 선행 및 후행 공백이 삭제되어야 하는지 여부를 나타냅니다.</summary>
      <returns>필드 값에서 선행 및 후행 공백을 삭제해야 하는 경우 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary>작업 도중에 사용자가 취소를 클릭하면 예외를 throw할지 여부를 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary>사용자가 취소를 클릭하는 경우 아무 작업도 하지 않습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary>사용자가 취소를 클릭하는 경우 예외를 throw합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary>파일이나 디렉터리를 복사, 삭제 또는 이동할 때 표시할 대화 상자를 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary>진행률 대화 상자와 오류 대화 상자를 표시합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary>오류 대화 상자만 표시하고 진행률 대화 상자는 숨깁니다. 기본.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary>
        <see langword="FileSystem" /> 모듈에는 파일, 디렉터리 또는 폴더 및 시스템 작업을 수행하는 데 사용되는 프로시저가 포함되어 있습니다. <see langword="My" /> 기능을 사용하면 <see langword="FileSystem" /> 모듈을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary>현재 디렉터리나 폴더를 변경합니다. <see langword="My" /> 기능을 사용하면 <see langword="ChDir" /> 함수를 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />을 참조하십시오.</summary>
      <param name="Path">필수 요소. 새 기본 디렉터리 또는 폴더가 될 대상을 식별하는 문자열 식입니다. <paramref name="Path" />에는 드라이브가 포함될 수 있습니다. 드라이브를 지정하지 않은 경우 <see langword="ChDir" />을 사용하면 현재 드라이브의 기본 디렉터리나 폴더를 변경할 수 있습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" />가 비어 있는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">드라이브를 잘못 지정했거나 사용할 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary>현재 드라이브를 변경합니다.</summary>
      <param name="Drive">필수 요소. 기존 드라이브를 지정하는 문자열 식입니다. 길이가 0인 문자열("")을 지정하면 현재 드라이브가 변경되지 않습니다. <paramref name="Drive" /> 인수가 여러 문자로 된 문자열인 경우 <see langword="ChDrive" />는 첫 글자만 사용합니다.</param>
      <exception cref="T:System.IO.IOException">드라이브를 잘못 지정했거나 사용할 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary>현재 드라이브를 변경합니다.</summary>
      <param name="Drive">필수 요소. 기존 드라이브를 지정하는 문자열 식입니다. 길이가 0인 문자열("")을 지정하면 현재 드라이브가 변경되지 않습니다. <paramref name="Drive" /> 인수가 여러 문자로 된 문자열인 경우 <see langword="ChDrive" />는 첫 글자만 사용합니다.</param>
      <exception cref="T:System.IO.IOException">드라이브를 잘못 지정했거나 사용할 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary>현재 경로를 나타내는 문자열을 반환합니다. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 사용하면 <see langword="CurDir" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />를 참조하세요.</summary>
      <returns>현재 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary>현재 경로를 나타내는 문자열을 반환합니다. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 사용하면 <see langword="CurDir" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />를 참조하세요.</summary>
      <param name="Drive">선택 사항입니다. 기존 드라이브를 지정하는 <see langword="Char" /> 식입니다. 드라이브를 지정하지 않거나 <paramref name="Drive" />가 길이가 0인 문자열("")인 경우 <see langword="CurDir" />은 현재 드라이브에 대한 경로를 반환합니다.</param>
      <returns>현재 경로를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary>지정한 패턴이나 파일 특성과 일치하는 파일, 디렉터리 또는 폴더의 이름을 나타내는 문자열 또는 드라이브의 볼륨 레이블을 반환합니다. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 사용하면 <see langword="Dir" /> 함수를 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />를 참조하세요.</summary>
      <returns>지정된 패턴이나 파일 특성과 일치하는 파일, 디렉터리 또는 폴더의 이름을 나타내는 문자열 또는 드라이브의 볼륨 레이블입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>지정한 패턴이나 파일 특성과 일치하는 파일, 디렉터리 또는 폴더의 이름을 나타내는 문자열 또는 드라이브의 볼륨 레이블을 반환합니다. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 사용하면 <see langword="Dir" /> 함수를 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />를 참조하세요.</summary>
      <param name="PathName">선택 사항입니다. 파일 이름, 디렉터리나 폴더 이름 또는 드라이브 볼륨 레이블을 지정하는 문자열 식입니다. <paramref name="PathName" />이 없으면 길이가 0인 문자열(<see langword="&quot;&quot;" />)이 반환됩니다.</param>
      <param name="Attributes">선택 사항입니다. 파일 특성을 지정하는 값을 가진 열거형 또는 숫자 식입니다. 이 매개 변수를 생략하면 <see langword="Dir" />는 <paramref name="Pathname" />과 일치하지만 특성이 없는 파일을 반환합니다.</param>
      <returns>지정된 패턴이나 파일 특성과 일치하는 파일, 디렉터리 또는 폴더의 이름을 나타내는 문자열 또는 드라이브의 볼륨 레이블입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary>
        <see langword="True" /> 또는 순차적인 <see langword="Random" />용으로 연 파일의 끝에 도달하면 부울 값 <see langword="Input" />를 반환합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호가 포함된 <see langword="Integer" />입니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
      <returns>
        <see langword="Random" /> 또는 순차적인 <see langword="Input" />용으로 연 파일의 끝에 도달하면 부울 값 <see langword="True" />입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary>
        <see langword="FileOpen" /> 함수를 사용하여 연 파일의 파일 모드를 나타내는 열거형을 반환합니다. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 사용하면 <see langword="FileAttr" /> 함수를 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. <see langword="Integer" />. 유효한 파일 번호입니다.</param>
      <returns>다음 값 중 하나입니다. 
 <list type="table"><listheader><term>값</term><description>파일 액세스 모드</description></listheader><item><term>1</term><description><see langword="OpenMode.Input" /></description></item><item><term>2</term><description><see langword="OpenMode.Output" /></description></item><item><term>4</term><description><see langword="OpenMode.Random" /></description></item><item><term>8</term><description><see langword="OpenMode.Append" /></description></item><item><term>32</term><description><see langword="OpenMode.Binary" /></description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary>
        <see langword="FileOpen" /> 함수를 사용하여 연 파일에 대한 입출력(I/O)을 끝냅니다. <see langword="My" />를 사용하면 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumbers">선택 사항입니다. 닫을 0개 이상의 채널에 대한 매개 변수 배열입니다.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" />가 없는 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary>파일을 복사합니다. <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 사용하면 <see langword="FileCopy" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />를 참조하세요.</summary>
      <param name="Source">필수 요소. 복사할 파일의 이름을 지정하는 문자열 식입니다. <paramref name="Source" />에는 소스 파일의 디렉터리나 폴더 및 드라이브가 포함될 수 있습니다.</param>
      <param name="Destination">필수 요소. 대상 파일 이름을 지정하는 문자열 식입니다. <paramref name="Destination" />에는 대상 파일의 디렉터리나 폴더 및 드라이브가 포함될 수 있습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> 또는 <paramref name="Destination" />이 잘못되었거나 지정되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException">파일이 이미 열려 있습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary>파일을 기록한 날짜와 시간을 나타내는 <see langword="Date" /> 값을 반환합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileDateTime" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />을 참조하세요.</summary>
      <param name="PathName">필수 요소. 파일 이름을 지정하는 문자열 식입니다. <paramref name="PathName" />은 디렉터리 또는 폴더와 드라이브를 포함할 수 있습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="PathName" />이 잘못되었거나 와일드카드를 포함하고 있습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">대상 파일이 없습니다.</exception>
      <returns>파일을 만들거나 마지막으로 수정한 날짜와 시간을 나타내는 <see langword="Date" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <param name="ArrayIsDynamic">선택 사항입니다. 배열을 쓰는 경우에만 적용됩니다. 배열을 동적으로 처리할 것인지의 여부와 배열의 크기와 범위를 설명하는 배열 설명자가 필요한지의 여부를 지정합니다.</param>
      <param name="StringIsFixedLength">선택 사항입니다. 문자열을 쓰는 경우에만 적용됩니다. 길이를 설명하는 문자열에 대해 2바이트 설명자를 쓸 것인지 여부를 지정합니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <param name="StringIsFixedLength">선택 사항입니다. 문자열을 쓰는 경우에만 적용됩니다. 길이를 설명하는 문자열에 대해 2바이트 설명자를 쓸 것인지 여부를 지정합니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGet" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary>열린 디스크 파일의 데이터를 변수로 읽어옵니다.  <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileGetObject" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 데이터를 읽어오는 올바른 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 읽기가 시작되는 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 번호(<see langword="Binary" /> 모드 파일)입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary>파일 길이를 바이트로 지정하는 값을 반환합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileLen" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />를 참조하세요.</summary>
      <param name="PathName">필수 요소. 파일을 지정하는 문자열 식입니다. <paramref name="PathName" />은 디렉터리 또는 폴더와 드라이브를 포함할 수 있습니다.</param>
      <exception cref="T:System.IO.FileNotFoundException">파일이 없습니다.</exception>
      <returns>파일의 길이(바이트)입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary>입력 또는 출력할 파일을 엽니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileOpen" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다. 다음으로 사용 가능한 파일 번호를 가져오려면 <see langword="FreeFile" /> 함수를 사용합니다.</param>
      <param name="FileName">필수 요소. 파일 이름을 지정하는 문자열 식으로, 디렉터리나 폴더 및 드라이브가 포함될 수 있습니다.</param>
      <param name="Mode">필수 요소. <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" />, <see langword="Random" /> 등의 파일 모드를 지정하는 열거형입니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.OpenMode" />을 참조하십시오.</param>
      <param name="Access">선택 사항입니다. <see langword="Read" />, <see langword="Write" />, <see langword="ReadWrite" /> 등 열려 있는 파일에 허용되는 작업을 지정하는 열거형입니다. 기본값은 <see langword="ReadWrite" />입니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.OpenAccess" />을 참조하십시오.</param>
      <param name="Share">선택 사항입니다. <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" />, <see langword="Lock Read Write" /> 등 열려 있는 파일에 대해 다른 프로세스에 허용되지 않는 작업을 지정하는 열거형입니다. 기본값은 <see langword="Lock Read Write" />입니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.OpenShare" />을 참조하십시오.</param>
      <param name="RecordLength">선택 사항입니다. 32,767(바이트)보다 작거나 같은 수입니다. 임의 액세스용으로 연 파일의 경우 이 값은 레코드 길이가 됩니다. 순차 파일의 경우 이 값은 버퍼링된 문자의 수입니다.</param>
      <exception cref="T:System.ArgumentException">레코드 길이가 음수입니다(–1은 아님).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileName" />이 이미 열려 있거나 <paramref name="FileName" />이 잘못되었습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <param name="ArrayIsDynamic">선택 사항입니다. 배열을 쓰는 경우에만 적용됩니다. 배열을 동적으로 처리할 것인지의 여부와 길이를 설명하는 문자열에 대한 배열 설명자를 쓸 것인지의 여부를 지정합니다.</param>
      <param name="StringIsFixedLength">선택 사항입니다. 문자열을 쓰는 경우에만 적용됩니다. 문자열에 대한 2바이트의 문자열 길이 설명자를 파일에 쓸지 여부를 지정합니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <param name="StringIsFixedLength">선택 사항입니다. 문자열을 쓰는 경우에만 적용됩니다. 문자열에 대한 2바이트의 문자열 길이 설명자를 파일에 쓸지 여부를 지정합니다. 기본값은 <see langword="False" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary>변수의 데이터를 디스크 파일에 씁니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePut" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1이고 -1과 같지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary>변수의 데이터를 디스크 파일에 씁니다.  <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FilePutObject" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 디스크에 쓴 데이터를 포함하는 유효한 변수 이름입니다.</param>
      <param name="RecordNumber">선택 사항입니다. 쓰기를 시작할 레코드 번호(<see langword="Random" /> 모드 파일) 또는 바이트 숫자(<see langword="Binary" /> 모드 파일)입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary>
        <see langword="FileOpen" /> 함수를 사용하여 연 파일에 출력 줄 너비를 지정합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="RecordWidth">필수 요소. 0~255 사이의 숫자 식으로, 새 줄이 시작되기 전에 줄에 표시되는 문자의 수를 나타냅니다. <paramref name="RecordWidth" />가 0이면 줄 길이에 제한이 없습니다. <paramref name="RecordWidth" />의 기본값은 0입니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary>
        <see langword="Integer" /> 함수에서 사용할 수 있는 다음 파일 번호를 나타내는 <see langword="FileOpen" /> 값을 반환합니다.</summary>
      <exception cref="T:System.IO.IOException">사용 중인 파일 수가 255개를 초과합니다.</exception>
      <returns>
        <see langword="FileOpen" /> 함수에서 사용할 수 있는 다음 파일 번호를 나타내는 정수 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary>파일, 디렉터리 또는 폴더의 특성을 나타내는 <see langword="FileAttribute" /> 값을 반환합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="FileAttribute" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="PathName">필수 요소. 파일, 디렉터리 또는 폴더 이름을 지정하는 문자열 식입니다. <paramref name="PathName" />에는 디렉터리나 폴더 및 드라이브가 포함될 수 있습니다.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="Pathname" />이 잘못되었거나 와일드카드를 포함하고 있습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">대상 파일이 없습니다.</exception>
      <returns>열거형 값의 비트 조합입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary>열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary>열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary>열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary>열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary>열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary>열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary>열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary>열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary>열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary>열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary>열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary>열린 순차 파일에서 데이터를 읽어 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Value">필수 요소. 파일에서 읽은 값이 할당된 변수로, 배열이나 개체 변수가 될 수 없습니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary>
        <see langword="String" /> 또는 <see langword="Input" /> 모드로 연 파일의 문자가 포함된 <see langword="Binary" /> 값을 반환합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="InputString" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="CharCount">필수 요소. 읽을 문자의 수를 지정하는 임의의 유효한 숫자 식입니다.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" />가 없는 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCount" /> &lt; 0 또는 &gt; 214입니다.</exception>
      <returns>
        <see langword="Input" /> 또는 <see langword="Binary" /> 모드로 연 파일의 문자가 포함된 문자열입니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="InputString" />보다 더 나은 생산성 및 성능을 제공합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary>디스크에서 파일을 삭제합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="Kill" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />을 참조하십시오.</summary>
      <param name="PathName">필수 요소. 삭제할 하나 이상의 파일 이름을 지정하는 문자열 식입니다. <paramref name="PathName" />에는 디렉터리나 폴더 및 드라이브가 포함될 수 있습니다.</param>
      <exception cref="T:System.IO.IOException">대상 파일이 열려 있습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">대상 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용 권한이 거부되었습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary>열려 있는 순차 파일에서 한 줄을 읽은 다음 <see langword="String" /> 변수에 할당합니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <exception cref="T:System.IO.EndOfStreamException">파일의 끝에 도달했습니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" />가 없는 경우</exception>
      <returns>열려 있는 순차 파일에서 한 줄을 읽은 다음 <see langword="String" /> 변수에 할당합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary>열려 있는 파일에서 현재의 읽기/쓰기 위치를 지정하는 값을 반환합니다.</summary>
      <param name="FileNumber">필수 요소. 임의의 유효한 <see langword="Integer" /> 파일 번호입니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
      <returns>열린 파일 내의 현재 읽기/쓰기 위치입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary>
        <see langword="Open" /> 함수를 사용하여 연 파일의 일부 또는 전부에 대한 다른 프로세스의 액세스를 제어합니다. <see langword="My" /> 기능을 사용하면 <see langword="Lock" /> 및 <see langword="Unlock" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary>
        <see langword="Open" /> 함수를 사용하여 연 파일의 일부 또는 전부에 대한 다른 프로세스의 액세스를 제어합니다. <see langword="My" /> 기능을 사용하면 <see langword="Lock" /> 및 <see langword="Unlock" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Record">선택 사항입니다. 잠그거나 잠금을 해제할 레코드 또는 바이트 번호입니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary>
        <see langword="Open" /> 함수를 사용하여 연 파일의 일부 또는 전부에 대한 다른 프로세스의 액세스를 제어합니다. <see langword="My" /> 기능을 사용하면 <see langword="Lock" /> 및 <see langword="Unlock" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="FromRecord">선택 사항입니다. 잠그거나 잠금을 해제할 첫째 레코드 또는 바이트 번호입니다.</param>
      <param name="ToRecord">선택 사항입니다. 잠그거나 잠금을 해제할 마지막 레코드 또는 바이트 번호입니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary>
        <see langword="FileOpen" /> 함수를 사용하여 연 파일의 크기(바이트)를 반환합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="LOF" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호가 포함된 정수입니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
      <returns>
        <see langword="FileOpen" /> 함수를 사용하여 연 파일의 크기(바이트)입니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="LOF" />보다 더 나은 생산성 및 성능을 제공합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary>새 디렉터리를 만듭니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="MkDir" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />를 참조하세요.</summary>
      <param name="Path">필수 요소. 만들어질 디렉터리를 식별하는 문자열 식입니다. <paramref name="Path" />에는 드라이브가 포함될 수도 있습니다. 드라이브를 지정하지 않은 경우 <see langword="MkDir" />을 사용하면 현재 드라이브에서 새 디렉터리를 만들 수 있습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" />가 지정되지 않았거나 비어 있습니다.</exception>
      <exception cref="T:System.Security.SecurityException">사용 권한이 거부되었습니다.</exception>
      <exception cref="T:System.IO.IOException">디렉터리가 이미 있습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary>표시 형식 데이터를 순차 파일에 씁니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Output">선택 사항입니다. 파일에 쓸 쉼표로 구분된 0개 이상의 식입니다.  
  
<paramref name="Output" /> 인수 설정은 다음과 같습니다. 
 <see langword="T:System.IO.IOException" />: 파일 모드가 잘못된 경우  
  
 <paramref name="FileNumber" />가 없는 경우(<see langword="T:System.IO.IOException" />)</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary>표시 형식 데이터를 순차 파일에 씁니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Output">선택 사항입니다. 파일에 쓸 쉼표로 구분된 0개 이상의 식입니다.  
  
<paramref name="Output" /> 인수 설정은 다음과 같습니다. 
 <see langword="T:System.IO.IOException" />: 파일 모드가 잘못된 경우  
  
 <paramref name="FileNumber" />가 없는 경우(<see langword="T:System.IO.IOException" />)</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary>디스크 파일 또는 디렉터리의 이름을 바꿉니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="Rename" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="OldPath">필수 요소. 기존 파일 이름과 위치를 지정하는 문자열 식입니다. <paramref name="OldPath" />에는 파일의 디렉터리와 드라이브가 포함될 수 있습니다.</param>
      <param name="NewPath">필수 요소. 새 파일 이름과 위치를 지정하는 문자열 식입니다. <paramref name="NewPath" />에는 대상 위치의 디렉터리와 드라이브가 포함될 수 있습니다. <paramref name="NewPath" />에는 이미 있는 파일 이름을 지정할 수 없습니다.</param>
      <exception cref="T:System.ArgumentException">경로가 잘못되었습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="OldPath" /> 파일이 없습니다.</exception>
      <exception cref="T:System.IO.IOException">다른 디바이스로 이름을 바꿀 수 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary>
        <see langword="FileOpen" /> 함수를 사용하여 연 디스크 파일을 모두 닫습니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="Reset" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary>기존 디렉터리를 제거합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="RmDir" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />를 참조하세요.</summary>
      <param name="Path">필수 요소. 제거할 디렉터리나 폴더를 식별하는 문자열 식입니다. <paramref name="Path" />에는 드라이브가 포함될 수 있습니다. 드라이브를 지정하지 않은 경우 <see langword="RmDir" />을 사용하면 현재 드라이브에서 디렉터리를 제거할 수 있습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" />가 지정되지 않았거나 비어 있습니다.</exception>
      <exception cref="T:System.IO.IOException">대상 디렉터리에 파일이 없습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">디렉터리가 없습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary>
        <see langword="Long" /> 함수를 사용하여 연 파일에서 현재 읽기/쓰기 위치를 지정하는 <see langword="FileOpen" />을 반환하거나, <see langword="FileOpen" /> 함수를 사용하여 연 파일에서 다음 읽기/쓰기 작업 위치를 설정합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="Seek" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호가 포함된 <see langword="Integer" />입니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
      <returns>
        <see langword="FileOpen" /> 함수를 사용하여 연 파일에서 현재 읽기/쓰기 위치를 지정하는 <see langword="Long" />이거나, <see langword="FileOpen" /> 함수를 사용하여 연 파일에서 다음 읽기/쓰기 작업 위치를 설정합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary>
        <see langword="Long" /> 함수를 사용하여 연 파일에서 현재 읽기/쓰기 위치를 지정하는 <see langword="FileOpen" />을 반환하거나, <see langword="FileOpen" /> 함수를 사용하여 연 파일에서 다음 읽기/쓰기 작업 위치를 설정합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="Seek" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호가 포함된 <see langword="Integer" />입니다.</param>
      <param name="Position">필수 요소. 1~2,147,483,647 사이의 수로, 다음 읽기/쓰기 작업이 발생할 위치를 나타냅니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>파일의 특성 정보를 설정합니다. <see langword="My" /> 기능은 파일 I/O 작업에서 <see langword="SetAttr" />보다 더 나은 생산성 및 성능을 제공합니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="PathName">필수 요소. 파일 이름을 지정하는 문자열 식입니다. <paramref name="PathName" />에는 디렉터리나 폴더 및 드라이브가 포함될 수 있습니다.</param>
      <param name="Attributes">필수 요소. 파일 특성을 지정하는 합계를 가진 상수 또는 숫자 식입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Attribute" /> 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary>
        <see langword="Print" /> 또는 <see langword="PrintLine" /> 함수와 함께 사용되어 출력의 위치를 지정합니다.</summary>
      <param name="Count">필수 요소. 목록에서 다음 식을 표시하거나 출력하기 전에 삽입할 공백의 수입니다.</param>
      <returns>
        <see langword="Print" /> 또는 <see langword="PrintLine" /> 함수와 함께 사용되어 출력의 위치를 지정합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary>
        <see langword="Print" /> 또는 <see langword="PrintLine" /> 함수와 함께 사용되어 출력의 위치를 지정합니다.</summary>
      <returns>
        <see langword="Print" /> 또는 <see langword="PrintLine" /> 함수와 함께 사용되어 출력의 위치를 지정합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary>
        <see langword="Print" /> 또는 <see langword="PrintLine" /> 함수와 함께 사용되어 출력의 위치를 지정합니다.</summary>
      <param name="Column">선택 사항입니다. 목록에서 다음 식을 표시하거나 출력하기 전에 이동하는 열 수입니다. 생략할 경우 <see langword="TAB" />은 다음 출력 영역의 시작 부분으로 삽입 지점을 이동합니다.</param>
      <returns>
        <see langword="Print" /> 또는 <see langword="PrintLine" /> 함수와 함께 사용되어 출력의 위치를 지정합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary>
        <see langword="Open" /> 함수를 사용하여 연 파일의 일부 또는 전부에 대한 다른 프로세스의 액세스를 제어합니다. <see langword="My" /> 기능을 사용하면 <see langword="Lock" /> 및 <see langword="Unlock" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary>
        <see langword="Open" /> 함수를 사용하여 연 파일의 일부 또는 전부에 대한 다른 프로세스의 액세스를 제어합니다. <see langword="My" /> 기능을 사용하면 <see langword="Lock" /> 및 <see langword="Unlock" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="Record">선택 사항입니다. 잠그거나 잠금을 해제할 레코드 또는 바이트 번호입니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary>
        <see langword="Open" /> 함수를 사용하여 연 파일의 일부 또는 전부에 대한 다른 프로세스의 액세스를 제어합니다. <see langword="My" /> 기능을 사용하면 <see langword="Lock" /> 및 <see langword="Unlock" />을 사용할 때보다 파일 I/O 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />를 참조하세요.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호입니다.</param>
      <param name="FromRecord">선택 사항입니다. 잠그거나 잠금을 해제할 첫째 레코드 또는 바이트 번호입니다.</param>
      <param name="ToRecord">선택 사항입니다. 잠그거나 잠금을 해제할 마지막 레코드 또는 바이트 번호입니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary>순차 파일에 데이터를 씁니다. <see langword="Write" />로 작성된 데이터는 일반적으로 <see langword="Input" />을 사용하여 파일에서 읽습니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호가 포함된 <see langword="Integer" /> 식입니다.</param>
      <param name="Output">선택 사항입니다. 파일에 쓸 쉼표로 구분된 하나 이상의 식입니다.</param>
      <exception cref="T:System.IO.IOException">파일 모드가 잘못된 경우</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary>순차 파일에 데이터를 씁니다. <see langword="Write" />로 작성된 데이터는 일반적으로 <see langword="Input" />을 사용하여 파일에서 읽습니다.</summary>
      <param name="FileNumber">필수 요소. 유효한 파일 번호가 포함된 <see langword="Integer" /> 식입니다.</param>
      <param name="Output">선택 사항입니다. 파일에 쓸 쉼표로 구분된 하나 이상의 식입니다.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary>
        <see langword="Financial" /> 모듈에는 재무 관련 작업을 수행하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>이중 체감 잔액법 또는 다른 방법을 사용하여 특정 기간의 자산에 대한 감가상각을 지정하는 값을 반환합니다.</summary>
      <param name="Cost">필수 요소. 초기 자산 비용입니다.</param>
      <param name="Salvage">필수 요소. 내용 연수 종료 시점의 자산 값입니다.</param>
      <param name="Life">필수 요소. 자산의 내용 연수 길이입니다.</param>
      <param name="Period">필수 요소. 자산 감가상각이 계산되는 기간입니다.</param>
      <param name="Factor">선택 사항입니다. 잔액 감소 비율입니다. 생략하면 2(이중 체감 잔액법)로 간주됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Factor" />&lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt; = 0 또는 <paramref name="Period" /> &gt; <paramref name="Life" /> 입니다.</exception>
      <returns>이중 체감 잔액법 또는 다른 방법을 사용하여 특정 기간의 자산에 대한 감가상각입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>일정 기간의 고정 지불액과 고정 이자율을 기준으로 한 예상 연금액을 지정하는 값을 반환합니다.</summary>
      <param name="Rate">필수 요소. 기간당 이자율입니다. 예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</param>
      <param name="NPer">필수 요소. 연금의 총 지불 기간 수입니다. 예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</param>
      <param name="Pmt">필수 요소. 기간당 지불액입니다. 지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</param>
      <param name="PV">선택 사항입니다. 일련의 미래 지불액에 대한 현재 값 또는 총액입니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <see langword="DueDate.EndOfPeriod" />이고, 납입 기한 초에 납입이 되어야 하면 <see langword="DueDate.BegOfPeriod" />입니다. 생략하면 <see langword="DueDate.EndOfPeriod" />가 사용됩니다.</param>
      <returns>일정 기간의 고정 지불액과 고정 이자율을 기준으로 한 예상 연금액입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 이자 지불액을 지정하는 값을 반환합니다.</summary>
      <param name="Rate">필수 요소. 기간당 이자율입니다. 예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</param>
      <param name="Per">필수 요소. 1에서 <paramref name="NPer" />에 이르는 지불 기간입니다.</param>
      <param name="NPer">필수 요소. 연금의 총 지불 기간 수입니다. 예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</param>
      <param name="PV">필수 요소. 현재 값, 금일 값, 일련의 미래 지불액 또는 수령액입니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</param>
      <param name="FV">선택 사항입니다. 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다. 예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다. 생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" />&lt;= 0 또는 <paramref name="Per" /> &gt;<paramref name="NPer" /></exception>
      <returns>일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 이자 지불액입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary>일련의 주기적인 현금 흐름(지불액과 수령액)에 대한 내부 수익률을 지정하는 값을 반환합니다.</summary>
      <param name="ValueArray">필수 요소. 현금 흐름 값을 지정하는 <see cref="T:System.Double" /> 형식의 배열입니다. 배열에는 하나 이상의 음수 값(지불)과 하나 이상의 양수 값(확인)이 포함되어야 합니다.</param>
      <param name="Guess">선택 사항입니다. <see langword="IRR" />에서 반환할 추정 값을 지정하는 개체입니다. 생략할 경우 <paramref name="Guess" />는 0.1(10%)이 됩니다.</param>
      <exception cref="T:System.ArgumentException">배열 인수 값이 잘못 되었거나 <paramref name="Guess" /> &lt; =-1입니다.</exception>
      <returns>일련의 주기적인 현금 흐름(지불액과 수령액)에 대한 내부 수익률입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary>일련의 주기적인 현금 흐름(지불액과 수령액)에 대해 수정된 내부 수익률을 지정하는 값을 반환합니다.</summary>
      <param name="ValueArray">필수 요소. 현금 흐름 값을 지정하는 <see cref="T:System.Double" /> 형식의 배열입니다. 배열에는 하나 이상의 음수 값(지불)과 하나 이상의 양수 값(확인)이 포함되어야 합니다.</param>
      <param name="FinanceRate">필수 요소. 출자 비용으로 지불될 이자율입니다.</param>
      <param name="ReinvestRate">필수 요소. 현금 재투자로 인한 수익에서 받는 이자율입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ValueArray" /> 차수가 1이 아니거나, <paramref name="FinanceRate" />가 -1이거나, <paramref name="ReinvestRate" />가 -1입니다.</exception>
      <exception cref="T:System.DivideByZeroException">0으로 나누었습니다.</exception>
      <returns>일련의 주기적인 현금 흐름(지불액과 수령액)에 대해 수정된 내부 수익률입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 기간 수를 지정하는 값을 반환합니다.</summary>
      <param name="Rate">필수 요소. 기간당 이자율입니다. 예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</param>
      <param name="Pmt">필수 요소. 기간당 지불액입니다. 지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</param>
      <param name="PV">필수 요소. 현재 값, 금일 값, 일련의 미래 지불액 또는 수령액입니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</param>
      <param name="FV">선택 사항입니다. 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다. 예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다. 생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rate" />와 <paramref name="Pmt" />가 모두 0입니다.</exception>
      <returns>일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 기간 수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary>일정 기간 현금 흐름(지불액과 수령액)과 할인율을 기준으로 현재의 순 투자 가치를 지정하는 값을 반환합니다.</summary>
      <param name="Rate">필수 요소. 전 기간에 걸친 할인율이며 10진수로 표시합니다.</param>
      <param name="ValueArray">필수 요소. 현금 흐름 값을 지정하는 <see cref="T:System.Double" /> 형식의 배열입니다. 배열에는 하나 이상의 음수 값(지불)과 하나 이상의 양수 값(확인)이 포함되어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ValueArray" />is <see langword="Nothing" /> , rank <paramref name="ValueArray" /> &lt; &gt; 1 또는 <paramref name="Rate" /> =-1입니다.</exception>
      <returns>일정 기간 현금 흐름(지불액과 수령액)과 할인율을 기준으로 현재의 순 투자 가치입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금에 대한 지불액을 지정하는 값을 반환합니다.</summary>
      <param name="Rate">필수 요소. 기간당 이자율입니다. 예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</param>
      <param name="NPer">필수 요소. 연금의 총 지불 기간 수입니다. 예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 × 12, 즉 48입니다.</param>
      <param name="PV">필수 요소. 일련의 미래 지불액에 대한 현재 값 또는 총액입니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</param>
      <param name="FV">선택 사항입니다. 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다. 예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다. 생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> = 0.</exception>
      <returns>일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금에 대한 지불액입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 원금 지불액을 지정하는 값을 반환합니다.</summary>
      <param name="Rate">필수 요소. 기간당 이자율입니다. 예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</param>
      <param name="Per">필수 요소. 1에서 <paramref name="NPer" />에 이르는 지불 기간입니다.</param>
      <param name="NPer">필수 요소. 연금의 총 지불 기간 수입니다. 예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</param>
      <param name="PV">필수 요소. 일련의 미래 지불액 또는 수령액의 현재 값입니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</param>
      <param name="FV">선택 사항입니다. 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다. 예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다. 생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" />&lt;= 0 또는 <paramref name="Per" /> &gt; <paramref name="NPer" />.</exception>
      <returns>일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 원금 지불액입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>미래에 지불할 일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 현재 가치를 지정하는 값을 반환합니다.</summary>
      <param name="Rate">필수 요소. 기간당 이자율입니다. 예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</param>
      <param name="NPer">필수 요소. 연금의 총 지불 기간 수입니다. 예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</param>
      <param name="Pmt">필수 요소. 기간당 지불액입니다. 지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</param>
      <param name="FV">선택 사항입니다. 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다. 예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다. 생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</param>
      <returns>미래에 지불할 일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 현재 가치입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary>연금에 대한 일정 기간당 이자율을 지정하는 값을 반환합니다.</summary>
      <param name="NPer">필수 요소. 연금의 총 지불 기간 수입니다. 예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 * 12(즉 48)입니다.</param>
      <param name="Pmt">필수 요소. 기간당 지불액입니다. 지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</param>
      <param name="PV">필수 요소. 현재 값, 금일 값, 일련의 미래 지불액 또는 수령액입니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</param>
      <param name="FV">선택 사항입니다. 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액입니다. 예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다. 생략된 경우 0이라고 가정합니다.</param>
      <param name="Due">선택 사항입니다. <see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다. 이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다. 생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</param>
      <param name="Guess">선택 사항입니다. <see langword="Rate" />가 반환하는 추정 값입니다. 생략할 경우 <paramref name="Guess" />는 0.1(10%)이 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" />&lt;= 0.</exception>
      <returns>연금에 대한 일정 기간당 이자율입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary>단일 기간의 자산에 대한 정액법을 지정하는 값을 반환합니다.</summary>
      <param name="Cost">필수 요소. 초기 자산 비용입니다.</param>
      <param name="Salvage">필수 요소. 내용 연수 종료 시점의 자산 값입니다.</param>
      <param name="Life">필수 요소. 자산의 내용 연수 길이입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Life" /> = 0.</exception>
      <returns>단일 기간의 자산에 대한 정액법입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary>지정한 기간 동안 자산의 연수 합계 감가상각을 지정하는 값을 반환합니다.</summary>
      <param name="Cost">필수 요소. 초기 자산 비용입니다.</param>
      <param name="Salvage">필수 요소. 내용 연수 종료 시점의 자산 값입니다.</param>
      <param name="Life">필수 요소. 자산의 내용 연수 길이입니다.</param>
      <param name="Period">필수 요소. 자산 감가상각이 계산되는 기간입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Salvage" />&lt;0, <paramref name="Period" /> &gt; <paramref name="Life" />, 또는 <paramref name="Period" /> &lt; =.</exception>
      <returns>지정한 기간 동안 자산의 연수 합계 감가상각입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary>날짜 관련 함수를 호출할 때 사용할 주의 첫째 요일을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary>금요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbFriday" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary>월요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbMonday" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary>토요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbSaturday" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary>일요일입니다(기본값). 이 멤버는 Visual Basic 상수 <see langword="vbSunday" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary>시스템 설정에 지정된 주의 첫째 요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbUseSystemDayOfWeek" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary>목요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbThursday" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary>화요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbTuesday" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary>수요일입니다. 이 멤버는 Visual Basic 상수 <see langword="vbWednesday" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary>날짜 관련 함수를 호출할 때 사용할 연도의 첫째 주를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary>새해에 4일 이상의 요일이 있는 첫 주입니다. 이 멤버는 Visual Basic 상수 <see langword="vbFirstFourDays" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary>해당 연도에 전체 요일이 있는 첫 주입니다. 이 멤버는 Visual Basic 상수 <see langword="vbFirstFullWeek" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary>1월 1일이 속해 있는 주입니다(기본값). 이 멤버는 Visual Basic 상수 <see langword="vbFirstJan1" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary>시스템 설정에 해당 연도의 첫 주로 지정된 주입니다. 이 멤버는 Visual Basic 상수 <see langword="vbUseSystem" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary>
        <see langword="HideModuleNameAttribute" /> 특성은 모듈에 적용될 경우 모듈에 필요한 자격만 사용하여 해당 모듈 멤버에 액세스할 수 있도록 합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary>
        <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" /> 특성의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary>
        <see langword="Information" /> 모듈에는 정보를 반환하고, 테스트하고, 확인하는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Erl">
      <summary>마지막으로 실행된 문의 줄 번호를 나타내는 정수를 반환합니다. 읽기 전용입니다.</summary>
      <returns>마지막으로 실행된 문의 줄 번호를 나타내는 정수를 반환합니다. 읽기 전용입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary>런타임 오류에 대한 정보를 포함합니다.</summary>
      <returns>런타임 오류에 대한 정보를 포함합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary>변수가 배열을 가리키고 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="VarName">필수 요소. <see langword="Object" /> 변수입니다.</param>
      <returns>변수가 배열을 가리키고 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary>식이 올바른 <see langword="Boolean" /> 값을 나타내는지 여부를 알리는 <see langword="Date" /> 값을 반환합니다.</summary>
      <param name="Expression">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns>식이 올바른 <see langword="Boolean" /> 값을 나타내는지 여부를 알리는 <see langword="Date" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary>식이 <see cref="T:System.DBNull" /> 클래스로 계산되는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Expression">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns>식이 <see cref="T:System.DBNull" /> 클래스로 계산되는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary>식이 예외 형식인지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Expression">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns>식이 예외 형식인지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary>식에 할당된 개체가 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Expression">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns>식에 할당된 개체가 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary>식이 숫자로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Expression">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns>식이 숫자로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary>식이 참조 형식으로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</summary>
      <param name="Expression">필수 요소. <see langword="Object" /> 식입니다.</param>
      <returns>식이 참조 형식으로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary>배열의 표시된 차원에 사용할 수 있는 최저 첨자를 반환합니다.</summary>
      <param name="Array">필수 요소. 데이터 형식의 배열로, 차원의 가능한 최저 첨자를 찾을 배열입니다.</param>
      <param name="Rank">선택 사항입니다. <see langword="Integer" />. 가능한 최저 첨자가 반환될 차원입니다. 첫 번째 차원에는 1, 두 번째 차원에는 2를 사용하는 방식으로 사용됩니다. <paramref name="Rank" />가 생략되면 1이 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" />가 1보다 작거나 <paramref name="Rank" />가 <paramref name="Array" />의 차수보다 큽니다.</exception>
      <returns>
        <see langword="Integer" />. 지정한 차원의 첨자에 포함될 수 있는 가장 낮은 값입니다. <see langword="LBound" />는 <paramref name="Array" />가 초기화된 경우 길이가 0인 문자열과 같이 요소가 없어도 항상 0을 반환합니다. <paramref name="Array" />가 <see langword="Nothing" />이면 <see langword="LBound" />는 <see cref="T:System.ArgumentNullException" />을 throw합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary>지정한 색 번호에 해당되는 RGB 색 코드를 나타내는 <see langword="Integer" /> 값을 반환합니다.</summary>
      <param name="Color">필수 요소. 0~15 사이의 정수입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Color" />가 0부터 15까지의 범위를 벗어났습니다.</exception>
      <returns>지정한 색 번호에 해당되는 RGB 색 코드를 나타내는 <see langword="Integer" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary>빨강, 녹색 및 파랑 색 구성 요소 집합에서 RGB 색상 값을 나타내는 <see langword="Integer" /> 값을 반환합니다.</summary>
      <param name="Red">필수 요소. 0~255(포함) 사이의 <see langword="Integer" /> 형식으로, 빨간색의 농도를 나타냅니다.</param>
      <param name="Green">필수 요소. 0~255(포함) 사이의 <see langword="Integer" /> 형식으로, 녹색의 농도를 나타냅니다.</param>
      <param name="Blue">필수 요소. 0~255(포함) 사이의 <see langword="Integer" /> 형식으로, 파란색의 농도를 나타냅니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Green" />, <paramref name="Blue" /> 또는 <paramref name="Red" />가 0부터 255까지의 범위를 벗어났습니다.</exception>
      <returns>빨강, 녹색 및 파랑 색 구성 요소 집합에서 RGB 색상 값을 나타내는 <see langword="Integer" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary>변수의 시스템 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</summary>
      <param name="VbName">필수 요소. Visual Basic 형식 이름을 포함하는 <see langword="String" /> 변수입니다.</param>
      <returns>변수의 시스템 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary>변수에 대한 데이터 형식 정보를 포함하는 <see langword="String" /> 값을 반환합니다.</summary>
      <param name="VarName">필수 요소. <see langword="Object" /> 변수입니다. <see langword="Option Strict" />가 <see langword="Off" />이면 구조체를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</param>
      <returns>변수에 대한 데이터 형식 정보를 포함하는 <see langword="String" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary>배열의 표시된 차원에 사용할 수 있는 최고 첨자를 반환합니다.</summary>
      <param name="Array">필수 요소. 데이터 형식의 배열로, 차원의 가능한 최고 첨자를 찾을 배열입니다.</param>
      <param name="Rank">선택 사항입니다. <see langword="Integer" />. 가능한 최고 첨자가 반환될 차원입니다. 첫 번째 차원에는 1, 두 번째 차원에는 2를 사용하는 방식으로 사용됩니다. <paramref name="Rank" />가 생략되면 1이 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" />이(가) <see langword="Nothing" />인 경우</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" />가 1보다 작거나 <paramref name="Rank" />가 <paramref name="Array" />의 차수보다 큽니다.</exception>
      <returns>
        <see langword="Integer" />. 지정한 차원의 첨자에 포함될 수 있는 가장 높은 값입니다. <paramref name="Array" />에 요소가 하나만 있으면 <see langword="UBound" />에서 0을 반환합니다. 길이가 0인 문자열과 같이 <paramref name="Array" />에 요소가 없으면 <see langword="UBound" />에서 -1을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary>변수의 데이터 형식 분류를 포함하는 <see langword="Integer" /> 값을 반환합니다.</summary>
      <param name="VarName">필수 요소. <see langword="Object" /> 변수입니다. <see langword="Option Strict" />가 <see langword="Off" />이면 구조체를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</param>
      <returns>변수의 데이터 형식 분류를 포함하는 <see langword="Integer" /> 값을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary>변수의 Visual Basic 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</summary>
      <param name="UrtName">필수 요소. 공용 언어 런타임에서 사용되는 형식 이름을 포함하는 <see langword="String" /> 변수입니다.</param>
      <returns>변수의 Visual Basic 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary>
        <see langword="Interaction" /> 모듈에는 개체, 애플리케이션 및 시스템과 상호 작용하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
      <summary>이미 실행 중인 애플리케이션을 활성화합니다.</summary>
      <param name="ProcessId">이 프로세스에 할당되는 Win32 프로세스 ID 번호를 지정하는 <see langword="Integer" />입니다. <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />에서 반환된 ID가 0이 아닐 경우 이 ID를 사용할 수 있습니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
      <summary>이미 실행 중인 애플리케이션을 활성화합니다.</summary>
      <param name="Title">활성화할 애플리케이션의 제목 표시줄에 표시되는 제목을 지정하는 <see langword="String" /> 식입니다. 애플리케이션이 시작될 때 애플리케이션에 할당된 제목을 사용할 수 있습니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary>컴퓨터 스피커를 통해 소리를 냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>개체의 메서드를 실행하거나 개체의 속성을 설정 또는 반환합니다.</summary>
      <param name="ObjectRef">필수 요소. <see langword="Object" />. 형식이며 속성이나 메서드를 노출하는 개체에 대한 포인터입니다.</param>
      <param name="ProcName">필수 요소. <see langword="String" />. 형식이며 개체의 속성이나 메서드 이름이 포함된 문자열 식입니다.</param>
      <param name="UseCallType">필수 요소. 호출되는 프로시저 형식을 나타내는 <see cref="T:Microsoft.VisualBasic.CallType" /> 형식의 열거형 멤버입니다. <see langword="CallType" /> 값은 <see langword="Method" />, <see langword="Get" /> 또는 <see langword="Set" />이 될 수 있습니다.</param>
      <param name="Args">선택 사항입니다. <see langword="ParamArray" />. 형식이며 호출되는 속성이나 메서드에 전달될 인수가 포함된 매개 변수 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="UseCallType" /> 값이 잘못되었습니다. <see langword="Method" />, <see langword="Get" /> 또는 <see langword="Set" />이어야 합니다.</exception>
      <returns>개체의 메서드를 실행하거나 개체의 속성을 설정 또는 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
      <summary>인수 목록에서 값을 선택하고 반환합니다.</summary>
      <param name="Index">필수 요소. <see cref="T:System.Double" />. 1과 <paramref name="Choice" /> 인수에 전달된 요소 수 사이의 값을 반환하는 숫자 식입니다.</param>
      <param name="Choice">필수 요소. <see langword="Object" /> 매개 변수 배열입니다. <see langword="Object" /> 데이터 형식, 쉼표로 구분된 <see langword="Object" /> 변수나 식의 목록 또는 <see langword="Object" /> 요소의 1차원 배열로 계산되는 단일 변수나 식을 사용할 수 있습니다.</param>
      <returns>인수 목록에서 값을 선택하고 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Command">
      <summary>Visual Basic으로 작성한 실행 가능한 프로그램 또는 Visual Basic을 시작하는 데 사용되는 명령줄의 인수 부분을 반환합니다. <see langword="My" /> 기능을 사용하면 <see langword="Command" /> 함수보다 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />를 참조하세요.</summary>
      <returns>Visual Basic 또는 Visual Basic으로 개발한 실행 가능한 프로그램을 시작하는 데 사용되는 명령줄의 인수 부분입니다.  
  
<see langword="My" /> 기능을 사용하면 <see langword="Command" /> 함수보다 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />를 참조하세요.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary>COM 개체를 만들고 만든 개체에 대한 참조를 반환합니다. 클래스가 명시적으로 COM 구성 요소로 노출되지 않는 경우 Visual Basic에서 <see langword="CreateObject" />를 사용하여 해당 클래스의 인스턴스를 만들 수 없습니다.</summary>
      <param name="ProgId">필수 요소. <see langword="String" />. 만들 개체의 프로그램 ID입니다.</param>
      <param name="ServerName">선택 사항입니다. <see langword="String" />. 개체가 만들어질 네트워크 서버의 이름입니다. <paramref name="ServerName" />이 빈 문자열("")이면 로컬 컴퓨터가 사용됩니다.</param>
      <exception cref="T:System.Exception">서버를 사용할 수 없습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">지정된 형식의 개체가 없습니다.</exception>
      <returns>COM 개체를 만들고 만든 개체에 대한 참조를 반환합니다. 클래스가 명시적으로 COM 구성 요소로 노출되지 않는 경우 Visual Basic에서 <see langword="CreateObject" />를 사용하여 해당 클래스의 인스턴스를 만들 수 없습니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
      <summary>Windows 레지스트리에 있는 애플리케이션 엔트리에서 섹션 설정 또는 키 설정을 삭제합니다. <see langword="My" /> 기능을 사용하면 <see langword="DeleteSetting" /> 함수보다 레지스트리 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />을 참조하세요.</summary>
      <param name="AppName">필수 요소. 섹션 또는 키 설정이 적용되는 애플리케이션이나 프로젝트의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Section">필수 요소. 키 설정을 삭제할 섹션의 이름을 포함하는 <see langword="String" /> 식입니다. <paramref name="AppName" />과 <paramref name="Section" />만 제공할 경우 모든 관련 키 설정과 함께 지정한 섹션이 삭제됩니다.</param>
      <param name="Key">선택 사항입니다. 삭제할 키 설정의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <exception cref="T:System.ArgumentException">사용자가 로그인하지 않았습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
      <summary>운영 체제 환경 변수와 연결된 문자열을 반환합니다.</summary>
      <param name="Expression">필수 요소. 환경 변수의 이름이 포함된 문자열이나 환경 문자열 테이블에 있는 환경 문자열의 순서에 해당하는 정수를 계산하는 식입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" />이 없습니다.</exception>
      <returns>운영 체제 환경 변수와 연결된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
      <summary>운영 체제 환경 변수와 연결된 문자열을 반환합니다.</summary>
      <param name="Expression">필수 요소. 환경 변수의 이름이 포함된 문자열이나 환경 문자열 테이블에 있는 환경 문자열의 순서에 해당하는 정수를 계산하는 식입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" />이 없습니다.</exception>
      <returns>운영 체제 환경 변수와 연결된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
      <summary>Windows 레지스트리에 있는 애플리케이션 엔트리에서 키 설정 및 해당 값(원래 <see langword="SaveSetting" />으로 만든 값)의 목록을 반환합니다. <see langword="My" /> 기능을 사용하면 <see langword="GetAllSettings" /> 함수보다 레지스트리 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />를 참조하세요.</summary>
      <param name="AppName">필수 요소. 키 설정이 요청된 애플리케이션이나 프로젝트의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Section">필수 요소. 키 설정이 요청된 섹션의 이름을 포함하는 <see langword="String" /> 식입니다. <see langword="GetAllSettings" />는 2차원 문자열 배열을 포함하는 개체를 반환합니다. 이 문자열은 지정한 섹션의 모든 키 설정과 이 설정에 해당하는 값을 포함합니다.</param>
      <exception cref="T:System.ArgumentException">사용자가 로그인하지 않았습니다.</exception>
      <returns>Windows 레지스트리에 있는 애플리케이션 엔트리에서 키 설정 및 해당 값(원래 <see langword="SaveSetting" />으로 만든 값)의 목록입니다.  
  
<see langword="My" /> 기능을 사용하면 <see langword="GetAllSettings" /> 함수보다 레지스트리 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />를 참조하세요.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
      <summary>COM 구성 요소에 의해 제공된 개체에 대한 참조를 반환합니다.</summary>
      <param name="PathName">선택 사항입니다. <see langword="String" />. 검색할 개체를 포함하는 파일의 전체 경로와 이름입니다. <paramref name="PathName" />을 생략하면 <paramref name="Class" />가 필요합니다.</param>
      <param name="Class">
        <paramref name="PathName" />이 제공되지 않을 경우 필요합니다. <see langword="String" />. 개체의 클래스를 나타내는 문자열입니다. <paramref name="Class" /> 인수의 구문과 구성 요소는 다음과 같습니다. 
 <c>appname</c><c>.</c><c>objecttype</c>  
  
[1|1] 매개 변수 
[1|2] 설명 
[2|1] <c>appname</c>  
  
[2|2] 필수적 요소 <see langword="String" />. 개체를 제공하는 애플리케이션의 이름입니다.  
  
[3|1] <c>objecttype</c>  
  
[3|2] 필수적 요소 <see langword="String" />. 만들 개체의 형식이나 클래스입니다.</param>
      <exception cref="T:System.Exception">지정한 클래스 형식의 개체가 없습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">지정한 경로와 파일 이름의 개체가 없습니다.</exception>
      <returns>COM 구성 요소에 의해 제공된 개체에 대한 참조입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
      <summary>Windows 레지스트리에 있는 애플리케이션 엔트리에서 키 설정 값을 반환합니다. <see langword="My" /> 기능을 사용하면 <see langword="GetAllSettings" />보다 레지스트리 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />를 참조하세요.</summary>
      <param name="AppName">필수 요소. 키 설정이 요청된 애플리케이션이나 프로젝트의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Section">필수 요소. 키 설정이 있는 섹션의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Key">필수 요소. 반환할 키 설정의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Default">선택 사항입니다. <paramref name="Key" /> 설정에 값이 설정되어 있지 않을 경우에 반환할 값을 포함하고 있는 식입니다. 생략할 경우 <paramref name="Default" />는 길이가 0인 문자열("")로 간주됩니다.</param>
      <exception cref="T:System.ArgumentException">하나 이상의 인수가 <see langword="String" /> 식이 아니거나 사용자가 로그인하지 않았습니다.</exception>
      <returns>Windows 레지스트리에 있는 애플리케이션 엔트리에서 키 설정 값입니다.  
  
<see langword="My" /> 기능을 사용하면 <see langword="GetAllSettings" />보다 레지스트리 작업의 생산성 및 성능이 향상됩니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary>식을 계산한 결과에 따라 두 개의 개체 중에서 하나를 반환합니다.</summary>
      <param name="Expression">필수 요소. <see langword="Boolean" />. 계산할 식입니다.</param>
      <param name="TruePart">필수 요소. <see langword="Object" />. <paramref name="Expression" />이 <see langword="True" />이면 반환됩니다.</param>
      <param name="FalsePart">필수 요소. <see langword="Object" />. <paramref name="Expression" />이 <see langword="False" />이면 반환됩니다.</param>
      <returns>식을 계산한 결과에 따라 두 개의 개체 중에서 하나를 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>대화 상자에서 프롬프트를 표시하고 사용자가 텍스트를 입력하거나 단추를 클릭할 때까지 대기한 다음 텍스트 상자의 내용을 포함하는 문자열을 반환합니다.</summary>
      <param name="Prompt">필수적 요소입니다. 대화 상자에서 메시지로 표시되는 <see langword="String" /> 식입니다. <paramref name="Prompt" />의 최대 길이는 대략 1024자이며 사용되는 문자의 너비에 따라 달라집니다. <paramref name="Prompt" />가 두 줄 이상으로 구성되는 경우 캐리지 리턴 문자(<see langword="Chr(" />13<see langword=")" />), 줄 바꿈 문자(<see langword="Chr(" />10<see langword=")" />) 또는 각 줄 사이에 캐리지 리턴/줄 바꿈 조합(<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />)을 사용하여 줄을 구분할 수 있습니다.</param>
      <param name="Title">선택 사항입니다. 대화 상자의 제목 표시줄에 표시되는 <see langword="String" /> 식입니다. <paramref name="Title" />을 생략하면 애플리케이션 이름이 제목 표시줄에 나타납니다.</param>
      <param name="DefaultResponse">선택 사항입니다. 입력한 내용이 없는 경우 텍스트 상자에 기본적으로 표시되는 <see langword="String" /> 식입니다. <paramref name="DefaultResponse" />를 생략하면 텍스트 상자가 빈 상태로 표시됩니다.</param>
      <param name="XPos">선택 사항입니다. 화면 왼쪽 가장자리에서 대화 상자의 왼쪽 가장자리까지의 간격을 트윕 단위로 지정하는 숫자 식입니다. <paramref name="XPos" />를 생략하면 대화 상자는 화면 가운데에 가로 방향으로 배치됩니다.</param>
      <param name="YPos">선택 사항입니다. 화면 맨 위에서 대화 상자의 위쪽 가장자리까지의 간격을 트윕 단위로 지정하는 숫자 식입니다. <paramref name="YPos" />를 생략하면 대화 상자는 화면 아래 방향으로 1/3 지점에 세로 방향으로 배치됩니다.</param>
      <returns>대화 상자에서 프롬프트를 표시하고 사용자가 텍스트를 입력하거나 단추를 클릭할 때까지 대기한 다음 텍스트 상자의 내용을 포함하는 문자열을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
      <summary>대화 상자에 메시지를 표시하고 사용자가 단추를 클릭할 때까지 대기한 다음 클릭된 단추를 나타내는 정수를 반환합니다.</summary>
      <param name="Prompt">필수 요소. 대화 상자에서 메시지로 표시되는 <see langword="String" /> 식입니다. <paramref name="Prompt" />의 최대 길이는 대략 1024자이며 사용되는 문자의 너비에 따라 달라집니다. <paramref name="Prompt" />가 두 줄 이상으로 구성되는 경우 캐리지 리턴 문자(<see langword="Chr(" />13<see langword=")" />), 줄 바꿈 문자(<see langword="Chr(" />10<see langword=")" />) 또는 각 줄 사이에 캐리지 리턴/줄 바꿈 조합(<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />)을 사용하여 줄을 구분할 수 있습니다.</param>
      <param name="Buttons">선택 사항입니다. 표시할 단추의 수와 형식, 사용할 아이콘 스타일, 기본 단추의 ID 및 메시지 상자의 모달을 지정하는 값의 합을 나타내는 숫자 식입니다. <paramref name="Buttons" />를 생략한 경우 기본값은 0입니다.</param>
      <param name="Title">선택 사항입니다. 대화 상자의 제목 표시줄에 표시되는 <see langword="String" /> 식입니다. <paramref name="Title" />을 생략하면 애플리케이션 이름이 제목 표시줄에 나타납니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Prompt" />가 <see langword="String" /> 식이 아니거나 <paramref name="Title" />이 올바르지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException">프로세스가 사용자 대화형 모드로 실행되고 있지 않습니다.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">하나 이상의 매개 변수가 <see langword="MsgBoxResult" /> 또는 <see langword="MsgBoxStyle" /> 열거형의 멤버가 아닙니다.</exception>
      <returns>다음 값 중 하나입니다. <list type="table"><listheader><term>상수</term><description>값</description></listheader><item><term><see langword="OK" /></term><description>1</description></item><item><term><see langword="Cancel" /></term><description>2</description></item><item><term><see langword="Abort" /></term><description>3</description></item><item><term><see langword="Retry" /></term><description>4</description></item><item><term><see langword="Ignore" /></term><description>5</description></item><item><term><see langword="Yes" /></term><description>6</description></item><item><term><see langword="No" /></term><description>7</description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>숫자가 들어 있는 계산된 범위를 나타내는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Long" />. 하나의 계산된 범위에서 찾을 정수입니다.</param>
      <param name="Start">필수 요소. <see langword="Long" />. 계산된 범위 집합의 시작을 나타내는 정수입니다. <paramref name="Start" />는 0보다 작을 수 없습니다.</param>
      <param name="Stop">필수 요소. <see langword="Long" />. 계산된 범위 집합의 끝을 나타내는 정수입니다. <paramref name="Stop" />은 <paramref name="Start" />보다 작거나 같을 수 없습니다.</param>
      <param name="Interval">필수 요소. <see langword="Long" />. <paramref name="Start" />와 <paramref name="Stop" /> 사이에서 계산되는 각 범위의 크기를 나타내는 정수입니다. <paramref name="Interval" />은 1보다 작을 수 없습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 0, <paramref name="Stop" /> &lt;= <paramref name="Start" /> 또는 <paramref name="Interval" /> &lt; 1입니다.</exception>
      <returns>숫자가 들어 있는 계산된 범위를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
      <summary>Windows 레지스트리에 애플리케이션 엔트리를 저장하거나 만듭니다. <see langword="My" /> 기능을 사용하면 <see langword="SaveSetting" />보다 레지스트리 작업의 생산성 및 성능이 향상됩니다. 자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />를 참조하세요.</summary>
      <param name="AppName">필수 요소. 설정이 적용되는 애플리케이션이나 프로젝트의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Section">필수 요소. 키 설정을 저장할 섹션의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Key">필수 요소. 저장할 키 설정의 이름을 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Setting">필수 요소. 설정할 <paramref name="Key" /> 값을 포함하는 식입니다.</param>
      <exception cref="T:System.ArgumentException">키 레지스트리를 만들 수 없거나 사용자가 로그인하지 않았습니다.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
      <summary>실행 프로그램을 실행하고 실행 중인 프로그램의 프로세스 ID가 포함된 정수를 반환합니다.</summary>
      <param name="PathName">필수 요소. <see langword="String" />. 필수적 요소인 모든 인수 및 명령줄 스위치와 함께 실행할 프로그램의 이름입니다. 또한 <paramref name="PathName" />에는 드라이브와 디렉터리 경로 또는 폴더가 포함될 수 있습니다.  
 프로그램의 경로를 모를 경우 <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" />를 사용하여 찾을 수 있습니다. 예를 들어, <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>를 호출할 수 있으며, 드라이브 C:\의 모든 위치에서 이름이 <c>testFile.txt</c>인 모든 파일의 전체 경로가 반환됩니다.</param>
      <param name="Style">선택 사항입니다. <see langword="AppWinStyle" />. 프로그램이 실행될 창의 스타일을 지정하는 <see cref="T:Microsoft.VisualBasic.AppWinStyle" />에서 선택된 값입니다. <paramref name="Style" />이 생략되면 <see langword="Shell" />은 최소화되고 포커스가 있는 상태로 프로그램을 시작하는 <see langword="AppWinStyle.MinimizedFocus" />를 사용합니다.</param>
      <param name="Wait">선택 사항입니다. <see langword="Boolean" />. 프로그램이 완료될 때까지 <see langword="Shell" /> 함수가 대기할지 여부를 나타내는 값입니다. <paramref name="Wait" />가 생략되면 <see langword="Shell" />은 <see langword="False" />를 사용합니다.</param>
      <param name="Timeout">선택 사항입니다. <see langword="Integer" />. <paramref name="Wait" />가 <see langword="True" />인 경우 완료될 때까지 대기하는 시간(밀리초)입니다. <paramref name="Timeout" />이 생략되면 <see langword="Shell" />은 -1을 사용합니다. 이 값은 시간 제한이 없고 프로그램이 완료될 때까지 <see langword="Shell" />이 반환되지 않음을 나타냅니다. 따라서 <paramref name="Timeout" />을 생략하거나 -1로 설정하면 <see langword="Shell" />에서 프로그램에 제어를 반환하지 않게 됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Style" />의 범위는 0-9(포함)가 아니어야 합니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <see langword="Shell" />이 <paramref name="PathName" /> 파일을 찾을 수 없습니다.</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="PathName" />이(가) <see langword="Nothing" />인 경우</exception>
      <returns>실행 중인 프로그램의 프로세스 ID가 포함된 정수입니다. 프로그램이 이미 실행을 완료한 경우 0입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
      <summary>식 목록을 계산하고 목록에서 <see langword="Object" />인 첫 번째 식에 해당하는 <see langword="True" /> 값을 반환합니다.</summary>
      <param name="VarExpr">필수 요소. <see langword="Object" /> 매개 변수 배열입니다. 요소의 수는 짝수여야 합니다. 쉼표로 구분된 <see langword="Object" /> 변수나 식의 목록 또는 1차원 배열의 <see langword="Object" /> 요소를 사용할 수 있습니다.</param>
      <exception cref="T:System.ArgumentException">인수 개수가 홀수 개입니다.</exception>
      <returns>식 목록을 계산하고 목록에서 <see langword="Object" />인 첫 번째 식에 해당하는 <see langword="True" /> 값을 반환합니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary>
        <see langword="MsgBox" /> 함수에 의해 반환되는 메시지 상자에서 누른 단추를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary>중단 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbAbort" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary>취소 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbCancel" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary>무시 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbIgnore" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary>아니요 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbNo" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary>확인 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbOK" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary>다시 시도 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbRetry" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary>예 단추를 눌렀습니다. 이 멤버는 Visual Basic 상수 <see langword="vbYes" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary>
        <see langword="MsgBox" /> 함수를 호출할 때 표시할 단추를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary>중단, 다시 시도, 및 무시 단추 이 멤버는 Visual Basic 상수 <see langword="vbAbortRetryIgnore" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary>애플리케이션 모달 메시지 상자 이 멤버는 Visual Basic 상수 <see langword="vbApplicationModal" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary>중요 메시지 이 멤버는 Visual Basic 상수 <see langword="vbCritical" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary>첫 번째 단추가 기본 단추입니다. 이 멤버는 Visual Basic 상수 <see langword="vbDefaultButton1" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary>두 번째 단추가 기본 단추입니다. 이 멤버는 Visual Basic 상수 <see langword="vbDefaultButton2" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary>세 번째 단추가 기본 단추입니다. 이 멤버는 Visual Basic 상수 <see langword="vbDefaultButton3" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary>경고 메시지입니다. 이 멤버는 Visual Basic 상수 <see langword="vbExclamation" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary>정보 메시지 이 멤버는 Visual Basic 상수 <see langword="vbInformation" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary>도움말 텍스트 이 멤버는 Visual Basic 상수 <see langword="vbMsgBoxHelp" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary>오른쪽 맞춤 텍스트 이 멤버는 Visual Basic 상수 <see langword="vbMsgBoxRight" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary>오른쪽에서 왼쪽으로 읽는 텍스트(히브리어 및 아랍어 시스템) 이 멤버는 Visual Basic 상수 <see langword="vbMsgBoxRtlReading" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary>전경 메시지 상자 창 이 멤버는 Visual Basic 상수 <see langword="vbMsgBoxSetForeground" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary>확인 및 취소 단추 이 멤버는 Visual Basic 상수 <see langword="vbOKCancel" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary>확인 단추만(기본값) 이 멤버는 Visual Basic 상수 <see langword="vbOKOnly" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary>경고 쿼리 이 멤버는 Visual Basic 상수 <see langword="vbQuestion" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary>다시 시도 및 취소 단추 이 멤버는 Visual Basic 상수 <see langword="vbRetryCancel" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary>시스템 모달 메시지 상자 이 멤버는 Visual Basic 상수 <see langword="vbSystemModal" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary>예 및 No 단추 이 멤버는 Visual Basic 상수 <see langword="vbYesNo" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary>예, 아니요 및 취소 단추 이 멤버는 Visual Basic 상수 <see langword="vbYesNoCancel" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary>이 특성은 Visual Basic에서 <see langword="My.Forms" /> 및 <see langword="My.WebServices" />를 지원합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>이 특성은 Visual Basic에서 <see langword="My.Forms" /> 및 <see langword="My.WebServices" />를 지원합니다.</summary>
      <param name="typeToCollect">
        <see langword="String" />. <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" /> 속성을 초기화합니다. 컴파일러에서는 이 형식에서 파생된 클래스의 접근자 속성을 생성합니다.</param>
      <param name="createInstanceMethodName">
        <see langword="String" />. <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" /> 속성을 초기화합니다. 클래스에서 형식의 인스턴스를 만드는 메서드를 지정합니다.</param>
      <param name="disposeInstanceMethodName">
        <see langword="String" />. <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" /> 속성을 초기화합니다. 클래스에서 형식의 인스턴스를 삭제하는 메서드를 지정합니다.</param>
      <param name="defaultInstanceAlias">
        <see langword="String" />. <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" /> 속성을 초기화합니다. 클래스의 기본 인스턴스를 반환하는 속성의 이름을 지정합니다.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary>이 속성은 Visual Basic에서 <see langword="My" />를 지원합니다.</summary>
      <returns>클래스에서 형식의 인스턴스를 만드는 메서드를 지정합니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary>이 속성은 Visual Basic에서 <see langword="My" />를 지원합니다.</summary>
      <returns>클래스의 기본 인스턴스를 반환하는 속성의 이름을 지정합니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary>이 속성은 Visual Basic에서 <see langword="My" />를 지원합니다.</summary>
      <returns>클래스에서 형식의 인스턴스를 삭제하는 메서드를 지정합니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary>이 속성은 Visual Basic에서 <see langword="My" />를 지원합니다.</summary>
      <returns>컴파일러에서 접근자 속성을 생성할 해당 형식의 이름을 지정합니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary>파일 액세스 함수를 호출할 때 파일을 여는 방법을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary>읽기 및 쓰기 액세스가 허용됩니다. 이것이 기본값입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary>읽기 액세스가 허용됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary>읽기 및 쓰기 액세스가 허용됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary>쓰기 액세스가 허용됩니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary>파일 액세스 함수를 호출할 때 파일을 여는 방법을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary>파일을 열고 해당 파일에 추가합니다. 기본.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary>파일을 열고 해당 파일에 대한 이진 액세스를 허용합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary>파일을 열고 해당 파일에 대한 읽기 권한을 허용합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary>파일을 열고 해당 파일에 대한 쓰기 권한을 허용합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary>파일을 열고 해당 파일에 대한 임의 액세스를 허용합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary>파일 액세스 함수를 호출할 때 파일을 여는 방법을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary>
        <see langword="LockReadWrite" />. 이것이 기본값입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary>다른 프로세스에서 해당 파일을 읽을 수 없습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary>다른 프로세스에서 해당 파일을 읽거나 쓸 수 없습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary>다른 프로세스에서 해당 파일에 쓸 수 없습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary>모든 프로세스에서 해당 파일을 읽고 쓸 수 있습니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary>이 클래스는 Visual Basic <see langword="Print" /> 및 <see langword="PrintLine" /> 함수를 지원합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary>이 필드는 Visual Basic <see langword="Print" /> 및 <see langword="PrintLine" /> 함수를 지원합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary>
        <see langword="Strings" /> 모듈에는 문자열 연산을 수행하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary>문자에 해당하는 문자 코드를 나타내는 정수 값을 반환합니다.</summary>
      <param name="String">필수 요소. 임의의 유효한 <see langword="Char" /> 또는 <see langword="String" /> 식입니다. <paramref name="String" />이 <see langword="String" /> 식이면 문자열의 첫 문자만 입력에 사용합니다. <paramref name="String" />이 <see langword="Nothing" />이거나 문자를 포함하지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <returns>문자에 해당하는 문자 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary>문자에 해당하는 문자 코드를 나타내는 정수 값을 반환합니다.</summary>
      <param name="String">필수 요소. 임의의 유효한 <see langword="Char" /> 또는 <see langword="String" /> 식입니다. <paramref name="String" />이 <see langword="String" /> 식이면 문자열의 첫 문자만 입력에 사용합니다. <paramref name="String" />이 <see langword="Nothing" />이거나 문자를 포함하지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <returns>문자에 해당하는 문자 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary>문자에 해당하는 문자 코드를 나타내는 정수 값을 반환합니다.</summary>
      <param name="String">필수 요소. 임의의 유효한 <see langword="Char" /> 또는 <see langword="String" /> 식입니다. <paramref name="String" />이 <see langword="String" /> 식이면 문자열의 첫 문자만 입력에 사용합니다. <paramref name="String" />이 <see langword="Nothing" />이거나 문자를 포함하지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <returns>문자에 해당하는 문자 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary>문자에 해당하는 문자 코드를 나타내는 정수 값을 반환합니다.</summary>
      <param name="String">필수 요소. 임의의 유효한 <see langword="Char" /> 또는 <see langword="String" /> 식입니다. <paramref name="String" />이 <see langword="String" /> 식이면 문자열의 첫 문자만 입력에 사용합니다. <paramref name="String" />이 <see langword="Nothing" />이거나 문자를 포함하지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</param>
      <returns>문자에 해당하는 문자 코드입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary>지정한 문자 코드와 연관된 문자를 반환합니다.</summary>
      <param name="CharCode">필수 요소. 문자에 대한 <c>코드 포인트</c> 또는 문자 코드를 나타내는 <see langword="Integer" /> 식입니다.</param>
      <exception cref="T:System.ArgumentException">
        <see langword="Chr" />에 대해 <paramref name="CharCode" /> &lt; 0 또는 &gt; 255입니다.</exception>
      <returns>지정한 문자 코드와 연관된 문자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary>지정한 문자 코드와 연관된 문자를 반환합니다.</summary>
      <param name="CharCode">필수 요소. 문자에 대한 <c>코드 포인트</c> 또는 문자 코드를 나타내는 <see langword="Integer" /> 식입니다.</param>
      <exception cref="T:System.ArgumentException">
        <see langword="ChrW" />에 대해 <paramref name="CharCode" /> &lt; -32768 또는 &gt; 65535입니다.</exception>
      <returns>지정한 문자 코드와 연관된 문자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>지정된 필터링 기준에 따라 <see langword="String" /> 배열의 하위 집합을 포함하는 0부터 시작하는 배열을 반환합니다.</summary>
      <param name="Source">필수 요소. 찾을 문자열의 1차원 배열입니다.</param>
      <param name="Match">필수 요소. 검색할 문자열입니다.</param>
      <param name="Include">선택 사항입니다. <paramref name="Match" />를 포함하거나 제외하는 부분 문자열을 반환할지 여부를 나타내는 <see langword="Boolean" /> 값입니다. <paramref name="Include" />가 <see langword="True" />이면 <see langword="Filter" /> 함수는 부분 문자열로 <paramref name="Match" />를 포함하는 배열의 하위 집합을 반환합니다. <paramref name="Include" />가 <see langword="False" />이면 <see langword="Filter" /> 함수는 부분 문자열로 <paramref name="Match" />를 포함하지 않는 배열의 하위 집합을 반환합니다.</param>
      <param name="Compare">선택 사항입니다. 사용할 문자열 비교의 종류를 나타내는 숫자 값입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" />가 <see langword="Nothing" />이거나 1차원 배열이 아닙니다.</exception>
      <returns>지정된 필터링 기준에 따라 <see langword="String" /> 배열의 하위 집합을 포함하는 0부터 시작하는 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>지정된 필터링 기준에 따라 <see langword="String" /> 배열의 하위 집합을 포함하는 0부터 시작하는 배열을 반환합니다.</summary>
      <param name="Source">필수 요소. 찾을 문자열의 1차원 배열입니다.</param>
      <param name="Match">필수 요소. 검색할 문자열입니다.</param>
      <param name="Include">선택 사항입니다. <paramref name="Match" />를 포함하거나 제외하는 부분 문자열을 반환할지 여부를 나타내는 <see langword="Boolean" /> 값입니다. <paramref name="Include" />가 <see langword="True" />이면 <see langword="Filter" /> 함수는 부분 문자열로 <paramref name="Match" />를 포함하는 배열의 하위 집합을 반환합니다. <paramref name="Include" />가 <see langword="False" />이면 <see langword="Filter" /> 함수는 부분 문자열로 <paramref name="Match" />를 포함하지 않는 배열의 하위 집합을 반환합니다.</param>
      <param name="Compare">선택 사항입니다. 사용할 문자열 비교의 종류를 나타내는 숫자 값입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" />가 <see langword="Nothing" />이거나 1차원 배열이 아닙니다.</exception>
      <returns>지정된 필터링 기준에 따라 <see langword="String" /> 배열의 하위 집합을 포함하는 0부터 시작하는 배열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary>형식 <see langword="String" /> 식에 포함된 명령에 따라 형식 지정된 문자열을 반환합니다.</summary>
      <param name="Expression">필수 요소. 모든 유효한 식입니다.</param>
      <param name="Style">선택 사항입니다. 유효한 이름이 지정되거나 사용자 정의된 형식 <see langword="String" /> 식입니다.</param>
      <returns>형식 <see langword="String" /> 식에 포함된 명령에 따라 서식이 지정된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>시스템 제어판에 정의된 통화 기호를 사용하여 통화 값으로 서식이 지정된 식을 반환합니다.</summary>
      <param name="Expression">필수 요소. 서식이 지정될 식입니다.</param>
      <param name="NumDigitsAfterDecimal">선택 사항입니다. 소수점 오른쪽에 표시할 자릿수를 나타내는 숫자 값입니다. 기본값은 -1로, 시스템의 국가별 설정 값이 사용됨을 나타냅니다.</param>
      <param name="IncludeLeadingDigit">선택 사항입니다. 소수 값에서 앞에 오는 0을 표시할지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 열거형입니다. 값은 "설명"을 참조하십시오.</param>
      <param name="UseParensForNegativeNumbers">선택 사항입니다. 음수를 괄호로 묶을지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 열거형입니다. 값은 "설명"을 참조하십시오.</param>
      <param name="GroupDigits">선택 사항입니다. 컴퓨터의 국가별 설정에 지정된 그룹 구분 기호를 사용하여 숫자를 그룹화할지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 열거형입니다. 값은 "설명"을 참조하십시오.</param>
      <exception cref="T:System.ArgumentException">소수점 이하 자릿수가 99보다 큽니다.</exception>
      <exception cref="T:System.InvalidCastException">형식이 숫자가 아닌 경우</exception>
      <returns>시스템 제어판에 정의된 통화 기호를 사용하여 통화 값으로 서식이 지정된 식입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary>날짜/시간 값을 나타내는 문자열 식을 반환합니다.</summary>
      <param name="Expression">필수 요소. 서식을 지정할 <see langword="Date" /> 식입니다.</param>
      <param name="NamedFormat">선택 사항입니다. 사용되는 날짜/시간 형식을 나타내는 숫자 값입니다. 이 인수를 생략하면 <see langword="DateFormat.GeneralDate" />가 사용됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NamedFormat" /> 설정이 잘못되었습니다.</exception>
      <returns>날짜/시간 값을 나타내는 문자열 식입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>숫자로 서식이 지정된 식을 반환합니다.</summary>
      <param name="Expression">필수 요소. 서식이 지정될 식입니다.</param>
      <param name="NumDigitsAfterDecimal">선택 사항입니다. 소수점 오른쪽에 표시할 자릿수를 나타내는 숫자 값입니다. 기본값은 -1로, 시스템의 국가별 설정 값이 사용됨을 나타냅니다.</param>
      <param name="IncludeLeadingDigit">선택 사항입니다. 소수 값에서 앞에 오는 0을 표시할지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 상수입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <param name="UseParensForNegativeNumbers">선택 사항입니다. 음수를 괄호로 묶을지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 상수입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <param name="GroupDigits">선택 사항입니다. 로캘 설정에 지정된 그룹 구분 기호를 사용하여 숫자를 그룹화할지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 상수입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <exception cref="T:System.InvalidCastException">형식이 숫자가 아닌 경우</exception>
      <returns>숫자로 서식이 지정된 식입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>백분율로 서식이 지정된 식(100을 곱함)을 % 문자를 붙여 반환합니다.</summary>
      <param name="Expression">필수 요소. 서식이 지정될 식입니다.</param>
      <param name="NumDigitsAfterDecimal">선택 사항입니다. 소숫점 오른쪽에 표시할 자릿수를 나타내는 숫자 값입니다. 기본값은 -1로, 로캘 설정이 사용됨을 나타냅니다.</param>
      <param name="IncludeLeadingDigit">선택 사항입니다. 소숫점 이하 값에 대해 선행 0을 표시할지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 상수입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <param name="UseParensForNegativeNumbers">선택 사항입니다. 음수 값을 괄호로 묶을지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 상수입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <param name="GroupDigits">선택 사항입니다. 로캘 설정에 지정된 그룹 구분 기호를 사용하여 숫자를 그룹화할지 여부를 나타내는 <see cref="T:Microsoft.VisualBasic.TriState" /> 상수입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <exception cref="T:System.InvalidCastException">형식이 숫자가 아닌 경우</exception>
      <returns>% 문자를 붙여 백분율로 서식이 지정된 식(100을 곱함)입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary>제공된 문자열의 지정한 인덱스에서 해당 문자를 나타내는 <see langword="Char" /> 값을 반환합니다.</summary>
      <param name="str">필수 요소. 임의의 유효한 <see langword="String" /> 식입니다.</param>
      <param name="Index">필수 요소. <see langword="Integer" /> 식입니다. <paramref name="str" />에 있는 반환될 문자의 인덱스(1부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" />은 <see langword="Nothing" />, <paramref name="Index" /> &lt; 1이거나 <paramref name="Index" />는 <paramref name="str" />의 마지막 문자의 인덱스보다 큽니다.</exception>
      <returns>제공된 문자열의 지정한 인덱스에서 해당 문자를 나타내는 <see langword="Char" /> 값입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>한 문자열에서 다른 문자열이 처음으로 나타나는 위치를 지정하는 정수를 반환합니다.</summary>
      <param name="StartPos" />
      <param name="String1">필수 요소. 검색 중인 <see langword="String" /> 식입니다.</param>
      <param name="String2">필수 요소. 검색된 <see langword="String" /> 식입니다.</param>
      <param name="Compare">선택 사항입니다. 문자열 비교의 형식을 지정합니다. <paramref name="Compare" />가 생략되면 <see langword="Option Compare" /> 설정에 따라 비교 형식이 결정됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 1.</exception>
      <returns>
        <list type="table">
          <listheader>
            <term>조건</term>
            <description>InStr 함수의 반환 값</description>
          </listheader>
          <item>
            <term>
              <paramref name="String1" />의 길이가 0이거나 <see langword="Nothing" />인 경우</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" />의 길이가 0이거나 <see langword="Nothing" />인 경우</term>
            <description>
              <paramref name="start" />
            </description>
          </item>
          <item>
            <term>
              <paramref name="String2" />를 찾을 수 없는 경우</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" />가 <paramref name="String1" /> 안에 있는 경우</term>
            <description> 일치가 시작되는 위치</description>
          </item>
          <item>
            <term>
              <paramref name="Start" /> &gt;<paramref name="String1" />의 길이</term>
            <description>0</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>한 문자열에서 다른 문자열이 처음으로 나타나는 위치를 지정하는 정수를 반환합니다.</summary>
      <param name="String1">필수 요소. 검색 중인 <see langword="String" /> 식입니다.</param>
      <param name="String2">필수 요소. 검색된 <see langword="String" /> 식입니다.</param>
      <param name="Compare">선택 사항입니다. 문자열 비교의 형식을 지정합니다. <paramref name="Compare" />가 생략되면 <see langword="Option Compare" /> 설정에 따라 비교 형식이 결정됩니다.</param>
      <returns>
        <list type="table">
          <listheader>
            <term>조건</term>
            <description>InStr 함수의 반환 값</description>
          </listheader>
          <item>
            <term>
              <paramref name="String1" />의 길이가 0이거나 <see langword="Nothing" />인 경우</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" />의 길이가 0이거나 <see langword="Nothing" />인 경우</term>
            <description>검색을 시작하는 위치이며, 기본적으로 첫 번째 문자 위치부터 시작합니다.</description>
          </item>
          <item>
            <term>
              <paramref name="String2" />를 찾을 수 없는 경우</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" />가 <paramref name="String1" /> 안에 있는 경우</term>
            <description>일치가 시작되는 위치</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>문자열의 오른쪽에서 시작하여 한 문자열 내에서 다른 문자열이 처음 나오는 위치를 반환합니다.</summary>
      <param name="StringCheck">필수 요소. 검색 중인 문자열 식입니다.</param>
      <param name="StringMatch">필수 요소. 검색 중인 문자열 식입니다.</param>
      <param name="Start">선택 사항입니다. 문자열의 왼쪽에서 시작하여 각 검색에 대해 0부터 시작하는 시작 위치를 설정하는 숫자 식입니다. <paramref name="Start" />가 생략되면 -1이 사용됩니다. 이것은 마지막 문자에서 검색이 시작됨을 의미합니다. 이 경우 오른쪽에서 왼쪽으로 검색이 계속됩니다.</param>
      <param name="Compare">선택 사항입니다. 부분 문자열을 평가할 때 사용할 비교 종류를 나타내는 숫자 값입니다. 이 인수를 생략하면 이진 비교가 수행됩니다. 값에 대한 설정을 참조하십시오.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> = 0 또는 <paramref name="Start" /> &lt; -1.</exception>
      <returns>
        <list type="table">
          <listheader>
            <term>조건</term>
            <description>반환 값</description>
          </listheader>
          <item>
            <term>
              <paramref name="StringCheck" />의 길이가 0인 경우</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="StringMatch" />의 길이가 0인 경우</term>
            <description>
              <paramref name="Start" />
            </description>
          </item>
          <item>
            <term>
              <paramref name="StringMatch" />를 찾을 수 없는 경우</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="StringMatch" />가 <paramref name="StringCheck" /> 안에 있는 경우</term>
            <description>문자열의 오른쪽에서 시작하여 일치하는 항목을 처음 찾은 위치</description>
          </item>
          <item>
            <term>
              <paramref name="Start" />가 <paramref name="StringMatch" />의 길이보다 큰 경우</term>
            <description>0</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary>배열에 포함된 여러 부분 문자열을 조인하여 작성되는 문자열을 반환합니다.</summary>
      <param name="SourceArray">필수 요소. 조인할 부분 문자열을 포함하는 1차원 배열입니다.</param>
      <param name="Delimiter">선택 사항입니다. 반환되는 문자열에서 부분 문자열을 구분하는 데 사용되는 문자열입니다. 이 인수를 생략하면 공백 문자(" ")가 사용됩니다. <paramref name="Delimiter" />가 길이가 0인 문자열("")이거나 <see langword="Nothing" />이면 목록의 모든 항목이 구분 기호 없이 연결됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" />가 1차원이 아닙니다.</exception>
      <returns>배열에 포함된 여러 부분 문자열을 조인하여 작성되는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary>배열에 포함된 여러 부분 문자열을 조인하여 작성되는 문자열을 반환합니다.</summary>
      <param name="SourceArray">필수 요소. 조인할 부분 문자열을 포함하는 1차원 배열입니다.</param>
      <param name="Delimiter">선택 사항입니다. 반환되는 문자열에서 부분 문자열을 구분하는 데 사용되는 문자열입니다. 이 인수를 생략하면 공백 문자(" ")가 사용됩니다. <paramref name="Delimiter" />가 길이가 0인 문자열("")이거나 <see langword="Nothing" />이면 목록의 모든 항목이 구분 기호 없이 연결됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" />가 1차원이 아닙니다.</exception>
      <returns>배열에 포함된 여러 부분 문자열을 조인하여 작성되는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary>소문자로 변환된 문자열 또는 문자를 반환합니다.</summary>
      <param name="Value">필수 요소. 임의의 유효한 <see langword="String" /> 또는 <see langword="Char" /> 식입니다.</param>
      <returns>소문자로 변환된 문자열 또는 문자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary>소문자로 변환된 문자열 또는 문자를 반환합니다.</summary>
      <param name="Value">필수 요소. 임의의 유효한 <see langword="String" /> 또는 <see langword="Char" /> 식입니다.</param>
      <returns>소문자로 변환된 문자열 또는 문자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary>문자열의 왼쪽에서 지정한 수의 문자를 포함하는 문자열을 반환합니다.</summary>
      <param name="str">필수 요소. 가장 왼쪽의 문자를 반환하는 <see langword="String" /> 식입니다.</param>
      <param name="Length">필수 요소. <see langword="Integer" /> 식입니다. 반환할 문자의 수를 나타내는 숫자 식입니다. 이 인수가 0인 경우 길이가 0인 문자열("")이 반환됩니다. 이 인수가 <paramref name="str" />의 문자 수보다 크거나 같으면 전체 문자열이 반환됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
      <returns>문자열의 왼쪽에서 지정한 수의 문자를 포함하는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수를 반환합니다.</summary>
      <param name="Expression">임의의 유효한 <see langword="String" /> 식 또는 변수 이름입니다. <paramref name="Expression" />의 형식이 <see langword="Object" />인 경우 <see langword="Len" /> 함수는 <see langword="FilePut" /> 함수에 의해 파일에 기록될 크기를 반환합니다.</param>
      <returns>문자열에 있는 문자 수나 변수를 저장하는 데 필요한 바이트 수를 포함하는 정수입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary>지정된 문자열을 지정한 길이에 맞게 조정하고 왼쪽에 맞춘 문자열을 반환합니다.</summary>
      <param name="Source">필수 요소. <see langword="String" /> 식입니다. 문자열 변수의 이름입니다.</param>
      <param name="Length">필수 요소. <see langword="Integer" /> 식입니다. 반환되는 문자열의 길이입니다.</param>
      <returns>지정된 문자열을 지정한 길이에 맞게 조정하고 왼쪽에 맞춘 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary>선행 공백(<see langword="LTrim" />), 후행 공백(<see langword="RTrim" />), 선행 또는 후행 공백(<see langword="Trim" />)이 없는 지정된 문자열의 복사본이 포함된 문자열을 반환합니다.</summary>
      <param name="str">필수 요소. 임의의 유효한 <see langword="String" /> 식입니다.</param>
      <returns>선행 공백(<see langword="LTrim" />), 후행 공백(<see langword="RTrim" />), 선행 또는 후행 공백(<see langword="Trim" />)이 없는 지정된 문자열의 복사본이 포함된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary>문자열의 지정된 위치에서 시작하여 모든 문자를 포함하는 문자열을 반환합니다.</summary>
      <param name="str">필수 요소. 문자를 반환하는 <see langword="String" /> 식입니다.</param>
      <param name="Start">필수 요소. <see langword="Integer" /> 식입니다. 반환할 문자의 시작 위치입니다. <paramref name="Start" />가 <paramref name="str" />의 문자 수보다 크면 <see langword="Mid" /> 함수는 길이가 0인 문자열("")을 반환합니다. <paramref name="Start" />는 1부터 시작됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 또는 <paramref name="Length" /> &lt; 0.</exception>
      <returns>문자열의 지정된 위치에서 시작하여 모든 문자로 구성된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary>문자열의 지정된 위치에서 시작하여 지정된 문자 수를 포함하는 문자열을 반환합니다.</summary>
      <param name="str">필수 요소. 문자를 반환하는 <see langword="String" /> 식입니다.</param>
      <param name="Start">필수 요소. <see langword="Integer" /> 식입니다. 반환할 문자의 시작 위치입니다. <paramref name="Start" />가 <paramref name="str" />의 문자 수보다 크면 <see langword="Mid" /> 함수는 길이가 0인 문자열("")을 반환합니다. <paramref name="Start" />는 1부터 시작됩니다.</param>
      <param name="Length">선택 사항입니다. <see langword="Integer" /> 식입니다. 반환할 문자의 수입니다. 문자의 개수를 생략하거나 텍스트 문자 수가 <paramref name="Length" />보다 적으면(<paramref name="Start" /> 위치의 문자 포함) 시작 위치부터 해당 문자열의 끝까지 모든 문자가 반환됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 또는 <paramref name="Length" /> &lt; 0.</exception>
      <returns>문자열의 지정된 위치에서 시작하여 지정된 문자 수로 구성된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>지정된 부분 문자열이 지정된 횟수만큼 다른 부분 문자열로 대체된 문자열을 반환합니다.</summary>
      <param name="Expression">필수 요소. 대체할 부분 문자열을 포함하는 문자열 식입니다.</param>
      <param name="Find">필수 요소. 검색 중인 부분 문자열입니다.</param>
      <param name="Replacement">필수 요소. 대체 부분 문자열입니다.</param>
      <param name="Start">선택 사항입니다. 대체에 사용되는 부분 문자열을 시작하는 <paramref name="Expression" /> 내 위치입니다. <see langword="Replace" />의 반환 값은 적절한 대체와 함께 <paramref name="Start" />에서 시작하는 문자열입니다. 생략된 경우 1이라고 가정합니다.</param>
      <param name="Count">선택 사항입니다. 수행할 부분 문자열 대체 횟수입니다. 이 인수를 생략하면 기본값으로 -1이 사용됩니다. 이것은 "가능한 모든 항목이 대체됨"을 의미합니다.</param>
      <param name="Compare">선택 사항입니다. 부분 문자열을 평가할 때 사용할 비교 종류를 나타내는 숫자 값입니다. 값에 대한 설정을 참조하십시오.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Count" /> &lt; -1 또는 <paramref name="Start" /> &lt;= 0.</exception>
      <returns>다음 값 중의 하나입니다.
          <list type="table"><listheader><term>조건</term><description>반환 값</description></listheader><item><term><paramref name="Find" />가 0이거나 <see langword="Nothing" />인 경우</term><description><paramref name="Expression" />의 복사본</description></item><item><term><paramref name="Replace" />의 길이가 0인 경우</term><description><paramref name="Expression" />가 포함되지 않는 <paramref name="Find" />의 복사본</description></item><item><term><paramref name="Expression" />이 0이거나 <see langword="Nothing" />이거나, <paramref name="Start" />가 <paramref name="Expression" />보다 긴 경우</term><description><see langword="Nothing" /></description></item><item><term><paramref name="Count" />가 0인 경우</term><description><paramref name="Expression" />의 복사본</description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary>문자열의 오른쪽에서 지정한 개수의 문자를 포함하는 문자열을 반환합니다.</summary>
      <param name="str">필수 요소. 가장 오른쪽의 문자를 반환하는 <see langword="String" /> 식입니다.</param>
      <param name="Length">필수 요소. <see langword="Integer" /> 반환할 문자의 수를 나타내는 숫자 식입니다. 이 인수가 0인 경우 길이가 0인 문자열("")이 반환됩니다. 이 인수가 <paramref name="str" />의 문자 수보다 크거나 같으면 전체 문자열이 반환됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
      <returns>문자열의 오른쪽에서 지정한 개수의 문자를 포함하는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary>지정된 길이에 맞게 조정된 특정 문자열이 포함된 문자열(오른쪽에 맞춰진 문자열)을 반환합니다.</summary>
      <param name="Source">필수 요소. <see langword="String" /> 식입니다. 문자열 변수의 이름입니다.</param>
      <param name="Length">필수 요소. <see langword="Integer" /> 식입니다. 반환되는 문자열의 길이입니다.</param>
      <returns>지정된 길이에 맞게 조정된 특정 문자열이 포함된 문자열(오른쪽에 맞춰진 문자열)입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary>선행 공백(<see langword="LTrim" />), 후행 공백(<see langword="RTrim" />), 선행 또는 후행 공백(<see langword="Trim" />)이 없는 지정된 문자열의 복사본이 포함된 문자열을 반환합니다.</summary>
      <param name="str">필수 요소. 임의의 유효한 <see langword="String" /> 식입니다.</param>
      <returns>선행 공백(<see langword="LTrim" />), 후행 공백(<see langword="RTrim" />), 선행 또는 후행 공백(<see langword="Trim" />)이 없는 지정된 문자열의 복사본이 포함된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary>지정한 수 만큼의 공백으로 구성되는 문자열을 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Integer" /> 식입니다. 문자열에 넣을 공백의 수입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> &lt; 0.</exception>
      <returns>지정한 수 만큼의 공백으로 구성되는 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>지정된 수의 부분 문자열을 포함하는 0부터 시작하는 1차원 배열을 반환합니다.</summary>
      <param name="Expression">필수 요소. 부분 문자열과 구분 기호를 포함하는 <see langword="String" /> 식입니다.</param>
      <param name="Delimiter">선택 사항입니다. 부분 문자열의 한계를 식별하기 위해 사용되는 단일 문자입니다. <paramref name="Delimiter" />를 생략하면 공백 문자(" ")가 구분 기호로 간주됩니다.</param>
      <param name="Limit">선택 사항입니다. 입력 문자열을 분할해야 하는 부분 문자열의 최대 수입니다. 기본값 -1은 <paramref name="Delimiter" /> 문자열이 발생할 때마다 입력 문자열을 분할해야 함을 나타냅니다.</param>
      <param name="Compare">선택 사항입니다. 부분 문자열을 평가할 때 사용할 비교 종류를 나타내는 숫자 값입니다. 값에 대해서는 "설정"을 참조하세요.</param>
      <returns>
        <see langword="String" /> 배열입니다. <paramref name="Expression" />이 길이가 0인 문자열("")인 경우 <see langword="Split" />는 길이가 0인 문자열이 포함된 단일 요소 배열을 반환합니다. <paramref name="Delimiter" />가 길이가 0인 문자열이거나 <paramref name="Expression" />의 어떤 위치에도 표시되지 않을 경우 <see langword="Split" />는 전체 <paramref name="Expression" /> 문자열이 포함된 단일 요소 배열을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>문자열 비교의 결과에 따라 -1, 0 또는 1을 반환합니다.</summary>
      <param name="String1">필수 요소. 임의의 유효한 <see langword="String" /> 식입니다.</param>
      <param name="String2">필수 요소. 임의의 유효한 <see langword="String" /> 식입니다.</param>
      <param name="Compare">선택 사항입니다. 문자열 비교의 형식을 지정합니다. <paramref name="Compare" />가 생략되면 <see langword="Option Compare" /> 설정에 따라 비교 형식이 결정됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Compare" /> 값이 잘못된 경우</exception>
      <returns>다음 값 중 하나입니다. <list type="table"><listheader><term>조건</term><description>StrComp 함수의 반환 값</description></listheader><item><term><paramref name="String1" />이 <paramref name="String2" /> 앞에 정렬되는 경우</term><description>-1</description></item><item><term><paramref name="String1" />이 <paramref name="String2" />와 같습니다.</term><description>0</description></item><item><term><paramref name="String1" />이 <paramref name="String2" /> 뒤에 정렬되는 경우</term><description>1</description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary>지정된 대로 변환된 문자열을 반환합니다.</summary>
      <param name="str">필수 요소. 변환할 <see langword="String" /> 식입니다.</param>
      <param name="Conversion">필수 요소. <see cref="T:Microsoft.VisualBasic.VbStrConv" /> 멤버입니다. 수행할 변환 형식을 지정하는 열거형 값입니다.</param>
      <param name="LocaleID">선택 사항입니다. 시스템의 <see langword="LocaleID" /> 값과 다른 경우의 <see langword="LocaleID" /> 값입니다. 기본값은 시스템의 <see langword="LocaleID" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException">지원되지 않는 <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 또는 &gt; 2048 또는 지정된 로캘에 대해 지원되지 않는 변환.</exception>
      <returns>지정된 대로 변환된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary>지정된 횟수만큼 반복되는 특정 문자로 구성된 문자열 또는 개체를 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Integer" /> 식입니다. 반환되는 문자열의 길이입니다.</param>
      <param name="Character">필수 요소. 임의의 유효한 <see langword="Char" />, <see langword="String" /> 또는 <see langword="Object" /> 식입니다. 해당 식에서 첫 문자만 사용됩니다. Character가 <see langword="Object" /> 형식이면 <see langword="Char" /> 또는 <see langword="String" />값을 포함해야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 0보다 작거나 <paramref name="Character" /> 형식이 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" />이(가) <see langword="Nothing" />인 경우.</exception>
      <returns>지정된 횟수만큼 반복되는 특정 문자로 구성된 문자열 또는 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary>지정된 횟수만큼 반복되는 특정 문자로 구성된 문자열 또는 개체를 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Integer" /> 식입니다. 반환되는 문자열의 길이입니다.</param>
      <param name="Character">필수 요소. 임의의 유효한 <see langword="Char" />, <see langword="String" /> 또는 <see langword="Object" /> 식입니다. 해당 식에서 첫 문자만 사용됩니다. Character가 <see langword="Object" /> 형식이면 <see langword="Char" /> 또는 <see langword="String" />값을 포함해야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 0보다 작거나 <paramref name="Character" /> 형식이 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" />이(가) <see langword="Nothing" />인 경우.</exception>
      <returns>지정된 횟수만큼 반복되는 특정 문자로 구성된 문자열 또는 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary>지정된 횟수만큼 반복되는 특정 문자로 구성된 문자열 또는 개체를 반환합니다.</summary>
      <param name="Number">필수 요소. <see langword="Integer" /> 식입니다. 반환되는 문자열의 길이입니다.</param>
      <param name="Character">필수 요소. 임의의 유효한 <see langword="Char" />, <see langword="String" /> 또는 <see langword="Object" /> 식입니다. 해당 식에서 첫 문자만 사용됩니다. Character가 <see langword="Object" /> 형식이면 <see langword="Char" /> 또는 <see langword="String" />값을 포함해야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" />가 0보다 작거나 <paramref name="Character" /> 형식이 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" />이(가) <see langword="Nothing" />인 경우.</exception>
      <returns>지정된 횟수만큼 반복되는 특정 문자로 구성된 문자열 또는 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary>지정된 문자열의 문자 순서를 역순으로 한 문자열을 반환합니다.</summary>
      <param name="Expression">필수 요소. 문자 순서가 거꾸로 바뀌는 문자열 식입니다. <paramref name="Expression" />이 길이가 0인 문자열("")이면 길이가 0인 문자열이 반환됩니다.</param>
      <returns>지정된 문자열의 문자 순서를 역순으로 한 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary>선행 공백(<see langword="LTrim" />), 후행 공백(<see langword="RTrim" />), 선행 또는 후행 공백(<see langword="Trim" />)이 없는 지정된 문자열의 복사본이 포함된 문자열을 반환합니다.</summary>
      <param name="str">필수 요소. 임의의 유효한 <see langword="String" /> 식입니다.</param>
      <returns>선행 공백(<see langword="LTrim" />), 후행 공백(<see langword="RTrim" />), 선행 또는 후행 공백(<see langword="Trim" />)이 없는 지정된 문자열의 복사본이 포함된 문자열입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary>대문자로 변환된 특정 문자열이 있는 문자열 또는 문자를 반환합니다.</summary>
      <param name="Value">필수 요소. 임의의 유효한 <see langword="String" /> 또는 <see langword="Char" /> 식입니다.</param>
      <returns>대문자로 변환된 특정 문자열이 있는 문자열 또는 문자입니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary>대문자로 변환된 특정 문자열이 있는 문자열 또는 문자를 반환합니다.</summary>
      <param name="Value">필수 요소. 임의의 유효한 <see langword="String" /> 또는 <see langword="Char" /> 식입니다.</param>
      <returns>대문자로 변환된 특정 문자열이 있는 문자열 또는 문자입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary>이 클래스는 Visual Basic <see langword="Print" /> 및 <see langword="PrintLine" /> 함수를 지원합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary>이 필드는 Visual Basic <see langword="Print" /> 및 <see langword="PrintLine" /> 함수를 지원합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary>부울 값 또는 숫자 서식 지정 함수를 호출할 때 기본값을 사용해야 하는지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary>false입니다. 이 멤버의 숫자 값은 0입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary>true입니다. 이 멤버의 숫자 값은 -1입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary>기본 설정입니다. 이 멤버의 숫자 값은 -2입니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary>variant 개체의 형식을 나타내며 <see langword="VarType" /> 함수에서 반환됩니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary>Array입니다. 이 멤버는 Visual Basic 상수 <see langword="vbArray" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary>
        <see langword="Boolean" />. (<see langword="True" /> 또는 <see langword="False" />.) 이 멤버는 Visual Basic 상수 <see langword="vbBoolean" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary>
        <see langword="Byte" />. (0~255.) 이 멤버는 Visual Basic 상수 <see langword="vbByte" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary>
        <see langword="Char" />. (0~65535.) 이 멤버는 Visual Basic 상수 <see langword="vbChar" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary>Currency입니다. 이 멤버는 Visual Basic 상수 <see langword="vbCurrency" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary>DataObject입니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary>
        <see langword="Date" />. (1년 1월 1일 0:00:00~9999년 12월 31 11:59:59 PM.) 이 멤버는 Visual Basic 상수 <see langword="vbDate" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary>
        <see langword="Decimal" />. (소수 자릿수가 없는 숫자의 경우 0~+/-79,228,162,514,264,337,593,543,950,335, 소수 자릿수가 28개인 숫자의 경우 0~+/-7.9228162514264337593543950335, 0이 아닌 숫자 중에서 가능한 최소 숫자는 +/-0.0000000000000000000000000001임)입니다. 이 멤버는 Visual Basic 상수 <see langword="vbDecimal" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary>
        <see langword="Double" />. (음수의 경우 -1.79769313486231E+308~-4.94065645841247E-324, 양수의 경우 4.94065645841247E-324~1.79769313486231E+308)입니다. 이 멤버는 Visual Basic 상수 <see langword="vbDouble" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary>Null 참조입니다. 이 멤버는 Visual Basic 상수 <see langword="vbEmpty" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary>
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary>
        <see langword="Integer" />. (-2,147,483,648~2,147,483,647.) 이 멤버는 Visual Basic 상수 <see langword="vbInteger" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary>
        <see langword="Long" />. (-9,223,372,036,854,775,808~9,223,372,036,854,775,807.) 이 멤버는 Visual Basic 상수 <see langword="vbLong" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary>Null 개체입니다. 이 멤버는 Visual Basic 상수 <see langword="vbNull" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary>
        <see langword="Object" /> 형식의 변수에는 모든 형식을 저장할 수 있습니다. 이 멤버는 Visual Basic 상수 <see langword="vbObject" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary>
        <see langword="Short" />. (-32,768 ~ 32,767.)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary>
        <see langword="Single" />. (-3.402823E+38~-1.401298E-45(음수), 1.401298E-45~3.402823E+38(양수).) 이 멤버는 Visual Basic 상수 <see langword="vbSingle" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary>
        <see langword="String" />. (0에서 약 20억 개의 유니코드 문자.) 이 멤버는 Visual Basic 상수 <see langword="vbString" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary>사용자 정의 형식입니다. 구조체의 각 멤버는 데이터 형식에 의해 결정되고 다른 멤버의 범위와는 무관한 범위를 갖습니다. 이 멤버는 Visual Basic 상수 <see langword="vbUserDefinedType" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary>
        <see langword="Variant" />. 이 멤버는 Visual Basic 상수 <see langword="vbVariant" />에 해당합니다.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary>구조체 또는 지역 변수가 아닌 변수의 배열을 고정 길이 배열로 처리해야 함을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary>
        <see langword="Bounds" /> 속성 값을 초기화합니다.</summary>
      <param name="UpperBound1">배열의 첫째 차원의 크기를 나타내는 상한 필드 값을 초기화합니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary>
        <see langword="Bounds" /> 속성 값을 초기화합니다.</summary>
      <param name="UpperBound1">배열의 첫째 차원의 크기를 나타내는 상한 필드 값을 초기화합니다.</param>
      <param name="UpperBound2">배열의 둘째 차원의 크기를 나타내는 상한 필드 값을 초기화합니다.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary>배열의 범위를 반환합니다.</summary>
      <returns>배열의 범위를 나타내는 정수 배열이 들어 있습니다.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary>배열의 크기를 반환합니다.</summary>
      <returns>배열의 요소 수를 나타내는 정수가 들어 있습니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary>문자열을 고정 길이인 것처럼 처리해야 함을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary>
        <see langword="SizeConst" /> 필드 값을 초기화합니다.</summary>
      <param name="Length">고정 문자열 길이입니다.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary>문자열의 길이를 가져옵니다.</summary>
      <returns>문자열의 길이입니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary>
        <see langword="VbMath" /> 모듈에는 수학 연산을 수행하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary>난수 생성기를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary>난수 생성기를 초기화합니다.</summary>
      <param name="Number">선택 사항입니다. <see langword="Object" /> 또는 임의의 유효한 숫자 식입니다.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary>
        <see cref="T:System.Single" /> 형식의 난수를 반환합니다.</summary>
      <returns>시퀀스의 다음 난수가 생성됩니다.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary>
        <see cref="T:System.Single" /> 형식의 난수를 반환합니다.</summary>
      <param name="Number">선택 사항입니다. <see cref="T:System.Single" /> 값 또는 임의의 유효한 <see cref="T:System.Single" /> 식입니다.</param>
      <returns>숫자가 0보다 작으면 Rnd가 <paramref name="Number" />를 시드로 사용하여 항상 같은 숫자를 생성합니다. 숫자가 0보다 크면 Rnd가 시퀀스의 다음 난수를 생성합니다. 숫자가 0이면 Rnd가 가장 최근에 생성된 숫자를 생성합니다. 숫자가 제공되지 않으면 Rnd가 시퀀스의 다음 난수를 생성합니다.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary>
        <see langword="StrConv" /> 함수를 호출할 때 수행할 변환 형식을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary>문자열의 가타카나 문자를 히라가나 문자로 변환합니다. 일본어 로캘에만 적용됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbHiragana" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary>문자열의 히라가나 문자를 가타카나 문자로 변환합니다. 일본어 로캘에만 적용됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbKatakana" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary>대/소문자 구분에 대한 파일 시스템 규칙에서 언어 규칙으로 문자열을 변환합니다. 이 멤버는 Visual Basic 상수 <see langword="vbLinguisticCasing" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary>문자열을 소문자로 변환합니다. 이 멤버는 Visual Basic 상수 <see langword="vbLowerCase" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary>문자열의 와이드(더블바이트) 문자를 좁은(싱글바이트) 문자로 변환합니다. 아시아어 로캘에 적용됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbNarrow" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary>변환을 수행하지 않습니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary>문자열에 포함된 모든 단어의 첫 글자를 대문자로 변환합니다. 이 멤버는 Visual Basic 상수 <see langword="vbProperCase" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary>문자열을 중국어 간체 문자로 변환합니다. 이 멤버는 Visual Basic 상수 <see langword="vbSimplifiedChinese" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary>문자열을 중국어 번체 문자로 변환합니다. 이 멤버는 Visual Basic 상수 <see langword="vbTraditionalChinese" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary>지정된 문자열을 대문자로 변환합니다. 이 멤버는 Visual Basic 상수 <see langword="vbUpperCase" />에 해당합니다.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary>문자열의 좁은(싱글바이트) 문자를 와이드(더블바이트) 문자로 변환합니다. 아시아어 로캘에 적용됩니다. 이 멤버는 Visual Basic 상수 <see langword="vbWide" />에 해당합니다. 변환은 입력 문자가 이미 전자인 경우에도 정규화 형식 C를 사용할 수 있습니다. 예를 들어 문자열 "は゛"(전자임)는 "ば"로 표준화됩니다. 유니코드 정규화 형식을 참조하세요.</summary>
    </member>
  </members>
</doc>