<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary>此類型代表 ASN.1 標記，如 ITU-T Recommendation X.680 中所述。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary>表示布林值的通用類別標記。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary>表示結構化編碼下位元字串值的通用類別標記。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary>表示結構化編碼下八位元字串值的通用類別標記。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary>表示列舉值的通用類別標記。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary>表示 GeneralizedTime 值的通用類別標記。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary>表示整數值的通用類別標記。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary>表示 <see langword="null" /> 值的通用類別標記。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary>表示物件識別碼值的通用類別標記。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary>表示基本編碼下位元字串值的通用類別標記。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary>表示基本編碼下八位元字串值的通用類別標記。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary>表示序列值的通用類別標記 (一律是結構化的編碼)。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary>表示 SetOf 值的通用類別標記 (一律是結構化的編碼)。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary>表示 UtcTime 值的通用類別標記。</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary>為指定標記類別內的指定值建立 <see cref="T:System.Formats.Asn1.Asn1Tag" />。</summary>
      <param name="tagClass">此標記的標記類別。</param>
      <param name="tagValue">此標記的數值。</param>
      <param name="isConstructed">
        <see langword="true" /> 適用於結構化的標記，<see langword="false" /> 適用於基本標記。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tagClass" /> 不是已知的值。
-或- <paramref name="tagValue" /> 為負數。</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary>為來自通用類別的標記建立 <see cref="T:System.Formats.Asn1.Asn1Tag" />。</summary>
      <param name="universalTagNumber">指定此標記語義類型的其中一個列舉值。</param>
      <param name="isConstructed">
        <see langword="true" /> 適用於結構化的標記，<see langword="false" /> 適用於基本標記。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="universalTagNumber" /> 不是已知的值。</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary>產生具有相同 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 和 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 值的標記，但其 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> 為 <see langword="true" />。</summary>
      <returns>標記具有相同的 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 和 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 值，但其 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> 為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary>產生具有相同 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 和 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 值的標記，但其 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> 為 <see langword="false" />。</summary>
      <returns>標記具有相同的 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 和 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 值，但其 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> 為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary>報告此標記的 BER 編碼所需的位元組數目。</summary>
      <returns>此標記的 BER 編碼所需的位元組數目。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary>讀取以 <paramref name="source" /> 開頭的 BER 編碼標記。</summary>
      <param name="source">唯讀位元組序列，其開頭為 BER 編碼的標記。</param>
      <param name="bytesConsumed">當這個方法傳回時，會包含提供給已編碼標記的位元組數目。 這個參數會被視為未初始化。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">提供的資料不會解碼為標記。</exception>
      <returns>解碼的標記。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary>將此標記的 BER 編碼形式寫入 <paramref name="destination" />。</summary>
      <param name="destination">應該在此處開始寫入已編碼標記。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />。</exception>
      <returns>寫入至 <paramref name="destination" /> 的位元組數。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary>測試 <paramref name="other" /> 是否具有與此標記相同的編碼方式。</summary>
      <param name="other">要測試是否相等的標記。</param>
      <returns>如果 <paramref name="other" /> 具有相同的 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />、<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> 值，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary>測試 <paramref name="obj" /> 是否為 <see cref="T:System.Formats.Asn1.Asn1Tag" /> 並具有與這個標記相同的編碼方式。</summary>
      <param name="obj">要測試值是否相等的物件</param>
      <returns>如果 <paramref name="obj" /> 不是 <see cref="T:System.Formats.Asn1.Asn1Tag" />，則為 <see langword="false" />；否則為 <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary>測試 <paramref name="other" /> 是否具有與這個標記相同的 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 和 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 值，而且不會比較 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />。</summary>
      <param name="other">要測試概念是否相等的標記。</param>
      <returns>如果 <paramref name="other" /> 具有與這個標記相同的 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 和<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>測試兩個 <see cref="T:System.Formats.Asn1.Asn1Tag" /> 值是否有相同的 BER 編碼。</summary>
      <param name="left">要比較的第一個值。</param>
      <param name="right">要比較的第二個值。</param>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 有相同的 BER 編碼，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>測試兩個 <see cref="T:System.Formats.Asn1.Asn1Tag" /> 值是否有不同的 BER 編碼。</summary>
      <param name="left">要比較的第一個值。</param>
      <param name="right">要比較的第二個值。</param>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 具有不同的 BER 編碼，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary>提供此標記的適用於偵錯文字表示。</summary>
      <returns>此標記的適用於偵錯文字表示。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary>嘗試讀取以 <paramref name="source" /> 開頭的 BER 編碼標記。</summary>
      <param name="source">唯讀位元組序列，其開頭為 BER 編碼的標記。</param>
      <param name="tag">解碼的標記。</param>
      <param name="bytesConsumed">當這個方法傳回時，會包含提供給已編碼標記的位元組數目，失敗時會傳回 0。 這個參數會被視為未初始化。</param>
      <returns>如果標記已正確解碼，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>嘗試將這個標記的 BER 編碼形式寫入 <paramref name="destination" />。</summary>
      <param name="destination">應該在此處開始寫入已編碼標記。</param>
      <param name="bytesWritten">成功時會從 <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" /> 接收值，0 表示失敗。</param>
      <returns>為 <see langword="false" />，如果 <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />()；否則為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary>指出標記是代表結構化編碼 (<see langword="true" />) 或基本編碼 (<see langword="false" />)。</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary>此標記所屬的標記類別。</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary>此標記的數值。</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary>無法成功將已編碼的 ASN.1 值解碼時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary>使用預設訊息初始化 <see cref="T:System.Formats.Asn1.AsnContentException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化資料，初始化 <see cref="T:System.Formats.Asn1.AsnContentException" /> 類別的新執行個體。</summary>
      <param name="info">存放序列物件資料的物件。</param>
      <param name="context">關於來源或目的端的內容資訊。</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary>使用提供的訊息初始化 <see cref="T:System.Formats.Asn1.AsnContentException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary>使用提供的訊息與造成此例外狀況的例外狀況，來初始化 <see cref="T:System.Formats.Asn1.AsnContentException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
      <param name="inner">做為目前例外狀況發生原因的例外狀況。</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary>提供無狀態方法，用於解碼 BER、CER 或 DER 編碼的 ASN.1 資料。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的位元字串值，同時傳回新陣列中的內容。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="unusedBitCount">成功時，會收到最後一個位元組中被寫入器回報為「未使用」的位元數。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 3)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>陣列，其中包含位元字串值的內容。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的布林值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 1)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>已解碼的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值，做為具有所指定標籤和編碼類型的字元，同時傳回解碼字串。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="encodingType">其中一個列舉值，代表要處理的實值型別。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或通用標籤的 <see langword="null" />，此通用標籤適用於所要求的編碼類型。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。
-或- <paramref name="encodingType" /> 不是已知的字元字串類型。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。
-或- 字串未成功解碼。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 與 <paramref name="encodingType" /> 不相同。</exception>
      <returns>已解碼的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary>使用指定的編碼規則，尋找 <paramref name="source" /> 緩衝區開頭處編碼值的內容範圍。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="contentOffset">當此方法傳回時，相對於 <paramref name="source" /> 開頭的內容承載位移。
這個參數會被視為未初始化。</param>
      <param name="contentLength">當此方法傳回時，內容承載中的位元組數 (可能是 0)。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">
        <paramref name="source" /> 不代表在指定編碼規則下編碼的值。</exception>
      <returns>識別內容的標籤。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的列舉值，同時傳回內容做為緩衝區的配量。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 10)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>包含列舉值位元組的緩衝區配量，其採用帶正負號且位元組由大到小的形式。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的列舉，同時將其轉換為 <paramref name="enumType" /> 所指定的非 [<see cref="T:System.FlagsAttribute" />] 列舉。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="enumType">代表目的地類型的類型物件。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 10)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。
-或- 編碼值太大，無法納入 <paramref name="enumType" /> 值中。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> 不是列舉類型。
-或- <paramref name="enumType" /> 已使用 <see cref="T:System.FlagsAttribute" /> 進行宣告。
-或- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> 為 <see langword="null" />。</exception>
      <returns>轉換成 <paramref name="enumType" /> 的列舉值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的列舉，同時將其轉換為 <typeparamref name="TEnum" /> 所指定的非 [<see cref="T:System.FlagsAttribute" />] 列舉。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 10)。</param>
      <typeparam name="TEnum">目的地列舉類型</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。
-或- 編碼值太大，無法納入 <typeparamref name="TEnum" /> 值中。</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" /> 不是列舉類型。
-或- <typeparamref name="TEnum" /> 已使用 <see cref="T:System.FlagsAttribute" /> 進行宣告。
-或- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>轉換成 <typeparamref name="TEnum" /> 的列舉值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的 GeneralizedTime 值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 24)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>已解碼的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的整數值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>已解碼的數值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的整數值，同時傳回內容做為緩衝區的配量。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>包含整數值位元組的緩衝區配量，其採用帶正負號且位元組由大到小的形式。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的 NamedBitList。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 3)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>來自編碼值的位元。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的 NamedBitList，同時將其轉換為 <paramref name="flagsEnumType" /> 所指定的 [<see cref="T:System.FlagsAttribute" />] 列舉。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="flagsEnumType">代表目的地類型的類型物件。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 3)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。
-或- 編碼值太大，無法納入 <paramref name="flagsEnumType" /> 值中。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" /> 不是列舉類型。
-或- <paramref name="flagsEnumType" /> 不是使用 <see cref="T:System.FlagsAttribute" /> 進行宣告 -或- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" /> 是 <see langword="null" /></exception>
      <returns>轉換成 <paramref name="flagsEnumType" /> 的 NamedBitList 值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的 NamedBitList，同時將其轉換為 <typeparamref name="TFlagsEnum" /> 所指定的 [<see cref="T:System.FlagsAttribute" />] 列舉。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 3)。</param>
      <typeparam name="TFlagsEnum">目的地列舉類型</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。
-或- 編碼值太大，無法納入 <typeparamref name="TFlagsEnum" /> 值中。</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" /> 不是列舉類型。
-或- <typeparamref name="TFlagsEnum" /> 不是使用 <see cref="T:System.FlagsAttribute" /> 進行宣告 -或- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>轉換成 <typeparamref name="TFlagsEnum" /> 的 NamedBitList 值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的 <see langword="null" /> 值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 5)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的物件識別碼值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 6)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>已解碼的物件識別碼 (採用小數點十進位表示法)。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的八位元字串值，同時傳回新陣列中的內容。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 4)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>陣列，其中包含八位元字串值的內容。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的 Sequence 或 Sequence-Of 值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="contentOffset">當此方法傳回時，相對於 <paramref name="source" /> 開頭的內容承載位移。
這個參數會被視為未初始化。</param>
      <param name="contentLength">當此方法傳回時，內容承載中的位元組數 (可能是 0)。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 16)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的 Set-Of 值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="contentOffset">當此方法傳回時，相對於 <paramref name="source" /> 開頭的內容承載位移。
這個參數會被視為未初始化。</param>
      <param name="contentLength">當此方法傳回時，內容承載中的位元組數 (可能是 0)。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="skipSortOrderValidation">
        <see langword="true" /> 表示一律依呈現的順序接受資料，<see langword="false" /> 表示當編碼規則需要進行排序時，驗證資料排序是否正確 (CER 和 DER)。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 17)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的 UtcTime 值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="twoDigitYearMax">要以這個值表示的最大年份。
預設值 2049 表示 X.509 憑證的 1950-2049 範圍。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 24)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。
-或- <paramref name="twoDigitYearMax" /> 不在範圍 [99, 9999] 內。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>已解碼的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>嘗試在指定的編碼規則下將 <paramref name="source" /> 中具有所指定標籤的位元字串複製到 <paramref name="destination" />。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="destination">要在其中寫入的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="unusedBitCount">成功時，會收到最後一個位元組中被寫入器回報為「未使用」的位元數。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="bytesWritten">當此方法傳回時，寫入 <paramref name="destination" /> 的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 3)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。
-或- <paramref name="destination" /> 重疊 <paramref name="source" />。</exception>
      <returns>如果 <paramref name="destination" /> 大到足以接收位元字串的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的字元字串值，同時將解碼的字串複製到提供的目的地緩衝區。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="destination">要在其中寫入的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="encodingType">其中一個列舉值，代表要處理的實值型別。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="charsWritten">當此方法傳回時，寫入 <paramref name="destination" /> 的字元數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或通用標籤的 <see langword="null" />，此通用標籤適用於所要求的編碼類型。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。
-或- <paramref name="encodingType" /> 不是已知的字元字串類型。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。
-或- 字串未成功解碼。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 與 <paramref name="encodingType" /> 不相同。</exception>
      <returns>如果 <paramref name="destination" /> 長到足以接收值，則為 <see langword="true" /> 且會推進讀取器，否則為 <see langword="false" /> 且不會推進讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary>嘗試在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的字元字串值，同時將未處理的位元組複製到提供的目的地緩衝區。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="destination">要在其中寫入的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="bytesWritten">成功時，會收到寫入至 <paramref name="destination" /> 的位元組數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 不是字元字串標籤類型。
-或- <paramref name="destination" /> 重疊 <paramref name="source" />。</exception>
      <returns>如果 <paramref name="destination" /> 大到足以接收未處理字元字串的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>嘗試使用指定的編碼規則，尋找 <paramref name="source" /> 緩衝區開頭處編碼值的內容範圍。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="tag">當此方法傳回時，識別內容的標籤。
這個參數會被視為未初始化。</param>
      <param name="contentOffset">當此方法傳回時，相對於 <paramref name="source" /> 開頭的內容承載位移。
這個參數會被視為未初始化。</param>
      <param name="contentLength">當此方法傳回時，內容承載中的位元組數 (可能是 0)。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <returns>如果 <paramref name="source" /> 表示所指定編碼規則的有效結構編碼，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>嘗試在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的整數值，做為帶正負號的 32 位元值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="value">成功時，會接收轉譯的數值。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果整數表示值介於 <see cref="F:System.Int32.MinValue" /> 與 <see cref="F:System.Int32.MaxValue" /> (含兩者) 之間，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>嘗試在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的整數值，做為帶正負號的 64 位元值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="value">成功時，會接收轉譯的數值。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果整數表示值介於 <see cref="F:System.Int64.MinValue" /> 與 <see cref="F:System.Int64.MaxValue" /> (含兩者) 之間，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>嘗試在指定的編碼規則下，從 <paramref name="source" /> 取得具有所指定標籤的八位元字串值，同時將值複製到提供的目的地緩衝區。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="destination">要在其中寫入的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="bytesWritten">當此方法傳回時，寫入 <paramref name="destination" /> 的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 4)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。
-或- <paramref name="destination" /> 重疊 <paramref name="source" />。</exception>
      <returns>如果 <paramref name="destination" /> 大到足以接收八位元字串的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>如果值包含在單一 (基本) 編碼中，則嘗試在指定的編碼規則下，從 <paramref name="source" /> 取得具有所指定標籤的位元字串值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="unusedBitCount">成功時，會收到最後一個位元組中被寫入器回報為「未使用」的位元數。
這個參數會被視為未初始化。</param>
      <param name="value">成功時，會收到輸入緩衝區的配量，其對應至位元字串的值。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 3)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果位元字串值具有基本編碼，且所有回報為未使用的位元都設定為 0，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary>如果值包含在單一 (基本) 編碼中，則嘗試在指定的編碼規則下，從 <paramref name="source" /> 取得具有所指定標籤的未處理字元字串值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤。</param>
      <param name="value">成功時，會收到輸入緩衝區的配量，其對應至位元字串的值。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 不是字元字串標籤類型。</exception>
      <returns>如果字元字串值具有基本編碼，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>如果值包含在單一 (基本) 編碼中，則嘗試在指定的編碼規則下，從 <paramref name="source" /> 取得具有所指定標籤的八位元字串值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="value">成功時，會收到輸入緩衝區的配量，其對應至八位元字串的值。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 4)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果八位元字串值具有基本編碼，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>嘗試在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的整數值，做為不帶正負號的 32 位元值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="value">成功時，會接收轉譯的數值。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果整數表示值介於 <see cref="F:System.UInt32.MinValue" /> 與 <see cref="F:System.UInt32.MaxValue" /> (含兩者) 之間，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>嘗試在指定的編碼規則下，從 <paramref name="source" /> 讀取具有所指定標籤的整數值，做為不帶正負號的 64 位元值。</summary>
      <param name="source">包含編碼資料的緩衝區。</param>
      <param name="ruleSet">要在解譯資料時使用的編碼條件約束。</param>
      <param name="value">成功時，會接收轉譯的數值。
這個參數會被視為未初始化。</param>
      <param name="bytesConsumed">當此方法傳回時，編碼值的位元組總數。
這個參數會被視為未初始化。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果整數表示值介於 <see cref="F:System.UInt64.MinValue" /> 與 <see cref="F:System.UInt64.MaxValue" /> (含兩者) 之間，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary>
        <see cref="T:System.Formats.Asn1.AsnReader" /> 或 <see cref="T:System.Formats.Asn1.AsnWriter" /> 的編碼規則集。</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary>ITU-T X. 690 基本編碼規則</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary>ITU-T X. 690 標準編碼規則</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary>ITU-T X. 690 辨別編碼規則</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary>適用於 BER、CER 或 DER 編碼 ASN.1 資料的具狀態、順向讀取器。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary>使用指定的規則集透過 <paramref name="data" /> 建構 <see cref="T:System.Formats.Asn1.AsnReader" />。</summary>
      <param name="data">要讀取的資料。</param>
      <param name="ruleSet">讀取器的編碼條件約束。</param>
      <param name="options">讀取器的其他選項。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary>為下一個編碼值取得其內容八位元 (位元組) 的 <see cref="T:System.ReadOnlyMemory`1" /> 檢視，而不需要推進讀取器。</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">讀取器位於目前編碼規則下標籤或長度不正確之處。</exception>
      <returns>下一個編碼值內容八位元的位元組。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary>取得下一個編碼值的 <see cref="T:System.ReadOnlyMemory`1" /> 檢視，而不需要推進讀取器。 針對不限長度的編碼，這包括內容結束標記。</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">讀取器位於目前編碼規則下標籤或長度不正確之處。</exception>
      <returns>下一個編碼值的位元組。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary>讀取下一個資料位置的編碼標籤，而不需要推進讀取器。</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">無法在讀取器的目前位置將標籤解碼。</exception>
      <returns>已解碼的標籤值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的位元字串，同時傳回位元組陣列中的值。</summary>
      <param name="unusedBitCount">成功時，會收到最後一個位元組中被寫入器回報為「未使用」的位元數。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 1)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>新配置、精確大小陣列中的值複本。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的布林值。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 1)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>已解碼的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤和編碼類型的字元字串，同時傳回解碼字串做為字串。</summary>
      <param name="encodingType">其中一個列舉值，代表要處理的實值型別。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或通用標籤的 <see langword="null" />，此通用標籤適用於所要求的編碼類型。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> 不是已知的字元字串類型。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。
-或- 字串未成功解碼。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 與 <paramref name="encodingType" /> 不相同。</exception>
      <returns>已解碼的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary>取得下一個編碼值的 <see cref="T:System.ReadOnlyMemory`1" /> 檢視，並推進讀取器通過該檢視。 針對不限長度的編碼，這包括內容結束標記。</summary>
      <returns>下一個編碼值的 <see cref="T:System.ReadOnlyMemory`1" /> 檢視。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的列舉，同時透過原始資料傳回內容做為 <see cref="T:System.ReadOnlyMemory`1" />。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 10)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>列舉值的位元組，採用帶正負號且位元組由大到小的形式。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的列舉，同時將其轉換為 <paramref name="enumType" /> 所指定的非 [<see cref="T:System.FlagsAttribute" />] 列舉。</summary>
      <param name="enumType">代表目的地類型的類型物件。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 10)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。
-或- 編碼值太大，無法納入 <paramref name="enumType" /> 值中。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> 不是列舉類型。
-或- <paramref name="enumType" /> 已使用 <see cref="T:System.FlagsAttribute" /> 進行宣告。
-或- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> 為 <see langword="null" />。</exception>
      <returns>轉換成 <paramref name="enumType" /> 的列舉值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的列舉，同時將其轉換為 <typeparamref name="TEnum" /> 所指定的非 [<see cref="T:System.FlagsAttribute" />] 列舉。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 10)。</param>
      <typeparam name="TEnum">目的地列舉類型</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。
-或- 編碼值太大，無法納入 <typeparamref name="TEnum" /> 值中。</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" /> 不是列舉類型。
-或- <typeparamref name="TEnum" /> 已使用 <see cref="T:System.FlagsAttribute" /> 進行宣告。
-或- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>轉換成 <typeparamref name="TEnum" /> 的列舉值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的 GeneralizedTime。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 24)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>已解碼的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的整數。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>已解碼的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的整數，同時透過原始資料傳回內容做為 <see cref="T:System.ReadOnlyMemory`1" />。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>整數值的位元組，採用帶正負號且位元組由大到小的形式。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的 NamedBitList。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>來自編碼值的位元。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的 NamedBitList，同時將其轉換為 <paramref name="flagsEnumType" /> 所指定的 [<see cref="T:System.FlagsAttribute" />] 列舉。</summary>
      <param name="flagsEnumType">代表目的地類型的類型物件。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。
-或- 編碼值太大，無法納入 <paramref name="flagsEnumType" /> 值中。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" /> 不是列舉類型。
-或- <paramref name="flagsEnumType" /> 不是使用 <see cref="T:System.FlagsAttribute" /> 進行宣告 -或- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" /> 是 <see langword="null" /></exception>
      <returns>轉換成 <paramref name="flagsEnumType" /> 的 NamedBitList 值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的 NamedBitList，同時將其轉換為 <typeparamref name="TFlagsEnum" /> 所指定的 [<see cref="T:System.FlagsAttribute" />] 列舉。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤。</param>
      <typeparam name="TFlagsEnum">目的地列舉類型</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。
-或- 編碼值太大，無法納入 <typeparamref name="TFlagsEnum" /> 值中。</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" /> 不是列舉類型。
-或- <typeparamref name="TFlagsEnum" /> 不是使用 <see cref="T:System.FlagsAttribute" /> 進行宣告 -或- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>轉換成 <typeparamref name="TFlagsEnum" /> 的 NamedBitList 值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的 NULL。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 5)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的物件識別碼，同時傳回小數點十進位格式字串中的值。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 6)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>以小數點十進位格式字串表示的物件識別碼值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有標籤 UNIVERSAL 4 的八位元字串，同時傳回位元組陣列中的值。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 4)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>新配置、精確大小陣列中的值複本。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的 SEQUENCE 或 SEQUENCE-OF，並傳回結果做為位於序列中第一個值 (或具有 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />) 的新讀取器。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 16)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>位於序列中第一個值 (或具有 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />) 的新讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的 SET-OF，並傳回結果做為位於 set-of 中第一個值 (或具有 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />) 的新讀取器。</summary>
      <param name="skipSortOrderValidation">
        <see langword="true" /> 表示一律依呈現的順序接受資料，<see langword="false" /> 表示當編碼規則需要進行排序時，驗證資料排序是否正確 (CER 和 DER)。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 17)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>位於 set-of 中第一個值 (或具有 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />) 的新讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的 SET-OF，並傳回結果做為位於 set-of 中第一個值 (或具有 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />) 的新讀取器，同時使用來自建構函式的 <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> 值 (預設 <see langword="false" />)。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 17)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>位於 set-of 中第一個值 (或具有 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />) 的新讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的 UTCTime。</summary>
      <param name="twoDigitYearMax">要以這個值表示的最大年份。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 23)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>已解碼的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>使用選項 (傳遞至建構函式) 中的 <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> 值，讀取下一個值做為具有所指定標籤的 UTCTime (預設值為 2049)。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 23)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>已解碼的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary>如果讀取器有剩餘的資料，則會擲回標準化的 <see cref="T:System.Formats.Asn1.AsnContentException" />，如果 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> 傳回 <see langword="false" />，則不會執行任何函數。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的位元字串，同時將值複製到提供的目的地緩衝區。</summary>
      <param name="destination">要在其中寫入的緩衝區。</param>
      <param name="unusedBitCount">成功時，會收到最後一個位元組中被寫入器回報為「未使用」的位元數。</param>
      <param name="bytesWritten">成功時，會收到寫入至 <paramref name="destination" /> 的位元組數。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 1)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果 <paramref name="destination" /> 長到足以接收值，則為 <see langword="true" /> 且會推進讀取器，否則為 <see langword="false" /> 且不會推進讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤和編碼類型的字元字串，同時將解碼字串複製到提供的目的地緩衝區。</summary>
      <param name="destination">要在其中寫入的緩衝區。</param>
      <param name="encodingType">其中一個列舉值，代表要處理的實值型別。</param>
      <param name="charsWritten">成功時，會收到寫入至 <paramref name="destination" /> 的字元數。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或通用標籤的 <see langword="null" />，此通用標籤適用於所要求的編碼類型。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> 不是已知的字元字串類型。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。
-或- 字串未成功解碼。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 與 <paramref name="encodingType" /> 不相同。</exception>
      <returns>如果 <paramref name="destination" /> 長到足以接收值，則為 <see langword="true" /> 且會推進讀取器，否則為 <see langword="false" /> 且不會推進讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary>以指定的標記將下一個值當做字元字串讀取，並將未處理的位元組複製到提供的目的緩衝區。</summary>
      <param name="destination">要在其中寫入的緩衝區。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤。</param>
      <param name="bytesWritten">成功時，會收到寫入至 <paramref name="destination" /> 的位元組數。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 不是字元字串標籤類型。</exception>
      <returns>如果 <paramref name="destination" /> 長到足以接收值，則為 <see langword="true" /> 且會推進讀取器，否則為 <see langword="false" /> 且不會推進讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>嘗試讀取下一個值做為具有所指定標籤的整數，即帶正負號的 32 位元值。</summary>
      <param name="value">成功時，會收到解碼值。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果值不介於 <see cref="F:System.Int32.MinValue" /> 與 <see cref="F:System.Int32.MaxValue" /> 之間 (含兩者)，則為 <see langword="false" /> 且不會推進讀取器；否則會傳回 <see langword="true" />，且推進讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>嘗試讀取下一個值做為具有所指定標籤的整數，即帶正負號的 64 位元值。</summary>
      <param name="value">成功時，會收到解碼值。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果值不介於 <see cref="F:System.Int64.MinValue" /> 與 <see cref="F:System.Int64.MaxValue" /> 之間 (含兩者)，則為 <see langword="false" /> 且不會推進讀取器；否則會傳回 <see langword="true" />，且推進讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的八位元字串，同時將值複製到提供的目的地緩衝區。</summary>
      <param name="destination">要在其中寫入的緩衝區。</param>
      <param name="bytesWritten">成功時，會收到寫入至 <paramref name="destination" /> 的位元組數。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 4)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果 <paramref name="destination" /> 長到足以接收值，則為 <see langword="true" /> 且會推進讀取器，否則為 <see langword="false" /> 且不會推進讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>讀取下一個值做為具有所指定標籤的位元字串，同時透過原始資料傳回內容做為 <see cref="T:System.ReadOnlyMemory`1" />。</summary>
      <param name="unusedBitCount">成功時，會收到最後一個位元組中被寫入器回報為「未使用」的位元數。</param>
      <param name="value">成功時，會透過原始資料收到對應於位元字串值的 <see cref="T:System.ReadOnlyMemory`1" />。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 1)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果位元字串值具有基本編碼，則為 <see langword="true" /> 並推進讀取器；如果具有結構化編碼，則為 <see langword="false" /> 且不會推進讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary>讀取下一個值做為具有所指定標籤的字元，同時透過原始資料傳回內容做為未處理的 <see cref="T:System.ReadOnlyMemory`1" />。</summary>
      <param name="expectedTag">要在讀取之前檢查的標籤。</param>
      <param name="contents">成功時，會透過原始資料收到對應於字元字串值的 <see cref="T:System.ReadOnlyMemory`1" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 不是字元字串標籤類型。</exception>
      <returns>如果字元字串值具有基本編碼，則為 <see langword="true" /> 並推進讀取器；如果具有結構化編碼，則為 <see langword="false" /> 且不會推進讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>嘗試讀取下一個值做為具有所指定標籤的八位元字串，同時透過原始資料傳回內容做為 <see cref="T:System.ReadOnlyMemory`1" />。</summary>
      <param name="contents">成功時，會透過原始資料收到對應於八位元字串值的 <see cref="T:System.ReadOnlyMemory`1" />。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果八位元字串值具有基本編碼，則為 <see langword="true" /> 並推進讀取器；如果具有結構化編碼，則為 <see langword="false" /> 且不會推進讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>嘗試讀取下一個值做為具有所指定標籤的整數，即不帶正負號的 32 位元值。</summary>
      <param name="value">成功時，會收到解碼值。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果值不介於 <see cref="F:System.UInt32.MinValue" /> 與 <see cref="F:System.UInt32.MaxValue" /> 之間 (含兩者)，則為 <see langword="false" /> 且不會推進讀取器；否則會傳回 <see langword="true" />，且推進讀取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>嘗試讀取下一個值做為具有所指定標籤的整數，即不帶正負號的 64 位元值。</summary>
      <param name="value">成功時，會收到解碼值。</param>
      <param name="expectedTag">要在讀取之前檢查的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">下一個值沒有正確的標籤。
-或- 長度編碼在目前的編碼規則下無效。
-或- 內容在目前的編碼規則下無效。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>如果值不介於 <see cref="F:System.UInt64.MinValue" /> 與 <see cref="F:System.UInt64.MaxValue" /> 之間 (含兩者)，則為 <see langword="false" /> 且不會推進讀取器；否則會傳回 <see langword="true" />，且推進讀取器。</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary>取得讀取器是否有剩餘資料可供處理的指示。</summary>
      <returns>
        <see langword="true" /> 如果有更多資料可供讀取器處理;否則為 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary>取得此讀取器使用中的編碼規則。</summary>
      <returns>此讀取器使用的編碼規則。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary>指定可修改 <see cref="T:System.Formats.Asn1.AsnReader" /> 行為的選項。</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary>取得或設定值，此值指出讀取器是否應該略過 Set 或 Set-Of 的排序次序。</summary>
      <returns>
        <see langword="true" /> 如果讀取器不應該驗證是否已正確排序目前編碼規則的集合或集合值;否則為 <see langword="false" /> 。
預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary>取得或設定要以 UtcTime 值表示的最大年份。</summary>
      <returns>要以 UtcTime 值表示的最大年份。 預設值為2049。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary>適用於 BER、CER 和 DER 編碼 ASN.1 資料的寫入器。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary>使用一組指定的編碼規則來建立新的 <see cref="T:System.Formats.Asn1.AsnWriter" />。</summary>
      <param name="ruleSet">寫入器的編碼條件約束。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">未定義 <paramref name="ruleSet" />。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary>將此寫入器的值複製到另一個寫入器。</summary>
      <param name="destination">要接收值的寫入器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">未透過 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 關閉 <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />。
-或- 此寫入器是空的。
-或- 此寫入器代表多個最上層值。
-或- 此寫入器的值是以與目的地寫入器規則集不相容的方式進行編碼。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary>傳回新陣列，其中包含已編碼的值。</summary>
      <exception cref="T:System.InvalidOperationException">未透過 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 關閉 <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />。</exception>
      <returns>精確大小的陣列，其中包含已編碼的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary>將資料的編碼表示法寫入至 <paramref name="destination" />。</summary>
      <param name="destination">要在其中寫入的緩衝區。</param>
      <exception cref="T:System.InvalidOperationException">未透過 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 關閉 <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />。</exception>
      <returns>寫入至 <paramref name="destination" /> 的位元組數。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary>判斷 <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> 是否會產生與 <paramref name="other" /> 相同的輸出。</summary>
      <param name="other">要比較編碼值的執行個體。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">未透過 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 關閉 <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />。</exception>
      <returns>如果擱置的編碼資料與 <paramref name="other" /> 相同，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary>判斷 <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> 是否會產生與 <paramref name="other" /> 相同的輸出。</summary>
      <param name="other">要比較的編碼值。</param>
      <exception cref="T:System.InvalidOperationException">未透過 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 關閉 <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />。</exception>
      <returns>如果擱置的編碼資料與 <paramref name="other" /> 相同，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary>取得將由 <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> 寫入的位元組數。</summary>
      <exception cref="T:System.InvalidOperationException">在沒有對應 Pop 方法的情況下，呼叫了 <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />、<see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />。</exception>
      <returns>將由 <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> 寫入的位元組數。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指出具有標籤 UNIVERSAL 4 的開啟八位元字串已關閉，同時將寫入器傳回至父內容。</summary>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 4)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <exception cref="T:System.InvalidOperationException">寫入器目前不在具有所指定標籤的八位元字串內。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指出具有所指定標籤的開啟序列已關閉，同時將寫入器傳回至父內容。</summary>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 16)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <exception cref="T:System.InvalidOperationException">寫入器目前不在具有所指定標籤的序列內。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指出具有所指定標籤的開啟 Set-Of 已關閉，同時將寫入器傳回至父內容。</summary>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 17)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <exception cref="T:System.InvalidOperationException">寫入器目前不在具有所指定標籤的 Set-Of 內。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>開始寫入具有所指定標籤的八位元字串值。</summary>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 4)。</param>
      <returns>將自動呼叫 <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 的可處置值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>開始寫入具有所指定標籤的序列。</summary>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 16)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>將自動呼叫 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 的可處置值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>開始寫入具有所指定標籤的 Set-Of。</summary>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 17)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <returns>將自動呼叫 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 的可處置值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary>將寫入器重設為沒有任何資料，而不釋放資源。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>嘗試將資料的編碼表示法寫入至 <paramref name="destination" />。</summary>
      <param name="destination">要在其中寫入的緩衝區。</param>
      <param name="bytesWritten">成功時，會收到寫入至 <paramref name="destination" /> 的位元組數。</param>
      <exception cref="T:System.InvalidOperationException">未透過 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 關閉 <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />。</exception>
      <returns>如果編碼成功，則為 <see langword="true" />，如果 <paramref name="destination" /> 太小，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入具有所指定標籤的位元字串值。</summary>
      <param name="value">要寫入的值。</param>
      <param name="unusedBitCount">不是語意的尾端位元數。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 3)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。
-或- <paramref name="value" /> 具有長度 0，且 <paramref name="unusedBitCount" /> 不是 0 -或- <paramref name="value" /> 不是空的，且已設定 <paramref name="unusedBitCount" /> 所識別的任何位元。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="unusedBitCount" /> 不在範圍 [0,7] 內。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入具有所指定標籤的布林值。</summary>
      <param name="value">要寫入的值。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 1)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>使用指定的編碼類型，搭配對應於編碼類型的指定標籤，來寫入提供的字串。</summary>
      <param name="encodingType">其中一個列舉值，代表要使用的編碼。</param>
      <param name="str">要寫入的字串。</param>
      <param name="tag">要寫入的標籤，或通用標籤的 <see langword="null" />，此通用標籤適用於所要求的編碼類型。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> 不是受限制的字元字串編碼類型。
-或- <paramref name="encodingType" /> 是這個方法目前不支援的受限制字元字串編碼類型。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>使用指定的編碼類型，搭配對應於編碼類型的指定標籤，來寫入提供的字串。</summary>
      <param name="encodingType">其中一個列舉值，代表要使用的編碼。</param>
      <param name="value">要寫入的字串。</param>
      <param name="tag">要寫入的標籤，或通用標籤的 <see langword="null" />，此通用標籤適用於所要求的編碼類型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 是 <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> 不是受限制的字元字串編碼類型。
-或- <paramref name="encodingType" /> 是這個方法目前不支援的受限制字元字串編碼類型。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary>寫入已編碼的單一值。</summary>
      <param name="value">要寫入的值。</param>
      <exception cref="T:System.ArgumentException">無法在目前的編碼規則下讀取 <paramref name="value" />。
-或- <paramref name="value" /> 具有超出第一個值結尾的資料。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入非 [<see cref="T:System.FlagsAttribute" />] 列舉值，做為具有標籤 UNIVERSAL 10 的列舉值。</summary>
      <param name="value">要寫入的 Boxed 列舉值。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 10)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。
-或- <paramref name="value" /> 不是 Boxed 列舉值。
-或- <paramref name="value" /> 的 Unboxed 類型宣告為 [<see cref="T:System.FlagsAttribute" />]。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入非 [<see cref="T:System.FlagsAttribute" />] 列舉值，做為具有標籤 UNIVERSAL 10 的列舉值。</summary>
      <param name="value">要寫入的 Boxed 列舉值。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 10)。</param>
      <typeparam name="TEnum">要寫入的非 [ <see cref="T:System.FlagsAttribute" /> ] 列舉型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。
-或- <typeparamref name="TEnum" /> 不是列舉。
-或- <typeparamref name="TEnum" /> 宣告為 [<see cref="T:System.FlagsAttribute" />]。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入提供的 <see cref="T:System.DateTimeOffset" />，做為具有所指定 UNIVERSAL 24 的 GeneralizedTime，選擇性地排除小數秒。</summary>
      <param name="value">要寫入的值。</param>
      <param name="omitFractionalSeconds">
        <see langword="true" />，將 <paramref name="value" /> 中的小數秒視為 0，即使有非零值也一樣。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 24)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入具有所指定標籤的整數值。</summary>
      <param name="value">要寫入的值。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入具有所指定標籤的整數值。</summary>
      <param name="value">要寫入的值。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入具有所指定標籤的整數值。</summary>
      <param name="value">要寫入的整數值，帶正負號且由大到小的位元組順序。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <exception cref="T:System.ArgumentException">9 個最重要的位元已全都完成設定。
-或- 9 個最重要的位元全都未設定。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入具有所指定標籤的整數值。</summary>
      <param name="value">要寫入的值。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入具有所指定標籤的整數值。</summary>
      <param name="value">要寫入的整數值，不帶正負號且由大到小的位元組順序。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 2)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <exception cref="T:System.ArgumentException">9 個最重要的位元全都未設定。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入位元陣列值，做為具有所指定標籤的 NamedBitList。</summary>
      <param name="value">要寫入的位元</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 3)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入 [<see cref="T:System.FlagsAttribute" />] 列舉值，做為具有所指定標籤的 NamedBitList。</summary>
      <param name="value">要寫入的 Boxed 列舉值</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 3)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。
-或- <paramref name="value" /> 不是 Boxed 列舉值。
-或- <paramref name="value" /> 的 Unboxed 類型未宣告為 [<see cref="T:System.FlagsAttribute" />]。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入 [<see cref="T:System.FlagsAttribute" />] 列舉值，做為具有所指定標籤的 NamedBitList。</summary>
      <param name="value">要寫入的列舉值</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 3)。</param>
      <typeparam name="TEnum">
        <see cref="T:System.FlagsAttribute" />要寫入的 [] 列舉型別。</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。
-或- <typeparamref name="TEnum" /> 不是列舉值。
-或- <typeparamref name="TEnum" /> 未宣告為 [<see cref="T:System.FlagsAttribute" />]。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入具有所指定標籤的 NULL。</summary>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 5)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入具有所指定標籤的物件識別碼。</summary>
      <param name="oidValue">要寫入的物件識別碼。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 6)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。
-或- <paramref name="oidValue" /> 不是有效的小數點十進位物件識別碼。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入具有所指定標籤的物件識別碼。</summary>
      <param name="oidValue">要寫入的物件識別碼。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 6)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。
-或- <paramref name="oidValue" /> 不是有效的小數點十進位物件識別碼。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oidValue" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入具有所指定標籤的八位元字串值。</summary>
      <param name="value">要寫入的值。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 4)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入提供的值，做為具有所指定標籤的 UTCTime，前提是年份在允許的範圍內。</summary>
      <param name="value">要寫入的值。</param>
      <param name="twoDigitYearMax">在轉換成 UTC 之後，<paramref name="value" /> 的最大有效年份。
對於 1950-2049 的 X.509 Time.utcTime 範圍，傳遞 <c>2049</c>.</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 23)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (在轉換成 UTC 之後) 不在範圍 (<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />] 內。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>寫入提供的值，做為具有所指定標籤的 UTCTime，同時內容中接受兩位數年份為有效年份。</summary>
      <param name="value">要寫入的值。</param>
      <param name="tag">要寫入的標籤，或預設標籤的 <see langword="null" /> (Universal 23)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 是 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 對方法而言不正確。</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary>取得此寫入器使用中的編碼規則。</summary>
      <returns>此寫入器使用的編碼規則。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary>提供 <see cref="T:System.IDisposable" /> 目標，以使用語彙範圍作為邏輯範圍，安全地關閉已開啟的標籤。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary>執行與釋放 (Free)、釋放 (Release) 或重設 Unmanaged 資源相關聯之應用程式定義的工作。</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary>特定 ASN.1 標籤的標籤類別。</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary>應用程式標籤類別</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary>內容特定標籤類別</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary>私人標籤類別</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary>通用標籤類別</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary>ITU-T X 680 中 UNIVERSAL 類別的標籤指派。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary>位元字串的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary>BMPString 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary>布林值的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary>日期的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary>日期時間的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary>持續時間的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary>內嵌 PDV 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary>不限長度編碼中內容結束標記的保留識別碼。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary>列舉的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary>外部的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary>GeneralizedTime 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary>GeneralString 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary>GraphicString 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary>IA5String 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary>Instance-Of 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary>整數的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary>ISO646String (VisibleString) 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary>Null 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary>NumericString 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary>物件描述項的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary>物件識別碼的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary>物件識別碼國際化資源識別碼 (IRI) 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary>八位元字串的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary>PrintableString 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary>Real 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary>相對物件識別碼的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary>相對物件識別碼國際化資源識別碼 (IRI) 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary>序列的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary>Sequence-Of 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary>集合的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary>Set-Of 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary>T61String (TeletexString) 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary>TeletexString (T61String) 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary>時間的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary>當日時間的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary>UniversalString 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary>不受限字元字串的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary>UTCTime 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary>UTF8String 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary>VideotexString 的通用類別標籤值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary>VisibleString (ISO646String) 的通用類別標籤值。</summary>
    </member>
  </members>
</doc>