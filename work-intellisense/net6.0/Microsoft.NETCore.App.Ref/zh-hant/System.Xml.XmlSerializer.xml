<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary vsli:raw="Specifies various options to use when generating .NET types for use with an XML Web Service.">指定在產生 .NET 類型以便搭配 XML Web Service 使用時要使用的各種選項。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary vsli:raw="Enables data binding.">啟用資料繫結。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary vsli:raw="Creates events for the asynchronous invocation of Web methods.">為 Web 方法的非同步引動過程建立事件。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary vsli:raw="Creates Begin and End methods for the asynchronous invocation of Web methods.">為 Web 方法的非同步引動過程建立 Begin 和 End 方法。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary vsli:raw="Generates explicitly ordered serialization code as specified through the &lt;see langword=&quot;Order&quot; /&gt; property of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; attributes.">產生明確排序的序列化程式碼，如同透過 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />、<see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 和 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 屬性 (Attribute) 的 <see langword="Order" /> 屬性 (Property) 所指定。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary vsli:raw="Represents primitive types by properties.">按照屬性表示基本類型。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary vsli:raw="Represents primitive types by fields and primitive types by &lt;see cref=&quot;N:System&quot; /&gt; namespace types.">以欄位和 <see cref="N:System" /> 命名空間類型來表示基本類型。</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary vsli:raw="Provides static methods to convert input text into names for code entities.">提供可將輸入文字轉換成程式碼實體 (Entity) 之名稱的靜態方法。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifier&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.CodeIdentifier" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary vsli:raw="Produces a camel-case string from an input string.">從輸入字串產生 Camel 命名法之大小寫慣例的字串。</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">程式碼實體 (例如方法參數) 的名稱，通常是從 XML 項目或屬性名稱取得。</param>
      <returns vsli:raw="A camel-case version of the parameter string.">Camel 命名法之大小寫慣例版本的參數字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary vsli:raw="Produces a Pascal-case string from an input string.">從輸入字串產生 Pascal 命名法之大小寫慣例的字串。</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">程式碼實體 (例如方法參數) 的名稱，通常是從 XML 項目或屬性名稱取得。</param>
      <returns vsli:raw="A Pascal-case version of the parameter string.">Pascal 命名法之大小寫慣例版本的參數字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary vsli:raw="Produces a valid code entity name from an input string.">從輸入字串產生有效的程式碼實體名稱。</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">程式碼實體 (例如方法參數) 的名稱，通常是從 XML 項目或屬性名稱取得。</param>
      <returns vsli:raw="A string that can be used as a code identifier, such as the name of a method parameter.">可當做程式碼識別項使用的字串，例如方法參數的名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary vsli:raw="Maintains a group of names for related code entities or type mappings that are generated by .NET's XML serialization infrastructure.">針對由 .NET Framework 之 XML 序列化 (Serialization) 基礎結構所產生的相關程式碼實體 (Entity) 或型別對應，維護名稱群組。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class and determines whether code identifiers are case sensitive.">初始化 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 類別的新執行個體，並判斷程式碼識別項是否要區分大小寫。</summary>
      <param name="caseSensitive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if identifiers are case sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果識別項要區分大小寫，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">將具名的程式碼實體或型別對應加入至 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍中。</summary>
      <param name="identifier" vsli:raw="A name that is used to index the code entity.">用於索引程式碼實體的名稱。</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">程式碼實體或型別對應資訊。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary vsli:raw="Prevents a specified name from being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">防止在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍內使用指定的名稱。</summary>
      <param name="identifier" vsli:raw="A name that will not be available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">無法用於 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內的名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope, ensuring that the name is unique within the scope.">將具名的程式碼實體或型別對應加入至 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍內，並確保該名稱在範圍內是唯一的。</summary>
      <param name="identifier" vsli:raw="A candidate name that is used to index the code entity.">用於索引程式碼實體的候選名稱。</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">程式碼實體或型別對應資訊。</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">識別項參數值，但如果發生名稱衝突，則為修改的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary vsli:raw="Removes all code entities or type mappings, including their names, from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">從 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍中移除所有程式碼實體或型別對應，包括其名稱。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary vsli:raw="Determines whether a specified name is already being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">判斷指定的名稱是否已經在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍內使用。</summary>
      <param name="identifier" vsli:raw="The name to check for use within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">要檢查是否在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內使用的名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is already in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果名稱已經在使用中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary vsli:raw="Ensures that the input is of the correct case by modifying the name according to the value of the &lt;see cref=&quot;P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing&quot; /&gt; property.">根據 <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" /> 屬性的值來修改名稱，藉以確保輸入的大小寫是正確的。</summary>
      <param name="identifier" vsli:raw="The name to possibly modify.">可能要修改的名稱。</param>
      <returns vsli:raw="A string that is the same as the input identifier or has the first letter's case modified.">與輸入識別項相同的字串，或已修改第一個字母大小寫的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary vsli:raw="Determines whether the input name conflicts with another name within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope and, if it does, generates a modified string.">判斷輸入名稱是否與 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內的其他名稱發生衝突，如果有的話，則產生修改的字串。</summary>
      <param name="identifier" vsli:raw="The name to modify if it is not already unique.">要修改的名稱 (如果原本不是唯一的話)。</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">識別項參數值，但如果發生名稱衝突，則為修改的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary vsli:raw="Removes from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope the code entity or type mapping identified by the input name.">從 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍中移除由輸入名稱所識別的程式碼實體或型別對應。</summary>
      <param name="identifier" vsli:raw="The name of the code entity or type mapping information to remove.">要移除之程式碼實體或型別對應資訊的名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary vsli:raw="Removes the input name from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's reserved names.">從 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的保留名稱中移除輸入名稱。</summary>
      <param name="identifier" vsli:raw="A name that will be made available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">將在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內成為可用的名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary vsli:raw="Returns an array of the code entities or type mappings within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">傳回 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內的程式碼實體或型別對應陣列。</summary>
      <param name="type" vsli:raw="The type of all the code entities or type mappings for the instance.">執行個體之所有程式碼實體或型別對應的型別。</param>
      <returns vsli:raw="An array of the code entities or type mappings that is stored by the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object.">由 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 物件所儲存之程式碼實體或型別對應的陣列。</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary vsli:raw="Gets or sets a value that indicates whether the instance uses camel case.">取得或設定值，指出執行個體是否會使用 Camel 命名法的大小寫慣例。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the instance uses camel case; &lt;see langword=&quot;false&quot; /&gt; to indicate that the instance uses Pascal case.">
        <see langword="true" /> 表示執行個體會使用 Camel 命名法的大小寫慣例，而 <see langword="false" /> 則表示執行個體會使用 Pascal 命名法的大小寫慣例。</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary vsli:raw="Describes the context in which a set of schema is bound to .NET code entities.">描述結構描述集合要繫結至 .NET Framework 程式碼實體 (Entity) 的內容。</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.ImportContext&quot; /&gt; class for the given code identifiers, with the given type-sharing option.">使用指定的型別共用選項，針對指定的程式碼識別項初始化 <see cref="T:System.Xml.Serialization.ImportContext" /> 類別的新執行個體。</summary>
      <param name="identifiers" vsli:raw="The code entities to which the context applies.">要套用內容的程式碼實體。</param>
      <param name="shareTypes" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that determines whether custom types are shared among schema.">
        <see cref="T:System.Boolean" /> 值，可判斷是否會在結構描述之間共用自訂型別。</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary vsli:raw="Gets a value that determines whether custom types are shared.">取得值，可判斷是否會共用自訂型別。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if custom types are shared among schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果會在結構描述之間共用自訂型別，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary vsli:raw="Gets a set of code entities to which the context applies.">取得套用內容之程式碼實體的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; that specifies the code entities to which the context applies.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" />，指定要套用內容的程式碼實體。</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary vsli:raw="Gets a collection of warnings that are generated when importing the code entity descriptions.">取得匯入程式碼實體描述時產生之警告的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringCollection&quot; /&gt; that contains warnings that were generated when importing the code entity descriptions.">
        <see cref="T:System.Collections.Specialized.StringCollection" />，其中含有匯入程式碼實體描述時產生的警告。</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary vsli:raw="Establishes a &lt;see cref=&quot;P:System.Xml.Serialization.IXmlTextParser.Normalized&quot; /&gt; property for use by the .NET infrastructure.">建立要讓 .NET Framework 基礎結構使用的 <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> 屬性。</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary vsli:raw="Gets or sets whether white space and attribute values are normalized.">取得或設定泛空白字元 (White Space) 和屬性 (Attribute) 值是否會正規化。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if white space attributes values are normalized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果泛空白字元屬性值會正規化，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary vsli:raw="Gets or sets how white space is handled when parsing XML.">取得或設定剖析 XML 時要如何處理泛空白字元。</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; enumeration that describes how whites pace is handled when parsing XML.">
        <see cref="T:System.Xml.WhitespaceHandling" /> 列舉型別的成員，其中描述剖析 XML 時要如何處理泛空白字元。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary vsli:raw="Describes a schema importer.">描述結構描述匯入工具。</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an encoded SOAP attribute.">指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必須將類別成員序列化為編碼的 SOAP 屬性。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class using the specified value as the name of the XML attribute.">使用指定的值做為 XML 屬性的名稱，初始化 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 類別的新執行個體。</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute.">XML 屬性的名稱。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">取得或設定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生之 XML 屬性的名稱。</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member identifier.">XML 屬性的名稱。 預設值為成員識別項。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">取得或設定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 所產生之 SOAP 屬性的 XML 結構描述定義語言 (XSD) 資料型別。</summary>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">您指定的 XML 結構描述資料型別無法對應至 .NET 資料型別。</exception>
      <returns vsli:raw="An XML Schema data type.">XML 架構資料類型。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">取得或設定 XML 屬性的 XML 命名空間。</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">XML 屬性的 XML 命名空間。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary vsli:raw="Allows you to override attributes applied to properties, fields, and classes when you use an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object as encoded SOAP.">使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 將物件序列化或還原序列化為編碼的 SOAP 時，可讓您覆寫套用至屬性 (Property)、欄位和類別的屬性 (Attribute)。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects contained by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt;. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies the object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">將 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 加入 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 包含的 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 物件之集合。 <paramref name="type" /> 參數會指定要由 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 覆寫的物件。 <paramref name="member" /> 參數指定覆寫的成員名稱。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">要覆寫之物件的 <see cref="T:System.Type" />。</param>
      <param name="member" vsli:raw="The name of the member to override.">要覆寫的成員名稱。</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" />，表示覆寫屬性。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to a collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;.">將 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 加入 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 物件的集合。 <paramref name="type" /> 參數會指定要由 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 覆寫的物件。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">覆寫之物件的 <see cref="T:System.Type" />。</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" />，表示覆寫屬性。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type.">取得與指定的 (基底類別) 型別相關的物件。</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">基底類別 <see cref="T:System.Type" />，與要擷取的屬性集合相關聯。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">表示覆寫屬性集合的 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the base class member that is overridden.">取得與指定的 (基底類別) 型別相關的物件。 <paramref name="member" /> 參數指定所覆寫的基底類別成員。</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to override.">基底類別 <see cref="T:System.Type" />，與要覆寫的屬性集合相關聯。</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to return.">指定傳回 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 的覆寫成員名稱。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">表示覆寫屬性集合的 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes SOAP methods.">表示用來控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化與還原序列化 SOAP 方法的屬性 (Attribute) 物件集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class using the specified custom type.">使用指定的自訂型別，初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 類別的新執行個體。</summary>
      <param name="provider" vsli:raw="Any object that implements the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; interface, such as the &lt;see cref=&quot;T:System.Type&quot; /&gt; class.">實作 <see cref="T:System.Reflection.ICustomAttributeProvider" /> 介面的物件，例如 <see cref="T:System.Type" /> 類別。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; to override.">取得或設定要覆寫的 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; that overrides the behavior of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when the member is serialized.">
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />，會在成員序列化時覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的行為。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">取得或設定 XML 項目或屬性的預設值。</summary>
      <returns vsli:raw="An object that represents the default value of an XML element or attribute.">表示 XML 項目或屬性之預設值的物件。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">取得或設定要覆寫的 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">要覆寫的 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a SOAP enumeration.">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化 SOAP 列舉型別的方式。</summary>
      <returns vsli:raw="An object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">物件，這個物件會指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化列舉成員。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or property as encoded SOAP XML.">取得或設定數值，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否會將公用欄位或屬性序列化為編碼 SOAP XML。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必須不序列化欄位或屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; how to serialize an object type into encoded SOAP XML.">取得或設定物件，表示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將物件型別序列化為 SOAP XML。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; that either overrides a &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; applied to a class declaration, or is applied to a class declaration.">
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />，覆寫套用至類別宣告的 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />，或者套用至類別宣告。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary vsli:raw="Specifies that the public member value be serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; as an encoded SOAP XML element.">指定公用成員值由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化為編碼 SOAP XML 項目。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class and specifies the name of the XML element.">初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 類別的新執行個體，並且指定 XML 項目的名稱。</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">序列成員的 XML 項目名稱。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the generated XML element.">取得或設定產生之 XML 項目的 XML 結構描述定義語言 (XSD) 資料型別。</summary>
      <returns vsli:raw="One of the XML Schema data types.">其中一個 XML 結構描述資料型別。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">取得或設定產生的 XML 項目的名稱。</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">產生的 XML 項目的名稱。 預設值為成員識別項。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that has the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute set to &quot;1&quot;.">取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必須要序列化 <see langword="xsi:null" /> 屬性設為 "1" 的成員。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生 <see langword="true" /> 屬性，則為 <see langword="xsi:null" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化列舉型別 (Enumeration) 成員的方式。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class using the specified element name.">使用指定的項目名稱，初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生的 XML 項目名稱。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">取得或設定當 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化列舉型別時，在 XML 文件中所產生的值，或是當它還原序列化列舉型別成員時所識別的值。</summary>
      <returns vsli:raw="The value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it deserializes the enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化列舉型別時，在 XML 文件中產生的值，或是它還原序列化列舉型別成員時識別的值。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">表示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 不要將公用欄位或公用讀取/寫入屬性值序列化。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIgnoreAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object as encoded SOAP XML.">允許 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在將物件序列化或還原序列化為編碼 SOAP XML 時，辨認型別。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; class using the specified type.">使用指定的型別，初始化 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 類別的新執行個體。</summary>
      <param name="type" vsli:raw="The type of the object to include.">要包含的物件之型別。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to use when serializing or deserializing an object.">取得或設定物件的型別，用於序列化或還原序列化物件時。</summary>
      <returns vsli:raw="The type of the object to include.">要包含的物件之型別。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary vsli:raw="Generates mappings to SOAP-encoded messages from .NET types or Web service method information.">從 .NET Framework 型別或 Web 服務方法資訊產生 SOAP 編碼訊息的對應。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying a default XML namespace for imported type mappings.">初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 類別的新執行個體，並為匯入的型別對應指定預設 XML 命名空間。</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">預設 XML 命名空間，用來對應匯入的類型。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying overrides for XML serialization.">初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 類別的新執行個體，並指定 XML 序列化的覆寫。</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 物件，此物件會覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別使用 SOAP 編碼序列化對應之型別的方式。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying XML serialization overrides and a default XML namespace.">初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 類別的新執行個體，並指定 XML 序列化覆寫和預設的 XML 命名空間。</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 物件，此物件會覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別使用 SOAP 編碼序列化對應之型別的方式。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">預設 XML 命名空間，用來對應匯入的類型。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">針對從 Web 服務方法所收集的資訊，產生內部型別對應。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">屬於 Web 服務方法之 .NET Framework 程式碼實體 (Entity) 的陣列。</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">WSDL 訊息定義之項目部分的內部 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">針對從 Web 服務方法所收集的資訊，產生內部型別對應。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">屬於 Web 服務方法之 .NET Framework 程式碼實體 (Entity) 的陣列。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示對應於 WSDL 訊息部分的項目應該封入 SOAP 訊息的額外包裝函式項目中，否則為 <see langword="false" />。</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> 表示 RPC 樣式的 Web 服務繫結，而 <see langword="false" /> 則表示文件樣式的 Web 服務繫結或 SOAP 標頭。</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">WSDL 訊息定義之項目部分的內部 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">針對從 Web 服務方法所收集的資訊，產生內部型別對應。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">屬於 Web 服務方法之 .NET Framework 程式碼實體 (Entity) 的陣列。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示對應於 WSDL 訊息部分的項目應該封入 SOAP 訊息的額外包裝函式項目中，否則為 <see langword="false" />。</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> 表示 RPC 樣式的 Web 服務繫結，而 <see langword="false" /> 則表示文件樣式的 Web 服務繫結或 SOAP 標頭。</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 表示產生的還原序列化程式應該檢查包裝函式項目的預期限定名稱 (Qualified Name)，否則為 <see langword="false" />。 只有當 <paramref name="hasWrapperElement" /> 參數的值為 <see langword="true" /> 時，這項參數的值才相關。</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">WSDL 訊息定義之項目部分的內部 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">針對從 Web 服務方法所收集的資訊，產生內部型別對應。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">屬於 Web 服務方法之 .NET Framework 程式碼實體 (Entity) 的陣列。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示對應於 WSDL 訊息部分的項目應該封入 SOAP 訊息的額外包裝函式項目中，否則為 <see langword="false" />。</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> 表示 RPC 樣式的 Web 服務繫結，而 <see langword="false" /> 則表示文件樣式的 Web 服務繫結或 SOAP 標頭。</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 表示產生的還原序列化程式應該檢查包裝函式項目的預期限定名稱 (Qualified Name)，否則為 <see langword="false" />。 只有當 <paramref name="hasWrapperElement" /> 參數的值為 <see langword="true" /> 時，這項參數的值才相關。</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values.">其中一個 <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 值。</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">WSDL 訊息定義之項目部分的內部 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">產生 .NET Framework 型別之 XML 結構描述項目的對應。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">要為其產生類型對應的 .NET Framework 類型。</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">產生 .NET Framework 型別之 XML 結構描述項目的對應。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">要為其產生類型對應的 .NET Framework 類型。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">要使用的預設 XML 命名空間。</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Places mappings for a type in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">將型別的對應置於 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 執行個體的內容，以便稍後叫用匯入方法時使用。</summary>
      <param name="type" vsli:raw="The .NET type for which to save type mapping information.">要為其儲存類型對應資訊的 .NET Framework 類型。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Places mappings for derived types in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">將衍生型別 (Derived Type) 的對應置於 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 執行個體的內容，以便稍後叫用匯入方法時使用。</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; reflection object that contains custom attributes that are derived from the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; attribute.">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 反映 (Reflection) 物件，其中含有衍生自 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 屬性 (Attribute) 的自訂屬性。</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary vsli:raw="Represents certain attributes of a XSD &amp;lt;&lt;see langword=&quot;part&quot; /&gt;&amp;gt; element in a WSDL document for generating classes from the document.">在 WSDL 文件中代表 XSD &lt;<see langword="part" />&gt; 項目的特定屬性，可從文件產生類別。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary vsli:raw="Gets or sets a value that corresponds to the name attribute of the WSDL part element.">取得或設定對應至 WSDL 部分項目之名稱屬性的值。</summary>
      <returns vsli:raw="The element name.">項目名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary vsli:raw="Gets or sets a value that corresponds to the type attribute of the WSDL part element.">取得或設定對應至 WSDL 部分項目之型別屬性的值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that corresponds to the XML type.">對應至 XML 型別的 <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary vsli:raw="Controls the schema generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when a class instance is serialized as SOAP encoded XML.">控制類別執行個體被序列化為 SOAP 編碼 XML 時，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 所產生的結構描述。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 類別的新執行個體，並指定 XML 型別的名稱。</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">XML 型別的名稱，是 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化類別執行個體時所產生的 (並且對類別執行個體進行還原序列化時所辨識的)。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name and XML namespace of the type.">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 類別的新執行個體，並指定該型別的名稱和 XML 命名空間。</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">XML 型別的名稱，是 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化類別執行個體時所產生的 (並且對類別執行個體進行還原序列化時所辨識的)。</param>
      <param name="ns" vsli:raw="The XML namespace of the type.">型別的 XML 命名空間。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.">取得或設定值，指出是否將型別包含在 SOAP 編碼的 XML 結構描述文件中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in SOAP-encoded XML Schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">若要在 SOAP 編碼 XML 結構描述文件中包含型別，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">取得或設定 XML 型別的命名空間。</summary>
      <returns vsli:raw="The namespace of the XML type. The default is an empty string (&quot;&quot;).">XML 型別的命名空間。 預設為空字串 ("")。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">取得或設定 XML 型別的名稱。</summary>
      <returns vsli:raw="The name of the XML type. The default is the class name.">XML 型別的名稱。 預設為類別名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary vsli:raw="Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.">提供在還原序列化 (Deserialization) 時，於編碼 SOAP XML 資料流中發現之已知，但是未被參考到的物件。</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> 類別的新執行個體。</summary>
      <param name="o" vsli:raw="The unreferenced object.">未參考的物件。</param>
      <param name="id" vsli:raw="A unique string used to identify the unreferenced object.">唯一的字串，用來識別未參考的物件。</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary vsli:raw="Gets the ID of the object.">取得物件的 ID。</summary>
      <returns vsli:raw="The ID of the object.">物件的 ID。</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary vsli:raw="Gets the deserialized, but unreferenced, object.">取得已還原序列化，但是未參考的物件。</summary>
      <returns vsli:raw="The deserialized, but unreferenced, object.">已還原序列化，但是未參考的物件。</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">表示處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to the collection.">將 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 加入至集合。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to add.">要加入的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns vsli:raw="The index of the newly added &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">新加入之 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection.">取得值，指出指定 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 是否存在於集合中。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; you are interested in.">您所要的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合中有 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to a compatible one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects, starting at the specified index of the target array.">從目標陣列的指定索引開始，複製整個集合至 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 物件的相容一維陣列。</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects that is the destination of the elements copied from the collection. The array must have zero-based indexing.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 物件的一維陣列，從集合複製之項目的目的地。 陣列必須有以零為起始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">取得指定 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; whose index you want.">您想要其索引的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">指定之 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; into the collection at the specified index.">將 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 插入集合中指定的索引處。</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; is inserted.">插入 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to insert.">要插入的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; from the collection.">從集合移除指定的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to remove.">要移除的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">取得或設定在指定索引處的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 的索引。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">位於指定索引處的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a particular class member as an array of XML elements.">指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必須將特定類別成員序列化為 XML 項目的陣列。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document instance.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 類別的新執行個體，指定 XML 文件執行個體中產生的 XML 項目名稱。</summary>
      <param name="elementName" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生的 XML 項目名稱。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary vsli:raw="Gets or sets the XML element name given to the serialized array.">取得或設定指定給序列化陣列的 XML 項目名稱。</summary>
      <returns vsli:raw="The XML element name of the serialized array. The default is the name of the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; is assigned.">序列化陣列的 XML 項目名稱。 預設值為被指派了 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 的成員名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified or unqualified.">取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生的 XML 項目名稱是限定的還是非限定的。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">其中一個 <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值。 預設為 <see langword="XmlSchemaForm.None" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必須將成員序列化為 <see langword="xsi:nil" /> 屬性設為 <see langword="true" /> 的空 XML 標記。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生 <see langword="true" /> 屬性，則為 <see langword="xsi:nil" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML element.">取得或設定 XML 項目的命名空間。</summary>
      <returns vsli:raw="The namespace of the XML element.">XML 項目的命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">取得或設定項目序列化或還原序列化的明確順序。</summary>
      <returns vsli:raw="The order of the code generation.">程式碼產生的順序。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary vsli:raw="Represents an attribute that specifies the derived types that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can place in a serialized array.">表示屬性，這個屬性會指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可置於序列化陣列中的衍生型別。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體，指定 XML 文件中產生的 XML 項目名稱。</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">XML 項目的名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document and the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the generated XML document.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體，指定 XML 文件中產生的 XML 項目名稱，以及可插入所產生之 XML 文件的 <see cref="T:System.Type" />。</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">XML 項目的名稱。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">要序列化的物件的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the serialized array.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體，指定可插入序列化陣列的 <see cref="T:System.Type" />。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">要序列化的物件的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML data type of the generated XML element.">取得或設定產生的 XML 項目的 XML 資料型別。</summary>
      <returns vsli:raw="An XML schema definition (XSD) data type.">XML 架構定義 (XSD) 資料類型。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">取得或設定產生的 XML 項目的名稱。</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">產生的 XML 項目的名稱。 預設值為成員識別項。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the name of the generated XML element is qualified.">取得或設定值，指出產生的 XML 項目名稱是否為限定的。</summary>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Form&quot; /&gt; property is set to &lt;see langword=&quot;XmlSchemaForm.Unqualified&quot; /&gt; and a &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace&quot; /&gt; value is specified.">
        <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> 屬性設定為 <see langword="XmlSchemaForm.Unqualified" />，並且指定 <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> 值。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">其中一個 <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值。 預設為 <see langword="XmlSchemaForm.None" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必須將成員序列化為 <see langword="xsi:nil" /> 屬性設為 <see langword="true" /> 的空 XML 標記。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;, and no instance is generated. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生 <see langword="true" /> 屬性，則為 <see langword="xsi:nil" />，否則為 <see langword="false" />，而且不會產生執行個體。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the generated XML element.">取得或設定產生的 XML 項目之的命名空間。</summary>
      <returns vsli:raw="The namespace of the generated XML element.">產生的 XML 項目的命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary vsli:raw="Gets or sets the level in a hierarchy of XML elements that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; affects.">取得或設定 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 影響的 XML 項目的階層架構中的層級。</summary>
      <returns vsli:raw="The zero-based index of a set of indexes in an array of arrays.">在陣列組成之陣列的一組索引中，以零起始的索引。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary vsli:raw="Gets or sets the type allowed in an array.">取得或設定陣列中允許的型別。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that is allowed in the array.">陣列中所允許的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">表示 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to the collection.">將 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 加入至集合。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to add to the collection.">要加入至集合的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns vsli:raw="The index of the added item.">加入項目的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;.">判斷集合是否包含指定的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to check for.">要檢查的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含指定的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary vsli:raw="Copies an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; array to the collection, starting at a specified target index.">從指定的目標索引，複製 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 陣列至集合。</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects to copy to the collection.">要複製至集合的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 物件陣列。</param>
      <param name="index" vsli:raw="The index at which the copied attributes begin.">複製屬性開始處的索引。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">傳回集合中找到的第一個指定 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 之以零起始的索引，如果在集合中找不到屬性，則為 -1。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to locate in the collection.">要在集合中尋找的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns vsli:raw="The first index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">集合中 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 的第一個索引，如果在集合中找不到屬性，則為 -1。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; into the collection at the specified index.">將 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 插入集合中指定的索引處。</summary>
      <param name="index" vsli:raw="The index at which the attribute is inserted.">插入屬性的索引。</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to insert.">要插入的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; from the collection, if it is present.">如果存在 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />，則從集合移除它。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to remove.">要移除的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the item at the specified index.">取得或設定指定之索引處的項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the collection member to get or set.">要取得或設定以零起始的集合成員索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; at the specified index.">指定之索引處的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event.">提供 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 事件的資料。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary vsli:raw="Gets an object that represents the unknown XML attribute.">取得表示未知 XML 屬性的物件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the unknown XML attribute.">表示未知 XML 屬性的 <see cref="T:System.Xml.XmlAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary vsli:raw="Gets a comma-delimited list of XML attribute names expected to be in an XML document instance.">取得應該在 XML 文件執行個體中之 XML 屬性名稱的逗號分隔清單。</summary>
      <returns vsli:raw="A comma-delimited list of XML attribute names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">XML 屬性名稱的逗號分隔清單。 每個名稱都使用下列格式：<paramref name="namespace" />:<paramref name="name" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML attribute.">取得未知 XML 屬性的行號。</summary>
      <returns vsli:raw="The line number of the unknown XML attribute.">未知 XML 屬性的行號。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML attribute.">取得未知 XML 屬性的行中的位置。</summary>
      <returns vsli:raw="The position number of the unknown XML attribute.">未知 XML 屬性的位置編號。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">取得要還原序列化的物件。</summary>
      <returns vsli:raw="The object being deserialized.">正在還原序列化的物件。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt;.">表示處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeEventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary vsli:raw="Allows you to override property, field, and class attributes when you use the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object.">當使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 來序列化或還原序列化物件時，允許您覆寫屬性 (Property)、欄位和類別屬性 (Attribute)。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">將 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件加入 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件的集合。 <paramref name="type" /> 參數會指定要被覆寫的物件。 <paramref name="member" /> 參數指定覆寫的成員名稱。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">要覆寫之物件的 <see cref="T:System.Type" />。</param>
      <param name="member" vsli:raw="The name of the member to override.">要覆寫的成員名稱。</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">表示覆寫屬性的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object.">將 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件加入 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件的集合。 <paramref name="type" /> 參數會指定要由 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件覆寫的物件。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">覆寫之物件的 <see cref="T:System.Type" />。</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">表示覆寫屬性的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 物件。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified, base-class, type.">取得與指定的、基底類別、型別相關的物件</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">基底類別 <see cref="T:System.Type" />，與要擷取的屬性集合相關聯。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">表示覆寫屬性集合的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base-class) type. The member parameter specifies the base-class member that is overridden.">取得與指定的 (基底類別) 型別相關的物件。 成員參數會指定已覆寫的基底類別成員。</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want.">基底類別 <see cref="T:System.Type" />，與您想要的屬性集合相關聯。</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; to return.">指定傳回 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 的覆寫成員名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">表示覆寫屬性集合的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">表示用來控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化與還原序列化物件方式的屬性 (Attribute) 物件集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class and customizes how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 類別的新執行個體，並自訂 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化和還原序列化物件。</summary>
      <param name="provider" vsli:raw="A class that can provide alternative implementations of attributes that control XML serialization.">類別，可為控制 XML 序列化的屬性提供替代實作。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">取得或設定要覆寫的 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">要覆寫的 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects to override.">取得要覆寫的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; object that represents the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 物件，表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件的集合。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化公用欄位或會傳回陣列的讀取/寫入屬性。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化公用欄位或會傳回陣列的讀取/寫入屬性。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary vsli:raw="Gets or sets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes items inserted into an array returned by a public field or read/write property.">取得或設定物件集合，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化項目 (用來插入至公用欄位或讀取/寫入屬性所傳回的陣列)。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; object that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">包含 <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 物件集合的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 物件。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property as an XML attribute.">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將公用欄位或公用讀取/寫入屬性序列化為 XML 屬性。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; that controls the serialization of a public field or read/write property as an XML attribute.">
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />，控制將公用欄位或讀取/寫入屬性 (Property) 序列化為 XML 屬性 (Attribute)。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary vsli:raw="Gets or sets an object that allows you to distinguish between a set of choices.">取得或設定物件，讓您在一組選項間進行區別。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; that can be applied to a class member that is serialized as an &lt;see langword=&quot;xsi:choice&quot; /&gt; element.">
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />，可以套用至序列化為 <see langword="xsi:choice" /> 項目的類別成員。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">取得或設定 XML 項目或屬性的預設值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the default value of an XML element or attribute.">
        <see cref="T:System.Object" />，表示 XML 項目或屬性的預設值。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary vsli:raw="Gets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property as an XML element.">取得物件的集合，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將公用欄位或讀取/寫入屬性序列化為 XML 項目。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects.">包含 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 物件集合的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化列舉型別 (Enumeration) 成員。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化列舉型別成員。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether or not the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property.">取得或設定數值，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否要序列化公用欄位或公用讀取/寫入屬性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必須不序列化欄位或屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary vsli:raw="Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object is overridden.">取得或設定數值，指定當物件包含傳回已覆寫 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 物件的成員時，是否要保留所有的命名空間宣告。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the namespace declarations should be kept; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果應該保留命名空間宣告，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class as an XML root element.">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將類別序列化為 XML (Root Element)。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that overrides a class attributed as an XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />，覆寫類別屬性為 XML 根項目。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize a public field or public read/write property as XML text.">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 將公用欄位或公用讀取/寫入屬性序列化為 XML 文字。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; that overrides the default serialization of a public property or field.">
        <see cref="T:System.Xml.Serialization.XmlTextAttribute" />，覆寫公用屬性或欄位的預設序列化。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; has been applied.">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化套用 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 的類別。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; that overrides an &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; applied to a class declaration.">
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />，會覆寫套用 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 至類別宣告 (Class Declaration)。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary vsli:raw="Specifies that the member can be further detected by using an enumeration.">指定可以使用列舉進一步偵測成員。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The member name that returns the enumeration used to detect a choice.">成員名稱，傳回用於偵測選擇的列舉型別。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary vsli:raw="Gets or sets the name of the field that returns the enumeration to use when detecting types.">取得或設定欄位的名稱，該欄位傳回偵測型別時使用的列舉型別。</summary>
      <returns vsli:raw="The name of a field that returns an enumeration.">傳回列舉型別之欄位的名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary vsli:raw="Contains fields that can be used to pass event delegates to a thread-safe &lt;see cref=&quot;Overload:System.Xml.Serialization.XmlSerializer.Deserialize&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">此類別所含欄位可將事件委派傳遞給 <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> 的安全執行緒 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 方法。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>取得或設定物件，代表處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 事件的方法。</summary>
      <returns>指向該事件處理常式的 <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>取得或設定物件，代表處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件的方法。</summary>
      <returns>指向該事件處理常式的 <see cref="T:System.Xml.Serialization.XmlElementEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>取得或設定物件，代表處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件的方法。</summary>
      <returns>指向該事件處理常式的 <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>取得或設定物件，代表處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 事件的方法。</summary>
      <returns>指向該事件處理常式的 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to override the default way it serializes a class.">代表 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 物件的集合，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 使用這些物件來覆寫其序列化類別的預設方式。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to the collection.">將 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 加入至集合。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to add.">要加入的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns vsli:raw="The zero-based index of the newly added item.">新加入項目之以零起始的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified object.">判斷集合是否包含指定的物件。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to look for.">要尋找的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合中有該物件則為<see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;, or a portion of it to a one-dimensional array.">複製 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 或其中一部分至一維陣列。</summary>
      <param name="array" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; array to hold the copied elements.">要儲存所複製項目的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 陣列。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">取得指定 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 的索引。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; whose index is being retrieved.">正在擷取其索引的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 的以零起始的索引。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; into the collection.">將 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 插入集合中。</summary>
      <param name="index" vsli:raw="The zero-based index where the member is inserted.">插入成員所在位置之以零起始的索引。</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to insert.">要插入的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Removes the specified object from the collection.">從集合移除指定的物件。</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to remove from the collection.">要從集合中移除的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">在指定的索引位置上取得或設定項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">要取得或設定的以零為起始元素索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;.">
        <paramref name="index" /> 不是 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 中的有效索引。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; is read-only.">屬性已設定，而且 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 是唯讀的。</exception>
      <returns vsli:raw="The element at the specified index.">在指定索引上的項目。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event.">提供 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件的資料。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary vsli:raw="Gets the object that represents the unknown XML element.">取得表示未知 XML 項目的物件。</summary>
      <returns vsli:raw="The object that represents the unknown XML element.">表示未知 XML 項目的物件。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary vsli:raw="Gets a comma-delimited list of XML element names expected to be in an XML document instance.">取得應該在 XML 文件執行個體中之 XML 項目名稱的逗號分隔清單。</summary>
      <returns vsli:raw="A comma-delimited list of XML element names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">XML 項目名稱的逗號分隔清單。 每個名稱都使用下列格式：<paramref name="namespace" />:<paramref name="name" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">如果 XML 讀取器 (Reader) 是 <see cref="T:System.Xml.XmlTextReader" />，取得遇到未知項目的行號。</summary>
      <returns vsli:raw="The line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">如果 XML 讀取器是 <see cref="T:System.Xml.XmlTextReader" />，則為遇到未知項目的行號，否則為 -1。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary vsli:raw="Gets the place in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">如果 XML 讀取器是 <see cref="T:System.Xml.XmlTextReader" />，取得未知項目在行中發生的位置。</summary>
      <returns vsli:raw="The number in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">如果 XML 讀取器是 <see cref="T:System.Xml.XmlTextReader" />，則為未知項目在行中發生的數目，否則為 -1。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is deserializing.">取得 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 所還原序列化的物件。</summary>
      <returns vsli:raw="The object that is being deserialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 還原序列化的物件。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">表示處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Xml.Serialization.XmlElementEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object.">讓 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在對物件進行序列化或還原序列化時，能夠辨識型別。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 類別的新執行個體。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">要包含的物件的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to include.">取得或設定要包含的物件的型別。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">要包含的物件的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary vsli:raw="Supports mappings between .NET types and XML Schema data types.">支援 .NET Framework 型別與 XML 結構描述資料型別之間的對應。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary vsli:raw="Sets the key used to look up the mapping.">設定用來查閱對應的索引鍵。</summary>
      <param name="key" vsli:raw="The lookup key.">查閱機碼。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary vsli:raw="Gets the name of the mapped element.">取得對應之元素的名稱。</summary>
      <returns vsli:raw="The name of the mapped element.">對應之項目的名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary vsli:raw="Gets the namespace of the mapped element.">取得對應之項目的命名空間。</summary>
      <returns vsli:raw="The namespace of the mapped element.">對應之項目的命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary vsli:raw="Gets the name of the XSD element of the mapping.">取得對應之 XSD 項目的名稱。</summary>
      <returns vsli:raw="The XSD element name.">XSD 項目名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary vsli:raw="Specifies whether a mapping is read, write, or both.">指定某個對應為讀取、寫入或兩者皆有。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary vsli:raw="Both read and write methods are generated.">同時產生讀取和寫入方法。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary vsli:raw="Read methods are generated.">產生讀取方法。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary vsli:raw="Write methods are generated.">產生寫入方法。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary vsli:raw="Maps a code entity in a .NET Web service method to an element in a Web Services Description Language (WSDL) message.">將 .NET Framework Web 服務方法中的程式碼實體 (Entity) 對應至 Web 服務描述語言 (WSDL) 訊息中的項目。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary vsli:raw="Gets or sets a value that indicates whether the .NET type maps to an XML element or attribute of any type.">取得或設定值，指出 .NET Framework 型別是否會對應至任何型別的 XML 項目或屬性 (Attribute)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the type maps to an XML any element or attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此型別會對應至任何 XML 項目或屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary vsli:raw="Gets a value that indicates whether the accompanying field in the .NET type has a value specified.">取得值，指出 .NET Framework 型別中的隨附欄位是否含有指定的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the accompanying field has a value specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果隨附欄位含有指定的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary vsli:raw="Gets the unqualified name of the XML element declaration that applies to this mapping.">取得套用至此對應之 XML 項目宣告的非限定名稱。</summary>
      <returns vsli:raw="The unqualified name of the XML element declaration that applies to this mapping.">套用至此對應之 XML 項目宣告的非限定名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary vsli:raw="Gets the name of the Web service method member that is represented by this mapping.">取得由此對應所表示之 Web 服務方法成員的名稱。</summary>
      <returns vsli:raw="The name of the Web service method member represented by this mapping.">由此對應所表示之 Web 服務方法成員的名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary vsli:raw="Gets the XML namespace that applies to this mapping.">取得套用至此對應的 XML 命名空間。</summary>
      <returns vsli:raw="The XML namespace that applies to this mapping.">套用至此對應的 XML 命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary vsli:raw="Gets the fully qualified type name of the .NET type for this mapping.">取得此對應之 .NET Framework 型別的完整型別名稱。</summary>
      <returns vsli:raw="The fully qualified type name of the .NET type for this mapping.">此對應之 .NET Framework 型別的完整型別名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary vsli:raw="Gets the type name of the .NET type for this mapping.">取得此對應之 .NET Framework 型別的型別名稱。</summary>
      <returns vsli:raw="The type name of the .NET type for this mapping.">此對應之 .NET Framework 型別的型別名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type for this mapping.">取得此對應之 .NET Framework 型別的命名空間。</summary>
      <returns vsli:raw="The namespace of the .NET type for this mapping.">此對應之 .NET Framework 型別的命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary vsli:raw="Gets the XML element name as it appears in the service description document.">取得顯示於服務描述文件中的 XML 項目名稱。</summary>
      <returns vsli:raw="The XML element name.">XML 項目名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary vsli:raw="Provides mappings between .NET Web service methods and Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">提供 .NET Framework Web 服務方法與針對 SOAP Web 服務所定義之 Web 服務描述語言 (WSDL) 訊息之間的對應。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary vsli:raw="Gets the number of .NET code entities that belong to a Web service method to which a SOAP message is being mapped.">取得屬於 SOAP 訊息所對應之 Web 服務方法的 .NET Framework 程式碼實體數目。</summary>
      <returns vsli:raw="The number of mappings in the collection.">集合中的對應數目。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary vsli:raw="Gets an item that contains internal type mapping information for a .NET code entity that belongs to a Web service method being mapped to a SOAP message.">取得項目，其中含有屬於對應至 SOAP 訊息之 Web 服務方法的 .NET Framework 程式碼實體的內部型別對應資訊。</summary>
      <param name="index" vsli:raw="The index of the mapping to return.">要傳回之對應的索引。</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Xml.Serialization.XmlMemberMapping&quot; /&gt;.">所要求的 <see cref="T:System.Xml.Serialization.XmlMemberMapping" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary vsli:raw="Gets the name of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">取得 .NET Framework 型別的名稱，此型別會對應至表示 SOAP 訊息之 XML 結構描述項目的資料型別。</summary>
      <returns vsli:raw="The name of the .NET type.">.NET Framework 型別的名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">取得 .NET Framework 型別的命名空間，此型別會對應至表示 SOAP 訊息之 XML 結構描述項目的資料型別。</summary>
      <returns vsli:raw="The .NET namespace of the mapping.">對應的 .NET Framework 命名空間。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event.">提供 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件的資料。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML node.">取得未知 XML 節點的行號。</summary>
      <returns vsli:raw="The line number of the unknown XML node.">未知 XML 節點的行號。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML node.">取得未知 XML 節點在行中的位置。</summary>
      <returns vsli:raw="The position number of the unknown XML node.">未知 XML 節點的位置編號。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary vsli:raw="Gets the XML local name of the XML node being deserialized.">取得要還原序列化的 XML 節點的 XML 區域名稱。</summary>
      <returns vsli:raw="The XML local name of the node being deserialized.">要進行還原序列化的節點的 XML 本機名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary vsli:raw="Gets the name of the XML node being deserialized.">取得要還原序列化的 XML 節點名稱。</summary>
      <returns vsli:raw="The name of the node being deserialized.">要進行還原序列化的節點名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI that is associated with the XML node being deserialized.">取得已與要還原序列化之 XML 節點建立關聯的命名空間 URI。</summary>
      <returns vsli:raw="The namespace URI that is associated with the XML node being deserialized.">與要進行還原序列化的 XML 節點相關的命名空間 URI。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary vsli:raw="Gets the type of the XML node being deserialized.">取得要還原序列化的 XML 節點類型。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; that represents the XML node being deserialized.">
        <see cref="T:System.Xml.XmlNodeType" />，表示要進行還原序列化的 XML 節點。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">取得要還原序列化的物件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">要進行還原序列化的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary vsli:raw="Gets the text of the XML node being deserialized.">取得要還原序列化的 XML 節點文字。</summary>
      <returns vsli:raw="The text of the XML node being deserialized.">要進行還原序列化的 XML 節點的文字。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">表示處理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlNodeEventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary vsli:raw="Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET types or Web service method information.">針對 .NET Framework 類型或 Web 服務方法資訊產生 XML 結構描述項目宣告的對應，包括 Web 服務描述語言 (WSDL) 文件中的常值 XML 結構描述定義 (XSD) 訊息部分。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified default XML namespace.">使用指定的預設 XML 命名空間，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">預設 XML 命名空間，用來對應匯入的類型。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides.">使用指定的 XML 序列化覆寫，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">物件，其會覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別序列化對應類型的方式。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides and default XML namespace.">使用指定的 XML 序列化覆寫和預設 XML 命名空間，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">物件，其會覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別序列化對應類型的方式。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">預設 XML 命名空間，用來對應匯入的類型。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">針對來自 Web 服務方法的資訊，產生內部類型對應。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 物件的陣列，其中包含屬於 Web 服務方法的 .NET Framework 程式碼實體。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 Web 服務描述語言 (WSDL) 訊息部分的對應項目應該封入 SOAP 訊息的額外包裝函式項目中，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; with mappings to the element parts of a WSDL message definition.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />，其中含有 WSDL 訊息定義之項目部分的對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">使用來自 Web 服務方法的資訊，傳回內部類型對應，並讓您指定 XML 項目名稱、XML 命名空間及其他選項。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 物件的陣列，其中包含屬於 Web 服務方法的 .NET Framework 程式碼實體。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 Web 服務描述語言 (WSDL) 訊息部分的對應項目應該封入 SOAP 訊息的額外包裝函式項目中，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果方法為遠端程序呼叫，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">包含對應的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">使用來自 Web 服務方法的資訊，傳回內部類型對應，並讓您指定 XML 項目名稱、XML 命名空間及其他選項。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 物件的陣列，其中包含屬於 Web 服務方法的 .NET Framework 程式碼實體。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 Web 服務描述語言 (WSDL) 訊息部分的對應項目應該封入 SOAP 訊息的額外包裝函式項目中，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果方法為遠端程序呼叫，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定要將產生的結構描述類型以 <see langword="&lt;xs:anyAttribute&gt;" /> 項目標記，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">包含對應的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">針對來自 Web 服務方法的資訊，產生內部類型對應。</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">從 Web 服務方法產生的 XML 項目名稱。</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">從 Web 服務方法產生的 XML 項目命名空間。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 物件的陣列，其中包含屬於 Web 服務方法的 .NET Framework 程式碼實體。</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 Web 服務描述語言 (WSDL) 訊息部分的對應項目應該封入 SOAP 訊息的額外包裝函式項目中，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果方法為遠端程序呼叫，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定要將產生的結構描述類型以 <see langword="&lt;xs:anyAttribute&gt;" /> 項目標記，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values. The default is &lt;see langword=&quot;None&quot; /&gt;.">其中一個 <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 值。 預設為 <see langword="None" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">包含對應的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a specified .NET type.">針對指定的 .NET Framework 類型，產生 XML 結構描述項目的對應。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">要為其產生類型對應的 .NET Framework 類型。</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and namespace.">使用指定的類型和命名空間，針對 .NET Framework 類型產生 XML 結構描述項目的對應。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">要為其產生類型對應的 .NET Framework 類型。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">要使用的預設 XML 命名空間。</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and attribute.">使用指定的類型和屬性，針對 .NET Framework 類型產生 XML 結構描述項目的對應。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">要為其產生類型對應的 .NET Framework 類型。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">套用至此類型的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 屬性。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that represents a mapping of a .NET type to an XML Schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />，代表 .NET Framework 類型與 XML 結構描述項目的對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type, attribute, and namespace.">使用指定的類型、屬性和命名空間，針對 .NET Framework 類型產生 XML 結構描述項目的對應。</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">要為其產生類型對應的 .NET Framework 類型。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">套用至此類型的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 屬性。</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">要使用的預設 XML 命名空間。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that contains the internal .NET mapping of a type to an XML Schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />，其中含有某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Includes mappings for a type for later use when import methods are invoked.">納入類型的對應，以便稍後叫用匯入方法時使用。</summary>
      <param name="type" vsli:raw="The .NET Framework type for which to save type mapping information.">要為其儲存類型對應資訊的 .NET Framework 類型。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Includes mappings for derived types for later use when import methods are invoked.">納入衍生類型的對應，以便稍後叫用匯入方法時使用。</summary>
      <param name="provider" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; class that contains custom attributes derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; attribute.">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 類別的執行個體，其中包含衍生自 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 屬性的自訂屬性。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary vsli:raw="Provides mappings between code entities in .NET Web service methods and the content of Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">提供 .NET Framework Web 服務方法中的程式碼實體 (Entity) 與針對 SOAP Web 服務所定義之 Web 服務描述語言 (WSDL) 訊息內容之間的對應。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; represents a Web service method return value, as opposed to an output parameter.">取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 是否表示 Web 服務方法傳回值，相對於輸出參數。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member represents a Web service return value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此成員是表示 Web 服務傳回值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary vsli:raw="Gets or sets the name of the Web service method member for this mapping.">取得或設定這項對應之 Web 服務方法成員的名稱。</summary>
      <returns vsli:raw="The name of the Web service method.">Web 服務方法的名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary vsli:raw="Gets or sets the type of the Web service method member code entity that is represented by this mapping.">取得或設定由此對應所表示之 Web 服務方法成員程式碼實體的型別。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the Web service method member code entity that is represented by this mapping.">由此對應所表示之 Web 服務方法成員程式碼實體的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary vsli:raw="Gets or sets a value that indicates that the value of the corresponding XML element definition's &lt;c&gt;isNullable&lt;/c&gt; attribute is &lt;see langword=&quot;false&quot; /&gt;.">取得或設定值，表示對應之 XML 項目定義的 <c>isNullable</c> 屬性值為 <see langword="false" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to override the &lt;see cref=&quot;P:System.Xml.Serialization.XmlElementAttribute.IsNullable&quot; /&gt; property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示覆寫 <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> 屬性，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; with the collection of SOAP-related attributes that have been applied to the member code entity.">取得或設定 <see cref="T:System.Xml.Serialization.SoapAttributes" />，其中含有已套用至成員程式碼實體之 SOAP 相關屬性的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that contains the objects that represent SOAP attributes applied to the member.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" />，其中含有表示套用至成員之 SOAP 屬性的物件。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; with the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;-related attributes that have been applied to the member code entity.">取得或設定 <see cref="T:System.Xml.Serialization.XmlAttributes" />，其中含有已套用至成員程式碼實體之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 相關屬性的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents XML attributes that have been applied to the member code.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" />，表示已套用至成員程式碼的 XML 屬性。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary vsli:raw="Enables iteration over a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">啟用對 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件集合的反覆運算。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> 類別的新執行個體。</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object you want to iterate over.">您想要反覆運算的 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt;.">釋放 <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next item in the collection.">將列舉程式推進到集合的下一個項目。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果移動成功，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">將列舉程式設定至它的初始位置，即 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件集合中的第一個項目之前。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">取得集合中目前的項目。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">集合中目前的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">取得 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件集合中目前的項目。</summary>
      <returns vsli:raw="The current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 物件集合中的目前項目。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary vsli:raw="Populates &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects with XML schema element declarations that are found in type mapping objects.">使用在型別對應物件中找到的 XML 結構描述項目宣告，填入 (Populate) <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaExporter&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSchemaExporter" /> 類別的新執行個體。</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects to which element declarations obtained from type mappings are added.">要將從型別對應取得的項目宣告加入其中的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件集合。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary vsli:raw="Exports an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that is identified by the specified namespace.">將 <c>&lt;any&gt;</c> 項目匯出至指定命名空間所識別的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</summary>
      <param name="ns" vsli:raw="The namespace of the XML schema document to which to add an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element.">要新增 <c>&lt;any&gt;</c> 項目之 XML 結構描述文件的命名空間。</param>
      <returns vsli:raw="An arbitrary name assigned to the &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element declaration.">指派給 <c>&lt;any&gt;</c> 項目宣告的任意名稱。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration for an object or type to a SOAP message or to an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">將物件或型別的項目宣告加入 SOAP 訊息或 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
      <param name="members" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains mappings to export.">包含要匯出之對應的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</param>
      <returns vsli:raw="The string &quot;any&quot; with an appended integer.">含有附加整數的字串 "any"。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition.">針對常值 SOAP 訊息定義的每個項目部分，將項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 中。</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Web 服務描述語言 (WSDL) 訊息定義之項目部分的內部 .NET Framework 型別對應。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition, and specifies whether enclosing elements are included.">針對常值 SOAP 訊息定義的每個項目部分，將項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 中，並指定是否包括封入項目。</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal mapping between a .NET Framework type and an XML schema element.">.NET Framework 型別和 XML 結構描述項目之間的內部對應。</param>
      <param name="exportEnclosingType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema elements that enclose the schema are to be included; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果要包括封入結構描述的結構描述項目，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object for a single element part of a literal SOAP message definition.">針對常值 SOAP 訊息定義的單一項目部分，將項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
      <param name="xmlMembersMapping" vsli:raw="Internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Web 服務描述語言 (WSDL) 訊息定義之項目部分的內部 .NET Framework 型別對應。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the qualified XML name of the exported element declaration.">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示已匯出之項目宣告的限定 XML 名稱。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Adds an element declaration for a .NET type to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">將 .NET Framework 型別的項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
      <param name="xmlTypeMapping" vsli:raw="The internal mapping between a .NET type and an XML schema element.">.NET Framework 型別和 XML 結構描述項目之間的內部對應。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary vsli:raw="Generates internal mappings to .NET types for XML schema element declarations, including literal XSD message parts in a WSDL document.">針對 XML 結構描述項目宣告產生 .NET Framework 型別的內部對應，包括 WSDL 文件中的常值 (Literal) XSD 訊息部分。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects representing the XML schemas used by SOAP literal messages defined in a WSDL document.">初始化 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 類別的新執行個體，並採用 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件的集合，表示 WSDL 文件中定義之 SOAP 常值訊息所使用的 XML 結構描述。</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 物件的集合。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects that represents the XML schemas used by SOAP literal messages, plus classes being generated for bindings defined in a Web Services Description Language (WSDL) document.">初始化 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 類別的新執行個體，並採用 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件的集合，表示由 SOAP 常值訊息所使用的 XML 結構描述，再加上針對 Web 服務描述語言 (WSDL) 文件中定義的繫結所產生的類別。</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object.">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 物件。</param>
      <param name="typeIdentifiers" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object that specifies a collection of classes being generated for bindings defined in a WSDL document.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 物件，其指定針對 WSDL 文件中定義的繫結所產生的類別集合。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary vsli:raw="Generates internal type mapping information for a single, (SOAP) literal element part defined in a WSDL document.">針對 WSDL 文件中定義的單一 (SOAP) 常值項目部分，產生內部型別對應資訊。</summary>
      <param name="typeName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element's type for which a .NET Framework type is generated.">
        <see cref="T:System.Xml.XmlQualifiedName" />，其指定要產生 .NET Framework 型別之項目型別的名稱。</param>
      <param name="elementName" vsli:raw="The name of the part element in the WSDL document.">WSDL 文件中部分項目的名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; representing the .NET Framework type mapping for a single element part of a WSDL message definition.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />，表示 WSDL 訊息定義之單一項目部分的 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">產生 XML 結構描述文件中所定義之項目的內部型別對應資訊。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">
        <see cref="T:System.Xml.XmlQualifiedName" />，其會指定 XML 結構描述文件中定義之項目的名稱。</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">要對應至 XSD 項目型別所產生之 .NET Framework 型別的基底型別。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; representing the.NET Framework type mapping information for an XML schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />，表示 XML 結構描述項目的 .NET Framework 型別對應資訊。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document or as a part in a WSDL document.">針對 XML 結構描述文件中定義的項目產生內部型別對應資訊，或當做 WSDL 文件中的部分。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">
        <see cref="T:System.Xml.XmlQualifiedName" />，其會指定 XML 結構描述文件中定義之項目的名稱。</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">要對應至 XSD 項目型別所產生之 .NET Framework 型別的基底型別。</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the type corresponding to an XSD element can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示對應至 XSD 項目的型別可能會間接繼承自基底型別，否則為 <see langword="false" />。</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">XML 結構描述項目的 .NET Framework 型別對應資訊。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">針對在 WSDL 文件中定義之常值使用 SOAP 訊息的項目部分產生內部型別對應資訊。</summary>
      <param name="name" vsli:raw="The name of the element for which to generate a mapping.">要產生對應之項目的名稱。</param>
      <param name="ns" vsli:raw="The namespace of the element for which to generate a mapping.">要產生對應之項目的命名空間。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; instances that specifies the members of the element for which to generate a mapping.">
        <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 執行個體的陣列，此陣列會指定要產生對應之項目的成員。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains type mapping information.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />，其中含有型別對應資訊。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for a single element part of a literal-use SOAP message defined in a WSDL document.">針對在 WSDL 文件中定義之常值用法 SOAP 訊息的單一項目部分產生內部型別對應資訊。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of the message part.">
        <see cref="T:System.Xml.XmlQualifiedName" />，其指定訊息部分的名稱。</param>
      <returns vsli:raw="The .NET Framework type mapping for a WSDL message definition containing a single element part.">包含單一項目部分之 WSDL 訊息定義的 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">針對在 WSDL 文件中定義之常值使用 SOAP 訊息的項目部分產生內部型別對應資訊。</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">
        <see cref="T:System.Xml.XmlQualifiedName" /> 型別的陣列，此陣列會指定訊息部分的名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that represents the .NET Framework type mappings for the element parts of a WSDL message definition.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />，表示 WSDL 訊息定義中項目部分的 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">針對在 WSDL 文件中定義之常值使用 SOAP 訊息的項目部分產生內部型別對應資訊。</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">
        <see cref="T:System.Xml.XmlQualifiedName" /> 型別的陣列，此陣列會指定訊息部分的名稱。</param>
      <param name="baseType" vsli:raw="A base type for all .NET Framework types that are generated to correspond to message parts.">要對應至訊息部分所產生之所有 .NET Framework 型別的基底型別。</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the types corresponding to message parts can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示對應至訊息部分的型別可以間接繼承自基底型別，否則為 <see langword="false" />。</param>
      <returns vsli:raw="The .NET Framework type mappings for the element parts of a WSDL message definition.">WSDL 訊息定義中項目部分的 .NET Framework 型別對應。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">產生 XML 結構描述文件中所定義之項目的內部型別對應資訊。</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">
        <see cref="T:System.Xml.XmlQualifiedName" />，其指定 XML 項目。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">描述型別對應的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">產生 XML 結構描述文件中所定義之項目的內部型別對應資訊。</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">
        <see cref="T:System.Xml.XmlQualifiedName" />，其指定 XML 項目。</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">指定基底型別的 <see cref="T:System.Type" /> 物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">描述型別對應的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">產生 XML 結構描述文件中所定義之項目的內部型別對應資訊。</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">
        <see cref="T:System.Xml.XmlQualifiedName" />，其指定 XML 項目。</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">指定基底型別的 <see cref="T:System.Type" /> 物件。</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the generated type can indirectly inherit the &lt;paramref name=&quot;baseType&quot; /&gt;.">
        <see cref="T:System.Boolean" /> 值，指定產生的型別是否可以間接繼承 <paramref name="baseType" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">描述型別對應的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">產生 XML 結構描述文件中所定義之項目的內部型別對應資訊。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">
        <see cref="T:System.Xml.XmlQualifiedName" />，其會指定 XML 結構描述文件中定義之項目的名稱。</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">XML 結構描述項目的 .NET Framework 型別對應資訊。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary vsli:raw="Represents the collection of XML schemas.">代表 XML 結構描述的集合。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an object to the end of the collection.">將物件加入至集合結尾。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be added to the collection of objects.">要加入物件集合的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 要加入的索引位置。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">將表示組件參考的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件加入集合。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">要加入的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
      <param name="baseUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the schema object.">結構描述物件的 <see cref="T:System.Uri" />。</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 要加入的索引位置。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Adds an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class to the end of the collection.">將 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 類別的執行個體加入集合結尾。</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object to be added to the end of the collection.">加入集合結尾的 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">將表示組件參考的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件加入集合。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">要加入的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Processes the element and attribute names in the XML schemas and, optionally, validates the XML schemas.">處理 XML 結構描述中的項目和屬性名稱，並選擇性地驗證 XML 結構描述。</summary>
      <param name="handler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that specifies the callback method that handles errors and warnings during XML Schema validation, if the strict parameter is set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" />，在嚴格參數設為 <see langword="true" /> 時，指定 XML 結構描述驗證期間，處理錯誤和警告的回呼方法。</param>
      <param name="fullCompile" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the XML schemas in the collection using the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示使用 <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> 類別的 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 方法，驗證集合中的 XML 結構描述，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether the collection contains an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that belongs to the specified namespace.">傳回數值，指出集合是否包含屬於指定命名空間的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</summary>
      <param name="targetNamespace" vsli:raw="The namespace of the item to check for.">要檢查之項目的命名空間。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果找到項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; contains a specific schema.">判斷 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 是否包含特定結構描述。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to locate.">要尋找的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the collection contains the specified item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含指定項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, which starts at the specified index of the target array.">從目標陣列的指定索引開始，複製整個 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 至相容一維 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the schemas copied from &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一維 <see cref="T:System.Array" />，從 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 複製之結構描述的目的地。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="index" vsli:raw="A 32-bit integer that represents the index in the array where copying begins.">32 位元的整數，表示陣列中開始複製處的索引。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Locates in one of the XML schemas an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the specified name and type.">在其中一個 XML 結構描述中，尋找指定名稱和型別的 <see cref="T:System.Xml.Schema.XmlSchemaObject" />。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies a fully qualified name with a namespace used to locate an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">
        <see cref="T:System.Xml.XmlQualifiedName" />，指定具有命名空間的完整名稱，用於尋找集合中的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to find. Possible types include: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt;.">要尋找之物件的 <see cref="T:System.Type" />。 可能的型別包括：<see cref="T:System.Xml.Schema.XmlSchemaGroup" />、<see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />、<see cref="T:System.Xml.Schema.XmlSchemaElement" />、<see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 和 <see cref="T:System.Xml.Schema.XmlSchemaNotation" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; instance, such as an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 執行個體，例如 <see cref="T:System.Xml.Schema.XmlSchemaElement" /> 或 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary vsli:raw="Gets a collection of schemas that belong to the same namespace.">取得屬於同一命名空間的結構描述集合。</summary>
      <param name="ns" vsli:raw="The namespace of the schemas to retrieve.">要擷取之結構描述的命名空間。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; implementation that contains the schemas.">包含結構描述的 <see cref="T:System.Collections.IList" /> 實作。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Searches for the specified schema and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">搜尋指定的結構描述，並傳回整個 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 內，第一個找到機構描述之以零起始的索引。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to locate.">要尋找的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the value within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;, if found; otherwise, -1.">如果找到，則為整個 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 內，第一個找到結構描述之以零起始的索引值，否則為 -1。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Inserts a schema into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; at the specified index.">將結構描述插入指定索引位置的 <see cref="T:System.Xml.Serialization.XmlSchemas" />。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;schema&quot; /&gt; should be inserted.">應在 <paramref name="schema" /> 插入以零為起始的索引。</param>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be inserted.">要插入的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Static method that determines whether the specified XML schema contains a custom &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;, or its equivalent.">靜態方法，判斷指定的 XML 結構描述是否包含設為 <see langword="IsDataSet" /> 或其相等值的 <see langword="true" /> 屬性。</summary>
      <param name="schema" vsli:raw="The XML schema to check for an &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute with a &lt;see langword=&quot;true&quot; /&gt; value.">XML 結構描述，檢查是否存在具有 <see langword="IsDataSet" /> 值的 <see langword="true" /> 屬性。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified schema exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的結構描述存在，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">在清除 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 執行個體的內容之後，執行額外的自訂處理序。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">在將新的元素插入至 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 執行個體前，執行額外的自訂處理序。</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">插入 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">在 <paramref name="index" /> 處的新項目值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">當從 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 執行個體移除元素時，執行額外的自訂處理序。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">可以找到 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value" vsli:raw="The value of the element to remove at &lt;paramref name=&quot;index&quot; /&gt;.">從 <paramref name="index" /> 處移除的項目值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">在 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 執行個體中設定數值前，執行額外的自訂處理序。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">可以找到 <paramref name="oldValue" /> 處之以零起始的索引。</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">以 <paramref name="newValue" /> 取代的值。</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">在 <paramref name="index" /> 處的新項目值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the first occurrence of a specific schema from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">移除 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 中第一個出現的特定結構描述。</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to remove.">要移除的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of XML schemas.">傳回逐一查看 XML 結構描述集合的列舉值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" /> 物件，可用於逐一查看集合。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the schemas have been compiled.">取得值，指出是否已編譯結構描述。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the schemas have been compiled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已編譯結構描述，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object at the specified index.">取得或設定在指定索引處的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</summary>
      <param name="index" vsli:raw="The index of the item to retrieve.">要擷取的項目索引。</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt;.">指定的 <see cref="T:System.Xml.Schema.XmlSchema" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary vsli:raw="Gets a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents the XML schema associated with the specified namespace.">取得指定的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件，表示與指定命名空間相關聯的 XML 結構描述。</summary>
      <param name="ns" vsli:raw="The namespace of the specified object.">指定物件的命名空間。</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">指定的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data types that map to collections or enumerations.">針對 SOAP 編碼之 XML 資料類型 (已對應至集合或列舉) 的還原序列化，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別所使用的委派。</summary>
      <param name="collection" vsli:raw="The collection into which the collection items array is copied.">將集合項目陣列複製到其中的集合。</param>
      <param name="collectionItems" vsli:raw="An array of items to be copied into the &lt;c&gt;object collection&lt;/c&gt;.">要複製到「物件集合」<c></c>中的項目陣列。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data.">針對 SOAP 編碼之 XML 資料類型的還原序列化，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別所使用的委派。</summary>
      <param name="fixup" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class that contains the object to be fixed and the array of string identifiers for the items to fill in.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 類別的執行個體，其中包含要修復的物件以及要填入之項目的字串識別碼陣列。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary vsli:raw="An abstract class that is the base class for &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; and that contains methods common to both of these types.">抽象類別，<see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 和 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 的基底類別，包含這兩個型別的通用方法。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationGeneratedCode&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" /> 類別的執行個體。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of types from SOAP-encoded, non-root XML data.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別對 SOAP 編碼的非根 XML 資料進行類型還原序列化時所使用的委派。</summary>
      <returns vsli:raw="The object returned by the callback.">回撥所傳回的物件。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary vsli:raw="Controls deserialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">依據 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別控制還原序列化。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary vsli:raw="Stores an object that contains a callback method that will be called, as necessary, to fill in .NET collections or enumerations that map to SOAP-encoded arrays or SOAP-encoded, multi-referenced elements.">儲存含有回呼方法的物件，然後在必要時呼叫此方法，以填入與 SOAP 編碼陣列或 SOAP 編碼之多重參考項目對應的 .NET Framework 集合或列舉中。</summary>
      <param name="fixup" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate and the callback method's input data.">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委派及回呼方法的輸入資料。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary vsli:raw="Stores an object that contains a callback method instance that will be called, as necessary, to fill in the objects in a SOAP-encoded array.">儲存含有回呼方法執行個體的物件，並在必要時呼叫此方法執行個體，以填入 SOAP 編碼陣列中的物件。</summary>
      <param name="fixup" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate and the callback method's input data.">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委派及回呼方法的輸入資料。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate and its input data for a later invocation.">儲存 <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> 委派的實作及其輸入資料，以供稍後的引動過程使用。</summary>
      <param name="name" vsli:raw="The name of the .NET Framework type that is being deserialized.">正在還原序列化的 .NET Framework 類型的名稱。</param>
      <param name="ns" vsli:raw="The namespace of the .NET Framework type that is being deserialized.">正在還原序列化的. NET Framework 類型的命名空間。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be deserialized.">要還原序列化的 <see cref="T:System.Type" />。</param>
      <param name="read" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> 委派。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary vsli:raw="Stores an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element for later access through the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)&quot; /&gt; method.">儲存正在從 SOAP 編碼 <see langword="multiRef" /> 項目還原序列化的物件，以供稍後透過 <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" /> 方法存取時使用。</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">
        <see langword="multiRef" /> 項目的 <see langword="id" /> 屬性值，其可用來識別項目。</param>
      <param name="o" vsli:raw="The object that is deserialized from the XML element.">從 XML 項目還原序列化而得的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary vsli:raw="Checks whether the deserializer has advanced.">檢查還原序列化程式是否已進階。</summary>
      <param name="whileIterations" vsli:raw="The current &lt;see langword=&quot;count&quot; /&gt; in a while loop.">while 迴圈中目前的 <see langword="count" />。</param>
      <param name="readerCount" vsli:raw="The current &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt;.">目前的 <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt; has not advanced.">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> 未進階。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary vsli:raw="Removes all occurrences of white space characters from the beginning and end of the specified string.">從指定字串的開頭和結尾移除所有出現的空白字元。</summary>
      <param name="value" vsli:raw="The string that will have its white space trimmed.">空白字元會被修剪的字串。</param>
      <returns vsli:raw="The trimmed string.">修剪後的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized should be abstract.">建立 <see cref="T:System.InvalidOperationException" />，表示正在還原序列化的物件應該是抽象的。</summary>
      <param name="name" vsli:raw="The name of the abstract type.">抽象類型的名稱。</param>
      <param name="ns" vsli:raw="The .NET Framework namespace of the abstract type.">抽象類型的 .NET Framework 命名空間。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, with an option to read the inner element.">在 <see cref="T:System.Xml.XmlReader" /> 的目前位置，使用讀取內部項目選項，從物件的 XML 表示法填入物件。</summary>
      <param name="xsdDerived" vsli:raw="The local name of the derived XML Schema data type.">衍生 XML 結構描述資料類型的區域名稱。</param>
      <param name="nsDerived" vsli:raw="The namespace of the derived XML Schema data type.">衍生 XML 結構描述資料類型的命名空間。</param>
      <param name="xsdBase" vsli:raw="The local name of the base XML Schema data type.">基底 XML 結構描述資料類型的區域名稱。</param>
      <param name="nsBase" vsli:raw="The namespace of the base XML Schema data type.">基底 XML 結構描述資料類型的命名空間。</param>
      <param name="clrDerived" vsli:raw="The namespace of the derived .NET Framework type.">衍生 .NET Framework 類型的命名空間。</param>
      <param name="clrBase" vsli:raw="The name of the base .NET Framework type.">基底 .NET Framework 類型的名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because the constructor throws a security exception.">建立 <see cref="T:System.InvalidOperationException" />，以表示由於建構函式擲回安全性例外狀況，因此無法具現化正在還原序列化的物件。</summary>
      <param name="typeName" vsli:raw="The name of the type.">型別的名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because there is no constructor available.">建立 <see cref="T:System.InvalidOperationException" />，以表示由於沒有可用的建構函式，因此無法具現化正在還原序列化的物件。</summary>
      <param name="typeName" vsli:raw="The name of the type.">型別的名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">建立 <see cref="T:System.InvalidCastException" />，以表示明確的參考轉換已失敗。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">某物件無法轉型而成的 <see cref="T:System.Type" />。 此類型會納入例外狀況訊息中。</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">無法轉型的物件。 此物件會納入例外狀況訊息中。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">
        <see cref="T:System.InvalidCastException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">建立 <see cref="T:System.InvalidCastException" />，以表示明確的參考轉換已失敗。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">某物件無法轉型而成的 <see cref="T:System.Type" />。 此類型會納入例外狀況訊息中。</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">無法轉型的物件。 此物件會納入例外狀況訊息中。</param>
      <param name="id" vsli:raw="A string identifier.">字串識別碼。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">
        <see cref="T:System.InvalidCastException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a derived type that is mapped to an XML Schema data type cannot be located.">建立 <see cref="T:System.InvalidOperationException" />，以表示找不到對應至 XML 結構描述資料類型的衍生類型。</summary>
      <param name="name" vsli:raw="The local name of the XML Schema data type that is mapped to the unavailable derived type.">對應至無法使用的衍生類型的 XML 結構描述資料類型區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML Schema data type that is mapped to the unavailable derived type.">對應至無法使用的衍生類型的 XML 結構描述資料類型命名空間。</param>
      <param name="clrType" vsli:raw="The full name of the .NET Framework base type for which a derived type cannot be located.">找不到衍生類型的 .NET Framework 基底類型的完整名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a SOAP-encoded collection type cannot be modified and its values cannot be filled in.">建立 <see cref="T:System.InvalidOperationException" />，以表示無法修改 SOAP 編碼的集合類型，而且無法填入其值。</summary>
      <param name="name" vsli:raw="The fully qualified name of the .NET Framework type for which there is a mapping.">已建立對應之 .NET Framework 類型的完整名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an enumeration value is not valid.">建立 <see cref="T:System.InvalidOperationException" />，以表示列舉值無效。</summary>
      <param name="value" vsli:raw="The enumeration value that is not valid.">無效的列舉值。</param>
      <param name="enumType" vsli:raw="The enumeration type.">列舉類型。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that the current position of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; represents an unknown XML node.">建立 <see cref="T:System.InvalidOperationException" />，以指出 <see cref="T:System.Xml.XmlReader" /> 的目前位置代表未知的 XML 節點。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type is unknown.">建立 <see cref="T:System.InvalidOperationException" />，以表示類型是未知的。</summary>
      <param name="type" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the name of the unknown type.">代表未知類型名稱的 <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">
        <see cref="T:System.InvalidOperationException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary vsli:raw="Ensures that a given array, or a copy, is large enough to contain a specified index.">確定指定之陣列或複本的大小足以容納指定的索引。</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; that is being checked.">正在檢查的 <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The required index.">必要的索引。</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">陣列項目的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already large enough; otherwise, a new, larger array that contains the original array's elements.">如果現有的陣列大小已足夠，即為現有 <see cref="T:System.Array" />；否則為更大的新陣列，且其中含有原始陣列的項目。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary vsli:raw="Fills in the values of a SOAP-encoded array whose data type maps to a .NET reference type.">填入 SOAP 編碼陣列的值，該陣列的資料類型會對應至 .NET Framework 參考類型。</summary>
      <param name="fixup" vsli:raw="An object that contains the array whose values are filled in.">物件，其中含有要填入值的陣列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary vsli:raw="Gets the length of the SOAP-encoded array where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">取得 <see cref="T:System.Xml.XmlReader" /> 目前所在之 SOAP 編碼陣列的長度。</summary>
      <param name="name" vsli:raw="The local name that the array should have.">陣列應該具有的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace that the array should have.">陣列應該具有的命名空間。</param>
      <returns vsli:raw="The length of the SOAP array.">SOAP 陣列的長度。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary vsli:raw="Determines whether the XML element where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned has a null attribute set to the value &lt;see langword=&quot;true&quot; /&gt;.">判斷 <see cref="T:System.Xml.XmlReader" /> 目前所在之 XML 項目是否已將 Null 屬性設定為 <see langword="true" /> 值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned over a null attribute with the value &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.XmlReader" /> 目前所在位置的 Null 屬性為 <see langword="true" /> 值，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary vsli:raw="Gets an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element and that was stored earlier by &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)&quot; /&gt;.">取得正從 SOAP 編碼 <see langword="multiRef" /> 項目還原序列化且之前由 <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" /> 所儲存的物件。</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">
        <see langword="multiRef" /> 項目的 <see langword="id" /> 屬性值，其可用來識別項目。</param>
      <returns vsli:raw="An object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">要從 SOAP 編碼 <see langword="multiRef" /> 項目還原序列化的物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for the XML element at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">針對位於 <see cref="T:System.Xml.XmlReader" /> 目前位置之 XML 項目，取得 <see langword="xsi:type" /> 屬性的值。</summary>
      <returns vsli:raw="An XML qualified name that indicates the data type of an XML element.">表示 XML 項目之資料類型的 XML 限定名稱。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary vsli:raw="Initializes callback methods that populate objects that map to SOAP-encoded XML data.">初始化回呼方法，以填入對應至 SOAP 編碼 XML 資料的物件。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary vsli:raw="Stores element and attribute names in a &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; object.">將項目和屬性名稱儲存在 <see cref="T:System.Xml.NameTable" /> 物件中。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary vsli:raw="Determines whether an XML attribute name indicates an XML namespace.">判斷 XML 屬性名稱是否會指出 XML 命名空間。</summary>
      <param name="name" vsli:raw="The name of an XML attribute.">XML 屬性的名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML attribute name indicates an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 XML 屬性名稱會指出 XML 命名空間，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary vsli:raw="Sets the value of the XML attribute if it is of type &lt;see langword=&quot;arrayType&quot; /&gt; from the Web Services Description Language (WSDL) namespace.">設定 XML 屬性的值 (如果其類型為 Web 服務描述語言 (WSDL) 命名空間中的 <see langword="arrayType" /> 的話)。</summary>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that may have the type &lt;see langword=&quot;wsdl:array&quot; /&gt;.">可能具有 <see langword="wsdl:array" /> 類型的 <see cref="T:System.Xml.XmlAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read the fully qualified name of the element where it is currently positioned.">讓 <see cref="T:System.Xml.XmlReader" /> 讀取其目前所在項目的完整名稱。</summary>
      <returns vsli:raw="The fully qualified name of the current XML element.">目前 XML 項目的完整名稱。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read an XML end tag.">讓 <see cref="T:System.Xml.XmlReader" /> 讀取 XML 結束標記。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the current XML element if the element has a null attribute with the value true.">如果目前 XML 項目含有值為 true 的 Null 屬性，則會指示 <see cref="T:System.Xml.XmlReader" /> 讀取此項目。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value and has been read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此項目含有 <c>null="true"</c> 屬性值且已經讀取，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the fully qualified name of the element where it is currently positioned.">指示 <see cref="T:System.Xml.XmlReader" /> 讀取其目前所在項目的完整名稱。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the fully qualified name of the current XML element; otherwise, &lt;see langword=&quot;null&quot; /&gt; if a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value is present.">
        <see cref="T:System.Xml.XmlQualifiedName" /> 代表目前 XML 項目的完整名稱，但如果 <c>null="true"</c> 屬性值存在，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read a simple, text-only XML element that could be &lt;see langword=&quot;null&quot; /&gt;.">指示 <see cref="T:System.Xml.XmlReader" /> 讀取可能為 <see langword="null" /> 的簡單純文字 XML 項目。</summary>
      <returns vsli:raw="The string value; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">字串值；否則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary vsli:raw="Reads the value of the &lt;see langword=&quot;href&quot; /&gt; attribute (&lt;see langword=&quot;ref&quot; /&gt; attribute for SOAP 1.2) that is used to refer to an XML element in SOAP encoding.">讀取 <see langword="href" /> 屬性 (SOAP 1.2 中的 <see langword="ref" /> 屬性) 的值，這項屬性會用來參考 SOAP 編碼中的 XML 項目。</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">輸出字串；<see langword="href" /> 屬性值會讀入其中。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已讀取此值，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">從 SOAP 編碼 <see langword="multiRef" /> XML 項目還原序列化物件。</summary>
      <returns vsli:raw="The value of the referenced element in the document.">文件所參考的項目的值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">從 SOAP 編碼 <see langword="multiRef" /> XML 項目還原序列化物件。</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">項目的 XML 結構描述資料類型區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">項目的 XML 結構描述資料類型命名空間。</param>
      <returns vsli:raw="The value of the referenced element in the document.">文件所參考的項目的值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary vsli:raw="Deserializes objects from the SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; elements in a SOAP message.">從 SOAP 訊息中的 SOAP 編碼 <see langword="multiRef" /> 項目還原序列化物件。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">從 SOAP 訊息中的 XML 項目還原序列化物件；該訊息包含 <see langword="multiRef" /> 項目參考。</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">項目的 XML 結構描述資料類型區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">項目的 XML 結構描述資料類型命名空間。</param>
      <param name="elementCanBeType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element name is also the XML Schema data type name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果項目名稱也是 XML 結構描述資料類型名稱，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="fixupReference" vsli:raw="An output string into which the value of the &lt;see langword=&quot;href&quot; /&gt; attribute is read.">輸出字串；<see langword="href" /> 屬性值會讀入其中。</param>
      <returns vsli:raw="The deserialized object.">還原序列化的物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">從 SOAP 訊息中的 XML 項目還原序列化物件；該訊息包含 <see langword="multiRef" /> 項目參考。</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">項目的 XML 結構描述資料類型區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">項目的 XML 結構描述資料類型命名空間。</param>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">輸出字串；<see langword="href" /> 屬性值會讀入其中。</param>
      <returns vsli:raw="The deserialized object.">還原序列化的物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">從 SOAP 訊息中的 XML 項目還原序列化物件；該訊息包含 <see langword="multiRef" /> 項目參考。</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">輸出字串；<see langword="href" /> 屬性值會讀入其中。</param>
      <returns vsli:raw="The deserialized object.">還原序列化的物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">在 <see cref="T:System.Xml.XmlReader" /> 的目前位置，從物件的 XML 表示法填入物件。</summary>
      <param name="serializable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; that corresponds to the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" />，其對應至 <see cref="T:System.Xml.XmlReader" /> 的目前位置。</param>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface with its members populated from the location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">物件，其會實作 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 介面，並從 <see cref="T:System.Xml.XmlReader" /> 的位置填入其成員。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary vsli:raw="This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此方法支援 .NET Framework 結構而且並非設計直接從程式碼使用。</summary>
      <param name="serializable" vsli:raw="An IXmlSerializable object that corresponds to the current position of the XMLReader.">對應至 XMLReader 目前位置的 IXmlSerializable 物件。</param>
      <param name="wrappedAny" vsli:raw="Specifies whether the serializable object is wrapped.">指定可序列化的物件是否經過包裝。</param>
      <returns vsli:raw="An object that implements the IXmlSerializable interface with its members populated from the location of the XmlReader.">物件，其會實作 IXmlSerializable 介面，並從 XmlReader 的位置填入其成員。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary vsli:raw="Produces the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">產生呼叫 <see cref="M:System.Xml.XmlReader.ReadString" /> 方法的結果並附加至輸入值。</summary>
      <param name="value" vsli:raw="A string to prefix to the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method.">字串，其為呼叫 <see cref="M:System.Xml.XmlReader.ReadString" /> 方法之結果的前置詞。</param>
      <returns vsli:raw="The result of call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">呼叫 <see cref="M:System.Xml.XmlReader.ReadString" /> 方法的結果 (其會附加至輸入值)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary vsli:raw="Returns the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class, trimmed of white space if needed, and appended to the input value.">傳回呼叫 <see cref="T:System.Xml.XmlReader" /> 類別的 <see cref="M:System.Xml.XmlReader.ReadString" /> 方法的結果，必要時修剪空白字元，並附加至輸入值。</summary>
      <param name="value" vsli:raw="A string that will be appended to.">要附加項目的目標字串。</param>
      <param name="trim" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the result of the read operation should be trimmed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果應該修剪讀取作業的結果，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <returns vsli:raw="The result of the read operation appended to the input value.">讀取作業的結果 (其會附加至輸入值)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Reads an XML element that allows null values (&lt;see langword=&quot;xsi:nil = 'true'&quot; /&gt;) and returns a generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; value.">讀取允許 Null 值 (<see langword="xsi:nil = 'true'" />) 的 XML 項目，並傳回泛型 <see cref="T:System.Nullable`1" /> 值。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />，其表示 <see cref="T:System.Xml.XmlReader" /> 目前位置的簡單資料類型。</param>
      <returns vsli:raw="A generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; that represents a null XML value.">泛型 <see cref="T:System.Nullable`1" />，其代表 Null XML 值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Gets the value of the XML node at which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">取得 <see cref="T:System.Xml.XmlReader" /> 目前所在之 XML 節點的值。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" />，其表示 <see cref="T:System.Xml.XmlReader" /> 目前位置的簡單資料類型。</param>
      <returns vsli:raw="The value of the node as a .NET Framework value type, if the value is a simple XML Schema data type.">如果此值為簡單 XML 結構描述資料類型，即為 .NET Framework 實值型別的節點值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read an XML document root element at its current position.">指示 <see cref="T:System.Xml.XmlReader" /> 讀取其目前所在位置的 XML 文件根項目。</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method should read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此方法只有在讀取項目的開始項目後才應讀取內容，即為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that contains the root element that has been read.">
        <see cref="T:System.Xml.XmlDocument" />，其中含有已經讀取的根項目。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the XML node at its current position.">指示 <see cref="T:System.Xml.XmlReader" /> 讀取目前所在位置的 XML 節點。</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示只有在讀取項目的開始項目後才應讀取內容；否則為 <see langword="false" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that represents the XML node that has been read.">
        <see cref="T:System.Xml.XmlNode" />，代表已經讀取的 XML 節點。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary vsli:raw="Stores an object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">儲存要從 SOAP 編碼 <see langword="multiRef" /> 項目還原序列化的物件。</summary>
      <param name="o" vsli:raw="The object to be deserialized.">要還原序列化的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">根據名稱取得動態產生的組件。</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">組件的完整名稱。</param>
      <returns vsli:raw="A dynamically generated &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">動態產生的 <see cref="T:System.Reflection.Assembly" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary vsli:raw="Ensures that a given array, or a copy, is no larger than a specified length.">確認給定陣列或複本的大小並未超過指定的長度。</summary>
      <param name="a" vsli:raw="The array that is being checked.">正在檢查的陣列。</param>
      <param name="length" vsli:raw="The maximum length of the array.">陣列的長度上限。</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">陣列項目的 <see cref="T:System.Type" />。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt; for the array, if present for the input array, can be returned; otherwise, a new, smaller array.">如果陣列為 <see langword="true" />，而且輸入陣列已存在，即為 <see langword="null" />；否則為更小的新陣列。</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already small enough; otherwise, a new, smaller array that contains the original array's elements up to the size of &lt;paramref name=&quot;length&quot; /&gt;.">如果現有的陣列大小已足夠，即為現有 <see cref="T:System.Array" />；否則為更小的新陣列，且其中含有原始陣列的項目 (上限為 <paramref name="length" /> 的大小)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a base-64 byte array.">指示 <see cref="T:System.Xml.XmlReader" /> 讀取其目前位置的字串值，並以 Base-64 位元組陣列形式傳回此值。</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a base-64 byte array.">
        <see langword="true" /> 表示傳回 <see langword="null" />；<see langword="false" /> 則表示傳回 Base-64 位元組陣列。</param>
      <returns vsli:raw="A base-64 byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Base-64 位元組陣列，但如果 <paramref name="isNull" /> 參數的值為 <see langword="true" />，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary vsli:raw="Produces a base-64 byte array from an input string.">從輸入字串產生 Base-64 位元組陣列。</summary>
      <param name="value" vsli:raw="A string to translate into a base-64 byte array.">要轉譯成 Base-64 位元組陣列的字串。</param>
      <returns vsli:raw="A base-64 byte array.">Base-64 位元組陣列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a hexadecimal byte array.">指示 <see cref="T:System.Xml.XmlReader" /> 讀取其目前位置的字串值，並以十六進位位元組陣列形式傳回此值。</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a hexadecimal byte array.">
        <see langword="true" /> 表示傳回 <see langword="null" />，而 <see langword="false" /> 則表示傳回十六進位位元組陣列。</param>
      <returns vsli:raw="A hexadecimal byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">十六進位位元組陣列；如果 <paramref name="isNull" /> 參數的值為 <see langword="true" />，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary vsli:raw="Produces a hexadecimal byte array from an input string.">從輸入字串產生十六進位位元組陣列。</summary>
      <param name="value" vsli:raw="A string to translate into a hexadecimal byte array.">要轉譯成十六進位位元組陣列的字串。</param>
      <returns vsli:raw="A hexadecimal byte array.">十六進位位元組陣列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.Char&quot; /&gt; object from an input string.">從輸入字串產生 <see cref="T:System.Char" /> 物件。</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">要轉譯成 <see cref="T:System.Char" /> 物件的字串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">
        <see cref="T:System.Char" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">從輸入字串產生 <see cref="T:System.DateTime" /> 物件。</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; class object.">要轉譯成 <see cref="T:System.DateTime" /> 類別物件的字串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">從輸入字串產生 <see cref="T:System.DateTime" /> 物件。</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">要轉譯成 <see cref="T:System.DateTime" /> 物件的字串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary vsli:raw="Produces a numeric enumeration value from a string that consists of delimited identifiers that represent constants from the enumerator list.">從含有分隔識別碼的字串產生數值列舉值，而這些分隔識別碼代表列舉程式清單中的常數。</summary>
      <param name="value" vsli:raw="A string that consists of delimited identifiers where each identifier represents a constant from the set enumerator list.">含有分隔識別碼的字串，其中每個識別碼都代表已設定之列舉程式清單中的常數。</param>
      <param name="h" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that consists of the identifiers as keys and the constants as integral numbers.">
        <see cref="T:System.Collections.Hashtable" />，其中含有索引鍵形式的識別碼以及整數形式的常數。</param>
      <param name="typeName" vsli:raw="The name of the enumeration type.">列舉類型的名稱。</param>
      <returns vsli:raw="A long value that consists of the enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">長數值，其中含有以一系列位元 <see langword="OR" /> 運算為形式的列舉值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; from a string that represents the time.">從代表時間的字串產生 <see cref="T:System.DateTime" />。</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">要轉譯成 <see cref="T:System.DateTime" /> 物件的字串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">
        <see cref="T:System.DateTime" /> 物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary vsli:raw="Decodes an XML name.">解碼 XML 名稱。</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">要解碼的 XML 名稱。</param>
      <returns vsli:raw="A decoded string.">已解碼的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary vsli:raw="Decodes an XML name.">解碼 XML 名稱。</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">要解碼的 XML 名稱。</param>
      <returns vsli:raw="A decoded string.">已解碼的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary vsli:raw="Decodes an XML name.">解碼 XML 名稱。</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">要解碼的 XML 名稱。</param>
      <returns vsli:raw="A decoded string.">已解碼的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary vsli:raw="Decodes an XML name.">解碼 XML 名稱。</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">要解碼的 XML 名稱。</param>
      <returns vsli:raw="A decoded string.">已解碼的字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary vsli:raw="Obtains an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; from a name that may contain a prefix.">從可能含有前置詞的名稱中取得 <see cref="T:System.Xml.XmlQualifiedName" />。</summary>
      <param name="value" vsli:raw="A name that may contain a prefix.">可能含有前置詞的名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents a namespace-qualified XML name.">
        <see cref="T:System.Xml.XmlQualifiedName" />，代表命名空間限定的 XML 名稱。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">對 <see cref="T:System.Xml.XmlReader" /> 的目前位置引發 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 事件。</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 正在嘗試還原序列化的物件；您之後可透過 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 屬性存取此物件。</param>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">
        <see cref="T:System.Xml.XmlAttribute" />，代表有問題的屬性。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">對 <see cref="T:System.Xml.XmlReader" /> 的目前位置引發 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 事件。</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 正在嘗試還原序列化的物件；您之後可透過 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 屬性存取此物件。</param>
      <param name="attr" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">
        <see cref="T:System.Xml.XmlAttribute" />，代表有問題的屬性。</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">XML 限定名稱的逗號分隔清單。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">對 <see cref="T:System.Xml.XmlReader" /> 的目前位置引發 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is being deserialized.">正在還原序列化的 <see cref="T:System.Object" />。</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">已引發事件的 <see cref="T:System.Xml.XmlElement" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">對 <see cref="T:System.Xml.XmlReader" /> 的目前位置引發 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件。</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 正在嘗試還原序列化的物件；您之後可透過 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 屬性存取此物件。</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">已引發事件的 <see cref="T:System.Xml.XmlElement" />。</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">XML 限定名稱的逗號分隔清單。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">對 <see cref="T:System.Xml.XmlReader" /> 的目前位置引發 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件。</summary>
      <param name="o" vsli:raw="The object that is being deserialized.">正在還原序列化的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">對 <see cref="T:System.Xml.XmlReader" /> 的目前位置引發 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件。</summary>
      <param name="o" vsli:raw="The object being deserialized.">正在還原序列化的物件。</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">XML 限定名稱的逗號分隔清單。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">對 <see cref="T:System.Xml.XmlReader" /> 的目前位置引發 <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 事件。</summary>
      <param name="id" vsli:raw="A unique string that is used to identify the unreferenced object, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId&quot; /&gt; property.">用於識別未參考物件的唯一字串；您之後可透過 <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" /> 屬性存取此字串。</param>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject&quot; /&gt; property.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 正在嘗試還原序列化的物件；您之後可透過 <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" /> 屬性存取此物件。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary vsli:raw="Gets or sets a value that determines whether XML strings are translated into valid .NET type names.">取得或設定值，以便判斷 XML 字串是否會轉譯成有效的 .NET Framework 類型名稱。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if XML strings are decoded into valid .NET type names; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 XML 字串會解碼成有效的 .NET Framework 型別名稱，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary vsli:raw="Gets the XML document object into which the XML document is being deserialized.">取得 XML 文件物件，其為 XML 文件正要還原序列化的目標物件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that represents the deserialized &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; data.">表示還原序列化之 <see cref="T:System.Xml.XmlDocument" /> 資料的 <see cref="T:System.Xml.XmlDocument" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that should be &lt;see langword=&quot;true&quot; /&gt; for a SOAP 1.1 return value.">取得或設定值，此值對於 SOAP 1.1 傳回值應該是 <see langword="true" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the value is a return value.">如果此值是傳回值，則為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that is being used by &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">取得正由 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 使用的 <see cref="T:System.Xml.XmlReader" /> 物件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">正由 <see cref="T:System.Xml.XmlReader" /> 使用的 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary vsli:raw="Gets the current count of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">取得目前 <see cref="T:System.Xml.XmlReader" /> 的計數。</summary>
      <returns vsli:raw="The current count of an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">目前 <see cref="T:System.Xml.XmlReader" /> 的計數。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also supplies the method's parameters.">包含 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委派 (Delegate) 執行個體，並加上方法的輸入，同時提供方法的參數。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup&quot; /&gt; class with parameters for a callback method.">使用回呼方法的參數，初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> 類別的新執行個體。</summary>
      <param name="collection" vsli:raw="A collection into which the callback method copies the collection items array.">回呼方法會將集合項目陣列複製到其中的集合。</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">將 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委派具現化的方法。</param>
      <param name="collectionItems" vsli:raw="An array into which the callback method copies a collection.">回呼方法會將集合複製到其中的陣列。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary vsli:raw="Gets the callback method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">取得具現化 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委派的回呼方法。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate that points to the callback method.">指向回呼方法的 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委派。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;object collection&quot; /&gt; for the callback method.">取得回呼方法的 <paramref name="object collection" />。</summary>
      <returns vsli:raw="The collection that is used for the fixup.">用於修復的集合。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary vsli:raw="Gets the array into which the callback method copies a collection.">取得回呼方法會將集合複製到其中的陣列。</summary>
      <returns vsli:raw="The array into which the callback method copies a collection.">回呼方法會將集合複製到其中的陣列。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also serves as the parameter for the method.">存放一個 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委派執行個體，加上此方法的輸入資料；同時也當做此方法的參數。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 類別的新執行個體。</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">此物件內還含有其他物件，回呼實作會負責將值填入這些物件內。</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">將 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委派具現化的方法。</param>
      <param name="count" vsli:raw="The size of the string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">經由 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> 屬性所得到之字串陣列的大小。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 類別的新執行個體。</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">此物件內還含有其他物件，回呼實作會負責將值填入這些物件內。</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">將 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委派具現化的方法。</param>
      <param name="ids" vsli:raw="The string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">經由 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> 屬性取得的字串陣列。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary vsli:raw="Gets the callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">取得建立 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委派之執行個體的回呼方法。</summary>
      <returns vsli:raw="The callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">建立 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委派之執行個體的回呼方法。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary vsli:raw="Gets or sets an array of keys for the objects that belong to the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source&quot; /&gt; property whose values get filled in by the callback implementation.">取得或設定屬於 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> 屬性之物件的索引鍵陣列。回呼實作會負責將值填入這些屬性內。</summary>
      <returns vsli:raw="The array of keys.">索引鍵的陣列。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary vsli:raw="Gets or sets the object that contains other objects whose values get filled in by the callback implementation.">取得或設定一個物件，其中含有其他物件，回呼實作會負責將值填入這些物件內。</summary>
      <returns vsli:raw="The source containing objects with values to fill.">包含要填入值之物件的來源。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary vsli:raw="Delegate that is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for serialization of types from SOAP-encoded, non-root XML data.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別對 SOAP 編碼之非根 XML 資料中的型別進行序列化時所使用的委派。</summary>
      <param name="o" vsli:raw="The object being serialized.">正在序列化的物件。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary vsli:raw="Represents an abstract class used for controlling serialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">表示由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別 (Class) 用來控制序列化 (Serialization) 的抽象類別。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate and the type it applies to, for a later invocation.">儲存 <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 委派 (Delegate) 的實作及它所套用的型別，以供稍後的引動過程使用。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of objects that are serialized.">進行序列化之物件的 <see cref="T:System.Type" />。</param>
      <param name="typeName" vsli:raw="The name of the type of objects that are serialized.">進行序列化之物件的型別名稱。</param>
      <param name="typeNs" vsli:raw="The namespace of the type of objects that are serialized.">進行序列化之物件的型別命名空間。</param>
      <param name="callback" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 委派的執行個體。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates an unexpected name for an element that adheres to an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration.">建立 <see cref="T:System.InvalidOperationException" />，表示符合 XML 結構描述 <see langword="choice" /> 項目宣告的項目含有非預期的名稱。</summary>
      <param name="value" vsli:raw="The name that is not valid.">無效的名稱。</param>
      <param name="identifier" vsli:raw="The &lt;see langword=&quot;choice&quot; /&gt; element declaration that the name belongs to.">名稱所屬的 <see langword="choice" /> 項目宣告。</param>
      <param name="name" vsli:raw="The expected local name of an element.">項目的預期區域名稱。</param>
      <param name="ns" vsli:raw="The expected namespace of an element.">項目的預期命名空間。</param>
      <returns vsli:raw="The newly created exception.">新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">建立 <see cref="T:System.InvalidOperationException" />，表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 已經套用至某個無效的成員。只有型別為 <see cref="T:System.Xml.XmlNode" /> 的成員或衍生自 <see cref="T:System.Xml.XmlNode" /> 的成員才是有效成員。</summary>
      <param name="o" vsli:raw="The object that represents the invalid member.">表示無效成員的物件。</param>
      <returns vsli:raw="The newly created exception.">新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">建立 <see cref="T:System.InvalidOperationException" />，表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 已經套用至某個無效的成員。只有型別為 <see cref="T:System.Xml.XmlNode" /> 的成員或衍生自 <see cref="T:System.Xml.XmlNode" /> 的成員才是有效成員。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is invalid.">無效的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The newly created exception.">新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates a failure while writing an array where an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration is applied.">建立 <see cref="T:System.InvalidOperationException" />，表示在寫入套用 XML 結構描述 <see langword="choice" /> 項目宣告的位置時，發生失敗。</summary>
      <param name="type" vsli:raw="The type being serialized.">將序列化的型別。</param>
      <param name="identifier" vsli:raw="A name for the &lt;see langword=&quot;choice&quot; /&gt; element declaration.">
        <see langword="choice" /> 項目宣告的名稱。</param>
      <returns vsli:raw="The newly created exception.">新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; for an invalid enumeration value.">建立無效列舉值的 <see cref="T:System.InvalidOperationException" />。</summary>
      <param name="value" vsli:raw="An object that represents the invalid enumeration.">表示無效列舉型別的物件。</param>
      <param name="typeName" vsli:raw="The XML type name.">XML 型別名稱。</param>
      <returns vsli:raw="The newly created exception.">新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a value for an XML element does not match an enumeration type.">建立 <see cref="T:System.InvalidOperationException" />，表示 XML 項目的值與列舉型別不符。</summary>
      <param name="value" vsli:raw="The value that is not valid.">無效的值。</param>
      <param name="elementName" vsli:raw="The name of the XML element with an invalid value.">含有無效值之 XML 項目的名稱。</param>
      <param name="enumValue" vsli:raw="The valid value.">有效值。</param>
      <returns vsli:raw="The newly created exception.">新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an XML element that should adhere to the XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration cannot be processed.">建立 <see cref="T:System.InvalidOperationException" />，表示無法處理應符合 XML 結構描述 <see langword="any" /> 項目宣告的 XML 項目。</summary>
      <param name="name" vsli:raw="The XML element that cannot be processed.">無法處理的 XML 項目。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 項目的命名空間。</param>
      <returns vsli:raw="The newly created exception.">新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">建立 <see cref="T:System.InvalidOperationException" />，其表示正在序列化的型別並未以有效的方式使用，或是在非預期情況下遇到此型別。</summary>
      <param name="o" vsli:raw="The object whose type cannot be serialized.">無法序列化之型別的物件。</param>
      <returns vsli:raw="The newly created exception.">新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">建立 <see cref="T:System.InvalidOperationException" />，其表示正在序列化的型別並未以有效的方式使用，或是在非預期情況下遇到此型別。</summary>
      <param name="type" vsli:raw="The type that cannot be serialized.">無法序列化的型別。</param>
      <returns vsli:raw="The newly created exception.">新建立的例外狀況。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary vsli:raw="Processes a base-64 byte array.">處理 Base-64 位元組陣列。</summary>
      <param name="value" vsli:raw="A base-64 &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Base-64 <see cref="T:System.Byte" /> 陣列。</param>
      <returns vsli:raw="The same byte array that was passed in as an argument.">當做引數傳入的相同位元組陣列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary vsli:raw="Produces a string from an input hexadecimal byte array.">從輸入十六進位位元組陣列產生字串。</summary>
      <param name="value" vsli:raw="A hexadecimal byte array to translate to a string.">要轉譯成字串的十六進位位元組陣列。</param>
      <returns vsli:raw="The byte array value converted to a string.">轉換成字串的位元組陣列值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.Char&quot; /&gt;.">從輸入 <see cref="T:System.Char" /> 產生字串。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; to translate to a string.">要轉譯成字串的 <see cref="T:System.Char" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Char&quot; /&gt; value converted to a string.">轉換成字串的 <see cref="T:System.Char" /> 值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">從 <see cref="T:System.DateTime" /> 物件產生字串。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">要轉譯成字串的 <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date but no time.">
        <see cref="T:System.DateTime" /> 的字串表示，其中顯示日期但不顯示時間。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">從輸入 <see cref="T:System.DateTime" /> 產生字串。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">要轉譯成字串的 <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date and time.">
        <see cref="T:System.DateTime" /> 的字串表示，其中顯示日期和時間。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary vsli:raw="Produces a string that consists of delimited identifiers that represent the enumeration members that have been set.">產生含有分隔識別項的字串，表示已經設定的列舉型別成員。</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">列舉值，當做一系列的位元 <see langword="OR" /> 運算。</param>
      <param name="values" vsli:raw="The enumeration's name values.">列舉型別的名稱值。</param>
      <param name="ids" vsli:raw="The enumeration's constant values.">列舉型別的常數值。</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each represents a member from the set enumerator list.">含有分隔識別項的字串，其中每個識別項都表示已設定之列舉值清單中的成員。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary vsli:raw="Takes a numeric enumeration value and the names and constants from the enumerator list for the enumeration and returns a string that consists of delimited identifiers that represent the enumeration members that have been set.">採用數值列舉值以及列舉型別之列舉值清單中的名稱與常數，並傳回含有分隔識別項的字串，表示已經設定的列舉型別成員。</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">列舉值，當做一系列的位元 <see langword="OR" /> 運算。</param>
      <param name="values" vsli:raw="The values of the enumeration.">列舉型別的值。</param>
      <param name="ids" vsli:raw="The constants of the enumeration.">列舉型別的常數。</param>
      <param name="typeName" vsli:raw="The name of the type.">型別的名稱。</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each item is one of the values set by the bitwise operation.">含有分隔識別項的字串，其中每個項目都是位元運算所設定的其中一個值。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">從 <see cref="T:System.DateTime" /> 物件產生字串。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that is translated to a string.">轉譯成字串的 <see cref="T:System.DateTime" />。</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object that shows the time but no date.">
        <see cref="T:System.DateTime" /> 物件的字串表示，其中顯示時間但不顯示日期。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary vsli:raw="Encodes a valid XML name by replacing characters that are not valid with escape sequences.">藉由使用逸出序列 (Escape Sequence) 取代無效的字元，對有效的 XML 名稱進行編碼。</summary>
      <param name="name" vsli:raw="A string to be used as an XML name.">要當做 XML 名稱使用的字串。</param>
      <returns vsli:raw="An encoded string.">編碼字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary vsli:raw="Encodes a valid XML local name by replacing characters that are not valid with escape sequences.">藉由使用逸出序列取代無效的字元，對有效的 XML 區域名稱進行編碼。</summary>
      <param name="ncName" vsli:raw="A string to be used as a local (unqualified) XML name.">要當做區域 (非限定) XML 名稱使用的字串。</param>
      <returns vsli:raw="An encoded string.">編碼字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary vsli:raw="Encodes an XML name.">對 XML 名稱進行編碼。</summary>
      <param name="nmToken" vsli:raw="An XML name to be encoded.">要編碼的 XML 名稱。</param>
      <returns vsli:raw="An encoded string.">編碼字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary vsli:raw="Encodes a space-delimited sequence of XML names into a single XML name.">將以空格分隔的 XML 名稱序列編碼成單一 XML 名稱。</summary>
      <param name="nmTokens" vsli:raw="A space-delimited sequence of XML names to be encoded.">要編碼之以空格分隔的 XML 名稱序列。</param>
      <returns vsli:raw="An encoded string.">編碼字串。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an XML qualified name, with invalid characters replaced by escape sequences.">傳回 XML 限定名稱 (Qualified Name)，並以逸出序列取代無效的字元。</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示要寫入的 XML。</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">XML 限定名稱，並以逸出序列取代無效的字元。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary vsli:raw="Produces a string that can be written as an XML qualified name, with invalid characters replaced by escape sequences.">產生可寫入成為 XML 限定名稱的字串，並以逸出序列取代無效的字元。</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">
        <see cref="T:System.Xml.XmlQualifiedName" />，表示要寫入的 XML。</param>
      <param name="ignoreEmpty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore empty spaces in the string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示忽略字串中的空白空間，否則為 <see langword="false" />。</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">XML 限定名稱，並以逸出序列取代無效的字元。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary vsli:raw="Initializes an instances of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate to serialize SOAP-encoded XML data.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 委派的執行個體，以序列化 SOAP 編碼的 XML 資料。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">根據名稱取得動態產生的組件。</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">組件的完整名稱。</param>
      <returns vsli:raw="A dynamically generated assembly.">動態產生的組件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary vsli:raw="Initializes object references only while serializing a SOAP-encoded SOAP message.">只有在序列化 SOAP 編碼的 SOAP 訊息時才初始化物件參考。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute that has no namespace specified for its name.">指示 <see cref="T:System.Xml.XmlWriter" /> 物件寫入沒有針對名稱指定命名空間的 XML 屬性。</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 屬性的區域名稱。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">當做位元組陣列的 XML 屬性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write an XML attribute that has no namespace specified for its name.">指示 <see cref="T:System.Xml.XmlWriter" /> 寫入沒有針對名稱指定命名空間的 XML 屬性。</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 屬性的區域名稱。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">當做字串的 XML 屬性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute.">指示 <see cref="T:System.Xml.XmlWriter" /> 物件寫入 XML 屬性。</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 屬性的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">XML 屬性的命名空間。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">當做位元組陣列的 XML 屬性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute.">寫入 XML 屬性。</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 屬性的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">XML 屬性的命名空間。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">當做字串的 XML 屬性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute where the namespace prefix is provided manually.">寫入 XML 屬性，其中命名空間前置詞是以手動方式提供。</summary>
      <param name="prefix" vsli:raw="The namespace prefix to write.">要寫入的命名空間前置詞。</param>
      <param name="localName" vsli:raw="The local name of the XML attribute.">XML 屬性的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace represented by the prefix.">前置詞所表示的命名空間。</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">當做字串的 XML 屬性值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes an XML node object within the body of a named XML element.">在具名 XML 項目的主體內寫入 XML 節點物件。</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">要寫入的 XML 節點，可能是子 XML 項目。</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">要寫入之父 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">要寫入之父 XML 項目的命名空間。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果要序列化的物件是 <see langword="true" />，則 <see langword="xsi:nil='true'" /> 表示要寫入 <see langword="null" /> 屬性，否則為 <see langword="false" />。</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示節點 (如果是 XML 項目的話) 符合 XML 結構描述 <see langword="any" /> 項目宣告，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object within the body of a named XML element.">指示 <see cref="T:System.Xml.XmlWriter" /> 物件在具名 XML 項目的主體內寫入 <see cref="T:System.Xml.XmlNode" /> 物件。</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">要寫入的 XML 節點，可能是子 XML 項目。</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">要寫入之父 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">要寫入之父 XML 項目的命名空間。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果要序列化的物件是 <see langword="true" />，則 <see langword="xsi:nil='true'" /> 表示要寫入 <see langword="null" /> 屬性，否則為 <see langword="false" />。</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示節點 (如果是 XML 項目的話) 符合 XML 結構描述 <see langword="any" /> 項目宣告，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">以其主體中指定的限定名稱寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">在項目文字中要寫入的名稱 (如果有限定命名空間，則使用它的前置詞)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">以其主體中指定的限定名稱寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">在項目文字中要寫入的名稱 (如果有限定命名空間，則使用它的前置詞)。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">以其主體中指定的限定名稱寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">在項目文字中要寫入的名稱 (如果有限定命名空間，則使用它的前置詞)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">以其主體中指定的限定名稱寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">在項目文字中要寫入的名稱 (如果有限定命名空間，則使用它的前置詞)。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element to be written without namespace qualification.">要寫入之 XML 項目的區域名稱，但不含命名空間限定條件。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 項目的文字值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 項目的文字值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 項目的文字值。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 項目的文字值。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 項目的文字值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 項目的文字值。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 項目的文字值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 項目的文字值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 項目的文字值。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 項目的文字值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 項目的文字值。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">以其主體中指定的值寫入 XML 項目。</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">XML 項目的區域名稱。</param>
      <param name="value" vsli:raw="The text value of the XML element.">XML 項目的文字值。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">寫入主體為空白的 XML 項目。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">寫入主體為空白的 XML 項目。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">寫入 <see langword="&lt;closing&gt;" /> 項目標記。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">寫入 <see langword="&lt;closing&gt;" /> 項目標記。</summary>
      <param name="o" vsli:raw="The object being serialized.">正在序列化的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;id&quot; /&gt; attribute that appears in a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">寫入在 SOAP 編碼 <see langword="id" /> 項目內顯示的 <see langword="multiRef" /> 屬性。</summary>
      <param name="o" vsli:raw="The object being serialized.">正在序列化的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes the namespace declaration attributes.">寫入命名空間宣告屬性。</summary>
      <param name="xmlns" vsli:raw="The XML namespaces to declare.">要宣告的 XML 命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">寫入主體包含有效 XML 限定名稱的 XML 項目。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">要寫入 XML 項目主體的 XML 限定名稱。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">寫入主體包含有效 XML 限定名稱的 XML 項目。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">要寫入 XML 項目主體的 XML 限定名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">寫入含有字串做為主體的 XML 項目。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">要寫入 XML 項目主體的字串。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">寫入位元組陣列做為 XML 項目主體。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">要寫入 XML 項目主體的位元組陣列。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">寫入含有字串做為主體的 XML 項目。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">要寫入 XML 項目主體的字串。</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">要寫入至 <see langword="xsi:type" /> 屬性的 XML 結構描述資料型別名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">寫入含有字串做為主體的 XML 項目。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">要寫入 XML 項目主體的字串。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">寫入位元組陣列做為 XML 項目主體。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">要寫入 XML 項目主體的位元組陣列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts a &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">寫入含有字串做為主體的 XML 項目。 如果字串的值為 <see langword="xsi:nil='true'" />，則 <see cref="T:System.Xml.XmlWriter" /> 會插入 <see langword="null" /> 屬性。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">要寫入 XML 項目主體的字串。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">以 <see langword="xsi:nil='true'" /> 屬性寫入 XML 項目。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">以 <see langword="xsi:nil='true'" /> 屬性寫入 XML 項目。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">以 <see langword="xsi:nil='true'" /> 屬性寫入 XML 項目。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">以 <see langword="xsi:nil='true'" /> 屬性寫入 XML 項目。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">寫入可以包含指定物件之 <see langword="&lt;multiRef&gt;" /> XML 項目參照的 SOAP 訊息 XML 項目。</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">正在序列化的物件 (位於目前的 XML 項目中或目前項目所參考的 <see langword="multiRef" /> 項目中)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">寫入可以包含指定物件之 <see langword="&lt;multiRef&gt;" /> XML 項目參照的 SOAP 訊息 XML 項目。</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">正在序列化的物件 (位於目前的 XML 項目中或目前項目所參考的 <see langword="multiRef" /> 項目中)。</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">儲存在物件之型別對應中的型別 (相對於直接透過 <see langword="typeof" /> 作業找到的物件型別)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">寫入可以包含指定物件之 <see langword="&lt;multiRef&gt;" /> XML 項目參照的 SOAP 訊息 XML 項目。</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">正在序列化的物件 (位於目前的 XML 項目中或目前項目所參考的 <see langword="multiRef" /> 項目中)。</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">儲存在物件之型別對應中的型別 (相對於直接透過 <see langword="typeof" /> 作業找到的物件型別)。</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示要將物件直接序列化成 XML 項目，而非讓項目參考另一個包含資料的項目，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; XML element for a given object.">寫入可以包含指定物件之 <see langword="multiRef" /> XML 項目參照的 SOAP 訊息 XML 項目。</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">正在序列化的物件 (位於目前的 XML 項目中或目前項目所參考的 <see langword="multiRef" /> 項目中)。</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">儲存在物件之型別對應中的型別 (相對於直接透過 <see langword="typeof" /> 作業找到的物件型別)。</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示要將物件直接序列化成 XML 項目，而非讓項目參考另一個包含資料的項目，否則為 <see langword="false" />。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果要序列化的物件是 <see langword="true" />，則 <see langword="xsi:nil='true'" /> 表示要寫入 <see langword="null" /> 屬性，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary vsli:raw="Serializes objects into SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML elements in a SOAP message.">將物件序列化成 SOAP 訊息中的 SOAP 編碼 <see langword="multiRef" /> XML 項目。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">寫入包含指定物件之 <see langword="multiRef" /> 項目參考的 SOAP 訊息 XML 項目。</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">正在寫入之參考項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">正在寫入之參考項目的命名空間。</param>
      <param name="o" vsli:raw="The object being serialized.">正在序列化的物件。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">寫入包含指定物件之 <see langword="multiRef" /> 項目參考的 SOAP 訊息 XML 項目。</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">正在寫入之參考項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">正在寫入之參考項目的命名空間。</param>
      <param name="o" vsli:raw="The object being serialized.">正在序列化的物件。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果要序列化的物件是 <see langword="true" />，則 <see langword="xsi:nil='true'" /> 表示要寫入 <see langword="null" /> 屬性，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary vsli:raw="Writes a SOAP 1.2 RPC result element with a specified qualified name in its body.">將含有指定之限定名稱的 SOAP 1.2 RPC 結果項目寫入其主體中。</summary>
      <param name="name" vsli:raw="The local name of the result body.">結果主體的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the result body.">結果主體的命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an object that uses custom XML formatting as an XML element.">寫入使用自訂 XML 格式做為 XML 項目的物件。</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">實作使用自訂 XML 格式之 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 介面的物件。</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; class object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 類別物件是 <see langword="true" />，則 <see langword="xsi:nil='true'" /> 表示要寫入 <see langword="null" /> 屬性，否則為<see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write an object that uses custom XML formatting as an XML element.">指示 <see cref="T:System.Xml.XmlNode" /> 寫入使用自訂 XML 格式做為 XML 項目的物件。</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">實作使用自訂 XML 格式之 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 介面的物件。</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 物件是 <see langword="true" />，則 <see langword="xsi:nil='true'" /> 表示要寫入 <see langword="null" /> 屬性，否則為<see langword="false" />。</param>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore writing the opening element tag; otherwise, &lt;see langword=&quot;false&quot; /&gt; to write the opening element tag.">
        <see langword="true" /> 表示忽略寫入開頭項目標記，而 <see langword="false" /> 則表示寫入開頭項目標記。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration if the writer is positioned at the start of an XML document.">如果寫入器位於 XML 文件的開頭，則寫入 XML 宣告。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">寫入開頭項目標記，包括任何屬性在內。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">寫入開頭項目標記，包括任何屬性在內。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">寫入開頭項目標記，包括任何屬性在內。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示如果指定的命名空間沒有可用的前置詞，則寫入含有前置詞的項目名稱，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">寫入開頭項目標記，包括任何屬性在內。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">正在序列化的物件，當做 XML 項目。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">寫入開頭項目標記，包括任何屬性在內。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">正在序列化的物件，當做 XML 項目。</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示如果指定的命名空間沒有可用的前置詞，則寫入含有前置詞的項目名稱，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">寫入開頭項目標記，包括任何屬性在內。</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">要寫入之 XML 項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">要寫入之 XML 項目的命名空間。</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">正在序列化的物件，當做 XML 項目。</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示如果指定的命名空間沒有可用的前置詞，則寫入含有前置詞的項目名稱，否則為 <see langword="false" />。</param>
      <param name="xmlns" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class that contains prefix and namespace pairs to be used in the generated XML.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 類別的執行個體，包含要在產生之 XML 中使用的前置詞和命名空間配對。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an XML element whose text body is a value of a simple XML Schema data type.">寫入文字主體為簡單 XML 結構描述資料型別之值的 XML 項目。</summary>
      <param name="name" vsli:raw="The local name of the element to write.">要寫入之項目的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of the element to write.">要寫入之項目的命名空間。</param>
      <param name="o" vsli:raw="The object to be serialized in the element body.">項目主體中要序列化的物件。</param>
      <param name="xsiType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML element explicitly specifies the text value's type using the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 XML 項目會使用 <see langword="true" /> 屬性明確指定文字值的型別，則為 <see langword="xsi:type" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary vsli:raw="Writes a base-64 byte array.">寫入 Base-64 位元組陣列。</summary>
      <param name="value" vsli:raw="The byte array to write.">要寫入的位元組陣列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a specified string value.">寫入指定的字串值。</summary>
      <param name="value" vsli:raw="The value of the string to write.">要寫入的字串的值。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; as an XML attribute.">寫入指定的 <see cref="T:System.Xml.XmlNode" /> 做為 XML 屬性。</summary>
      <param name="node" vsli:raw="The XML node to write.">要寫入的 XML 節點。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object as an XML attribute.">寫入指定的 <see cref="T:System.Xml.XmlNode" /> 物件做為 XML 屬性。</summary>
      <param name="node" vsli:raw="The XML node to write.">要寫入的 XML 節點。</param>
      <param name="container" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; object (or &lt;see langword=&quot;null&quot; /&gt;) used to generate a qualified name value for an &lt;see langword=&quot;arrayType&quot; /&gt; attribute from the Web Services Description Language (WSDL) namespace (&quot;http://schemas.xmlsoap.org/wsdl/&quot;).">用來產生 Web 服務描述語言 (WSDL) 命名空間 ("http://schemas.xmlsoap.org/wsdl/") \(英文\) 的 <see langword="arrayType" /> 屬性之限定名稱值的 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 物件 (或 <see langword="null" />)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for an XML element that is being serialized into a document.">寫入正要序列化成文件之 XML 項目的 <see langword="xsi:type" /> 屬性。</summary>
      <param name="name" vsli:raw="The local name of an XML Schema data type.">XML 結構描述資料型別的區域名稱。</param>
      <param name="ns" vsli:raw="The namespace of an XML Schema data type.">XML 結構描述資料型別的命名空間。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; method is used to write valid XML.">取得或設定值，指出是否會使用 <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> 方法來寫入有效的 XML。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)&quot; /&gt; method returns an encoded name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> 方法會傳回已編碼的名稱，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary vsli:raw="Gets or sets a list of XML qualified name objects that contain the namespaces and prefixes used to produce qualified names in XML documents.">取得或設定 XML 限定名稱物件的清單，這些物件含有用來在 XML 文件中產生限定名稱的命名空間和前置詞。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the namespaces and prefix pairs.">
        <see cref="T:System.Collections.ArrayList" />，其中含有命名空間和前置詞組。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">取得或設定 <see cref="T:System.Xml.XmlWriter" /> 所使用的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used by the class instance.">類別執行個體所使用的 <see cref="T:System.Xml.XmlWriter" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary vsli:raw="Serializes and deserializes objects into and from XML documents. The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; enables you to control how objects are encoded into XML.">將物件序列化為 XML 文件，以及從 XML 文件將物件還原序列化。 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可讓您控制如何將物件編碼為 XML。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML attribute of unknown type during deserialization.">當還原序列化期間，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 遭遇未知型別的 XML 屬性時發生。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML element of unknown type during deserialization.">當還原序列化期間，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 遭遇未知型別的 XML 項目時發生。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML node of unknown type during deserialization.">當還原序列化期間，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 遭遇未知型別的 XML 節點時發生。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary vsli:raw="Occurs during deserialization of a SOAP-encoded XML stream, when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters a recognized type that is not used or is unreferenced.">在 SOAP 編碼的 XML 資料流還原序列化期間，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 遇到未使用 (未參考) 的可辨認型別時發生。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將指定型別的物件序列化為 XML 文件，並可將 XML 文件還原序列化為指定型別的物件。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的物件型別。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將指定型別的物件序列化為 XML 文件，並可將 XML 文件還原序列化為指定型別的物件。 指定所有 XML 項目的預設命名空間。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的物件型別。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">用於所有 XML 項目的預設命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將指定型別的物件序列化為 XML 文件，並可將 XML 文件還原序列化為指定型別的物件。 如果屬性或欄位傳回陣列，<paramref name="extraTypes" /> 參數就會指定可插入陣列的物件。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的物件型別。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將指定型別的物件序列化為 XML 文件，並可將 XML 文件還原序列化為指定型別的物件。 每個要序列化的物件本身會包含類別執行個體，這個多載可以其他類別覆寫。</summary>
      <param name="type" vsli:raw="The type of the object to serialize.">要序列化的物件型別。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將 <see cref="T:System.Object" /> 型別的物件序列化為 XML 文件執行個體，並可將 XML 文件執行個體還原序列化為 <see cref="T:System.Object" /> 型別的物件。 每個要序列化的物件本身都可包含類別的執行個體，這個多載會使用其他類別對其進行覆寫。 這個多載也會指定所有 XML 項目的預設命名空間，以及要做為 XML 根項目的類別。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的物件型別。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，延伸或覆寫指定在 <paramref name="type" /> 參數中類別的行為。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">定義 XML 根項目屬性的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML 文件中所有 XML 項目的預設命名空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將 <see cref="T:System.Object" /> 型別的物件序列化為 XML 文件執行個體，並可將 XML 文件執行個體還原序列化為 <see cref="T:System.Object" /> 型別的物件。 每個要序列化的物件本身都可包含類別的執行個體，這個多載會使用其他類別對其進行覆寫。 這個多載也會指定所有 XML 項目的預設命名空間，以及要做為 XML 根項目的類別。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的物件型別。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，延伸或覆寫指定在 <paramref name="type" /> 參數中類別的行為。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">定義 XML 根項目屬性的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML 文件中所有 XML 項目的預設命名空間。</param>
      <param name="location" vsli:raw="The location of the types.">型別的位置。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的新執行個體，該類別可將指定型別的物件序列化為 XML 文件，並可將 XML 文件還原序列化為指定型別的物件。 它還指定做為 XML 根項目的類別。</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的物件型別。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">表示 XML 根項目的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">使用將一個型別對應到另一個型別的物件，初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的執行個體。</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">將某個型別對應至另一個型別的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize a specified XML document.">取得值，指出這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否可以還原序列化指定的 XML 文件。</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that points to the document to deserialize.">
        <see cref="T:System.Xml.XmlReader" />，指向要還原序列化的文件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize the object that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; points to; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可以還原序列化 <see cref="T:System.Xml.XmlReader" /> 所指向的物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary vsli:raw="Returns an object used to read the XML document to be serialized.">傳回物件，該物件用於讀取要序列化的 XML 文件。</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">當方法在子代類別中未覆寫時，會嘗試存取該方法。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; used to read the XML document.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" />，用於讀取 XML 文件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary vsli:raw="When overridden in a derived class, returns a writer used to serialize the object.">在衍生類別中覆寫時，傳回用於序列化物件的寫入器。</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">當方法在子代類別中未覆寫時，會嘗試存取該方法。</exception>
      <returns vsli:raw="An instance that implements the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">實作 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 類別的執行個體。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">還原序列化指定 <see cref="T:System.IO.Stream" /> 所包含的 XML 文件。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.IO.Stream" />，包含要還原序列化的 XML 文件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">要進行還原序列化的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">還原序列化指定 <see cref="T:System.IO.TextReader" /> 所包含的 XML 文件。</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.IO.TextReader" />，包含要還原序列化的 XML 文件。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">在還原序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">要進行還原序列化的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">還原序列化指定 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 所包含的 XML 文件。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" />，包含要還原序列化的 XML 文件。</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">當方法在子代類別中未覆寫時，會嘗試存取該方法。</exception>
      <returns vsli:raw="The deserialized object.">還原序列化的物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">還原序列化指定 <see cref="T:System.Xml.XmlReader" /> 所包含的 XML 文件。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.XmlReader" />，包含要還原序列化的 XML 文件。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">在還原序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">要進行還原序列化的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and encoding style.">還原序列化指定 <see cref="T:System.Xml.XmlReader" /> 和編碼樣式所包含的 XML 文件。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.XmlReader" />，包含要還原序列化的 XML 文件。</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">序列化 XML 的編碼樣式。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">在還原序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
      <returns vsli:raw="The deserialized object.">還原序列化的物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes the object using the data contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">使用指定 <see cref="T:System.Xml.XmlReader" /> 包含的資料，還原序列化物件。</summary>
      <param name="xmlReader" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class used to read the document.">
        <see cref="T:System.Xml.XmlReader" /> 類別的執行個體，用於讀取文件。</param>
      <param name="encodingStyle" vsli:raw="The encoding used.">使用的編碼方式。</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 類別的執行個體。</param>
      <returns vsli:raw="The object being deserialized.">正在還原序列化的物件。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes an XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and allows the overriding of events that occur during deserialization.">還原序列化指定 <see cref="T:System.Xml.XmlReader" /> 包含的 XML 文件，並允許覆寫還原序列化期間發生的事件。</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the document to deserialize.">
        <see cref="T:System.Xml.XmlReader" />，包含要還原序列化的文件。</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 類別的執行個體。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">要進行還原序列化的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; objects.">傳回建立自 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件陣列的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 物件陣列。</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 陣列，將一個型別對應至另一個型別。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class from the specified mappings.">傳回指定對應的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別執行個體。</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlMapping&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlMapping" /> 物件的陣列。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the deserialized object.">還原序列化物件的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的執行個體。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of types.">傳回由型別陣列建立的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件的陣列。</summary>
      <param name="types" vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; objects.">
        <see cref="T:System.Type" /> 物件的陣列。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary vsli:raw="Returns the name of the assembly that contains one or more versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; especially created to serialize or deserialize the specified type.">傳回組件名稱，該組件包含一個或多個 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 版本，是為序列化或還原序列化特定型別建立的。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are deserializing.">正在還原序列化的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The name of the assembly that contains an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for the type.">組件名稱，該組件包含型別的 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary vsli:raw="Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.">傳回組件名稱，該組件包含指定命名空間中指定型別的序列化程式。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are interested in.">您所要的 <see cref="T:System.Type" />。</param>
      <param name="defaultNamespace" vsli:raw="The namespace of the type.">型別的命名空間。</param>
      <returns vsli:raw="The name of the assembly that contains specially built serializers.">組件名稱，該組件包含特別建置的序列化程式。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">序列化指定的 <see cref="T:System.Object" />，並使用指定的 <see cref="T:System.IO.Stream" /> 將 XML 文件寫入檔案。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">用來寫入 XML 文件的 <see cref="T:System.IO.Stream" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">在序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that references the specified namespaces.">序列化指定的 <see cref="T:System.Object" />，並使用指定的 <see cref="T:System.IO.Stream" /> 將 XML 文件寫入檔案，以參考指定的命名空間。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">用來寫入 XML 文件的 <see cref="T:System.IO.Stream" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">物件所參考的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">在序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">序列化指定的 <see cref="T:System.Object" />，並使用指定的 <see cref="T:System.IO.TextWriter" /> 將 XML 文件寫入檔案。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">用來寫入 XML 文件的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and references the specified namespaces.">將指定的 <see cref="T:System.Object" /> 序列化，使用指定的 <see cref="T:System.IO.TextWriter" /> 將 XML 文件寫入檔案，並參考指定的命名空間。</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">用來寫入 XML 文件的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; that contains namespaces for the generated XML document.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />，包含產生之 XML 文件的命名空間。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">在序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">序列化指定的 <see cref="T:System.Object" />，並使用指定的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 將 XML 文件寫入檔案。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; used to write the XML document.">用來寫入 XML 文件的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">當方法在子代類別中未覆寫時，會嘗試存取該方法。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">序列化指定的 <see cref="T:System.Object" />，並使用指定的 <see cref="T:System.Xml.XmlWriter" /> 將 XML 文件寫入檔案。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">用來寫入 XML 文件的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">在序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces.">將指定的 <see cref="T:System.Object" /> 序列化，使用指定的 <see cref="T:System.Xml.XmlWriter" /> 將 XML 文件寫入檔案，並參考指定的命名空間。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">用來寫入 XML 文件的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Object" />。</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">物件所參考的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">在序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary vsli:raw="Serializes the specified object and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces and encoding style.">序列化指定的物件，使用指定的 <see cref="T:System.Xml.XmlWriter" /> 將 XML 文件寫入檔案，並參考指定的命名空間和編碼樣式。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">用來寫入 XML 文件的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">物件所參考的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">序列化 XML 的編碼樣式。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">在序列化期間發生錯誤。 可以使用 <see cref="P:System.Exception.InnerException" /> 屬性取得原始例外狀況。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, XML namespaces, and encoding.">序列化指定的 <see cref="T:System.Object" />，並使用指定的 <see cref="T:System.Xml.XmlWriter" />、XML 命名空間和編碼方式，將 XML 文件寫入檔案。</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">用來寫入 XML 文件的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <param name="namespaces" vsli:raw="An instance of the &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; that contains namespaces and prefixes to use.">
        <see langword="XmlSerializerNamespaces" /> 執行個體，包含要使用的命名空間和前置詞。</param>
      <param name="encodingStyle" vsli:raw="The encoding used in the document.">文件中使用的編碼方式。</param>
      <param name="id" vsli:raw="For SOAP encoded messages, the base used to generate id attributes.">若為 SOAP 編碼的訊息，則為用於產生 ID 屬性的基底。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary vsli:raw="Applied to a Web service client proxy, enables you to specify an assembly that contains custom-made serializers.">套用至 Web 服務用戶端 Proxy 後，就可讓您指定含有自訂序列化程式的組件。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name.">使用指定的組件名稱，初始化 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 類別的新執行個體。</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">簡單且未加密的組件名稱。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name and location of the assembly.">使用指定的組件名稱和組件位置，初始化 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 類別的新執行個體。</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">簡單且未加密的組件名稱。</param>
      <param name="codeBase" vsli:raw="A string that is the URL location of the assembly.">字串，是組件的 URL 位置。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains serializers for a specific set of types.">取得或設定組件的名稱，此組件中含有特定型別集合的序列化程式。</summary>
      <returns vsli:raw="The simple, unencrypted name of the assembly.">簡單且未加密的組件名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary vsli:raw="Gets or sets the location of the assembly that contains the serializers.">取得或設定包含序列化程式之組件的名稱。</summary>
      <returns vsli:raw="A location, such as a path or URI, that points to the assembly.">指向組件的位置，例如路徑或 URI。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary vsli:raw="Creates typed versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for more efficient serialization.">建立具型別版本的 <see cref="T:System.Xml.Serialization.XmlSerializer" />，以進行更有效率的序列化 (Serialization)。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerFactory&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type.">傳回用來序列化指定型別之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">特別為序列化指定型別所建立之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type and namespace.">傳回用來序列化指定型別和命名空間 (Namespace) 之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">用於所有 XML 項目的預設命名空間。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">特別為序列化指定型別所建立之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">傳回用來序列化指定型別之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。 如果屬性或欄位傳回陣列，<paramref name="extraTypes" /> 參數就會指定可插入陣列的物件。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生，此類別可將指定之型別的物件序列化為 XML 文件 (反之亦然)。 每個要序列化的物件本身會包含類別執行個體，這個多載可以其他類別覆寫。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，其中含有覆寫預設序列化行為的欄位。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生，此類別可將指定之型別的物件序列化為 XML 文件執行個體 (反之亦然)。 每個要序列化的物件本身會包含類別執行個體，這個多載可以其他類別覆寫。 這個多載也會指定所有 XML 項目的預設命名空間，以及要做為 XML 根項目的類別。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，其中含有覆寫預設序列化行為的欄位。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">表示 XML 根項目的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML 文件中所有 XML 項目的預設命名空間。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生，此類別可將指定之型別的物件序列化為 XML 文件執行個體 (反之亦然)。 每個要序列化的物件本身會包含類別執行個體，這個多載可以其他類別覆寫。 這個多載也會指定所有 XML 項目的預設命名空間，以及要做為 XML 根項目的類別。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">這個 <see cref="T:System.Type" /> 可序列化的物件 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the type parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，可延伸或覆寫在型別參數中指定的類別行為。</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">要序列化之其他物件型別的 <see cref="T:System.Type" /> 陣列。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">定義 XML 根項目屬性的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">XML 文件中所有 XML 項目的預設命名空間。</param>
      <param name="location" vsli:raw="The path that specifies the location of the types.">指定型別之位置的路徑。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Specifies the object that represents the XML root element.">傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生，此類別可將指定之型別的物件序列化為 XML 文件 (反之亦然)。 指定表示 XML 根項目 (Root Element) 的物件。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Type" />。</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">表示 XML 根項目的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的衍生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">使用將某個型別對應到另一個型別的物件，傳回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">將某個型別對應至另一個型別的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the mapped type.">特別為序列化對應型別所建立之 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的衍生。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary vsli:raw="Defines the reader, writer, and methods for pre-generated, typed serializers.">為預先產生且具類型的序列化程式定義讀取器、寫入器和方法。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerImplementation&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary vsli:raw="Gets a value that determines whether a type can be serialized.">取得可判斷某個類型是否能序列化的值。</summary>
      <param name="type" vsli:raw="The type to be serialized.">要序列化的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果類型可以序列化，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary vsli:raw="Returns a serializer for the specified type.">傳回指定類型的序列化程式。</summary>
      <param name="type" vsli:raw="The type to be serialized.">要序列化的型別。</param>
      <returns vsli:raw="An instance of a type derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">衍生自 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別的類型執行個體。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary vsli:raw="Gets the XML reader object that is used by the serializer.">取得序列化程式所使用的 XML 讀取器物件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that is used to read an XML document or data stream.">用來讀取 XML 文件或資料流的 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary vsli:raw="Gets the collection of methods that is used to read a data stream.">取得用來讀取資料流的方法集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">
        <see cref="T:System.Collections.Hashtable" />，其中包含方法。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary vsli:raw="Gets the collection of typed serializers that is found in the assembly.">取得具類型序列化程式的集合，此集合可在組件中找到。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the typed serializers.">
        <see cref="T:System.Collections.Hashtable" />，其中包含具型別序列化程式。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary vsli:raw="Gets the collection of methods that is used to write to a data stream.">取得用來寫入資料流的方法集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">
        <see cref="T:System.Collections.Hashtable" />，其中包含方法。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary vsli:raw="Gets the XML writer object for the serializer.">取得序列化程式的 XML 寫入器物件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; that is used to write to an XML data stream or document.">用來寫入 XML 資料流或文件的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary vsli:raw="Signifies that the code was generated by the serialization infrastructure and can be reused for increased performance, when this attribute is applied to an assembly.">表示序列化 (Serialization) 基礎結構已產生程式碼，而且在這項屬性 (Attribute) 套用至組件 (Assembly) 時，可重複使用此程式碼來提升效能。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class for the specified type.">為指定的型別初始化 <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> 類別的新執行個體。</summary>
      <param name="type" vsli:raw="The type that is being serialized.">正在序列化的型別。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary vsli:raw="Gets or sets the common language runtime (CLR) namespace of the assembly.">取得或設定組件的 Common Language Runtime (CLR) 命名空間。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the common language runtime (CLR) namespace of the assembly.">
        <see cref="T:System.String" />，包含組件的 Common Language Runtime (CLR) 命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary vsli:raw="Gets or sets the identity of the parent assembly.">取得或設定父組件的識別 (Identity)。</summary>
      <returns vsli:raw="The version of the parent assembly.">父組件的版本。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary vsli:raw="Gets or sets the type that the serializer operates on.">取得或設定序列化程式要在其上運作的型別。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be serialized.">要序列化的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary vsli:raw="Gets or sets the assembly's version number.">取得或設定組件的版本號碼。</summary>
      <returns vsli:raw="The version of the assembly.">組件的版本。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary vsli:raw="Controls the XML schema that is generated when the attribute target is serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">控制由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化屬性 (Attribute) 目標後所產生的 XML 結構描述。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 類別的新執行個體，並指定 XML 型別的名稱。</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">XML 型別的名稱，是 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化類別執行個體時所產生的 (並且對類別執行個體進行還原序列化時所辨識的)。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary vsli:raw="Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.">取得或設定值，判斷產生的結構描述型別是否為 XSD 匿名型別。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the resulting schema type is an XSD anonymous type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果產生的結構描述型別是 XSD 匿名型別則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in XML schema documents.">取得或設定值，指出是否將型別包含在 XML 結構描述文件中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in XML schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要將型別包含於 XML 結構描述文件中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">取得或設定 XML 型別的命名空間。</summary>
      <returns vsli:raw="The namespace of the XML type.">XML 型別的命名空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">取得或設定 XML 型別的名稱。</summary>
      <returns vsli:raw="The name of the XML type.">XML 型別的名稱。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary vsli:raw="Contains a mapping of one type to another.">包含某個類型與其他類型的對應。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary vsli:raw="The fully qualified type name that includes the namespace (or namespaces) and type.">完整類型名稱，其中包含命名空間和類型。</summary>
      <returns vsli:raw="The fully qualified type name.">完整類型名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary vsli:raw="Gets the type name of the mapped object.">取得對應物件的類型名稱。</summary>
      <returns vsli:raw="The type name of the mapped object.">對應之物件的型別名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary vsli:raw="Gets the XML element name of the mapped object.">取得對應物件的 XML 項目名稱。</summary>
      <returns vsli:raw="The XML element name of the mapped object. The default is the class name of the object.">對應之物件的 XML 項目名稱。 預設值為物件的類別名稱。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary vsli:raw="Gets the XML namespace of the mapped object.">取得對應物件的 XML 命名空間。</summary>
      <returns vsli:raw="The XML namespace of the mapped object. The default is an empty string (&quot;&quot;).">對應之物件的 XML 命名空間。 預設為空字串 ("")。</returns>
    </member>
  </members>
</doc>