<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.RegularExpressions</name>
  </assembly>
  <members>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary vsli:raw="Represents the results from a single successful subexpression capture.">Stellt die Ergebnisse einer einzelnen erfolgreichen Teilausdruckerfassung dar.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary vsli:raw="Retrieves the captured substring from the input string by calling the &lt;see cref=&quot;P:System.Text.RegularExpressions.Capture.Value&quot; /&gt; property.">Ruft die erfasste Teilzeichenfolge von der Eingabezeichenfolge durch Aufrufen der <see cref="P:System.Text.RegularExpressions.Capture.Value" />-Eigenschaft ab.</summary>
      <returns vsli:raw="The substring that was captured by the match.">Die Teilzeichenfolge, die von der Übereinstimmung aufgezeichnet wurde.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary vsli:raw="The position in the original string where the first character of the captured substring is found.">Die Position in der ursprünglichen Zeichenfolge, an der das erste Zeichen der aufgezeichneten Teilzeichenfolge gefunden wurde.</summary>
      <returns vsli:raw="The zero-based starting position in the original string where the captured substring is found.">Die nullbasierte Anfangsposition in der ursprünglichen Zeichenfolge, an der die aufgezeichnete Teilzeichenfolge gefunden wurde.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary vsli:raw="Gets the length of the captured substring.">Ruft die Länge der aufgezeichneten Teilzeichenfolge ab.</summary>
      <returns vsli:raw="The length of the captured substring.">Die Länge der aufgezeichneten Teilzeichenfolge.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary vsli:raw="Gets the captured substring from the input string.">Ruft die aufgezeichnete Teilzeichenfolge aus der Eingabezeichenfolge ab.</summary>
      <returns vsli:raw="The substring that is captured by the match.">Die Teilzeichenfolge, die von der Übereinstimmung aufgezeichnet wird.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary vsli:raw="Represents the set of captures made by a single capturing group. The collection is immutable (read-only) and has no public constructor.">Stellt den Satz von Erfassungen einer einzelnen Erfassungsgruppe dar. Die Auflistung ist unveränderlich (schreibgeschützt) und verfügt über keinen öffentlichen Konstruktor.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">Kopiert alle Elemente der Auflistung ab dem angegebenen Index in das angegebene Array.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Das Array, in das die Auflistung kopiert werden soll.</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where copying is to begin.">Die Position im Zielarray, an der mit dem Kopieren begonnen werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> liegt außerhalb der Grenzen von <paramref name="array" />.  
  
- oder - 
 <paramref name="arrayIndex" /> und <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> liegen außerhalb der Grenzen von <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Kopiert die Elemente der Auflistung in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than 0.">
        <paramref name="arrayIndex" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source collection is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Die Anzahl der Elemente in der Quellauflistung ist größer als der verfügbare Platz von <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Stellt einen Enumerator bereit, der die Auflistung durchläuft.</summary>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Capture&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">Ein Objekt, das alle <see cref="T:System.Text.RegularExpressions.Capture" />-Objekte innerhalb von <see cref="T:System.Text.RegularExpressions.CaptureCollection" /> enthält.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="item" vsli:raw="The object to add to the collection.">Das Objekt, das der Auflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">Ermittelt, ob die Auflistung einen bestimmten Wert enthält.</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">Das Objekt, das in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich der Wert <paramref name="item" /> in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="item" vsli:raw="The object to remove from the collection.">Das aus der Auflistung zu entfernende Objekt.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Bestimmt den Index eines bestimmten Elements in der Auflistung.</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">Das Objekt, das in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;item&quot; /&gt; if found in the list; otherwise, -1.">Der Index von <paramref name="item" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted.">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item" vsli:raw="The object to insert into the collection.">Das Objekt, das in die Auflistung eingefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="value" vsli:raw="The object to add to the collection.">Das Objekt, das der Auflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">Ermittelt, ob die Auflistung einen bestimmten Wert enthält.</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">Das Objekt, das in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Object" />-Klasse in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Bestimmt den Index eines bestimmten Elements in der Auflistung.</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">Das Objekt, das in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value" vsli:raw="The object to insert into the collection.">Das Objekt, das in die Auflistung eingefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="value" vsli:raw="The object to remove from the collection.">Das aus der Auflistung zu entfernende Objekt.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary vsli:raw="Gets the number of substrings captured by the group.">Ruft die Anzahl der Teilzeichenfolgen ab, die von der Gruppe erfasst wurden.</summary>
      <returns vsli:raw="The number of items in the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">Die Anzahl der Elemente in der <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread-safe).">Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher) ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">Ruft einen einzelnen Member der Auflistung ab.</summary>
      <param name="i" vsli:raw="Index into the capture collection.">Index in der Erfassungsauflistung.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt;.">
        <paramref name="i" /> ist kleiner als 0 oder größer als <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />.</exception>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">Die aufgezeichnete Teilzeichenfolge an Position <paramref name="i" /> der Auflistung.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection.">Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">Ruft das Element am angegebenen Index ab.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">Der nullbasierte Index des abzurufenden Elements.</param>
      <returns vsli:raw="The element at the specified index.">Das Element am angegebenen Index.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the collection has a fixed size.">Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe aufweist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, since the collection has a fixed size.">
        <see langword="true" />, da die Auflistung eine Fixed-Größe aufweist.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">Ruft das Element am angegebenen Index ab.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">Der nullbasierte Index des abzurufenden Elements.</param>
      <returns vsli:raw="The element at the specified index.">Das Element am angegebenen Index.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary vsli:raw="Represents the results from a single capturing group.">Stellt die Ergebnisse einer einzelnen Erfassungsgruppe dar.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Group&quot; /&gt; object equivalent to the one supplied that is safe to share between multiple threads.">Gibt ein dem bereitgestellten Objekt entsprechendes <see langword="Group" />-Objekt zurück, das auf sichere Weise von mehreren Threads gemeinsam verwendet werden kann.</summary>
      <param name="inner" vsli:raw="The input &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; object.">Das <see cref="T:System.Text.RegularExpressions.Group" />-Eingabeobjekt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="A regular expression &lt;see langword=&quot;Group&quot; /&gt; object.">Das <see langword="Group" />-Objekt eines regulären Ausdrucks.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary vsli:raw="Gets a collection of all the captures matched by the capturing group, in innermost-leftmost-first order (or innermost-rightmost-first order if the regular expression is modified with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option). The collection may have zero or more items.">Ruft eine Auflistung aller der Erfassungsgruppe entsprechenden Erfassungsübereinstimmungen in der Reihenfolge von innen nach außen und von links nach rechts ab (oder in der Reihenfolge von innen nach außen und von rechts nach links bei einer Änderung des regulären Ausdrucks mit der <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />-Option). Die Auflistung kann 0 (null) oder mehr Elemente enthalten.</summary>
      <returns vsli:raw="The collection of substrings matched by the group.">Die Auflistung der Teilzeichenfolge, die mit der Gruppe übereinstimmen.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Name">
      <summary vsli:raw="Returns the name of the capturing group represented by the current instance.">Gibt der Name der Erfassungsgruppe, die die aktuelle Instanz darstellt.</summary>
      <returns vsli:raw="The name of the capturing group represented by the current instance.">Der Name der Erfassungsgruppe, die die aktuelle Instanz darstellt.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary vsli:raw="Gets a value indicating whether the match is successful.">Ruft einen Wert ab, der angibt, ob die Übereinstimmung erfolgreich ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the match is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Übereinstimmung erfolgreich ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary vsli:raw="Returns the set of captured groups in a single match. The collection is immutable (read-only) and has no public constructor.">Gibt die Menge der Erfassungsgruppen in einer einzelnen Übereinstimmung zurück. Die Auflistung ist unveränderlich (schreibgeschützt) und verfügt über keinen öffentlichen Konstruktor.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the group collection contains a captured group identified by the specified name.">Bestimmt, ob die Gruppenauflistung eine erfasste Gruppe enthält, die durch den angegebenen Namen identifiziert wird.</summary>
      <param name="key" vsli:raw="A string with the name of the captured group to locate.">Eine Zeichenfolge mit dem Namen der erfassten Gruppe, die gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group collection contains a captured group identified by &lt;paramref name=&quot;key&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn die Gruppenauflistung eine erfasste Gruppe enthält, die durch <paramref name="key" /> identifiziert wird; anderenfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">Kopiert alle Elemente der Auflistung ab dem angegebenen Index in das angegebene Array.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Das Array, in das die Auflistung kopiert werden soll.</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where the copying is to begin.">Die Position im Zielarray, an der mit dem Kopieren begonnen werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.GroupCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> liegt außerhalb der Grenzen von <paramref name="array" />.

- oder -

<paramref name="arrayIndex" /> und <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> liegen außerhalb der Grenzen von <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)">
      <summary vsli:raw="Copies the elements of the group collection to a &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; array, starting at a particular array index.">Kopiert die Elemente der Gruppenauflistung in ein <see cref="T:System.Text.RegularExpressions.Group" />-Array, wobei an einem bestimmten Arrayindex begonnen wird.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the group collection. The array must have zero-based indexing.">Das eindimensionales Array, bei dem es sich um das Ziel der aus der Gruppenauflistung kopierten Elemente handelt. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is null.">
        <paramref name="array" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; is greater than the length of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> ist kleiner als Null.

- oder -

<paramref name="arrayIndex" /> ist größer als die Länge von <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; - &lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the group collection count.">Die Länge von <paramref name="array" /> - <paramref name="arrayIndex" /> ist kleiner als die Anzahl der Gruppen in der Auflistung.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Stellt einen Enumerator bereit, der die Auflistung durchläuft.</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">Ein Enumerator, der alle <see cref="T:System.Text.RegularExpressions.Group" />-Objekte in der <see cref="T:System.Text.RegularExpressions.GroupCollection" /> enthält.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Add(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="item" vsli:raw="The group to add to the collection.">Die zur Auflistung hinzuzufügende Gruppe.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Diese Methode wird nicht unterstützt. Dies ist eine schreibgeschützte Auflistung.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Diese Methode wird nicht unterstützt. Dies ist eine schreibgeschützte Auflistung.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Contains(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">Bestimmt, ob die Gruppenauflistung eine bestimmtes Gruppenelement enthält.</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">Die Gruppe, die in der Gruppenauflistung gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn das Gruppenelement in der Gruppenauflistung gefunden wurde; anderenfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Remove(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="item" vsli:raw="The group to remove.">Die zu entfernende Gruppe.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Diese Methode wird nicht unterstützt. Dies ist eine schreibgeschützte Auflistung.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Text#RegularExpressions#Group}}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">Stellt einen Enumerator bereit, der die Gruppenauflistung durchläuft.</summary>
      <returns vsli:raw="An enumerator that contains all names and objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; collection.">Ein Enumerator, der alle Namen und Objekte der <see cref="T:System.Text.RegularExpressions.Group" />-Auflistung enthält.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Group}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">Stellt einen Enumerator bereit, der die Gruppenauflistung durchläuft.</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the group collection.">Ein Enumerator, der alle <see cref="T:System.Text.RegularExpressions.Group" />-Objekte der Gruppenauflistung enthält.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#IndexOf(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">Bestimmt den Index einer bestimmten Gruppe in der Gruppenauflistung.</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">Die Gruppe, die in der Gruppenauflistung gesucht werden soll.</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">Der Index von <paramref name="item" />, sofern gefunden; andernfalls -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Insert(System.Int32,System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">Die Position, an der die Gruppe eingefügt werden soll.</param>
      <param name="item" vsli:raw="The group to insert.">Die einzufügende Gruppe.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Diese Methode wird nicht unterstützt. Dies ist eine schreibgeschützte Auflistung.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">Der nullbasierte Index der zu entfernenden Gruppe.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Diese Methode wird nicht unterstützt. Dies ist eine schreibgeschützte Auflistung.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="value" vsli:raw="The object to add to the group collection.">Das Objekt, das der Gruppenauflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Diese Methode wird nicht unterstützt. Dies ist eine schreibgeschützte Auflistung.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Diese Methode wird nicht unterstützt. Dies ist eine schreibgeschützte Auflistung.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">Bestimmt, ob die Gruppenauflistung eine bestimmtes Gruppenelement enthält.</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">Die Gruppe, die in der Gruppenauflistung gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn das Gruppenelement in der Gruppenauflistung gefunden wurde; anderenfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">Bestimmt den Index einer bestimmten Gruppe in der Gruppenauflistung.</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">Die Gruppe, die in der Gruppenauflistung gesucht werden soll.</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">Der Index von <paramref name="item" />, sofern gefunden; andernfalls -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">Die Position, an der die Gruppe eingefügt werden soll.</param>
      <param name="value" vsli:raw="The group to insert.">Die einzufügende Gruppe.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Diese Methode wird nicht unterstützt. Dies ist eine schreibgeschützte Auflistung.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="value" vsli:raw="The group to remove.">Die zu entfernende Gruppe.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Diese Methode wird nicht unterstützt. Dies ist eine schreibgeschützte Auflistung.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">Der nullbasierte Index der zu entfernenden Gruppe.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Diese Methode wird nicht unterstützt. Dies ist eine schreibgeschützte Auflistung.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)">
      <summary vsli:raw="Attempts to retrieve a group identified by the provided name key, if it exists in the group collection.">Versucht, eine durch den angegebenen Namensschlüssel identifizierte Gruppe abzurufen, wenn diese in der Gruppenauflistung vorhanden ist.</summary>
      <param name="key" vsli:raw="A string with the group name key to look for.">Eine Zeichenfolge mit dem zu suchenden Gruppennamenschlüssel.</param>
      <param name="value" vsli:raw="When the method returns, the group whose name is &lt;paramref name=&quot;key&quot; /&gt;, if it is found; otherwise, &lt;see langword=&quot;null&quot; /&gt; if not found.">Wenn die Methode zurückgegeben wird, die Gruppe, deren Name <paramref name="key" /> ist, falls gefunden; anderenfalls <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a group identified by the provided name key exists; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn eine anhand des angegebenen Namensschlüssel identifizierte Gruppe vor ist; anderenfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary vsli:raw="Returns the number of groups in the collection.">Gibt die Anzahl der Gruppen in der Auflistung zurück.</summary>
      <returns vsli:raw="The number of groups in the collection.">Die Anzahl der Gruppen in der Auflistung.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read-only.">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt; is synchronized (thread-safe).">Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Text.RegularExpressions.GroupCollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary vsli:raw="Enables access to a member of the collection by integer index.">Ermöglicht den Zugriff auf einen Member der Auflistung über einen Ganzzahlenindex.</summary>
      <param name="groupnum" vsli:raw="The zero-based index of the collection member to be retrieved.">Der nullbasierte Index des Auflistungsmembers, der abgerufen werden soll.</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupnum&quot; /&gt;.">Der Member der Auflistung, die durch <paramref name="groupnum" /> angegeben wird.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary vsli:raw="Enables access to a member of the collection by string index.">Ermöglicht den Zugriff auf einen Member der Auflistung über einen Zeichenfolgenindex.</summary>
      <param name="groupname" vsli:raw="The name of a capturing group.">Der Name der Erfassungsgruppe.</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupname&quot; /&gt;.">Der Member der Auflistung, die durch <paramref name="groupname" /> angegeben wird.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Keys">
      <summary vsli:raw="Gets a string enumeration that contains the name keys of the group collection.">Ruft eine Zeichenfolgenenumeration ab, die die Namensschlüssel der Gruppenauflistung enthält.</summary>
      <returns vsli:raw="The name keys of the group collection.">Die namens Schlüssel der Gruppen Auflistung.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Text.RegularExpressions.GroupCollection" /> synchronisiert werden kann.</summary>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object to synchronize.">Eine Kopie des zu synchronisierenden <see cref="T:System.Text.RegularExpressions.Match" />-Objekts.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Item(System.Int32)">
      <summary vsli:raw="Gets the group at the specified position in the collection.">Ruft die Gruppe an der angegebenen Position in der Auflistung ab.</summary>
      <param name="index" vsli:raw="The zero-based index of the group in the group collection.">Der nullbasierte Index der Gruppe in der Gruppenauflistung.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">Ein Element kann nicht festgelegt werden. Dies ist eine schreibgeschützte Auflistung.</exception>
      <returns vsli:raw="The group in the desired position.">Die Gruppe an der gewünschten Position.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the group collection has a fixed size.">Ruft einen Wert ab, der angibt, ob die Gruppenauflistung eine feste Größe aufweist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">Immer <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the group in the desired position.">Ruft die Gruppe an der gewünschten Position ab.</summary>
      <param name="index" vsli:raw="The zero-index position of the group in the group collection.">Die nullbasierte Indexposition der Gruppe in der Gruppenauflistung.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">Ein Element kann nicht festgelegt werden. Dies ist eine schreibgeschützte Auflistung.</exception>
      <returns vsli:raw="The group in the desired position.">Die Gruppe an der gewünschten Position.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Values">
      <summary vsli:raw="Gets a group enumeration with all the groups in the group collection.">Ruft eine Gruppenenumeration mit allen Gruppen in der Gruppenauflistung ab.</summary>
      <returns vsli:raw="A group enumeration.">Eine gruppenenumeration.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary vsli:raw="Represents the results from a single regular expression match.">Stellt die Ergebnisse aus einer einzelnen Übereinstimmung mit einem regulären Ausdruck dar.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).">Gibt ein neues <see cref="T:System.Text.RegularExpressions.Match" />-Objekt mit den Ergebnissen für die nächste Übereinstimmung zurück und beginnt dabei an der Endposition der vorherigen Übereinstimmung (mit dem Zeichen, das dem letzten übereinstimmenden Zeichen folgt).</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Es ist ein Timeout aufgetreten.</exception>
      <returns vsli:raw="The next regular expression match.">Die folgende Übereinstimmung für einen regulären Ausdruck.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary vsli:raw="Returns the expansion of the specified replacement pattern.">Gibt die Erweiterung des angegebenen Ersetzungsmusters zurück.</summary>
      <param name="replacement" vsli:raw="The replacement pattern to use.">Das zu verwendende Ersetzungsmuster.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="replacement" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Expansion is not allowed for this pattern.">Erweiterung ist für dieses Muster nicht zulässig.</exception>
      <returns vsli:raw="The expanded version of the &lt;paramref name=&quot;replacement&quot; /&gt; parameter.">Die erweiterte Version des <paramref name="replacement" />-Parameters.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; instance equivalent to the one supplied that is suitable to share between multiple threads.">Gibt eine der bereitgestellten Instanz entsprechende <see cref="T:System.Text.RegularExpressions.Match" />-Instanz zurück, die von mehreren Threads gemeinsam verwendet werden kann.</summary>
      <param name="inner" vsli:raw="A regular expression match equivalent to the one expected.">Eine der erwarteten Übereinstimmung entsprechende Übereinstimmung mit einem regulären Ausdruck.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="A regular expression match that is suitable to share between multiple threads.">Eine Übereinstimmung für einen regulären Ausdruck, die für mehrere Threads freigegeben werden kann.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary vsli:raw="Gets the empty group. All failed matches return this empty match.">Ruft die leere Gruppe ab. Alle fehlgeschlagenen Übereinstimmungen geben diese leere Übereinstimmung zurück.</summary>
      <returns vsli:raw="An empty match.">Eine leere Übereinstimmung.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary vsli:raw="Gets a collection of groups matched by the regular expression.">Ruft eine Auflistung der mit dem regulären Ausdruck übereinstimmenden Gruppen ab.</summary>
      <returns vsli:raw="The character groups matched by the pattern.">Die Zeichengruppen, die mit dem Muster übereinstimmen.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary vsli:raw="Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.  The collection is immutable (read-only) and has no public constructor. The &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex.Matches(System.String)&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt; object.">Stellt alle gefundenen Übereinstimmungen dar, die durch iteratives Anwenden eines Musters für reguläre Ausdrücke auf die Eingabezeichenfolge gefunden wurden.  Die Auflistung ist unveränderlich (schreibgeschützt) und verfügt über keinen öffentlichen Konstruktor. Die Methode <see cref="T:System.Text.RegularExpressions.Regex.Matches(System.String)" /> gibt ein <see cref="T:System.Text.RegularExpressions.MatchCollection" />-Objekt zurück.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array starting at the given index.">Kopiert alle Elemente der Auflistung ab dem angegebenen Index in das angegebene Array.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Das Array, in das die Auflistung kopiert werden soll.</param>
      <param name="arrayIndex" vsli:raw="The position in the array where copying is to begin.">Die Position im Array, an der mit dem Kopieren begonnen werden soll.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a multi-dimensional array.">
        <paramref name="array" /> ist ein mehrdimensionales Array.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> liegt außerhalb der Grenzen von <paramref name="array" />.  
  
- oder - 
 <paramref name="arrayIndex" /> und <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> liegen außerhalb der Grenzen von <paramref name="array" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Es ist ein Timeout aufgetreten.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Kopiert die Elemente der Auflistung in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Stellt einen Enumerator bereit, der die Auflistung durchläuft.</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Es ist ein Timeout aufgetreten.</exception>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt;.">Ein Objekt, das alle <see cref="T:System.Text.RegularExpressions.Match" />-Objekte innerhalb von <see cref="T:System.Text.RegularExpressions.MatchCollection" /> enthält.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Add(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="item" vsli:raw="The object to add to the collection.">Das Objekt, das der Auflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Contains(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">Ermittelt, ob die Auflistung einen bestimmten Wert enthält.</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">Das Objekt, das in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn sich der Wert <paramref name="item" /> in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Remove(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="item" vsli:raw="The object to remove from the collection.">Das aus der Auflistung zu entfernende Objekt.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was successfully removed from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is not found in the original collection.">
        <see langword="true" />, wenn <paramref name="item" /> erfolgreich aus der Auflistung entfernt wurde, andernfalls <see langword="false" />. Diese Methode gibt auch dann <see langword="false" /> zurück, wenn <paramref name="item" /> nicht in der ursprünglichen Auflistung gefunden wurde.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Match}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#IndexOf(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Bestimmt den Index eines bestimmten Elements in der Auflistung.</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">Das Objekt, das in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;item&quot; /&gt; if found in the list; otherwise, -1.">Der Index von <paramref name="item" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Insert(System.Int32,System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted.">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item" vsli:raw="The object to insert into the collection.">Das Objekt, das in die Auflistung eingefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="value" vsli:raw="The object to add to the collection.">Das Objekt, das der Auflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Removes all items from the collection.">Entfernt alle Elemente aus der Auflistung.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">Ermittelt, ob die Auflistung einen bestimmten Wert enthält.</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">Das Objekt, das in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Object" />-Klasse in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Bestimmt den Index eines bestimmten Elements in der Auflistung.</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">Das Objekt, das in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value" vsli:raw="The object to insert into the collection.">Das Objekt, das in die Auflistung eingefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="value" vsli:raw="The object to remove from the collection.">Das aus der Auflistung zu entfernende Objekt.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary vsli:raw="Gets the number of matches.">Ruft die Anzahl der Übereinstimmungen ab.</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Es ist ein Timeout aufgetreten.</exception>
      <returns vsli:raw="The number of matches.">Die Anzahl der Übereinstimmungen.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread-safe).">Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher) ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">Ruft einen einzelnen Member der Auflistung ab.</summary>
      <param name="i" vsli:raw="Index into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; collection.">Index in der <see cref="T:System.Text.RegularExpressions.Match" />-Auflistung.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt;.">
        <paramref name="i" /> ist kleiner als 0 (null) oder größer oder gleich <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Es ist ein Timeout aufgetreten.</exception>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">Die aufgezeichnete Teilzeichenfolge an Position <paramref name="i" /> der Auflistung.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection. This property always returns the object itself.">Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann. Diese Eigenschaft gibt immer das Objekt selbst zurück.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">Ruft das Element am angegebenen Index ab.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">Der nullbasierte Index des abzurufenden Elements.</param>
      <returns vsli:raw="The element at the specified index.">Das Element am angegebenen Index.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the collection has a fixed size.">Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe aufweist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">Ruft das Element am angegebenen Index ab.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">Der nullbasierte Index des abzurufenden Elements.</param>
      <returns vsli:raw="The element at the specified index.">Das Element am angegebenen Index.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary vsli:raw="Represents the method that is called each time a regular expression match is found during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">Stellt die Methode dar, die immer dann aufgerufen wird, wenn während eines <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />-Methodenvorgangs eine Übereinstimmung für einen regulären Ausdruck gefunden wird.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object that represents a single regular expression match during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">Das <see cref="T:System.Text.RegularExpressions.Match" />-Objekt, das eine einzelne Übereinstimmung mit einem regulären Ausdruck während eines <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />-Methodenvorgangs darstellt.</param>
      <returns vsli:raw="A string returned by the method that is represented by the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Eine Zeichenfolge, die von der durch den <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten dargestellten Methode zurückgegeben wird.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary vsli:raw="Represents an immutable regular expression.">Stellt einen unveränderlichen regulären Ausdruck dar.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary vsli:raw="Specifies that a pattern-matching operation should not time out.">Gibt an, dass bei einem Mustervergleichsvorgang kein Timeout angewendet werden sollte.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.internalMatchTimeout">
      <summary vsli:raw="The maximum amount of time that can elapse in a pattern-matching operation before the operation times out.">Die maximale Zeit, die ein Mustervergleichsvorgang ausgeführt werden kann, bevor des Timeout eintritt.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.Regex" />-Klasse.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class by using serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.Regex" />-Klasse mithilfe von serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that contains a serialized pattern and &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; information.">Das Objekt, das ein serialisiertes Muster und <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Informationen enthält.</param>
      <param name="context" vsli:raw="The destination for this serialization. (This parameter is not used; specify &lt;see langword=&quot;null&quot; /&gt;.)">Das Ziel dieser Serialisierung. (Dieser Parameter wird nicht verwendet, geben Sie <see langword="null" /> an.)</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The pattern that &lt;paramref name=&quot;info&quot; /&gt; contains is &lt;see langword=&quot;null&quot; /&gt;.">Das Muster, das diese <paramref name="info" /> enthält, ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; contains an invalid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; flag.">
        <paramref name="info" /> enthält ein ungültiges <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Flag.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.Regex" />-Klasse für den angegebenen regulären Ausdruck.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.Regex" />-Klasse für den angegebenen regulären Ausdruck mit Optionen zum Verändern des Musters.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">Eine bitweise Kombination der Enumerationswerte, die den regulären Ausdruck ändern.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; contains an invalid flag.">
        <paramref name="options" /> enthält ein ungültiges Flag.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern and a value that specifies how long a pattern matching method should attempt a match before it times out.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.Regex" />-Klasse für den angegebenen regulären Ausdruck mit Optionen, die das Muster und einen Wert ändern, der angibt, wie lange eine Mustervergleichsmethode versuchen sollte, eine Übereinstimmung zu finden, bevor ein Timeout eintritt.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">Eine bitweise Kombination der Enumerationswerte, die den regulären Ausdruck ändern.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, das angibt, dass die Methode kein Timeout haben sollte.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> ist kein gültiger <see cref="T:System.Text.RegularExpressions.RegexOptions" /> -Wert.  
  
- oder - 
 <paramref name="matchTimeout" /> ist negativ, null oder größer als ca. 24 Tage.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly.">Kompiliert ein oder mehrere angegebene <see cref="T:System.Text.RegularExpressions.Regex" />-Objekte in eine benannte Assembly.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Ein Array, das die zu kompilierenden regulären Ausdrücke beschreibt.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">Der Dateiname der Assembly.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">Der Wert der <see cref="P:System.Reflection.AssemblyName.Name" />-Eigenschaft des <paramref name="assemblyname" />-Parameters ist eine leere oder eine NULL-Zeichenfolge.  
  
- oder - 
Das Muster des regulären Ausdrucks eines oder mehrerer Objekte in <paramref name="regexinfos" /> enthält eine ungültige Syntax.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> oder <paramref name="regexinfos" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">Nur .NET Core: Das Erstellen einer Assembly aus kompilierten regulären Ausdrücken wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly with the specified attributes.">Kompiliert ein oder mehrere angegebene <see cref="T:System.Text.RegularExpressions.Regex" />-Objekte in eine benannte Assembly mit den angegebenen Attributen.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Ein Array, das die zu kompilierenden regulären Ausdrücke beschreibt.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">Der Dateiname der Assembly.</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">Ein Array, das die auf die Assembly anzuwendenden Attribute definiert.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">Der Wert der <see cref="P:System.Reflection.AssemblyName.Name" />-Eigenschaft des <paramref name="assemblyname" />-Parameters ist eine leere oder eine NULL-Zeichenfolge.  
  
- oder - 
Das Muster des regulären Ausdrucks eines oder mehrerer Objekte in <paramref name="regexinfos" /> enthält eine ungültige Syntax.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> oder <paramref name="regexinfos" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">Nur .NET Core: Das Erstellen einer Assembly aus kompilierten regulären Ausdrücken wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects and a specified resource file to a named assembly with the specified attributes.">Kompiliert ein oder mehrere angegebene <see cref="T:System.Text.RegularExpressions.Regex" />-Objekte und eine angegebene Ressourcendatei in eine benannte Assembly mit den angegebenen Attributen.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Ein Array, das die zu kompilierenden regulären Ausdrücke beschreibt.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">Der Dateiname der Assembly.</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">Ein Array, das die auf die Assembly anzuwendenden Attribute definiert.</param>
      <param name="resourceFile" vsli:raw="The name of the Win32 resource file to include in the assembly.">Der Name der in die Assembly einzufügenden Win32-Ressourcendatei.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">Der Wert der <see cref="P:System.Reflection.AssemblyName.Name" />-Eigenschaft des <paramref name="assemblyname" />-Parameters ist eine leere oder eine NULL-Zeichenfolge.  
  
- oder - 
Das Muster des regulären Ausdrucks eines oder mehrerer Objekte in <paramref name="regexinfos" /> enthält eine ungültige Syntax.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> oder <paramref name="regexinfos" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="The &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter designates an invalid Win32 resource file.">Der <paramref name="resourceFile" />-Parameter legt eine ungültige Win32-Ressourcendatei fest.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file designated by the &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter cannot be found.">Die vom <paramref name="resourceFile" />-Parameter angegebene Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">Nur .NET Core: Das Erstellen einer Assembly aus kompilierten regulären Ausdrücken wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary vsli:raw="Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $, ., #, and white space) by replacing them with their escape codes. This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.">Versieht einen minimalen Satz an Zeichen (\, *, +, ?, |, {, [, (,), ^, $,., # und Leerzeichen) mit Escapezeichen, indem diese durch die jeweils entsprechende Escapesequenz ersetzt werden. Damit wird die Engine für reguläre Ausdrücke angewiesen, diese Zeichen als Literale statt als Metazeichen zu interpretieren.</summary>
      <param name="str" vsli:raw="The input string that contains the text to convert.">Die Eingabezeichenfolge mit dem zu konvertierenden Text.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="A string of characters with metacharacters converted to their escaped form.">Eine Zeichenfolge, in der Metazeichen in die entsprechenden Escapecodes konvertiert wurden.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary vsli:raw="Returns an array of capturing group names for the regular expression.">Gibt ein Array der Namen von Erfassungsgruppen für den regulären Ausdruck zurück.</summary>
      <returns vsli:raw="A string array of group names.">Ein Zeichenfolgenarray von Gruppennamen.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary vsli:raw="Returns an array of capturing group numbers that correspond to group names in an array.">Gibt ein Array der Nummern von Erfassungsgruppen zurück, die den Gruppennamen in einem Array entsprechen.</summary>
      <returns vsli:raw="An integer array of group numbers.">Ein Ganzzahlarray der Gruppennummern.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary vsli:raw="Gets the group name that corresponds to the specified group number.">Ruft den Gruppennamen ab, der der angegebenen Gruppennummer entspricht.</summary>
      <param name="i" vsli:raw="The group number to convert to the corresponding group name.">Die Gruppennummer, die in den entsprechenden Gruppennamen konvertiert werden soll.</param>
      <returns vsli:raw="A string that contains the group name associated with the specified group number. If there is no group name that corresponds to &lt;paramref name=&quot;i&quot; /&gt;, the method returns &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Eine Zeichenfolge, die den Gruppennamen enthält, der der angegebenen Gruppennummer zugeordnet ist. Wenn kein Gruppenname vorhanden ist, der <paramref name="i" /> entspricht, gibt die Methode <see cref="F:System.String.Empty" /> zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary vsli:raw="Returns the group number that corresponds to the specified group name.">Gibt die Gruppennummer zurück, die dem angegebenen Gruppennamen entspricht.</summary>
      <param name="name" vsli:raw="The group name to convert to the corresponding group number.">Der Gruppenname, der in die entsprechende Gruppennummer konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="The group number that corresponds to the specified group name, or -1 if &lt;paramref name=&quot;name&quot; /&gt; is not a valid group name.">Die Gruppennummer, die dem angegebenen Gruppennamen entspricht, oder -1, wenn <paramref name="name" /> kein gültiger Gruppenname ist.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="References have already been initialized.">Verweise wurden bereits initialisiert.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in a specified input string.">Gibt an, ob der im <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor angegebene reguläre Ausdruck eine Übereinstimmung in einer angegebenen Eingabezeichenfolge findet.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der reguläre Ausdruck eine Übereinstimmung findet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in the specified input string, beginning at the specified starting position in the string.">Gibt an, ob der im <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor angegebene reguläre Ausdruck ab der angegebenen Anfangsposition eine Übereinstimmung in der angegebenen Eingabezeichenfolge findet.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="startat" vsli:raw="The character position at which to start the search.">Die Zeichenposition, an der mit der Suche begonnen werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der reguläre Ausdruck eine Übereinstimmung findet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string.">Gibt an, ob der reguläre Ausdruck eine Übereinstimmung in der angegebenen Eingabezeichenfolge findet.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der reguläre Ausdruck eine Übereinstimmung findet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.">Gibt an, ob der angegebene reguläre Ausdruck unter Verwendung der angegebenen Übereinstimmungsoptionen eine Übereinstimmung in der angegebenen Eingabezeichenfolge findet.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.">
        <paramref name="options" /> ist kein gültiger <see cref="T:System.Text.RegularExpressions.RegexOptions" /> -Wert.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der reguläre Ausdruck eine Übereinstimmung findet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options and time-out interval.">Gibt an, ob der angegebene reguläre Ausdruck unter Verwendung der angegebenen Übereinstimmungsoptionen und des angegebenen Timeoutintervalls eine Übereinstimmung in der angegebenen Eingabezeichenfolge findet.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, das angibt, dass die Methode kein Timeout haben sollte.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> ist kein gültiger <see cref="T:System.Text.RegularExpressions.RegexOptions" /> -Wert.  
  
- oder - 
 <paramref name="matchTimeout" /> ist negativ, null oder größer als ca. 24 Tage.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Es ist ein Timeout aufgetreten.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der reguläre Ausdruck eine Übereinstimmung findet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Durchsucht die angegebene Eingabezeichenfolge nach dem ersten Vorkommen des im <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor angegebenen regulären Ausdrucks.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="An object that contains information about the match.">Ein Objekt, das Informationen zur Übereinstimmung enthält.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.">Durchsucht die Eingabezeichenfolge nach dem ersten Vorkommen eines regulären Ausdrucks ab der angegebenen Anfangsposition in der Zeichenfolge.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="startat" vsli:raw="The zero-based character position at which to start the search.">Die nullbasierte Zeichenposition, an der mit der Suche begonnen werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="An object that contains information about the match.">Ein Objekt, das Informationen zur Übereinstimmung enthält.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.">Sucht beginnend an der angegebenen Anfangsposition in der Eingabezeichenfolge nach dem ersten Vorkommen eines regulären Ausdrucks und sucht nur nach der angegebenen Anzahl von Zeichen.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="beginning" vsli:raw="The zero-based character position in the input string that defines the leftmost position to be searched.">Die nullbasierte Zeichenposition in der Eingabezeichenfolge, die die am weitesten links stehende Position definiert, die gesucht werden soll.</param>
      <param name="length" vsli:raw="The number of characters in the substring to include in the search.">Die Anzahl der Zeichen der Teilzeichenfolge, die in die Suche einbezogen werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;beginning&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;beginning&quot; /&gt;&lt;see langword=&quot;+&quot; /&gt;&lt;paramref name=&quot;length&quot; /&gt;&lt;see langword=&quot;-1&quot; /&gt; identifies a position that is outside the range of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="beginning" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.  
  
- oder - 
 <paramref name="length" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.  
  
- oder - 
 <paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> gibt eine Position außerhalb des Bereichs von <paramref name="input" /> an.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="An object that contains information about the match.">Ein Objekt, das Informationen zur Übereinstimmung enthält.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the specified regular expression.">Durchsucht die angegebene Eingabezeichenfolge nach dem ersten Vorkommen des angegebenen regulären Ausdrucks.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="An object that contains information about the match.">Ein Objekt, das Informationen zur Übereinstimmung enthält.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.">Durchsucht die angegebene Eingabezeichenfolge unter Verwendung der angegebenen Übereinstimmungsoptionen nach dem ersten Vorkommen des angegebenen regulären Ausdrucks.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="An object that contains information about the match.">Ein Objekt, das Informationen zur Übereinstimmung enthält.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options and time-out interval.">Durchsucht die Eingabezeichenfolge unter Verwendung der angegebenen Übereinstimmungsoptionen und des angegebenen Timeoutintervalls nach dem ersten Vorkommen des angegebenen regulären Ausdrucks.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, das angibt, dass die Methode kein Timeout haben sollte.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.  
  
- oder - 
 <paramref name="matchTimeout" /> ist negativ, null oder größer als ca. 24 Tage.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="An object that contains information about the match.">Ein Objekt, das Informationen zur Übereinstimmung enthält.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression.">Durchsucht die angegebene Eingabezeichenfolge nach allen Vorkommen eines regulären Ausdrucks.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Eine Auflistung der im Suchvorgang gefundenen <see cref="T:System.Text.RegularExpressions.Match" />-Objekte. Wenn keine Übereinstimmungen gefunden werden, gibt die Methode ein leeres Auflistungsobjekt zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.">Durchsucht die angegebene Eingabezeichenfolge nach allen Vorkommen eines regulären Ausdrucks ab der angegebenen Anfangsposition in der Zeichenfolge.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="startat" vsli:raw="The character position in the input string at which to start the search.">Die Zeichenposition in der Eingabezeichenfolge, an der mit der Suche begonnen werden soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Eine Auflistung der im Suchvorgang gefundenen <see cref="T:System.Text.RegularExpressions.Match" />-Objekte. Wenn keine Übereinstimmungen gefunden werden, gibt die Methode ein leeres Auflistungsobjekt zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression.">Durchsucht die angegebene Eingabezeichenfolge nach allen Vorkommen eines angegebenen regulären Ausdrucks.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Eine Auflistung der im Suchvorgang gefundenen <see cref="T:System.Text.RegularExpressions.Match" />-Objekte. Wenn keine Übereinstimmungen gefunden werden, gibt die Methode ein leeres Auflistungsobjekt zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.">Durchsucht die angegebene Eingabezeichenfolge unter Verwendung der angegebenen Übereinstimmungsoptionen nach allen Vorkommen des angegebenen regulären Ausdrucks.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Eine Auflistung der im Suchvorgang gefundenen <see cref="T:System.Text.RegularExpressions.Match" />-Objekte. Wenn keine Übereinstimmungen gefunden werden, gibt die Methode ein leeres Auflistungsobjekt zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options and time-out interval.">Durchsucht die angegebene Eingabezeichenfolge unter Verwendung der angegebenen Übereinstimmungsoptionen und des angegebenen Timeoutintervalls nach allen Vorkommen des angegebenen regulären Ausdrucks.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, das angibt, dass die Methode kein Timeout haben sollte.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.  
  
- oder - 
 <paramref name="matchTimeout" /> ist negativ, null oder größer als ca. 24 Tage.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Eine Auflistung der im Suchvorgang gefundenen <see cref="T:System.Text.RegularExpressions.Match" />-Objekte. Wenn keine Übereinstimmungen gefunden werden, gibt die Methode ein leeres Auflistungsobjekt zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.">Ersetzt in einer angegebenen Eingabezeichenfolge alle mit dem Muster für den regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine angegebene Ersetzungszeichenfolge.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="replacement" vsli:raw="The replacement string.">Die Ersatzzeichenfolge.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="replacement" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen. Wenn keine Entsprechung für das reguläre Ausdrucksmuster in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">Ersetzt in einer angegebenen Eingabezeichenfolge eine angegebene Höchstanzahl von Zeichenfolgen, die mit dem Muster eines regulären Ausdrucks übereinstimmen, durch eine angegebene Ersetzungszeichenfolge.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="replacement" vsli:raw="The replacement string.">Die Ersatzzeichenfolge.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement can occur.">Die maximale Anzahl der Ersetzungen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="replacement" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen. Wenn keine Entsprechung für das reguläre Ausdrucksmuster in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">Ersetzt in einer angegebenen Eingabeteilzeichenfolge eine angegebene Höchstanzahl von Zeichenfolgen, die mit dem Muster eines regulären Ausdrucks übereinstimmen, durch eine angegebene Ersetzungszeichenfolge.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="replacement" vsli:raw="The replacement string.">Die Ersatzzeichenfolge.</param>
      <param name="count" vsli:raw="Maximum number of times the replacement can occur.">Die maximale Anzahl der Ersetzungen.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">Die Zeichenposition in der Eingabezeichenfolge, an der mit der Suche begonnen wird.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="replacement" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen. Wenn keine Entsprechung für das reguläre Ausdrucksmuster in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.">Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine angegebene Ersetzungszeichenfolge.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="replacement" vsli:raw="The replacement string.">Die Ersatzzeichenfolge.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> oder <paramref name="replacement" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen. Wenn für <paramref name="pattern" /> keine Übereinstimmung in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.">Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine angegebene Ersetzungszeichenfolge. Durch angegebene Optionen wird die Suche nach Übereinstimmungen geändert.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="replacement" vsli:raw="The replacement string.">Die Ersatzzeichenfolge.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> oder <paramref name="replacement" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen. Wenn für <paramref name="pattern" /> keine Übereinstimmung in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine angegebene Ersetzungszeichenfolge. Zusätzliche Parameter geben die Optionen an, die den entsprechenden Vorgang und ein Timeoutintervall ändern, wenn keine Übereinstimmung gefunden wird.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="replacement" vsli:raw="The replacement string.">Die Ersatzzeichenfolge.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, das angibt, dass die Methode kein Timeout haben sollte.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> oder <paramref name="replacement" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.  
  
- oder - 
 <paramref name="matchTimeout" /> ist negativ, null oder größer als ca. 24 Tage.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen. Wenn für <paramref name="pattern" /> keine Übereinstimmung in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine von einem <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten zurückgegebene Zeichenfolge.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Eine benutzerdefinierte Methode, die jede Übereinstimmung überprüft und entweder die ursprüngliche entsprechende Zeichenfolge oder eine Ersatzzeichenfolge zurückgibt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> oder <paramref name="evaluator" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Eine Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen. Wenn für <paramref name="pattern" /> keine Übereinstimmung in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Specified options modify the matching operation.">Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine von einem <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten zurückgegebene Zeichenfolge. Durch angegebene Optionen wird die Suche nach Übereinstimmungen geändert.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Eine benutzerdefinierte Methode, die jede Übereinstimmung überprüft und entweder die ursprüngliche entsprechende Zeichenfolge oder eine Ersatzzeichenfolge zurückgibt.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> oder <paramref name="evaluator" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Eine Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen. Wenn für <paramref name="pattern" /> keine Übereinstimmung in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Teilzeichenfolgen durch eine von einem <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten zurückgegebene Zeichenfolge. Zusätzliche Parameter geben die Optionen an, die den entsprechenden Vorgang und ein Timeoutintervall ändern, wenn keine Übereinstimmung gefunden wird.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Eine benutzerdefinierte Methode, die jede Übereinstimmung überprüft und entweder die ursprüngliche entsprechende Zeichenfolge oder eine Ersatzzeichenfolge zurückgibt.</param>
      <param name="options" vsli:raw="A bitwise combination of enumeration values that provide options for matching.">Eine bitweise Kombination von Enumerationswerten, die Optionen für Vergleiche angeben.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, das angibt, dass die Methode kein Timeout haben sollte.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> oder <paramref name="evaluator" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.  
  
- oder - 
 <paramref name="matchTimeout" /> ist negativ, null oder größer als ca. 24 Tage.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Die Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen. Wenn für <paramref name="pattern" /> keine Übereinstimmung in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Ersetzt in einer angegebenen Eingabezeichenfolge alle mit einem angegebenen regulären Ausdruck übereinstimmenden Zeichenfolgen durch eine von einem <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten zurückgegebene Zeichenfolge.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Eine benutzerdefinierte Methode, die jede Übereinstimmung überprüft und entweder die ursprüngliche entsprechende Zeichenfolge oder eine Ersatzzeichenfolge zurückgibt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="evaluator" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Eine Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen. Wenn keine Entsprechung für das reguläre Ausdrucksmuster in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Ersetzt in einer angegebenen Eingabezeichenfolge eine angegebene Höchstanzahl von Zeichenfolgen, die mit dem Muster eines regulären Ausdrucks übereinstimmen, durch eine von einem <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten zurückgegebene Zeichenfolge.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Eine benutzerdefinierte Methode, die jede Übereinstimmung überprüft und entweder die ursprüngliche entsprechende Zeichenfolge oder eine Ersatzzeichenfolge zurückgibt.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">Die maximale Anzahl der Ersetzungen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="evaluator" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Eine Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen. Wenn keine Entsprechung für das reguläre Ausdrucksmuster in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Ersetzt in einer angegebenen Eingabeteilzeichenfolge eine angegebene Höchstanzahl von Zeichenfolgen, die mit dem Muster eines regulären Ausdrucks übereinstimmen, durch eine von einem <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />-Delegaten zurückgegebene Zeichenfolge.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Die nach einer Übereinstimmung zu durchsuchende Zeichenfolge.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Eine benutzerdefinierte Methode, die jede Übereinstimmung überprüft und entweder die ursprüngliche entsprechende Zeichenfolge oder eine Ersatzzeichenfolge zurückgibt.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">Die maximale Anzahl der Ersetzungen.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">Die Zeichenposition in der Eingabezeichenfolge, an der mit der Suche begonnen wird.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="evaluator" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Eine neue, mit der Eingabezeichenfolge identische Zeichenfolge. Eine Ersetzungszeichenfolge ersetzt jedoch alle übereinstimmenden Zeichenfolgen. Wenn keine Entsprechung für das reguläre Ausdrucksmuster in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Teilt die angegebene Eingabezeichenfolge an den Positionen in ein Array von Teilzeichenfolgen auf, die durch ein im <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor angegebenes Muster für einen regulären Ausdruck definiert werden.</summary>
      <param name="input" vsli:raw="The string to split.">Die zu teilende Zeichenfolge.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="An array of strings.">Ein Array der Zeichenfolgen.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Teilt die angegebene Eingabezeichenfolge höchstens die angegebene Anzahl von Malen an den Positionen in ein Array von Teilzeichenfolgenketten auf, die durch einen im <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor angegebenen regulären Ausdruck definiert werden.</summary>
      <param name="input" vsli:raw="The string to be split.">Die aufzuteilende Zeichenfolge.</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">Die maximale Anzahl der Teilungen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="An array of strings.">Ein Array der Zeichenfolgen.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor. The search for the regular expression pattern starts at a specified character position in the input string.">Teilt die angegebene Eingabezeichenfolge höchstens die angegebene Anzahl von Malen an den Positionen in ein Array von Teilzeichenfolgenketten auf, die durch einen im <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor angegebenen regulären Ausdruck definiert werden. Die Suche nach dem Muster des regulären Ausdrucks beginnt bei einer angegebenen Zeichenposition in der Eingabezeichenfolge.</summary>
      <param name="input" vsli:raw="The string to be split.">Die aufzuteilende Zeichenfolge.</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">Die maximale Anzahl der Teilungen.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search will begin.">Die Zeichenposition in der Eingabezeichenfolge, an der mit der Suche begonnen wird.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> ist kleiner als 0 (null) oder größer als die Länge von <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="An array of strings.">Ein Array der Zeichenfolgen.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern.">Teilt eine Eingabezeichenfolge an den durch ein reguläres Ausdrucksmuster definierten Positionen in ein Array von Teilzeichenfolgen auf.</summary>
      <param name="input" vsli:raw="The string to split.">Die zu teilende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="An array of strings.">Ein Array der Zeichenfolgen.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.">Teilt eine Eingabezeichenfolge an den durch ein angegebenes reguläres Ausdrucksmuster definierten Positionen in ein Array von Teilzeichenfolgen auf. Durch angegebene Optionen wird die Suche nach Übereinstimmungen geändert.</summary>
      <param name="input" vsli:raw="The string to split.">Die zu teilende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="An array of strings.">Ein Array der Zeichenfolgen.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">Teilt eine Eingabezeichenfolge an den durch ein angegebenes reguläres Ausdrucksmuster definierten Positionen in ein Array von Teilzeichenfolgen auf. Zusätzliche Parameter geben die Optionen an, die den entsprechenden Vorgang und ein Timeoutintervall ändern, wenn keine Übereinstimmung gefunden wird.</summary>
      <param name="input" vsli:raw="The string to split.">Die zu teilende Zeichenfolge.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Das Muster eines regulären Ausdrucks, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Eine bitweise Kombination der Enumerationswerte, die Optionen für Vergleiche angeben.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Ein Timeoutintervall oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, das angibt, dass die Methode kein Timeout haben sollte.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Ein Analysefehler für reguläre Ausdrücke ist aufgetreten.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> oder <paramref name="pattern" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> ist keine gültige bitweise Kombination von <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Werten.  
  
- oder - 
 <paramref name="matchTimeout" /> ist negativ, null oder größer als ca. 24 Tage.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Es ist ein Timeout aufgetreten. Weitere Informationen zu Timeouts finden Sie im Abschnitt „Hinweise“.</exception>
      <returns vsli:raw="A string array.">Ein Zeichenfolgenarray.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data necessary to deserialize the current &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object.">Füllt ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den Daten, die erforderlich sind, um das aktuelle <see cref="T:System.Text.RegularExpressions.Regex" />-Objekt zu deserialisieren.</summary>
      <param name="si" vsli:raw="The object to populate with serialization information.">Das Objekt, das mit Serialisierungsinformationen aufgefüllt werden soll.</param>
      <param name="context" vsli:raw="The place to store and retrieve serialized data. This parameter is reserved for future use.">Der Ort zum Speichern und Abrufen von serialisierten Daten. Dieser Parameter ist für die zukünftige Verwendung reserviert.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary vsli:raw="Returns the regular expression pattern that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">Gibt das Muster eines regulären Ausdrucks zurück, das an den <see langword="Regex" />-Konstruktor übergeben wurde.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;pattern&quot; /&gt; parameter that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">Der an den <paramref name="pattern" />-Konstruktor übergebene <see langword="Regex" />-Parameter.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary vsli:raw="Converts any escaped characters in the input string.">Konvertiert alle Escapezeichen in der Eingabezeichenfolge.</summary>
      <param name="str" vsli:raw="The input string containing the text to convert.">Die Eingabezeichenfolge mit dem zu konvertierenden Text.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; includes an unrecognized escape sequence.">
        <paramref name="str" /> schließt eine nicht erkannte Escapesequenz ein.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="A string of characters with any escaped characters converted to their unescaped form.">Eine Zeichenfolge, in der alle Escapezeichen in die entsprechende Form ohne Escapezeichen konvertiert wurden.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="P:System.Text.RegularExpressions.Regex.Options" />-Eigenschaft die <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />-Option enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="P:System.Text.RegularExpressions.Regex.Options" />-Eigenschaft die <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />-Option enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)">
      <summary vsli:raw="Checks whether a time-out interval is within an acceptable range.">Überprüft, ob ein Timeoutintervall innerhalb eines akzeptablen Bereichs liegt.</summary>
      <param name="matchTimeout" vsli:raw="The time-out interval to check.">Das zu überprüfende Timeoutintervall.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The specified time-out is not within a valid range.">Das angegebene Timeout liegt nicht in einem gültigen Bereich.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary vsli:raw="Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.">Ruft die maximale Anzahl von Einträgen im aktuellen statischen Cache für die kompilierten regulären Ausdrücke ab oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value in a set operation is less than zero.">Der Wert in einem Set-Vorgang ist kleiner als 0 (null).</exception>
      <returns vsli:raw="The maximum number of entries in the static cache.">Die maximale Anzahl von Einträgen im statischen Cache.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CapNames">
      <summary vsli:raw="Gets or sets a dictionary that maps named capturing groups to their index values.">Ruft ein Wörterbuch ab, das Erfassungsgruppen ihren Indexwerten zuordnet, oder legt es fest.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.CapNames&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">Der einer <see cref="P:System.Text.RegularExpressions.Regex.CapNames" />-Eigenschaft zugeordnete Wert in einer festgelegten Operation ist <see langword="null" />.</exception>
      <returns vsli:raw="A dictionary that maps named capturing groups to their index values.">Ein Wörterbuch, das Erfassungsgruppen ihren Indexwerten zuordnet.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Caps">
      <summary vsli:raw="Gets or sets a dictionary that maps numbered capturing groups to their index values.">Ruft ein Wörterbuch ab oder legt es fest, das nummerierte Erfassungsgruppen ihren Indexwerten zuordnet.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Caps&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">Der einer <see cref="P:System.Text.RegularExpressions.Regex.Caps" />-Eigenschaft zugeordnete Wert in einer festgelegten Operation ist <see langword="null" />.</exception>
      <returns vsli:raw="A dictionary that maps numbered capturing groups to their index values.">Ein Wörterbuch, das nummerierte Erfassungsgruppen ihren Indexwerten zuordnet.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval of the current instance.">Ruft das Laufzeitintervall der aktuellen Instanz ab.</summary>
      <returns vsli:raw="The maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">Das maximale Zeitintervall, das in einem Mustervergleichsvorgang verstreichen kann, bevor eine <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />-Ausnahme ausgelöst wird, oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, wenn Timeouts deaktiviert sind.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary vsli:raw="Gets the options that were passed into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Ruft die Optionen ab, die an den <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor übergeben wurden.</summary>
      <returns vsli:raw="One or more members of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; enumeration that represent options that were passed to the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Mindestens ein Member der <see cref="T:System.Text.RegularExpressions.RegexOptions" />-Enumeration, der Optionen darstellt, die dem <see cref="T:System.Text.RegularExpressions.Regex" />-Konstruktor übergeben wurden</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary vsli:raw="Gets a value that indicates whether the regular expression searches from right to left.">Ruft einen Wert ab, der angibt, ob der reguläre Ausdruck von rechts nach links sucht.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression searches from right to left; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der reguläre Ausdruck von rechts nach links sucht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary vsli:raw="Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.">Stellt die Informationen zu einem regulären Ausdruck bereit, die zum Kompilieren eines regulären Ausdrucks zu einer eigenständigen Assembly verwendet werden.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression to be included in an assembly.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" />-Klasse, die Informationen zu einem regulären Ausdruck enthält, der in eine Assembly eingeschlossen werden soll.</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">Der reguläre Ausdruck, der kompiliert werden soll.</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">Die bei der Kompilierung des regulären Ausdrucks zu verwendenden Optionen für reguläre Ausdrücke.</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">Der Name des Typs, der den kompilierten regulären Ausdruck darstellt.</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">Der Namespace, zu dem der neue Typ gehört.</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um den kompilierten regulären Ausdruck öffentlich sichtbar zu machen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="name" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="fullnamespace" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression with a specified time-out value to be included in an assembly.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" />-Klasse, die Informationen zu einem regulären Ausdruck mit einem angegebenen Timeoutwert enthält, der in eine Assembly eingeschlossen werden soll.</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">Der reguläre Ausdruck, der kompiliert werden soll.</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">Die bei der Kompilierung des regulären Ausdrucks zu verwendenden Optionen für reguläre Ausdrücke.</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">Der Name des Typs, der den kompilierten regulären Ausdruck darstellt.</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">Der Namespace, zu dem der neue Typ gehört.</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um den kompilierten regulären Ausdruck öffentlich sichtbar zu machen, andernfalls <see langword="false" />.</param>
      <param name="matchTimeout" vsli:raw="The default time-out interval for the regular expression.">Das standardmäßige Timeoutintervall für den regulären Ausdruck.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> ist <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="name" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="fullnamespace" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="matchTimeout" /> ist negativ, null oder größer als ca. 24 Tage.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary vsli:raw="Gets or sets a value that indicates whether the compiled regular expression has public visibility.">Ruft einen Wert ab, der angibt, ob der kompilierte reguläre Ausdruck öffentlich sichtbar ist, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression has public visibility; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der reguläre Ausdruck öffentlich sichtbar ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
      <summary vsli:raw="Gets or sets the regular expression's default time-out interval.">Ruft das das standardmäßige Timeoutintervall für reguläre Ausdrücke ab oder legt dieses fest.</summary>
      <returns vsli:raw="The default maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">Das standardmäßige maximale Zeitintervall, das in einem Mustervergleichsvorgang verstreichen kann, bevor eine <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />-Ausnahme ausgelöst wird, oder <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, wenn Timeouts deaktiviert sind.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary vsli:raw="Gets or sets the name of the type that represents the compiled regular expression.">Ruft den Namen des Typs ab, der den kompilierten regulären Ausdruck darstellt, oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">Der Wert für diese Eigenschaft ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for this property is an empty string.">Der Wert für diese Eigenschaft ist eine leere Zeichenfolge.</exception>
      <returns vsli:raw="The name of the new type.">Der Name des neuen Typs.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary vsli:raw="Gets or sets the namespace to which the new type belongs.">Ruft den Namespace ab, zu dem der neue Typ gehört, oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">Der Wert für diese Eigenschaft ist <see langword="null" />.</exception>
      <returns vsli:raw="The namespace of the new type.">Der Namespace des neuen Typs.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary vsli:raw="Gets or sets the options to use when compiling the regular expression.">Ruft die beim Kompilieren des regulären Ausdrucks zu verwendenden Optionen ab oder legt diese fest.</summary>
      <returns vsli:raw="A bitwise combination of the enumeration values.">Eine bitweise Kombination der Enumerationswerte.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary vsli:raw="Gets or sets the regular expression to compile.">Ruft den zu kompilierenden regulären Ausdruck ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">Der Wert für diese Eigenschaft ist <see langword="null" />.</exception>
      <returns vsli:raw="The regular expression to compile.">Der reguläre Ausdruck, der kompiliert werden soll.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary vsli:raw="The exception that is thrown when the execution time of a regular expression pattern-matching method exceeds its time-out interval.">Die Ausnahme, die ausgelöst wird, wenn beim Ausführen einer Mustervergleichsmethode mit regulärem Ausdruck das Timeoutintervall überschritten wird.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a system-supplied message.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />-Klasse mit einer vom System generierten Meldung.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that contains the serialized data.">Das Objekt, das die serialisierten Daten enthält.</param>
      <param name="context" vsli:raw="The stream that contains the serialized data.">Der Datenstrom, der die serialisierten Daten enthält.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with the specified message string.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />-Klasse mit der angegebenen Meldungszeichenfolge.</summary>
      <param name="message" vsli:raw="A string that describes the exception.">Eine Zeichenfolge, die die Ausnahme beschreibt.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message" vsli:raw="A string that describes the exception.">Eine Zeichenfolge, die die Ausnahme beschreibt.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with information about the regular expression pattern, the input text, and the time-out interval.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />-Klasse mit Informationen über das Muster eines regulären Ausdrucks, den Eingabetext und das Timeoutintervall.</summary>
      <param name="regexInput" vsli:raw="The input text processed by the regular expression engine when the time-out occurred.">Der Eingabetext, der durch die Engine für reguläre Ausdrücke verarbeitet wurde, als das Timeout auftrat.</param>
      <param name="regexPattern" vsli:raw="The pattern used by the regular expression engine when the time-out occurred.">Das Muster, das von der Engine für reguläre Ausdrücke verwendet wurde, als das Timeout auftrat.</param>
      <param name="matchTimeout" vsli:raw="The time-out interval.">Das Timeoutintervall.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data needed to serialize a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; object.">Füllt ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den Daten, die zum Serialisieren eines <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />-Objekts erforderlich sind.</summary>
      <param name="info" vsli:raw="The serialization information object to populate with data.">Das Serialisierungsinformationsobjekt, das mit Daten aufgefüllt werden soll.</param>
      <param name="context" vsli:raw="The destination for this serialization.">Das Ziel dieser Serialisierung.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary vsli:raw="Gets the input text that the regular expression engine was processing when the time-out occurred.">Ruft den Eingabetext ab, den die Engine für reguläre Ausdrücke verarbeitet hat, als der Timeout aufgetreten ist.</summary>
      <returns vsli:raw="The regular expression input text.">Der Eingabetext für den regulären Ausdruck.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval for a regular expression match.">Ruft das Timeoutintervall für eine Übereinstimmung für einen regulären Ausdruck ab.</summary>
      <returns vsli:raw="The time-out interval.">Das Timeoutintervall.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary vsli:raw="Gets the regular expression pattern that was used in the matching operation when the time-out occurred.">Ruft das Muster eines regulären Ausdrucks ab, das im entsprechenden Vorgang verwendet wurde, als das Timeout auftrat.</summary>
      <returns vsli:raw="The regular expression pattern.">Das Muster des regulären Ausdrucks.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary vsli:raw="Provides enumerated values to use to set regular expression options.">Stellt Enumerationswerte bereit, mit deren Hilfe Optionen für reguläre Ausdrücke festgelegt werden können.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary vsli:raw="Specifies that the regular expression is compiled to MSIL code, instead of being interpreted. Compiled regular expressions maximize run-time performance at the expense of initialization time. This value should not be assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexCompilationInfo.Options&quot; /&gt; property when calling the &lt;see cref=&quot;M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)&quot; /&gt; method. For more information, see the &quot;Compiled Regular Expressions&quot; section in the Regular Expression Options article.">Gibt an, dass der reguläre Ausdruck in eine Assembly kompiliert wird. Dies beschleunigt zwar die Ausführung, verlängert jedoch die Ladezeit. Dieser Wert sollte der <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" />-Eigenschaft nicht zugewiesen werden, wenn die <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />-Methode aufgerufen wird. Weitere Informationen finden Sie im Artikel Optionen für reguläre Ausdrücke im Abschnitt "kompilierte reguläre Ausdrücke".</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary vsli:raw="Specifies that cultural differences in language is ignored. For more information, see the &quot;Comparison Using the Invariant Culture&quot; section in the Regular Expression Options article.">Gibt an, dass kulturelle Unterschiede bei der Sprache ignoriert werden. Weitere Informationen finden Sie im Abschnitt "Vergleich mit der invarianten Kultur" im Artikel Optionen für reguläre Ausdrücke .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary vsli:raw="&lt;para&gt;Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.IgnoreCase&quot; /&gt;, &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Multiline&quot; /&gt;, and &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; values. The use of this value with any other values results in an exception.&lt;/para&gt;&lt;para&gt;For more information on the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.ECMAScript&quot; /&gt; option, see the &quot;ECMAScript Matching Behavior&quot; section in the Regular Expression Options article.&lt;/para&gt;">Aktiviert ECMAScript-kompatibles Verhalten für den Ausdruck. Dieser Wert kann nur in Verbindung mit den Werten <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />, <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /> und <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> verwendet werden. Bei Verwendung dieses Werts mit allen anderen Werten wird eine Ausnahme ausgelöst.  
  
Weitere Informationen zur <see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" /> Option finden Sie im Artikel Optionen für reguläre Ausdrücke im Abschnitt "ECMAScript-Vergleichs Verhalten".</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary vsli:raw="Specifies that the only valid captures are explicitly named or numbered groups of the form (?&amp;lt;name&amp;gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...). For more information, see the &quot;Explicit Captures Only&quot; section in the Regular Expression Options article.">Gibt an, dass die einzigen gültigen Erfassungen explizit benannte oder nummerierte Gruppen in der Form (? &lt; Name &gt; ...). Dadurch können unbenannte Klammern als nicht Erfassungs Gruppen fungieren, ohne dass die syntaktische Klammer des Ausdrucks (?:...). Weitere Informationen finden Sie im Artikel Optionen für reguläre Ausdrücke im Abschnitt "nur explizite Erfassungen".</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary vsli:raw="Specifies case-insensitive matching. For more information, see the &quot;Case-Insensitive Matching &quot; section in the Regular Expression Options article.">Gibt an, dass bei Übereinstimmungen die Groß- und Kleinschreibung berücksichtigt werden soll. Weitere Informationen finden Sie im Abschnitt "Übereinstimmung ohne Beachtung der Groß-/Kleinschreibung" im Artikel Optionen für reguläre Ausdrücke .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary vsli:raw="Eliminates unescaped white space from the pattern and enables comments marked with #. However, this value does not affect or eliminate white space in character classes, numeric quantifiers, or tokens that mark the beginning of individual regular expression language elements. For more information, see the &quot;Ignore White Space&quot; section of the Regular Expression Options article.">Entfernt Leerraum ohne Escapezeichen aus dem Muster und aktiviert die mit # markierten Kommentare. Dieser Wert beeinflusst oder entfernt jedoch keinen Leerraum in Zeichenklassen, numerischen Quantifizierern oder Token, die den Anfang von einzelnen Sprachenelementen für reguläre Ausdrücke markieren. Weitere Informationen finden Sie im Artikel Optionen für reguläre Ausdrücke im Abschnitt „Leerstellen ignorieren“.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary vsli:raw="Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string. For more information, see the &quot;Multiline Mode&quot; section in the Regular Expression Options article.">Mehrzeilenmodus. Ändert die Bedeutung von ^ und $, sodass sie jeweils dem Anfang und Ende einer beliebigen Zeile und nicht nur dem Anfang und Ende der gesamten Zeichenfolge entsprechen. Weitere Informationen finden Sie im Artikel Optionen für reguläre Ausdrücke im Abschnitt "Mehrzeilenmodus".</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary vsli:raw="Specifies that no options are set. For more information about the default behavior of the regular expression engine, see the &quot;Default Options&quot; section in the Regular Expression Options article.">Gibt an, dass keine Optionen festgelegt wurden. Weitere Informationen zum Standardverhalten der Engine für reguläre Ausdrücke finden Sie im Artikel Optionen für reguläre Ausdrücke im Abschnitt "Standardoptionen".</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary vsli:raw="Specifies that the search will be from right to left instead of from left to right. For more information, see the &quot;Right-to-Left Mode&quot; section in the Regular Expression Options article.">Gibt an, dass die Suche von rechts nach links und nicht von links nach rechts durchgeführt wird. Weitere Informationen finden Sie im Abschnitt "rechts-nach-links-Modus" im Artikel Optionen für reguläre Ausdrücke .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary vsli:raw="Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n). For more information, see the &quot;Single-line Mode&quot; section in the Regular Expression Options article.">Gibt den Einzeilenmodus an. Ändert die Bedeutung des Punkts (.), sodass dieser jedem Zeichen entspricht (und nicht jedem Zeichen mit Ausnahme von \n). Weitere Informationen finden Sie im Abschnitt "Einzeilenmodus" im Artikel Optionen für reguläre Ausdrücke .</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexParseError">
      <summary vsli:raw="Specifies the detailed underlying reason why a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexParseException&quot; /&gt; is thrown when a regular expression contains a parsing error.">Gibt den detaillierten Grund an, warum <see cref="T:System.Text.RegularExpressions.RegexParseException" /> ausgelöst wird, wenn ein regulärer Ausdruck einen Fehler bei der Verarbeitung enthält.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasComment">
      <summary vsli:raw="An alternation construct in a regular expression contains a comment.">Ein Alternierungskonstrukt in einem regulären Ausdruck enthält einen Kommentar.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedCondition">
      <summary vsli:raw="An alternation in a regular expression has a malformed condition.">Eine Alternierung in einem regulären Ausdruck weist eine falsch formatierte Bedingung auf.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedReference">
      <summary vsli:raw="An alternation construct in a regular expression contains a malformed reference.">Ein Alternierungskonstrukt in einem regulären Ausdruck enthält einen falsch formatierten Verweis.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasNamedCapture">
      <summary vsli:raw="An alternation construct in a regular expression uses a named capture.">Ein Alternierungskonstrukt in einem regulären Ausdruck verwendet eine benannte Erfassung.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasTooManyConditions">
      <summary vsli:raw="An alternation in a regular expression has too many conditions.">Eine Alternierung in einem regulären Ausdruck hat zu viele Bedingungen.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasUndefinedReference">
      <summary vsli:raw="An alternation construct in a regular expression contains an undefined reference.">Ein Alternierungskonstrukt in einem regulären Ausdruck enthält einen nicht definierten Verweis.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupNameInvalid">
      <summary vsli:raw="The group name of a captured group in a regular expression is invalid.">Der Gruppenname einer erfassten Gruppe in einem regulären Ausdruck ist ungültig.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupOfZero">
      <summary vsli:raw="A regular expression defines a numbered subexpression named zero.">Ein regulärer Ausdruck definiert einen nummerierten Teilausdruck mit dem Namen 0 (null).</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ExclusionGroupNotLast">
      <summary vsli:raw="A character class in a regular expression with an exclusion group is not the last part of the character class.">Eine Zeichenklasse in einem regulären Ausdruck mit einer Ausschlussgruppe ist nicht der letzte Teil der Zeichenklasse.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientClosingParentheses">
      <summary vsli:raw="A regular expression has a non-escaped left parenthesis, or misses a closing right parenthesis.">Ein regulärer Ausdruck weist eine schließende linke Klammer ohne Escapezeichen auf, oder eine schließende rechte Klammer fehlt.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientOpeningParentheses">
      <summary vsli:raw="A regular expression has a non-escaped right parenthesis, or misses an opening left parenthesis.">Ein regulärer Ausdruck weist eine schließende rechte Klammer ohne Escapezeichen auf, oder eine öffnende linke Klammer fehlt.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientOrInvalidHexDigits">
      <summary vsli:raw="A hexadecimal escape sequence in a regular expression does not have enough digits, or contains invalid digits.">Eine Escapesequenz für Hexadezimalzahlen in einem regulären Ausdruck weist nicht genügend Ziffern auf oder enthält ungültige Ziffern.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InvalidGroupingConstruct">
      <summary vsli:raw="A grouping construct in a regular expression is invalid or malformed.">Ein Gruppierungskonstrukt in einem regulären Ausdruck ist ungültig oder falsch formatiert.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InvalidUnicodePropertyEscape">
      <summary vsli:raw="A Unicode property escape in a regular expression is invalid or unknown.">Ein Escapezeichen für Unicode-Eigenschaften in einem regulären Ausdruck ist ungültig oder unbekannt.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MalformedNamedReference">
      <summary vsli:raw="A named reference in a regular expression is malformed.">Ein benannter Verweis in einem regulären Ausdruck ist falsch formatiert.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MalformedUnicodePropertyEscape">
      <summary vsli:raw="A Unicode property escape is malformed.">Ein Escapezeichen für die Unicode-Eigenschaft ist fehlerhaft.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MissingControlCharacter">
      <summary vsli:raw="A control character in a regular expression is missing.">Ein Steuerzeichen in einem regulären Ausdruck fehlt.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.NestedQuantifiersNotParenthesized">
      <summary vsli:raw="Repeated quantifiers on another quantifier inside a regular expression are not grouped in parentheses.">Wiederholte Quantifizierer in einem anderen Quantifizierer innerhalb eines regulären Ausdrucks werden nicht in Klammern gruppiert.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.QuantifierAfterNothing">
      <summary vsli:raw="A quantifier in a regular expression is in a position where it cannot quantify anything, like at the beginning of a regular expression or in a group.">Ein Quantifizierer in einem regulären Ausdruck befindet sich an einer Position, an der nichts quantifiziert werden kann, z. B. am Anfang eines regulären Ausdrucks oder in einer Gruppe.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.QuantifierOrCaptureGroupOutOfRange">
      <summary vsli:raw="A captured group or a quantifier in a regular expression is not within range, that is, it is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Eine erfasste Gruppe oder ein Quantifizierer in einem regulären Ausdruck liegt nicht innerhalb des Bereichs, d. h., die Gruppe oder der Quantifizierer ist größer als <see cref="F:System.Int32.MaxValue" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ReversedCharacterRange">
      <summary vsli:raw="A character class in a regular expression contains an inverse character range, like z-a instead of a-z.">Eine Zeichenklasse in einem regulären Ausdruck enthält einen umgekehrten Zeichenbereich, z. b. z–a anstelle von a–z.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ReversedQuantifierRange">
      <summary vsli:raw="A quantifier range in a regular expression is inverse, like &lt;c&gt;{10,1}&lt;/c&gt; instead of &lt;c&gt;(1,10}&lt;/c&gt;.">Ein Quantifiziererbereich in einem regulären Ausdruck ist umgekehrt, wie z. B. <code>{10,1}</code> anstelle von <code>(1,10}</code>.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ShorthandClassInCharacterRange">
      <summary vsli:raw="A character-class in a regular expression contains a short-hand class that is not allowed inside a character class.">Eine Zeichenklasse in einem regulären Ausdruck enthält eine kurze Klasse, die innerhalb einer Zeichenklasse nicht zulässig ist.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UndefinedNamedReference">
      <summary vsli:raw="A used named reference in a regular expression is not defined.">Ein verwendeter benannter Verweis in einem regulären Ausdruck ist nicht definiert.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UndefinedNumberedReference">
      <summary vsli:raw="A used numbered reference in a regular expression is not defined.">Ein verwendeter nummerierter Verweis in einem regulären Ausdruck ist nicht definiert.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnescapedEndingBackslash">
      <summary vsli:raw="A regular expression ends with a non-escaped ending backslash.">Ein regulärer Ausdruck endet mit einem abschließenden umgekehrten Schrägstrich ohne Escapezeichen.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.Unknown">
      <summary vsli:raw="An unknown regular expression parse error.">Ein unbekannter Analysefehler für reguläre Ausdrücke.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedControlCharacter">
      <summary vsli:raw="A control character in a regular expression is not recognized.">Ein Steuerzeichen in einem regulären Ausdruck wird nicht erkannt.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedEscape">
      <summary vsli:raw="An escape character or sequence in a regular expression is invalid.">Ein Escapezeichen oder eine Sequenz in einem regulären Ausdruck ist ungültig.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedUnicodeProperty">
      <summary vsli:raw="A unicode property in a regular expression is not recognized, or invalid.">Eine Unicode-Eigenschaft in einem regulären Ausdruck wird nicht erkannt oder ist ungültig.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnterminatedBracket">
      <summary vsli:raw="A regular expression has a non-escaped left square bracket, or misses a closing right square bracket.">Ein regulärer Ausdruck hat eine linke eckige Klammer ohne Escapezeichen, oder eine schließende rechte eckige Klammer fehlt.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnterminatedComment">
      <summary vsli:raw="A comment in a regular expression is not terminated.">Ein Kommentar in einem regulären Ausdruck wird nicht beendet.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexParseException">
      <summary vsli:raw="An exception as a result of a parse error in a regular expression, with detailed information in the &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexParseException.Error&quot; /&gt; and &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexParseException.Offset&quot; /&gt; properties.">Dies ist eine Ausnahme aufgrund eines Analysefehlers in einem regulären Ausdruck mit detaillierten Informationen in den Eigenschaften <see cref="P:System.Text.RegularExpressions.RegexParseException.Error" /> und <see cref="P:System.Text.RegularExpressions.RegexParseException.Offset" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;paramref name=&quot;info&quot; /&gt; object with the parameter name and additional exception information.">Legt das <paramref name="info" />-Objekt mit dem Parameternamen und zusätzlichen Informationen zur Ausnahme fest.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexParseException.Error">
      <summary vsli:raw="Gets the error that happened during parsing.">Hiermit wird der Fehler abgerufen, der während der Analyse aufgetreten ist.</summary>
      <returns vsli:raw="The error that occured during parsing.">Der Fehler, der während der Verarbeitung aufgetreten ist.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexParseException.Offset">
      <summary vsli:raw="Gets the zero-based character offset in the regular expression pattern where the parse error occurs.">Hiermit wird das nullbasierte Zeichenoffset im Muster des regulären Ausdrucks abgerufen, in dem der Analysefehler auftritt.</summary>
      <returns vsli:raw="The offset at which the parse error occurs.">Der Offset, bei dem der Analysefehler auftritt.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class is the base class for compiled regular expressions.">Die <see cref="T:System.Text.RegularExpressions.RegexRunner" />-Klasse ist die Basisklasse für kompilierte reguläre Ausdrücke.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexRunner" />-Klasse.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <param name="capnum" vsli:raw="A capture number.">Eine Erfassungszahl.</param>
      <param name="start" vsli:raw="The starting position of the capture.">Die Anfangsposition der Erfassung.</param>
      <param name="end" vsli:raw="The ending position of the capture.">Die Endposition der Erfassung.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method. Determines whether a character is in a character class.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet. Bestimmt, ob ein Zeichen in einer Zeichenklasse enthalten ist.</summary>
      <param name="ch" vsli:raw="A character to test.">Ein zu überprüfendes Zeichen.</param>
      <param name="charClass" vsli:raw="The internal name of a character class.">Der interne Name einer Zeichenklasse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;ch&quot; /&gt; parameter is in the character class specified by the &lt;paramref name=&quot;charClass&quot; /&gt; parameter.">
        <see langword="true" />, wenn der <paramref name="ch" />-Parameter in der vom <paramref name="charClass" />-Parameter angegebenen Zeichenklasse enthalten ist.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <param name="ch" vsli:raw="A character.">Ein Zeichen.</param>
      <param name="set" vsli:raw="The character set.">Der Zeichensatz.</param>
      <param name="category" vsli:raw="The character category.">Die Zeichenkategorie.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Gibt <see cref="T:System.Boolean" />zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CheckTimeout">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <param name="i" vsli:raw="A number to save.">Eine zu speichernde Zahl.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Gibt <see cref="T:System.Int32" />zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Gibt <see cref="T:System.Boolean" />zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <param name="index" vsli:raw="The possible boundary position.">Die mögliche Begrenzungsposition.</param>
      <param name="startpos" vsli:raw="The starting position.">Die Anfangsposition.</param>
      <param name="endpos" vsli:raw="The ending position.">Die Endposition.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Gibt <see cref="T:System.Boolean" />zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <param name="index" vsli:raw="The possible ECMA boundary position.">Die mögliche ECMA-Begrenzungsposition.</param>
      <param name="startpos" vsli:raw="The starting position.">Die Anfangsposition.</param>
      <param name="endpos" vsli:raw="The ending position.">Die Endposition.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Gibt <see cref="T:System.Boolean" />zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <param name="cap" vsli:raw="The capture number.">Die Erfassungszahl.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Gibt <see cref="T:System.Boolean" />zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <param name="cap" vsli:raw="The capture number.">Die Erfassungszahl.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Gibt <see cref="T:System.Int32" />zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <param name="cap" vsli:raw="The capture number.">Die Erfassungszahl.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Gibt <see cref="T:System.Int32" />zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Gibt <see cref="T:System.Int32" />zurück.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">Eine Instanz der Engine für reguläre Ausdrücke.</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">Der auf eine Musterübereinstimmung zu überprüfende Text.</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">Die nullbasierte Anfangsposition in <paramref name="text" />, an der die Engine für reguläre Ausdrücke überprüft, ob eine Übereinstimmung vorliegt.</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">Die nullbasierte Endposition in <paramref name="text" />, an der die Engine für reguläre Ausdrücke überprüft, ob eine Übereinstimmung vorliegt.</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">Die nullbasierte Anfangsposition, an der überprüft wird, ob diese Übereinstimmung vorliegt.</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">Die Anzahl der Zeichen in der vorherigen Übereinstimmung.</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> für die Suche nach einer Übereinstimmung im Schnellmodus; andernfalls <see langword="false" />.</param>
      <returns vsli:raw="A match.">Eine Übereinstimmung.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">Eine Instanz der Engine für reguläre Ausdrücke.</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">Der auf eine Musterübereinstimmung zu überprüfende Text.</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">Die nullbasierte Anfangsposition in <paramref name="text" />, an der die Engine für reguläre Ausdrücke überprüft, ob eine Übereinstimmung vorliegt.</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">Die nullbasierte Endposition in <paramref name="text" />, an der die Engine für reguläre Ausdrücke überprüft, ob eine Übereinstimmung vorliegt.</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">Die nullbasierte Anfangsposition, an der überprüft wird, ob diese Übereinstimmung vorliegt.</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">Die Anzahl der Zeichen in der vorherigen Übereinstimmung.</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> für die Suche nach einer Übereinstimmung im Schnellmodus; andernfalls <see langword="false" />.</param>
      <param name="timeout" vsli:raw="The timeout interval.">Das Timeoutintervall.</param>
      <returns vsli:raw="A match.">Eine Übereinstimmung.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
      <param name="capnum" vsli:raw="A capture number.">Eine Erfassungszahl.</param>
      <param name="uncapnum" vsli:raw="A saved capture number.">Eine gespeicherte Erfassungszahl.</param>
      <param name="start" vsli:raw="The starting position.">Die Anfangsposition.</param>
      <param name="end" vsli:raw="The ending position.">Die Endposition.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Wird von einem durch die <see cref="T:System.Text.RegularExpressions.Regex" />-Methode generierten <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />-Objekt verwendet.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class for a compiled regular expression.">Erstellt eine <see cref="T:System.Text.RegularExpressions.RegexRunner" />-Klasse für einen kompilierten regulären Ausdruck.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunnerFactory&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary vsli:raw="When overridden in a derived class, creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object for a specific compiled regular expression.">Erstellt beim Überschreiben in einer abgeleiteten Klasse ein <see cref="T:System.Text.RegularExpressions.RegexRunner" />-Objekt für einen bestimmten kompilierten regulären Ausdruck.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object designed to execute a specific compiled regular expression.">Ein <see cref="T:System.Text.RegularExpressions.RegexRunner" />-Objekt, das zum Ausführen eines bestimmten kompilierten regulären Ausdrucks vorgesehen ist.</returns>
    </member>
  </members>
</doc>