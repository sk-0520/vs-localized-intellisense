<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Transactions.Local</name>
  </assembly>
  <members>
    <member name="T:System.Transactions.CommittableTransaction">
      <summary>Beschreibt eine Transaktion, für die ein Commit ausgeführt werden kann.</summary>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.CommittableTransaction" />-Klasse.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Es wurde versucht, unter Windows 98, Windows 98 SE oder Windows Millennium Edition eine Transaktion zu erstellen.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.CommittableTransaction" />-Klasse mit dem angegebenen <paramref name="timeout" />-Wert.</summary>
      <param name="timeout">Die maximale Zeitspanne, für die die Transaktion vorhanden sein kann, bevor sie abgebrochen wird.</param>
      <exception cref="T:System.PlatformNotSupportedException">Es wurde versucht, unter Windows 98, Windows 98 SE oder Windows Millennium Edition eine Transaktion zu erstellen.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.Transactions.TransactionOptions)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.CommittableTransaction" />-Klasse mit den angegebenen Transaktionsoptionen.</summary>
      <param name="options">Eine <see cref="T:System.Transactions.TransactionOptions" />-Struktur, die die Transaktionsoptionen beschreibt, die für die neue Transaktion verwendet werden sollen.</param>
      <exception cref="T:System.PlatformNotSupportedException">Es wurde versucht, unter Windows 98, Windows 98 SE oder Windows Millennium Edition eine Transaktion zu erstellen.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> ist ungültig.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)">
      <summary>Versucht, einen asynchronen Commit für die Transaktion auszuführen.</summary>
      <param name="asyncCallback">Der <see cref="T:System.AsyncCallback" />-Delegat, der beim Abschluss der Transaktion aufgerufen wird. Dieser Parameter kann <see langword="null" /> sein. In diesem Fall wird die Anwendung nicht über den Abschluss der Transaktion benachrichtigt. Stattdessen muss die Anwendung mithilfe der <see cref="T:System.IAsyncResult" />-Schnittstelle eine Überprüfung auf den Abschluss ausführen und entsprechend warten bzw. <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> aufrufen, um auf den Abschluss der Transaktion zu warten.</param>
      <param name="asyncState">Ein Objekt, das beliebige Zustandsinformationen enthalten kann, die dem asynchronen Commit zugeordnet sind. Dieses Objekt wird an den Rückruf übergeben und von <see cref="N:System.Transactions" /> nicht interpretiert. Ein NULL-Verweis ist zulässig.</param>
      <returns>Eine <see cref="T:System.IAsyncResult" />-Schnittstelle, mit deren Hilfe der Aufrufer den Status des asynchronen Vorgangs überprüfen oder auf den Abschluss des Vorgangs warten kann.</returns>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.Commit">
      <summary>Versucht, einen Commit für die Transaktion auszuführen.</summary>
      <exception cref="T:System.Transactions.TransactionInDoubtException">
        <see cref="M:System.Transactions.CommittableTransaction.Commit" /> wird für eine Transaktion aufgerufen, und die Transaktion wird zu <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</exception>
      <exception cref="T:System.Transactions.TransactionAbortedException">
        <see cref="M:System.Transactions.CommittableTransaction.Commit" /> wird aufgerufen, und es wird zum ersten Mal ein Commit der Transaktion ausgeführt.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)">
      <summary>Beendet einen Versuch, einen asynchronen Commit für die Transaktion auszuführen.</summary>
      <param name="asyncResult">Das dem asynchronen Commit zugeordnete <see cref="T:System.IAsyncResult" />-Objekt.</param>
      <exception cref="T:System.Transactions.TransactionAbortedException">
        <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> wird aufgerufen, und es wird zum ersten Mal ein Commit der Transaktion ausgeführt.</exception>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncState">
      <summary>Ruft das Objekt ab, das als letzter Parameter des <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />-Methodenaufrufs bereitgestellt wurde.</summary>
      <returns>Das Objekt, das als letzter Parameter des <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />-Methodenaufrufs bereitgestellt wurde.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncWaitHandle">
      <summary>Ruft einen <see cref="T:System.Threading.WaitHandle" /> ab, der verwendet wird, um auf den Abschluss eines asynchronen Vorgangs zu warten.</summary>
      <returns>Ein <see cref="T:System.Threading.WaitHandle" />, der verwendet wird, um auf den Abschluss eines asynchronen Vorgangs zu warten.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#CompletedSynchronously">
      <summary>Ruft eine Angabe darüber ab, ob der asynchrone Commitvorgang synchron abgeschlossen wurde.</summary>
      <returns>
        <see langword="true" />, wenn der asynchrone Commitvorgang synchron abgeschlossen wurde, andernfalls <see langword="false" />. Diese Eigenschaft gibt immer <see langword="false" /> zurück, auch wenn der Vorgang synchron abgeschlossen wurde.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#IsCompleted">
      <summary>Ruft eine Angabe darüber ab, ob der asynchrone Commitvorgang abgeschlossen wurde.</summary>
      <returns>
        <see langword="true" />, wenn der Vorgang abgeschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Transactions.DependentCloneOption">
      <summary>Steuert, welche Art von abhängiger Transaktion erstellt werden soll.</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.BlockCommitUntilComplete">
      <summary>Die abhängige Transaktion blockiert den Commitprozess der Transaktion, bis ein Timeout für die übergeordnete Transaktion auftritt oder <see cref="M:System.Transactions.DependentTransaction.Complete" /> aufgerufen wird. In diesem Fall können weitere Aktionen für die Transaktion ausgeführt und neue Eintragungen erstellt werden.</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.RollbackIfNotComplete">
      <summary>Die abhängige Transaktion bricht automatisch die Transaktion ab, wenn der Commit für die übergeordnete Transaktion vor dem Aufruf von <see cref="M:System.Transactions.DependentTransaction.Complete" /> aufgerufen wird.</summary>
    </member>
    <member name="T:System.Transactions.DependentTransaction">
      <summary>Beschreibt einen Klon einer Transaktion und gewährleistet, dass kein Commit der Transaktion ausgeführt werden kann, solange die Anwendung bezüglich der Transaktion noch aktiv ist. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Transactions.DependentTransaction.Complete">
      <summary>Versucht, die abhängige Transaktion abzuschließen.</summary>
      <exception cref="T:System.Transactions.TransactionException">Jeder Versuch, weitere Aktionen für die Transaktion auszuführen, nachdem die Methode aufgerufen wurde. Hierzu gehören das Aufrufen von Methoden wie <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> oder jegliche Serialisierungsvorgänge in der Transaktion.</exception>
    </member>
    <member name="T:System.Transactions.Enlistment">
      <summary>Erleichtert die Kommunikation zwischen einem eingetragenen Transaktionsteilnehmer und dem Transaktions-Manager während der letzten Phase der Transaktion.</summary>
    </member>
    <member name="M:System.Transactions.Enlistment.Done">
      <summary>Gibt an, dass der Transaktionsteilnehmer seine Aufgaben abgeschlossen hat.</summary>
    </member>
    <member name="T:System.Transactions.EnlistmentOptions">
      <summary>Bestimmt, ob das Objekt während der Vorbereitungsphase eingetragen werden soll.</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired">
      <summary>Das Objekt muss während der Anfangsphase des Commitprozesses eingetragen werden.</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.None">
      <summary>Das Objekt erfordert in der Anfangsphase des Commitprozesses keine Eintragung.</summary>
    </member>
    <member name="T:System.Transactions.EnterpriseServicesInteropOption">
      <summary>Gibt an, wie verteilte Transaktionen mit COM+-Transaktionen interagieren.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Automatic">
      <summary>Sucht nach einem vorhandenen COM+-Kontext. Wenn ein solcher gefunden wird, wird eine Synchronisierung mit diesem ausgeführt.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Full">
      <summary>Der <see cref="N:System.EnterpriseServices" />-Kontext (der durch Aufrufen der statischen <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" />-Methode der <see cref="T:System.EnterpriseServices.ContextUtil" />-Klasse abgerufen werden kann) und die <see cref="N:System.Transactions" />-Ambient-Transaktion (die durch Aufrufen der statischen <see cref="P:System.Transactions.Transaction.Current" />-Methode der <see cref="T:System.Transactions.Transaction" />-Klasse abgerufen werden kann) werden immer synchronisiert. Dadurch wird die Leistung beeinträchtigt, da möglicherweise neue <see cref="N:System.EnterpriseServices" />-Kontexte erstellt werden müssen.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.None">
      <summary>Es besteht keine Synchronisierung zwischen <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> und <see cref="P:System.Transactions.Transaction.Current" />.</summary>
    </member>
    <member name="T:System.Transactions.HostCurrentTransactionCallback">
      <summary>Stellt für die Hostumgebung einen Mechanismus zur Verfügung, mit der sie ihr Standardkonzept von <see cref="P:System.Transactions.Transaction.Current" /> bereitstellen kann.</summary>
      <returns>Ein <see cref="T:System.Transactions.Transaction" />-Objekt.</returns>
    </member>
    <member name="T:System.Transactions.IDtcTransaction">
      <summary>Beschreibt eine DTC-Transaktion.</summary>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)">
      <summary>Bricht eine Transaktion ab.</summary>
      <param name="reason">Eine optionale <see cref="T:System.EnterpriseServices.BOID" />, die angibt, warum die Transaktion abgebrochen wird. Dieser Parameter kann <see langword="null" /> sein und gibt in diesem Fall an, dass kein Grund für den Abbruch angegeben ist.</param>
      <param name="retaining">Dieser Wert muss <see langword="false" /> sein.</param>
      <param name="async">Wenn <paramref name="async" /><see langword="true" /> ist, wird ein asynchroner Abbruch ausgeführt, und der Aufrufer muss <see langword="ITransactionOutcomeEvents" /> verwenden, um das Ergebnis der Transaktion zu erfahren.</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)">
      <summary>Führt einen Commit für die Transaktion aus.</summary>
      <param name="retaining">Dieser Wert muss <see langword="false" /> sein.</param>
      <param name="commitType">Ein Wert aus der OLE DB-Enumeration <see langword="XACTTC" />.</param>
      <param name="reserved">Dieser Wert muss null (0) sein.</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)">
      <summary>Ruft Informationen zu einer Transaktion ab.</summary>
      <param name="transactionInformation">Zeiger auf die durch den Aufrufer reservierte <see cref="T:System.EnterpriseServices.XACTTRANSINFO" />-Struktur zum Empfangen von Transaktionsinformationen. Dieser Wert darf nicht <see langword="null" /> sein.</param>
    </member>
    <member name="T:System.Transactions.IEnlistmentNotification">
      <summary>Beschreibt eine Schnittstelle, die ein Ressourcen-Manager implementieren sollte, um beim Eintragen für die Teilnahme Zweiphasencommit-Benachrichtigungsrückrufe für den Transaktions-Manager bereitzustellen.</summary>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
      <summary>Benachrichtigt ein eingetragenes Objekt darüber, dass ein Commit für eine Transaktion ausgeführt wird.</summary>
      <param name="enlistment">Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
      <summary>Benachrichtigt ein eingetragenes Objekt darüber, dass der Status einer Transaktion zweifelhaft ist.</summary>
      <param name="enlistment">Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
      <summary>Benachrichtigt ein eingetragenes Objekt darüber, dass eine Transaktion für einen Commit vorbereitet wurde.</summary>
      <param name="preparingEnlistment">Ein <see cref="T:System.Transactions.PreparingEnlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
      <summary>Benachrichtigt ein eingetragenes Objekt, dass ein Rollback für eine Transaktion ausgeführt wird (sie wird abgebrochen).</summary>
      <param name="enlistment">Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
    </member>
    <member name="T:System.Transactions.IPromotableSinglePhaseNotification">
      <summary>Beschreibt ein Objekt, das als Commit-Delegat für eine nicht verteilte Transaktion in einem Ressourcen-Manager fungiert.</summary>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize">
      <summary>Benachrichtigt einen Transaktionsteilnehmer, dass die Eintragung erfolgreich abgeschlossen wurde.</summary>
      <exception cref="T:System.Transactions.TransactionException">Es wurde versucht, eine Transaktion einzutragen oder zu serialisieren.</exception>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)">
      <summary>Benachrichtigt ein eingetragenes Objekt darüber, dass ein Rollback für die Transaktion ausgeführt wird.</summary>
      <param name="singlePhaseEnlistment">Ein <see cref="T:System.Transactions.SinglePhaseEnlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary>Benachrichtigt ein eingetragenes Objekt darüber, dass ein Commit für die Transaktion ausgeführt wird.</summary>
      <param name="singlePhaseEnlistment">Eine <see cref="T:System.Transactions.SinglePhaseEnlistment" />-Schnittstelle, mit deren Hilfe eine Antwort an den Transaktions-Manager gesendet wird.</param>
    </member>
    <member name="T:System.Transactions.ISimpleTransactionSuperior">
      <summary>Stellt eine Transaktion dar, bei der es sich um keine Stammtransaktion handelt, deren Verwaltung jedoch an MSDTC eskaliert werden kann.</summary>
    </member>
    <member name="M:System.Transactions.ISimpleTransactionSuperior.Rollback">
      <summary>Benachrichtigt ein eingetragenes Objekt darüber, dass ein Rollback für die Transaktion ausgeführt wird.</summary>
    </member>
    <member name="T:System.Transactions.ISinglePhaseNotification">
      <summary>Beschreibt ein Ressourcenobjekt, das die Einphasencommit-Optimierung für die Einbeziehung in eine Transaktion unterstützt.</summary>
    </member>
    <member name="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary>Stellt die Implementierung des Ressourcen-Managers des Rückrufs für die Einphasencommit-Optimierung dar.</summary>
      <param name="singlePhaseEnlistment">Ein <see cref="T:System.Transactions.SinglePhaseEnlistment" />, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
    </member>
    <member name="T:System.Transactions.IsolationLevel">
      <summary>Gibt die Isolationsebene einer Transaktion an.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Chaos">
      <summary>Die ausstehenden Änderungen von höher isolierten Transaktionen können nicht überschrieben werden.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadCommitted">
      <summary>Flüchtige Daten können während der Transaktion nicht gelesen werden, sie können jedoch geändert werden.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadUncommitted">
      <summary>Flüchtige Daten können während der Transaktion gelesen und geändert werden.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.RepeatableRead">
      <summary>Flüchtige Daten können während der Transaktion gelesen, jedoch nicht geändert werden. Neue Daten können während der Transaktion hinzugefügt werden.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Serializable">
      <summary>Flüchtige Daten können gelesen, jedoch nicht geändert werden. Während der Transaktion können keine neuen Daten hinzugefügt werden.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Snapshot">
      <summary>
        <para>Flüchtige Daten können gelesen werden. Bevor in einer Transaktion Daten geändert werden, wird überprüft, ob die Daten nach dem ersten Lesen von einer anderen Transaktion geändert wurden. Wenn die Daten aktualisiert wurden, wird ein Fehler ausgelöst. Dadurch kann eine Transaktion den zuvor übernommenen Wert der Daten abrufen.</para>
        <para>Wenn Sie versuchen, eine mit der <see langword="Snapshot" />-Isolationsstufe erstellte Transaktion höher zu stufen, wird eine <see cref="T:System.InvalidOperationException" /> mit der folgenden Fehlermeldung ausgelöst: „Transaktionen mit IsolationLevel-Momentaufnahme können nicht erweitert werden“.</para>
      </summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Unspecified">
      <summary>Es wird nicht der angegebene Isolationsgrad verwendet, der Grad kann jedoch nicht bestimmt werden. Eine Ausnahme wird ausgelöst, wenn dieser Wert festgelegt ist.</summary>
    </member>
    <member name="T:System.Transactions.ITransactionPromoter">
      <summary>Beschreibt eine delegierte Transaktion für eine vorhandene Transaktion, deren Verwaltung bei Bedarf an MSDTC eskaliert werden kann.</summary>
    </member>
    <member name="M:System.Transactions.ITransactionPromoter.Promote">
      <summary>Benachrichtigt ein eingetragenes Objekt, dass eine Eskalation der delegierten Transaktion angefordert wurde.</summary>
      <returns>Ein Sender/Empfänger-Weitergabetoken, das eine verteilte Transaktion marshallt. Weitere Informationen finden Sie unter <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" />.</returns>
    </member>
    <member name="T:System.Transactions.PreparingEnlistment">
      <summary>Erleichtert die Kommunikation zwischen einem eingetragenen Transaktionsteilnehmer und dem Transaktions-Manager in der Vorbereitungsphase der Transaktion.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback">
      <summary>Gibt an, dass ein Rollback für die Transaktion ausgeführt werden soll.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback(System.Exception)">
      <summary>Gibt an, dass ein Rollback für die Transaktion ausgeführt werden soll.</summary>
      <param name="e">Eine Erklärung der Ursache für das Auslösen eines Rollbacks.</param>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.Prepared">
      <summary>Gibt an, dass ein Commit für die Transaktion ausgeführt werden kann.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.RecoveryInformation">
      <summary>Ruft die Wiederherstellungsinformationen einer Eintragung ab.</summary>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, Wiederherstellungsinformationen in einer flüchtigen Eintragung abzurufen, die keine Wiederherstellungsinformationen generiert.</exception>
      <returns>Die Wiederherstellungsinformationen einer Eintragung.</returns>
    </member>
    <member name="T:System.Transactions.SinglePhaseEnlistment">
      <summary>Stellt eine Reihe von Rückrufen bereit, die die Kommunikation zwischen einem für einen Einphasencommit eingetragenen Teilnehmer und dem Transaktions-Manager fördern, wenn die <see cref="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" />-Benachrichtigung empfangen wird.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted">
      <summary>Stellt einen Rückruf dar, mit dem dem Transaktions-Manager mitgeteilt wird, dass ein Rollback der Transaktion ausgeführt werden soll.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)">
      <summary>Stellt einen Rückruf dar, mit dem dem Transaktions-Manager mitgeteilt wird, dass ein Rollback der Transaktion ausgeführt werden soll. Außerdem wird eine Erklärung angegeben.</summary>
      <param name="e">Eine Erklärung der Ursache für das Initiieren eines Rollbacks.</param>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Committed">
      <summary>Stellt einen Rückruf dar, mit dem dem Transaktions-Manager mitgeteilt wird, dass der Einphasencommit erfolgreich ausgeführt wurde.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt">
      <summary>Stellt einen Rückruf dar, mit dem dem Transaktions-Manager mitgeteilt wird, dass der Status der Transaktion zweifelhaft ist.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)">
      <summary>Stellt einen Rückruf dar, mit dem dem Transaktions-Manager mitgeteilt wird, dass der Status der Transaktion zweifelhaft ist. Außerdem wird eine Erklärung angegeben.</summary>
      <param name="e">Eine Erklärung der Ursache für den zweifelhaften Status der Transaktion.</param>
    </member>
    <member name="T:System.Transactions.SubordinateTransaction">
      <summary>Stellt eine Transaktion dar, die keine Stammtransaktion ist, aber delegiert werden kann. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.SubordinateTransaction" />-Klasse.</summary>
      <param name="isoLevel">Die Isolationsstufe der Transaktion.</param>
      <param name="superior">Eine <see cref="T:System.Transactions.ISimpleTransactionSuperior" /></param>
    </member>
    <member name="T:System.Transactions.Transaction">
      <summary>Stellt eine Transaktion dar.</summary>
    </member>
    <member name="E:System.Transactions.Transaction.TransactionCompleted">
      <summary>Gibt an, dass die Transaktion abgeschlossen ist.</summary>
      <exception cref="T:System.ObjectDisposedException">Ein Versuch, dieses Ereignis für eine bereits verworfene Transaktion zu abonnieren.</exception>
    </member>
    <member name="M:System.Transactions.Transaction.Clone">
      <summary>Erstellt einen Klon der Transaktion.</summary>
      <returns>Eine neue <see cref="T:System.Transactions.Transaction" />, die eine Kopie des aktuellen Transaktionsobjekts darstellt.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
      <summary>Erstellt einen abhängigen Klon der Transaktion.</summary>
      <param name="cloneOption">Eine <see cref="T:System.Transactions.DependentCloneOption" />, die steuert, welche Art abhängige Transaktion erstellt wird.</param>
      <returns>Eine <see cref="T:System.Transactions.DependentTransaction" />, die den abhängigen Klon darstellt.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Dispose">
      <summary>Gibt alle vom Objekt reservierten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary>Trägt einen permanenten Ressourcen-Manager ein, der das Zwei-Phasen-Commit unterstützt und an einer Transaktion beteiligt sein soll.</summary>
      <param name="resourceManagerIdentifier">Ein eindeutiger Bezeichner für einen Ressourcen-Manager, der bei einem Fehler oder Neustart des Ressourcen-Managers erhalten bleiben soll.</param>
      <param name="enlistmentNotification">Ein Objekt, das die <see cref="T:System.Transactions.IEnlistmentNotification" />-Schnittstelle implementiert, um Benachrichtigungen über Zwei-Phasen-Commits zu empfangen.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />, wenn der Ressourcen-Manager während der Vorbereitungsphase zusätzliche Arbeiten ausführen möchte.</param>
      <returns>Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, das die Eintragung beschreibt.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary>Trägt einen permanenten Ressourcen-Manager ein, der das Optimieren eines Ein-Phasen-Commits unterstützt und an einer Transaktion beteiligt sein soll.</summary>
      <param name="resourceManagerIdentifier">Ein eindeutiger Bezeichner für einen Ressourcen-Manager, der bei einem Fehler oder Neustart des Ressourcen-Managers erhalten bleiben soll.</param>
      <param name="singlePhaseNotification">Ein Objekt, das die <see cref="T:System.Transactions.ISinglePhaseNotification" />-Schnittstelle implementiert, die für den Empfang von Benachrichtigungen über Ein- und Zwei-Phasen-Commits geeignet sein muss.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />, wenn der Ressourcen-Manager während der Vorbereitungsphase zusätzliche Arbeiten ausführen möchte.</param>
      <returns>Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, das die Eintragung beschreibt.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
      <summary>Trägt einen Ressourcen-Manager mit einer internen Transaktion mithilfe einer heraufstufbaren Einphaseneintragung (PSPE) ein.</summary>
      <param name="promotableSinglePhaseNotification">Eine vom Teilnehmer implementierte <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" />-Schnittstelle.</param>
      <returns>Eine <see cref="T:System.Transactions.SinglePhaseEnlistment" />-Schnittstellenimplementierung, die die Eintragung beschreibt.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
      <summary>Trägt einen Ressourcen-Manager mit einer internen Transaktion mithilfe einer heraufstufbaren Einphaseneintragung (PSPE) ein.</summary>
      <param name="promotableSinglePhaseNotification">Eine vom Teilnehmer implementierte <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" />-Schnittstelle.</param>
      <param name="promoterType">Der Typ des Prozessors der verteilten Transaktion.</param>
      <returns>Eine <see cref="T:System.Transactions.SinglePhaseEnlistment" />-Schnittstellenimplementierung, die die Eintragung beschreibt.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary>Trägt einen flüchtigen Ressourcen-Manager, der den Zweiphasencommit zur Teilnahme an einer Transaktion unterstützt, in die Liste ein.</summary>
      <param name="enlistmentNotification">Ein Objekt, das die <see cref="T:System.Transactions.IEnlistmentNotification" />-Schnittstelle implementiert, um Zweiphasencommit-Benachrichtigungen zu empfangen.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />, wenn der Ressourcen-Manager während der Vorbereitungsphase zusätzliche Arbeiten ausführen möchte.</param>
      <returns>Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, das die Eintragung beschreibt.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary>Trägt einen flüchtigen Ressourcen-Manager ein, der das Optimieren eines Ein-Phasen-Commits unterstützt und an einer Transaktion beteiligt sein soll.</summary>
      <param name="singlePhaseNotification">Ein Objekt, das die <see cref="T:System.Transactions.ISinglePhaseNotification" />-Schnittstelle implementiert, die für den Empfang von Benachrichtigungen über Ein- und Zwei-Phasen-Commits geeignet sein muss.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />, wenn der Ressourcen-Manager während der Vorbereitungsphase zusätzliche Arbeiten ausführen möchte.</param>
      <returns>Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, das die Eintragung beschreibt.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Equals(System.Object)">
      <summary>Bestimmt, ob diese Transaktion und das angegebene Objekt übereinstimmen.</summary>
      <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="obj" /> und diese Transaktion identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.GetPromotedToken">
      <summary>Erhält das von der <c>Promote</c>-Methode zurückgegebene <c>byte[]</c>, wenn die Transaktion heraufgestuft wird.</summary>
      <returns>Das von der <c>Promote</c>-Methode zurückgegebene <c>byte[]</c>, wenn die Transaktion heraufgestuft wird.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary>Überprüft, ob zwei angegebene <see cref="T:System.Transactions.Transaction" />-Instanzen äquivalent sind.</summary>
      <param name="x">Die <see cref="T:System.Transactions.Transaction" />-Instanz auf der linken Seite des Gleichheitsoperators.</param>
      <param name="y">Die <see cref="T:System.Transactions.Transaction" />-Instanz auf der rechten Seite des Gleichheitsoperators.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="x" /> und <paramref name="y" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Transactions.Transaction" />-Instanzen ungleich sind.</summary>
      <param name="x">Die <see cref="T:System.Transactions.Transaction" />-Instanz auf der linken Seite des Ungleichheitsoperators.</param>
      <param name="y">Die <see cref="T:System.Transactions.Transaction" />-Instanz auf der rechten Seite des Ungleichheitsoperators.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="x" /> und <paramref name="y" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary>Stuft einen permanenten Ressourcen-Manager höher, der das Zwei-Phasen-Commit unterstützt und an einer Transaktion beteiligt sein soll, oder trägt diesen ein.</summary>
      <param name="resourceManagerIdentifier">Ein eindeutiger Bezeichner für einen Ressourcen-Manager, der bei einem Fehler oder Neustart des Ressourcen-Managers erhalten bleiben soll.</param>
      <param name="promotableNotification">Ein Objekt, das als Commit-Delegat für eine nicht verteilte Transaktion in einem Ressourcen-Manager fungiert.</param>
      <param name="enlistmentNotification">Ein Objekt, das die <see cref="T:System.Transactions.IEnlistmentNotification" />-Schnittstelle implementiert, um Benachrichtigungen über Zwei-Phasen-Commits zu empfangen.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />, wenn der Ressourcen-Manager während der Vorbereitungsphase zusätzliche Arbeiten ausführen möchte.</param>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback">
      <summary>Führt einen Rollback für die Transaktion aus (bricht diese ab).</summary>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback(System.Exception)">
      <summary>Führt einen Rollback für die Transaktion aus (bricht diese ab).</summary>
      <param name="e">Eine Erklärung für das Eintreten eines Rollbacks.</param>
    </member>
    <member name="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
      <summary>Legt den Bezeichner der verteilten Transaktion fest, der vom Nicht-MSDTC-Promoter generiert wird.</summary>
      <param name="promotableNotification">Eine vom Teilnehmer implementierte <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" />-Schnittstelle.</param>
      <param name="distributedTransactionIdentifier">Der Bezeichner für die Transaktion, der vom Manager für verteilte Transaktionen verwendet werden.</param>
    </member>
    <member name="M:System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Ruft <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten ab, die für das Serialisieren dieser Transaktion erforderlich sind.</summary>
      <param name="serializationInfo">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Das Ziel (siehe <see cref="T:System.Runtime.Serialization.StreamingContext" />) dieser Serialisierung.</param>
    </member>
    <member name="P:System.Transactions.Transaction.Current">
      <summary>Ruft die Ambient-Transaktion ab oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Transactions.Transaction" />, die die aktuelle Transaktion beschreibt.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.IsolationLevel">
      <summary>Ruft die Isolationsstufe der Transaktion ab.</summary>
      <returns>Einer der <see cref="T:System.Transactions.IsolationLevel" />-Werte, der die Isolationsstufe der Transaktion angibt.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.PromoterType">
      <summary>Bestimmt eindeutig das Format des von der „Promote“-Methode zurückgegebenen <c>byte[]</c>, wenn die Transaktion heraufgestuft wird.</summary>
      <returns>Eine GUID, die das Format des von der "Promote"-Methode zurückgegebenen <c>Byte []</c> eindeutig identifiziert, wenn die Transaktion herauf gestuft wird.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.TransactionInformation">
      <summary>Ruft zusätzliche Informationen zu einer Transaktion ab.</summary>
      <returns>Eine <see cref="T:System.Transactions.TransactionInformation" />-Klasse, die zusätzliche Informationen zur Transaktion enthält.</returns>
    </member>
    <member name="T:System.Transactions.TransactionAbortedException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Vorgang für eine Transaktion ausgeführt wird, für die bereits ein Rollback ausgeführt wurde, oder wenn versucht wird, einen Commit der Transaktion auszuführen und die Transaktion abgebrochen wird.</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionAbortedException" />-Klasse.</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionAbortedException" />-Klasse mit den angegebenen Informationen zu Serialisierung und Streamingkontext.</summary>
      <param name="info">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das eine fehlgeschlagene Serialisierung beschreibt.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das den Kontext einer fehlgeschlagenen Serialisierung beschreibt.</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionAbortedException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message">Ein <see cref="T:System.String" /> mit einer Meldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionAbortedException" />-Klasse mit der angegebenen Meldung und der angegebenen inneren Ausnahme.</summary>
      <param name="message">Ein <see cref="T:System.String" /> mit einer Meldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Ruft die Ausnahmeinstanz ab, die die aktuelle Ausnahme ausgelöst hat. Weitere Informationen finden Sie in den Ausführungen zur <see cref="P:System.Exception.InnerException" />-Eigenschaft.</param>
    </member>
    <member name="T:System.Transactions.TransactionCompletedEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.Transactions.Transaction.TransactionCompleted" />-Ereignis einer <see cref="T:System.Transactions.Transaction" />-Klasse behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Das <see cref="T:System.Transactions.TransactionEventArgs" />-Element, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Transactions.TransactionEventArgs">
      <summary>Stellt Daten für die folgenden Transaktionsereignisse bereit: <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" />, <see cref="E:System.Transactions.Transaction.TransactionCompleted" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionEventArgs.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionEventArgs" />-Klasse.</summary>
    </member>
    <member name="P:System.Transactions.TransactionEventArgs.Transaction">
      <summary>Ruft die Transaktion ab, deren Ereignisstatus bereitgestellt wird.</summary>
      <returns>Eine <see cref="T:System.Transactions.Transaction" />, für die der Ereignisstatus bereitgestellt wird.</returns>
    </member>
    <member name="T:System.Transactions.TransactionException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn Sie Vorgänge für eine Transaktion ausführen, die keine weiteren Aktionen akzeptieren kann.</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionException" />-Klasse.</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionException" />-Klasse mit den angegebenen Informationen zu Serialisierung und Streamingkontext.</summary>
      <param name="info">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das eine fehlgeschlagene Serialisierung beschreibt.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das den Kontext einer fehlgeschlagenen Serialisierung beschreibt.</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message">Ein <see cref="T:System.String" /> mit einer Meldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionException" />-Klasse mit der angegebenen Meldung und der angegebenen inneren Ausnahme.</summary>
      <param name="message">Ein <see cref="T:System.String" /> mit einer Meldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Ruft die Ausnahmeinstanz ab, die die aktuelle Ausnahme ausgelöst hat. Weitere Informationen finden Sie in den Ausführungen zur <see cref="P:System.Exception.InnerException" />-Eigenschaft.</param>
    </member>
    <member name="T:System.Transactions.TransactionInDoubtException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Vorgang für eine Transaktion ausgeführt wird, die zweifelhaft ist, oder wenn versucht wird, die Transaktion auszuführen und die Transaktion den Status InDoubt annimmt.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionInDoubtException" />-Klasse.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionInDoubtException" />-Klasse mit den angegebenen Informationen zu Serialisierung und Streamingkontext.</summary>
      <param name="info">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das eine fehlgeschlagene Serialisierung beschreibt.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das den Kontext einer fehlgeschlagenen Serialisierung beschreibt.</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionInDoubtException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message">Ein <see cref="T:System.String" /> mit einer Meldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionInDoubtException" />-Klasse mit der angegebenen Meldung und der angegebenen inneren Ausnahme.</summary>
      <param name="message">Ein <see cref="T:System.String" /> mit einer Meldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Ruft die Ausnahmeinstanz ab, die die aktuelle Ausnahme ausgelöst hat. Weitere Informationen finden Sie in den Ausführungen zur <see cref="P:System.Exception.InnerException" />-Eigenschaft.</param>
    </member>
    <member name="T:System.Transactions.TransactionInformation">
      <summary>Stellt zusätzliche Informationen zu einer Transaktion bereit.</summary>
    </member>
    <member name="P:System.Transactions.TransactionInformation.CreationTime">
      <summary>Ruft die Erstellungszeit der Transaktion ab.</summary>
      <returns>Eine Instanz von <see cref="T:System.DateTime" />, die die Erstellungszeit der Transaktion enthält.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.DistributedIdentifier">
      <summary>Ruft einen eindeutigen Bezeichner der eskalierten Transaktion ab.</summary>
      <returns>Ein <see cref="T:System.Guid" />, der den eindeutigen Bezeichner der eskalierten Transaktion enthält.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.LocalIdentifier">
      <summary>Ruft einen eindeutigen Bezeichner der Transaktion ab.</summary>
      <returns>Ein eindeutiger Bezeichner der Transaktion.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.Status">
      <summary>Ruft den Status der Transaktion ab.</summary>
      <returns>Ein <see cref="T:System.Transactions.TransactionStatus" />, der den Status der Transaktion enthält.</returns>
    </member>
    <member name="T:System.Transactions.TransactionInterop">
      <summary>Erleichtert die Interaktion zwischen <see cref="N:System.Transactions" /> und Komponenten, die geschrieben wurden, um mit MSDTC, COM+ oder <see cref="N:System.EnterpriseServices" /> zu interagieren. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.Transactions.TransactionInterop.PromoterTypeDtc">
      <summary>Der Typ des Prozessors der verteilten Transaktion.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
      <summary>Ruft eine <see cref="T:System.Transactions.IDtcTransaction" />-Instanz ab, die eine <see cref="T:System.Transactions.Transaction" /> darstellt.</summary>
      <param name="transaction">Eine <see cref="T:System.Transactions.Transaction" />-Instanz, die gemarshallt werden soll.</param>
      <returns>Ruft eine <see cref="T:System.Transactions.IDtcTransaction" />-Instanz ab, die eine <see cref="T:System.Transactions.Transaction" /> darstellt.  Die <see cref="T:System.Transactions.IDtcTransaction" />-Instanz ist mit dem unverwalteten Formular von ITransaction kompatibel, das von MSDTC und in Verbindung mit dem verwalteten Formular von <see cref="T:System.EnterpriseServices.ITransaction" /> verwendet wird, das von <see cref="N:System.EnterpriseServices" /> genutzt wird.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
      <summary>Wandelt ein Transaktionsobjekt in ein Exporttransaktionscookie um.</summary>
      <param name="transaction">Das zu marshallende <see cref="T:System.Transactions.Transaction" />-Objekt.</param>
      <param name="whereabouts">Eine Adresse, in der der Speicherort des Zieltransaktions-Managers beschrieben wird. Damit können zwei Transaktions-Manager miteinander kommunizieren und so eine Transaktion von einem System zum anderen weitergeben.</param>
      <returns>Ein Exporttransaktionscookie, das das angegebene <see cref="T:System.Transactions.Transaction" />-Objekt darstellt.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
      <summary>Generiert eine <see cref="T:System.Transactions.Transaction" /> aus einer angegebenen <see cref="T:System.Transactions.IDtcTransaction" />.</summary>
      <param name="transactionNative">Das zu marshallende <see cref="T:System.Transactions.IDtcTransaction" />-Objekt.</param>
      <returns>Eine <see cref="T:System.Transactions.Transaction" />-Instanz, die die angegebene <see cref="T:System.Transactions.IDtcTransaction" /> darstellt.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
      <summary>Generiert eine <see cref="T:System.Transactions.Transaction" /> aus dem angegebenen Exportcookie.</summary>
      <param name="cookie">Ein gemarshalltes Formular des Transaktionsobjekts.</param>
      <returns>Eine <see cref="T:System.Transactions.Transaction" /> aus dem angegebenen Exportcookie.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
      <summary>Generiert eine <see cref="T:System.Transactions.Transaction" />-Instanz aus dem angegebenen Senderverteilungstoken.</summary>
      <param name="propagationToken">Ein Weitergabetoken, das eine Transaktion darstellt.</param>
      <exception cref="T:System.Transactions.TransactionManagerCommunicationException">Eine Transaktion kann nicht deserialisiert werden, weil der Transaktions-Manager nicht erreichbar ist. Dies liegt möglicherweise an den Einstellungen für die Netzwerkfirewall oder die Sicherheit.</exception>
      <returns>Eine <see cref="T:System.Transactions.Transaction" /> vom angegebenen Senderpropagierungstoken.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
      <summary>Generiert ein Weitergabetoken für die angegebene <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="transaction">Eine Transaktion, die in ein Weitergabetoken gemarshallt werden soll.</param>
      <returns>Gemeinsam mit der <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" />-Methode stellt diese Methode Funktionen zur Sender/Empfänger-Weitergabe bereit, in der die Transaktion vom Remotecomputer "gezogen" wird, wenn sie zum Aufheben des Marshallens der Transaktion aufgerufen wird.  
  
Weitere Informationen zu anderen Propagierungsmodellen siehe <see cref="T:System.Transactions.TransactionInterop" />-Klasse.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetWhereabouts">
      <summary>Ruft den Verbleib des verteilten Transaktions-Managers ab, der für <see cref="N:System.Transactions" /> verwendet wird.</summary>
      <returns>Der Verbleib des verteilten Transaktions-Managers, der für <see cref="N:System.Transactions" /> verwendet wird.</returns>
    </member>
    <member name="T:System.Transactions.TransactionManager">
      <summary>Enthält zum Verwalten von Transaktionen verwendete Methoden. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="E:System.Transactions.TransactionManager.DistributedTransactionStarted">
      <summary>Gibt an, dass eine verteilte Transaktion gestartet wurde.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)">
      <summary>Benachrichtigt den Transaktions-Manager, dass ein nach einem Fehler wiederhergestellter Ressourcen-Manager die Neueintragung in allen nicht aufgelösten Transaktionen fertig gestellt hat.</summary>
      <param name="resourceManagerIdentifier">Eine <see cref="T:System.Guid" />, die die Ressource eindeutig angibt, mit deren Hilfe die Wiederherstellung erfolgen soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="resourceManagerIdentifier" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)">
      <summary>Trägt einen stabilen Teilnehmer in einer Transaktion erneut ein.</summary>
      <param name="resourceManagerIdentifier">Eine <see cref="T:System.Guid" />, die den Ressourcen-Manager eindeutig angibt.</param>
      <param name="recoveryInformation">Enthält zusätzliche Informationen zum Wiederherstellen.</param>
      <param name="enlistmentNotification">Ein Ressourcenobjekt, das <see cref="T:System.Transactions.IEnlistmentNotification" /> implementiert, um Benachrichtigungen zu empfangen.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="recoveryInformation" /> ist ungültig.  
  
- oder - 
Die Informationen des Transaktions-Managers in <paramref name="recoveryInformation" /> stimmen nicht mit denen des konfigurierten Transaktions-Managers überein.  
  
- oder - 
 <paramref name="RecoveryInformation" /> wird von <see cref="N:System.Transactions" /> nicht erkannt.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)" /> wurde bereits für den angegebenen <paramref name="resourceManagerIdentifier" /> aufgerufen. Die Neueintragung wird abgelehnt.</exception>
      <exception cref="T:System.Transactions.TransactionException">Der <paramref name="resourceManagerIdentifier" /> stimmt nicht mit dem Inhalt der angegebenen Wiederherstellungsinformationen in <paramref name="recoveryInformation" /> überein.</exception>
      <returns>Ein <see cref="T:System.Transactions.Enlistment" />, das den Eintrag beschreibt.</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.DefaultTimeout">
      <summary>Ruft das standardmäßige Timeoutintervall für neue Transaktionen ab.</summary>
      <returns>Ein <see cref="T:System.TimeSpan" />-Wert, der das Timeoutintervall für neue Transaktionen angibt.</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.HostCurrentCallback">
      <summary>Ruft eine benutzerdefinierte Transaktionsfactory ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Transactions.HostCurrentTransactionCallback" />, der eine benutzerdefinierte Transaktionsfactory enthält.</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.MaximumTimeout">
      <summary>Ruft das standardmäßige maximale Timeoutintervall für neue Transaktionen ab.</summary>
      <returns>Ein <see cref="T:System.TimeSpan" />-Wert, der das beim Erstellen neuer Transaktionen zulässige maximale Timeoutintervall angibt.</returns>
    </member>
    <member name="T:System.Transactions.TransactionManagerCommunicationException">
      <summary>Diese Ausnahme wird ausgelöst, wenn die Kommunikation zwischen Ressourcen-Manager und Transaktions-Manager nicht möglich ist.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionManagerCommunicationException" />-Klasse.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionManagerCommunicationException" />-Klasse mit den angegebenen Informationen zu Serialisierung und Streamingkontext.</summary>
      <param name="info">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das eine fehlgeschlagene Serialisierung beschreibt.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das den Kontext einer fehlgeschlagenen Serialisierung beschreibt.</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionManagerCommunicationException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message">Ein <see cref="T:System.String" /> mit einer Meldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionManagerCommunicationException" />-Klasse mit der angegebenen Meldung und der angegebenen inneren Ausnahme.</summary>
      <param name="message">Ein <see cref="T:System.String" /> mit einer Meldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Ruft die Ausnahmeinstanz ab, die die aktuelle Ausnahme ausgelöst hat. Weitere Informationen finden Sie in den Ausführungen zur <see cref="P:System.Exception.InnerException" />-Eigenschaft.</param>
    </member>
    <member name="T:System.Transactions.TransactionOptions">
      <summary>Enthält zusätzliche Informationen, die das Transaktionsverhalten bestimmen.</summary>
    </member>
    <member name="M:System.Transactions.TransactionOptions.Equals(System.Object)">
      <summary>Bestimmt, ob diese <see cref="T:System.Transactions.TransactionOptions" />-Instanz und das angegebene Objekt gleich sind.</summary>
      <param name="obj">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="obj" /> und diese <see cref="T:System.Transactions.TransactionOptions" />-Instanz identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Equality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary>Überprüft, ob zwei angegebene <see cref="T:System.Transactions.TransactionOptions" />-Instanzen äquivalent sind.</summary>
      <param name="x">Die <see cref="T:System.Transactions.TransactionOptions" />-Instanz auf der linken Seite des Gleichheitsoperators.</param>
      <param name="y">Die <see cref="T:System.Transactions.TransactionOptions" />-Instanz auf der rechten Seite des Gleichheitsoperators.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="x" /> und <paramref name="y" /> gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Inequality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Transactions.TransactionOptions" />-Instanzen ungleich sind.</summary>
      <param name="x">Die <see cref="T:System.Transactions.TransactionOptions" />-Instanz auf der linken Seite des Gleichheitsoperators.</param>
      <param name="y">Die <see cref="T:System.Transactions.TransactionOptions" />-Instanz auf der rechten Seite des Gleichheitsoperators.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="x" /> und <paramref name="y" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.IsolationLevel">
      <summary>Ruft den Isolationsgrad der Transaktion ab oder legt diesen fest.</summary>
      <returns>Eine <see cref="T:System.Transactions.IsolationLevel" />-Enumeration, die die Isolationsebene der Transaktion angibt.</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.Timeout">
      <summary>Ruft die Timeoutperiode für diese Transaktion ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.TimeSpan" />-Wert, der die Timeoutperiode für die Transaktion angibt.</returns>
    </member>
    <member name="T:System.Transactions.TransactionPromotionException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn eine Heraufstufung fehlschlägt.</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionPromotionException" />-Klasse.</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionPromotionException" />-Klasse mit den angegebenen Informationen zu Serialisierung und Streamingkontext.</summary>
      <param name="info">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das eine fehlgeschlagene Serialisierung beschreibt.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das den Kontext einer fehlgeschlagenen Serialisierung beschreibt.</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionPromotionException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message">Ein <see cref="T:System.String" /> mit einer Meldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionPromotionException" />-Klasse mit der angegebenen Meldung und der angegebenen inneren Ausnahme.</summary>
      <param name="message">Ein <see cref="T:System.String" /> mit einer Meldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Ruft die Ausnahmeinstanz ab, die die aktuelle Ausnahme ausgelöst hat. Weitere Informationen finden Sie in den Ausführungen zur <see cref="P:System.Exception.InnerException" />-Eigenschaft.</param>
    </member>
    <member name="T:System.Transactions.TransactionScope">
      <summary>Ändert einen Codeblock in transaktional. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse.</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse und legt die angegebene Transaktion als umgebende Transaktion fest, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</summary>
      <param name="transactionToUse">Die Transaktion, die als umgebende Transaktion festgelegt werden soll, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse mit dem angegebenen Timeoutwert und legt die angegebene Transaktion als umgebende Transaktion fest, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</summary>
      <param name="transactionToUse">Die Transaktion, die als umgebende Transaktion festgelegt werden soll, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</param>
      <param name="scopeTimeout">Die <see cref="T:System.TimeSpan" />, nach der der Transaktionsbereich abläuft und die Transaktion abgebrochen wird.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse mit dem angegebenen Timeoutwert und den angegebenen COM+-Interoperabilitätsanforderungen und legt die angegebene Transaktion als umgebende Transaktion fest, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</summary>
      <param name="transactionToUse">Die Transaktion, die als umgebende Transaktion festgelegt werden soll, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</param>
      <param name="scopeTimeout">Die <see cref="T:System.TimeSpan" />, nach der der Transaktionsbereich abläuft und die Transaktion abgebrochen wird.</param>
      <param name="interopOption">Eine Instanz der <see cref="T:System.Transactions.EnterpriseServicesInteropOption" />-Enumeration, die beschreibt, wie die zugeordnete Transaktion mit COM+-Transaktionen interagiert.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>[Wird nur im .NET Framework 4.5.1 und höheren Versionen unterstützt] 
Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse mit dem angegebenen Timeoutwert und legt die angegebene Transaktion als umgebende Transaktion fest, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</summary>
      <param name="transactionToUse">Die Transaktion, die als umgebende Transaktion festgelegt werden soll, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</param>
      <param name="scopeTimeout">Die <see cref="T:System.TimeSpan" />, nach der der Transaktionsbereich abläuft und die Transaktion abgebrochen wird.</param>
      <param name="asyncFlowOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> -Enumeration, die beschreibt, ob die ambient-Transaktion, die dem Transaktionsbereich zugeordnet ist, über Thread Fortsetzungen übergeben wird, wenn Task- oder asynchrone async/await-.NET-Programmiermuster verwenden.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>[Wird nur im .NET Framework 4.5.1 und höheren Versionen unterstützt] 
Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse und legt die angegebene Transaktion als umgebende Transaktion fest, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</summary>
      <param name="transactionToUse">Die Transaktion, die als umgebende Transaktion festgelegt werden soll, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</param>
      <param name="asyncFlowOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> -Enumeration, die beschreibt, ob die ambient-Transaktion, die dem Transaktionsbereich zugeordnet ist, über Thread Fortsetzungen übergeben wird, wenn Task- oder asynchrone async/await-.NET-Programmiermuster verwenden.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse mit der angegebenen asynchronen flow-Option.</summary>
      <param name="asyncFlowOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> -Enumeration, die beschreibt, ob die ambient-Transaktion, die dem Transaktionsbereich zugeordnet ist, über Thread Fortsetzungen übergeben wird, wenn Task- oder asynchrone async/await-.NET-Programmiermuster verwenden.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse mit den angegebenen Anforderungen.</summary>
      <param name="scopeOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeOption" />-Enumeration, die die diesem Transaktionsbereich zugeordneten Transaktionsanforderungen beschreibt.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse mit dem angegebenen Timeoutwert und den angegebenen Anforderungen.</summary>
      <param name="scopeOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeOption" />-Enumeration, die die diesem Transaktionsbereich zugeordneten Transaktionsanforderungen beschreibt.</param>
      <param name="scopeTimeout">Die <see cref="T:System.TimeSpan" />, nach der der Transaktionsbereich abläuft und die Transaktion abgebrochen wird.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse mit dem angegebenen Timeoutwert, den Anforderungen und der asynchronen flow-Option.</summary>
      <param name="scopeOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeOption" />-Enumeration, die die diesem Transaktionsbereich zugeordneten Transaktionsanforderungen beschreibt.</param>
      <param name="scopeTimeout">Die <see cref="T:System.TimeSpan" />, nach der der Transaktionsbereich abläuft und die Transaktion abgebrochen wird.</param>
      <param name="asyncFlowOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> -Enumeration, die beschreibt, ob die ambient-Transaktion, die dem Transaktionsbereich zugeordnet ist, über Thread Fortsetzungen übergeben wird, wenn Task- oder asynchrone async/await-.NET-Programmiermuster verwenden.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse mit den angegebenen Anforderungen.</summary>
      <param name="scopeOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeOption" />-Enumeration, die die diesem Transaktionsbereich zugeordneten Transaktionsanforderungen beschreibt.</param>
      <param name="transactionOptions">Eine <see cref="T:System.Transactions.TransactionOptions" />-Struktur, die die Transaktionsoptionen beschreibt, die beim Erstellen einer neuen Transaktion verwendet werden. Wenn eine vorhandene Transaktion verwendet wird, gilt der Timeoutwert in diesem Parameter für den Transaktionsbereich. Wenn diese Zeit abläuft, bevor der Bereich verworfen wird, wird die Transaktion abgebrochen.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse mit dem angegebenen Bereich und den angegebenen COM+-Interoperabilitätsanforderungen und Transaktionsoptionen.</summary>
      <param name="scopeOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeOption" />-Enumeration, die die diesem Transaktionsbereich zugeordneten Transaktionsanforderungen beschreibt.</param>
      <param name="transactionOptions">Eine <see cref="T:System.Transactions.TransactionOptions" />-Struktur, die die Transaktionsoptionen beschreibt, die beim Erstellen einer neuen Transaktion verwendet werden. Wenn eine vorhandene Transaktion verwendet wird, gilt der Timeoutwert in diesem Parameter für den Transaktionsbereich. Wenn diese Zeit abläuft, bevor der Bereich verworfen wird, wird die Transaktion abgebrochen.</param>
      <param name="interopOption">Eine Instanz der <see cref="T:System.Transactions.EnterpriseServicesInteropOption" />-Enumeration, die beschreibt, wie die zugeordnete Transaktion mit COM+-Transaktionen interagiert.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>[Wird nur im .NET Framework 4.5.1 und höheren Versionen unterstützt] 
Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse mit den angegebenen Anforderungen und der asynchronen flow-Option.</summary>
      <param name="scopeOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeOption" />-Enumeration, die die diesem Transaktionsbereich zugeordneten Transaktionsanforderungen beschreibt.</param>
      <param name="transactionOptions">Eine <see cref="T:System.Transactions.TransactionOptions" />-Struktur, die die Transaktionsoptionen beschreibt, die beim Erstellen einer neuen Transaktion verwendet werden. Wenn eine vorhandene Transaktion verwendet wird, gilt der Timeoutwert in diesem Parameter für den Transaktionsbereich. Wenn diese Zeit abläuft, bevor der Bereich verworfen wird, wird die Transaktion abgebrochen.</param>
      <param name="asyncFlowOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> -Enumeration, die beschreibt, ob die ambient-Transaktion, die dem Transaktionsbereich zugeordnet ist, über Thread Fortsetzungen übergeben wird, wenn Task- oder asynchrone async/await-.NET-Programmiermuster verwenden.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Transactions.TransactionScope" />-Klasse mit den angegebenen Anforderungen und der asynchronen flow-Option.</summary>
      <param name="scopeOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeOption" />-Enumeration, die die diesem Transaktionsbereich zugeordneten Transaktionsanforderungen beschreibt.</param>
      <param name="asyncFlowOption">Eine Instanz der <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> -Enumeration, die beschreibt, ob die ambient-Transaktion, die dem Transaktionsbereich zugeordnet ist, über Thread Fortsetzungen übergeben wird, wenn Task- oder asynchrone async/await-.NET-Programmiermuster verwenden.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.Complete">
      <summary>Gibt an, dass alle Vorgänge innerhalb des Bereichs erfolgreich abgeschlossen wurden.</summary>
      <exception cref="T:System.InvalidOperationException">Diese Methode wurde bereits einmal aufgerufen.</exception>
    </member>
    <member name="M:System.Transactions.TransactionScope.Dispose">
      <summary>Beendet den Transaktionsbereich.</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeAsyncFlowOption">
      <summary>Gibt an, ob Transaktionsfluss über Thread Fortsetzungen für <see cref="T:System.Transactions.TransactionScope" /> aktiviert ist.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeAsyncFlowOption.Enabled">
      <summary>Gibt an, dass es sich bei aktiviertem Transaktionsfluss über Thread Fortsetzungen handelt.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeAsyncFlowOption.Suppress">
      <summary>Gibt an, dass Transaktionsfluss über Thread Fortsetzungen unterdrückt wird. Dies ist die Standardeinstellung, wenn kein <see langword="TransactionScopeAsyncFlowOption" />-Enumerationswert im <see cref="Overload:System.Transactions.TransactionScope.#ctor" />-Konstruktor angegeben wird.</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeOption">
      <summary>Stellt zusätzliche Optionen für das Erstellen eines Transaktionsbereichs bereit.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Required">
      <summary>Der Bereich erfordert eine Transaktion. Er verwendet eine Ambient-Transaktion, wenn bereits eine vorhanden ist. Andernfalls wird vor Eingabe des Bereichs eine neue Transaktion erstellt. Dies ist der Standardwert.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.RequiresNew">
      <summary>Eine neue Transaktion wird immer für den Bereich erstellt.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Suppress">
      <summary>Der Ambient-Transaktionskontext wird unterdrückt, wenn der Bereich erstellt wird. Alle Vorgänge im Bereich werden ohne einen Ambient-Transaktionskontext ausgeführt.</summary>
    </member>
    <member name="T:System.Transactions.TransactionStartedEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" />-Ereignis einer <see cref="T:System.Transactions.TransactionManager" />-Klasse behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">
        <see cref="T:System.Transactions.TransactionEventArgs" /> mit der Transaktion, von der Transaktionsinformationen abgerufen werden können.</param>
    </member>
    <member name="T:System.Transactions.TransactionStatus">
      <summary>Beschreibt den aktuellen Status einer verteilten Transaktion.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Aborted">
      <summary>Für die Transaktion wurde ein Rollback ausgeführt.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Active">
      <summary>Der Status der Transaktion ist unbekannt, da noch einige Teilnehmer befragt werden müssen.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Committed">
      <summary>Es wurde ein Commit für die Transaktion ausgeführt.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.InDoubt">
      <summary>Der Status der Transaktion ist unbekannt.</summary>
    </member>
  </members>
</doc>