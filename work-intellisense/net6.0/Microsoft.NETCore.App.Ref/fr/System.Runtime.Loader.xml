<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Loader</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Metadata.AssemblyExtensions" />
    <member name="M:System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)">
      <param name="assembly" vsli:raw="The assembly from which to retrieve the metadata." />
      <param name="blob" vsli:raw="When this method returns, contains the pointer to the metadata section blob." />
      <param name="length" vsli:raw="When this method returns, contains the length of the metadata section blob." />
    </member>
    <member name="T:System.Runtime.Loader.AssemblyDependencyResolver">
      <summary vsli:raw="Allows a program to resolve assemblies and native libraries to paths based on the dependencies of a given assembly.">Permet à un programme de résoudre les assemblys et les bibliothèques natives en chemins en fonction des dépendances d’un assembly donné.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyDependencyResolver&quot; /&gt; class with a path to a component's assembly.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Loader.AssemblyDependencyResolver" /> avec le chemin de l’assembly d’un composant.</summary>
      <param name="componentAssemblyPath" vsli:raw="The path to the component or plugin's managed entry point.">Chemin du point d’entrée managé du composant ou du plug-in.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveAssemblyToPath(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves a path to an assembly with the given assembly name based on the component's dependencies.">Résout un chemin d’assembly avec le nom d’assembly donné en fonction des dépendances du composant.</summary>
      <param name="assemblyName" vsli:raw="The assembly name to resolve.">Nom d’assembly à résoudre.</param>
      <returns vsli:raw="The path to an assembly with the given name from the component's deps.json file, or &lt;see langword=&quot;null&quot; /&gt; if the assembly does not exist in the deps.json file or is not on disk in the location specified by the deps.json file.">Chemin d’un assembly dont le nom est tiré du fichier deps.json du composant, ou <see langword="null" /> si l’assembly n’existe pas dans le fichier deps.json ou ne se trouve pas sur le disque à l’emplacement spécifié par le fichier deps.json.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveUnmanagedDllToPath(System.String)">
      <summary vsli:raw="Resolves a path to a native library with the given name based on the component's dependencies.">Résout un chemin de bibliothèque native dont le nom donné est fonction des dépendances du composant.</summary>
      <param name="unmanagedDllName" vsli:raw="The name of the native library to resolve.">Nom de la bibliothèque native à résoudre.</param>
      <returns vsli:raw="The path to a native library with the given name from the component's deps.json file and the current runtime identifier, or &lt;see langword=&quot;null&quot; /&gt; if the assembly does not exist in the deps.json file or is not on disk  in the location specified by the deps.json file.">Chemin d’une bibliothèque native dont le nom est tiré du fichier deps.json et de l’identificateur de runtime actif du composant, ou <see langword="null" /> si l’assembly n’existe pas dans le fichier deps.json ou ne se trouve pas sur le disque à l’emplacement spécifié par le fichier deps.json.</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext">
      <summary vsli:raw="Represents the runtime's concept of a scope for assembly loading.">Représente le concept du runtime d’une étendue pour le chargement d’assembly.</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Resolving">
      <summary vsli:raw="Occurs when the resolution of an assembly fails when attempting to load into this assembly load context.">Se produit quand la résolution d’un assembly échoue lors d’une tentative de chargement dans ce contexte de chargement d’assembly.</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll">
      <summary vsli:raw="Occurs when the resolution of a native library fails.">Se produit quand la résolution d’une bibliothèque native échoue.</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Unloading">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; is unloaded.">Se produit quand le <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> est déchargé.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; class with a value that indicates whether unloading is enabled.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> avec une valeur qui indique si le déchargement est activé.</summary>
      <param name="isCollectible" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.Unload&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt; because there is a performance cost associated with enabling unloading.">
        <see langword="true" /> pour activer <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />, car les performances sont impactées par l’activation du déchargement.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; class with a name and a value that indicates whether unloading is enabled.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> avec un nom et une valeur qui indique si le déchargement est activé.</summary>
      <param name="name" vsli:raw="The value for &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.Name&quot; /&gt; in the new instance. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">Valeur de <see cref="P:System.Runtime.Loader.AssemblyLoadContext.Name" /> dans la nouvelle instance. Sa valeur peut être <see langword="null" />.</param>
      <param name="isCollectible" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.Unload&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt; because there is a performance cost associated with enabling unloading.">
        <see langword="true" /> pour activer <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />, car les performances sont impactées par l’activation du déchargement.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection">
      <summary vsli:raw="Sets &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt; to &lt;see langword=&quot;this&quot; /&gt;&lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">Définit <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> à <see langword="this" /><see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
      <returns vsli:raw="An object to restore the previous value of &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt;. It is intended to be used as an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; in a &lt;see langword=&quot;using&quot; /&gt; block.">Objet pour restaurer la valeur précédente de <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />. Il est destiné à être utilisé comme un <see cref="T:System.IDisposable" /> dans un bloc <see langword="using" />.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection(System.Reflection.Assembly)">
      <summary vsli:raw="Sets &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt; to the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; which loaded the assembly.">Définit <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> sur le <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> qui a chargé l’assembly.</summary>
      <param name="activating" vsli:raw="The assembly that is used to determine the requested &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; instance.">Assembly utilisé pour déterminer l’instance <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> demandée.</param>
      <returns vsli:raw="An object to restore the previous value of &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt;. It is intended to be used as an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; in a &lt;see langword=&quot;using&quot; /&gt; block.">Objet pour restaurer la valeur précédente de <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />. Il est destiné à être utilisé comme un <see cref="T:System.IDisposable" /> dans un bloc <see langword="using" />.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Finalize">
      <summary vsli:raw="Allows the object to try to free resources and perform other cleanup operations before it's reclaimed by garbage collection.">Autorise l’objet à tenter de libérer des ressources et d’exécuter d’autres opérations de nettoyage avant qu’il ne soit récupéré par l’opération de garbage collection.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; for an assembly path.">Obtient un <see cref="T:System.Reflection.AssemblyName" /> pour un chemin de l’assembly.</summary>
      <param name="assemblyPath" vsli:raw="The path to the assembly.">Chemin d'accès de l'assembly.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyPath" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The assembly cannot be found.">L’assembly est introuvable.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The assembly is not a valid assembly.">L’assembly n’est pas un assembly valide.</exception>
      <returns vsli:raw="An object that contains the fully parsed assembly name for the assembly at &lt;paramref name=&quot;assemblyPath&quot; /&gt;.">Objet qui contient le nom d’assembly entièrement analysé pour l’assembly sur <paramref name="assemblyPath" />.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; containing the specified &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">Obtient le <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> contenant le <see cref="T:System.Reflection.Assembly" /> spécifié.</summary>
      <param name="assembly" vsli:raw="An assembly.">Assembly.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The assembly load context containing the &lt;paramref name=&quot;assembly&quot; /&gt;. If the &lt;paramref name=&quot;assembly&quot; /&gt; is not provided by the runtime, this method returns null.">Contexte de chargement d’assembly contenant <paramref name="assembly" />. Si <paramref name="assembly" /> n’est pas fourni par le runtime, cette méthode retourne null.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)">
      <summary vsli:raw="When overridden in a derived class, allows an assembly to be resolved based on its &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt;.">En cas de substitution dans une classe dérivée, permet de résoudre et de charger un assembly en fonction de son <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName" vsli:raw="The object that describes the assembly to be resolved.">Objet qui décrit l'assembly à charger.</param>
      <returns vsli:raw="The resolved assembly, or &lt;see langword=&quot;null&quot; /&gt;.">Assembly chargé ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves and loads an assembly given its &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt;.">Résout et charge un assembly en fonction de son <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName" vsli:raw="The object that describes the assembly to load.">Objet qui décrit l’assembly à charger.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyName" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is not found.">
        <paramref name="assemblyName" /> est introuvable.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is not a valid assembly.">
        <paramref name="assemblyName" /> n’est pas un assembly valide.</exception>
      <exception cref="T:System.IO.FileLoadException" vsli:raw="An assembly or module was loaded which did not match the &lt;paramref name=&quot;assemblyName&quot; /&gt;.">Un assembly ou un module a été chargé qui ne correspondait pas à <paramref name="assemblyName" />.</exception>
      <returns vsli:raw="The loaded assembly, or throws.">Assembly chargé ou levers.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)">
      <summary vsli:raw="Loads the contents of an assembly file on the specified path.">Charge le contenu d’un fichier d’assembly sur le chemin d’accès spécifié.</summary>
      <param name="assemblyPath" vsli:raw="The fully qualified path of the file to load.">Chemin d'accès complet du fichier à charger.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is not an absolute path.">L’argument <paramref name="assemblyPath" /> n’est pas un chemin absolu.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="assemblyPath" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileLoadException" vsli:raw="A file that was found could not be loaded.">Impossible de charger l’un des fichiers trouvés.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is an empty string (&quot;&quot;) or does not exist.">Le paramètre <paramref name="assemblyPath" /> est une chaîne vide ("") ou n’existe pas.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The  &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is not a valid assembly.">
        <paramref name="assemblyPath" /> n’est pas un assembly valide.</exception>
      <returns vsli:raw="The loaded assembly.">Assembly chargé.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)">
      <summary vsli:raw="Loads the contents of the native image of a managed assembly file on the specified path.">Charge le contenu de l’image native d’un fichier d’assembly managé sur le chemin spécifié.</summary>
      <param name="nativeImagePath" vsli:raw="The fully qualified path of the file to load.">Chemin d'accès complet du fichier à charger.</param>
      <param name="assemblyPath" vsli:raw="The fully qualified path of the IL version of the file to load, or &lt;see langword=&quot;null&quot; /&gt;.">Chemin qualifié complet de la version IL du fichier à charger, ou <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;nativeImagePath&quot; /&gt; argument is not an absolute path.">L’argument <paramref name="nativeImagePath" /> n’est pas un chemin absolu.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is not an absolute path.">L’argument <paramref name="assemblyPath" /> n’est pas un chemin absolu.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;nativeImagePath&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="nativeImagePath" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileLoadException" vsli:raw="A file that was found could not be loaded.">Impossible de charger l’un des fichiers trouvés.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The &lt;paramref name=&quot;nativeImagePath&quot; /&gt; argument is an empty string (&quot;&quot;) or does not exist.">Le paramètre <paramref name="nativeImagePath" /> est une chaîne vide ("") ou n’existe pas.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is not a valid assembly.">
        <paramref name="assemblyPath" /> n’est pas un assembly valide.</exception>
      <returns vsli:raw="The loaded assembly.">Assembly chargé.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads the assembly with a common object file format (COFF)-based image containing a managed assembly.">Charge l’assembly avec une image au format COFF (Common Object File Format) contenant un assembly managé.</summary>
      <param name="assembly" vsli:raw="A byte array that is a COFF-based image containing a managed assembly.">Tableau d’octets qui est une image au format COFF contenant un assembly managé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a valid assembly.">
        <paramref name="assembly" /> n’est pas un assembly valide.</exception>
      <returns vsli:raw="The loaded assembly.">Assembly chargé.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)">
      <summary vsli:raw="Loads the assembly with a common object file format (COFF)-based image containing a managed assembly, optionally including symbols for the assembly.">Charge l’assembly avec une image COFF (Common Object File Format) contenant un assembly managé qui inclut éventuellement des symboles de l’assembly.</summary>
      <param name="assembly" vsli:raw="A byte array that is a COFF-based image containing a managed assembly.">Tableau d’octets qui est une image au format COFF contenant un assembly managé.</param>
      <param name="assemblySymbols" vsli:raw="A byte array that contains the raw bytes representing the symbols for the assembly.">Tableau d'octets qui contient les octets bruts représentant les symboles de l'assembly.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a valid assembly.">
        <paramref name="assembly" /> n’est pas un assembly valide.</exception>
      <returns vsli:raw="The loaded assembly.">Assembly chargé.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)">
      <summary vsli:raw="Allows derived class to load an unmanaged library by name.">Permet à une classe dérivée de charger une bibliothèque non managée par nom.</summary>
      <param name="unmanagedDllName" vsli:raw="Name of the unmanaged library. Typically this is the filename without its path or extensions.">Nom de la bibliothèque non managée. Il s’agit généralement du nom de fichier sans son chemin ou ses extensions.</param>
      <returns vsli:raw="A handle to the loaded library, or &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;.">Handle vers la bibliothèque chargée, ou <see cref="F:System.IntPtr.Zero" />.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)">
      <summary vsli:raw="Loads an unmanaged library from the specified path.">Charge une bibliothèque non managée à partir du chemin spécifié.</summary>
      <param name="unmanagedDllPath" vsli:raw="The path to the unmanaged library.">Chemin de la bibliothèque non managée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;unmanagedDllPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="unmanagedDllPath" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;unmanagedDllPath&quot; /&gt; argument is empty or not an absolute path.">L’argument <paramref name="unmanagedDllPath" /> est vide ou n’est pas un chemin absolu.</exception>
      <exception cref="T:System.DllNotFoundException" vsli:raw="The library can't be found.">La bibliothèque est introuvable.</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The library is not valid.">La bibliothèque n’est pas valide.</exception>
      <returns vsli:raw="The OS handle for the loaded native library.">Descripteur de système d’exploitation de la bibliothèque native chargée.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)">
      <summary vsli:raw="Sets the root path where the optimization profiles for this load context are stored.">Définit le chemin racine où sont stockés les profils d’optimisation pour ce contexte de chargement.</summary>
      <param name="directoryPath" vsli:raw="The full path to the directory where the optimization profiles are stored.">Chemin complet du répertoire où sont stockés les profils d’optimisation.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)">
      <summary vsli:raw="Starts the profile optimization for the specified profile.">Démarre l’optimisation du profil spécifié.</summary>
      <param name="profile" vsli:raw="The name of the optimization profile.">Nom du profil d’optimisation.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ToString">
      <summary vsli:raw="Returns the string representation of this load context.">Retourne la représentation sous forme de chaîne de ce contexte de chargement.</summary>
      <returns vsli:raw="The string representation of this load context.">Représentation sous forme de chaîne de ce contexte de chargement.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Unload">
      <summary vsli:raw="Initiates an unload of this &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">Initie une opération de déchargement de ce <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unloading is not allowed.">Le déchargement n'est pas autorisé.</exception>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.All">
      <summary vsli:raw="Returns a collection of all &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; instances.">Retourne une collection de toutes les instances de <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
      <returns vsli:raw="A collection of all &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; instances.">Collection de toutes les <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> instances.</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Assemblies">
      <summary vsli:raw="Returns a collection of the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; instances loaded in the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">Retourne une collection des instances de <see cref="T:System.Reflection.Assembly" /> chargées dans le <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; instances loaded in the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">Collection des <see cref="T:System.Reflection.Assembly" /> instances chargées dans <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> .</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; set by the most recent call to &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection&quot; /&gt;.">Obtient le <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> défini par le dernier appel à <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; set by the most recent call to &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection&quot; /&gt;. This value can be &lt;see langword=&quot;null&quot; /&gt;. The value is stored in an &lt;see cref=&quot;T:System.Threading.AsyncLocal`1&quot; /&gt;, so the value is unique per asynchronous context.">
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />Défini par l’appel le plus récent à <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> . Cette valeur peut être <see langword="null" />. La valeur est stockée dans un <see cref="T:System.Threading.AsyncLocal`1" /> , donc la valeur est unique par contexte asynchrone.</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Default">
      <summary vsli:raw="Gets the default &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;. The default context contains the main application assembly and its static dependencies.">Obtient l'objet <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> par défaut. Le contexte par défaut contient l’assembly principal de l’application et ses dépendances statiques.</summary>
      <returns vsli:raw="The default assembly load context.">Contexte de chargement d'assembly par défaut.</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.IsCollectible">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; is collectible.">Obtient une valeur indiquant si ce <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> peut être collecté.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; is collectible; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If a value is not specified in the constructor, the value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s’il <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> s’agit d’un objets pouvant être collectés ; sinon, <see langword="false" /> . Si aucune valeur n’est spécifiée dans le constructeur, la valeur est <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Name">
      <summary vsli:raw="Get the name of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">Obtient le nom du <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">Nom de l'objet <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />. Sa valeur peut être <see langword="null" />.</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope">
      <summary vsli:raw="Provides a return type used exclusively for &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection&quot; /&gt;. It is intended to be used as an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; in a &lt;see langword=&quot;using&quot; /&gt; block.">Fournit un type de retour utilisé exclusivement pour <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />. Il est destiné à être utilisé comme un <see cref="T:System.IDisposable" /> dans un bloc <see langword="using" />.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope.Dispose">
      <summary vsli:raw="Sets &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt; to the value preceding the call to &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection&quot; /&gt; which returned this instance.">Définit <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> à la valeur avant l’appel à <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> qui a retourné cette instance.</summary>
    </member>
  </members>
</doc>