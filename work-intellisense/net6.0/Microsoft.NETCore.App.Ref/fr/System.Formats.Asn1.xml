<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary>Ce type représente une balise ASN.1, comme décrit dans la recommandation ITU-T X.680.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary>Représente la balise de classe universelle pour une valeur booléenne.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary>Représente la balise de classe universelle pour une valeur de chaîne de bits contenue dans un encodage construit.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary>Représente la balise de classe universelle pour une valeur de chaîne d’octets dans un encodage construit.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary>Représente la balise de classe universelle pour une valeur énumérée.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary>Représente la balise de classe universelle pour une valeur GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary>Représente la balise de classe universelle pour une valeur entière.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary>Représente la balise de classe universelle pour une valeur <see langword="null" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary>Représente la balise de classe universelle pour une valeur d’identificateur d’objet.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary>Représente la balise de classe universelle pour une valeur de chaîne de bits contenue dans un encodage primitif.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary>Représente la balise de classe universelle pour une valeur de chaîne d’octets dans un encodage primitif.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary>Représente la balise de classe universelle pour une valeur Sequence (toujours un encodage construit).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary>Représente la balise de classe universelle pour une valeur SetOf (toujours un encodage construit).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary>Représente la balise de classe universelle pour une valeur UtcTime.</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary>Crée un <see cref="T:System.Formats.Asn1.Asn1Tag" /> pour une valeur spécifiée dans une classe de balise spécifiée.</summary>
      <param name="tagClass">Classe de balise pour cette balise.</param>
      <param name="tagValue">Valeur numérique de cette balise.</param>
      <param name="isConstructed">
        <see langword="true" /> pour une balise construite, <see langword="false" /> pour une balise primitive.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tagClass" /> n’est pas une valeur connue.
-ou- <paramref name="tagValue" /> est un nombre négatif.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary>Crée un <see cref="T:System.Formats.Asn1.Asn1Tag" /> pour une balise à partir de la classe UNIVERSAL.</summary>
      <param name="universalTagNumber">L’une des valeurs d’énumération qui spécifie le type de sémantique pour cette balise.</param>
      <param name="isConstructed">
        <see langword="true" /> pour une balise construite, <see langword="false" /> pour une balise primitive.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="universalTagNumber" /> n’est pas une valeur connue.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary>Produit une balise avec les mêmes valeurs <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, mais dont <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> a la valeur <see langword="true" />.</summary>
      <returns>Balise avec les mêmes valeurs <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, mais dont <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> a la valeur <see langword="true" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary>Produit une balise avec les mêmes valeurs <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, mais dont <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> a la valeur <see langword="false" />.</summary>
      <returns>Balise avec les mêmes valeurs <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, mais dont <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> a la valeur <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary>Indique le nombre d’octets requis pour l’encodage BER de cette balise.</summary>
      <returns>Nombre d’octets requis pour l’encodage BER de cette balise.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary>Lit une balise encodée en BER qui commence à <paramref name="source" />.</summary>
      <param name="source">Séquence d’octets en lecture seule dont le début est une balise encodée en BER.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, contient le nombre d’octets qui ont contribué à la balise encodée. Ce paramètre est traité comme étant non initialisé.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">Les données fournies ne sont pas décodées sous forme de balise.</exception>
      <returns>Balise décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary>Écrit cette balise encodée en BER sur <paramref name="destination" />.</summary>
      <param name="destination">Début de l’emplacement où la balise encodée doit être écrite.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />.</exception>
      <returns>Nombre d’octets écrits dans <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary>Vérifie si <paramref name="other" /> a le même encodage que cette balise.</summary>
      <param name="other">Balise dont l’égalité doit être testée.</param>
      <returns>
        <see langword="true" /> si <paramref name="other" /> a les mêmes valeurs pour <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />, <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary>Vérifie si <paramref name="obj" /> est un <see cref="T:System.Formats.Asn1.Asn1Tag" /> avec le même encodage que cette balise.</summary>
      <param name="obj">Objet dont l’égalité de valeurs doit être testée</param>
      <returns>
        <see langword="false" /> si <paramref name="obj" /> n’est pas un <see cref="T:System.Formats.Asn1.Asn1Tag" /> ; sinon, <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary>Vérifie si <paramref name="other" /> a les mêmes valeurs <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> que cette balise, sans comparer <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />.</summary>
      <param name="other">Balise dont l’égalité de concept doit être testée.</param>
      <returns>
        <see langword="true" /> si <paramref name="other" /> a les mêmes <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> que cette balise ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>Vérifie si deux valeurs <see cref="T:System.Formats.Asn1.Asn1Tag" /> ont le même encodage BER.</summary>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ont le même encodage BER ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>Vérifie si deux valeurs <see cref="T:System.Formats.Asn1.Asn1Tag" /> ont un encodage BER différent.</summary>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ont un encodage BER différent ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary>Fournit une représentation textuelle de cette balise adaptée au débogage.</summary>
      <returns>Représentation textuelle de cette balise adaptée au débogage.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary>Tente de lire une balise encodée en BER qui commence à <paramref name="source" />.</summary>
      <param name="source">Séquence d’octets en lecture seule dont le début est une balise encodée en BER.</param>
      <param name="tag">Balise décodée.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, contient le nombre d’octets qui ont contribué à la balise encodée (0 en cas d’échec). Ce paramètre est traité comme étant non initialisé.</param>
      <returns>
        <see langword="true" /> si une balise a été correctement décodée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Tente d’écrire cette balise encodée en BER sur <paramref name="destination" />.</summary>
      <param name="destination">Début de l’emplacement où la balise encodée doit être écrite.</param>
      <param name="bytesWritten">Reçoit la valeur de <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" /> en cas de réussite, 0 en cas d’échec.</param>
      <returns>
        <see langword="false" /> si <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />() ; sinon, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary>Indique si la balise représente un encodage construit (<see langword="true" />) ou un encodage primitif (<see langword="false" />).</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary>Classe de balise à laquelle cette balise appartient.</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary>Valeur numérique de cette balise.</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary>Exception levée lorsque le décodage d’une valeur ASN.1 encodée échoue.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Formats.Asn1.AsnContentException" /> en utilisant le message par défaut.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Formats.Asn1.AsnContentException" /> avec des données sérialisées.</summary>
      <param name="info">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Formats.Asn1.AsnContentException" /> en utilisant le message fourni.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Formats.Asn1.AsnContentException" /> en utilisant le message fourni et l'exception à l'origine de cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="inner">Exception ayant provoqué l'exception actuelle.</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary>Fournit des méthodes sans état pour décoder les données ASN.1 encodées en BER, CER ou DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur de chaîne de bits à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en retournant le contenu dans un nouveau tableau.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="unusedBitCount">En cas de réussite, reçoit le nombre de bits dans le dernier octet qui ont été signalés comme étant « inutilisés » par le writer.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Tableau comprenant le contenu de la valeur de chaîne de bits.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur booléenne à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 1).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une chaîne de caractères avec la balise et le type d’encodage spécifiés, en retournant la chaîne décodée.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="encodingType">L’une des valeurs d’énumération qui représente le type de valeur à traiter.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise universelle adaptée au type d’encodage demandé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.
-ou- <paramref name="encodingType" /> n’est pas un type de chaîne de caractères connu.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la chaîne n’a pas pu être décodée.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas identique à <paramref name="encodingType" />.</exception>
      <returns>Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Localise la plage de contenu pour la valeur encodée au début de la mémoire tampon <paramref name="source" /> en utilisant les règles d’encodage spécifiées.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="contentOffset">Lorsque cette méthode retourne une valeur, décalage de la charge utile de contenu par rapport au début de <paramref name="source" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="contentLength">Lorsque cette méthode retourne une valeur, nombre d’octets dans la charge utile de contenu (peut être égal à 0).
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">
        <paramref name="source" /> ne représente pas une valeur encodée selon les règles d’encodage spécifiées.</exception>
      <returns>Balise identifiant le contenu.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur énumérée à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en retournant le contenu sous la forme d’une tranche de mémoire tampon.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Segment de mémoire tampon contenant les octets de la valeur énumérée, au format big-endian signé.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une énumération à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en la convertissant en l’enum non-[<see cref="T:System.FlagsAttribute" />] spécifié par <paramref name="enumType" />.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="enumType">Objet de type représentant le type de destination.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> n’est pas un type d’enum.
-ou- <paramref name="enumType" /> a été déclaré avec <see cref="T:System.FlagsAttribute" />.
-ou- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> a la valeur <see langword="null" />.</exception>
      <returns>Valeur énumérée convertie en <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une énumération à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en la convertissant en l’enum non-[<see cref="T:System.FlagsAttribute" />] spécifié par <typeparamref name="TEnum" />.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <typeparam name="TEnum">Type d’énumération de destination</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" /> n’est pas un type d’enum.
-ou- <typeparamref name="TEnum" /> a été déclaré avec <see cref="T:System.FlagsAttribute" />.
-ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur énumérée convertie en <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur GeneralizedTime à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur entière à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur numérique décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur entière à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en retournant le contenu sous la forme d’une tranche de mémoire tampon.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Tranche de mémoire tampon contenant les octets de la valeur entière, au format big-endian signé.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur NamedBitList à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Bits de la valeur encodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur NamedBitList à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en la convertissant en l’enum [<see cref="T:System.FlagsAttribute" />] spécifiée par <paramref name="flagsEnumType" />.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="flagsEnumType">Objet de type représentant le type de destination.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" /> n’est pas un type d’enum.
-ou- <paramref name="flagsEnumType" /> n’a pas été déclaré avec <see cref="T:System.FlagsAttribute" /> -ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" /> a la valeur <see langword="null" />.</exception>
      <returns>Valeur NamedBitList convertie en <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur NamedBitList à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en la convertissant en l’enum [<see cref="T:System.FlagsAttribute" />] spécifiée par <typeparamref name="TFlagsEnum" />.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <typeparam name="TFlagsEnum">Type d’énumération de destination</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" /> n’est pas un type d’enum.
-ou- <typeparamref name="TFlagsEnum" /> n’a pas été déclaré avec <see cref="T:System.FlagsAttribute" /> -ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur NamedBitList convertie en <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur <see langword="null" /> à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 5).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur d’identificateur d’objet à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 6).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Identificateur d’objet décodé, en notation décimale pointée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur de chaîne d’octets à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en retournant le contenu dans un nouveau tableau.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Tableau comprenant le contenu de la valeur de chaîne d’octets.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur Sequence ou Sequence-Of à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="contentOffset">Lorsque cette méthode retourne une valeur, décalage de la charge utile de contenu par rapport au début de <paramref name="source" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="contentLength">Lorsque cette méthode retourne une valeur, nombre d’octets dans la charge utile de contenu (peut être égal à 0).
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 16).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur Set-Of à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="contentOffset">Lorsque cette méthode retourne une valeur, décalage de la charge utile de contenu par rapport au début de <paramref name="source" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="contentLength">Lorsque cette méthode retourne une valeur, nombre d’octets dans la charge utile de contenu (peut être égal à 0).
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="skipSortOrderValidation">
        <see langword="true" /> pour toujours accepter les données dans l’ordre dans lequel elles sont présentées, <see langword="false" /> pour vérifier que les données sont triées correctement quand les règles d’encodage indiquent qu’un tri est requis (CER et DER).</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 17).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur UtcTime à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="twoDigitYearMax">La plus grande année à représenter avec cette valeur.
La valeur par défaut, 2049, représente la plage 1950-2049 pour les certificats X.509.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.
-ou- <paramref name="twoDigitYearMax" /> n’est pas compris dans la plage [99, 9 999].</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente de copier sur <paramref name="destination" /> une valeur de chaîne de bits à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="destination">Mémoire tampon dans laquelle écrire.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="unusedBitCount">En cas de réussite, reçoit le nombre de bits dans le dernier octet qui ont été signalés comme étant « inutilisés » par le writer.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesWritten">Lorsque cette méthode retourne une valeur, nombre total d’octets écrits sur <paramref name="destination" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="destination" /> chevauche <paramref name="source" />.</exception>
      <returns>
        <see langword="true" /> si <paramref name="destination" /> est suffisamment grand pour recevoir la valeur de la chaîne de bits ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit une valeur de chaîne de caractères à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en copiant la chaîne décodée dans une mémoire tampon de destination fournie.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="destination">Mémoire tampon dans laquelle écrire.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="encodingType">L’une des valeurs d’énumération qui représente le type de valeur à traiter.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="charsWritten">Lorsque cette méthode retourne une valeur, nombre de caractères écrits sur <paramref name="destination" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise universelle adaptée au type d’encodage demandé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.
-ou- <paramref name="encodingType" /> n’est pas un type de chaîne de caractères connu.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la chaîne n’a pas pu être décodée.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas identique à <paramref name="encodingType" />.</exception>
      <returns>
        <see langword="true" /> et avance le lecteur si la longueur de <paramref name="destination" /> est suffisante pour recevoir la valeur ; sinon, <see langword="false" /> et le lecteur n’avance pas.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary>Tente de lire une valeur de chaîne de caractères à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en copiant les octets non traités dans la mémoire tampon de destination fournie.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="destination">Mémoire tampon dans laquelle écrire.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesWritten">En cas de réussite, reçoit le nombre d’octets écrits sur <paramref name="destination" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas un type de balise de chaîne de caractères.
-ou- <paramref name="destination" /> chevauche <paramref name="source" />.</exception>
      <returns>
        <see langword="true" /> si <paramref name="destination" /> est suffisamment grand pour recevoir la valeur de la chaîne de caractères non traitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Tente de localiser la plage de contenu pour la valeur encodée au début de la mémoire tampon <paramref name="source" /> en utilisant les règles d’encodage spécifiées.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="tag">Lorsque cette méthode retourne une valeur, balise identifiant le contenu.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="contentOffset">Lorsque cette méthode retourne une valeur, décalage de la charge utile de contenu par rapport au début de <paramref name="source" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="contentLength">Lorsque cette méthode retourne une valeur, nombre d’octets dans la charge utile de contenu (peut être égal à 0).
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <returns>
        <see langword="true" /> si <paramref name="source" /> représente un encodage structurel valide pour les règles d’encodage spécifiées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente de lire une valeur entière à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, sous forme de valeur 32 bits signée.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="value">En cas de réussite, reçoit la valeur numérique interprétée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="true" /> si l’entier représente une valeur comprise entre <see cref="F:System.Int32.MinValue" /> et <see cref="F:System.Int32.MaxValue" /> (inclus) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente de lire une valeur entière à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, sous forme de valeur 64 bits signée.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="value">En cas de réussite, reçoit la valeur numérique interprétée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="true" /> si l’entier représente une valeur comprise entre <see cref="F:System.Int64.MinValue" /> et <see cref="F:System.Int64.MaxValue" /> (inclus) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente d’obtenir une valeur de chaîne d’octets à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en copiant la valeur dans la mémoire tampon de destination fournie.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="destination">Mémoire tampon dans laquelle écrire.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesWritten">Lorsque cette méthode retourne une valeur, nombre total d’octets écrits sur <paramref name="destination" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="destination" /> chevauche <paramref name="source" />.</exception>
      <returns>
        <see langword="true" /> si <paramref name="destination" /> est suffisamment grand pour recevoir la valeur de la chaîne d’octets ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente d’obtenir une valeur de chaîne de bits à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, si la valeur est contenue dans un encodage unique (primitif).</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="unusedBitCount">En cas de réussite, reçoit le nombre de bits dans le dernier octet qui ont été signalés comme étant « inutilisés » par le writer.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="value">En cas de réussite, reçoit une tranche de la mémoire tampon d’entrée qui correspond à la valeur de la chaîne de bits.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="true" /> si la valeur de chaîne de bits a un encodage primitif et que tous les bits signalés comme inutilisés sont définis sur 0 ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary>Tente d’obtenir une valeur de chaîne de caractères non traitée à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, si la valeur est contenue dans un encodage unique (primitif).</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture.</param>
      <param name="value">En cas de réussite, reçoit une tranche de la mémoire tampon d’entrée qui correspond à la valeur de la chaîne de bits.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas un type de balise de chaîne de caractères.</exception>
      <returns>
        <see langword="true" /> si la valeur de chaîne de caractères a un encodage primitif ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente d’obtenir une valeur de chaîne d’octets à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, si la valeur est contenue dans un encodage unique (primitif).</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="value">En cas de réussite, reçoit une tranche de la mémoire tampon d’entrée qui correspond à la valeur de la chaîne d’octets.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="true" /> si la valeur de la chaîne d’octets a un encodage primitif ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente de lire une valeur entière à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, sous forme de valeur 32 bits non signée.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="value">En cas de réussite, reçoit la valeur numérique interprétée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="true" /> si l’entier représente une valeur comprise entre <see cref="F:System.UInt32.MinValue" /> et <see cref="F:System.UInt32.MaxValue" /> (inclus) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente de lire une valeur entière à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, sous forme de valeur 64 bits non signée.</summary>
      <param name="source">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="value">En cas de réussite, reçoit la valeur numérique interprétée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="true" /> si l’entier représente une valeur comprise entre <see cref="F:System.UInt64.MinValue" /> et <see cref="F:System.UInt64.MaxValue" /> (inclus) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary>Ensemble de règles d’encodage pour un <see cref="T:System.Formats.Asn1.AsnReader" /> ou un <see cref="T:System.Formats.Asn1.AsnWriter" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary>ITU-T X.690 Basic Encoding Rules</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary>ITU-T X.690 Canonical Encoding Rules</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary>ITU-T X.690 Distinguished Encoding Rules</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary>Lecteur avec état de type avant uniquement pour les données ASN.1 encodées en BER, CER ou DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary>Construit un <see cref="T:System.Formats.Asn1.AsnReader" /> sur <paramref name="data" /> avec un ensemble de règles donné.</summary>
      <param name="data">Données à lire.</param>
      <param name="ruleSet">Contraintes d’encodage pour le lecteur.</param>
      <param name="options">Options supplémentaires pour le lecteur.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary>Obtient une vue <see cref="T:System.ReadOnlyMemory`1" /> des octets de contenu de la valeur encodée suivante sans avancer le lecteur.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">Le lecteur est positionné à un point où la balise ou la longueur n’est pas conforme aux règles d’encodage actuelles.</exception>
      <returns>Octets du contenu de la valeur encodée suivante.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary>Obtient une vue <see cref="T:System.ReadOnlyMemory`1" /> de la valeur encodée suivante sans avancer le lecteur. Cela comprend le marqueur de fin de contenu pour les encodages de longueur indéfinie.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">Le lecteur est positionné à un point où la balise ou la longueur n’est pas conforme aux règles d’encodage actuelles.</exception>
      <returns>Octets de la valeur encodée suivante.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary>Lit la balise encodée à la position de données suivante, sans avancer le lecteur.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">une balise n’a pas pu être décodée à la position actuelle du lecteur.</exception>
      <returns>Valeur de balise décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une valeur BIT STRING avec une balise spécifiée, en retournant la valeur dans un tableau d’octets.</summary>
      <param name="unusedBitCount">En cas de réussite, reçoit le nombre de bits dans le dernier octet qui ont été signalés comme étant « inutilisés » par le writer.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Copie de la valeur dans un tableau nouvellement alloué de taille précise.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une valeur booléenne avec une balise spécifiée.</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une chaîne de caractères avec la balise et le type d’encodage spécifiés, en retournant la valeur décodée sous forme de chaîne.</summary>
      <param name="encodingType">L’une des valeurs d’énumération représentant le type de valeur à traiter.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise universelle adaptée au type d’encodage demandé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> n’est pas un type de chaîne de caractères connu.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la chaîne n’a pas pu être décodée.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas identique à <paramref name="encodingType" />.</exception>
      <returns>Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary>Obtient une vue <see cref="T:System.ReadOnlyMemory`1" /> de la valeur encodée suivante et avance le lecteur après celle-ci. Cela comprend le marqueur de fin de contenu pour un encodage de longueur indéfinie.</summary>
      <returns>Vue <see cref="T:System.ReadOnlyMemory`1" /> de la valeur encodée suivante.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une énumération avec une balise spécifiée, en retournant le contenu sous la forme d’un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine.</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Octets de la valeur énumérée, au format big-endian signé.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une énumération avec une balise spécifiée, en la convertissant en l’enum non-[<see cref="T:System.FlagsAttribute" />] spécifiée par <paramref name="enumType" />.</summary>
      <param name="enumType">Objet de type représentant le type de destination.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> n’est pas un type d’enum.
-ou- <paramref name="enumType" /> a été déclaré avec <see cref="T:System.FlagsAttribute" />.
-ou- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> a la valeur <see langword="null" />.</exception>
      <returns>Valeur énumérée convertie en <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une énumération avec une balise spécifiée, en la convertissant en l’enum non-[<see cref="T:System.FlagsAttribute" />] spécifiée par <typeparamref name="TEnum" />.</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <typeparam name="TEnum">Type d’énumération de destination</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" /> n’est pas un type d’enum.
-ou- <typeparamref name="TEnum" /> a été déclaré avec <see cref="T:System.FlagsAttribute" />.
-ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur énumérée convertie en <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une valeur GeneralizedTime avec une balise spécifiée.</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 24).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme un entier avec une balise spécifiée.</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme un entier avec une balise spécifiée, en retournant le contenu sous la forme d’un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine.</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Octets de la valeur entière, au format big-endian signé.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une valeur NamedBitList avec une balise spécifiée.</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Bits de la valeur encodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une valeur NamedBitList avec une balise spécifiée, en la convertissant en l’enum [<see cref="T:System.FlagsAttribute" />] spécifiée par <paramref name="flagsEnumType" />.</summary>
      <param name="flagsEnumType">Objet de type représentant le type de destination.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" /> n’est pas un type d’enum.
-ou- <paramref name="flagsEnumType" /> n’a pas été déclaré avec <see cref="T:System.FlagsAttribute" /> -ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" /> a la valeur <see langword="null" />.</exception>
      <returns>Valeur NamedBitList convertie en <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une valeur NamedBitList avec une balise spécifiée, en la convertissant en l’enum [<see cref="T:System.FlagsAttribute" />] spécifiée par <typeparamref name="TFlagsEnum" />.</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture.</param>
      <typeparam name="TFlagsEnum">Type d’énumération de destination</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" /> n’est pas un type d’enum.
-ou- <typeparamref name="TFlagsEnum" /> n’a pas été déclaré avec <see cref="T:System.FlagsAttribute" /> -ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur NamedBitList convertie en <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une valeur NULL avec une balise spécifiée.</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 5).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme un identificateur d’objet avec une balise spécifiée, en retournant la valeur dans une chaîne à notation décimale pointée.</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 6).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur de l’identificateur d’objet dans une chaîne de format décimal séparée par des points.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une chaîne d’octets avec la balise UNIVERSAL 4, en retournant la valeur dans un tableau d’octets.</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Copie de la valeur dans un tableau nouvellement alloué de taille précise.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante en tant que SEQUENCE ou SEQUENCE-OF avec la balise spécifiée et retourne le résultat sous la forme d’un nouveau lecteur positionné à la première valeur de la séquence (ou avec <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 16).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Nouveau lecteur positionné à la première valeur de la séquence (ou avec <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante en tant que SET-OF avec la balise spécifiée et retourne le résultat sous la forme d’un nouveau lecteur positionné à la première valeur du set-of (ou avec <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="skipSortOrderValidation">
        <see langword="true" /> pour toujours accepter les données dans l’ordre dans lequel elles sont présentées, <see langword="false" /> pour vérifier que les données sont triées correctement quand les règles d’encodage indiquent qu’un tri est requis (CER et DER).</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Nouveau lecteur positionné à la première valeur du set-of (ou avec <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante en tant que SET-OF avec la balise spécifiée et retourne le résultat sous la forme d’un nouveau lecteur positionné à la première valeur du set-of (ou avec <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />), en utilisant la valeur <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> du constructeur (<see langword="false" /> par défaut).</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Nouveau lecteur positionné à la première valeur du set-of (ou avec <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une valeur UTCTime avec une balise spécifiée.</summary>
      <param name="twoDigitYearMax">La plus grande année à représenter avec cette valeur.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une valeur UTCTime avec une balise spécifiée en utilisant la valeur <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> des options passées au constructeur (avec 2049 comme valeur par défaut).</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary>Lève une <see cref="T:System.Formats.Asn1.AsnContentException" /> standardisée si le lecteur contient encore des données, n’exécute aucune fonction si <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> retourne <see langword="false" />.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une valeur BIT STRING avec une balise spécifiée, en copiant la valeur dans une mémoire tampon de destination fournie.</summary>
      <param name="destination">Mémoire tampon dans laquelle écrire.</param>
      <param name="unusedBitCount">En cas de réussite, reçoit le nombre de bits dans le dernier octet qui ont été signalés comme étant « inutilisés » par le writer.</param>
      <param name="bytesWritten">En cas de réussite, reçoit le nombre d’octets écrits sur <paramref name="destination" />.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="true" /> et avance le lecteur si la longueur de <paramref name="destination" /> est suffisante pour recevoir la valeur ; sinon, <see langword="false" /> et le lecteur n’avance pas.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une chaîne de caractères avec la balise et le type d’encodage spécifiés, en copiant la valeur décodée dans une mémoire tampon de destination fournie.</summary>
      <param name="destination">Mémoire tampon dans laquelle écrire.</param>
      <param name="encodingType">L’une des valeurs d’énumération représentant le type de valeur à traiter.</param>
      <param name="charsWritten">En cas de réussite, reçoit le nombre de caractères écrits sur <paramref name="destination" />.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise universelle adaptée au type d’encodage demandé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> n’est pas un type de chaîne de caractères connu.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la chaîne n’a pas pu être décodée.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas identique à <paramref name="encodingType" />.</exception>
      <returns>
        <see langword="true" /> et avance le lecteur si la longueur de <paramref name="destination" /> est suffisante pour recevoir la valeur ; sinon, <see langword="false" /> et le lecteur n’avance pas.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary>Lit la valeur suivante comme une chaîne de caractères avec la balise spécifiée, en copiant les octets non traités dans une mémoire tampon de destination fournie.</summary>
      <param name="destination">Mémoire tampon dans laquelle écrire.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture.</param>
      <param name="bytesWritten">En cas de réussite, reçoit le nombre d’octets écrits sur <paramref name="destination" />.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas un type de balise de chaîne de caractères.</exception>
      <returns>
        <see langword="true" /> et avance le lecteur si la longueur de <paramref name="destination" /> est suffisante pour recevoir la valeur ; sinon, <see langword="false" /> et le lecteur n’avance pas.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente de lire la valeur suivante comme un entier avec une balise spécifiée, sous forme de valeur 32 bits signée.</summary>
      <param name="value">En cas de réussite, reçoit la valeur décodée.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="false" /> et n’avance pas le lecteur si la valeur n’est pas comprise entre <see cref="F:System.Int32.MinValue" /> et <see cref="F:System.Int32.MaxValue" /> (inclus) ; sinon, <see langword="true" /> est retourné et le lecteur avance.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente de lire la valeur suivante comme un entier avec une balise spécifiée, sous forme de valeur 64 bits signée.</summary>
      <param name="value">En cas de réussite, reçoit la valeur décodée.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="false" /> et n’avance pas le lecteur si la valeur n’est pas comprise entre <see cref="F:System.Int64.MinValue" /> et <see cref="F:System.Int64.MaxValue" /> (inclus) ; sinon, <see langword="true" /> est retourné et le lecteur avance.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une chaîne d’octets avec une balise spécifiée, en copiant la valeur dans une mémoire tampon de destination fournie.</summary>
      <param name="destination">Mémoire tampon dans laquelle écrire.</param>
      <param name="bytesWritten">En cas de réussite, reçoit le nombre d’octets écrits sur <paramref name="destination" />.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="true" /> et avance le lecteur si la longueur de <paramref name="destination" /> est suffisante pour recevoir la valeur ; sinon, <see langword="false" /> et le lecteur n’avance pas.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lit la valeur suivante comme une valeur BIT STRING avec une balise spécifiée, en retournant le contenu sous la forme d’un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine.</summary>
      <param name="unusedBitCount">En cas de réussite, reçoit le nombre de bits dans le dernier octet qui ont été signalés comme étant « inutilisés » par le writer.</param>
      <param name="value">En cas de réussite, reçoit un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine correspondant à la valeur BIT STRING.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="true" /> et avance le lecteur si la valeur BIT STRING avait un encodage primitif, <see langword="false" /> et n’avance pas le lecteur si elle avait un encodage construit.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary>Lit la valeur suivante comme un caractère avec une balise spécifiée, en retournant le contenu comme <see cref="T:System.ReadOnlyMemory`1" /> non traité sur les données d’origine.</summary>
      <param name="expectedTag">Balise à vérifier avant la lecture.</param>
      <param name="contents">En cas de réussite, reçoit un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine correspondant à la valeur de la chaîne de caractères.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas un type de balise de chaîne de caractères.</exception>
      <returns>
        <see langword="true" /> et avance le lecteur si la valeur de chaîne de caractères avait un encodage primitif, <see langword="false" /> et n’avance pas le lecteur si elle avait un encodage construit.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente de lire la valeur suivante comme une valeur OCTET STRING avec une balise spécifiée, en retournant le contenu sous la forme d’un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine.</summary>
      <param name="contents">En cas de réussite, reçoit un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine correspondant à la valeur OCTET STRING.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="true" /> et avance le lecteur si la valeur OCTET STRING avait un encodage primitif, <see langword="false" /> et n’avance pas le lecteur si elle avait un encodage construit.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente de lire la valeur suivante comme un entier avec une balise spécifiée, sous forme de valeur 32 bits non signée.</summary>
      <param name="value">En cas de réussite, reçoit la valeur décodée.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="false" /> et n’avance pas le lecteur si la valeur n’est pas comprise entre <see cref="F:System.UInt32.MinValue" /> et <see cref="F:System.UInt32.MaxValue" /> (inclus) ; sinon, <see langword="true" /> est retourné et le lecteur avance.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tente de lire la valeur suivante comme un entier avec une balise spécifiée, sous forme de valeur 64 bits non signée.</summary>
      <param name="value">En cas de réussite, reçoit la valeur décodée.</param>
      <param name="expectedTag">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>
        <see langword="false" /> et n’avance pas le lecteur si la valeur n’est pas comprise entre <see cref="F:System.UInt64.MinValue" /> et <see cref="F:System.UInt64.MaxValue" /> (inclus) ; sinon, <see langword="true" /> est retourné et le lecteur avance.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary>Obtient une indication précisant si le lecteur a encore des données à traiter.</summary>
      <returns>
        <see langword="true" /> Si davantage de données sont disponibles pour le traitement du lecteur ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary>Obtient les règles d’encodage utilisées par ce lecteur.</summary>
      <returns>Règles d’encodage utilisées par ce lecteur.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary>Spécifie les options qui modifient le comportement d’un <see cref="T:System.Formats.Asn1.AsnReader" />.</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary>Obtient ou définit une valeur qui indique si le lecteur doit ignorer l’ordre de tri sur une valeur Set ou Set-Of.</summary>
      <returns>
        <see langword="true" /> Si le lecteur ne doit pas valider qu’un ensemble ou un ensemble de valeurs est correctement trié pour les règles d’encodage actuelles ; Sinon, <see langword="false" /> .
La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary>Obtient ou définit la plus grande année à représenter avec une valeur UtcTime.</summary>
      <returns>La plus grande année à représenter avec une valeur UtcTime. La valeur par défaut est 2049.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary>Writer pour les données ASN.1 encodées en BER, CER et DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary>Crée un nouveau <see cref="T:System.Formats.Asn1.AsnWriter" /> avec un ensemble donné de règles d’encodage.</summary>
      <param name="ruleSet">Contraintes d’encodage pour le writer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary>Copie la valeur de ce writer dans un autre writer.</summary>
      <param name="destination">Writer pour recevoir la valeur.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Un <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> n’a pas été fermé via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.
-ou- ce writer est vide.
-ou- ce writer représente plus d’une valeur de niveau supérieur.
-ou- la valeur de ce writer est encodée avec une méthode qui n’est pas compatible avec l’ensemble de règles défini pour le writer de destination.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary>Retourne un nouveau tableau contenant la valeur encodée.</summary>
      <exception cref="T:System.InvalidOperationException">Un <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> n’a pas été fermé via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>Tableau de taille précise contenant la valeur encodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary>Écrit la représentation encodée des données sur <paramref name="destination" />.</summary>
      <param name="destination">Mémoire tampon dans laquelle écrire.</param>
      <exception cref="T:System.InvalidOperationException">Un <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> n’a pas été fermé via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>Nombre d’octets écrits dans <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary>Détermine si <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> produit une sortie identique à <paramref name="other" />.</summary>
      <param name="other">Instance permettant de comparer des valeurs encodées.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Un <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> n’a pas été fermé via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>
        <see langword="true" /> si les données encodées en attente sont identiques à <paramref name="other" />, sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary>Détermine si <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> produit une sortie identique à <paramref name="other" />.</summary>
      <param name="other">Valeur encodée de comparaison.</param>
      <exception cref="T:System.InvalidOperationException">Un <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> n’a pas été fermé via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>
        <see langword="true" /> si les données encodées en attente sont identiques à <paramref name="other" />, sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary>Obtient le nombre d’octets qui seraient écrits par <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> a été appelé sans la méthode Pop correspondante.</exception>
      <returns>Nombre d’octets qui seraient écrits par <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Indique que la chaîne d’octets ouverte avec la balise UNIVERSAL 4 est fermée, en renvoyant le writer au contexte parent.</summary>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.InvalidOperationException">le writer n’est pas positionné dans une chaîne d’octets présentant la balise spécifiée.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Indique que la séquence ouverte avec la balise spécifiée est fermée, en renvoyant le writer au contexte parent.</summary>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 16).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.InvalidOperationException">le writer n’est pas positionné dans une séquence présentant la balise spécifiée.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Indique que le Set-Of ouvert présentant la balise spécifiée est fermé, en renvoyant le writer au contexte parent.</summary>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 17).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.InvalidOperationException">le writer n’est pas positionné dans un Set-Of présentant la balise spécifiée.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Commence à écrire une valeur de chaîne d’octets avec une balise spécifiée.</summary>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <returns>Valeur jetable qui appellera automatiquement <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Commence à écrire une séquence avec une balise spécifiée.</summary>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 16).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur jetable qui appellera automatiquement <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Commence à écrire un Set-Of avec une balise spécifiée.</summary>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 17).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns>Valeur jetable qui appellera automatiquement <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary>Réinitialise l’enregistreur pour n’avoir aucune donnée, sans libérer les ressources.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Tente d’écrire la représentation encodée des données sur <paramref name="destination" />.</summary>
      <param name="destination">Mémoire tampon dans laquelle écrire.</param>
      <param name="bytesWritten">En cas de réussite, reçoit le nombre d’octets écrits sur <paramref name="destination" />.</param>
      <exception cref="T:System.InvalidOperationException">Un <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> n’a pas été fermé via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>
        <see langword="true" /> si l’encodage a réussi, <see langword="false" /> si <paramref name="destination" /> est trop petit.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur de chaîne de bits avec une balise spécifiée.</summary>
      <param name="value">Valeur à écrire.</param>
      <param name="unusedBitCount">Nombre de bits de fin qui ne sont pas sémantiques.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="value" /> a une longueur de 0 et <paramref name="unusedBitCount" /> n’est pas égal à 0 -ou- <paramref name="value" /> n’est pas vide et l’un des bits identifiés par <paramref name="unusedBitCount" /> est défini.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="unusedBitCount" /> n’est pas compris dans la plage [0,7].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur booléenne avec une balise spécifiée.</summary>
      <param name="value">Valeur à écrire.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 1).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit la chaîne fournie en utilisant le type d’encodage spécifié avec la balise spécifiée correspondant au type d’encodage.</summary>
      <param name="encodingType">L’une des valeurs d’énumération représentant l’encodage à utiliser.</param>
      <param name="str">Chaîne à écrire.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise universelle adaptée au type d’encodage demandé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> n’est pas un type d’encodage de chaîne de caractères restreint.
-ou- <paramref name="encodingType" /> est un type d’encodage de chaîne de caractères restreint qui n’est pas actuellement pris en charge par cette méthode.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit la chaîne fournie en utilisant le type d’encodage spécifié avec la balise spécifiée correspondant au type d’encodage.</summary>
      <param name="encodingType">L’une des valeurs d’énumération représentant l’encodage à utiliser.</param>
      <param name="value">Chaîne à écrire.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise universelle adaptée au type d’encodage demandé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> n’est pas un type d’encodage de chaîne de caractères restreint.
-ou- <paramref name="encodingType" /> est un type d’encodage de chaîne de caractères restreint qui n’est pas actuellement pris en charge par cette méthode.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary>Écrit une valeur unique qui a déjà été encodée.</summary>
      <param name="value">Valeur à écrire.</param>
      <exception cref="T:System.ArgumentException">Impossible de lire <paramref name="value" /> avec les règles d’encodage actuelles.
-ou- <paramref name="value" /> contient des données au-delà de la fin de la première valeur.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur enum non-[<see cref="T:System.FlagsAttribute" />] comme une énumération avec la balise UNIVERSAL 10.</summary>
      <param name="value">Valeur d’énumération boxed à écrire.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="value" /> n’est pas une valeur enum boxed.
-ou- le type unboxed de <paramref name="value" /> est déclaré [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur enum non-[<see cref="T:System.FlagsAttribute" />] comme une énumération avec la balise UNIVERSAL 10.</summary>
      <param name="value">Valeur d’énumération boxed à écrire.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <typeparam name="TEnum">
        <see cref="T:System.FlagsAttribute" />Type d’énumération non-[] à écrire.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <typeparamref name="TEnum" /> n’est pas une énumération.
-ou- <typeparamref name="TEnum" /> est déclaré [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit le <see cref="T:System.DateTimeOffset" /> fourni comme une valeur GeneralizedTime avec une balise Universal 24 spécifiée, en excluant éventuellement les fractions de seconde.</summary>
      <param name="value">Valeur à écrire.</param>
      <param name="omitFractionalSeconds">
        <see langword="true" /> pour traiter les fractions de seconde de <paramref name="value" /> comme 0, même si une valeur non nulle est présente.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 24).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur entière avec une balise spécifiée.</summary>
      <param name="value">Valeur à écrire.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur entière avec une balise spécifiée.</summary>
      <param name="value">Valeur à écrire.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur entière avec une balise spécifiée.</summary>
      <param name="value">Valeur entière à écrire, en ordre d’octet big-endian signé.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentException">les 9 bits les plus significatifs sont tous définis.
-ou- les 9 bits les plus significatifs sont tous non définis.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur entière avec une balise spécifiée.</summary>
      <param name="value">Valeur à écrire.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur entière avec une balise spécifiée.</summary>
      <param name="value">Valeur entière à écrire, en ordre d’octet big-endian non signé.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentException">les 9 bits les plus significatifs sont tous non définis.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur de tableau de bits sous forme de NamedBitList avec une balise spécifiée.</summary>
      <param name="value">Bits à écrire</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur enum [<see cref="T:System.FlagsAttribute" />] en tant que NamedBitList avec une balise spécifiée.</summary>
      <param name="value">Valeur d’énumération boxed à écrire</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="value" /> n’est pas une valeur enum boxed.
-ou- le type unboxed de <paramref name="value" /> n’est pas déclaré [<see cref="T:System.FlagsAttribute" />].</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur enum [<see cref="T:System.FlagsAttribute" />] en tant que NamedBitList avec une balise spécifiée.</summary>
      <param name="value">Valeur d’énumération à écrire</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <typeparam name="TEnum">
        <see cref="T:System.FlagsAttribute" />Type d’énumération [] à écrire.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
<typeparamref name="TEnum" /> n’est pas une valeur d’enum.
-ou- <typeparamref name="TEnum" /> n’est pas déclaré [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit NULL avec une balise spécifiée.</summary>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 5).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit un identificateur d’objet avec une balise spécifiée.</summary>
      <param name="oidValue">Identificateur d’objet à écrire.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 6).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="oidValue" /> n’est pas un identificateur d’objet à notation décimale pointée valide.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit un identificateur d’objet avec une balise spécifiée.</summary>
      <param name="oidValue">Identificateur d’objet à écrire.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 6).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="oidValue" /> n’est pas un identificateur d’objet à notation décimale pointée valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oidValue" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit une valeur de chaîne d’octets avec une balise spécifiée.</summary>
      <param name="value">Valeur à écrire.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit la valeur fournie comme une valeur UTCTime avec une balise spécifiée, à condition que l’année se trouve dans la plage autorisée.</summary>
      <param name="value">Valeur à écrire.</param>
      <param name="twoDigitYearMax">Année valide maximale pour <paramref name="value" />, après conversion au format UTC.
Pour la plage X.509 Time.utcTime de 1950-2049, passer la valeur <c>2049</c>.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 23).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (après conversion au format UTC) n’est pas compris dans la plage (<paramref name="twoDigitYearMax" /> -100, <paramref name="twoDigitYearMax" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Écrit la valeur fournie comme une valeur UTCTime avec une balise spécifiée, acceptant l’année à deux chiffres comme valide en contexte.</summary>
      <param name="value">Valeur à écrire.</param>
      <param name="tag">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 23).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary>Obtient les règles d’encodage utilisées par ce writer.</summary>
      <returns>Règles d’encodage utilisées par ce writer.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary>Fournit une cible <see cref="T:System.IDisposable" /> pour fermer en toute sécurité une balise ouverte en utilisant une étendue lexicale comme étendue logique.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary>Exécute les tâches définies par l'application associées à la libération ou à la redéfinition des ressources non managées.</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary>Classe de balise pour une balise ASN.1 particulière.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary>Classe de balise d’application</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary>Classe de balise spécifique au contexte</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary>Classe de balise privée</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary>Classe de balise universelle</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary>Affectations de balises pour la classe UNIVERSAL dans ITU-T X.680.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary>Valeur de balise de classe universelle pour Bit String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary>Valeur de balise de classe universelle pour BMPString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary>Valeur de balise de classe universelle pour Boolean.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary>Valeur de balise de classe universelle pour Date.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary>Valeur de balise de classe universelle pour Date-Time.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary>Valeur de balise de classe universelle pour Duration.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary>Valeur de balise de classe universelle pour Embedded-PDV.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary>Identificateur réservé pour le marqueur de fin de contenu dans un encodage de longueur indéfinie.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary>Valeur de balise de classe universelle pour Enumerated.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary>Valeur de balise de classe universelle pour External.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary>Valeur de balise de classe universelle pour GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary>Valeur de balise de classe universelle pour GeneralString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary>Valeur de balise de classe universelle pour GraphicString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary>Valeur de balise de classe universelle pour IA5String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary>Valeur de balise de classe universelle pour Instance-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary>Valeur de balise de classe universelle pour Integer.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary>Valeur de balise de classe universelle pour ISO646String (VisibleString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary>Valeur de balise de classe universelle pour Null.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary>Valeur de balise de classe universelle pour NumericString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary>Valeur de balise de classe universelle pour Object Descriptor.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary>Valeur de balise de classe universelle pour Object Identifier.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary>Valeur de balise de classe universelle pour Object Identifier Internationalized Resource Identifier (IRI).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary>Valeur de balise de classe universelle pour Octet String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary>Valeur de balise de classe universelle pour PrintableString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary>Valeur de balise de classe universelle pour Real.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary>Valeur de balise de classe universelle pour Relative Object Identifier.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary>Valeur de balise de classe universelle pour Relative Object Identifier Internationalized Resource Identifier (IRI).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary>Valeur de l’étiquette de classe universelle pour Sequence.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary>Valeur de balise de classe universelle pour Sequence-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary>Valeur de balise de classe universelle pour Set.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary>Valeur de balise de classe universelle pour Set-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary>Valeur de balise de classe universelle pour T61String (TeletexString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary>Valeur de balise de classe universelle pour TeletexString (T61String).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary>Valeur de balise de classe universelle pour Time.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary>Valeur de balise de classe universelle pour Time-Of-Day.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary>Valeur de balise de classe universelle pour UniversalString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary>Valeur de balise de classe universelle pour une chaîne de caractères non restreinte.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary>Valeur de balise de classe universelle pour UTCTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary>Valeur de balise de classe universelle pour UTF8String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary>Valeur de balise de classe universelle pour VideotexString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary>Valeur de balise de classe universelle pour VisibleString (ISO646String).</summary>
    </member>
  </members>
</doc>