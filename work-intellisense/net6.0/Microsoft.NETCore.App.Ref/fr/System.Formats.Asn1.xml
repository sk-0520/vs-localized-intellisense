<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary vsli:raw="This type represents an ASN.1 tag, as described in ITU-T Recommendation X.680.">Ce type représente une balise ASN.1, comme décrit dans la recommandation ITU-T X.680.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary vsli:raw="Represents the universal class tag for a Boolean value.">Représente la balise de classe universelle pour une valeur booléenne.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a constructed encoding.">Représente la balise de classe universelle pour une valeur de chaîne de bits contenue dans un encodage construit.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary vsli:raw="Represents the universal class tag for a Octet String value under a constructed encoding.">Représente la balise de classe universelle pour une valeur de chaîne d’octets dans un encodage construit.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary vsli:raw="Represents the universal class tag for an Enumerated value.">Représente la balise de classe universelle pour une valeur énumérée.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary vsli:raw="Represents the universal class tag for a GeneralizedTime value.">Représente la balise de classe universelle pour une valeur GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary vsli:raw="Represents the universal class tag for an Integer value.">Représente la balise de classe universelle pour une valeur entière.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary vsli:raw="Represents the universal class tag for a &lt;see langword=&quot;null&quot; /&gt; value.">Représente la balise de classe universelle pour une valeur <see langword="null" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary vsli:raw="Represents the universal class tag for an Object Identifier value.">Représente la balise de classe universelle pour une valeur d’identificateur d’objet.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a primitive encoding.">Représente la balise de classe universelle pour une valeur de chaîne de bits contenue dans un encodage primitif.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary vsli:raw="Represents the universal class tag for an Octet String value under a primitive encoding.">Représente la balise de classe universelle pour une valeur de chaîne d’octets dans un encodage primitif.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary vsli:raw="Represents the universal class tag for a Sequence value (always a constructed encoding).">Représente la balise de classe universelle pour une valeur Sequence (toujours un encodage construit).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary vsli:raw="Represents the universal class tag for a SetOf value (always a constructed encoding).">Représente la balise de classe universelle pour une valeur SetOf (toujours un encodage construit).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary vsli:raw="Represents the universal class tag for a UtcTime value.">Représente la balise de classe universelle pour une valeur UtcTime.</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a specified value within a specified tag class.">Crée un <see cref="T:System.Formats.Asn1.Asn1Tag" /> pour une valeur spécifiée dans une classe de balise spécifiée.</summary>
      <param name="tagClass" vsli:raw="The tag class for this tag.">Classe de balise pour cette balise.</param>
      <param name="tagValue" vsli:raw="The numeric value for this tag.">Valeur numérique de cette balise.</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">
        <see langword="true" /> pour une balise construite, <see langword="false" /> pour une balise primitive.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;tagClass&quot; /&gt; is not a known value.&#xA;             -or- &#xA;               &lt;paramref name=&quot;tagValue&quot; /&gt; is negative.">
        <paramref name="tagClass" /> n’est pas une valeur connue.
-ou- <paramref name="tagValue" /> est un nombre négatif.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a tag from the UNIVERSAL class.">Crée un <see cref="T:System.Formats.Asn1.Asn1Tag" /> pour une balise à partir de la classe UNIVERSAL.</summary>
      <param name="universalTagNumber" vsli:raw="One of the enumeration values that specifies the semantic type for this tag.">L’une des valeurs d’énumération qui spécifie le type de sémantique pour cette balise.</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">
        <see langword="true" /> pour une balise construite, <see langword="false" /> pour une balise primitive.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;universalTagNumber&quot; /&gt; is not a known value.">
        <paramref name="universalTagNumber" /> n’est pas une valeur connue.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Produit une balise avec les mêmes valeurs <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, mais dont <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> a la valeur <see langword="true" />.</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Balise avec les mêmes valeurs <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, mais dont <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> a la valeur <see langword="true" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Produit une balise avec les mêmes valeurs <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, mais dont <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> a la valeur <see langword="false" />.</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Balise avec les mêmes valeurs <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, mais dont <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> a la valeur <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary vsli:raw="Reports the number of bytes required for the BER-encoding of this tag.">Indique le nombre d’octets requis pour l’encodage BER de cette balise.</summary>
      <returns vsli:raw="The number of bytes required for the BER-encoding of this tag.">Nombre d’octets requis pour l’encodage BER de cette balise.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary vsli:raw="Reads a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">Lit une balise encodée en BER qui commence à <paramref name="source" />.</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">Séquence d’octets en lecture seule dont le début est une balise encodée en BER.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag. This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, contient le nombre d’octets qui ont contribué à la balise encodée. Ce paramètre est traité comme étant non initialisé.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The provided data does not decode to a tag.">Les données fournies ne sont pas décodées sous forme de balise.</exception>
      <returns vsli:raw="The decoded tag.">Balise décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">Écrit cette balise encodée en BER sur <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">Début de l’emplacement où la balise encodée doit être écrite.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;.">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />.</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Nombre d’octets écrits dans <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same encoding as this tag.">Vérifie si <paramref name="other" /> a le même encodage que cette balise.</summary>
      <param name="other" vsli:raw="Tag to test for equality.">Balise dont l’égalité doit être testée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same values for &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt;, &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt;, and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si <paramref name="other" /> a les mêmes valeurs pour <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />, <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; with the same encoding as this tag.">Vérifie si <paramref name="obj" /> est un <see cref="T:System.Formats.Asn1.Asn1Tag" /> avec le même encodage que cette balise.</summary>
      <param name="obj" vsli:raw="Object to test for value equality.">Objet dont l’égalité de valeurs doit être testée</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is not an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)&quot; /&gt; otherwise.">
        <see langword="false" /> si <paramref name="obj" /> n’est pas un <see cref="T:System.Formats.Asn1.Asn1Tag" /> ; sinon, <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values as this tag, and does not compare &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;.">Vérifie si <paramref name="other" /> a les mêmes valeurs <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> que cette balise, sans comparer <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />.</summary>
      <param name="other" vsli:raw="Tag to test for concept equality.">Balise dont l’égalité de concept doit être testée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; as this tag, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si <paramref name="other" /> a les mêmes <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> et <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> que cette balise ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have the same BER encoding.">Vérifie si deux valeurs <see cref="T:System.Formats.Asn1.Asn1Tag" /> ont le même encodage BER.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have the same BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ont le même encodage BER ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have a different BER encoding.">Vérifie si deux valeurs <see cref="T:System.Formats.Asn1.Asn1Tag" /> ont un encodage BER différent.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have a different BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ont un encodage BER différent ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary vsli:raw="Provides a text representation of this tag suitable for debugging.">Fournit une représentation textuelle de cette balise adaptée au débogage.</summary>
      <returns vsli:raw="A text representation of this tag suitable for debugging.">Représentation textuelle de cette balise adaptée au débogage.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary vsli:raw="Attempts to read a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">Tente de lire une balise encodée en BER qui commence à <paramref name="source" />.</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">Séquence d’octets en lecture seule dont le début est une balise encodée en BER.</param>
      <param name="tag" vsli:raw="The decoded tag.">Balise décodée.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag, 0 on failure. This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, contient le nombre d’octets qui ont contribué à la balise encodée (0 en cas d’échec). Ce paramètre est traité comme étant non initialisé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a tag was correctly decoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une balise a été correctement décodée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">Tente d’écrire cette balise encodée en BER sur <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">Début de l’emplacement où la balise encodée doit être écrite.</param>
      <param name="bytesWritten" vsli:raw="Receives the value from &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt; on success, 0 on failure.">Reçoit la valeur de <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" /> en cas de réussite, 0 en cas d’échec.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;(), &lt;see langword=&quot;true&quot; /&gt; otherwise.">
        <see langword="false" /> si <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />() ; sinon, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary vsli:raw="Indicates if the tag represents a constructed encoding (&lt;see langword=&quot;true&quot; /&gt;), or a primitive encoding (&lt;see langword=&quot;false&quot; /&gt;).">Indique si la balise représente un encodage construit (<see langword="true" />) ou un encodage primitif (<see langword="false" />).</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary vsli:raw="The tag class to which this tag belongs.">Classe de balise à laquelle cette balise appartient.</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary vsli:raw="The numeric value for this tag.">Valeur numérique de cette balise.</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary vsli:raw="The exception that is thrown when an encoded ASN.1 value cannot be successfully decoded.">Exception levée lorsque le décodage d’une valeur ASN.1 encodée échoue.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the default message.">Initialise une nouvelle instance de la classe <see cref="T:System.Formats.Asn1.AsnContentException" /> en utilisant le message par défaut.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Formats.Asn1.AsnContentException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message.">Initialise une nouvelle instance de la classe <see cref="T:System.Formats.Asn1.AsnContentException" /> en utilisant le message fourni.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message and exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Formats.Asn1.AsnContentException" /> en utilisant le message fourni et l'exception à l'origine de cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">Exception ayant provoqué l'exception actuelle.</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary vsli:raw="Provides stateless methods for decoding BER-encoded, CER-encoded, and DER-encoded ASN.1 data.">Fournit des méthodes sans état pour décoder les données ASN.1 encodées en BER, CER ou DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">Lit une valeur de chaîne de bits à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en retournant le contenu dans un nouveau tableau.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">En cas de réussite, reçoit le nombre de bits dans le dernier octet qui ont été signalés comme étant « inutilisés » par le writer.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="An array containing the contents of the Bit String value.">Tableau comprenant le contenu de la valeur de chaîne de bits.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Boolean value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lit une valeur booléenne à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 1).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The decoded value.">Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded string.">Lit la valeur suivante comme une chaîne de caractères avec la balise et le type d’encodage spécifiés, en retournant la chaîne décodée.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">L’une des valeurs d’énumération qui représente le type de valeur à traiter.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise universelle adaptée au type d’encodage demandé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="ruleSet" /> n’est pas défini.
-ou- <paramref name="encodingType" /> n’est pas un type de chaîne de caractères connu.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la chaîne n’a pas pu être décodée.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas identique à <paramref name="encodingType" />.</exception>
      <returns vsli:raw="The decoded value.">Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Locates the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">Localise la plage de contenu pour la valeur encodée au début de la mémoire tampon <paramref name="source" /> en utilisant les règles d’encodage spécifiées.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, décalage de la charge utile de contenu par rapport au début de <paramref name="source" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre d’octets dans la charge utile de contenu (peut être égal à 0).
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not represent a value encoded under the specified encoding rules.">
        <paramref name="source" /> ne représente pas une valeur encodée selon les règles d’encodage spécifiées.</exception>
      <returns vsli:raw="The tag identifying the content.">Balise identifiant le contenu.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">Lit une valeur énumérée à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en retournant le contenu sous la forme d’une tranche de mémoire tampon.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Enumerated value, in signed big-endian form.">Segment de mémoire tampon contenant les octets de la valeur énumérée, au format big-endian signé.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">Lit une énumération à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en la convertissant en l’enum non-[<see cref="T:System.FlagsAttribute" />] spécifié par <paramref name="enumType" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="enumType" vsli:raw="Type object representing the destination type.">Objet de type représentant le type de destination.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" /> n’est pas un type d’enum.
-ou- <paramref name="enumType" /> a été déclaré avec <see cref="T:System.FlagsAttribute" />.
-ou- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">Valeur énumérée convertie en <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Lit une énumération à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en la convertissant en l’enum non-[<see cref="T:System.FlagsAttribute" />] spécifié par <typeparamref name="TEnum" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">Type d’énumération de destination</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" /> n’est pas un type d’enum.
-ou- <typeparamref name="TEnum" /> a été déclaré avec <see cref="T:System.FlagsAttribute" />.
-ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Valeur énumérée convertie en <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a GeneralizedTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lit une valeur GeneralizedTime à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The decoded value.">Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lit une valeur entière à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The decoded numeric value.">Valeur numérique décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">Lit une valeur entière à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en retournant le contenu sous la forme d’une tranche de mémoire tampon.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Integer value, in signed big-endian form.">Tranche de mémoire tampon contenant les octets de la valeur entière, au format big-endian signé.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lit une valeur NamedBitList à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The bits from the encoded value.">Bits de la valeur encodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Lit une valeur NamedBitList à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en la convertissant en l’enum [<see cref="T:System.FlagsAttribute" />] spécifiée par <paramref name="flagsEnumType" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">Objet de type représentant le type de destination.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" /> n’est pas un type d’enum.
-ou- <paramref name="flagsEnumType" /> n’a pas été déclaré avec <see cref="T:System.FlagsAttribute" /> -ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Valeur NamedBitList convertie en <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Lit une valeur NamedBitList à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en la convertissant en l’enum [<see cref="T:System.FlagsAttribute" />] spécifiée par <typeparamref name="TFlagsEnum" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">Type d’énumération de destination</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" /> n’est pas un type d’enum.
-ou- <typeparamref name="TFlagsEnum" /> n’a pas été déclaré avec <see cref="T:System.FlagsAttribute" /> -ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Valeur NamedBitList convertie en <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a &lt;see langword=&quot;null&quot; /&gt; value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lit une valeur <see langword="null" /> à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 5).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Object Identifier value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lit une valeur d’identificateur d’objet à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 6).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The decoded object identifier, in dotted-decimal notation.">Identificateur d’objet décodé, en notation décimale pointée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">Lit une valeur de chaîne d’octets à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en retournant le contenu dans un nouveau tableau.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="An array containing the contents of the Octet String value.">Tableau comprenant le contenu de la valeur de chaîne d’octets.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Sequence or Sequence-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lit une valeur Sequence ou Sequence-Of à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, décalage de la charge utile de contenu par rapport au début de <paramref name="source" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre d’octets dans la charge utile de contenu (peut être égal à 0).
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 16).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Set-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lit une valeur Set-Of à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, décalage de la charge utile de contenu par rapport au début de <paramref name="source" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre d’octets dans la charge utile de contenu (peut être égal à 0).
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">
        <see langword="true" /> pour toujours accepter les données dans l’ordre dans lequel elles sont présentées, <see langword="false" /> pour vérifier que les données sont triées correctement quand les règles d’encodage indiquent qu’un tri est requis (CER et DER).</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 17).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a UtcTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lit une valeur UtcTime à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.&#xA;               The default value, 2049, represents the 1950-2049 range for X.509 certificates.">La plus grande année à représenter avec cette valeur.
La valeur par défaut, 2049, représente la plage 1950-2049 pour les certificats X.509.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; is not in the range [99, 9999].">
        <paramref name="ruleSet" /> n’est pas défini.
-ou- <paramref name="twoDigitYearMax" /> n’est pas compris dans la plage [99, 9 999].</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The decoded value.">Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to copy a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules into &lt;paramref name=&quot;destination&quot; /&gt;.">Tente de copier sur <paramref name="destination" /> une valeur de chaîne de bits à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">Mémoire tampon dans laquelle écrire.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">En cas de réussite, reçoit le nombre de bits dans le dernier octet qui ont été signalés comme étant « inutilisés » par le writer.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets écrits sur <paramref name="destination" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="destination" /> chevauche <paramref name="source" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Bit String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="destination" /> est suffisamment grand pour recevoir la valeur de la chaîne de bits ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the decoded string into a provided destination buffer.">Lit une valeur de chaîne de caractères à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en copiant la chaîne décodée dans une mémoire tampon de destination fournie.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">Mémoire tampon dans laquelle écrire.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">L’une des valeurs d’énumération qui représente le type de valeur à traiter.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="charsWritten" vsli:raw="When this method returns, the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre de caractères écrits sur <paramref name="destination" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise universelle adaptée au type d’encodage demandé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="ruleSet" /> n’est pas défini.
-ou- <paramref name="encodingType" /> n’est pas un type de chaîne de caractères connu.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la chaîne n’a pas pu être décodée.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas identique à <paramref name="encodingType" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> et avance le lecteur si la longueur de <paramref name="destination" /> est suffisante pour recevoir la valeur ; sinon, <see langword="false" /> et le lecteur n’avance pas.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts to read a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the unprocessed bytes into the provided destination buffer.">Tente de lire une valeur de chaîne de caractères à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en copiant les octets non traités dans la mémoire tampon de destination fournie.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">Mémoire tampon dans laquelle écrire.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Balise à vérifier avant la lecture.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">En cas de réussite, reçoit le nombre d’octets écrits sur <paramref name="destination" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas un type de balise de chaîne de caractères.
-ou- <paramref name="destination" /> chevauche <paramref name="source" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the unprocessed character string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="destination" /> est suffisamment grand pour recevoir la valeur de la chaîne de caractères non traitée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts locate the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">Tente de localiser la plage de contenu pour la valeur encodée au début de la mémoire tampon <paramref name="source" /> en utilisant les règles d’encodage spécifiées.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="tag" vsli:raw="When this method returns, the tag identifying the content.&#xA;              This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, balise identifiant le contenu.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, décalage de la charge utile de contenu par rapport au début de <paramref name="source" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre d’octets dans la charge utile de contenu (peut être égal à 0).
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;source&quot; /&gt; represents a valid structural encoding for the specified encoding rules; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="source" /> représente un encodage structurel valide pour les règles d’encodage spécifiées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 32-bit value.">Tente de lire une valeur entière à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, sous forme de valeur 32 bits signée.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">En cas de réussite, reçoit la valeur numérique interprétée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’entier représente une valeur comprise entre <see cref="F:System.Int32.MinValue" /> et <see cref="F:System.Int32.MaxValue" /> (inclus) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 64-bit value.">Tente de lire une valeur entière à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, sous forme de valeur 64 bits signée.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">En cas de réussite, reçoit la valeur numérique interprétée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’entier représente une valeur comprise entre <see cref="F:System.Int64.MinValue" /> et <see cref="F:System.Int64.MaxValue" /> (inclus) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the value into the provided destination buffer.">Tente d’obtenir une valeur de chaîne d’octets à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, en copiant la valeur dans la mémoire tampon de destination fournie.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">Mémoire tampon dans laquelle écrire.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets écrits sur <paramref name="destination" />.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="destination" /> chevauche <paramref name="source" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Octet String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="destination" /> est suffisamment grand pour recevoir la valeur de la chaîne d’octets ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">Tente d’obtenir une valeur de chaîne de bits à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, si la valeur est contenue dans un encodage unique (primitif).</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">En cas de réussite, reçoit le nombre de bits dans le dernier octet qui ont été signalés comme étant « inutilisés » par le writer.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">En cas de réussite, reçoit une tranche de la mémoire tampon d’entrée qui correspond à la valeur de la chaîne de bits.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Bit String value has a primitive encoding and all of the bits reported as unused are set to 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de chaîne de bits a un encodage primitif et que tous les bits signalés comme inutilisés sont définis sur 0 ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary vsli:raw="Attempts to get an unprocessed character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">Tente d’obtenir une valeur de chaîne de caractères non traitée à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, si la valeur est contenue dans un encodage unique (primitif).</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Balise à vérifier avant la lecture.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">En cas de réussite, reçoit une tranche de la mémoire tampon d’entrée qui correspond à la valeur de la chaîne de bits.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas un type de balise de chaîne de caractères.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character string value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de chaîne de caractères a un encodage primitif ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">Tente d’obtenir une valeur de chaîne d’octets à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, si la valeur est contenue dans un encodage unique (primitif).</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Octet String.&#xA;               This parameter is treated as uninitialized.">En cas de réussite, reçoit une tranche de la mémoire tampon d’entrée qui correspond à la valeur de la chaîne d’octets.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Octet String value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de la chaîne d’octets a un encodage primitif ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 32-bit value.">Tente de lire une valeur entière à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, sous forme de valeur 32 bits non signée.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">En cas de réussite, reçoit la valeur numérique interprétée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’entier représente une valeur comprise entre <see cref="F:System.UInt32.MinValue" /> et <see cref="F:System.UInt32.MaxValue" /> (inclus) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 64-bit value.">Tente de lire une valeur entière à partir de <paramref name="source" /> avec une balise spécifiée selon les règles d’encodage spécifiées, sous forme de valeur 64 bits non signée.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Mémoire tampon contenant les données encodées.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Contraintes d’encodage à utiliser lors de l’interprétation des données.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">En cas de réussite, reçoit la valeur numérique interprétée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Lorsque cette méthode retourne une valeur, nombre total d’octets pour la valeur encodée.
Ce paramètre est traité comme étant non initialisé.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’entier représente une valeur comprise entre <see cref="F:System.UInt64.MinValue" /> et <see cref="F:System.UInt64.MaxValue" /> (inclus) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary vsli:raw="The encoding ruleset for an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; or &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt;.">Ensemble de règles d’encodage pour un <see cref="T:System.Formats.Asn1.AsnReader" /> ou un <see cref="T:System.Formats.Asn1.AsnWriter" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary vsli:raw="ITU-T X.690 Basic Encoding Rules.">ITU-T X.690 Basic Encoding Rules</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary vsli:raw="ITU-T X.690 Canonical Encoding Rules.">ITU-T X.690 Canonical Encoding Rules</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary vsli:raw="ITU-T X.690 Distinguished Encoding Rules.">ITU-T X.690 Distinguished Encoding Rules</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary vsli:raw="A stateful, forward-only reader for BER-, CER-, or DER-encoded ASN.1 data.">Lecteur avec état de type avant uniquement pour les données ASN.1 encodées en BER, CER ou DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary vsli:raw="Construct an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; over &lt;paramref name=&quot;data&quot; /&gt; with a given ruleset.">Construit un <see cref="T:System.Formats.Asn1.AsnReader" /> sur <paramref name="data" /> avec un ensemble de règles donné.</summary>
      <param name="data" vsli:raw="The data to read.">Données à lire.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints for the reader.">Contraintes d’encodage pour le lecteur.</param>
      <param name="options" vsli:raw="Additional options for the reader.">Options supplémentaires pour le lecteur.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the content octets (bytes) of the next encoded value without advancing the reader.">Obtient une vue <see cref="T:System.ReadOnlyMemory`1" /> des octets de contenu de la valeur encodée suivante sans avancer le lecteur.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">Le lecteur est positionné à un point où la balise ou la longueur n’est pas conforme aux règles d’encodage actuelles.</exception>
      <returns vsli:raw="The bytes of the contents octets of the next encoded value.">Octets du contenu de la valeur encodée suivante.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value without advancing the reader. For indefinite length encodings this includes the End of Contents marker.">Obtient une vue <see cref="T:System.ReadOnlyMemory`1" /> de la valeur encodée suivante sans avancer le lecteur. Cela comprend le marqueur de fin de contenu pour les encodages de longueur indéfinie.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">Le lecteur est positionné à un point où la balise ou la longueur n’est pas conforme aux règles d’encodage actuelles.</exception>
      <returns vsli:raw="The bytes of the next encoded value.">Octets de la valeur encodée suivante.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary vsli:raw="Read the encoded tag at the next data position, without advancing the reader.">Lit la balise encodée à la position de données suivante, sans avancer le lecteur.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="A tag could not be decoded at the reader's current position.">une balise n’a pas pu être décodée à la position actuelle du lecteur.</exception>
      <returns vsli:raw="The decoded tag value.">Valeur de balise décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the value in a byte array.">Lit la valeur suivante comme une valeur BIT STRING avec une balise spécifiée, en retournant la valeur dans un tableau d’octets.</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">En cas de réussite, reçoit le nombre de bits dans le dernier octet qui ont été signalés comme étant « inutilisés » par le writer.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">Copie de la valeur dans un tableau nouvellement alloué de taille précise.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Boolean with a specified tag.">Lit la valeur suivante comme une valeur booléenne avec une balise spécifiée.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The decoded value.">Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded value as a string.">Lit la valeur suivante comme une chaîne de caractères avec la balise et le type d’encodage spécifiés, en retournant la valeur décodée sous forme de chaîne.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">L’une des valeurs d’énumération représentant le type de valeur à traiter.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise universelle adaptée au type d’encodage demandé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" /> n’est pas un type de chaîne de caractères connu.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la chaîne n’a pas pu être décodée.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas identique à <paramref name="encodingType" />.</exception>
      <returns vsli:raw="The decoded value.">Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value, and advance the reader past it. For an indefinite length encoding this includes the End of Contents marker.">Obtient une vue <see cref="T:System.ReadOnlyMemory`1" /> de la valeur encodée suivante et avance le lecteur après celle-ci. Cela comprend le marqueur de fin de contenu pour un encodage de longueur indéfinie.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value.">Vue <see cref="T:System.ReadOnlyMemory`1" /> de la valeur encodée suivante.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Enumerated with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Lit la valeur suivante comme une énumération avec une balise spécifiée, en retournant le contenu sous la forme d’un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The bytes of the Enumerated value, in signed big-endian form.">Octets de la valeur énumérée, au format big-endian signé.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">Lit la valeur suivante comme une énumération avec une balise spécifiée, en la convertissant en l’enum non-[<see cref="T:System.FlagsAttribute" />] spécifiée par <paramref name="enumType" />.</summary>
      <param name="enumType" vsli:raw="Type object representing the destination type.">Objet de type représentant le type de destination.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" /> n’est pas un type d’enum.
-ou- <paramref name="enumType" /> a été déclaré avec <see cref="T:System.FlagsAttribute" />.
-ou- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">Valeur énumérée convertie en <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Lit la valeur suivante comme une énumération avec une balise spécifiée, en la convertissant en l’enum non-[<see cref="T:System.FlagsAttribute" />] spécifiée par <typeparamref name="TEnum" />.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">Type d’énumération de destination</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TEnum&quot; /&gt; value.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" /> n’est pas un type d’enum.
-ou- <typeparamref name="TEnum" /> a été déclaré avec <see cref="T:System.FlagsAttribute" />.
-ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Valeur énumérée convertie en <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a GeneralizedTime with a specified tag.">Lit la valeur suivante comme une valeur GeneralizedTime avec une balise spécifiée.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 24).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The decoded value.">Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Integer with a specified tag.">Lit la valeur suivante comme un entier avec une balise spécifiée.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The decoded value.">Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Integer with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Lit la valeur suivante comme un entier avec une balise spécifiée, en retournant le contenu sous la forme d’un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The bytes of the Integer value, in signed big-endian form.">Octets de la valeur entière, au format big-endian signé.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag.">Lit la valeur suivante comme une valeur NamedBitList avec une balise spécifiée.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Balise à vérifier avant la lecture.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The bits from the encoded value.">Bits de la valeur encodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Lit la valeur suivante comme une valeur NamedBitList avec une balise spécifiée, en la convertissant en l’enum [<see cref="T:System.FlagsAttribute" />] spécifiée par <paramref name="flagsEnumType" />.</summary>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">Objet de type représentant le type de destination.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Balise à vérifier avant la lecture.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" /> n’est pas un type d’enum.
-ou- <paramref name="flagsEnumType" /> n’a pas été déclaré avec <see cref="T:System.FlagsAttribute" /> -ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Valeur NamedBitList convertie en <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Lit la valeur suivante comme une valeur NamedBitList avec une balise spécifiée, en la convertissant en l’enum [<see cref="T:System.FlagsAttribute" />] spécifiée par <typeparamref name="TFlagsEnum" />.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Balise à vérifier avant la lecture.</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">Type d’énumération de destination</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la valeur encodée est trop grande pour être contenue dans une valeur <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" /> n’est pas un type d’enum.
-ou- <typeparamref name="TFlagsEnum" /> n’a pas été déclaré avec <see cref="T:System.FlagsAttribute" /> -ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Valeur NamedBitList convertie en <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NULL with a specified tag.">Lit la valeur suivante comme une valeur NULL avec une balise spécifiée.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 5).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OBJECT IDENTIFIER with a specified tag, returning the value in a dotted decimal format string.">Lit la valeur suivante comme un identificateur d’objet avec une balise spécifiée, en retournant la valeur dans une chaîne à notation décimale pointée.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 6).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The object identifier value in a dotted decimal format string.">Valeur de l’identificateur d’objet dans une chaîne de format décimal séparée par des points.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with tag UNIVERSAL 4, returning the value in a byte array.">Lit la valeur suivante comme une chaîne d’octets avec la balise UNIVERSAL 4, en retournant la valeur dans un tableau d’octets.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">Copie de la valeur dans un tableau nouvellement alloué de taille précise.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SEQUENCE or SEQUENCE-OF with the specified tag and returns the result as a new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Lit la valeur suivante en tant que SEQUENCE ou SEQUENCE-OF avec la balise spécifiée et retourne le résultat sous la forme d’un nouveau lecteur positionné à la première valeur de la séquence (ou avec <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 16).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Nouveau lecteur positionné à la première valeur de la séquence (ou avec <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Lit la valeur suivante en tant que SET-OF avec la balise spécifiée et retourne le résultat sous la forme d’un nouveau lecteur positionné à la première valeur du set-of (ou avec <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">
        <see langword="true" /> pour toujours accepter les données dans l’ordre dans lequel elles sont présentées, <see langword="false" /> pour vérifier que les données sont triées correctement quand les règles d’encodage indiquent qu’un tri est requis (CER et DER).</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Nouveau lecteur positionné à la première valeur du set-of (ou avec <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;), using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification&quot; /&gt; value from the constructor (default &lt;see langword=&quot;false&quot; /&gt;).">Lit la valeur suivante en tant que SET-OF avec la balise spécifiée et retourne le résultat sous la forme d’un nouveau lecteur positionné à la première valeur du set-of (ou avec <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />), en utilisant la valeur <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> du constructeur (<see langword="false" /> par défaut).</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Nouveau lecteur positionné à la première valeur du set-of (ou avec <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag.">Lit la valeur suivante comme une valeur UTCTime avec une balise spécifiée.</summary>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.">La plus grande année à représenter avec cette valeur.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The decoded value.">Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax&quot; /&gt; value from options passed to the constructor (with a default of 2049).">Lit la valeur suivante comme une valeur UTCTime avec une balise spécifiée en utilisant la valeur <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> des options passées au constructeur (avec 2049 comme valeur par défaut).</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="The decoded value.">Valeur décodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary vsli:raw="Throws a standardized &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; if the reader has remaining data, performs no function if &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Lève une <see cref="T:System.Formats.Asn1.AsnContentException" /> standardisée si le lecteur contient encore des données, n’exécute aucune fonction si <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> retourne <see langword="false" />.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, copying the value into a provided destination buffer.">Lit la valeur suivante comme une valeur BIT STRING avec une balise spécifiée, en copiant la valeur dans une mémoire tampon de destination fournie.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Mémoire tampon dans laquelle écrire.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">En cas de réussite, reçoit le nombre de bits dans le dernier octet qui ont été signalés comme étant « inutilisés » par le writer.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">En cas de réussite, reçoit le nombre d’octets écrits sur <paramref name="destination" />.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> et avance le lecteur si la longueur de <paramref name="destination" /> est suffisante pour recevoir la valeur ; sinon, <see langword="false" /> et le lecteur n’avance pas.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, copying the decoded value into a provided destination buffer.">Lit la valeur suivante comme une chaîne de caractères avec la balise et le type d’encodage spécifiés, en copiant la valeur décodée dans une mémoire tampon de destination fournie.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Mémoire tampon dans laquelle écrire.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">L’une des valeurs d’énumération représentant le type de valeur à traiter.</param>
      <param name="charsWritten" vsli:raw="On success, receives the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.">En cas de réussite, reçoit le nombre de caractères écrits sur <paramref name="destination" />.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise universelle adaptée au type d’encodage demandé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" /> n’est pas un type de chaîne de caractères connu.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.
-ou- la chaîne n’a pas pu être décodée.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas identique à <paramref name="encodingType" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> et avance le lecteur si la longueur de <paramref name="destination" /> est suffisante pour recevoir la valeur ; sinon, <see langword="false" /> et le lecteur n’avance pas.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary vsli:raw="Reads the next value as character string with the specified tag, copying the unprocessed bytes into a provided destination buffer.">Lit la valeur suivante comme une chaîne de caractères avec la balise spécifiée, en copiant les octets non traités dans une mémoire tampon de destination fournie.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Mémoire tampon dans laquelle écrire.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Balise à vérifier avant la lecture.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">En cas de réussite, reçoit le nombre d’octets écrits sur <paramref name="destination" />.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas un type de balise de chaîne de caractères.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> et avance le lecteur si la longueur de <paramref name="destination" /> est suffisante pour recevoir la valeur ; sinon, <see langword="false" /> et le lecteur n’avance pas.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 32-bit value.">Tente de lire la valeur suivante comme un entier avec une balise spécifiée, sous forme de valeur 32 bits signée.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">En cas de réussite, reçoit la valeur décodée.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">
        <see langword="false" /> et n’avance pas le lecteur si la valeur n’est pas comprise entre <see cref="F:System.Int32.MinValue" /> et <see cref="F:System.Int32.MaxValue" /> (inclus) ; sinon, <see langword="true" /> est retourné et le lecteur avance.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 64-bit value.">Tente de lire la valeur suivante comme un entier avec une balise spécifiée, sous forme de valeur 64 bits signée.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">En cas de réussite, reçoit la valeur décodée.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">
        <see langword="false" /> et n’avance pas le lecteur si la valeur n’est pas comprise entre <see cref="F:System.Int64.MinValue" /> et <see cref="F:System.Int64.MaxValue" /> (inclus) ; sinon, <see langword="true" /> est retourné et le lecteur avance.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with a specified tag, copying the value into a provided destination buffer.">Lit la valeur suivante comme une chaîne d’octets avec une balise spécifiée, en copiant la valeur dans une mémoire tampon de destination fournie.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Mémoire tampon dans laquelle écrire.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">En cas de réussite, reçoit le nombre d’octets écrits sur <paramref name="destination" />.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> et avance le lecteur si la longueur de <paramref name="destination" /> est suffisante pour recevoir la valeur ; sinon, <see langword="false" /> et le lecteur n’avance pas.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Lit la valeur suivante comme une valeur BIT STRING avec une balise spécifiée, en retournant le contenu sous la forme d’un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine.</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">En cas de réussite, reçoit le nombre de bits dans le dernier octet qui ont été signalés comme étant « inutilisés » par le writer.</param>
      <param name="value" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the BIT STRING.">En cas de réussite, reçoit un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine correspondant à la valeur BIT STRING.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the BIT STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">
        <see langword="true" /> et avance le lecteur si la valeur BIT STRING avait un encodage primitif, <see langword="false" /> et n’avance pas le lecteur si elle avait un encodage construit.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary vsli:raw="Reads the next value as a character with a specified tag, returning the contents as an unprocessed &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Lit la valeur suivante comme un caractère avec une balise spécifiée, en retournant le contenu comme <see cref="T:System.ReadOnlyMemory`1" /> non traité sur les données d’origine.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Balise à vérifier avant la lecture.</param>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the character string.">En cas de réussite, reçoit un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine correspondant à la valeur de la chaîne de caractères.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas un type de balise de chaîne de caractères.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the character string value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">
        <see langword="true" /> et avance le lecteur si la valeur de chaîne de caractères avait un encodage primitif, <see langword="false" /> et n’avance pas le lecteur si elle avait un encodage construit.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an OCTET STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Tente de lire la valeur suivante comme une valeur OCTET STRING avec une balise spécifiée, en retournant le contenu sous la forme d’un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine.</summary>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the OCTET STRING.">En cas de réussite, reçoit un <see cref="T:System.ReadOnlyMemory`1" /> sur les données d’origine correspondant à la valeur OCTET STRING.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Balise à vérifier avant la lecture.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the OCTET STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">
        <see langword="true" /> et avance le lecteur si la valeur OCTET STRING avait un encodage primitif, <see langword="false" /> et n’avance pas le lecteur si elle avait un encodage construit.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 32-bit value.">Tente de lire la valeur suivante comme un entier avec une balise spécifiée, sous forme de valeur 32 bits non signée.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">En cas de réussite, reçoit la valeur décodée.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">
        <see langword="false" /> et n’avance pas le lecteur si la valeur n’est pas comprise entre <see cref="F:System.UInt32.MinValue" /> et <see cref="F:System.UInt32.MaxValue" /> (inclus) ; sinon, <see langword="true" /> est retourné et le lecteur avance.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 64-bit value.">Tente de lire la valeur suivante comme un entier avec une balise spécifiée, sous forme de valeur 64 bits non signée.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">En cas de réussite, reçoit la valeur décodée.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à vérifier avant la lecture, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">la valeur suivante n’a pas la bonne balise.
-ou- l’encodage de longueur n’est pas conforme aux règles d’encodage actuelles.
-ou- le contenu n’est pas conforme aux règles d’encodage actuelles.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">
        <see langword="false" /> et n’avance pas le lecteur si la valeur n’est pas comprise entre <see cref="F:System.UInt64.MinValue" /> et <see cref="F:System.UInt64.MaxValue" /> (inclus) ; sinon, <see langword="true" /> est retourné et le lecteur avance.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary vsli:raw="Gets an indication of whether the reader has remaining data available to process.">Obtient une indication précisant si le lecteur a encore des données à traiter.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is more data available for the reader to process; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si davantage de données sont disponibles pour le traitement du lecteur ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this reader.">Obtient les règles d’encodage utilisées par ce lecteur.</summary>
      <returns vsli:raw="The encoding rules in use by this reader.">Règles d’encodage utilisées par ce lecteur.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary vsli:raw="Specifies options that modify the behavior of an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt;.">Spécifie les options qui modifient le comportement d’un <see cref="T:System.Formats.Asn1.AsnReader" />.</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary vsli:raw="Gets or sets a value that indicates whether the reader should bypass sort ordering on a Set or Set-Of value.">Obtient ou définit une valeur qui indique si le lecteur doit ignorer l’ordre de tri sur une valeur Set ou Set-Of.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should not validate that a Set or Set-Of value is sorted correctly for the current encoding rules; otherwise &lt;see langword=&quot;false&quot; /&gt;.&#xA;              The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si le lecteur ne doit pas valider qu’un ensemble ou un ensemble de valeurs est correctement trié pour les règles d’encodage actuelles ; Sinon, <see langword="false" /> .
La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary vsli:raw="Gets or sets the largest year to represent with a UtcTime value.">Obtient ou définit la plus grande année à représenter avec une valeur UtcTime.</summary>
      <returns vsli:raw="The largest year to represent with a UtcTime value. The default is 2049.">La plus grande année à représenter avec une valeur UtcTime. La valeur par défaut est 2049.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary vsli:raw="A writer for BER-, CER-, and DER-encoded ASN.1 data.">Writer pour les données ASN.1 encodées en BER, CER et DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary vsli:raw="Create a new &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt; with a given set of encoding rules.">Crée un nouveau <see cref="T:System.Formats.Asn1.AsnWriter" /> avec un ensemble donné de règles d’encodage.</summary>
      <param name="ruleSet" vsli:raw="The encoding constraints for the writer.">Contraintes d’encodage pour le writer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> n’est pas défini.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Copy the value of this writer into another.">Copie la valeur de ce writer dans un autre writer.</summary>
      <param name="destination" vsli:raw="The writer to receive the value.">Writer pour recevoir la valeur.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.&#xA;             -or- &#xA;               This writer is empty.&#xA;             -or- &#xA;               This writer represents more than one top-level value.&#xA;             -or- &#xA;               This writer's value is encoded in a manner that is not compatible with the ruleset for the destination writer.">Un <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> n’a pas été fermé via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.
-ou- ce writer est vide.
-ou- ce writer représente plus d’une valeur de niveau supérieur.
-ou- la valeur de ce writer est encodée avec une méthode qui n’est pas compatible avec l’ensemble de règles défini pour le writer de destination.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary vsli:raw="Return a new array containing the encoded value.">Retourne un nouveau tableau contenant la valeur encodée.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Un <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> n’a pas été fermé via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="A precisely-sized array containing the encoded value.">Tableau de taille précise contenant la valeur encodée.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">Écrit la représentation encodée des données sur <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Mémoire tampon dans laquelle écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Un <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> n’a pas été fermé via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Nombre d’octets écrits dans <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">Détermine si <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> produit une sortie identique à <paramref name="other" />.</summary>
      <param name="other" vsli:raw="The instance to compare encoded values against.">Instance permettant de comparer des valeurs encodées.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Un <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> n’a pas été fermé via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si les données encodées en attente sont identiques à <paramref name="other" />, sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">Détermine si <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> produit une sortie identique à <paramref name="other" />.</summary>
      <param name="other" vsli:raw="The encoded value to compare against.">Valeur encodée de comparaison.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Un <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> n’a pas été fermé via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si les données encodées en attente sont identiques à <paramref name="other" />, sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary vsli:raw="Gets the number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">Obtient le nombre d’octets qui seraient écrits par <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; was called without the corresponding Pop method.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> a été appelé sans la méthode Pop correspondante.</exception>
      <returns vsli:raw="The number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">Nombre d’octets qui seraient écrits par <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Octet String with the tag UNIVERSAL 4 is closed, returning the writer to the parent context.">Indique que la chaîne d’octets ouverte avec la balise UNIVERSAL 4 est fermée, en renvoyant le writer au contexte parent.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within an Octet String with the specified tag.">le writer n’est pas positionné dans une chaîne d’octets présentant la balise spécifiée.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Sequence with the specified tag is closed, returning the writer to the parent context.">Indique que la séquence ouverte avec la balise spécifiée est fermée, en renvoyant le writer au contexte parent.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 16).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Sequence with the specified tag.">le writer n’est pas positionné dans une séquence présentant la balise spécifiée.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Set-Of with the specified tag is closed, returning the writer to the parent context.">Indique que le Set-Of ouvert présentant la balise spécifiée est fermé, en renvoyant le writer au contexte parent.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 17).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Set-Of with the specified tag.">le writer n’est pas positionné dans un Set-Of présentant la balise spécifiée.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing an Octet String value with a specified tag.">Commence à écrire une valeur de chaîne d’octets avec une balise spécifiée.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Valeur jetable qui appellera automatiquement <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Sequence with a specified tag.">Commence à écrire une séquence avec une balise spécifiée.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 16).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Valeur jetable qui appellera automatiquement <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Set-Of with a specified tag.">Commence à écrire un Set-Of avec une balise spécifiée.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 17).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Valeur jetable qui appellera automatiquement <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary vsli:raw="Reset the writer to have no data, without releasing resources.">Réinitialise l’enregistreur pour n’avoir aucune donnée, sans libérer les ressources.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">Tente d’écrire la représentation encodée des données sur <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Mémoire tampon dans laquelle écrire.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">En cas de réussite, reçoit le nombre d’octets écrits sur <paramref name="destination" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Un <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> n’a pas été fermé via <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the encode succeeded, &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is too small.">
        <see langword="true" /> si l’encodage a réussi, <see langword="false" /> si <paramref name="destination" /> est trop petit.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Bit String value with a specified tag.">Écrit une valeur de chaîne de bits avec une balise spécifiée.</summary>
      <param name="value" vsli:raw="The value to write.">Valeur à écrire.</param>
      <param name="unusedBitCount" vsli:raw="The number of trailing bits which are not semantic.">Nombre de bits de fin qui ne sont pas sémantiques.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has length 0 and &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not 0 &#xA;               -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not empty and any of the bits identified by &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is set.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="value" /> a une longueur de 0 et <paramref name="unusedBitCount" /> n’est pas égal à 0 -ou- <paramref name="value" /> n’est pas vide et l’un des bits identifiés par <paramref name="unusedBitCount" /> est défini.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not in the range [0,7].">
        <paramref name="unusedBitCount" /> n’est pas compris dans la plage [0,7].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Boolean value with a specified tag.">Écrit une valeur booléenne avec une balise spécifiée.</summary>
      <param name="value" vsli:raw="The value to write.">Valeur à écrire.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 1).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">Écrit la chaîne fournie en utilisant le type d’encodage spécifié avec la balise spécifiée correspondant au type d’encodage.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">L’une des valeurs d’énumération représentant l’encodage à utiliser.</param>
      <param name="str" vsli:raw="The string to write.">Chaîne à écrire.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Balise à écrire, ou <see langword="null" /> pour la balise universelle adaptée au type d’encodage demandé.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" /> n’est pas un type d’encodage de chaîne de caractères restreint.
-ou- <paramref name="encodingType" /> est un type d’encodage de chaîne de caractères restreint qui n’est pas actuellement pris en charge par cette méthode.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">Écrit la chaîne fournie en utilisant le type d’encodage spécifié avec la balise spécifiée correspondant au type d’encodage.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">L’une des valeurs d’énumération représentant l’encodage à utiliser.</param>
      <param name="value" vsli:raw="The string to write.">Chaîne à écrire.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Balise à écrire, ou <see langword="null" /> pour la balise universelle adaptée au type d’encodage demandé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" /> n’est pas un type d’encodage de chaîne de caractères restreint.
-ou- <paramref name="encodingType" /> est un type d’encodage de chaîne de caractères restreint qui n’est pas actuellement pris en charge par cette méthode.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Write a single value which has already been encoded.">Écrit une valeur unique qui a déjà été encodée.</summary>
      <param name="value" vsli:raw="The value to write.">Valeur à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; could not be read under the current encoding rules.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has data beyond the end of the first value.">Impossible de lire <paramref name="value" /> avec les règles d’encodage actuelles.
-ou- <paramref name="value" /> contient des données au-delà de la fin de la première valeur.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">Écrit une valeur enum non-[<see cref="T:System.FlagsAttribute" />] comme une énumération avec la balise UNIVERSAL 10.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">Valeur d’énumération boxed à écrire.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="value" /> n’est pas une valeur enum boxed.
-ou- le type unboxed de <paramref name="value" /> est déclaré [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">Écrit une valeur enum non-[<see cref="T:System.FlagsAttribute" />] comme une énumération avec la balise UNIVERSAL 10.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">Valeur d’énumération boxed à écrire.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 10).</param>
      <typeparam name="TEnum" vsli:raw="The non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">
        <see cref="T:System.FlagsAttribute" />Type d’énumération non-[] à écrire.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <typeparamref name="TEnum" /> n’est pas une énumération.
-ou- <typeparamref name="TEnum" /> est déclaré [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; as a GeneralizedTime with a specified UNIVERSAL 24, optionally excluding the fractional seconds.">Écrit le <see cref="T:System.DateTimeOffset" /> fourni comme une valeur GeneralizedTime avec une balise Universal 24 spécifiée, en excluant éventuellement les fractions de seconde.</summary>
      <param name="value" vsli:raw="The value to write.">Valeur à écrire.</param>
      <param name="omitFractionalSeconds" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to treat the fractional seconds in &lt;paramref name=&quot;value&quot; /&gt; as 0 even if a non-zero value is present.">
        <see langword="true" /> pour traiter les fractions de seconde de <paramref name="value" /> comme 0, même si une valeur non nulle est présente.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 24).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Écrit une valeur entière avec une balise spécifiée.</summary>
      <param name="value" vsli:raw="The value to write.">Valeur à écrire.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Écrit une valeur entière avec une balise spécifiée.</summary>
      <param name="value" vsli:raw="The value to write.">Valeur à écrire.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Écrit une valeur entière avec une balise spécifiée.</summary>
      <param name="value" vsli:raw="The integer value to write, in signed big-endian byte order.">Valeur entière à écrire, en ordre d’octet big-endian signé.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all set.&#xA;             -or- &#xA;               the 9 most significant bits are all unset.">les 9 bits les plus significatifs sont tous définis.
-ou- les 9 bits les plus significatifs sont tous non définis.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Écrit une valeur entière avec une balise spécifiée.</summary>
      <param name="value" vsli:raw="The value to write.">Valeur à écrire.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Écrit une valeur entière avec une balise spécifiée.</summary>
      <param name="value" vsli:raw="The integer value to write, in unsigned big-endian byte order.">Valeur entière à écrire, en ordre d’octet big-endian non signé.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all unset.">les 9 bits les plus significatifs sont tous non définis.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a bit array value as a NamedBitList with a specified tag.">Écrit une valeur de tableau de bits sous forme de NamedBitList avec une balise spécifiée.</summary>
      <param name="value" vsli:raw="The bits to write.">Bits à écrire</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">Écrit une valeur enum [<see cref="T:System.FlagsAttribute" />] en tant que NamedBitList avec une balise spécifiée.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">Valeur d’énumération boxed à écrire</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="value" /> n’est pas une valeur enum boxed.
-ou- le type unboxed de <paramref name="value" /> n’est pas déclaré [<see cref="T:System.FlagsAttribute" />].</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">Écrit une valeur enum [<see cref="T:System.FlagsAttribute" />] en tant que NamedBitList avec une balise spécifiée.</summary>
      <param name="value" vsli:raw="The enumeration value to write.">Valeur d’énumération à écrire</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 3).</param>
      <typeparam name="TEnum" vsli:raw="The [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">
        <see cref="T:System.FlagsAttribute" />Type d’énumération [] à écrire.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum value.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
<typeparamref name="TEnum" /> n’est pas une valeur d’enum.
-ou- <typeparamref name="TEnum" /> n’est pas déclaré [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write NULL with a specified tag.">Écrit NULL avec une balise spécifiée.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 5).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">Écrit un identificateur d’objet avec une balise spécifiée.</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">Identificateur d’objet à écrire.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 6).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="oidValue" /> n’est pas un identificateur d’objet à notation décimale pointée valide.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">Écrit un identificateur d’objet avec une balise spécifiée.</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">Identificateur d’objet à écrire.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 6).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.
-ou- <paramref name="oidValue" /> n’est pas un identificateur d’objet à notation décimale pointée valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oidValue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oidValue" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Octet String value with a specified tag.">Écrit une valeur de chaîne d’octets avec une balise spécifiée.</summary>
      <param name="value" vsli:raw="The value to write.">Valeur à écrire.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 4).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, provided the year is in the allowed range.">Écrit la valeur fournie comme une valeur UTCTime avec une balise spécifiée, à condition que l’année se trouve dans la plage autorisée.</summary>
      <param name="value" vsli:raw="The value to write.">Valeur à écrire.</param>
      <param name="twoDigitYearMax" vsli:raw="The maximum valid year for &lt;paramref name=&quot;value&quot; /&gt;, after conversion to UTC.&#xA;              For the X.509 Time.utcTime range of 1950-2049, pass &lt;c&gt;2049&lt;/c&gt;.">Année valide maximale pour <paramref name="value" />, après conversion au format UTC.
Pour la plage X.509 Time.utcTime de 1950-2049, passer la valeur <c>2049</c>.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 23).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt;.&lt;see cref=&quot;P:System.DateTimeOffset.Year&quot; /&gt; (after conversion to UTC) is not in the range (&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; - 100, &lt;paramref name=&quot;twoDigitYearMax&quot; /&gt;].">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (après conversion au format UTC) n’est pas compris dans la plage (<paramref name="twoDigitYearMax" /> -100, <paramref name="twoDigitYearMax" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, accepting the two-digit year as valid in context.">Écrit la valeur fournie comme une valeur UTCTime avec une balise spécifiée, acceptant l’année à deux chiffres comme valide en contexte.</summary>
      <param name="value" vsli:raw="The value to write.">Valeur à écrire.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">Balise à écrire, ou <see langword="null" /> pour la balise par défaut (Universal 23).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> est <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mais <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> n’est pas correct pour la méthode.</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this writer.">Obtient les règles d’encodage utilisées par ce writer.</summary>
      <returns vsli:raw="The encoding rules in use by this writer.">Règles d’encodage utilisées par ce writer.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; target for safely closing an opened tag by using a lexical scope as a logical scope.">Fournit une cible <see cref="T:System.IDisposable" /> pour fermer en toute sécurité une balise ouverte en utilisant une étendue lexicale comme étendue logique.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary vsli:raw="Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.">Exécute les tâches définies par l'application associées à la libération ou à la redéfinition des ressources non managées.</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary vsli:raw="The tag class for a particular ASN.1 tag.">Classe de balise pour une balise ASN.1 particulière.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary vsli:raw="The Application tag class.">Classe de balise d’application</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary vsli:raw="The Context-Specific tag class.">Classe de balise spécifique au contexte</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary vsli:raw="The Private tag class.">Classe de balise privée</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary vsli:raw="The Universal tag class.">Classe de balise universelle</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary vsli:raw="Tag assignments for the UNIVERSAL class in ITU-T X.680.">Affectations de balises pour la classe UNIVERSAL dans ITU-T X.680.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary vsli:raw="The universal class tag value for Bit String.">Valeur de balise de classe universelle pour Bit String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary vsli:raw="The universal class tag value for BMPString.">Valeur de balise de classe universelle pour BMPString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary vsli:raw="The universal class tag value for Boolean.">Valeur de balise de classe universelle pour Boolean.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary vsli:raw="The universal class tag value for Date.">Valeur de balise de classe universelle pour Date.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary vsli:raw="The universal class tag value for Date-Time.">Valeur de balise de classe universelle pour Date-Time.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary vsli:raw="The universal class tag value for Duration.">Valeur de balise de classe universelle pour Duration.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary vsli:raw="The universal class tag value for Embedded-PDV.">Valeur de balise de classe universelle pour Embedded-PDV.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary vsli:raw="The reserved identifier for the End-of-Contents marker in an indefinite length encoding.">Identificateur réservé pour le marqueur de fin de contenu dans un encodage de longueur indéfinie.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary vsli:raw="The universal class tag value for Enumerated.">Valeur de balise de classe universelle pour Enumerated.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary vsli:raw="The universal class tag value for External.">Valeur de balise de classe universelle pour External.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary vsli:raw="The universal class tag value for GeneralizedTime.">Valeur de balise de classe universelle pour GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary vsli:raw="The universal class tag value for GeneralString.">Valeur de balise de classe universelle pour GeneralString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary vsli:raw="The universal class tag value for GraphicString.">Valeur de balise de classe universelle pour GraphicString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary vsli:raw="The universal class tag value for IA5String.">Valeur de balise de classe universelle pour IA5String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary vsli:raw="The universal class tag value for Instance-Of.">Valeur de balise de classe universelle pour Instance-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary vsli:raw="The universal class tag value for Integer.">Valeur de balise de classe universelle pour Integer.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary vsli:raw="The universal class tag value for ISO646String (VisibleString).">Valeur de balise de classe universelle pour ISO646String (VisibleString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary vsli:raw="The universal class tag value for Null.">Valeur de balise de classe universelle pour Null.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary vsli:raw="The universal class tag value for NumericString.">Valeur de balise de classe universelle pour NumericString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary vsli:raw="The universal class tag value for Object Descriptor.">Valeur de balise de classe universelle pour Object Descriptor.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Object Identifier.">Valeur de balise de classe universelle pour Object Identifier.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Object Identifier Internationalized Resource Identifier (IRI).">Valeur de balise de classe universelle pour Object Identifier Internationalized Resource Identifier (IRI).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary vsli:raw="The universal class tag value for Octet String.">Valeur de balise de classe universelle pour Octet String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary vsli:raw="The universal class tag value for PrintableString.">Valeur de balise de classe universelle pour PrintableString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary vsli:raw="The universal class tag value for Real.">Valeur de balise de classe universelle pour Real.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier.">Valeur de balise de classe universelle pour Relative Object Identifier.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier Internationalized Resource Identifier (IRI).">Valeur de balise de classe universelle pour Relative Object Identifier Internationalized Resource Identifier (IRI).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary vsli:raw="The universal class tag value for Sequence.">Valeur de l’étiquette de classe universelle pour Sequence.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary vsli:raw="The universal class tag value for Sequence-Of.">Valeur de balise de classe universelle pour Sequence-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary vsli:raw="The universal class tag value for Set.">Valeur de balise de classe universelle pour Set.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary vsli:raw="The universal class tag value for Set-Of.">Valeur de balise de classe universelle pour Set-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary vsli:raw="The universal class tag value for T61String (TeletexString).">Valeur de balise de classe universelle pour T61String (TeletexString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary vsli:raw="The universal class tag value for TeletexString (T61String).">Valeur de balise de classe universelle pour TeletexString (T61String).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary vsli:raw="The universal class tag value for Time.">Valeur de balise de classe universelle pour Time.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary vsli:raw="The universal class tag value for Time-Of-Day.">Valeur de balise de classe universelle pour Time-Of-Day.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary vsli:raw="The universal class tag value for UniversalString.">Valeur de balise de classe universelle pour UniversalString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary vsli:raw="The universal class tag value for an unrestricted character string.">Valeur de balise de classe universelle pour une chaîne de caractères non restreinte.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary vsli:raw="The universal class tag value for UTCTime.">Valeur de balise de classe universelle pour UTCTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary vsli:raw="The universal class tag value for UTF8String.">Valeur de balise de classe universelle pour UTF8String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary vsli:raw="The universal class tag value for VideotexString.">Valeur de balise de classe universelle pour VideotexString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary vsli:raw="The universal class tag value for VisibleString (ISO646String).">Valeur de balise de classe universelle pour VisibleString (ISO646String).</summary>
    </member>
  </members>
</doc>