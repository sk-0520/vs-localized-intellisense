<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.BrowsableAttribute">
      <summary vsli:raw="Specifies whether a property or event should be displayed in a Properties window.">Spécifie si une propriété ou un événement doivent être affichés dans une fenêtre Propriétés.</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt;, which is &lt;see cref=&quot;F:System.ComponentModel.BrowsableAttribute.Yes&quot; /&gt;. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie la valeur par défaut de <see cref="T:System.ComponentModel.BrowsableAttribute" /> (<see cref="F:System.ComponentModel.BrowsableAttribute.Yes" />). Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.No">
      <summary vsli:raw="Specifies that a property or event cannot be modified at design time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'une propriété ou un événement ne peut pas être modifié au moment du design. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Yes">
      <summary vsli:raw="Specifies that a property or event can be modified at design time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'une propriété ou un événement peut être modifié au moment du design. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.BrowsableAttribute" />.</summary>
      <param name="browsable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property or event can be modified at design time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si une propriété ou un événement peut être modifié au moment du design ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</param>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">Indique si cette instance et un objet spécifié sont égaux.</summary>
      <param name="obj" vsli:raw="Another object to compare to.">Autre objet de comparaison.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> est égal à cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BrowsableAttribute.Browsable">
      <summary vsli:raw="Gets a value indicating whether an object is browsable.">Obtient une valeur indiquant si un objet est consultable.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is browsable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est consultable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.CategoryAttribute">
      <summary vsli:raw="Specifies the name of the category in which to group the property or event when displayed in a &lt;see cref=&quot;T:System.Windows.Forms.PropertyGrid&quot; /&gt; control set to Categorized mode.">Spécifie le nom de la catégorie dans laquelle grouper la propriété ou l'événement lorsqu'ils s'affichent dans un contrôle <see cref="T:System.Windows.Forms.PropertyGrid" /> défini en mode Par catégorie.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; class using the category name Default.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.CategoryAttribute" /> à l'aide du nom de catégorie Par défaut.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; class using the specified category name.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.CategoryAttribute" /> à l'aide du nom de catégorie spécifié.</summary>
      <param name="category" vsli:raw="The name of the category.">Nom de la catégorie.</param>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;.">Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.CategoryAttribute" /> en cours.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this attribute.">Retourne le code de hachage pour cet attribut.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)">
      <summary vsli:raw="Looks up the localized name of the specified category.">Recherche le nom localisé de la catégorie spécifiée.</summary>
      <param name="value" vsli:raw="The identifer for the category to look up.">Identificateur de la catégorie à consulter.</param>
      <returns vsli:raw="The localized name of the category, or &lt;see langword=&quot;null&quot; /&gt; if a localized name does not exist.">Nom localisé de la catégorie ou <see langword="null" /> s'il n'existe pas.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Action">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Action category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Action.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the action category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie d'action.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Appearance">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Appearance category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Apparence.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the appearance category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie d'apparence.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Asynchronous">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Asynchronous category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Asynchrone.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the asynchronous category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie asynchrone.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Behavior">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Behavior category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Comportement.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the behavior category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de comportement.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Category">
      <summary vsli:raw="Gets the name of the category for the property or event that this attribute is applied to.">Obtient le nom de la catégorie pour la propriété ou l'événement auquel cet attribut est appliqué.</summary>
      <returns vsli:raw="The name of the category for the property or event that this attribute is applied to.">Nom de la catégorie pour la propriété ou l'événement auquel cet attribut est appliqué.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Data">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Data category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Données.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the data category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de données.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Default">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Default category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Par défaut.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the default category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie par défaut.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Design">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Design category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Design.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the design category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de design.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.DragDrop">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the DragDrop category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Glisser-déplacer.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the drag-and-drop category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie glisser-déplacer.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Focus">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Focus category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Focus.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the focus category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de focus.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Format">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Format category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Format.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the format category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de format.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Key">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Key category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Clavier.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the key category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de clavier.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Layout">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Layout category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Disposition.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the layout category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie Disposition.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Mouse">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Mouse category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Souris.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the mouse category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de souris.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.WindowStyle">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the WindowStyle category.">Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Style de fenêtre.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the window style category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de style de fenêtre.</returns>
    </member>
    <member name="T:System.ComponentModel.Component">
      <summary vsli:raw="Provides the base implementation for the &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; interface and enables object sharing between applications.">Fournit l'implémentation de base pour l'interface <see cref="T:System.ComponentModel.IComponent" /> et permet le partage d'objets entre applications.</summary>
    </member>
    <member name="E:System.ComponentModel.Component.Disposed">
      <summary vsli:raw="Occurs when the component is disposed by a call to the &lt;see cref=&quot;M:System.ComponentModel.Component.Dispose&quot; /&gt; method.">Se produit lorsque le composant est supprimé par un appel à la méthode <see cref="M:System.ComponentModel.Component.Dispose" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Component" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Component.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is reclaimed by garbage collection.">Libère les ressources non managées et exécute d’autres opérations de nettoyage avant la récupération du <see cref="T:System.ComponentModel.Component" /> par le garbage collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.GetService(System.Type)">
      <summary vsli:raw="Returns an object that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; or by its &lt;see cref=&quot;T:System.ComponentModel.Container&quot; /&gt;.">Retourne un objet qui représente un service fourni par <see cref="T:System.ComponentModel.Component" /> ou par son <see cref="T:System.ComponentModel.Container" />.</summary>
      <param name="service" vsli:raw="A service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Service fourni par <see cref="T:System.ComponentModel.Component" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not provide the specified service.">
        <see cref="T:System.Object" /> qui représente un service fourni par <see cref="T:System.ComponentModel.Component" />, ou <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> ne fournit pas le service spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, if any. This method should not be overridden.">Retourne un <see cref="T:System.String" /> contenant le nom du <see cref="T:System.ComponentModel.Component" />, s’il en existe un. Cette méthode ne doit pas être remplacée.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, if any, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is unnamed.">
        <see cref="T:System.String" /> contenant le nom du <see cref="T:System.ComponentModel.Component" />, s’il en existe un, ou <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> est sans nom.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.CanRaiseEvents">
      <summary vsli:raw="Gets a value indicating whether the component can raise an event.">Obtient une valeur qui indique si le composant peut déclencher un événement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component can raise events; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le composant peut déclencher des événements ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Container">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; that contains the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Obtient le <see cref="T:System.ComponentModel.IContainer" /> qui contient la <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; that contains the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, if any, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is not encapsulated in an &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">
        <see cref="T:System.ComponentModel.IContainer" /> qui contient <see cref="T:System.ComponentModel.Component" />, éventuellement, ou <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> n'est pas encapsulé dans <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.DesignMode">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is currently in design mode.">Obtient une valeur qui indique si <see cref="T:System.ComponentModel.Component" /> est actuellement en mode design.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is in design mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.ComponentModel.Component" /> est en mode Design ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Events">
      <summary vsli:raw="Gets the list of event handlers that are attached to this &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Obtient la liste des gestionnaires d'événements attachés à ce <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventHandlerList&quot; /&gt; that provides the delegates for this component.">
        <see cref="T:System.ComponentModel.EventHandlerList" /> qui fournit les délégués de ce composant.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Site">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Obtient ou définit le <see cref="T:System.ComponentModel.ISite" /> de <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; associated with the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is not encapsulated in an &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;, the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not have an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; associated with it, or the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is removed from its &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" /> associé à <see cref="T:System.ComponentModel.Component" />, ou <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> n'est pas encapsulé dans <see cref="T:System.ComponentModel.IContainer" />, <see cref="T:System.ComponentModel.Component" /> n'a pas de <see cref="T:System.ComponentModel.ISite" /> associé, ou <see cref="T:System.ComponentModel.Component" /> est supprimé de son <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentCollection">
      <summary vsli:raw="Provides a read-only container for a collection of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Fournit un conteneur en lecture seule pour une collection d’objets <see cref="T:System.ComponentModel.IComponent" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.#ctor(System.ComponentModel.IComponent[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ComponentCollection&quot; /&gt; class using the specified array of components.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ComponentCollection" /> à l'aide du tableau de composants spécifié.</summary>
      <param name="components" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects to initialize the collection with.">Tableau d'objets <see cref="T:System.ComponentModel.IComponent" /> à utiliser pour initialiser la collection.</param>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.CopyTo(System.ComponentModel.IComponent[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to an array, starting writing at the specified array index.">Copie la collection entière dans un tableau, en commençant à l'index spécifié du tableau.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; array to copy the objects in the collection to.">Tableau <see cref="T:System.ComponentModel.IComponent" /> dans lequel copier les objets figurant dans la collection.</param>
      <param name="index" vsli:raw="The index of the &lt;paramref name=&quot;array&quot; /&gt; at which copying to should begin.">Index du <paramref name="array" /> au niveau duquel la copie doit commencer.</param>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; in the collection at the specified collection index.">Obtient le <see cref="T:System.ComponentModel.Component" /> dans la collection à l'index spécifié de la collection.</summary>
      <param name="index" vsli:raw="The collection index of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; to get.">Index de la collection du <see cref="T:System.ComponentModel.Component" /> à obtenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="If the specified index is not within the index range of the collection.">Si l'index spécifié ne se trouve pas dans la plage d'index de la collection.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; at the specified index.">
        <see cref="T:System.ComponentModel.IComponent" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.String)">
      <summary vsli:raw="Gets any component in the collection matching the specified name.">Obtient n'importe quel composant de la collection correspondant au nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to get.">Nom de l'objet <see cref="T:System.ComponentModel.IComponent" /> à obtenir.</param>
      <returns vsli:raw="A component with a name matching the name specified by the &lt;paramref name=&quot;name&quot; /&gt; parameter, or &lt;see langword=&quot;null&quot; /&gt; if the named component cannot be found in the collection.">Composant dont le nom correspond au nom spécifié par le paramètre <paramref name="name" /> ou <see langword="null" />, si le composant nommé est introuvable dans la collection.</returns>
    </member>
    <member name="T:System.ComponentModel.DescriptionAttribute">
      <summary vsli:raw="Specifies a description for a property or event.">Spécifie une description pour une propriété ou un événement.</summary>
    </member>
    <member name="F:System.ComponentModel.DescriptionAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;, which is an empty string (&quot;&quot;). This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie la valeur par défaut de <see cref="T:System.ComponentModel.DescriptionAttribute" /> (chaîne vide ("")). Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; class with no parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DescriptionAttribute" /> sans paramètres.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; class with a description.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DescriptionAttribute" /> avec une description.</summary>
      <param name="description" vsli:raw="The description text.">Texte de la description.</param>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;.">Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.DescriptionAttribute" /> en cours.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute">
      <summary vsli:raw="Returns a value indicating whether this is the default &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; instance.">Retourne une valeur qui indique s'il s'agit de l'instance <see cref="T:System.ComponentModel.DescriptionAttribute" /> par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this is the default &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il s'agit de l'instance <see cref="T:System.ComponentModel.DescriptionAttribute" /> par défaut ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.Description">
      <summary vsli:raw="Gets the description stored in this attribute.">Obtient la description stockée dans cet attribut.</summary>
      <returns vsli:raw="The description stored in this attribute.">Description stockée dans cet attribut.</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.DescriptionValue">
      <summary vsli:raw="Gets or sets the string stored as the description.">Obtient ou définit la chaîne stockée comme description.</summary>
      <returns vsli:raw="The string stored as the description. The default value is an empty string (&quot;&quot;).">Chaîne stockée comme description. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute">
      <summary vsli:raw="Indicates a serializer for the serialization manager to use to serialize the values of the type this attribute is applied to. This class cannot be inherited.">Indique un sérialiseur que le gestionnaire de sérialisation doit utiliser pour sérialiser les valeurs du type auquel s'applique cet attribut. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</summary>
      <param name="serializerTypeName" vsli:raw="The fully qualified name of the data type of the serializer.">Nom qualifié complet du type de données du sérialiseur.</param>
      <param name="baseSerializerTypeName" vsli:raw="The fully qualified name of the base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.">Nom qualifié complet du type de données de base du sérialiseur. Plusieurs sérialiseurs peuvent être fournis pour une classe, à condition qu'ils possèdent des types de base différents.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</summary>
      <param name="serializerTypeName" vsli:raw="The fully qualified name of the data type of the serializer.">Nom qualifié complet du type de données du sérialiseur.</param>
      <param name="baseSerializerType" vsli:raw="The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.">Type de données de base du sérialiseur. Plusieurs sérialiseurs peuvent être fournis pour une classe, à condition qu'ils possèdent des types de base différents.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</summary>
      <param name="serializerType" vsli:raw="The data type of the serializer.">Type de données du sérialiseur.</param>
      <param name="baseSerializerType" vsli:raw="The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.">Type de données de base du sérialiseur. Plusieurs sérialiseurs peuvent être fournis pour une classe, à condition qu'ils possèdent des types de base différents.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName">
      <summary vsli:raw="Gets the fully qualified type name of the serializer base type.">Obtient le nom qualifié complet du type de base du sérialiseur.</summary>
      <returns vsli:raw="The fully qualified type name of the serializer base type.">Nom qualifié complet du type de base du sérialiseur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName">
      <summary vsli:raw="Gets the fully qualified type name of the serializer.">Obtient le nom de type qualifié complet du sérialiseur.</summary>
      <returns vsli:raw="The fully qualified type name of the serializer.">Nom de type qualifié complet du sérialiseur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId">
      <summary vsli:raw="Indicates a unique ID for this attribute type.">Indique un ID unique pour ce type d'attribut.</summary>
      <returns vsli:raw="A unique ID for this attribute type.">ID unique pour ce type d'attribut.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerAttribute">
      <summary vsli:raw="Specifies the class used to implement design-time services for a component.">Spécifie la classe utilisée pour implémenter des services au moment de la conception pour un composant.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerAttribute&quot; /&gt; class using the name of the type that provides design-time services.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerAttribute" /> à l'aide du nom du type qui fournit des services de design.</summary>
      <param name="designerTypeName" vsli:raw="The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.">Concaténation du nom qualifié complet du type qui fournit les services de design pour le composant auquel cet attribut est lié et nom de l'assembly dans lequel réside ce type.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerAttribute&quot; /&gt; class using the designer type and the base class for the designer.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerAttribute" /> à l'aide du type de concepteur et de la classe de base du concepteur.</summary>
      <param name="designerTypeName" vsli:raw="The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.">Concaténation du nom qualifié complet du type qui fournit les services de design pour le composant auquel cet attribut est lié et nom de l'assembly dans lequel réside ce type.</param>
      <param name="designerBaseTypeName" vsli:raw="The fully qualified name of the base class to associate with the designer class.">Nom qualifié complet de la classe de base à associer à la classe de concepteur.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerAttribute&quot; /&gt; class, using the name of the designer class and the base class for the designer.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerAttribute" /> à l'aide du nom de la classe de concepteur et de la classe de base associée au concepteur.</summary>
      <param name="designerTypeName" vsli:raw="The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.">Concaténation du nom qualifié complet du type qui fournit les services de design pour le composant auquel cet attribut est lié et nom de l'assembly dans lequel réside ce type.</param>
      <param name="designerBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the base class to associate with the &lt;paramref name=&quot;designerTypeName&quot; /&gt;.">
        <see cref="T:System.Type" /> représentant la classe de base à associer à <paramref name="designerTypeName" />.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerAttribute&quot; /&gt; class using the type that provides design-time services.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerAttribute" /> à l'aide du type qui fournit des services de design.</summary>
      <param name="designerType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the class that provides design-time services for the component this attribute is bound to.">
        <see cref="T:System.Type" /> qui représente la classe qui fournit les services de design pour le composant auquel cet attribut est lié.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerAttribute&quot; /&gt; class using the types of the designer and designer base class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerAttribute" /> à l'aide du type du concepteur et de la classe de base du concepteur.</summary>
      <param name="designerType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the class that provides design-time services for the component this attribute is bound to.">
        <see cref="T:System.Type" /> qui représente la classe qui fournit les services de design pour le composant auquel cet attribut est lié.</param>
      <param name="designerBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the base class to associate with the &lt;paramref name=&quot;designerType&quot; /&gt;.">
        <see cref="T:System.Type" /> représentant la classe de base à associer à <paramref name="designerType" />.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DesignerAttribute&quot; /&gt;.">Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.DesignerAttribute" /> en cours.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName">
      <summary vsli:raw="Gets the name of the base type of this designer.">Obtient le nom du type de base de ce concepteur.</summary>
      <returns vsli:raw="The name of the base type of this designer.">Nom du type de base de ce concepteur.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.DesignerTypeName">
      <summary vsli:raw="Gets the name of the designer type associated with this designer attribute.">Obtient le nom du type de concepteur associé à cet attribut de concepteur.</summary>
      <returns vsli:raw="The name of the designer type associated with this designer attribute.">Nom du type de concepteur associé à cet attribut de concepteur.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.TypeId">
      <summary vsli:raw="Gets a unique ID for this attribute type.">Obtient un ID unique pour ce type d'attribut.</summary>
      <returns vsli:raw="A unique ID for this attribute type.">ID unique pour ce type d'attribut.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerCategoryAttribute">
      <summary vsli:raw="Specifies that the designer for a class belongs to a certain category.">Spécifie que le concepteur pour une classe appartient à une certaine catégorie.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Component">
      <summary vsli:raw="Specifies that a component marked with this category use a component designer. This field is read-only.">Spécifie qu'un composant de cette catégorie utilise un Concepteur de composants. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Default">
      <summary vsli:raw="Specifies that a component marked with this category cannot use a visual designer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'un composant de cette catégorie ne peut pas utiliser de Concepteur de composants. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Form">
      <summary vsli:raw="Specifies that a component marked with this category use a form designer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'un composant de cette catégorie utilise un Concepteur de formulaires. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Generic">
      <summary vsli:raw="Specifies that a component marked with this category use a generic designer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'un composant de cette catégorie utilise un concepteur générique. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerCategoryAttribute&quot; /&gt; class with an empty string (&quot;&quot;).">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> avec une chaîne vide ("").</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerCategoryAttribute&quot; /&gt; class with the given category name.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> avec le nom de catégorie donné.</summary>
      <param name="category" vsli:raw="The name of the category.">Nom de la catégorie.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> en cours.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.Category">
      <summary vsli:raw="Gets the name of the category.">Obtient le nom de la catégorie.</summary>
      <returns vsli:raw="The name of the category.">Nom de la catégorie.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this attribute.">Obtient un identificateur unique pour cet attribut.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a unique identifier for the attribute.">
        <see cref="T:System.Object" /> qui est un identificateur unique pour l'attribut.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibility">
      <summary vsli:raw="Specifies the visibility a property has to the design-time serializer.">Spécifie la visibilité d'une propriété par rapport au sérialiseur en mode Design.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Content">
      <summary vsli:raw="The code generator produces code for the contents of the object, rather than for the object itself.">Le générateur de code produit du code pour le contenu de l'objet plutôt que pour l'objet lui-même.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Hidden">
      <summary vsli:raw="The code generator does not produce code for the object.">Le générateur de code ne produit pas de code pour l'objet.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Visible">
      <summary vsli:raw="The code generator produces code for the object.">Le générateur de code produit du code pour l'objet.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
      <summary vsli:raw="Specifies the type of persistence to use when serializing a property on a component at design time.">Spécifie le type de persistance à utiliser lors de la sérialisation de la propriété d'un composant au moment du design.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
      <summary vsli:raw="Specifies that a serializer should serialize the contents of the property, rather than the property itself. This field is read-only.">Spécifie qu'un sérialiseur doit sérialiser le contenu de la propriété, plutôt que la propriété elle-même. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
      <summary vsli:raw="Specifies the default value, which is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible&quot; /&gt;, that is, a visual designer uses default rules to generate the value of a property. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie la valeur par défaut qui est <see cref="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" />, autrement dit, un concepteur visuel utilise des règles par défaut pour générer la valeur d'une propriété. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
      <summary vsli:raw="Specifies that a serializer should not serialize the value of the property. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'un sérialiseur ne doit pas sérialiser la valeur de la propriété. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
      <summary vsli:raw="Specifies that a serializer should be allowed to serialize the value of the property. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'un sérialiseur ne doit pas être autorisé à sérialiser la valeur de la propriété. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibilityAttribute&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; value.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> avec la valeur <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> spécifiée.</summary>
      <param name="visibility" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">Indique si cette instance et un objet spécifié sont égaux.</summary>
      <param name="obj" vsli:raw="Another object to compare to.">Autre objet de comparaison.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> est égal à cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Retourne le code de hachage pour cet objet.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">Obtient une valeur indiquant si la valeur actuelle de l'attribut est sa valeur par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is set to the default value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'attribut a la valeur par défaut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
      <summary vsli:raw="Gets a value indicating the basic serialization mode a serializer should use when determining whether and how to persist the value of a property.">Obtient une valeur indiquant le mode de sérialisation de base qu'un sérialiseur doit utiliser lorsqu'il détermine si la valeur d'une propriété doit être rendue persistante et comment.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibility.Visible&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. La valeur par défaut est <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignOnlyAttribute">
      <summary vsli:raw="Specifies whether a property can only be set at design time.">Spécifie si une propriété ne peut être définie qu'au moment du design.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;, which is &lt;see cref=&quot;F:System.ComponentModel.DesignOnlyAttribute.No&quot; /&gt;. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie la valeur par défaut de <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> (<see cref="F:System.ComponentModel.DesignOnlyAttribute.No" />). Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.No">
      <summary vsli:raw="Specifies that a property can be set at design time or at run time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'une propriété peut être définie au moment du design ou de l'exécution. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Yes">
      <summary vsli:raw="Specifies that a property can be set only at design time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'une propriété ne peut être définie qu'au moment du design. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <param name="isDesignOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property can be set only at design time; &lt;see langword=&quot;false&quot; /&gt; if the property can be set at design time and at run time.">
        <see langword="true" /> si une propriété peut être définie seulement au moment du design, <see langword="false" /> si la propriété peut être définie au moment du design et de l'exécution.</param>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> en cours.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignOnlyAttribute.IsDesignOnly">
      <summary vsli:raw="Gets a value indicating whether a property can be set only at design time.">Obtient une valeur indiquant si une propriété ne peut être définie qu'au moment du design.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property can be set only at design time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une propriété peut être définie uniquement au moment du design ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DisplayNameAttribute">
      <summary vsli:raw="Specifies the display name for a property, event, or public void method which takes no arguments.">Spécifie le nom complet pour une propriété, un événement ou une méthode void publique qui ne prend pas d'arguments.</summary>
    </member>
    <member name="F:System.ComponentModel.DisplayNameAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt;. This field is read-only.">Spécifie la valeur par défaut de <see cref="T:System.ComponentModel.DisplayNameAttribute" />. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DisplayNameAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; class using the display name.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DisplayNameAttribute" /> à l'aide du nom complet.</summary>
      <param name="displayName" vsli:raw="The display name.">Le nom d’affichage.</param>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; instances are equal.">Détermine si deux instances <see cref="T:System.ComponentModel.DisplayNameAttribute" /> sont égales.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; to test the value equality of.">
        <see cref="T:System.ComponentModel.DisplayNameAttribute" /> dont l'égalité de la valeur doit être vérifiée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de l'objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt;.">Code de hachage du <see cref="T:System.ComponentModel.DisplayNameAttribute" /> actuel.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayName">
      <summary vsli:raw="Gets the display name for a property, event, or public void method that takes no arguments stored in this attribute.">Obtient le nom complet pour une propriété, un événement ou une méthode void publique qui ne prend pas d'arguments stockés dans cet attribut.</summary>
      <returns vsli:raw="The display name.">Le nom d’affichage.</returns>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue">
      <summary vsli:raw="Gets or sets the display name.">Obtient ou définit le nom de l'affichage.</summary>
      <returns vsli:raw="The display name.">Le nom d’affichage.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorAttribute">
      <summary vsli:raw="Specifies the editor to use to change a property. This class cannot be inherited.">Spécifie l’éditeur à utiliser pour modifier une propriété. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.EditorAttribute&quot; /&gt; class with the default editor, which is no editor.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.EditorAttribute" /> avec l'éditeur par défaut, c'est-à-dire aucun éditeur.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.EditorAttribute&quot; /&gt; class with the type name and base type name of the editor.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.EditorAttribute" /> avec le nom du type et du type de base de l'éditeur.</summary>
      <param name="typeName" vsli:raw="The fully qualified type name of the editor.">Nom de type qualifié complet de l'éditeur.</param>
      <param name="baseTypeName" vsli:raw="The fully qualified type name of the base class or interface to use as a lookup key for the editor. This class must be or derive from &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt;.">Obtient le nom qualifié complet du type de la classe ou de l'interface de base à utiliser comme clé de recherche pour l'éditeur. Cette classe doit être <see cref="T:System.Drawing.Design.UITypeEditor" />, ou en dériver.</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.EditorAttribute&quot; /&gt; class with the type name and the base type.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.EditorAttribute" /> avec le nom du type et le type de base.</summary>
      <param name="typeName" vsli:raw="The fully qualified type name of the editor.">Nom de type qualifié complet de l'éditeur.</param>
      <param name="baseType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the base class or interface to use as a lookup key for the editor. This class must be or derive from &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt;.">
        <see cref="T:System.Type" /> de la classe ou de l'interface de base à utiliser comme clé de recherche pour l'éditeur. Cette classe doit être <see cref="T:System.Drawing.Design.UITypeEditor" />, ou en dériver.</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.EditorAttribute&quot; /&gt; class with the type and the base type.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.EditorAttribute" /> avec le type et le type de base.</summary>
      <param name="type" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type of the editor.">
        <see cref="T:System.Type" /> qui représente le type de l'éditeur.</param>
      <param name="baseType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the base class or interface to use as a lookup key for the editor. This class must be or derive from &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt;.">
        <see cref="T:System.Type" /> de la classe ou de l'interface de base à utiliser comme clé de recherche pour l'éditeur. Cette classe doit être <see cref="T:System.Drawing.Design.UITypeEditor" />, ou en dériver.</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.EditorAttribute&quot; /&gt;.">Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.EditorAttribute" /> en cours.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de l'objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
      <summary vsli:raw="Gets the name of the base class or interface serving as a lookup key for this editor.">Obtient le nom de la classe ou de l'interface de base qui sert de clé de recherche pour cet éditeur.</summary>
      <returns vsli:raw="The name of the base class or interface serving as a lookup key for this editor.">Nom de la classe ou de l'interface de base qui sert de clé de recherche pour cet éditeur.</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.EditorTypeName">
      <summary vsli:raw="Gets the name of the editor class in the &lt;see cref=&quot;P:System.Type.AssemblyQualifiedName&quot; /&gt; format.">Obtient le nom de la classe de l'éditeur au format <see cref="P:System.Type.AssemblyQualifiedName" />.</summary>
      <returns vsli:raw="The name of the editor class in the &lt;see cref=&quot;P:System.Type.AssemblyQualifiedName&quot; /&gt; format.">Nom de la classe de l'éditeur au format <see cref="P:System.Type.AssemblyQualifiedName" />.</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.TypeId">
      <summary vsli:raw="Gets a unique ID for this attribute type.">Obtient un ID unique pour ce type d'attribut.</summary>
      <returns vsli:raw="A unique ID for this attribute type.">ID unique pour ce type d'attribut.</returns>
    </member>
    <member name="T:System.ComponentModel.EventHandlerList">
      <summary vsli:raw="Provides a simple list of delegates. This class cannot be inherited.">Fournit une simple liste de délégués. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.EventHandlerList&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.EventHandlerList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Adds a delegate to the list.">Ajoute un délégué à la liste.</summary>
      <param name="key" vsli:raw="The object that owns the event.">Objet propriétaire de l'événement.</param>
      <param name="value" vsli:raw="The delegate to add to the list.">Délégué à ajouter à la liste.</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
      <summary vsli:raw="Adds a list of delegates to the current list.">Ajoute une liste de délégués à la liste actuelle.</summary>
      <param name="listToAddFrom" vsli:raw="The list to add.">Liste à ajouter.</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.Dispose">
      <summary vsli:raw="Disposes the delegate list.">Supprime la liste de délégués.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Removes a delegate from the list.">Supprime un délégué de la liste.</summary>
      <param name="key" vsli:raw="The object that owns the event.">Objet propriétaire de l'événement.</param>
      <param name="value" vsli:raw="The delegate to remove from the list.">Délégué à supprimer de la liste.</param>
    </member>
    <member name="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
      <summary vsli:raw="Gets or sets the delegate for the specified object.">Obtient ou définit le délégué de l'objet spécifié.</summary>
      <param name="key" vsli:raw="An object to find in the list.">Objet à rechercher dans la liste.</param>
      <returns vsli:raw="The delegate for the specified key, or &lt;see langword=&quot;null&quot; /&gt; if a delegate does not exist.">Délégué de la clé spécifiée, ou <see langword="null" /> s'il n'existe aucun délégué.</returns>
    </member>
    <member name="T:System.ComponentModel.IComponent">
      <summary vsli:raw="Provides functionality required by all components.">Fournit les fonctionnalités requises par tous les composants.</summary>
    </member>
    <member name="E:System.ComponentModel.IComponent.Disposed">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.ComponentModel.IComponent.Disposed&quot; /&gt; event of a component.">Représente la méthode qui gère l'événement <see cref="E:System.ComponentModel.IComponent.Disposed" /> d'un composant.</summary>
    </member>
    <member name="P:System.ComponentModel.IComponent.Site">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; associated with the &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt;.">Obtient ou définit le <see cref="T:System.ComponentModel.ISite" /> associé à <see cref="T:System.ComponentModel.IComponent" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; object associated with the component; or &lt;see langword=&quot;null&quot; /&gt;, if the component does not have a site.">Objet <see cref="T:System.ComponentModel.ISite" /> associé au composant, ou <see langword="null" /> si le composant ne possède pas de site.</returns>
    </member>
    <member name="T:System.ComponentModel.IContainer">
      <summary vsli:raw="Provides functionality for containers. Containers are objects that logically contain zero or more components.">Fournit les fonctionnalités pour les conteneurs. Les conteneurs sont des objets qui contiennent logiquement zéro ou plusieurs composants.</summary>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; at the end of the list.">Ajoute le <see cref="T:System.ComponentModel.IComponent" /> spécifié à <see cref="T:System.ComponentModel.IContainer" />, à la fin de la liste.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add.">
        <see cref="T:System.ComponentModel.IComponent" /> à ajouter.</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; at the end of the list, and assigns a name to the component.">Ajoute le <see cref="T:System.ComponentModel.IComponent" /> spécifié à <see cref="T:System.ComponentModel.IContainer" />, à la fin de la liste, et assigne un nom au composant.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add.">
        <see cref="T:System.ComponentModel.IComponent" /> à ajouter.</param>
      <param name="name" vsli:raw="The unique, case-insensitive name to assign to the component.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; that leaves the component unnamed.">Nom unique qui ne respecte pas la casse à assigner au composant.  
  
- ou - 
 <see langword="null" /> qui laisse le composant sans nom.</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes a component from the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">Supprime un composant de <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to remove.">
        <see cref="T:System.ComponentModel.IComponent" /> à supprimer.</param>
    </member>
    <member name="P:System.ComponentModel.IContainer.Components">
      <summary vsli:raw="Gets all the components in the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">Obtient tous les composants du <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects that represents all the components in the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">Collection d'objets <see cref="T:System.ComponentModel.IComponent" /> qui représente tous les composants de <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ImmutableObjectAttribute">
      <summary vsli:raw="Specifies that an object has no subproperties capable of being edited. This class cannot be inherited.">Spécifie qu'un objet ne possède aucune sous-propriété pouvant être modifiée. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Default">
      <summary vsli:raw="Represents the default value for &lt;see cref=&quot;T:System.ComponentModel.ImmutableObjectAttribute&quot; /&gt;.">Représente la valeur par défaut de <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.No">
      <summary vsli:raw="Specifies that an object has at least one editable subproperty. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'un objet possède au moins une sous-propriété pouvant être modifiée. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Yes">
      <summary vsli:raw="Specifies that an object has no subproperties that can be edited. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'un objet ne possède aucune sous-propriété pouvant être modifiée. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ImmutableObjectAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</summary>
      <param name="immutable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est immuable ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</summary>
      <param name="obj" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with this instance or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <see cref="T:System.Object" /> à comparer à cette instance ou une référence null (<see langword="Nothing" /> en Visual Basic).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; equals the type and value of this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> est égal au type et à la valeur de cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.ImmutableObjectAttribute&quot; /&gt;.">Code de hachage du <see cref="T:System.ComponentModel.ImmutableObjectAttribute" /> actuel.</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute">
      <summary vsli:raw="Indicates whether the value of this instance is the default value.">Indique si la valeur de cette instance est la valeur par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance is the default attribute for the class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette instance est l’attribut par défaut de la classe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ImmutableObjectAttribute.Immutable">
      <summary vsli:raw="Gets whether the object is immutable.">Obtient une valeur indiquant si l'objet est immuable.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est immuable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.InitializationEventAttribute">
      <summary vsli:raw="Specifies which event is raised on initialization. This class cannot be inherited.">Spécifie quel événement est déclenché à l'initialisation. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.InitializationEventAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InitializationEventAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InitializationEventAttribute" />.</summary>
      <param name="eventName" vsli:raw="The name of the initialization event.">Nom de l'événement d'initialisation.</param>
    </member>
    <member name="P:System.ComponentModel.InitializationEventAttribute.EventName">
      <summary vsli:raw="Gets the name of the initialization event.">Obtient le nom de l'événement d'initialisation.</summary>
      <returns vsli:raw="The name of the initialization event.">Nom de l'événement d'initialisation.</returns>
    </member>
    <member name="T:System.ComponentModel.InvalidAsynchronousStateException">
      <summary vsli:raw="Thrown when a thread on which an operation should execute no longer exists or has no message loop.">Levée lorsqu'un thread sur lequel une opération doit être exécutée n'existe plus ou n'a pas de boucle de messages.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" />.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> avec les <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> donnés.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used for deserialization.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à utiliser pour la désérialisation.</param>
      <param name="context" vsli:raw="The destination to be used for deserialization.">Destination à utiliser pour la désérialisation.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class with the specified detailed description.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> avec la description détaillée spécifiée.</summary>
      <param name="message" vsli:raw="A detailed description of the error.">Description détaillée de l'erreur.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class with the specified detailed description and the specified exception.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> avec la description détaillée spécifiée et l'exception spécifiée.</summary>
      <param name="message" vsli:raw="A detailed description of the error.">Description détaillée de l'erreur.</param>
      <param name="innerException" vsli:raw="A reference to the inner exception that is the cause of this exception.">Référence à l'exception interne à l'origine de cette exception.</param>
    </member>
    <member name="T:System.ComponentModel.InvalidEnumArgumentException">
      <summary vsli:raw="The exception that is thrown when an invalid enumeration value is used.">Exception levée en cas d'utilisation d'arguments non valides qui sont des énumérateurs.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class without a message.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> sans message.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class using the specified serialization data and context.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> à l'aide des données et du contexte de sérialisation spécifiés.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used for deserialization.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à utiliser pour la désérialisation.</param>
      <param name="context" vsli:raw="The destination to be used for deserialization.">Destination à utiliser pour la désérialisation.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class with the specified message.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> avec le message spécifié.</summary>
      <param name="message" vsli:raw="The message to display with this exception.">Message à afficher avec cette exception.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class with the specified detailed description and the specified exception.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> avec la description détaillée spécifiée et l'exception spécifiée.</summary>
      <param name="message" vsli:raw="A detailed description of the error.">Description détaillée de l'erreur.</param>
      <param name="innerException" vsli:raw="A reference to the inner exception that is the cause of this exception.">Référence à l'exception interne à l'origine de cette exception.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class with a message generated from the argument, the invalid value, and an enumeration class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> avec un message généré à partir de l'argument, de la valeur non valide et d'une classe d'énumération.</summary>
      <param name="argumentName" vsli:raw="The name of the argument that caused the exception.">Nom de l'argument ayant provoqué l'exception.</param>
      <param name="invalidValue" vsli:raw="The value of the argument that failed.">Valeur de l'argument ayant échoué.</param>
      <param name="enumClass" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the enumeration class with the valid values.">
        <see cref="T:System.Type" /> représentant la classe d'énumération avec les valeurs valides.</param>
    </member>
    <member name="T:System.ComponentModel.ISite">
      <summary vsli:raw="Provides functionality required by sites.">Fournit les fonctionnalités requises par les sites.</summary>
    </member>
    <member name="P:System.ComponentModel.ISite.Component">
      <summary vsli:raw="Gets the component associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; when implemented by a class.">Obtient le composant associé à <see cref="T:System.ComponentModel.ISite" /> lorsqu'il est implémenté par une classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; instance associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt;.">Instance de <see cref="T:System.ComponentModel.IComponent" /> associée à <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Container">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; when implemented by a class.">Obtient le <see cref="T:System.ComponentModel.IContainer" /> associé à <see cref="T:System.ComponentModel.ISite" /> lorsqu'il est implémenté par une classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; instance associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt;.">Instance de <see cref="T:System.ComponentModel.IContainer" /> associée à <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.DesignMode">
      <summary vsli:raw="Determines whether the component is in design mode when implemented by a class.">Détermine si le composant est en mode design lorsqu'il est implémenté par une classe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is in design mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le composant est en mode design ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Name">
      <summary vsli:raw="Gets or sets the name of the component associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; when implemented by a class.">Obtient ou définit le nom du composant associé à <see cref="T:System.ComponentModel.ISite" /> lorsqu'il est implémenté par une classe.</summary>
      <returns vsli:raw="The name of the component associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;, if no name is assigned to the component.">Nom du composant associé à <see cref="T:System.ComponentModel.ISite" />, ou <see langword="null" /> si aucun nom n'est assigné au composant.</returns>
    </member>
    <member name="T:System.ComponentModel.ISupportInitialize">
      <summary vsli:raw="Specifies that this object supports a simple, transacted notification for batch initialization.">Spécifie que cet objet prend en charge une notification simple traitée avec transaction pour l'initialisation batch.</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.BeginInit">
      <summary vsli:raw="Signals the object that initialization is starting.">Signale à l'objet que l'initialisation démarre.</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.EndInit">
      <summary vsli:raw="Signals the object that initialization is complete.">Signale à l'objet que l'initialisation est terminée.</summary>
    </member>
    <member name="T:System.ComponentModel.ISynchronizeInvoke">
      <summary vsli:raw="Provides a way to synchronously or asynchronously execute a delegate.">Fournit un moyen d'exécuter un délégué de manière synchrone ou asynchrone.</summary>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Asynchronously executes the delegate on the thread that created this object.">Exécute le délégué de manière asynchrone sur le thread qui a créé cet objet.</summary>
      <param name="method" vsli:raw="A &lt;see cref=&quot;T:System.Delegate&quot; /&gt; to a method that takes parameters of the same number and type that are contained in &lt;paramref name=&quot;args&quot; /&gt;.">
        <see cref="T:System.Delegate" /> vers une méthode qui prend des paramètres du même nombre et du même type que ceux qui sont contenus dans <paramref name="args" />.</param>
      <param name="args" vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt; to pass as arguments to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Tableau de type <see cref="T:System.Object" /> à passer comme arguments à la méthode donnée. Peut être <see langword="null" /> si aucun argument n'est nécessaire.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface that represents the asynchronous operation started by calling this method.">Interface <see cref="T:System.IAsyncResult" /> qui représente l'opération asynchrone lancée en appelant cette méthode.</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)">
      <summary vsli:raw="Waits until the process started by calling &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])&quot; /&gt; completes, and then returns the value generated by the process.">Attend que le processus lancé en appelant <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> se termine puis retourne la valeur générée par le processus.</summary>
      <param name="result" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface that represents the asynchronous operation started by calling &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])&quot; /&gt;.">Interface <see cref="T:System.IAsyncResult" /> qui représente l'opération asynchrone lancée en appelant <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the return value generated by the asynchronous operation.">
        <see cref="T:System.Object" /> qui représente la valeur de retour générée par l'opération asynchrone.</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.">Exécute le délégué de manière synchrone sur le thread qui a créé cet objet et marshale l'appel au thread créateur.</summary>
      <param name="method" vsli:raw="A &lt;see cref=&quot;T:System.Delegate&quot; /&gt; that contains a method to call, in the context of the thread for the control.">
        <see cref="T:System.Delegate" /> qui contient une méthode à appeler, dans le contexte du thread pour le contrôle.</param>
      <param name="args" vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the arguments to pass to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Tableau de type <see cref="T:System.Object" /> qui représente les arguments à passer à la méthode donnée. Peut être <see langword="null" /> si aucun argument n'est nécessaire.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the return value from the delegate being invoked, or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">
        <see cref="T:System.Object" /> qui représente la valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
    </member>
    <member name="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired">
      <summary vsli:raw="Gets a value indicating whether the caller must call &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])&quot; /&gt; when calling an object that implements this interface.">Obtient une valeur indiquant si l'appelant doit appeler <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> lors de l'appel d'un objet implémentant cette interface.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the caller must call &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'appelant doit appeler <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.LocalizableAttribute">
      <summary vsli:raw="Specifies whether a property or parameter should be localized. This class cannot be inherited.">Spécifie si une propriété doit être localisée. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Default">
      <summary vsli:raw="Specifies the default value, which is &lt;see cref=&quot;F:System.ComponentModel.LocalizableAttribute.No&quot; /&gt;. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie la valeur par défaut, à savoir <see cref="F:System.ComponentModel.LocalizableAttribute.No" />. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.No">
      <summary vsli:raw="Specifies that a property should not be localized. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'une propriété ne doit pas être localisée. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Yes">
      <summary vsli:raw="Specifies that a property should be localized. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'une propriété doit être localisée. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <param name="isLocalizable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property should be localized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une propriété doit être localisée, sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.LocalizableAttribute" /> en cours.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">Code de hachage du <see cref="T:System.ComponentModel.LocalizableAttribute" /> actuel.</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.LocalizableAttribute.IsLocalizable">
      <summary vsli:raw="Gets a value indicating whether a property should be localized.">Obtient une valeur indiquant si une propriété doit être localisée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property should be localized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une propriété doit être localisée, sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.MergablePropertyAttribute">
      <summary vsli:raw="Specifies that this property can be combined with properties belonging to other objects in a Properties window.">Spécifie que cette propriété peut être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés.</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Default">
      <summary vsli:raw="Specifies the default value, which is &lt;see cref=&quot;F:System.ComponentModel.MergablePropertyAttribute.Yes&quot; /&gt;, that is a property can be combined with properties belonging to other objects in a Properties window. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie la valeur par défaut, à savoir <see cref="F:System.ComponentModel.MergablePropertyAttribute.Yes" />, c'est-à-dire qu'une propriété peut être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.No">
      <summary vsli:raw="Specifies that a property cannot be combined with properties belonging to other objects in a Properties window. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'une propriété ne peut pas être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Yes">
      <summary vsli:raw="Specifies that a property can be combined with properties belonging to other objects in a Properties window. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie qu'une propriété peut être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.MergablePropertyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.MergablePropertyAttribute" />.</summary>
      <param name="allowMerge" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property can be combined with properties belonging to other objects in a Properties window; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette propriété peut être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">Indique si cette instance et un objet spécifié sont égaux.</summary>
      <param name="obj" vsli:raw="Another object to compare to.">Autre objet de comparaison.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> est égal à cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.MergablePropertyAttribute&quot; /&gt;.">Code de hachage du <see cref="T:System.ComponentModel.MergablePropertyAttribute" /> actuel.</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MergablePropertyAttribute.AllowMerge">
      <summary vsli:raw="Gets a value indicating whether this property can be combined with properties belonging to other objects in a Properties window.">Obtient une valeur indiquant si cette propriété peut être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property can be combined with properties belonging to other objects in a Properties window; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette propriété peut être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.NotifyParentPropertyAttribute">
      <summary vsli:raw="Indicates that the parent property is notified when the value of the property that this attribute is applied to is modified. This class cannot be inherited.">Indique que la propriété parente est avertie en cas de modification de la valeur de la propriété à laquelle s'applique cet attribut. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Default">
      <summary vsli:raw="Indicates the default attribute state, that the property should not notify the parent property of changes to its value. This field is read-only.">Indique l'état par défaut de l'attribut : la propriété ne doit pas avertir la propriété parente des modifications apportées à sa valeur. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.No">
      <summary vsli:raw="Indicates that the parent property is not be notified of changes to the value of the property. This field is read-only.">Indique que la propriété parente n'est pas avertie des modifications apportées à la valeur de la propriété. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Yes">
      <summary vsli:raw="Indicates that the parent property is notified of changes to the value of the property. This field is read-only.">Indique que la propriété parente est avertie des modifications apportées à la valeur de la propriété. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.NotifyParentPropertyAttribute&quot; /&gt; class, using the specified value to determine whether the parent property is notified of changes to the value of the property.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.NotifyParentPropertyAttribute" /> utilisant la valeur spécifiée pour déterminer si la propriété parente est avertie des modifications apportées à la valeur de la propriété.</summary>
      <param name="notifyParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent should be notified of changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le parent doit être averti des modifications ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is the same as the current object.">Obtient une valeur indiquant si l'objet spécifié est le même que l'objet en cours.</summary>
      <param name="obj" vsli:raw="The object to test for equality.">Objet dont la similitude doit être testée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is the same as this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est le même que cet objet ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for this object.">Obtient le code de hachage de cet objet.</summary>
      <returns vsli:raw="The hash code for the object the attribute belongs to.">Code de hachage de l'objet auquel appartient l'attribut.</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">Obtient une valeur indiquant si la valeur actuelle de l'attribut est sa valeur par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current value of the attribute is the default value of the attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur actuelle de l'attribut est sa valeur par défaut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent">
      <summary vsli:raw="Gets or sets a value indicating whether the parent property should be notified of changes to the value of the property.">Obtient ou définit une valeur indiquant si la propriété parente doit être avertie des modifications apportées à la valeur de la propriété.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent property should be notified of changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété parente doit être avertie des modifications ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ParenthesizePropertyNameAttribute">
      <summary vsli:raw="Indicates whether the name of the associated property is displayed with parentheses in the Properties window. This class cannot be inherited.">Indique si le nom de la propriété associée s'affiche entre parenthèses dans la fenêtre Propriétés. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.ComponentModel.ParenthesizePropertyNameAttribute.Default">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ParenthesizePropertyNameAttribute&quot; /&gt; class with a default value that indicates that the associated property should not be shown with parentheses. This field is read-only.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> avec une valeur par défaut indiquant que la propriété associée ne doit pas s'afficher entre parenthèses. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ParenthesizePropertyNameAttribute&quot; /&gt; class that indicates that the associated property should not be shown with parentheses.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> indiquant que la propriété associée ne doit pas s'afficher entre parenthèses.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ParenthesizePropertyNameAttribute&quot; /&gt; class, using the specified value to indicate whether the attribute is displayed with parentheses.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> avec la valeur spécifiée pour indiquer si l'attribut s'affiche entre parenthèses.</summary>
      <param name="needParenthesis" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name should be enclosed in parentheses; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nom doit être entre parenthèses ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to this object and tests for equality.">Compare l'objet spécifié à cet objet et teste sa similitude.</summary>
      <param name="obj" vsli:raw="" />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'ils sont égaux ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for this object.">Obtient le code de hachage de cet objet.</summary>
      <returns vsli:raw="The hash code for the object the attribute belongs to.">Code de hachage de l'objet auquel appartient l'attribut.</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">Obtient une valeur indiquant si la valeur actuelle de l'attribut est sa valeur par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current value of the attribute is the default value of the attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur actuelle de l'attribut est sa valeur par défaut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ParenthesizePropertyNameAttribute.NeedParenthesis">
      <summary vsli:raw="Gets a value indicating whether the Properties window displays the name of the property in parentheses in the Properties window.">Obtient une valeur indiquant si le nom de la propriété entre parenthèses dans la fenêtre Propriétés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is displayed with parentheses; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété s'affiche entre parenthèses ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ReadOnlyAttribute">
      <summary vsli:raw="Specifies whether the property this attribute is bound to is read-only or read/write. This class cannot be inherited.">Spécifie si la propriété à laquelle est lié cet attribut est en lecture seule ou en lecture/écriture. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.ReadOnlyAttribute&quot; /&gt;, which is &lt;see cref=&quot;F:System.ComponentModel.ReadOnlyAttribute.No&quot; /&gt; (that is, the property this attribute is bound to is read/write). This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie la valeur par défaut de <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, à savoir <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (c'est-à-dire que la propriété à laquelle cet attribut est lié est en lecture/écriture). Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.No">
      <summary vsli:raw="Specifies that the property this attribute is bound to is read/write and can be modified. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie que la propriété à laquelle cet attribut est lié est en lecture/écriture et peut être modifiée. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Yes">
      <summary vsli:raw="Specifies that the property this attribute is bound to is read-only and cannot be modified in the server explorer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Spécifie que la propriété à laquelle cet attribut est lié est en lecture seule et ne peut pas être modifiée dans l'Explorateur de serveurs. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ReadOnlyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</summary>
      <param name="isReadOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to show that the property this attribute is bound to is read-only; &lt;see langword=&quot;false&quot; /&gt; to show that the property is read/write.">
        <see langword="true" /> pour indiquer que la propriété à laquelle est lié cet attribut est en lecture seule, <see langword="false" /> pour indiquer que la propriété est en lecture/écriture.</param>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">Indique si cette instance et un objet spécifié sont égaux.</summary>
      <param name="value" vsli:raw="Another object to compare to.">Autre objet de comparaison.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> est égal à cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.ReadOnlyAttribute&quot; /&gt;.">Code de hachage du <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> actuel.</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the property this attribute is bound to is read-only.">Obtient une valeur indiquant si la propriété à laquelle est lié cet attribut est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property this attribute is bound to is read-only; &lt;see langword=&quot;false&quot; /&gt; if the property is read/write.">
        <see langword="true" /> si la propriété à laquelle est lié cet attribut est en lecture seule, <see langword="false" /> si la propriété est en lecture/écriture.</returns>
    </member>
    <member name="T:System.ComponentModel.RefreshProperties">
      <summary vsli:raw="Defines identifiers that indicate the type of a refresh of the Properties window.">Définit des identificateurs qui indiquent le type d'une actualisation de la fenêtre Propriétés.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.All">
      <summary vsli:raw="The properties should be requeried and the view should be refreshed.">Les propriétés doivent être actualisées, de même que la vue.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.None">
      <summary vsli:raw="No refresh is necessary.">Aucune actualisation n'est nécessaire.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.Repaint">
      <summary vsli:raw="The view should be refreshed.">La vue doit être actualisée.</summary>
    </member>
    <member name="T:System.ComponentModel.RefreshPropertiesAttribute">
      <summary vsli:raw="Indicates that the property grid should refresh when the associated property value changes. This class cannot be inherited.">Indique que la grille de propriétés doit s’actualiser lorsque la valeur de propriété associée change. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.All">
      <summary vsli:raw="Indicates that all properties are queried again and refreshed if the property value is changed. This field is read-only.">Indique que toutes les propriétés sont interrogées de nouveau et actualisées si la valeur de la propriété est modifiée. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Default">
      <summary vsli:raw="Indicates that no other properties are refreshed if the property value is changed. This field is read-only.">Indique qu'aucune autre propriété ne doit être actualisée en cas de modification de la valeur de la propriété. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Repaint">
      <summary vsli:raw="Indicates that all properties are repainted if the property value is changed. This field is read-only.">Indique que toutes les propriétés doivent être repeintes si la valeur de la propriété est modifiée. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.#ctor(System.ComponentModel.RefreshProperties)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.RefreshPropertiesAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.RefreshPropertiesAttribute" />.</summary>
      <param name="refresh" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.RefreshProperties&quot; /&gt; value indicating the nature of the refresh.">Valeur <see cref="T:System.ComponentModel.RefreshProperties" /> indiquant la nature de l'actualisation.</param>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.Equals(System.Object)">
      <summary vsli:raw="Overrides the object's &lt;see cref=&quot;Overload:System.Object.Equals&quot; /&gt; method.">Substitue la méthode <see cref="Overload:System.Object.Equals" /> de l'objet.</summary>
      <param name="obj" vsli:raw="" />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is the same; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet spécifié est le même ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Retourne le code de hachage pour cet objet.</summary>
      <returns vsli:raw="The hash code for the object that the attribute belongs to.">Code de hachage de l'objet auquel appartient l'attribut.</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">Obtient une valeur indiquant si la valeur actuelle de l'attribut est sa valeur par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current value of the attribute is the default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur actuelle de l'attribut est la valeur par défaut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.RefreshPropertiesAttribute.RefreshProperties">
      <summary vsli:raw="Gets the refresh properties for the member.">Obtient les propriétés d'actualisation du membre.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.RefreshProperties&quot; /&gt; that indicates the current refresh properties for the member.">
        <see cref="T:System.ComponentModel.RefreshProperties" /> indiquant les propriétés d'actualisation en cours pour le membre.</returns>
    </member>
  </members>
</doc>