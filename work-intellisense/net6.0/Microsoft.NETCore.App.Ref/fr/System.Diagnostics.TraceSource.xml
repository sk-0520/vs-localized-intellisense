<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.TraceSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.BooleanSwitch">
      <summary>Fournit un simple commutateur marche/arrêt qui contrôle le débogage et la sortie de suivi.</summary>
    </member>
    <member name="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.BooleanSwitch" /> avec le nom d’affichage et la description spécifiés.</summary>
      <param name="displayName">Nom à afficher dans l’interface utilisateur.</param>
      <param name="description">Description du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.BooleanSwitch" /> avec le nom complet, la description et la valeur de commutateur par défaut spécifiés.</summary>
      <param name="displayName">Nom à afficher sur l’interface utilisateur.</param>
      <param name="description">Description du commutateur.</param>
      <param name="defaultSwitchValue">Valeur par défaut du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.BooleanSwitch.OnValueChanged">
      <summary>Détermine si la nouvelle valeur de la propriété <see cref="P:System.Diagnostics.Switch.Value" /> peut être analysée en tant que valeur booléenne.</summary>
    </member>
    <member name="P:System.Diagnostics.BooleanSwitch.Enabled">
      <summary>Obtient ou définit une valeur qui indique si le commutateur est activé ou désactivé.</summary>
      <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation requise.</exception>
      <returns>
        <see langword="true" /> si le commutateur est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.CorrelationManager">
      <summary>Met en correspondance des traces qui font partie d'une transaction logique.</summary>
    </member>
    <member name="M:System.Diagnostics.CorrelationManager.StartLogicalOperation">
      <summary>Démarre une opération logique sur un thread.</summary>
    </member>
    <member name="M:System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)">
      <summary>Démarre une opération logique avec l'identité spécifiée sur un thread.</summary>
      <param name="operationId">Objet qui identifie l'opération.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="operationId" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CorrelationManager.StopLogicalOperation">
      <summary>Arrête l'opération logique actuelle.</summary>
      <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" /> est une pile vide.</exception>
    </member>
    <member name="P:System.Diagnostics.CorrelationManager.ActivityId">
      <summary>Obtient ou définit l'identité pour une activité globale.</summary>
      <returns>Structure <see cref="T:System.Guid" /> qui identifie l'activité globale.</returns>
    </member>
    <member name="P:System.Diagnostics.CorrelationManager.LogicalOperationStack">
      <summary>Obtient la pile d'opération logique du contexte d'appel.</summary>
      <returns>Objet <see cref="T:System.Collections.Stack" /> qui représente la pile d'opération logique pour le contexte d'appel.</returns>
    </member>
    <member name="T:System.Diagnostics.DefaultTraceListener">
      <summary>Fournit les méthodes de sortie par défaut et le comportement de suivi.</summary>
    </member>
    <member name="M:System.Diagnostics.DefaultTraceListener.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DefaultTraceListener" /> en assignant "Default" comme valeur de la propriété <see cref="P:System.Diagnostics.TraceListener.Name" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
      <summary>Émet ou affiche un message et une trace de la pile pour une assertion qui échoue toujours.</summary>
      <param name="message">Message à envoyer ou afficher.</param>
    </member>
    <member name="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
      <summary>Émet ou affiche des messages détaillés et une trace de la pile pour une assertion qui échoue toujours.</summary>
      <param name="message">Message à envoyer ou afficher.</param>
      <param name="detailMessage">Message détaillé à envoyer ou afficher.</param>
    </member>
    <member name="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
      <summary>Écrit la sortie vers la fonction <see langword="OutputDebugString" /> et la méthode <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</summary>
      <param name="message">Message à écrire vers <see langword="OutputDebugString" /> et <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</param>
    </member>
    <member name="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
      <summary>Écrit la sortie vers la fonction <see langword="OutputDebugString" /> et la méthode <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> suivie d'un retour chariot et d'un changement de ligne (\r\n).</summary>
      <param name="message">Message à écrire vers <see langword="OutputDebugString" /> et <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</param>
    </member>
    <member name="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
      <summary>Obtient ou définit une valeur indiquant si l'application est exécutée en mode interface utilisateur.</summary>
      <returns>
        <see langword="true" /> si le mode interface utilisateur est activé ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.DefaultTraceListener.LogFileName">
      <summary>Obtient ou définit le nom d'un fichier journal dans lequel les messages de traçage ou de débogage doivent être écrits.</summary>
      <returns>Nom d'un fichier journal dans lequel les messages de traçage ou de débogage doivent être écrits.</returns>
    </member>
    <member name="T:System.Diagnostics.EventTypeFilter">
      <summary>Indique si un écouteur doit tracer en fonction du type d'événement.</summary>
    </member>
    <member name="M:System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventTypeFilter" />.</summary>
      <param name="level">Une combinaison d'opérations de bits des valeurs <see cref="T:System.Diagnostics.SourceLevels" /> qui spécifie le type d'événement des messages à tracer.</param>
    </member>
    <member name="M:System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
      <summary>Détermine si l'écouteur de la trace doit tracer l'événement.</summary>
      <param name="cache">
        <see cref="T:System.Diagnostics.TraceEventCache" /> qui représente le cache des informations pour l'événement de trace.</param>
      <param name="source">Nom de la source.</param>
      <param name="eventType">Une des valeurs de l'objet <see cref="T:System.Diagnostics.TraceEventType" />.</param>
      <param name="id">Numéro d'identification de trace.</param>
      <param name="formatOrMessage">Format à utiliser pour écrire un tableau d'arguments, ou un message à écrire.</param>
      <param name="args">Tableau d'objets d'argument.</param>
      <param name="data1">Objet des données de trace.</param>
      <param name="data">Tableau des objets de données de trace.</param>
      <returns>
        <see langword="true" /> si la trace doit être produite ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.EventTypeFilter.EventType">
      <summary>Obtient ou définit le type d'événement des messages à tracer.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Diagnostics.SourceLevels" />.</returns>
    </member>
    <member name="T:System.Diagnostics.SourceFilter">
      <summary>Indique si un écouteur doit tracer un message en fonction de la source d'un traçage.</summary>
    </member>
    <member name="M:System.Diagnostics.SourceFilter.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SourceFilter" /> et spécifie le nom de la source de trace.</summary>
      <param name="source">Nom de la source de trace.</param>
    </member>
    <member name="M:System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
      <summary>Détermine si l'écouteur de la trace doit tracer l'événement.</summary>
      <param name="cache">Object qui représente le cache des informations pour l'événement de trace.</param>
      <param name="source">Nom de la source.</param>
      <param name="eventType">L'une des valeurs d'énumération qui identifie le type d'événement.</param>
      <param name="id">Numéro d'identification de trace.</param>
      <param name="formatOrMessage">Format à utiliser pour écrire un tableau d'arguments ou un message à écrire.</param>
      <param name="args">Tableau d'objets d'argument.</param>
      <param name="data1">Objet des données de trace.</param>
      <param name="data">Tableau des objets de données de trace.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si la trace doit être produite ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SourceFilter.Source">
      <summary>Obtient ou définit le nom de la source de trace.</summary>
      <exception cref="T:System.ArgumentNullException">La valeur est <see langword="null" />.</exception>
      <returns>Nom de la source de trace.</returns>
    </member>
    <member name="T:System.Diagnostics.SourceLevels">
      <summary>Spécifie les niveaux des messages de trace filtrés par le commutateur source et le filtre de type d'événement.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.ActivityTracing">
      <summary>Autorise les événements <see cref="F:System.Diagnostics.TraceEventType.Stop" />, <see cref="F:System.Diagnostics.TraceEventType.Start" />, <see cref="F:System.Diagnostics.TraceEventType.Suspend" />, <see cref="F:System.Diagnostics.TraceEventType.Transfer" /> et <see cref="F:System.Diagnostics.TraceEventType.Resume" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.All">
      <summary>Autorise tous les événements.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.Critical">
      <summary>Autorise uniquement les événements <see cref="F:System.Diagnostics.TraceEventType.Critical" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.Error">
      <summary>Autorise les événements <see cref="F:System.Diagnostics.TraceEventType.Critical" /> et <see cref="F:System.Diagnostics.TraceEventType.Error" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.Information">
      <summary>Autorise les événements <see cref="F:System.Diagnostics.TraceEventType.Critical" />, <see cref="F:System.Diagnostics.TraceEventType.Error" />, <see cref="F:System.Diagnostics.TraceEventType.Warning" />, et <see cref="F:System.Diagnostics.TraceEventType.Information" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.Off">
      <summary>N'autorise pas d'événements.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.Verbose">
      <summary>Autorise les événements <see cref="F:System.Diagnostics.TraceEventType.Critical" />, <see cref="F:System.Diagnostics.TraceEventType.Error" />, <see cref="F:System.Diagnostics.TraceEventType.Warning" />, <see cref="F:System.Diagnostics.TraceEventType.Information" />, et <see cref="F:System.Diagnostics.TraceEventType.Verbose" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.Warning">
      <summary>Autorise les événements <see cref="F:System.Diagnostics.TraceEventType.Critical" />, <see cref="F:System.Diagnostics.TraceEventType.Error" />, et <see cref="F:System.Diagnostics.TraceEventType.Warning" />.</summary>
    </member>
    <member name="T:System.Diagnostics.SourceSwitch">
      <summary>Fournit un commutateur à plusieurs niveaux pour contrôler la sortie de traçage et de débogage sans recompiler votre code.</summary>
    </member>
    <member name="M:System.Diagnostics.SourceSwitch.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SourceSwitch" /> et spécifie le nom de la source.</summary>
      <param name="name">Nom de la source.</param>
    </member>
    <member name="M:System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SourceSwitch" /> et spécifie le nom complet et la valeur par défaut pour le commutateur source.</summary>
      <param name="displayName">Nom du commutateur source.</param>
      <param name="defaultSwitchValue">Valeur par défaut du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.SourceSwitch.OnValueChanged">
      <summary>Appelé lorsque la valeur de la propriété <see cref="P:System.Diagnostics.Switch.Value" /> change.</summary>
      <exception cref="T:System.ArgumentException">La nouvelle valeur de <see cref="P:System.Diagnostics.Switch.Value" /> ne fait pas partie des valeurs <see cref="T:System.Diagnostics.SourceLevels" />.</exception>
    </member>
    <member name="M:System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)">
      <summary>Détermine si les écouteurs de la trace doivent être appelés en fonction du type d'événement de trace.</summary>
      <param name="eventType">Une des valeurs de l'objet <see cref="T:System.Diagnostics.TraceEventType" />.</param>
      <returns>
        <see langword="true" /> si les écouteurs de la trace doivent être appelés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SourceSwitch.Level">
      <summary>Obtient ou définit le niveau du commutateur.</summary>
      <returns>Une des valeurs <see cref="T:System.Diagnostics.SourceLevels" /> qui représente le niveau d'événement du commutateur.</returns>
    </member>
    <member name="T:System.Diagnostics.Switch">
      <summary>Fournit une classe de base abstraite pour créer des commutateurs de débogage et de traçage.</summary>
    </member>
    <member name="M:System.Diagnostics.Switch.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Switch" />.</summary>
      <param name="displayName">Nom du commutateur.</param>
      <param name="description">Description pour le commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Switch" /> et spécifie le nom complet, la description et la valeur par défaut pour le commutateur.</summary>
      <param name="displayName">Nom du commutateur.</param>
      <param name="description">Description du commutateur.</param>
      <param name="defaultSwitchValue">Valeur par défaut du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.Switch.GetSupportedAttributes">
      <summary>Obtient les attributs personnalisés pris en charge par le commutateur.</summary>
      <returns>Tableau de chaînes qui contient les noms des attributs personnalisés pris en charge par le commutateur, ou <see langword="null" /> en l'absence de prise en charge d'un attribut personnalisé.</returns>
    </member>
    <member name="M:System.Diagnostics.Switch.OnSwitchSettingChanged">
      <summary>Appelé lorsque la propriété <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> a été modifiée.</summary>
    </member>
    <member name="M:System.Diagnostics.Switch.OnValueChanged">
      <summary>Appelé lorsque la propriété <see cref="P:System.Diagnostics.Switch.Value" /> a été modifiée.</summary>
    </member>
    <member name="P:System.Diagnostics.Switch.Attributes">
      <summary>Obtient les attributs de commutateur personnalisés définis dans le fichier de configuration de l'application.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringDictionary" /> qui contient les attributs personnalisés non sensibles à la casse pour le commutateur de trace.</returns>
    </member>
    <member name="P:System.Diagnostics.Switch.Description">
      <summary>Obtient une description du commutateur.</summary>
      <returns>Description du commutateur. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Diagnostics.Switch.DisplayName">
      <summary>Obtient un nom utilisé pour identifier le commutateur.</summary>
      <returns>Nom utilisé pour identifier le commutateur. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Diagnostics.Switch.SwitchSetting">
      <summary>Obtient ou définit le paramètre en cours pour ce commutateur.</summary>
      <returns>Paramètre en cours pour ce commutateur. La valeur par défaut est zéro.</returns>
    </member>
    <member name="P:System.Diagnostics.Switch.Value">
      <summary>Obtient ou définit la valeur du commutateur.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur est <see langword="null" />.  
  
- ou - 
Valeur qui ne consiste pas uniquement d'un signe négatif facultatif suivi d'une séquence de chiffres comprise entre 0 et 9.  
  
- ou - 
La valeur représente un nombre inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns>Chaîne qui représente la valeur du commutateur.</returns>
    </member>
    <member name="T:System.Diagnostics.SwitchAttribute">
      <summary>Identifie un commutateur utilisé dans un assembly, une classe ou un membre.</summary>
    </member>
    <member name="M:System.Diagnostics.SwitchAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SwitchAttribute" /> et spécifie le nom et le type du commutateur.</summary>
      <param name="switchName">Nom complet du commutateur.</param>
      <param name="switchType">Type du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.SwitchAttribute.GetAll(System.Reflection.Assembly)">
      <summary>Retourne tous les attributs de commutateur pour l'assembly spécifié.</summary>
      <param name="assembly">L'assembly dont vous recherchez les attributs de commutateur.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> a la valeur <see langword="null" />.</exception>
      <returns>Tableau qui contient tous les attributs de commutateur pour l'assembly.</returns>
    </member>
    <member name="P:System.Diagnostics.SwitchAttribute.SwitchDescription">
      <summary>Obtient ou définit la description du commutateur.</summary>
      <returns>Description du commutateur.</returns>
    </member>
    <member name="P:System.Diagnostics.SwitchAttribute.SwitchName">
      <summary>Obtient ou définit le nom complet du commutateur.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.SwitchAttribute.SwitchName" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.SwitchAttribute.SwitchName" /> a la valeur d'une chaîne vide.</exception>
      <returns>Nom complet du commutateur.</returns>
    </member>
    <member name="P:System.Diagnostics.SwitchAttribute.SwitchType">
      <summary>Obtient ou définit le type du commutateur.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.SwitchAttribute.SwitchType" /> a la valeur <see langword="null" />.</exception>
      <returns>Type du commutateur.</returns>
    </member>
    <member name="T:System.Diagnostics.SwitchLevelAttribute">
      <summary>Identifie le type de niveau pour un commutateur.</summary>
    </member>
    <member name="M:System.Diagnostics.SwitchLevelAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SwitchLevelAttribute" /> et spécifie le type qui détermine si une trace doit être écrite.</summary>
      <param name="switchLevelType">
        <see cref="T:System.Type" /> qui détermine si une trace doit être écrite.</param>
    </member>
    <member name="P:System.Diagnostics.SwitchLevelAttribute.SwitchLevelType">
      <summary>Obtient ou définit le type qui détermine si une trace doit être écrite.</summary>
      <exception cref="T:System.ArgumentNullException">L'opération de définition a échoué car la valeur est <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Type" /> qui détermine si une trace doit être écrite.</returns>
    </member>
    <member name="T:System.Diagnostics.Trace">
      <summary>Fournit un ensemble de méthodes et de propriétés qui vous permettent de tracer l'exécution de votre code. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Diagnostics.Trace.Assert(System.Boolean)">
      <summary>Vérifie une condition ; si la condition est <see langword="false" />, affiche une boîte de message qui montre la pile des appels.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, aucun message d’échec n’est envoyé et la boîte de message ne s’affiche pas.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
      <summary>Vérifie une condition ; si la condition a la valeur <see langword="false" />, affiche un message spécifié et une boîte de message qui montre la pile des appels.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition a la valeur <see langword="true" />, le message spécifié n’est pas envoyé et la boîte de message ne s’affiche pas.</param>
      <param name="message">Message à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
      <summary>Vérifie une condition ; si la condition est <see langword="false" />, affiche deux messages spécifiés et une boîte de message qui montre la pile des appels.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, les messages spécifiés ne sont pas envoyés et la boîte de message ne s’affiche pas.</param>
      <param name="message">Message à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="detailMessage">Message détaillé à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Close">
      <summary>Vide la mémoire tampon de sortie, puis ferme <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Trace.Fail(System.String)">
      <summary>Émet le message d’erreur spécifié.</summary>
      <param name="message">Message à émettre.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
      <summary>Émet un message d’erreur et un message d’erreur détaillé.</summary>
      <param name="message">Message à émettre.</param>
      <param name="detailMessage">Message détaillé à émettre.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Flush">
      <summary>Vide la mémoire tampon de sortie et entraîne l’écriture des données mises en mémoire dans <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Trace.Indent">
      <summary>Augmente le <see cref="P:System.Diagnostics.Trace.IndentLevel" /> actuel d’une unité.</summary>
    </member>
    <member name="M:System.Diagnostics.Trace.Refresh">
      <summary>Actualise les données de configuration de suivi.</summary>
    </member>
    <member name="M:System.Diagnostics.Trace.TraceError(System.String)">
      <summary>Écrit un message d’erreur dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du message spécifié.</summary>
      <param name="message">Message d'information à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])">
      <summary>Écrit un message d’erreur dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du tableau d’objets et des informations de mise en forme spécifiés.</summary>
      <param name="format">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <paramref name="args" />.</param>
      <param name="args">
        <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.TraceInformation(System.String)">
      <summary>Écrit un message d’information dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du message spécifié.</summary>
      <param name="message">Message d'information à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])">
      <summary>Écrit un message d’information dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du tableau d’objets et des informations de mise en forme spécifiés.</summary>
      <param name="format">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <paramref name="args" />.</param>
      <param name="args">
        <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.TraceWarning(System.String)">
      <summary>Écrit un message d’avertissement dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du message spécifié.</summary>
      <param name="message">Message d'information à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])">
      <summary>Écrit un message d’avertissement dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du tableau d’objets et des informations de mise en forme spécifiés.</summary>
      <param name="format">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <paramref name="args" />.</param>
      <param name="args">
        <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Unindent">
      <summary>Réduit la propriété <see cref="P:System.Diagnostics.Trace.IndentLevel" /> actuelle d’une unité.</summary>
    </member>
    <member name="M:System.Diagnostics.Trace.Write(System.Object)">
      <summary>Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
      <summary>Écrit le nom de la catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="value">Un nom <see cref="T:System.Object" /> est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Write(System.String)">
      <summary>Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Write(System.String,System.String)">
      <summary>Écrit un nom de catégorie et un message dans les écouteurs Trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="message">Message à écrire.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
      <summary>Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="value">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
      <summary>Écrit un nom de catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />, si une condition a la valeur <see langword="true" />.</summary>
      <param name="condition">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="value">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
      <summary>Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
      <summary>Écrit un nom de catégorie et un message dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="message">Message à écrire.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLine(System.Object)">
      <summary>Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
      <summary>Écrit le nom de la catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLine(System.String)">
      <summary>Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
      <summary>Écrit un nom de catégorie et un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="message">Message à écrire.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
      <summary>Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="value">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
      <summary>Écrit un nom de catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />, si une condition a la valeur <see langword="true" />.</summary>
      <param name="condition">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="value">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
      <summary>Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
      <summary>Écrit un nom de catégorie et un message dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="message">Message à écrire.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="P:System.Diagnostics.Trace.AutoFlush">
      <summary>Obtient ou définit une valeur indiquant si <see cref="M:System.Diagnostics.Trace.Flush" /> doit être appelé sur <see cref="P:System.Diagnostics.Trace.Listeners" /> après chaque écriture.</summary>
      <returns>
        <see langword="true" /> si <see cref="M:System.Diagnostics.Trace.Flush" /> est appelé sur <see cref="P:System.Diagnostics.Trace.Listeners" /> après chaque écriture ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Trace.CorrelationManager">
      <summary>Obtient le gestionnaire de corrélation pour le thread de ce suivi.</summary>
      <returns>Objet <see cref="T:System.Diagnostics.CorrelationManager" /> associé au thread de ce suivi.</returns>
    </member>
    <member name="P:System.Diagnostics.Trace.IndentLevel">
      <summary>Obtient ou définit le niveau de retrait.</summary>
      <returns>Niveau de retrait. La valeur par défaut est zéro.</returns>
    </member>
    <member name="P:System.Diagnostics.Trace.IndentSize">
      <summary>Obtient ou définit le nombre d'espaces dans un retrait.</summary>
      <returns>Nombre d'espaces dans un retrait. La valeur par défaut est quatre.</returns>
    </member>
    <member name="P:System.Diagnostics.Trace.Listeners">
      <summary>Obtient la collection d’écouteurs qui surveillent la sortie de suivi.</summary>
      <returns>
        <see cref="T:System.Diagnostics.TraceListenerCollection" /> qui représente une collection de types <see cref="T:System.Diagnostics.TraceListener" /> qui surveillent la sortie de suivi.</returns>
    </member>
    <member name="P:System.Diagnostics.Trace.UseGlobalLock">
      <summary>Obtient ou définit une valeur indiquant si le verrouillage global doit être utilisé.</summary>
      <returns>
        <see langword="true" /> si le verrouillage global est utilisé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Diagnostics.TraceEventCache">
      <summary>Fournit les données d'événement de trace spécifiques à un thread et un processus.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceEventCache.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceEventCache" />.</summary>
    </member>
    <member name="P:System.Diagnostics.TraceEventCache.Callstack">
      <summary>Obtient la pile des appels du thread en cours.</summary>
      <returns>Chaîne contenant les informations de trace de la pile. Cette valeur peut être une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Diagnostics.TraceEventCache.DateTime">
      <summary>Obtient la date et l'heure auxquelles s'est produit le suivi de l'événement.</summary>
      <returns>Structure <see cref="T:System.DateTime" /> dont la valeur correspond à une date et une heure exprimées en temps universel (UTC).</returns>
    </member>
    <member name="P:System.Diagnostics.TraceEventCache.LogicalOperationStack">
      <summary>Obtient les données de corrélation contenues dans une pile.</summary>
      <returns>
        <see cref="T:System.Collections.Stack" /> qui contient les données de corrélation.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceEventCache.ProcessId">
      <summary>Obtient l'identificateur unique du processus en cours.</summary>
      <returns>Identificateur unique généré par système du processus actuel.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceEventCache.ThreadId">
      <summary>Obtient un identificateur unique pour le thread managé actuel.</summary>
      <returns>Chaîne qui représente un identificateur entier unique pour ce thread managé.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceEventCache.Timestamp">
      <summary>Obtient le nombre actuel de graduations dans le mécanisme de minuterie.</summary>
      <returns>Valeur du compteur du mécanisme de minuterie (Timer) sous-jacent.</returns>
    </member>
    <member name="T:System.Diagnostics.TraceEventType">
      <summary>Identifie le type d'événement qui a provoqué la trace.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Critical">
      <summary>Erreur irrécupérable ou panne d'application.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Error">
      <summary>Erreur récupérable.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Information">
      <summary>Message d’information.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Resume">
      <summary>Reprise d'une opération logique.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Start">
      <summary>Démarrage d'une opération logique.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Stop">
      <summary>Arrêt d'une opération logique.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Suspend">
      <summary>Interruption d'une opération logique.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Transfer">
      <summary>Changement d'identité de corrélation.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Verbose">
      <summary>Suivi de débogage.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Warning">
      <summary>Problème non critique.</summary>
    </member>
    <member name="T:System.Diagnostics.TraceFilter">
      <summary>Fournit la classe de base pour les implémentations du filtre de la trace.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceFilter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceFilter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
      <summary>En cas de substitution dans une classe dérivée, détermine si l'écouteur doit tracer l'événement.</summary>
      <param name="cache">
        <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient des informations pour l'événement de trace.</param>
      <param name="source">Nom de la source.</param>
      <param name="eventType">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</param>
      <param name="id">Numéro d'identification de trace.</param>
      <param name="formatOrMessage">Format à utiliser pour écrire un tableau d'arguments spécifié par le paramètre <paramref name="args" />, ou un message à écrire.</param>
      <param name="args">Tableau d'objets d'argument.</param>
      <param name="data1">Objet des données de trace.</param>
      <param name="data">Tableau des objets de données de trace.</param>
      <returns>
        <see langword="true" /> pour tracer l'événement spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.TraceLevel">
      <summary>Spécifie les messages à envoyer en sortie pour les classes <see cref="T:System.Diagnostics.Debug" />, <see cref="T:System.Diagnostics.Trace" /> et <see cref="T:System.Diagnostics.TraceSwitch" />.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLevel.Error">
      <summary>Envoie en sortie des messages de gestion des erreurs.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLevel.Info">
      <summary>Envoie des messages d'information, des avertissements ou des messages de gestion des erreurs.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLevel.Off">
      <summary>N'envoie en sortie aucun message de traçage ou de débogage.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLevel.Verbose">
      <summary>Envoie en sortie tous les messages de traçage et de débogage.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLevel.Warning">
      <summary>Envoie en sortie les messages d'avertissement et de gestion d'erreurs.</summary>
    </member>
    <member name="T:System.Diagnostics.TraceListener">
      <summary>Fournit la classe de base <see langword="abstract" /> pour les écouteurs qui surveillent la sortie de trace et de débogage.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListener.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListener.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceListener" /> avec le nom spécifié pour l'écouteur.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Diagnostics.TraceListener" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Close">
      <summary>En cas de substitution dans une classe dérivée, ferme le flux de sortie pour qu'il ne reçoive plus la sortie de trace ou de débogage.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.Diagnostics.TraceListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Diagnostics.TraceListener" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Fail(System.String)">
      <summary>Émet un message d'erreur à l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <param name="message">Message à émettre.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
      <summary>Émet un message d'erreur, ainsi qu'un message d'erreur détaillé, à l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <param name="message">Message à émettre.</param>
      <param name="detailMessage">Message détaillé à émettre.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Flush">
      <summary>En cas de substitution dans une classe dérivée, vide la mémoire tampon de sortie.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
      <summary>Obtient les attributs personnalisés pris en charge par l'écouteur de trace.</summary>
      <returns>Tableau de chaînes qui nomme les attributs personnalisés pris en charge par l'écouteur de trace, ou <see langword="null" /> s'il n'y a pas d'attributs personnalisés.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>Écrit les informations sur la trace, un objet de données et les informations sur les événements dans la sortie spécifique de l'écouteur.</summary>
      <param name="eventCache">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</param>
      <param name="eventType">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="data">Données de trace à émettre.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>Écrit les informations sur la trace, un tableau d'objets de données et les informations sur les événements dans la sortie spécifique de l'écouteur.</summary>
      <param name="eventCache">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</param>
      <param name="eventType">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="data">Tableau d'objets à émettre comme données.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <summary>Écrit les informations sur la trace et les événements dans la sortie spécifique de l'écouteur.</summary>
      <param name="eventCache">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</param>
      <param name="eventType">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>Écrit les informations sur la trace, un message et les informations sur les événements dans la sortie spécifique de l'écouteur.</summary>
      <param name="eventCache">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</param>
      <param name="eventType">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>Écrit les informations sur la trace, un tableau d'objets mis en forme et les informations sur les événements dans la sortie spécifique de l'écouteur.</summary>
      <param name="eventCache">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</param>
      <param name="eventType">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="format">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <paramref name="args" />.</param>
      <param name="args">
        <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
      <summary>Écrit les informations sur la trace, un message, une identité d'activité connexe et les informations sur les événements dans la sortie spécifique de l'écouteur.</summary>
      <param name="eventCache">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="message">Message à écrire.</param>
      <param name="relatedActivityId">Objet <see cref="T:System.Guid" /> identifiant une activité connexe.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Write(System.Object)">
      <summary>Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet dans l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <param name="o">
        <see cref="T:System.Object" /> dont vous voulez écrire le nom de classe complet.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
      <summary>Écrit un nom de catégorie ou la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet dans l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <param name="o">
        <see cref="T:System.Object" /> dont vous voulez écrire le nom de classe complet.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Write(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit le message spécifié dans l'écouteur que vous créez dans la classe dérivée.</summary>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
      <summary>Écrit un nom de catégorie et un message dans l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <param name="message">Message à écrire.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.WriteIndent">
      <summary>Écrit la mise en retrait dans l'écouteur que vous créez lors de l'implémentation de cette classe et rétablit la valeur <see langword="false" /> à la propriété <see cref="P:System.Diagnostics.TraceListener.NeedIndent" />.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
      <summary>Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet dans l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />, suivie d'une marque de fin de ligne.</summary>
      <param name="o">
        <see cref="T:System.Object" /> dont vous voulez écrire le nom de classe complet.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
      <summary>Écrit un nom de catégorie ou la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet dans l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />, suivis d'une marque de fin de ligne.</summary>
      <param name="o">
        <see cref="T:System.Object" /> dont vous voulez écrire le nom de classe complet.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un message dans l'écouteur que vous créez dans la classe dérivée, suivi d'une marque de fin de ligne.</summary>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
      <summary>Écrit un nom de catégorie ou un message dans l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />, suivis d'une marque de fin de ligne.</summary>
      <param name="message">Message à écrire.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="P:System.Diagnostics.TraceListener.Attributes">
      <summary>Obtient les attributs d'écouteur de trace personnalisés définis dans le fichier de configuration de l'application.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringDictionary" /> qui contient les attributs personnalisés pour l'écouteur de trace.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.Filter">
      <summary>Obtient ou définit le filtre de trace pour l’écouteur de la trace.</summary>
      <returns>Objet dérivé de la classe de base <see cref="T:System.Diagnostics.TraceFilter" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.IndentLevel">
      <summary>Obtient ou définit le niveau de retrait.</summary>
      <returns>Niveau de retrait. La valeur par défaut est zéro.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.IndentSize">
      <summary>Obtient ou définit le nombre d'espaces dans un retrait.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">L'opération ensembliste a échoué car la valeur est inférieure à zéro.</exception>
      <returns>Nombre d'espaces dans un retrait. La valeur par défaut est quatre espaces.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.IsThreadSafe">
      <summary>Obtient une valeur qui indique si l'écouteur de trace est thread-safe.</summary>
      <returns>
        <see langword="true" /> si l'écouteur de trace est thread-safe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.Name">
      <summary>Obtient ou définit un nom pour ce <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <returns>Nom pour ce <see cref="T:System.Diagnostics.TraceListener" />. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.NeedIndent">
      <summary>Obtient ou définit une valeur indiquant si la sortie doit être mise en retrait.</summary>
      <returns>
        <see langword="true" /> si la sortie doit être mise en retrait ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.TraceOutputOptions">
      <summary>Obtient ou définit les options de sortie de trace.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">L'opération ensembliste a échoué car la valeur n'est pas valide.</exception>
      <returns>Combinaison d'opérations de bits des valeurs d'énumération. La valeur par défaut est <see cref="F:System.Diagnostics.TraceOptions.None" />.</returns>
    </member>
    <member name="T:System.Diagnostics.TraceListenerCollection">
      <summary>Fournit une liste thread-safe d’objets <see cref="T:System.Diagnostics.TraceListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)">
      <summary>Ajoute <see cref="T:System.Diagnostics.TraceListener" /> à la liste.</summary>
      <param name="listener">
        <see cref="T:System.Diagnostics.TraceListener" /> à ajouter à la liste.</param>
      <returns>Position au niveau de laquelle le nouvel écouteur a été inséré.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])">
      <summary>Ajoute un tableau d'objets <see cref="T:System.Diagnostics.TraceListener" /> à la liste.</summary>
      <param name="value">Tableau d'objets <see cref="T:System.Diagnostics.TraceListener" /> à ajouter à la liste.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)">
      <summary>Ajoute le contenu d'un autre <see cref="T:System.Diagnostics.TraceListenerCollection" /> à la liste.</summary>
      <param name="value">Autre <see cref="T:System.Diagnostics.TraceListenerCollection" /> dont le contenu est ajouté à la liste.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.Clear">
      <summary>Efface tous les écouteurs de la liste.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)">
      <summary>Vérifie si la liste contient l'écouteur spécifié.</summary>
      <param name="listener">
        <see cref="T:System.Diagnostics.TraceListener" /> à trouver dans la liste.</param>
      <returns>
        <see langword="true" /> si l'écouteur est dans la liste ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)">
      <summary>Copie une section de la liste <see cref="T:System.Diagnostics.TraceListenerCollection" /> en cours vers le tableau spécifié, à l'index spécifié.</summary>
      <param name="listeners">Tableau de type <see cref="T:System.Array" /> dans lequel les éléments doivent être copiés.</param>
      <param name="index">Numéro d'index de début dans la liste en cours à partir duquel la copie doit être effectuée.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.GetEnumerator">
      <summary>Obtient un énumérateur pour cette liste.</summary>
      <returns>Énumérateur de type <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)">
      <summary>Obtient l'index de l'écouteur spécifié.</summary>
      <param name="listener">
        <see cref="T:System.Diagnostics.TraceListener" /> à trouver dans la liste.</param>
      <returns>Index de l'écouteur, s'il se trouve dans la liste ; sinon, -1.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)">
      <summary>Insère l'écouteur au niveau de l'index spécifié.</summary>
      <param name="index">Position dans la liste où le nouveau <see cref="T:System.Diagnostics.TraceListener" /> doit être inséré.</param>
      <param name="listener">
        <see cref="T:System.Diagnostics.TraceListener" /> à insérer dans la liste.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans la liste.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="listener" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)">
      <summary>Supprime le <see cref="T:System.Diagnostics.TraceListener" /> spécifié de la collection.</summary>
      <param name="listener">
        <see cref="T:System.Diagnostics.TraceListener" /> à supprimer de la liste.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.Remove(System.String)">
      <summary>Supprime de la collection le premier <see cref="T:System.Diagnostics.TraceListener" /> avec le nom spécifié.</summary>
      <param name="name">Nom du <see cref="T:System.Diagnostics.TraceListener" /> à supprimer de la liste.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)">
      <summary>Supprime de la collection le <see cref="T:System.Diagnostics.TraceListener" /> au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro du <see cref="T:System.Diagnostics.TraceListener" /> à supprimer de la liste.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans la liste.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie une section du <see cref="T:System.Diagnostics.TraceListenerCollection" /> actuel dans le tableau spécifié des objets <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <param name="array">Le tableau unidimensionnel des objets <see cref="T:System.Diagnostics.TraceListener" /> qui constitue la destination des éléments copiés à partir de <see cref="T:System.Diagnostics.TraceListenerCollection" />. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)">
      <summary>Ajoute un écouteur de la trace à <see cref="T:System.Diagnostics.TraceListenerCollection" />.</summary>
      <param name="value">Objet à ajouter à <see cref="T:System.Diagnostics.TraceListenerCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="value" /> n’est pas un <see cref="T:System.Diagnostics.TraceListener" />.</exception>
      <returns>Position dans laquelle le nouvel écouteur de la trace est inséré.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Détermine si <see cref="T:System.Diagnostics.TraceListenerCollection" /> contient un objet spécifique.</summary>
      <param name="value">Objet à rechercher dans <see cref="T:System.Diagnostics.TraceListenerCollection" />.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> se trouve dans le <see cref="T:System.Diagnostics.TraceListenerCollection" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Détermine l'index d'un objet spécifique dans <see cref="T:System.Diagnostics.TraceListenerCollection" />.</summary>
      <param name="value">Objet à rechercher dans <see cref="T:System.Diagnostics.TraceListenerCollection" />.</param>
      <returns>Index de <paramref name="value" /> dans <see cref="T:System.Diagnostics.TraceListenerCollection" />, s'il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Insère un objet <see cref="T:System.Diagnostics.TraceListener" /> à la position spécifiée dans <see cref="T:System.Diagnostics.TraceListenerCollection" />.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
      <param name="value">Objet <see cref="T:System.Diagnostics.TraceListener" /> à insérer dans <see cref="T:System.Diagnostics.TraceListenerCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> n’est pas un objet <see cref="T:System.Diagnostics.TraceListener" />.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Supprime un objet de <see cref="T:System.Diagnostics.TraceListenerCollection" />.</summary>
      <param name="value">Objet à supprimer de <see cref="T:System.Diagnostics.TraceListenerCollection" />.</param>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.Count">
      <summary>Obtient le nombre d'écouteurs dans la liste.</summary>
      <returns>Nombre d'écouteurs dans la liste.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.Item(System.Int32)">
      <summary>Obtient ou définit le <see cref="T:System.Diagnostics.TraceListener" /> à l'index spécifié.</summary>
      <param name="i">Index de base zéro du <see cref="T:System.Diagnostics.TraceListener" /> à obtenir de la liste.</param>
      <exception cref="T:System.ArgumentNullException">La valeur est <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Diagnostics.TraceListener" /> avec l'index spécifié.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.Item(System.String)">
      <summary>Obtient le premier <see cref="T:System.Diagnostics.TraceListener" /> portant le nom spécifié dans la liste.</summary>
      <param name="name">Nom du <see cref="T:System.Diagnostics.TraceListener" /> à obtenir de la liste.</param>
      <returns>Premier <see cref="T:System.Diagnostics.TraceListener" /> dans la liste avec le <see cref="P:System.Diagnostics.TraceListener.Name" /> spécifié. Cet élément retourne <see langword="null" /> si <see cref="T:System.Diagnostics.TraceListener" /> avec le nom donné est introuvable.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Obtient une valeur indiquant si l’accès à <see cref="T:System.Diagnostics.TraceListenerCollection" /> est synchronisé (thread-safe).</summary>
      <returns>Toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à <see cref="T:System.Diagnostics.TraceListenerCollection" />.</summary>
      <returns>Objet <see cref="T:System.Diagnostics.TraceListenerCollection" /> actuel.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Diagnostics.TraceListenerCollection" /> est de taille fixe.</summary>
      <returns>Toujours <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Diagnostics.TraceListenerCollection" /> est en lecture seule.</summary>
      <returns>Toujours <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Obtient ou définit <see cref="T:System.Diagnostics.TraceListener" /> à l'index spécifié dans <see cref="T:System.Diagnostics.TraceListenerCollection" />.</summary>
      <param name="index">Index de base zéro du <paramref name="value" /> à obtenir.</param>
      <returns>
        <see cref="T:System.Diagnostics.TraceListener" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="T:System.Diagnostics.TraceOptions">
      <summary>Spécifie des options de données de trace à écrire dans la sortie de trace.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.Callstack">
      <summary>Écrivez la pile des appels qui est représentée par la valeur de retour de la propriété <see cref="P:System.Environment.StackTrace" />.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.DateTime">
      <summary>Écrivez la date et l'heure locales.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.LogicalOperationStack">
      <summary>Écrivez la pile des opérations logiques qui est représentée par la valeur de retour de la propriété <see cref="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" />.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.None">
      <summary>N'écrivez pas d'éléments.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.ProcessId">
      <summary>Écrivez l'identité du processus qui est représentée par la valeur de retour de la propriété <see cref="P:System.Diagnostics.Process.Id" />.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.ThreadId">
      <summary>Écrivez l'identité de thread qui est représentée par la valeur de retour de la propriété <see cref="P:System.Threading.Thread.ManagedThreadId" /> pour le thread actuel.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.Timestamp">
      <summary>Écrivez l'horodatage qui est représenté par la valeur de retour de la méthode <see cref="M:System.Diagnostics.Stopwatch.GetTimestamp" />.</summary>
    </member>
    <member name="T:System.Diagnostics.TraceSource">
      <summary>Fournit un jeu de méthodes et de propriétés qui permet aux applications d'effectuer le suivi de l'exécution du code et des messages de trace associés à leur source.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSource.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceSource" /> à l'aide du nom spécifié pour la source.</summary>
      <param name="name">Nom de la source (en général, le nom de l'application).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le <paramref name="name" /> est une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceSource" /> à l'aide du nom spécifié pour la source et du niveau de la source par défaut où le traçage doit se produire.</summary>
      <param name="name">Nom de la source, en général le nom de l'application.</param>
      <param name="defaultLevel">Une combinaison d'opérations de bits des valeurs d'énumération qui spécifient le niveau de la source par défaut où tracer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le <paramref name="name" /> est une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.Close">
      <summary>Ferme tous les écouteurs de la trace dans la collection d’écouteurs de la trace.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSource.Flush">
      <summary>Vide tous les écouteurs de la trace dans la collection d’écouteurs de la trace.</summary>
      <exception cref="T:System.ObjectDisposedException">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.GetSupportedAttributes">
      <summary>Obtient les attributs personnalisés pris en charge par la source de la trace.</summary>
      <returns>Tableau de chaînes qui nomme les attributs personnalisés pris en charge par la source de la trace, ou <see langword="null" /> s'il n'y a pas d'attributs personnalisés.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>Écrit les données de trace dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l'aide du type d'événement spécifié, de l'identificateur d'événement et des données de trace.</summary>
      <param name="eventType">Une des valeurs d'énumération qui spécifie le type de l'événement des données de trace.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="data">Données de trace.</param>
      <exception cref="T:System.ObjectDisposedException">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>Écrit les données de trace dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l’aide du type d’événement spécifié, de l’identificateur d’événement et des données de trace.</summary>
      <param name="eventType">Une des valeurs d'énumération qui spécifie le type de l'événement des données de trace.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="data">Tableau d'objets qui contient les données de trace.</param>
      <exception cref="T:System.ObjectDisposedException">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)">
      <summary>Écrit un message d’événement de trace dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l’aide du type d’événement spécifié et de l’identificateur d’événement.</summary>
      <param name="eventType">Une des valeurs d'énumération qui spécifie le type de l'événement des données de trace.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <exception cref="T:System.ObjectDisposedException">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>Écrit un message d’événement de trace dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l’aide du type d’événement spécifié, de l’identificateur d’événement et du message.</summary>
      <param name="eventType">Une des valeurs d'énumération qui spécifie le type de l'événement des données de trace.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="message">Message de trace à écrire.</param>
      <exception cref="T:System.ObjectDisposedException">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>Écrit un événement de trace dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l’aide du type d’événement spécifié, de l’identificateur d’événement, du tableau des arguments et du format.</summary>
      <param name="eventType">Une des valeurs d'énumération qui spécifie le type de l'événement des données de trace.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="format">Chaîne de format composite qui contient du texte avec aucun ou plusieurs éléments de mise en forme qui correspondent à des objets du tableau <paramref name="args" />.</param>
      <param name="args">
        <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas valide.  
  
- ou - 
Le nombre qui indique un argument à mettre en forme est inférieur à zéro ou supérieur ou égal au nombre d'objets spécifiés à mettre en forme.</exception>
      <exception cref="T:System.ObjectDisposedException">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceInformation(System.String)">
      <summary>Écrit un message d’information dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l’aide du message spécifié.</summary>
      <param name="message">Message d'information à écrire.</param>
      <exception cref="T:System.ObjectDisposedException">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])">
      <summary>Écrit un message d'information dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l'aide du tableau spécifié d'objets et des informations de mise en forme.</summary>
      <param name="format">Chaîne de format composite qui contient du texte avec aucun ou plusieurs éléments de mise en forme qui correspondent à des objets du tableau <paramref name="args" />.</param>
      <param name="args">Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas valide.  
  
- ou - 
Le nombre qui indique un argument à mettre en forme est inférieur à zéro ou supérieur ou égal au nombre d'objets spécifiés à mettre en forme.</exception>
      <exception cref="T:System.ObjectDisposedException">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)">
      <summary>Écrit un message de transfert de la trace dans les écouteurs de traçage de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l'aide de l'identificateur numérique spécifié, du message et de l'identificateur d'activité connexe.</summary>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="message">Message de trace à écrire.</param>
      <param name="relatedActivityId">Structure qui identifie l'activité connexe.</param>
    </member>
    <member name="P:System.Diagnostics.TraceSource.Attributes">
      <summary>Obtient les attributs de commutateur personnalisés définis dans le fichier de configuration de l'application.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringDictionary" /> qui contient les attributs personnalisés pour le commutateur de la trace.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSource.Listeners">
      <summary>Obtient la collection des écouteurs de la trace pour la source de trace.</summary>
      <returns>
        <see cref="T:System.Diagnostics.TraceListenerCollection" /> qui contient les écouteurs de la trace actifs associés à la source.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSource.Name">
      <summary>Obtient le nom de la source de trace.</summary>
      <returns>Nom de la source de trace.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSource.Switch">
      <summary>Obtient ou définit la valeur du commutateur source.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.TraceSource.Switch" /> a la valeur <see langword="null" />.</exception>
      <returns>Objet <see cref="T:System.Diagnostics.SourceSwitch" /> qui représente la valeur du commutateur source.</returns>
    </member>
    <member name="T:System.Diagnostics.TraceSwitch">
      <summary>Fournit un commutateur à plusieurs niveaux pour contrôler la sortie de traçage et de débogage sans recompiler votre code.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceSwitch" /> à l'aide du nom complet et de la description spécifiés.</summary>
      <param name="displayName">Nom à afficher dans l’interface utilisateur.</param>
      <param name="description">Description du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceSwitch" />, à l'aide du nom complet, de la description et de la valeur par défaut spécifiés pour le commutateur.</summary>
      <param name="displayName">Nom à afficher dans l’interface utilisateur.</param>
      <param name="description">Description du commutateur.</param>
      <param name="defaultSwitchValue">Valeur par défaut du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged">
      <summary>Met à jour et corrige le niveau de ce commutateur.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSwitch.OnValueChanged">
      <summary>Affecte l'entier équivalent de la propriété <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> à la propriété <see cref="P:System.Diagnostics.Switch.Value" />.</summary>
    </member>
    <member name="P:System.Diagnostics.TraceSwitch.Level">
      <summary>Obtient ou définit le niveau de trace qui détermine les messages que le commutateur autorise.</summary>
      <exception cref="T:System.ArgumentException">Une valeur ne faisant pas partie des valeurs <see cref="P:System.Diagnostics.TraceSwitch.Level" /> est affectée à <see cref="T:System.Diagnostics.TraceLevel" />.</exception>
      <returns>L’une des <see cref="T:System.Diagnostics.TraceLevel" /> valeurs qui spécifie le niveau des messages autorisés par le commutateur.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSwitch.TraceError">
      <summary>Obtient une valeur qui indique si le commutateur autorise des messages de gestion des erreurs.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Diagnostics.TraceSwitch.Level" /> a la valeur <see cref="F:System.Diagnostics.TraceLevel.Error" />, <see cref="F:System.Diagnostics.TraceLevel.Warning" />, <see cref="F:System.Diagnostics.TraceLevel.Info" /> ou <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSwitch.TraceInfo">
      <summary>Obtient une valeur qui indique si le commutateur autorise des messages d'information.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Diagnostics.TraceSwitch.Level" /> a la valeur <see cref="F:System.Diagnostics.TraceLevel.Info" /> ou <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSwitch.TraceVerbose">
      <summary>Obtient une valeur qui indique si le commutateur autorise tous les messages.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Diagnostics.TraceSwitch.Level" /> a la valeur <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSwitch.TraceWarning">
      <summary>Obtient une valeur qui indique si le commutateur autorise les messages d'avertissement.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Diagnostics.TraceSwitch.Level" /> a la valeur <see cref="F:System.Diagnostics.TraceLevel.Warning" />, <see cref="F:System.Diagnostics.TraceLevel.Info" /> ou <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> ; sinon, <see langword="false" />.</returns>
    </member>
  </members>
</doc>