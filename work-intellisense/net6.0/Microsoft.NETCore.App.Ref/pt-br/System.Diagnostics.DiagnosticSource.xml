<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary>Representa uma operação com contexto a ser usada para registro em log.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="operationName">O nome da operação.</param>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary>Atualiza <see cref="T:System.Diagnostics.Activity" /> para ter um novo item de bagagem com a chave e o valor especificados.</summary>
      <param name="key">A chave de bagagem.</param>
      <param name="value">O valor da bagagem.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddEvent(System.Diagnostics.ActivityEvent)">
      <summary>Adiciona o evento da atividade especificado à lista de eventos.</summary>
      <param name="e">O evento da atividade a ser adicionado.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.Object)">
      <summary>Atualiza a atividade para ter uma marcação com <paramref name="key" /> e <paramref name="value" /> adicionais.</summary>
      <param name="key">O nome da chave de marcação.</param>
      <param name="value">O valor de marcação mapeado para a chave de entrada.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary>Atualiza <see cref="T:System.Diagnostics.Activity" /> para ter uma nova marcação com os <paramref name="key" /> e <paramref name="value" /> fornecidos.</summary>
      <param name="key">A chave de marcação.</param>
      <param name="value">O valor da marcação.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Dispose">
      <summary>Interromperá a atividade se ela já tiver sido iniciada e notificará os ouvintes do evento. Caso contrário, nada acontecerá.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.Dispose(System.Boolean)">
      <summary>Quando for substituído por um tipo derivado, esse método liberará todos os recursos alocados.</summary>
      <param name="disposing">
        <see langword="false" /> caso o método esteja sendo chamado do finalizador e <see langword="true" /> caso esteja chamando do código do usuário.</param>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary>Retorna o valor de um par chave-valor adicionado para a atividade com <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />.</summary>
      <param name="key">A chave de bagagem.</param>
      <returns>O valor do item par chave-valor, se ele existir, ou <see langword="null" />, se ele não existir.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetCustomProperty(System.String)">
      <summary>Retorna o objeto mapeado para o nome de propriedade especificado.</summary>
      <param name="propertyName">O nome associado ao objeto.</param>
      <returns>O objeto mapeado para o nome de propriedade, se for encontrado; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetCustomProperty(System.String,System.Object)">
      <summary>Anexa qualquer objeto personalizado à atividade. Se o <paramref name="propertyName" /> especificado tiver sido associado anteriormente a outro objeto, a propriedade será atualizada para ser associada ao novo <paramref name="propertyValue" />. É recomendável usar um nome de propriedade exclusivo para evitar conflitos com qualquer pessoa que use o mesmo valor.</summary>
      <param name="propertyName">O nome ao qual associar o valor.</param>
      <param name="propertyValue">O objeto a ser anexado e mapeado para o nome da propriedade.</param>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary>Atualiza <see cref="T:System.Diagnostics.Activity" /> para definir <see cref="P:System.Diagnostics.Activity.Duration" /> como a diferença entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> e a hora de término especificada.</summary>
      <param name="endTimeUtc">A hora de término do UTC.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary>Define o formato da ID neste <see cref="T:System.Diagnostics.Activity" /> antes que seja iniciado.</summary>
      <param name="format">Um dos valores de enumeração que especifica o formato da propriedade <see cref="P:System.Diagnostics.Activity.Id" />.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary>Define a ID pai usando a convenção W3C de um TraceId e um SpanId.</summary>
      <param name="traceId">O TraceId da atividade pai.</param>
      <param name="spanId">O SpanId da atividade pai.</param>
      <param name="activityTraceFlags">Um dos valores de enumeração que especifica sinalizadores definidos pelo padrão W3C associados a uma atividade.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary>Atualiza este <see cref="T:System.Diagnostics.Activity" /> para indicar que o <see cref="T:System.Diagnostics.Activity" /> com uma ID <paramref name="parentId" /> causou este <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="parentId">A ID da operação pai.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary>Define a hora de início deste <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="startTimeUtc">A hora de início de <see cref="T:System.Diagnostics.Activity" /> em UTC.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetTag(System.String,System.Object)">
      <summary>Adiciona ou atualiza a marcação de atividade com a chave de entrada e o valor.</summary>
      <param name="key">O nome da chave de marcação.</param>
      <param name="value">O valor de marcação mapeado para a chave de entrada.</param>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary>Inicia a atividade.</summary>
      <returns>
        <see langword="this" /> para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary>Interrompe a atividade.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary>Obtém os sinalizadores (definidos pela especificação de ID W3C) associados à atividade.</summary>
      <returns>os sinalizadores associados à atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary>Obtém uma coleção de pares chave/valor que representa as informações que são passadas para os filhos deste <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>Uma enumeração de pares chave-valor da cadeia de caracteres.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Context">
      <summary>Obtém o contexto da atividade. O contexto se tornará válido somente se a atividade tiver sido iniciada.</summary>
      <returns>O contexto da atividade, se a atividade tiver sido iniciada; caso contrário, retorna o contexto padrão.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary>Obtém ou define a operação atual (<see cref="T:System.Diagnostics.Activity" />) do thread atual.  Isso flui entre as chamadas assíncronas.</summary>
      <returns>A operação atual para o thread atual.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary>Obtém ou define o formato da ID padrão para o <see cref="T:System.Diagnostics.Activity" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.DisplayName">
      <summary>Obtém ou define o nome de exibição da atividade.</summary>
      <returns>Uma cadeia de caracteres que representa o nome de exibição da atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary>Obtém a duração da operação.</summary>
      <returns>O Delta entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> e a hora de término, se o <see cref="T:System.Diagnostics.Activity" /> tiver terminado ( <see cref="M:System.Diagnostics.Activity.Stop" /> ou <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> se foi chamado), ou <see cref="F:System.TimeSpan.Zero" /> se o <see cref="T:System.Diagnostics.Activity" /> não foi concluído e <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> não foi chamado.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Events">
      <summary>Obtém a lista de todos os eventos anexados à atividade.</summary>
      <returns>Uma enumeração de eventos de atividade anexados a esta atividade. Se a atividade não tiver eventos, o retornará uma enumeração vazia.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary>Obtém ou define um valor que determina se o <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> sempre é usado para definir o formato da ID padrão.</summary>
      <returns>
        <see langword="true" /> para sempre usar o <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> ; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary>Obtém um identificador que é específico para uma determinada solicitação.</summary>
      <returns>A ID da atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary>Obtém o formato do <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>O formato para o <see cref="P:System.Diagnostics.Activity.Id" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IsAllDataRequested">
      <summary>Indica se a atividade deve ser preenchida com todas as informações de propagação, bem como todas as outras propriedades, como links, marcações e eventos.</summary>
      <returns>
        <see langword="true" /> se a atividade deve ser populada; <see langword="false" /> caso contrário.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Kind">
      <summary>Obtém a relação entre a atividade, seus pais e seus filhos em um rastreamento.</summary>
      <returns>Um dos valores de enumeração que indicam a relação entre a atividade, seus pais e seus filhos em um rastreamento.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Links">
      <summary>Obtém a lista de todos os links de atividade anexados à atividade.</summary>
      <returns>Uma enumeração de links de atividade anexados a esta atividade. Se a atividade não tiver links, o retornará uma enumeração vazia.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary>Obtém o nome da operação.</summary>
      <returns>O nome da operação.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary>Obtém o <see cref="T:System.Diagnostics.Activity" /> pai que criou essa atividade.</summary>
      <returns>O pai disso <see cref="T:System.Diagnostics.Activity" /> , se for do mesmo processo, ou <see langword="null" /> se essa instância não tiver um pai (é uma atividade raiz) ou se o pai estiver fora do processo.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary>Obtém a ID do pai dessa atividade.</summary>
      <returns>A ID pai, se houver, ou <see langword="null" /> se não tiver.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary>Obtém o <see cref="P:System.Diagnostics.Activity.SpanId" /> do pai.</summary>
      <returns>O <see cref="P:System.Diagnostics.Activity.SpanId" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary>Obtém um valor que indica se o sinalizador W3CIdFlags.Recorded foi definido.</summary>
      <returns>
        <see langword="true" /> Se o sinalizador W3CIdFlags. grave for definido; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary>Obtém a ID de raiz deste <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>A ID raiz ou <see langword="null" /> se a instância atual tiver um <see cref="P:System.Diagnostics.Activity.ParentId" /> ou um <see cref="P:System.Diagnostics.Activity.Id" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Source">
      <summary>Obtém a fonte associada à atividade.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary>Obtém a parte SPAN do <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>A ID da parte SPAN de <see cref="P:System.Diagnostics.Activity.Id" /> , se o <see cref="T:System.Diagnostics.Activity" /> tiver o formato W3C; caso contrário, um zero <see langword="SpanId" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary>Obtém a hora de quando a operação foi iniciada.</summary>
      <returns>A hora UTC em que a operação foi iniciada.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TagObjects">
      <summary>Retorna a lista de marcações que representam as informações a serem registradas com a atividade. Essas informações não são passadas para os filhos da atividade.</summary>
      <returns>Uma enumeração de pares chave-valor de marcas e objetos.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary>Obtém uma coleção de pares chave/valor que representam informações que serão registradas com o <see cref="T:System.Diagnostics.Activity" /> no sistema de registro em log.</summary>
      <returns>Uma enumeração de String-String-Value-pairs.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary>Obtém a parte TraceId do <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>A ID da parte TraceID do <see cref="P:System.Diagnostics.Activity.Id" /> , se a ID tiver o formato W3C; caso contrário, um TraceID zero.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary>Obtém o cabeçalho <see langword="tracestate" /> W3C.</summary>
      <returns>O <see langword="tracestate" /> cabeçalho W3C.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityContext">
      <summary>Uma representação que está em conformidade com a especificação de TraceContext do W3C. Contém dois identificadores: um TraceId e um SpanId, com um conjunto de valores de TraceFlags em comum e TraceState específicos do sistema.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.#ctor(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags,System.String,System.Boolean)">
      <summary>Constrói uma nova instância de contexto de atividade usando os argumentos especificados.</summary>
      <param name="traceId">Um identificador de rastreamento.</param>
      <param name="spanId">Um identificador de trecho.</param>
      <param name="traceFlags">Contém detalhes sobre o rastreamento.</param>
      <param name="traceState">Transporta dados de configuração específicos do sistema.</param>
      <param name="isRemote">Indica se o contexto é propagado de um pai remoto.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Equals(System.Diagnostics.ActivityContext)">
      <summary>Indica se o objeto atual é igual a outro objeto do mesmo tipo.</summary>
      <param name="value">O objeto a ser comparado com essa instância.</param>
      <returns>
        <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="other" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Equals(System.Object)">
      <summary>Determina se essa instância e um objeto <see langword="ActivityContext" /> especificado têm o mesmo valor.</summary>
      <param name="obj">O objeto a ser comparado com essa instância.</param>
      <returns>
        <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="obj" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.GetHashCode">
      <summary>Fornece uma função de hash para o <see langword="ActivityContext" /> atual que seja adequada para algoritmos de hash e estruturas de dados, como tabelas de hash.</summary>
      <returns>Um código hash do <see langword="ActivityContext" /> atual.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.op_Equality(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityContext)">
      <summary>Determina se os dois valores especificados de <see langword="ActivityContext" /> são iguais.</summary>
      <param name="left">O primeiro valor a ser comparado.</param>
      <param name="right">O segundo valor a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.op_Inequality(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityContext)">
      <summary>Determina se os dois valores especificados de <see langword="ActivityContext" /> não são iguais.</summary>
      <param name="left">O primeiro valor a ser comparado.</param>
      <param name="right">O segundo valor a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> não forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Parse(System.String,System.String)">
      <summary>Analisa cabeçalhos de contexto do rastreamento W3C para um objeto <see cref="T:System.Diagnostics.ActivityContext" />.</summary>
      <param name="traceParent">O cabeçalho pai do rastreamento W3C.</param>
      <param name="traceState">O estado do rastreamento.</param>
      <exception cref="T:System.ArgumentException">O pai de rastreamento é inválido.</exception>
      <returns>O objeto <see cref="T:System.Diagnostics.ActivityContext" /> criado com base na operação de análise.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.TryParse(System.String,System.String,System.Diagnostics.ActivityContext@)">
      <summary>Tenta analisar cabeçalhos de contexto do rastreamento W3C para um objeto <see cref="T:System.Diagnostics.ActivityContext" />.</summary>
      <param name="traceParent">O cabeçalho pai do rastreamento W3C.</param>
      <param name="traceState">O estado do rastreamento W3C.</param>
      <param name="context">Quando esse método retorna <see langword="true" />, o objeto <see cref="T:System.Diagnostics.ActivityContext" /> criado com base na operação de análise.</param>
      <returns>
        <see langword="true" /> se a análise tiver sido bem-sucedida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.IsRemote">
      <summary>Indica se o contexto da atividade foi propagado de um pai remoto.</summary>
      <returns>
        <see langword="true" /> Se ele foi propagado de um pai remoto; <see langword="false" /> caso contrário.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.SpanId">
      <summary>A ID da solicitação como conhecida pelo chamador.</summary>
      <returns>A ID de extensão no contexto.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceFlags">
      <summary>Os sinalizadores definidos pelo padrão W3C, com a ID da atividade.</summary>
      <returns>Os sinalizadores de rastreamento de contexto.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceId">
      <summary>O identificador do rastreamento.</summary>
      <returns>O identificador de rastreamento no contexto.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceState">
      <summary>Contém o cabeçalho "tracestate" do W3C.</summary>
      <returns>Uma cadeia de caracteres que representa o cabeçalho ' tracestate ' do W3C.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityCreationOptions`1">
      <summary>Encapsula todas as informações que são enviadas para o ouvinte da atividade, para tomar decisões sobre a criação da instância da atividade, bem como seu estado.

Os parâmetros de tipo genérico possíveis são <see cref="T:System.Diagnostics.ActivityContext" /> ou <see cref="T:System.String" />.</summary>
      <typeparam name="T">O tipo da <see langword="Parent" /> propriedade. Deve ser <see cref="T:System.String" /> ou <see langword="ActivityContext" />.</typeparam>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Kind">
      <summary>Obtém o tipo de atividade com o qual a atividade será criada.</summary>
      <returns>Um dos valores de enumeração que representam um tipo de atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Links">
      <summary>Obtém a enumeração dos links com o qual a atividade será criada.</summary>
      <returns>Uma enumeração de links de atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Name">
      <summary>Obtém o nome a ser usado como OperationName da atividade que será criada.</summary>
      <returns>Uma cadeia de caracteres que representa o nome da atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Parent">
      <summary>Obtém a ID pai ou o contexto com o qual a atividade será criada.</summary>
      <returns>O pai da atividade, representado como um <see cref="T:System.String" /> ou como um <see cref="T:System.Diagnostics.ActivityContext" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.SamplingTags">
      <summary>Obtém a coleção usada para adicionar mais marcas durante o processo de amostragem. As marcas adicionadas também serão adicionadas à atividade criada se for decidido que ela deve ser criada pelos retornos de chamada <see cref="T:System.Diagnostics.ActivityListener" />.</summary>
      <returns>A coleção de marcas de atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Source">
      <summary>Obtém a fonte de criação da atividade.</summary>
      <returns>Um objeto de origem da atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Tags">
      <summary>Obtém as marcas com as quais a atividade será criada.</summary>
      <returns>Uma enumeração de pares chave-valor de marcas associadas à atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.TraceId">
      <summary>Obtém a ID de rastreamento a ser usada no objeto de atividade se ficou decidido que ele deve ser criado por retornos de chamada <see cref="T:System.Diagnostics.ActivityListener" />.</summary>
      <returns>A ID de rastreamento.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityEvent">
      <summary>Representa um evento que contém um nome e um carimbo de data/hora, bem como uma lista de marcações opcionais.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityEvent.#ctor(System.String)">
      <summary>Inicializa uma nova instância do evento da atividade usando o nome especificado e a hora atual como o carimbo de data/hora do evento.</summary>
      <param name="name">O nome do evento.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityEvent.#ctor(System.String,System.DateTimeOffset,System.Diagnostics.ActivityTagsCollection)">
      <summary>Inicializa uma nova instância de evento da atividade usando o nome, as marcações e o carimbo de data/hora especificados.</summary>
      <param name="name">O nome do evento.</param>
      <param name="timestamp">O carimbo de data/hora do evento. O carimbo de data/hora só deve ser usado para os eventos que ocorreram no passado, não no momento da chamada.</param>
      <param name="tags">As marcações de evento.</param>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Name">
      <summary>Obtém o nome do evento da atividade.</summary>
      <returns>Uma cadeia de caracteres que representa o nome do evento de atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Tags">
      <summary>Obtém a coleção de marcações associadas ao evento.</summary>
      <returns>Uma enumeração de par chave-valor que contém as marcas associadas ao evento.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Timestamp">
      <summary>Obtém o carimbo de data/hora do evento da atividade.</summary>
      <returns>Um deslocamento DateTime que representa o carimbo de data/hora do evento de atividade.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary>Especifica o formato da propriedade <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary>O formato hierárquico.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary>Um formato desconhecido.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary>O formato W3C.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityKind">
      <summary>Descreve a relação entre a atividade, seus pais e seus filhos em um rastreamento.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Client">
      <summary>Solicitação de saída para o componente externo.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Consumer">
      <summary>Saída recebida de um componente externo.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Internal">
      <summary>Operação interna em um aplicativo, em oposição às operações com pais ou filhos remotos. Este é o valor padrão.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Producer">
      <summary>Saída fornecida para componentes externos.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Server">
      <summary>Solicitações recebidas do componente externo.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityLink">
      <summary>As atividades podem estar vinculadas a zero ou mais instâncias de contexto da atividade casualmente relacionadas.

Links de atividade podem apontar para contextos de atividade dentro de um único rastreamento ou entre rastreamentos diferentes.

Os links de atividade podem ser usados para representar operações em lote em que uma atividade foi iniciada por várias atividades de inicialização, cada uma representando um único item de entrada sendo processado no lote.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.#ctor(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityTagsCollection)">
      <summary>Constrói um link de atividade, que pode ser vinculado a uma atividade.</summary>
      <param name="context">O contexto da atividade de rastreamento.</param>
      <param name="tags">A lista de pares chave-valor de marcações associadas ao contexto da atividade.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.Equals(System.Diagnostics.ActivityLink)">
      <summary>Indica se o link da atividade atual é igual a outro link da atividade.</summary>
      <param name="value">O link da atividade para comparar.</param>
      <returns>
        <see langword="true" /> se o link da atividade atual for igual a <paramref name="other" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.Equals(System.Object)">
      <summary>Indica se o link da atividade atual é igual a outro objeto.</summary>
      <param name="obj">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se o link da atividade atual for igual a <paramref name="obj" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.GetHashCode">
      <summary>Fornece uma função de hash para o <see langword="ActivityLink" /> atual que seja adequada para algoritmos de hash e estruturas de dados, como tabelas de hash.</summary>
      <returns>Um código hash do <see langword="ActivityLink" /> atual.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.op_Equality(System.Diagnostics.ActivityLink,System.Diagnostics.ActivityLink)">
      <summary>Determina se os dois valores especificados de <see langword="ActivityLink" /> são iguais.</summary>
      <param name="left">O primeiro valor a ser comparado.</param>
      <param name="right">O segundo valor a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.op_Inequality(System.Diagnostics.ActivityLink,System.Diagnostics.ActivityLink)">
      <summary>Determina se os dois valores especificados de <see langword="ActivityLink" /> não são iguais.</summary>
      <param name="left">O primeiro valor a ser comparado.</param>
      <param name="right">O segundo valor a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> não forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityLink.Context">
      <summary>Recupera o contexto da atividade dentro do link de atividade.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityLink.Tags">
      <summary>Recupera a enumeração de pares chave-valor de marcações anexadas ao contexto da atividade.</summary>
      <returns>Uma enumeração de marcas anexadas ao contexto da atividade.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityListener">
      <summary>Permite ouvir os eventos de início e parada de atividade e dá a oportunidade de decidir sobre a criação de uma atividade para cenários de amostragem.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityListener.#ctor">
      <summary>Constrói um objeto ouvinte da atividade para começar a ouvir os eventos da atividade.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityListener.Dispose">
      <summary>Cancela o registro do objeto ouvinte da atividade na escuta de eventos da atividade.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ActivityStarted">
      <summary>Obtém ou define o retorno de chamada usado para ouvir o evento de início da atividade.</summary>
      <returns>Uma instância de retorno de chamada de atividade usada para escutar o evento de início da atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ActivityStopped">
      <summary>Obtém ou define o retorno de chamada usado para ouvir o evento de parada da atividade.</summary>
      <returns>Uma instância de retorno de chamada de atividade usada para escutar o evento de parada da atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.Sample">
      <summary>Obtém ou define o retorno de chamada usado para decidir se a criação de objetos <see cref="T:System.Diagnostics.Activity" /> com um estado de dados específico é permitida.</summary>
      <returns>Uma instância de atividade de exemplo.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.SampleUsingParentId">
      <summary>Obtém ou define o retorno de chamada usado para decidir se a criação de objetos <see cref="T:System.Diagnostics.Activity" /> com um estado de dados específico é permitida.</summary>
      <returns>Uma instância de atividade de exemplo.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ShouldListenTo">
      <summary>Obtém ou define o retorno de chamada que permite decidir se os eventos do objeto de atividade criados usando o objeto da fonte de atividades devem ser ouvidos ou não.</summary>
      <returns>
        <see langword="true" /> para escutar eventos; <see langword="false" /> caso contrário.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivitySamplingResult">
      <summary>Valores de enumeração usados pelo <see cref="T:System.Diagnostics.ActivityListener" /> para indicar a quantidade de dados a serem coletados para o <see cref="T:System.Diagnostics.Activity" /> relacionado. Solicitar mais dados causa uma sobrecarga maior de desempenho.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.AllData">
      <summary>O objeto de atividade deve ser populado com todas as informações de propagação e também todas as outras propriedades como Links, Marcas e Eventos. Usar esse valor faz com que <see cref="P:System.Diagnostics.Activity.IsAllDataRequested" /> retorne <see langword="true" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.AllDataAndRecorded">
      <summary>O objeto de atividade deve ser populado da mesma forma que <see cref="F:System.Diagnostics.ActivitySamplingResult.AllData" /> quanto a maiúsculas e minúsculas. Além disso, Activity.Recorded é definido como <see langword="true" />. Para atividades que usam as IDs do rastreamento W3C, isso define um bit de sinalizador na ID que será propagada downstream solicitando que o rastreamento seja gravado em todos os lugares.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.None">
      <summary>O objeto de atividade não precisa ser criado.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.PropagationData">
      <summary>O objeto de atividade precisa ser criado. Ele terá um Nome, uma Origem, uma ID e Bagagem. Outras propriedades são desnecessárias e serão ignoradas por esse ouvinte.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySource">
      <summary>Fornece APIs para criar e iniciar objetos <see cref="T:System.Diagnostics.Activity" />, bem como registrar objetos <see cref="T:System.Diagnostics.ActivityListener" /> para escutar eventos <see cref="T:System.Diagnostics.Activity" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.#ctor(System.String,System.String)">
      <summary>Constrói um objeto da fonte de atividades com o <paramref name="name" /> especificado.</summary>
      <param name="name">O nome do objeto da fonte de atividades.</param>
      <param name="version">A versão do componente que publica as informações de rastreamento.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.AddActivityListener(System.Diagnostics.ActivityListener)">
      <summary>Adiciona um ouvinte aos eventos de início e parada da atividade.</summary>
      <param name="listener">O objeto ouvinte da atividade a ser usado para escutar os eventos da atividade.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.Dispose">
      <summary>Descarta o objeto da fonte de atividades, remove a instância atual da lista global e esvazia a lista de ouvintes.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.HasListeners">
      <summary>Verifica se há ouvintes para a fonte de atividades.</summary>
      <returns>
        <see langword="true" /> caso haja um ouvinte registrado para essa fonte de atividades. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind)">
      <summary>Criará uma atividade se houver ouvintes ativos para ela, usando o nome e o tipo de atividade especificados.</summary>
      <param name="name">O nome da operação da atividade.</param>
      <param name="kind">O tipo de atividade.</param>
      <returns>O objeto da atividade criado, se tiver ouvintes ativos, ou <see langword="null" />, se não tiver ouvintes do evento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind,System.Diagnostics.ActivityContext,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset)">
      <summary>Criará uma atividade se houver ouvintes ativos para ela, usando o nome especificado, o tipo de atividade, o contexto da atividade pai, as marcações, o link de atividade opcional e a hora de início opcional.</summary>
      <param name="name">O nome da operação da atividade.</param>
      <param name="kind">O tipo de atividade.</param>
      <param name="parentContext">O objeto <see cref="T:System.Diagnostics.ActivityContext" /> pai para inicializar o objeto com o qual a atividade foi criada.</param>
      <param name="tags">A lista de marcações opcionais para inicializar o objeto com o qual a atividade foi criada.</param>
      <param name="links">A lista de <see cref="T:System.Diagnostics.ActivityLink" /> opcionais para inicializar o objeto com o qual a atividade foi criada.</param>
      <param name="startTime">O carimbo de data/hora de início opcional para definir no objeto de atividade criado.</param>
      <returns>O objeto da atividade criado, se tiver ouvintes ativos, ou <see langword="null" />, se não tiver ouvintes do evento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset)">
      <summary>Criará uma atividade se houver ouvintes ativos para ela, usando o nome especificado, o tipo de atividade, a ID pai, as marcações, os links de atividade opcionais e a hora de início opcional.</summary>
      <param name="name">O nome da operação da atividade.</param>
      <param name="kind">O tipo de atividade.</param>
      <param name="parentId">A ID pai para inicializar o objeto com o qual a atividade foi criada.</param>
      <param name="tags">A lista de marcações opcionais para inicializar o objeto com o qual a atividade foi criada.</param>
      <param name="links">A lista de <see cref="T:System.Diagnostics.ActivityLink" /> opcionais para inicializar o objeto com o qual a atividade foi criada.</param>
      <param name="startTime">O carimbo de data/hora de início opcional para definir no objeto de atividade criado.</param>
      <returns>O objeto da atividade criado, se tiver ouvintes ativos, ou <see langword="null" />, se não tiver ouvintes do evento.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivitySource.Name">
      <summary>Retorna o nome da fonte de atividades.</summary>
      <returns>Uma cadeia de caracteres que representa o nome da origem da atividade.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivitySource.Version">
      <summary>Retorna a versão da fonte de atividades.</summary>
      <returns>Uma cadeia de caracteres que representa a versão de origem da atividade.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary>Representa um <see cref="P:System.Diagnostics.Activity.SpanId" /> formatado com base em um padrão W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary>Copia os 8 bytes do <see cref="T:System.Diagnostics.ActivitySpanId" /> atual para um intervalo especificado.</summary>
      <param name="destination">O intervalo para o qual os 8 bytes da SpanID devem ser copiados.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Cria um valor <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um intervalo somente leitura de 8 bytes.</summary>
      <param name="idData">Um intervalo somente leitura de oito bytes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> não contém oito bytes.</exception>
      <returns>A nova ID do intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Cria um valor <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um intervalo somente leitura de 16 caracteres hexadecimais.</summary>
      <param name="idData">Um intervalo que contém 16 caracteres hexadecimais.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> não contém 16 caracteres hexadecimais.

- ou - 
Os caracteres em <paramref name="idData" /> não são todos caracteres hexadecimais em minúsculas ou todos zeros.</exception>
      <returns>A nova ID do intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Cria um valor <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um intervalo somente leitura de bytes codificados por UTF8.</summary>
      <param name="idData">Um intervalo somente leitura de bytes codificados por UTF8.</param>
      <returns>A nova ID do intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary>Cria um <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um número aleatório (que muito provavelmente seja exclusivo).</summary>
      <returns>A nova ID do intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary>Determina se essa instância e a instância de <see cref="T:System.Diagnostics.ActivitySpanId" /> especificada têm o mesmo valor.</summary>
      <param name="spanId">A instância a ser comparada.</param>
      <returns>
        <see langword="true" /> se <paramref name="spanId" /> tiver o mesmo valor hexadecimal que a instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary>A instância atual e um objeto especificado, que também deve ser uma instância de <see cref="T:System.Diagnostics.ActivitySpanId" />, têm o mesmo valor.</summary>
      <param name="obj">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> for uma instância de <see cref="T:System.Diagnostics.ActivitySpanId" /> e tiver o mesmo valor hexadecimal que a instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary>Retorna o código hash do SpanId.</summary>
      <returns>O código hash do SpanId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Determina se duas instâncias de <see cref="T:System.Diagnostics.ActivitySpanId" /> especificadas têm o mesmo valor.</summary>
      <param name="spanId1">A primeira instância a ser comparada.</param>
      <param name="spandId2">A segunda instância a ser comparada.</param>
      <returns>
        <see langword="true" /> se o SpanId de <paramref name="spanId1" /> for o mesmo que o SpanId de <paramref name="spandId2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Determina se duas instâncias de <see cref="T:System.Diagnostics.ActivitySpanId" /> especificadas têm valores diferentes.</summary>
      <param name="spanId1">A primeira instância a ser comparada.</param>
      <param name="spandId2">A segunda instância a ser comparada.</param>
      <returns>
        <see langword="true" /> se o SpanId de <paramref name="spanId1" /> for diferente do SpanId de <paramref name="spandId2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary>Retorna uma cadeia de 16 caracteres hexadecimais que representa a ID do intervalo.</summary>
      <returns>A representação da cadeia de 16 caracteres hexadecimais dessa ID de intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary>Retorna uma cadeia de 16 caracteres hexadecimais que representa a ID do intervalo.</summary>
      <returns>A representação da cadeia de 16 caracteres hexadecimais dessa ID de intervalo.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTagsCollection">
      <summary>ActivityTagsCollection é uma classe de coleção usada para armazenar marcas de rastreamento.

Esta coleção será usada com classes como <see cref="T:System.Diagnostics.ActivityEvent" /> e <see cref="T:System.Diagnostics.ActivityLink" />.

A coleção se comporta da seguinte maneira: – Os itens da coleção serão ordenados de acordo com a maneira como são adicionados.
– Não permitir a duplicação de itens com a mesma chave.
– Ao usar o indexador para armazenar um item na coleção: – Se o item tiver uma chave que existia anteriormente na coleção e o valor for <see langword="null" />, o item da coleção correspondente à chave será removido da coleção.
– Se o item tiver uma chave que existia anteriormente na coleção e o valor não for <see langword="null" />, o novo valor do item substituirá o valor antigo armazenado na coleção.
– Caso contrário, o item será adicionado à coleção.
– O método Adicionar acrescentará um novo item à coleção se um item ainda não existir com a mesma chave. Caso contrário, ele gerará uma exceção.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.#ctor">
      <summary>Cria uma instância da coleção.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Cria uma instância da coleção e armazene os itens da lista de entrada na coleção.</summary>
      <param name="list">Lista inicial a ser armazenada na coleção.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adiciona um item à coleção</summary>
      <param name="item">Par de chave e valor da marca a ser adicionada à coleção.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="item" /> já existe na lista.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Add(System.String,System.Object)">
      <summary>Adiciona uma marca com a chave e o valor fornecidos à coleção. Essa coleção não permite adicionar duas marcas com a mesma chave.</summary>
      <param name="key">A chave de marcação.</param>
      <param name="value">O valor da marcação.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Clear">
      <summary>Remove todos os itens da coleção.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determinará se o <see cref="T:System.Collections.Generic.ICollection`1" /> contiver um valor específico.</summary>
      <param name="item">O objeto a ser localizado no <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> for encontrado no <see cref="T:System.Collections.Generic.ICollection`1" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.ContainsKey(System.String)">
      <summary>Determina se a coleção contém um elemento com a chave especificada.</summary>
      <param name="key">A chave a ser localizada no <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <returns>
        <see langword="true" /> se a coleção contiver a marca com essa chave. <see langword="false" /> caso contrário.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia os elementos da coleção em uma matriz, começando em um índice de matriz específico.</summary>
      <param name="array">A matriz de destino dos elementos copiados da coleção.</param>
      <param name="arrayIndex">O índice de base zero na matriz no qual a cópia começa.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.GetEnumerator">
      <summary>Retorna um enumerador que itera pela coleção.</summary>
      <returns>Um enumerador para o <see langword="ActivityTagsCollection" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Remove a primeira ocorrência de um item específico da coleção.</summary>
      <param name="item">O par chave-valor da marca a ser removido.</param>
      <returns>
        <see langword="true" /> se o item foi removido com êxito da coleção; caso contrário, <see langword="false" />. Esse método também retornará <see langword="false" /> se o item não for encontrado na coleção original.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Remove(System.String)">
      <summary>Remove a marca com a chave especificada da coleção.</summary>
      <param name="key">A chave de marcação.</param>
      <returns>
        <see langword="true" /> se o item existia e foi removido. <see langword="false" /> caso contrário.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary>Retorna um enumerador que itera pela coleção.</summary>
      <returns>Um enumerador que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que itera pela coleção.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.TryGetValue(System.String,System.Object@)">
      <summary>Obtém o valor associado à chave especificada.</summary>
      <param name="key">A chave de marcação.</param>
      <param name="value">O valor da marcação.</param>
      <returns>Quando este método retorna, o valor associado à chave especificada, se a chave for localizada; caso contrário, o valor padrão do tipo do parâmetro do valor. Este parâmetro é passado não inicializado.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Count">
      <summary>Obtém o número de elementos contidos na coleção.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.IsReadOnly">
      <summary>Obtém um valor que indica se a coleção é somente leitura. Isso sempre retorna <see langword="false" />.</summary>
      <returns>Sempre retorna <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Item(System.String)">
      <summary>Obtém ou define um item da coleção especificado.
        
Ao definir um valor para essa propriedade do indexador, o seguinte comportamento será observado: caso já exista uma chave na coleção e o valor seja <see langword="null" />, o item da coleção correspondente à chave será removido da coleção.
– Se a chave que existia anteriormente na coleção e o valor não for <see langword="null" />, o valor substituirá o valor antigo armazenado na coleção.
– Caso contrário, o novo item será adicionado à coleção.</summary>
      <param name="key">A chave do valor a ser obtido ou definido.</param>
      <returns>O objeto mapeado para a chave.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Keys">
      <summary>Obtém a lista das chaves de todas as marcas armazenadas.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Values">
      <summary>Obtém a lista dos valores de todas as marcas armazenadas.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTagsCollection.Enumerator">
      <summary>Enumera os elementos de um <see langword="ActivityTagsCollection" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.Dispose">
      <summary>Realiza tarefas definidas pelo aplicativo associadas à liberação ou à redefinição de recursos não gerenciados.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.MoveNext">
      <summary>Avança o enumerador para o próximo elemento da coleção.</summary>
      <returns>
        <see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador passou o final da coleção.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Enumerator.Current">
      <summary>Obtém o elemento na coleção na posição atual do enumerador.</summary>
      <returns>O elemento na coleção na posição atual do enumerador.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Obtém o elemento na coleção na posição atual do enumerador.</summary>
      <returns>O elemento na coleção na posição atual do enumerador.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary>Especifica sinalizadores definidos pelo padrão W3C associados a uma atividade.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary>A atividade não foi marcada.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary>A atividade (ou, mais provavelmente, suas atividades pai) foi marcada como útil para ser registrada.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary>Representa um <see cref="P:System.Diagnostics.Activity.TraceId" /> cujo formato se baseia em um padrão W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary>Copia os 16 bytes do <see cref="T:System.Diagnostics.ActivityTraceId" /> atual para um intervalo especificado.</summary>
      <param name="destination">O intervalo para o qual os 16 bytes da ID do rastreamento devem ser copiados.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Cria um valor <see cref="T:System.Diagnostics.ActivityTraceId" /> com base em um intervalo somente leitura de 16 bytes.</summary>
      <param name="idData">Um intervalo somente leitura de 16 bytes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> não contém oito bytes.</exception>
      <returns>A nova ID de rastreamento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Cria um valor <see cref="T:System.Diagnostics.ActivityTraceId" /> com base em um intervalo somente leitura de 32 caracteres hexadecimais.</summary>
      <param name="idData">Um intervalo que contém 32 caracteres hexadecimais.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> não contém 16 caracteres hexadecimais.

- ou -

Os caracteres em <paramref name="idData" /> não são todos caracteres hexadecimais em minúsculas ou todos zeros.</exception>
      <returns>A nova ID de rastreamento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Cria um valor <see cref="T:System.Diagnostics.ActivityTraceId" /> com base em um intervalo somente leitura de bytes codificados por UTF8.</summary>
      <param name="idData">Um intervalo somente leitura de bytes codificados por UTF8.</param>
      <returns>A nova ID de rastreamento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary>Cria um <see cref="T:System.Diagnostics.ActivitySpanId" /> com base em um número aleatório (que muito provavelmente seja exclusivo).</summary>
      <returns>A nova ID do intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary>Determina se a instância atual e um <see cref="T:System.Diagnostics.ActivityTraceId" /> especificado são iguais.</summary>
      <param name="traceId">A instância a ser comparada.</param>
      <returns>
        <see langword="true" /> se <paramref name="traceId" /> tiver o mesmo valor hexadecimal que a instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary>Determina se essa instância e um objeto especificado, que também deve ser uma instância de <see cref="T:System.Diagnostics.ActivityTraceId" />, têm o mesmo valor.</summary>
      <param name="obj">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> for uma instância de <see cref="T:System.Diagnostics.ActivityTraceId" /> e tiver o mesmo valor hexadecimal que a instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary>Retorna o código hash do TraceId.</summary>
      <returns>O código hash do TraceId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Determina se duas instâncias de <see cref="T:System.Diagnostics.ActivityTraceId" /> especificadas têm o mesmo valor.</summary>
      <param name="traceId1">A primeira instância a ser comparada.</param>
      <param name="traceId2">A segunda instância a ser comparada.</param>
      <returns>
        <see langword="true" /> se o TraceId de <paramref name="traceId1" /> for o mesmo que o TraceId de <paramref name="traceId2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Determina se duas instâncias de <see cref="T:System.Diagnostics.ActivityTraceId" /> especificadas têm o mesmo valor.</summary>
      <param name="traceId1">A primeira instância a ser comparada.</param>
      <param name="traceId2">A segunda instância a ser comparada.</param>
      <returns>
        <see langword="true" /> se o TraceId de <paramref name="traceId1" /> for diferente do TraceId de <paramref name="traceId2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary>Retorna uma cadeia de 16 caracteres hexadecimais que representa a ID do intervalo.</summary>
      <returns>A representação de cadeia de caracteres hexadecimal de 32 caracteres dessa ID de rastreamento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary>Retorna uma cadeia de caracteres hexadecimal de 32 caracteres que representa essa ID de rastreamento.</summary>
      <returns>A representação de cadeia de caracteres hexadecimal de 32 caracteres dessa ID de rastreamento.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary>Fornece uma implementação da classe <see cref="T:System.Diagnostics.DiagnosticSource" /> abstrata que representa um local nomeado para o qual uma fonte envia suas informações (eventos).</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary>Cria um novo <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <param name="name">O nome deste <see cref="T:System.Diagnostics.DiagnosticListener" />.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary>Descarta o NotificationListeners.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary>Determina se há algum assinante registrado.</summary>
      <returns>
        <see langword="true" />, se não houver assinante registrado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary>Verifica se o <see cref="T:System.Diagnostics.DiagnosticListener" /> está habilitado.</summary>
      <param name="name">O nome do evento a ser verificado.</param>
      <returns>
        <see langword="true" />, se as notificações estiverem habilitadas, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Verifica se qualquer assinante dos eventos de diagnóstico está interessado em receber eventos com esse nome. Os assinantes indicam seu interesse usando um delegado fornecido no <see cref="Overload:System.Diagnostics.DiagnosticListener.Subscribe" />.</summary>
      <param name="name">O nome do evento a ser verificado.</param>
      <param name="arg1">O objeto que representa um contexto.</param>
      <param name="arg2">O objeto que representa um contexto.</param>
      <returns>
        <see langword="true" />, se ele estiver habilitado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Invoca o método OnActivityExport de todos os assinantes.</summary>
      <param name="activity">A atividade afetada por um evento externo.</param>
      <param name="payload">Um objeto que representa a solicitação de saída.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Invoca o método OnActivityImport de todos os assinantes.</summary>
      <param name="activity">A atividade afetada por um evento externo.</param>
      <param name="payload">Um objeto que representa a solicitação de entrada.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Adiciona um assinante.</summary>
      <param name="observer">Um assinante.</param>
      <returns>Uma referência a uma interface que permite que o ouvinte para de receber notificações antes que o <see cref="T:System.Diagnostics.DiagnosticSource" /> tenha terminado de enviá-las.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary>Adiciona um assinante e opcionalmente filtra eventos com base em seu nome e até dois objetos de contexto.</summary>
      <param name="observer">Um assinante.</param>
      <param name="isEnabled">Um delegado que filtra eventos com base em seu nome e até dois objetos de contexto (que podem ser <see langword="null" />) ou <see langword="null" /> se um filtro de evento não for desejável.</param>
      <returns>Uma referência a uma interface que permite que o ouvinte para de receber notificações antes que o <see cref="T:System.Diagnostics.DiagnosticSource" /> tenha terminado de enviá-las.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary>Adiciona um assinante, opcionalmente, filtra eventos com base em seu nome e até dois objetos de contexto e especifica os métodos a serem chamados quando os provedores importam ou exportam atividades de fora do processo.</summary>
      <param name="observer">Um assinante.</param>
      <param name="isEnabled">Um delegado que filtra eventos com base em seu nome e até dois objetos de contexto (que podem ser <see langword="null" />) ou, se um filtro de evento não for desejável, <see langword="null" />.</param>
      <param name="onActivityImport">Um delegado de ação que recebe a atividade afetada por um evento externo e um objeto que representa a solicitação de entrada.</param>
      <param name="onActivityExport">Um delegado de ação que recebe a atividade afetada por um evento externo e um objeto que representa a solicitação de saída.</param>
      <returns>Uma referência a uma interface que permite que o ouvinte para de receber notificações antes que o <see cref="T:System.Diagnostics.DiagnosticSource" /> tenha terminado de enviá-las.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary>Adiciona um assinante e, opcionalmente, filtra eventos com base em seu nome.</summary>
      <param name="observer">Um assinante.</param>
      <param name="isEnabled">Um delegado que filtra eventos com base em seu nome (<see cref="T:System.String" />). O delegado deverá retornar <see langword="true" /> se o evento estiver habilitado.</param>
      <returns>Uma referência a uma interface que permite que o ouvinte para de receber notificações antes que o <see cref="T:System.Diagnostics.DiagnosticSource" /> tenha terminado de enviá-las.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary>Retorna uma cadeia de caracteres com o nome deste DiagnosticListener.</summary>
      <returns>O nome deste DiagnosticListener.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary>Registra uma notificação.</summary>
      <param name="name">O nome do evento a ser registrado.</param>
      <param name="value">Um objeto que representa o conteúdo do evento.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary>Obtém a coleção de ouvintes para este <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary>Obtém o nome deste <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <returns>O nome do <see cref="T:System.Diagnostics.DiagnosticListener" />.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary>Uma classe abstrata que permite que o código seja instrumentado para registro em log de tempo de produção dos conteúdos de dados avançados para consumo dentro do processo que foi instrumentado.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary>Inicializa uma instância da classe <see cref="T:System.Diagnostics.DiagnosticSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary>Verifica se o evento de notificação está habilitado.</summary>
      <param name="name">O nome do evento que está sendo gravado.</param>
      <returns>
        <see langword="true" />, se o evento de notificação estiver habilitado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Verifica se o evento de notificação está habilitado.</summary>
      <param name="name">O nome do evento que está sendo gravado.</param>
      <param name="arg1">Um objeto que representa o contexto adicional para IsEnabled. Os consumidores devem esperar receber <see langword="null" />, que pode indicar que o produtor chamou o IsEnabled(string) puro para verificar se o consumidor deseja receber notificações para tais eventos. Com base nisso, o produtor pode chamar IsEnabled(string, object, object) novamente com um contexto não relacionado a <see langword="null" />.</param>
      <param name="arg2">Opcional. Um objeto que representa o contexto adicional para IsEnabled. <see langword="null" /> por padrão. Os consumidores devem esperar receber <see langword="null" />, que pode indicar que o produtor chamou o IsEnabled(string) puro ou produtor passou o contexto necessário no <paramref name="arg1" />.</param>
      <returns>
        <see langword="true" />, se o evento de notificação estiver habilitado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Transfere um estado de uma atividade para algum evento ou operação, como uma solicitação HTTP de saída, que ocorrerá fora do processo.</summary>
      <param name="activity">A atividade afetada por um evento externo.</param>
      <param name="payload">Um objeto que representa a solicitação de saída.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Transfere um estado para uma atividade de algum evento ou operação, como uma solicitação de entrada, que ocorreu fora do processo.</summary>
      <param name="activity">A atividade afetada por um evento externo.</param>
      <param name="payload">Um conteúdo que representa a solicitação de entrada.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Inicia um <see cref="T:System.Diagnostics.Activity" /> e grava um evento de início.</summary>
      <param name="activity">O <see cref="T:System.Diagnostics.Activity" /> a ser iniciado.</param>
      <param name="args">Um objeto que representa o valor sendo passado como um conteúdo para o evento.</param>
      <returns>A atividade iniciada para encadeamento conveniente.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Interrompe o <see cref="T:System.Diagnostics.Activity" /> determinado, mantém a atividade <see cref="P:System.Diagnostics.Activity.Current" /> global e notifica os consumidores que o <see cref="T:System.Diagnostics.Activity" /> foi interrompido.</summary>
      <param name="activity">A atividade a ser interrompida.</param>
      <param name="args">Um objeto que representa o valor passado como um conteúdo para o evento.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary>Fornece uma maneira genérica de registro em log de conteúdos complexos.</summary>
      <param name="name">O nome do evento que está sendo gravado.</param>
      <param name="value">Um objeto que representa o valor sendo passado como um conteúdo para o evento. Isso geralmente é um tipo anônimo que contém vários valores inferiores.</param>
    </member>
    <member name="T:System.Diagnostics.SampleActivity`1">
      <summary>Um delegado que define a assinatura dos retornos de chamada <see cref="T:System.Diagnostics.ActivityListener" /> usados no processo de amostragem.</summary>
      <param name="options">As opções de criação da Atividade usadas pelos retornos de chamada <see cref="T:System.Diagnostics.ActivityListener" /> para decidir criar o objeto de atividade ou não.</param>
      <typeparam name="T">O tipo do pai solicitado ao qual criar o objeto de atividade. Deve ser uma cadeia de caracteres ou uma <see cref="T:System.Diagnostics.ActivityContext" /> instância.</typeparam>
      <returns>Um objeto que contém os resultados de amostragem, que indicam a quantidade de dados a serem coletados para o <see cref="T:System.Diagnostics.Activity" /> relacionado.</returns>
    </member>
  </members>
</doc>