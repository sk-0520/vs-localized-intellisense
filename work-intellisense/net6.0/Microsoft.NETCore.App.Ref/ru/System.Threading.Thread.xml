<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Thread</name>
  </assembly>
  <members>
    <member name="T:System.LocalDataStoreSlot">
      <summary>Инкапсулирует ячейку памяти для хранения локальных данных. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.LocalDataStoreSlot.Finalize">
      <summary>Обеспечивает освобождение ресурсов и выполнение других завершающих операций, когда сборщик мусора восстанавливает объект <see cref="T:System.LocalDataStoreSlot" />.</summary>
    </member>
    <member name="T:System.Threading.ApartmentState">
      <summary>Задает апартаментное состояние потока <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.MTA">
      <summary>Объект <see cref="T:System.Threading.Thread" /> создаст многопоточный апартамент и войдет в него.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.STA">
      <summary>Объект <see cref="T:System.Threading.Thread" /> создаст однопоточный апартамент и войдет в него.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.Unknown">
      <summary>Свойство <see cref="P:System.Threading.Thread.ApartmentState" /> не установлено.</summary>
    </member>
    <member name="T:System.Threading.CompressedStack">
      <summary>Обеспечивает методы для установки и инициализации сжатого стека в текущем потоке. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Threading.CompressedStack.Capture">
      <summary>Перехватывает сжатый стек из текущего потока.</summary>
      <returns>Объект <see cref="T:System.Threading.CompressedStack" />.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.CreateCopy">
      <summary>Создает копию текущего сжатого стека.</summary>
      <returns>Объект <see cref="T:System.Threading.CompressedStack" />, представляющий текущий сжатый стек.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.GetCompressedStack">
      <summary>Возвращает сжатый стек для текущего потока.</summary>
      <exception cref="T:System.Security.SecurityException">Вызывающий код в цепочке вызовов не имеет необходимого разрешения на доступ к неуправляемому коду.  
  
-или- 
Запрос для <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> не прошел.</exception>
      <returns>
        <see cref="T:System.Threading.CompressedStack" /> для текущего потока.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с информацией логического контекста, необходимой для повторного создания экземпляра данного контекста выполнения.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который будет заполняться сведениями о сериализации.</param>
      <param name="context">Структура <see cref="T:System.Runtime.Serialization.StreamingContext" />, представляющая контекст назначения сериализации.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)">
      <summary>Выполняет метод в заданном сжатом стеке в текущем потоке.</summary>
      <param name="compressedStack">Задаваемый набор <see cref="T:System.Threading.CompressedStack" />.</param>
      <param name="callback">
        <see cref="T:System.Threading.ContextCallback" />, который представляет метод для выполнения в заданном контексте безопасности.</param>
      <param name="state">Данный объект передается в метод обратного вызова.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="compressedStack" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Threading.ParameterizedThreadStart">
      <summary>Представляет метод, который выполняется в отношении <see cref="T:System.Threading.Thread" />.</summary>
      <param name="obj">Объект, содержащий данные потоковой процедуры.</param>
    </member>
    <member name="T:System.Threading.Thread">
      <summary>Создает и контролирует поток, задает приоритет и возвращает статус.</summary>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Thread" />, при этом указывается делегат, позволяющий объекту быть переданным в поток при запуске потока.</summary>
      <param name="start">Делегат, указывающий на методы, которые вызываются при запуске потока.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Thread" />, при этом указывается делегат, позволяющий объекту быть переданным в поток при запуске потока с указанием максимального размера стека для потока.</summary>
      <param name="start">Делегат <see cref="T:System.Threading.ParameterizedThreadStart" />, указывающий на методы, которые вызываются при запуске потока.</param>
      <param name="maxStackSize">Максимальный размер стека в байтах, используемый потоком, или же 0 для использования максимального размера по умолчанию, указывается в заголовке исполняемого файла.  
  
Внимание! Для частично доверенного кода значение параметра <paramref name="maxStackSize" /> игнорируется, если оно превышает размер стека по умолчанию. Исключение не возникает.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxStackSize" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Thread" />.</summary>
      <param name="start">Делегат <see cref="T:System.Threading.ThreadStart" />, указывающий на методы, которые вызываются при запуске потока.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="start" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Thread" />, указывая максимальный размер стека для потока.</summary>
      <param name="start">Делегат <see cref="T:System.Threading.ThreadStart" />, указывающий на методы, которые вызываются при запуске потока.</param>
      <param name="maxStackSize">Максимальный размер стека в байтах, используемый потоком, или же 0 для использования максимального размера по умолчанию, указывается в заголовке исполняемого файла.  
  
Внимание! Для частично доверенного кода значение параметра <paramref name="maxStackSize" /> игнорируется, если оно превышает размер стека по умолчанию. Исключение не возникает.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxStackSize" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort">
      <summary>Вызывает исключение <see cref="T:System.Threading.ThreadAbortException" /> в вызвавшем его потоке для того, чтобы начать процесс завершения потока. Вызов данного метода обычно завершает поток.</summary>
      <exception cref="T:System.PlatformNotSupportedException">.NET 5.0 и более поздние версии и .NET Core: во всех случаях.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.Threading.ThreadStateException">Поток, который прерывается, в настоящий момент приостановлен.</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort(System.Object)">
      <summary>Вызывает исключение <see cref="T:System.Threading.ThreadAbortException" /> в вызвавшем его потоке для того, чтобы начать процесс завершения потока, в то же время предоставляя сведения об исключении касательно исключения завершения потока. Вызов данного метода обычно завершает поток.</summary>
      <param name="stateInfo">Объект, который содержит информацию об определенном приложении, например состояние, которое может использоваться аварийно завершающимся потоком.</param>
      <exception cref="T:System.PlatformNotSupportedException">.NET 5.0 и более поздние версии и .NET Core: во всех случаях.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.Threading.ThreadStateException">Поток, который прерывается, в настоящий момент приостановлен.</exception>
    </member>
    <member name="M:System.Threading.Thread.AllocateDataSlot">
      <summary>Выделяет неименованную область данных всем потокам. Для улучшения производительности используйте поля, отмеченные атрибутом <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <returns>Выделенная именованная область данных всем потокам.</returns>
    </member>
    <member name="M:System.Threading.Thread.AllocateNamedDataSlot(System.String)">
      <summary>Выделяет именованную область данных всем потокам. Для улучшения производительности используйте поля, отмеченные атрибутом <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name">Имя выделяемой области данных.</param>
      <exception cref="T:System.ArgumentException">Именованная область данных с указанным именем уже существует.</exception>
      <returns>Выделенная именованная область данных всем потокам.</returns>
    </member>
    <member name="M:System.Threading.Thread.BeginCriticalRegion">
      <summary>Уведомляет узел, что выполнение близится ко входу в область кода, в которой эффекты прерывания выполнения или неуправляемого выполнения могут повлиять на другие задачи в домене приложения.</summary>
    </member>
    <member name="M:System.Threading.Thread.BeginThreadAffinity">
      <summary>Уведомляет узел, что управляемый код близок к выполнению инструкций, зависящих от идентификации текущего потока операционной системы.</summary>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Threading.Thread.DisableComObjectEagerCleanup">
      <summary>Отключает автоматическую очистку вызываемых оболочек времени выполнения (RCW) для текущего потока.</summary>
    </member>
    <member name="M:System.Threading.Thread.EndCriticalRegion">
      <summary>Уведомляет узел, что выполнение близится ко входу в область кода, в которой эффекты прерывания выполнения или неуправляемой ошибки ограничены текущей задачей.</summary>
    </member>
    <member name="M:System.Threading.Thread.EndThreadAffinity">
      <summary>Уведомляет хост об окончании выполнения кодом инструкций, которые зависят от идентификатора текущего потока в операционной системе.</summary>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Threading.Thread.Finalize">
      <summary>Обеспечивает освобождение ресурсов и выполнение других завершающих операций, когда сборщик мусора восстанавливает объект <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="M:System.Threading.Thread.FreeNamedDataSlot(System.String)">
      <summary>Удаляет связь между названием и областью для всех потоков в процессе. Для улучшения производительности используйте поля, отмеченные атрибутом <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name">Имя освобождаемой области данных.</param>
    </member>
    <member name="M:System.Threading.Thread.GetApartmentState">
      <summary>Возвращает значение типа <see cref="T:System.Threading.ApartmentState" />, показывающее состояние апартамента.</summary>
      <returns>Одно из значений <see cref="T:System.Threading.ApartmentState" />, показывающее состояние подразделения управляемого потока. Значение по умолчанию — <see cref="F:System.Threading.ApartmentState.Unknown" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetCompressedStack">
      <summary>Возвращает объект <see cref="T:System.Threading.CompressedStack" />, который может быть использован для записи стека текущего потока.</summary>
      <exception cref="T:System.InvalidOperationException">Во всех случаях.</exception>
      <returns>Отсутствует.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetCurrentProcessorId">
      <summary>Возвращает идентификатор, используемый для указания того, какой процессор исполняет текущий поток.</summary>
      <returns>Целое число, представляющее кэшированный идентификатор процессора.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)">
      <summary>Извлекает значение из заданной области текущего потока, внутри текущей области текущего потока. Для улучшения производительности используйте поля, отмеченные атрибутом <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="slot">Объект <see cref="T:System.LocalDataStoreSlot" />, из которого возвращается значение.</param>
      <returns>Извлекаемое значение.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomain">
      <summary>Возвращает текущую область, в которой выполняется текущий поток.</summary>
      <returns>Объект <see cref="T:System.AppDomain" />, представляющий собой текущий домен приложения выполняющегося потока.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomainID">
      <summary>Возвращает уникальный идентификатор домена приложения.</summary>
      <returns>32-разрядное знаковое целое число, однозначно определяющее домен приложения.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetHashCode">
      <summary>Возвращает хэш-код текущего потока.</summary>
      <returns>Целочисленное значение хэш-кода.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetNamedDataSlot(System.String)">
      <summary>Ищет именованную область данных. Для улучшения производительности используйте поля, отмеченные атрибутом <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name">Имя локальной области данных.</param>
      <returns>Объект <see cref="T:System.LocalDataStoreSlot" />, выделенный для данного потока.</returns>
    </member>
    <member name="M:System.Threading.Thread.Interrupt">
      <summary>Прерывает работу потока, находящегося в состоянии <see cref="F:System.Threading.ThreadState.WaitSleepJoin" />.</summary>
      <exception cref="T:System.Security.SecurityException">У вызывающей стороны отсутствует надлежащий <see cref="T:System.Security.Permissions.SecurityPermission" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.Join">
      <summary>Блокирует вызывающий поток до завершения потока, представленного экземпляром, продолжая отправлять стандартные сообщения COM и <see langword="SendMessage" />.</summary>
      <exception cref="T:System.Threading.ThreadStateException">Вызывающая сторона пыталась присоединиться к потоку, который находится в состоянии <see cref="F:System.Threading.ThreadState.Unstarted" />.</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException">Выполнение потока прервано во время ожидания.</exception>
    </member>
    <member name="M:System.Threading.Thread.Join(System.Int32)">
      <summary>Блокирует вызывающий поток до завершения потока, представленного экземпляром, или истечения указанного времени, продолжая отправлять стандартные сообщения COM и SendMessage.</summary>
      <param name="millisecondsTimeout">Количество миллисекунд ожидания завершения потока.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="millisecondsTimeout" /> является отрицательным и не равно <see cref="F:System.Threading.Timeout.Infinite" /> (в миллисекундах).</exception>
      <exception cref="T:System.Threading.ThreadStateException">Поток не запущен.</exception>
      <exception cref="T:System.ArgumentException">Значение <paramref name="millisecondsTimeout" /> меньше –1 (Timeout.Infinite).</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException">Выполнение потока было прервано во время ожидания.</exception>
      <returns>Значение <see langword="true" />, если поток завершился; значение <see langword="false" />, если поток не завершился по истечении количества времени, заданного параметром <paramref name="millisecondsTimeout" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.Join(System.TimeSpan)">
      <summary>Блокирует вызывающий поток до завершения потока, представленного экземпляром, или истечения указанного времени, продолжая отправлять стандартные сообщения COM и SendMessage.</summary>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, в качестве значения которого задано время ожидания завершения процесса.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="timeout" /> является отрицательным и не равно <see cref="F:System.Threading.Timeout.Infinite" /> (в миллисекундах) или больше <see cref="F:System.Int32.MaxValue" /> миллисекунд.</exception>
      <exception cref="T:System.Threading.ThreadStateException">Вызывающая сторона пыталась присоединиться к потоку, который находится в состоянии <see cref="F:System.Threading.ThreadState.Unstarted" />.</exception>
      <returns>Значение <see langword="true" />, если поток завершился; <see langword="false" />, если поток не завершился по истечении количества времени, заданного параметром <paramref name="timeout" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.MemoryBarrier">
      <summary>Синхронизирует доступ к памяти следующим образом: процессор, выполняющий текущий поток, не способен упорядочить инструкции так, чтобы обращения к памяти до вызова метода <see cref="M:System.Threading.Thread.MemoryBarrier" /> выполнялись после обращений к памяти, следующих за вызовом метода <see cref="M:System.Threading.Thread.MemoryBarrier" />.</summary>
    </member>
    <member name="M:System.Threading.Thread.ResetAbort">
      <summary>Отменяет метод <see cref="M:System.Threading.Thread.Abort(System.Object)" />, запрошенный для текущего потока.</summary>
      <exception cref="T:System.PlatformNotSupportedException">.NET 5.0 и более поздние версии и .NET Core: во всех случаях.</exception>
      <exception cref="T:System.Threading.ThreadStateException">Метод <see langword="Abort" /> не был вызван в текущем потоке.</exception>
      <exception cref="T:System.Security.SecurityException">Вызывающая сторона не имеет требуемого разрешения безопасности для текущего потока.</exception>
    </member>
    <member name="M:System.Threading.Thread.Resume">
      <summary>Возобновляет приостановленную работу потока.</summary>
      <exception cref="T:System.PlatformNotSupportedException">.NET 5.0 и более поздние версии и .NET Core: во всех случаях.</exception>
      <exception cref="T:System.Threading.ThreadStateException">Поток не был запущен, бездействует или не находится в приостановленном состоянии.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающей стороны отсутствует надлежащий <see cref="T:System.Security.Permissions.SecurityPermission" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)">
      <summary>Задает модель "apartment" для потока до его запуска.</summary>
      <param name="state">Новая модель "apartment".</param>
      <exception cref="T:System.PlatformNotSupportedException">.NET 5.0 и более поздние версии и .NET Core: во всех случаях в macOS и Linux.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> не является допустимым состоянием подразделения.</exception>
      <exception cref="T:System.Threading.ThreadStateException">Поток уже запущен.</exception>
      <exception cref="T:System.InvalidOperationException">Состояние подразделения уже инициализировано.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetCompressedStack(System.Threading.CompressedStack)">
      <summary>Применяет записанное значение <see cref="T:System.Threading.CompressedStack" /> к текущему потоку.</summary>
      <param name="stack">Объект <see cref="T:System.Threading.CompressedStack" />, который будет применен к текущему потоку.</param>
      <exception cref="T:System.InvalidOperationException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)">
      <summary>Задает данные в указанной области для текущей области потока, выполняющегося в данный момент. Для улучшения производительности используйте поля, отмеченные атрибутом <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="slot">Объект <see cref="T:System.LocalDataStoreSlot" />, для которого задается значение.</param>
      <param name="data">Задаваемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.Int32)">
      <summary>Приостанавливает текущий поток на заданное количество миллисекунд.</summary>
      <param name="millisecondsTimeout">Количество миллисекунд, на которое приостанавливается поток. Если значение аргумента <paramref name="millisecondsTimeout" /> равно нулю, поток освобождает оставшуюся часть своего интервала времени для любого потока с таким же приоритетом, готовым к выполнению. Если других готовых к выполнению потоков с таким же приоритетом нет, выполнение текущего потока не приостанавливается.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение времени ожидания является отрицательной величиной и не равно <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.TimeSpan)">
      <summary>Приостанавливает текущий поток на заданное время.</summary>
      <param name="timeout">Время, на которое приостанавливается поток. Если значение аргумента <paramref name="timeout" /> равно <see cref="F:System.TimeSpan.Zero" />, поток освобождает оставшуюся часть своего интервала времени для любого потока с таким же приоритетом, готовым к выполнению. Если других готовых к выполнению потоков с таким же приоритетом нет, выполнение текущего потока не приостанавливается.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="timeout" /> является отрицательным и не равно <see cref="F:System.Threading.Timeout.Infinite" /> (в миллисекундах) или больше <see cref="F:System.Int32.MaxValue" /> миллисекунд.</exception>
    </member>
    <member name="M:System.Threading.Thread.SpinWait(System.Int32)">
      <summary>Вынуждает поток выполнять ожидание столько раз, сколько определено параметром <paramref name="iterations" />.</summary>
      <param name="iterations">32-разрядное знаковое целое число, определяющее, как долго потоку ожидать.</param>
    </member>
    <member name="M:System.Threading.Thread.Start">
      <summary>Вынуждает операционную систему изменить состояние текущего экземпляра на <see cref="F:System.Threading.ThreadState.Running" />.</summary>
      <exception cref="T:System.Threading.ThreadStateException">Поток уже запущен.</exception>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти для запуска этого потока.</exception>
    </member>
    <member name="M:System.Threading.Thread.Start(System.Object)">
      <summary>Заставляет операционную систему изменить состояние текущего экземпляра на <see cref="F:System.Threading.ThreadState.Running" />, а также (необязательно) передает объект с данными, используемыми методом в потоке.</summary>
      <param name="parameter">Объект, содержащий данные, используемые методом, который выполняется потоком.</param>
      <exception cref="T:System.Threading.ThreadStateException">Поток уже запущен.</exception>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти для запуска этого потока.</exception>
      <exception cref="T:System.InvalidOperationException">Этот поток был создан с помощью делегата <see cref="T:System.Threading.ThreadStart" />, а не делегата <see cref="T:System.Threading.ParameterizedThreadStart" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.Suspend">
      <summary>Приостанавливает работу потока; если работа потока уже приостановлена, не оказывает влияния.</summary>
      <exception cref="T:System.PlatformNotSupportedException">.NET 5.0 и более поздние версии и .NET Core: во всех случаях.</exception>
      <exception cref="T:System.Threading.ThreadStateException">Поток не запущен или удален.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающей стороны отсутствует надлежащий <see cref="T:System.Security.Permissions.SecurityPermission" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)">
      <summary>Задает модель "apartment" для потока до его запуска.</summary>
      <param name="state">Новая модель "apartment".</param>
      <exception cref="T:System.PlatformNotSupportedException">.NET 5.0 и более поздние версии и .NET Core: во всех случаях в macOS и Linux.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> не является допустимым состоянием подразделения.</exception>
      <exception cref="T:System.Threading.ThreadStateException">Поток был запущен, а затем завершен, либо вызов выполняется не из контекста потока во время выполнения потока.</exception>
      <returns>Значение <see langword="true" />, если задана модель "apartment"; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Byte@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Double@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int16@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int32@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int64@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.IntPtr@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Object@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.SByte@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Single@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt16@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt32@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt64@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)">
      <summary>Считывает значение поля. Это значение является последним записанным каким-либо из процессоров компьютера, независимо от количества процессоров и от состояния кэш-буфера процессоров.</summary>
      <param name="address">Поле для чтения.</param>
      <returns>Последнее значение, записанное в поле любым процессором.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)">
      <summary>Записывает значение непосредственно в поле, так что оно становится видимым для всех процессоров компьютера.</summary>
      <param name="address">Поле, в которое требуется записать значение.</param>
      <param name="value">Записываемое значение.</param>
    </member>
    <member name="M:System.Threading.Thread.Yield">
      <summary>Позволяет вызвавшему потоку передать выполнение другому потоку, готовому к использованию на текущем процессоре. Операционная система выбирает, какому потоку передается выполнение.</summary>
      <returns>Значение <see langword="true" />, если операционная система переключила выполнение на другой поток, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.ApartmentState">
      <summary>Возвращает или задает модель "apartment" для данного потока.</summary>
      <exception cref="T:System.ArgumentException">Предпринята попытка задать в этом свойстве состояние, которое не является допустимым состоянием подразделения (состояние, отличное от однопотокового подразделения (<see langword="STA" />) или многопотокового подразделения (<see langword="MTA" />)).</exception>
      <returns>Одно из значений перечисления <see cref="T:System.Threading.ApartmentState" />. Начальное значение — <see langword="Unknown" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentCulture">
      <summary>Получает или задает язык и региональные параметры для текущего потока.</summary>
      <exception cref="T:System.ArgumentNullException">Для свойства задано значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Только в .NET Core. Чтение или запись данных о языке и региональных параметрах потока из другого потока не поддерживается.</exception>
      <returns>Объект, представляющий язык и региональные параметры, используемые текущим потоком.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentPrincipal">
      <summary>Возвращает или задает текущего участника потока (для безопасности на основе ролей).</summary>
      <exception cref="T:System.Security.SecurityException">Вызывающий объект не имеет разрешений, необходимых для задания участника.</exception>
      <returns>Значение <see cref="T:System.Security.Principal.IPrincipal" />, представляющее контекст безопасности.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentThread">
      <summary>Возвращает выполняющийся в данный момент поток.</summary>
      <returns>Объект <see cref="T:System.Threading.Thread" />, представляющий собой выполняющийся в данный момент поток.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentUICulture">
      <summary>Получает или задает текущие язык и региональные параметры, используемые диспетчером ресурсов для поиска ресурсов, связанных с языком и региональными параметрами, во время выполнения.</summary>
      <exception cref="T:System.ArgumentNullException">Для свойства задано значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Свойству присвоено имя языка и региональных параметров, которое не может использоваться для нахождения файла ресурсов. Имена файлов ресурсов могут содержать только буквы, цифры, дефисы или символы подчеркивания.</exception>
      <exception cref="T:System.InvalidOperationException">Только в .NET Core. Чтение или запись данных о языке и региональных параметрах потока из другого потока не поддерживается.</exception>
      <returns>Объект, представляющий текущие языковые стандарты.</returns>
    </member>
    <member name="P:System.Threading.Thread.ExecutionContext">
      <summary>Возвращает объект <see cref="T:System.Threading.ExecutionContext" />, содержащий сведения о различных контекстах текущего потока.</summary>
      <returns>Объект <see cref="T:System.Threading.ExecutionContext" />, содержащий консолидированную информацию о контекстах текущего потока.</returns>
    </member>
    <member name="P:System.Threading.Thread.IsAlive">
      <summary>Возвращает значение, показывающее статус выполнения текущего потока.</summary>
      <returns>Значение<see langword="true" /> , если этот поток был запущен и не был завершен обычным образом либо был прерван; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.IsBackground">
      <summary>Возвращает или задает значение, показывающее, является ли поток фоновым.</summary>
      <exception cref="T:System.Threading.ThreadStateException">Поток не работает.</exception>
      <returns>Значение <see langword="true" />, если этот поток является или станет фоновым потоком; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.IsThreadPoolThread">
      <summary>Возвращает значение, показывающее, принадлежит ли поток к группе управляемых потоков.</summary>
      <returns>Значение <see langword="true" />, если этот поток принадлежит группе управляемых потоков; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.ManagedThreadId">
      <summary>Возвращает уникальный идентификатор текущего управляемого потока.</summary>
      <returns>Целочисленное значение, представляющее уникальный идентификатор для этого управляемого потока.</returns>
    </member>
    <member name="P:System.Threading.Thread.Name">
      <summary>Получает или задает имя потока.</summary>
      <exception cref="T:System.InvalidOperationException">Запрошена операция задания, но свойство <see langword="Name" /> уже задано.</exception>
      <returns>Строка, содержащая имя потока или <see langword="null" />, если имя не задано.</returns>
    </member>
    <member name="P:System.Threading.Thread.Priority">
      <summary>Возвращает или задает значение, указывающее на планируемый приоритет потока.</summary>
      <exception cref="T:System.Threading.ThreadStateException">Поток достиг конечного состояния, например <see cref="F:System.Threading.ThreadState.Aborted" />.</exception>
      <exception cref="T:System.ArgumentException">Значение, указанное для операции задания, не является допустимым значением <see cref="T:System.Threading.ThreadPriority" />.</exception>
      <returns>Одно из значений перечисления <see cref="T:System.Threading.ThreadPriority" />. Значение по умолчанию — <see cref="F:System.Threading.ThreadPriority.Normal" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.ThreadState">
      <summary>Возвращает значение, содержащее состояния текущего потока.</summary>
      <returns>Одно из значений <see cref="T:System.Threading.ThreadState" />, показывающее состояние текущего потока. Начальное значение — <see cref="F:System.Threading.ThreadState.Unstarted" />.</returns>
    </member>
    <member name="T:System.Threading.ThreadAbortException">
      <summary>Исключение, выдаваемое при вызове метода <see cref="M:System.Threading.Thread.Abort(System.Object)" />. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Threading.ThreadAbortException.ExceptionState">
      <summary>Возвращает объект, содержащий зависящую от приложения информацию, относящуюся к аварийному завершению работы процесса.</summary>
      <returns>Объект, содержащий зависящую от приложения информацию.</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Windows.Forms.Application.ThreadException" />.</summary>
    </member>
    <member name="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.ThreadExceptionEventArgs" />.</summary>
      <param name="t">Возникшее исключение (<see cref="T:System.Exception" />).</param>
    </member>
    <member name="P:System.Threading.ThreadExceptionEventArgs.Exception">
      <summary>Получает тип <see cref="T:System.Exception" /> произошедшего события.</summary>
      <returns>Возникшее исключение (<see cref="T:System.Exception" />).</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Windows.Forms.Application.ThreadException" /><see cref="T:System.Windows.Forms.Application" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Threading.ThreadExceptionEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Threading.ThreadInterruptedException">
      <summary>Исключение, которое выдается при прерывании работы потока <see cref="T:System.Threading.Thread" />, находящегося в состоянии ожидания.</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.ThreadInterruptedException" /> стандартными свойствами.</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.ThreadInterruptedException" /> с сериализованными данными.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.ThreadInterruptedException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.ThreadInterruptedException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Threading.ThreadPriority">
      <summary>Задает приоритет выполнения потока <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.AboveNormal">
      <summary>Выполнение потока <see cref="T:System.Threading.Thread" /> может быть запланировано после выполнения потоков с приоритетом <see langword="Highest" /> и до потоков с приоритетом <see langword="Normal" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.BelowNormal">
      <summary>Выполнение потока <see cref="T:System.Threading.Thread" /> может быть запланировано после выполнения потоков с приоритетом <see langword="Normal" /> и до потоков с приоритетом <see langword="Lowest" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Highest">
      <summary>Выполнение потока <see cref="T:System.Threading.Thread" /> может быть запланировано до выполнения потоков с любыми другими приоритетами.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Lowest">
      <summary>Выполнение потока <see cref="T:System.Threading.Thread" /> может быть запланировано после выполнения потоков с любыми другими приоритетами.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Normal">
      <summary>Выполнение потока <see cref="T:System.Threading.Thread" /> может быть запланировано после выполнения потоков с приоритетом <see langword="AboveNormal" /> и до потоков с приоритетом <see langword="BelowNormal" />. По умолчанию потоки имеют приоритет <see langword="Normal" />.</summary>
    </member>
    <member name="T:System.Threading.ThreadStart">
      <summary>Представляет метод, который выполняется в отношении <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="T:System.Threading.ThreadStartException">
      <summary>Исключение выдается, когда происходит сбой в управляемом потоке после запуска базового потока операционной системы, но до готовности потока к выполнению кода пользователя.</summary>
    </member>
    <member name="T:System.Threading.ThreadState">
      <summary>Задает состояния выполнения объекта <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Aborted">
      <summary>Состояние потока включает в себя значение <see cref="F:System.Threading.ThreadState.AbortRequested" />, и поток теперь не выполняет работу, но его состояние еще не изменилось на <see cref="F:System.Threading.ThreadState.Stopped" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.AbortRequested">
      <summary>Метод <see cref="M:System.Threading.Thread.Abort(System.Object)" /> был вызван для потока, но поток еще не получил исключение <see cref="T:System.Threading.ThreadAbortException" />, которое попытается завершить его.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Background">
      <summary>Поток выполняется как фоновый поток, в противоположность потокам переднего плана. Это состояние управляется заданием свойства <see cref="P:System.Threading.Thread.IsBackground" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Running">
      <summary>Поток был запущен, но не останавливался.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Stopped">
      <summary>Поток был остановлен.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.StopRequested">
      <summary>Поток получает запрос на остановку. Предназначено только для внутреннего использования.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Suspended">
      <summary>Поток был приостановлен.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.SuspendRequested">
      <summary>Запрашивается приостановка работы потока.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Unstarted">
      <summary>Метод <see cref="M:System.Threading.Thread.Start" /> не был вызван для потока.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.WaitSleepJoin">
      <summary>Поток заблокирован. Это может произойти в результате вызова метода <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> или метода <see cref="M:System.Threading.Thread.Join" />, в результате запроса блокировки, например при вызове метода <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> или <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" /> или в результате ожидания объекта синхронизации потока, такого как <see cref="T:System.Threading.ManualResetEvent" />.</summary>
    </member>
    <member name="T:System.Threading.ThreadStateException">
      <summary>Исключение, которое выдается, когда объект <see cref="T:System.Threading.Thread" /> является неправильным свойством <see cref="P:System.Threading.Thread.ThreadState" /> для вызова метода.</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.ThreadStateException" /> стандартными свойствами.</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.ThreadStateException" /> с сериализованными данными.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.ThreadStateException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.ThreadStateException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
  </members>
</doc>