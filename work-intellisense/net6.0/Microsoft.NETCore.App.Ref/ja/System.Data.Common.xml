<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary vsli:raw="Determines the action that occurs when the &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; or &lt;see cref=&quot;M:System.Data.DataTable.RejectChanges&quot; /&gt; method is invoked on a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> が設定されている <see cref="T:System.Data.DataTable" /> で <see cref="M:System.Data.DataSet.AcceptChanges" /> メソッドまたは <see cref="M:System.Data.DataTable.RejectChanges" /> メソッドを呼び出した場合に実行されるアクションを決定します。</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary vsli:raw="Changes are cascaded across the relationship.">リレーションシップ全体に連鎖変更が行われます。</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary vsli:raw="No action occurs (default).">アクションは実行されません (既定値)。</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary vsli:raw="Provides a description of the results of the query and its effect on the database.">クエリの結果と、データベースに対するその影響についての説明を提供します。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary vsli:raw="When the command is executed, the associated &lt;see langword=&quot;Connection&quot; /&gt; object is closed when the associated &lt;see langword=&quot;DataReader&quot; /&gt; object is closed.">コマンドが実行された場合、関連付けられている <see langword="DataReader" /> オブジェクトが閉じられたときに、関連付けられている <see langword="Connection" /> オブジェクトが閉じられます。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary vsli:raw="The query may return multiple result sets. Execution of the query may affect the database state. &lt;see langword=&quot;Default&quot; /&gt; sets no &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; flags, so calling &lt;see langword=&quot;ExecuteReader(CommandBehavior.Default)&quot; /&gt; is functionally equivalent to calling &lt;see langword=&quot;ExecuteReader()&quot; /&gt;.">クエリで複数の結果セットが返される場合があります。 クエリの実行により、データベース状態に影響が及ぶことがあります。 <see langword="Default" /> は <see cref="T:System.Data.CommandBehavior" /> フラグを設定しないので、<see langword="ExecuteReader(CommandBehavior.Default)" /> の呼び出しは、機能的には <see langword="ExecuteReader()" /> の呼び出しと同じです。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary vsli:raw="The query returns column and primary key information. The provider appends extra columns to the result set for existing primary key and timestamp columns.">クエリでは列と主キーの情報が返されます。 プロバイダーによって、既存の主キーおよびタイムスタンプ列の結果セットに列が追加されます。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary vsli:raw="The query returns column information only. When using &lt;see cref=&quot;F:System.Data.CommandBehavior.SchemaOnly&quot; /&gt;, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.">クエリでは列情報のみが返されます。 <see cref="F:System.Data.CommandBehavior.SchemaOnly" /> を使用している場合、SQL Server 用 .NET Framework データ プロバイダーは実行するステートメントの前に SET FMTONLY ON を指定します。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary vsli:raw="Provides a way for the &lt;see langword=&quot;DataReader&quot; /&gt; to handle rows that contain columns with large binary values. Rather than loading the entire row, &lt;see langword=&quot;SequentialAccess&quot; /&gt; enables the &lt;see langword=&quot;DataReader&quot; /&gt; to load data as a stream. You can then use the &lt;see langword=&quot;GetBytes&quot; /&gt; or &lt;see langword=&quot;GetChars&quot; /&gt; method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.">
        <see langword="DataReader" /> が大きなバイナリ値が格納されている列を含む行を処理できるようにします。 <see langword="SequentialAccess" /> を使用すると、<see langword="DataReader" /> は行全体を読み込むのではなく、ストリームとしてデータを読み込むことができます。 その後、<see langword="GetBytes" /> メソッドまたは <see langword="GetChars" /> メソッドを使用して、読み込み動作を開始するバイト位置、返すデータの制限付きバッファー サイズを指定できます。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary vsli:raw="The query returns a single result set.">クエリは、単一の結果セットを返します。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary vsli:raw="The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET data providers may, but are not required to, use this information to optimize the performance of the command. When you specify &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; with the &lt;see cref=&quot;M:System.Data.OleDb.OleDbCommand.ExecuteReader&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbCommand&quot; /&gt; object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB &lt;see langword=&quot;IRow&quot; /&gt; interface if it is available. Otherwise, it uses the &lt;see langword=&quot;IRowset&quot; /&gt; interface. If your SQL statement is expected to return only a single row, specifying &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; can also improve application performance. It is possible to specify &lt;see langword=&quot;SingleRow&quot; /&gt; when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.">クエリは、最初の結果セットの単一行を返すと想定されます。 クエリの実行により、データベース状態に影響が及ぶことがあります。 一部の .NET Framework データ プロバイダーではこの情報を使用してコマンドのパフォーマンスを最適化することもできますが、この情報の使用は必須ではありません。 <see cref="T:System.Data.OleDb.OleDbCommand" /> オブジェクトの <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> メソッドで <see cref="F:System.Data.CommandBehavior.SingleRow" /> を指定すると、OLE DB <see langword="IRow" /> インターフェイスが使用できる場合、OLE DB 用 .NET Framework データ プロバイダーはこのインターフェイスを使用してバインドを実行します。 それ以外の場合は、<see langword="IRowset" /> インターフェイスを使用します。 SQL ステートメントが単一行のみを返すことが予期される場合、<see cref="F:System.Data.CommandBehavior.SingleRow" /> を指定すると、アプリケーションのパフォーマンスも向上します。 複数の結果セットを返すことが予期されるクエリを実行する場合は、<see langword="SingleRow" /> を指定できます。  その場合、複数の結果セットの SQL クエリと単一行の両方が指定されていると、返される結果には最初の結果セットの 1 行目のみが含まれます。 クエリの他の結果セットは返されません。</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary vsli:raw="Specifies how a command string is interpreted.">コマンド文字列を解釈する方法を指定します。</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary vsli:raw="The name of a stored procedure.">ストアド プロシージャの名前。</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary vsli:raw="The name of a table.">テーブルの名前。</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary vsli:raw="An SQL text command. (Default.)">SQL テキスト コマンド。 (既定値。)</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary vsli:raw="Indicates the position of the catalog name in a qualified table name in a text command.">テキスト コマンド内の修飾されたテーブル名内のカタログ名の位置を示します。</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary vsli:raw="Indicates that the position of the catalog name occurs after the schema portion of a fully qualified table name in a text command. &lt;c&gt;End&lt;/c&gt; and &lt;c&gt;Start&lt;/c&gt; are mutually exclusive.">テキスト コマンド内の完全修飾テーブル名でスキーマ部分の後に配置されるカタログ名の位置を示します。 <c>End</c> と <c>Start</c> は相互に排他的です。</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary vsli:raw="Indicates that the position of the catalog name occurs before the schema portion of a fully qualified table name in a text command. &lt;c&gt;Start&lt;/c&gt; and &lt;c&gt;End&lt;/c&gt; are mutually exclusive.">テキスト コマンド内の完全修飾テーブル名でスキーマ部分の前に配置されるカタログ名の位置を示します。 <c>Start</c> と <c>End</c> は相互に排他的です。</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary vsli:raw="Represents a set of SQL commands and a database connection that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update the data source.">
        <see cref="T:System.Data.DataSet" /> へのデータの格納およびデータ ソースの更新に使用される、一連の SQL コマンドおよびデータベース接続を表します。</summary>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary vsli:raw="Returned when an error occurs during a fill operation.">格納操作中にエラーが発生したときに返されます。</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DataAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class from an existing object of the same type.">既存の同じ型のオブジェクトから、<see cref="T:System.Data.Common.DataAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="from" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object used to create the new &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">新しい <see cref="T:System.Data.Common.DataAdapter" /> の作成に使用する <see cref="T:System.Data.Common.DataAdapter" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary vsli:raw="Creates a copy of this instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">この <see cref="T:System.Data.Common.DataAdapter" /> のインスタンスのコピーを作成します。</summary>
      <returns vsli:raw="The cloned instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">クローンされた <see cref="T:System.Data.Common.DataAdapter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;.">新しい <see cref="T:System.Data.Common.DataTableMappingCollection" /> を作成します。</summary>
      <returns vsli:raw="A new table mapping collection.">新しいテーブル マップ コレクション。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Data.Common.DataAdapter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source.">データ ソース内の行と一致するように、<see cref="T:System.Data.DataSet" /> の行を追加または更新します。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。 これには、行を返さないステートメントの影響を受ける行は含まれません。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">
        <see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records.">レコードの格納先の <see cref="T:System.Data.DataSet" />。</param>
      <param name="srcTable" vsli:raw="A string indicating the name of the source table.">ソース テーブルの名前を示す文字列。</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> のインスタンス。</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">開始レコードの 0 から始まるインデックス。</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">最大レコード数を示す整数。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。 これには、行を返さないステートメントの影響を受ける行は含まれません。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name and the specified &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 名と指定した <see cref="T:System.Data.DataTable" /> を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.IDataReader" /> 内の行を追加または更新します。</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records.">レコードの格納先の <see cref="T:System.Data.DataTable" />。</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> のインスタンス。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataTable" /> で正常に追加または更新された行数。 これには、行を返さないステートメントの影響を受ける行は含まれません。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source.">データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> オブジェクトのコレクション内の指定した範囲の行を追加または更新します。</summary>
      <param name="dataTables" vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill with records.">レコードの格納先の <see cref="T:System.Data.DataTable" /> オブジェクトのコレクション。</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> のインスタンス。</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">開始レコードの 0 から始まるインデックス。</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">最大レコード数を示す整数。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataTable" /> で正常に追加または更新された行数。 これには、行を返さないステートメントの影響を受ける行は含まれません。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> に <see cref="T:System.Data.DataSet" /> を追加し、指定した <see cref="T:System.Data.SchemaType" /> に基づいて、データ ソース内のスキーマと一致するようにスキーマを設定します。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">データ ソースから返されたスキーマ情報が格納された <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> を指定した <see cref="T:System.Data.DataSet" /> に追加します。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> からデータが格納される <see cref="T:System.Data.IDataReader" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 値のいずれか 1 つ。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">テーブル マップに使用するソース テーブルの名前。</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> にデータを格納するときにデータ ソースとして使用する <see cref="T:System.Data.DataTable" />。</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に追加された <see cref="T:System.Data.DataTable" /> オブジェクトのコレクションへの参照。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> を指定した <see cref="T:System.Data.DataSet" /> に追加します。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> からデータが格納される <see cref="T:System.Data.IDataReader" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 値のいずれか 1 つ。</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> にデータを格納するときにデータ ソースとして使用する <see cref="T:System.Data.DataTable" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">データ ソースから返されたスキーマ情報が格納された <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">SQL SELECT ステートメントの実行時にユーザーが設定したパラメーターを取得します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">ユーザーが設定したパラメーターが格納された <see cref="T:System.Data.IDataParameter" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created.">
        <see cref="T:System.Data.Common.DataTableMappingCollection" /> が作成されているかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMappingCollection" /> が作成されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary vsli:raw="Invoked when an error occurs during a &lt;see langword=&quot;Fill&quot; /&gt;.">
        <see langword="Fill" /> 中にエラーが発生したときに呼び出されます。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; object.">
        <see cref="T:System.Data.FillErrorEventArgs" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary vsli:raw="Resets &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; to its default state and causes &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)&quot; /&gt; to honor &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt;.">
        <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> を既定の状態にリセットし、<see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> で <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> を受け入れるようにします。</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property should be persisted.">
        <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> プロパティを永続化する必要があるかどうかを判断します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> プロパティが永続化される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property should be persisted.">
        <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> プロパティを永続化する必要があるかどうかを判断します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> プロパティが永続化される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary vsli:raw="Determines whether one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist and they should be persisted.">1 つ以上の <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトが存在し、それらを永続化する必要があるかどうかを確認します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">1 つ以上の <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table.&quot;">指定された <see cref="T:System.Data.DataSet" /> 内の "Table" という名前の <see cref="T:System.Data.DataTable" /> に含まれる挿入行、更新行、または削除行に対して、INSERT、UPDATE、または DELETE ステートメントを個別に呼び出します。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">データ ソースの更新に使用した <see cref="T:System.Data.DataSet" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">ソース テーブルが無効です。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary vsli:raw="Gets or sets a value indicating whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; after it is added to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; during any of the Fill operations.">Fill 操作中に <see cref="T:System.Data.DataTable" /> に <see cref="T:System.Data.DataRow" /> が追加された後で、その行に対して <see cref="M:System.Data.DataRow.AcceptChanges" /> を呼び出すかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="M:System.Data.DataRow.AcceptChanges" /> に対して <see cref="T:System.Data.DataRow" /> を呼び出す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary vsli:raw="Gets or sets whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="M:System.Data.DataRow.AcceptChanges" /> で <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" /> が呼び出されるかどうかを取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during an &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="M:System.Data.DataRow.AcceptChanges" /> で <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" /> が呼び出される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary vsli:raw="Gets or sets a value that specifies whether to generate an exception when an error is encountered during a row update.">行の更新中にエラーが発生したときに、例外を生成するかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to continue the update without generating an exception; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">例外を生成せずに更新を続ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; that determines how the adapter fills the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">アダプターが <see cref="T:System.Data.LoadOption" /> から <see cref="T:System.Data.DataTable" /> にデータを読み込む方法を決定する <see cref="T:System.Data.Common.DbDataReader" /> を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; value.">
        <see cref="T:System.Data.LoadOption" /> 値。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary vsli:raw="Determines the action to take when incoming data does not have a matching table or column.">一致するテーブルまたは列が受信データに含まれていない場合に実行するアクションを決定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">設定された値が <see cref="T:System.Data.MissingMappingAction" /> 値の 1 つではありません。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">
        <see cref="T:System.Data.MissingMappingAction" /> 値のいずれか 1 つ。 既定値は、<see langword="Passthrough" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">既存の <see cref="T:System.Data.DataSet" /> スキーマが受信データと一致しないときに実行するアクションを決定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">設定された値が <see cref="T:System.Data.MissingSchemaAction" /> 値の 1 つではありません。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">
        <see cref="T:System.Data.MissingSchemaAction" /> 値のいずれか 1 つ。 既定値は、<see langword="Add" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary vsli:raw="Gets or sets whether the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values or common CLS-compliant values.">
        <see langword="Fill" /> メソッドがプロバイダー固有の値、または共通の CLS 準拠の値のどちらを返すかを取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values; otherwise &lt;see langword=&quot;false&quot; /&gt; to return common CLS-compliant values.">
        <see langword="true" /> メソッドがプロバイダー固有の値を返す場合は <see langword="Fill" />。共通の CLS 準拠の値を返す場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">ソース テーブルをデータセット テーブルに割り当てる方法を示します。</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">返されたレコードと <see cref="T:System.Data.DataSet" /> との間のマスター マップを提供するコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that provides the primary mapping between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">ソース テーブルと <see cref="T:System.Data.DataTable" /> との間のマスター マップを提供するコレクションを取得します。</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">返されたレコードと <see cref="T:System.Data.DataSet" /> との間のマスター マップを提供するコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary vsli:raw="Contains a generic column mapping for an object that inherits from &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;. This class cannot be inherited.">
        <see cref="T:System.Data.Common.DataAdapter" /> から継承されるオブジェクトの汎用的な列マップを格納します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class with the specified source column name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name to map to.">指定されたソース列名およびマップ先の <see cref="T:System.Data.Common.DataColumnMapping" /> 列名を使用して、<see cref="T:System.Data.DataSet" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">データ ソースでの列名、大文字と小文字が区別されます。</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">マップ先の <see cref="T:System.Data.DataSet" /> での列名。大文字と小文字は区別されません。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the given &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.DataSetColumn&quot; /&gt; property.">
        <see cref="T:System.Data.DataColumn" /> プロパティと <see cref="T:System.Data.DataTable" /> プロパティを使用して、指定された <see cref="T:System.Data.MissingSchemaAction" /> から <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" /> を取得します。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to get the column from.">列の取得元の <see cref="T:System.Data.DataTable" />。</param>
      <param name="dataType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the data column.">データ列の <see cref="T:System.Type" />。</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="A data column.">Data.Column</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static version of &lt;see cref=&quot;M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)&quot; /&gt; that can be called without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" /> オブジェクトをインスタンス化せずに呼び出すことができる、静的なバージョンの <see cref="T:System.Data.Common.DataColumnMapping" />。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">データ ソースでの列名、大文字と小文字が区別されます。</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">マップ先の <see cref="T:System.Data.DataSet" /> での列名。大文字と小文字は区別されません。</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> のインスタンス。</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">割り当てられる列のデータ型。</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">既存の <see cref="T:System.Data.DataSet" /> スキーマが受信データと一致しないときに実行するアクションを決定します。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">現在のインスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A copy of the current object.">現在のオブジェクトのコピー。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name to a string.">現在の <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> 名を文字列に変換します。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name as a string.">現在の <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> 名を示す文字列。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">割り当て先の <see cref="T:System.Data.DataSet" /> 内の列の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">割り当て先の <see cref="T:System.Data.DataSet" /> 内の列の名前。 名前の大文字と小文字は区別されません。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">割り当て元のデータ ソース内の列の名前を取得または設定します。 名前の大文字と小文字は区別されます。</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">データ ソース内の列の名前。大文字と小文字が区別されます。</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトのコレクションを含んでいます。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">空の <see cref="T:System.Data.Common.DataColumnMappingCollection" /> を作成します。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトをコレクションに追加します。</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object to add to the collection.">コレクションに追加する <see langword="DataColumnMapping" /> オブジェクト。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">渡されたオブジェクトは <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトではありませんでした。</exception>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">コレクションに追加された <see langword="DataColumnMapping" /> オブジェクトのインデックス。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection when given a source column name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">ソース列名と <see cref="T:System.Data.Common.DataColumnMapping" /> 列名を指定すると、<see cref="T:System.Data.DataSet" /> オブジェクトをコレクションに追加します。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column to map to.">割り当て先のソース列の名前。大文字と小文字が区別されます。</param>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to map to.">割り当て先の <see cref="T:System.Data.DataSet" /> 列の名前。大文字と小文字は区別されません。</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">コレクションに追加された <see langword="DataColumnMapping" /> オブジェクトです。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">指定した <see cref="T:System.Array" /> の要素をコレクションの末尾にコピーします。</summary>
      <param name="values" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; to add to the collection.">コレクションに追加する <see cref="T:System.Array" />。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to the end of the collection.">指定した <see cref="T:System.Data.Common.DataColumnMapping" /> 配列の要素をコレクションの末尾にコピーします。</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects to add to the collection.">コレクションに追加する <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects from the collection.">コレクションからすべての <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトを削除します。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Object&quot; /&gt; exists in the collection.">指定した <see cref="T:System.Data.Common.DataColumnMapping" /> が含まれる <see cref="T:System.Object" /> オブジェクトがコレクション内に存在するかどうかを示す値を取得します。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt;.">
        <see cref="T:System.Object" /> である <see cref="T:System.Data.Common.DataColumnMapping" />。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">渡されたオブジェクトは <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトではありませんでした。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトがコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given source column name exists in the collection.">指定したソース列名が含まれる <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトがコレクション内に存在するかどうかを示す値を取得します。</summary>
      <param name="value" vsli:raw="The case-sensitive source column name of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトのソース列名。大文字と小文字が区別されます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if collection contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したソース列名が含まれる <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトがコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified array.">指定した配列に <see cref="T:System.Data.Common.DataColumnMappingCollection" /> の要素をコピーします。</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Array" /> 要素のコピー先の <see cref="T:System.Data.Common.DataColumnMappingCollection" />。</param>
      <param name="index" vsli:raw="The starting index of the array.">配列の開始インデックス。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array.">指定した <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 配列に <see cref="T:System.Data.Common.DataColumnMapping" /> の要素をコピーします。</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> の要素のコピー先の <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 配列。</param>
      <param name="index" vsli:raw="The zero-based index in the &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーを開始する <paramref name="array" /> の、0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">指定した <see cref="T:System.Data.Common.DataColumnMapping" /> 列名が含まれる <see cref="T:System.Data.DataSet" /> オブジェクトを取得します。</summary>
      <param name="value" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">検索する <see cref="T:System.Data.DataSet" /> 列名。大文字と小文字は区別されません。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">指定した <see cref="T:System.Data.Common.DataColumnMapping" /> 列名が含まれる <see cref="T:System.Data.DataSet" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, source column name, and &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">指定した <see cref="T:System.Data.Common.DataColumnMapping" />、ソース列名、および <see cref="T:System.Data.Common.DataColumnMappingCollection" /> を使用して、<see cref="T:System.Data.MissingMappingAction" /> を取得します。</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />。</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name to find.">検索するソース列名。大文字と小文字が区別されます。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">
        <paramref name="mappingAction" /> パラメーターが <see langword="Error" /> に設定され、マップが指定されませんでした。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static method that returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> オブジェクトをインスタンス化せずに <see cref="T:System.Data.Common.DataColumnMappingCollection" /> オブジェクトを返す静的メソッド。</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />。</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">データ ソースでの列名、大文字と小文字が区別されます。</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">割り当てられる列のデータ型。</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> のインスタンス。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 値のいずれか 1 つ。</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">既存の <see cref="T:System.Data.DataSet" /> スキーマが受信データと一致しないときに実行するアクションを決定します。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">コレクションを反復処理できる列挙子を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">指定した <see cref="T:System.Object" /> (<see cref="T:System.Data.Common.DataColumnMapping" />) のコレクション内での位置を取得します。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to find.">検索する <see cref="T:System.Object" /> (<see cref="T:System.Data.Common.DataColumnMapping" />)。</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">指定した <see cref="T:System.Object" /> (<see cref="T:System.Data.Common.DataColumnMapping" />) の、コレクション内での 0 から始まる位置。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified source column name.">指定したソース列名が含まれる <see cref="T:System.Data.Common.DataColumnMapping" /> の位置を取得します。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">ソース列の名前。大文字と小文字は区別されます。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified case-sensitive source column name.">指定したソース列名 (大文字と小文字が区別されます) が含まれる <see cref="T:System.Data.Common.DataColumnMapping" /> の、0 から始まる位置。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">指定した <see cref="T:System.Data.Common.DataColumnMapping" /> 列名が含まれる <see cref="T:System.Data.DataSet" /> の位置を取得します。</summary>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the data set column to find.">検索するデータ セット列名。大文字と小文字は区別されません。</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see langword=&quot;DataSet&quot; /&gt; column name, or -1 if the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object does not exist in the collection.">指定した <see langword="DataSet" /> 列名が含まれる <see cref="T:System.Data.Common.DataColumnMapping" /> の、0 から始まる位置。<see langword="DataColumnMapping" /> オブジェクトがコレクション内に存在しない場合は -1。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトを <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 内の指定されたインデックス位置に挿入します。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">挿入する <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトの 0 から始まるインデックス。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトを <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 内の指定されたインデックス位置に挿入します。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">挿入する <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトの 0 から始まるインデックス。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">指定された <see cref="T:System.Data.Common.DataColumnMapping" /> をコレクションから削除します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">削除する <see cref="T:System.Data.Common.DataColumnMapping" />。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">
        <see cref="T:System.Object" /> である <see cref="T:System.Data.Common.DataColumnMapping" /> をコレクションから削除します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">削除する <see cref="T:System.Object" /> (<see cref="T:System.Data.Common.DataColumnMapping" />)。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">指定したオブジェクトは <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトではありませんでした。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">指定したオブジェクトはコレクション内に存在しません。</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index from the collection.">指定したインデックス番号の <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトをコレクションから削除します。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to remove.">削除のする <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトの、0 から始まるインデックス番号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index.">指定したインデックス番号の <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトがありません。</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name from the collection.">指定したソース列名が含まれる <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトをコレクションから削除します。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name.">ソース列名。大文字と小文字が区別されます。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">指定したソース列名が含まれる <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトがありません。</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; by using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">ソース列名と <see cref="T:System.Data.Common.DataColumnMapping" /> 列名を使用して、<see cref="T:System.Data.Common.DataColumnMappingCollection" /> オブジェクトを <see cref="T:System.Data.DataSet" /> に追加します。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">ソース列の名前。大文字と小文字は区別されます。</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">
        <see cref="T:System.Data.DataSet" /> 列の名前。</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">コレクションに追加された ColumnMapping オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">指定された <see cref="T:System.Data.Common.DataColumnMapping" /> 列名を持つ <see cref="T:System.Data.DataSet" /> オブジェクトを取得します。</summary>
      <param name="dataSetColumnName" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">検索する <see cref="T:System.Data.DataSet" /> 列名。大文字と小文字は区別されません。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that  has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">指定された <see cref="T:System.Data.Common.DataColumnMapping" /> 列名を持つ <see cref="T:System.Data.DataSet" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects in the collection.">コレクション内の <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクト数を取得します。</summary>
      <returns vsli:raw="The number of items in the collection.">コレクション内の項目数。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">指定したインデックスの位置にある <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトを取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to find.">検索する <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトの 0 から始まるインデックスです。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">指定したインデックス位置にある <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">指定したソース列名が含まれる <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトを取得または設定します。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">ソース列の名前。大文字と小文字は区別されます。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">指定したソース列名が含まれる <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">
        <see cref="T:System.Collections.ICollection" /> へのアクセスが同期されるかどうか (スレッド セーフかどうか) を示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> へのアクセスの同期に使用できるオブジェクトです。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.IList" /> が固定サイズかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">
        <see cref="T:System.Collections.IList" /> が読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns vsli:raw="The element at the specified index.">指定したインデックス位置にある要素。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">指定した <see langword="SourceColumn" /> 名で <see cref="T:System.Data.IColumnMapping" /> オブジェクトを取得または設定します。</summary>
      <param name="index" vsli:raw="Index of the element.">要素のインデックス。</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">指定した <see langword="IColumnMapping" /> 名を持つ <see langword="SourceColumn" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary vsli:raw="Contains a description of a mapped relationship between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This class is used by a &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; when populating a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">ソース テーブルと <see cref="T:System.Data.DataTable" /> との間に対応付けられたリレーションシップの記述を格納します。 このクラスは、<see cref="T:System.Data.DataSet" /> にデータを格納するときに、<see cref="T:System.Data.Common.DataAdapter" /> によって使用されます。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DataTableMapping" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class with a source when given a source table name and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">ソース テーブル名および <see cref="T:System.Data.Common.DataTableMapping" /> 名が指定された場合に、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">データ ソース内のソース テーブル名。大文字と小文字が区別されます。</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">割り当て先の <see cref="T:System.Data.DataSet" /> 内のテーブル名。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class when given a source table name, a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name, and an array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">ソース テーブル名、<see cref="T:System.Data.Common.DataTableMapping" /> 名、および <see cref="T:System.Data.DataTable" /> オブジェクトの配列が指定された場合に、<see cref="T:System.Data.Common.DataColumnMapping" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">データ ソース内のソース テーブル名。大文字と小文字が区別されます。</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">割り当て先の <see cref="T:System.Data.DataSet" /> 内のテーブル名。</param>
      <param name="columnMappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; value and the name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">指定した <see cref="T:System.Data.DataColumn" /> 値および <see cref="T:System.Data.DataTable" /> 名を使用して、指定した <see cref="T:System.Data.MissingMappingAction" /> から <see cref="T:System.Data.DataColumn" /> を取得します。</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> の名前。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">
        <paramref name="mappingAction" /> パラメーターが <see langword="Error" /> に設定され、マップが指定されませんでした。</exception>
      <returns vsli:raw="A data column.">Data.Column</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object for a given column name.">指定した列名の <see cref="T:System.Data.DataColumn" /> オブジェクトを返します。</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> の名前。</param>
      <param name="dataType" vsli:raw="The data type for &lt;paramref name=&quot;sourceColumn&quot; /&gt;.">
        <paramref name="sourceColumn" /> のデータ型。</param>
      <param name="dataTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">割り当て先の <see cref="T:System.Data.DataSet" /> 内のテーブル名。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 値のいずれか 1 つ。</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; value.">指定した <see cref="T:System.Data.DataTable" /> 値を使用して、指定した <see cref="T:System.Data.DataSet" /> の現在の <see cref="T:System.Data.MissingSchemaAction" /> を取得します。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from which to get the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> の取得元の <see cref="T:System.Data.DataTable" />。</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="A data table.">データ テーブル。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">現在のインスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A new object that is a copy of the current instance.">現在のインスタンスのコピーである新しいオブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name to a string.">現在の <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> 名を文字列に変換します。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name, as a string.">現在の <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> 名を示す文字列。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" /> の <see cref="T:System.Data.DataTable" /> を取得します。</summary>
      <returns vsli:raw="A data column mapping collection.">データ列マップ コレクション。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 内のテーブル名を取得または設定します。</summary>
      <returns vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 内のテーブル名。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive source table name from a data source.">データ ソース内のソース テーブル名 (大文字と小文字が区別されます) を取得または設定します。</summary>
      <returns vsli:raw="The case-sensitive source table name from a data source.">データ ソース内のソース テーブル名。大文字と小文字が区別されます。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" /> の派生 <see cref="T:System.Data.DataTable" /> を取得します。</summary>
      <returns vsli:raw="A data column mapping collection.">データ列マップ コレクション。</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects. This class cannot be inherited.">
        <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトのコレクション。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; class. This new instance is empty, that is, it does not yet contain any &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects.">
        <see cref="T:System.Data.Common.DataTableMappingCollection" /> クラスの新しいインスタンスを初期化します。 この新しいインスタンスは空です。つまり、<see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトはまだ含まれていません。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a table mapping to the collection.">テーブル マップである <see cref="T:System.Object" /> をコレクションに追加します。</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataTableMapping&quot; /&gt; object to add to the collection.">コレクションに追加する <see langword="DataTableMapping" /> オブジェクト。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">渡されたオブジェクトは <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトではありませんでした。</exception>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataTableMapping&quot; /&gt; object added to the collection.">コレクションに追加された <see langword="DataTableMapping" /> オブジェクトのインデックス。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to the collection when given a source table name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">指定したソース テーブル名および <see cref="T:System.Data.Common.DataTableMapping" /> テーブル名を使用して、<see cref="T:System.Data.DataSet" /> オブジェクトをコレクションに追加します。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table to map from.">割り当て元のソース テーブル名。大文字と小文字が区別されます。</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to map to.">割り当て先の <see cref="T:System.Data.DataSet" /> テーブル名。大文字と小文字は区別されません。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object that was added to the collection.">コレクションに追加された <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトです。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">指定した <see cref="T:System.Array" /> の要素をコレクションの末尾にコピーします。</summary>
      <param name="values" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; of values to add to the collection.">コレクションに追加する値の <see cref="T:System.Array" />。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; array to the end of the collection.">指定した <see cref="T:System.Data.Common.DataTableMapping" /> 配列の要素をコレクションの末尾にコピーします。</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects to add to the collection.">コレクションに追加する <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects from the collection.">コレクションからすべての <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトを削除します。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the given &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object exists in the collection.">指定した <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトがコレクション内に存在するかどうかを示す値を取得します。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;.">
        <see cref="T:System.Object" /> である <see cref="T:System.Data.Common.DataTableMapping" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">このコレクションに指定した <see cref="T:System.Data.Common.DataTableMapping" /> が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name exists in the collection.">指定したソース テーブル名が含まれる <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトがコレクション内に存在するかどうかを示す値を取得します。</summary>
      <param name="value" vsli:raw="The case-sensitive source table name containing the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトが格納されているソース テーブル名。大文字と小文字が区別されます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with this source table name; otherwise &lt;see langword=&quot;false&quot; /&gt;.">このソース テーブル名が含まれる <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトがコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; to the specified array.">指定した配列に <see cref="T:System.Data.Common.DataTableMappingCollection" /> の要素をコピーします。</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Array" /> の要素のコピー先の <see cref="T:System.Data.Common.DataTableMappingCollection" />。</param>
      <param name="index" vsli:raw="The starting index of the array.">配列の開始インデックス。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to the specified array.">指定した配列に <see cref="T:System.Data.Common.DataTableMapping" /> の要素をコピーします。</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Data.Common.DataTableMapping" /> の要素のコピー先の <see cref="T:System.Data.Common.DataTableMappingCollection" />。</param>
      <param name="index" vsli:raw="The starting index of the array.">配列の開始インデックス。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">指定した <see cref="T:System.Data.Common.DataTableMapping" /> テーブル名が含まれる <see cref="T:System.Data.DataSet" /> オブジェクトを取得します。</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to find.">検索する <see cref="T:System.Data.DataSet" /> テーブル名。大文字と小文字は区別されません。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">指定した <see cref="T:System.Data.Common.DataTableMapping" /> テーブル名が含まれる <see cref="T:System.Data.DataSet" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">コレクションを反復処理できる列挙子を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source table name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, using the given &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> を使用して、指定したソース テーブル名および <see cref="T:System.Data.DataSet" /> テーブル名が含まれる <see cref="T:System.Data.MissingMappingAction" /> オブジェクトを取得します。</summary>
      <param name="tableMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; collection to search.">検索する <see cref="T:System.Data.Common.DataTableMappingCollection" /> コレクション。</param>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the mapped source table.">割り当てられたソース テーブル名。大文字と小文字が区別されます。</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the mapped &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">割り当てられた <see cref="T:System.Data.DataSet" /> テーブル名。大文字と小文字は区別されません。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">
        <paramref name="mappingAction" /> パラメーターが <see langword="Error" /> に設定され、マップが指定されませんでした。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">指定した <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトのコレクション内での位置を取得します。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to find.">検索する <see cref="T:System.Object" /> (<see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト)。</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">指定した <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトの、コレクション内での 0 から始まる位置。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">指定したソース テーブル名が含まれる <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトの位置を取得します。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">ソース テーブルの、大文字と小文字が区別される名前。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">指定したソース テーブル名が含まれる <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトの、0 から始まる位置。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">指定した <see cref="T:System.Data.Common.DataTableMapping" /> テーブル名が含まれる <see cref="T:System.Data.DataSet" /> オブジェクトの位置を取得します。</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see langword=&quot;DataSet&quot; /&gt; table to find.">検索する <see langword="DataSet" /> テーブル名。大文字と小文字は区別されません。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, or -1 if the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist in the collection.">指定した <see cref="T:System.Data.Common.DataTableMapping" /> テーブル名が含まれる <see cref="T:System.Data.DataSet" /> の、0 から始まる位置。<see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトがコレクション内に存在しない場合は -1。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトを <see cref="T:System.Data.Common.DataTableMappingCollection" /> 内の指定されたインデックス位置に挿入します。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">挿入する <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトの 0 から始まるインデックス。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">挿入する <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトを <see cref="T:System.Data.Common.DataTableMappingCollection" /> 内の指定されたインデックス位置に挿入します。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">挿入する <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトの 0 から始まるインデックス。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">挿入する <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">指定した <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトをコレクションから削除します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">削除する <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">指定した <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトをコレクションから削除します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">削除する <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">指定したオブジェクトは <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトではありませんでした。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">指定したオブジェクトはコレクション内に存在しません。</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object located at the specified index from the collection.">指定したインデックス番号の <see cref="T:System.Data.Common.DataTableMapping" /> をコレクションから削除します。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">削除のする <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトの、0 から始まるインデックス番号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified index.">指定したインデックス番号の <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトは存在しません。</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name from the collection.">指定したソース テーブル名が含まれる <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトをコレクションから削除します。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name to find.">検索するソース テーブル名。大文字と小文字が区別されます。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified source table name.">指定したソース テーブル名が含まれる <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトは存在しません。</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">コレクションにテーブル マップを追加します。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">ソース テーブルの、大文字と小文字が区別される名前。</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">
        <see cref="T:System.Data.DataSet" /> テーブルの名前。</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">新しく割り当てられた <see cref="T:System.Data.ITableMapping" /> オブジェクトへの参照。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">指定した <see cref="T:System.Data.DataSet" /> テーブル名を持つ TableMapping オブジェクトを取得します。</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">コレクション内の <see langword="DataSet" /> テーブルの名前。</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">指定した <see langword="DataSet" /> テーブル名を持つ TableMapping オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects in the collection.">コレクション内の <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト数を取得します。</summary>
      <returns vsli:raw="The number of &lt;see langword=&quot;DataTableMapping&quot; /&gt; objects in the collection.">コレクションに含まれる <see langword="DataTableMapping" /> オブジェクトの数です。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">指定したインデックスの位置にある <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトを取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to return.">返す <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトの 0 から始まるインデックスです。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">指定したインデックス位置にある <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">指定したソース テーブル名が含まれる <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクトを取得または設定します。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">ソース テーブルの、大文字と小文字が区別される名前。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">指定したソース テーブル名が含まれる <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">
        <see cref="T:System.Collections.ICollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> へのアクセスの同期に使用できるオブジェクトです。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.IList" /> が固定サイズかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">
        <see cref="T:System.Collections.IList" /> が読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets an item from the collection at a specified index.">コレクション内の指定したインデックス位置の項目を取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the item to get or set.">取得または設定する項目の、0 から始まるインデックス。</param>
      <returns vsli:raw="The element at the specified index.">指定したインデックス位置にある要素。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">指定した <see cref="T:System.Data.ITableMapping" /> 名で <see cref="P:System.Data.ITableMapping.SourceTable" /> のインスタンスを取得または設定します。</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">
        <see cref="T:System.Data.ITableMapping" /> の <see langword="SourceTable" /> 名。</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">指定した <see langword="SourceTable" /> 名の <see cref="T:System.Data.ITableMapping" /> のインスタンス。</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary vsli:raw="Represents a column within a data source.">データ ソース内の列を表します。</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">
        <see langword="DBNull" /> 値がこの列で許容されるかどうかを示す null 許容のブール値を取得します。または値が設定されていない場合は <see langword="null" /> を返します。 <see langword="true" /> または <see langword="false" /> のいずれかを設定して、<see langword="DBNull" /> 値がこの列で許容されるかどうかを示します。または派生クラスでオーバーライドされる場合は <see langword="null" /> (Visual Basic の場合 <see langword="Nothing" />) を設定できます。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <see langword="DBNull" /> 値がこの列で許可されている場合、<see langword="true" /> を返します。それ以外の場合は <see langword="false" /> です。 値が設定されていない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary vsli:raw="Gets the catalog name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the catalog name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">データ ソースに関連付けられているカタログ名を取得します。それ以外で、値が設定されていない場合は <see langword="null" /> です。 カタログ名、または派生クラスでオーバーライドされる場合は <see langword="null" /> のいずれかに設定できます。</summary>
      <returns vsli:raw="The catalog name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">データ ソースに関連付けられているカタログ名です。それ以外で、値が設定されていない場合は null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary vsli:raw="Gets the base column name; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the column name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">ベースの列名を取得します。それ以外で、値が設定されていない場合は <see langword="null" /> です。 列名、または派生クラスでオーバーライドされる場合は <see langword="null" /> のいずれかに設定できます。</summary>
      <returns vsli:raw="The base column name; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">ベースの列名、それ以外で値が設定されていない場合は null 参照 (Visual Basic の場合 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary vsli:raw="Gets the schema name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the schema name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">データ ソースに関連付けられているスキーマ名を取得します。値が設定されていない場合は <see langword="null" /> です。 スキーマ名か、派生クラスでオーバーライドされる場合は <see langword="null" /> に設定できます。</summary>
      <returns vsli:raw="The schema name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">データ ソースに関連付けられているスキーマ名です。値が設定されていない場合は null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary vsli:raw="Gets the server name associated with the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the server name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">列に関連付けられているサーバー名を取得します。それ以外で、値が設定されていない場合は <see langword="null" /> です。 サーバー名、または派生クラスでオーバーライドされる場合は <see langword="null" />、のいずれかに設定できます。</summary>
      <returns vsli:raw="The server name associated with the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">列に関連付けられているサーバー名です。それ以外で、値が設定されていない場合は null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary vsli:raw="Gets the table name in the schema; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the table name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">スキーマ内のテーブル名を取得します。値が設定されていない場合は <see langword="null" /> です。 テーブル名か、派生クラスでオーバーライドされる場合は <see langword="null" /> に設定できます。</summary>
      <returns vsli:raw="The table name in the schema; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">スキーマ内のテーブル名です。値が設定されていない場合は null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary vsli:raw="Gets the name of the column. Can be set to the column name when overridden in a derived class.">列の名前を取得します。 派生クラスでオーバーライドされる場合は、列名に設定できます。</summary>
      <returns vsli:raw="The name of the column.">列の名前。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary vsli:raw="Gets the column position (ordinal) in the datasource row; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column position or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">データソース行での列の位置 (序数) を取得します。値が設定されていない場合は <see langword="null" /> です。 列の位置を指定する <see langword="int32" /> 値、または派生クラスでオーバーライドされる場合 <see langword="null" /> のいずれかに設定できます。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column ordinal; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">列序数の <see langword="int32" /> 値、値が設定されていない場合は null 参照 (Visual Basic の場合 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary vsli:raw="Gets the column size; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column size or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">列のサイズを取得します。値が設定されていない場合は <see langword="null" /> です。 列のサイズを指定する <see langword="int32" /> 値か、派生クラスでオーバーライドされる場合は <see langword="null" /> に設定できます。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column size; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">
        <see langword="int32" />列サイズの値。値が設定されていない場合は、null 参照 ( <see langword="Nothing" /> Visual Basic)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary vsli:raw="Gets the type of data stored in the column. Can be set to a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column when overridden in a derived class.">列に格納されているデータの型を取得します。 派生クラスでオーバーライドされる場合に列内のデータ型を表す <see cref="T:System.Type" /> オブジェクトに設定できます。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data the column contains.">列に含まれるデータ型を表す <see cref="T:System.Type" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary vsli:raw="Gets the name of the data type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the data type name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">データ型の名前を取得します。値が設定されていない場合は <see langword="null" /> です。 データ型の名前、または派生クラスでオーバーライドされる場合は <see langword="null" />、のいずれかに設定できます。</summary>
      <returns vsli:raw="The name of the data type; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">データ型の名前、あるいは値が設定されていない場合は null 参照 (Visual Basic の場合 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is aliased, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is aliased, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">この列に別名が設定されているかどうかを示す null 許容のブール値を取得するか、値が設定されていない場合は <see langword="null" /> を返します。 <see langword="true" />、この列に別名が設定されているかどうかを示す <see langword="false" />、または派生クラスでオーバーライドされる場合 <see langword="null" /> (Visual Basic の場合 <see langword="Nothing" />)、のいずれかに設定できます。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is aliased; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">この列に別名が設定されている場合 <see langword="true" /> を返します。それ以外の場合、<see langword="false" /> です。 値が設定されていない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether values in this column are automatically incremented, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether values in this column are automatically incremented, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">この列の値が自動的にインクリメントされるかどうかを示す null 許容のブール値を取得するか、値が設定されていない場合は <see langword="null" /> を返します。 <see langword="true" />、この列の値が自動的にインクリメントされるかどうかを示す <see langword="false" />、または派生クラスでオーバーライドされる場合 <see langword="null" /> (Visual Basic の場合 <see langword="Nothing" />)、のいずれかに設定できます。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if values in this column are automatically incremented; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">この列の値が自動的にインクリメントされる場合に <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> です。 値が設定されていない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an expression, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an expression, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">この列が式であるかどうかを示す null 許容のブール値を取得するか、値が設定されていない場合は <see langword="null" /> を返します。 <see langword="true" />、この列が式であるかどうかを示す <see langword="false" />、または派生クラスでオーバーライドされる場合 <see langword="null" /> (Visual Basic の場合 <see langword="Nothing" />)、のいずれかに設定できます。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">この列が式である場合 <see langword="true" /> を返します。それ以外の場合、<see langword="false" /> です。 値が設定されていない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is hidden, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is hidden, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">この列が非表示であるかどうかを示す null 許容のブール値を取得するか、値が設定されていない場合は <see langword="null" /> を返します。 <see langword="true" /> または <see langword="false" /> のいずれかを設定して、この列が非表示かどうかを示します。または、派生クラスでオーバーライドされる場合は <see langword="null" /> (Visual Basic の場合 <see langword="Nothing" />) を設定できます。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is hidden; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">この列が非表示である場合 <see langword="true" /> を返します。それ以外の場合、<see langword="false" /> です。 値が設定されていない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an identity, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an identity, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">この列が ID であるかどうかを示す null 許容のブール値を取得するか、値が設定されていない場合は <see langword="null" /> を返します。 <see langword="true" />、この列が ID であるかどうかを示す <see langword="false" />、または派生クラスでオーバーライドされる場合は <see langword="null" /> (Visual Basic の場合は <see langword="Nothing" />) のいずれかに設定できます。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an identity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">この列が ID の場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> です。 値が設定されていない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is a key, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is a key, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">この列がキーであるかどうかを示す null 許容のブール値を取得するか、値が設定されていない場合は <see langword="null" /> を返します。 <see langword="true" />、この列がキーであるかどうかを示す <see langword="false" />、または派生クラスでオーバーライドされる場合は <see langword="null" /> (Visual Basic の場合は <see langword="Nothing" />) に設定できます。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">この列がキーの場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> です。 値が設定されていない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column contains long data, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column contains long data, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">この列が長いデータを含むかどうかを示す null 許容のブール値を取得するか、値が設定されていない場合は <see langword="null" /> を返します。 <see langword="true" />、この列が長いデータを含むかどうかを示す <see langword="false" />、または派生クラスでオーバーライドされる場合 <see langword="null" /> (Visual Basic の場合 <see langword="Nothing" />)、のいずれかに設定できます。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column contains long data; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">この列が長いデータを含む場合に <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> です。 値が設定されていない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is read-only, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is read-only, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">この列が読み取り専用であるかどうかを示す null 許容のブール値を取得するか、値が設定されていない場合は <see langword="null" /> を返します。 <see langword="true" /> または <see langword="false" /> のいずれかを設定して、この列が読み取り専用であるかどうかを示します。または、派生クラスでオーバーライドされる場合は <see langword="null" /> (Visual Basic の場合 <see langword="Nothing" />) を設定できます。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">この列が読み取り専用の場合は <see langword="true" /> を返し、それ以外の場合は <see langword="false" /> を返します。 値が設定されていない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether a unique constraint applies to this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether a unique constraint applies to this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">一意の制約がこの列に適用されるかどうかを示す null 許容のブール値を取得します。または、値が設定されていない場合は <see langword="null" /> を返します。 <see langword="true" /> または <see langword="false" /> のいずれかを設定して、一意の制約がこの列に適用されるかどうかを示します。または、派生クラスでオーバーライドされる場合は <see langword="null" /> (Visual Basic の場合 <see langword="Nothing" />) を設定できます。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if a unique constraint applies to this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">この列に一意の制約が適用される場合、<see langword="true" /> を返します。それ以外の場合 <see langword="false" /> です。 値が設定されていない場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />) が返されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary vsli:raw="Gets the object based on the column property name.">列プロパティの名前に基づいてオブジェクトを取得します。</summary>
      <param name="property" vsli:raw="The column property name.">列のプロパティ名。</param>
      <returns vsli:raw="The object based on the column property name.">列のプロパティ名に基づくオブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary vsli:raw="Gets the numeric precision of the column data; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the numeric precision of the column data or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">列のデータの数値有効桁数を取得します。あるいは値が設定されていない場合は <see langword="null" />。 列のデータの数値有効桁数を指定する <see langword="int32" /> 値か、派生クラスでオーバーライドされる場合は <see langword="null" /> に設定できます。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value that specifies the precision of the column data, if the data is numeric; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">
        <see langword="int32" />データが数値の場合は、列データの有効桁数を示す値。それ以外の場合は、値が設定されていない場合は null 参照 ( <see langword="Nothing" /> Visual Basic)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary vsli:raw="Gets a nullable &lt;see langword=&quot;int32&quot; /&gt; value that either returns &lt;see langword=&quot;null&quot; /&gt; or the numeric scale of the column data. Can be set to either &lt;see langword=&quot;null&quot; /&gt; or an &lt;see langword=&quot;int32&quot; /&gt; value for the numeric scale of the column data when overridden in a derived class.">
        <see langword="null" /> または列のデータの小数点以下桁数を返す、null 許容の <see langword="int32" /> 値を取得します。 <see langword="null" /> か、派生クラスでオーバーライドされる場合に列のデータの小数点以下桁数を指定する <see langword="int32" /> 値に設定できます。</summary>
      <returns vsli:raw="A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set; otherwise, a &lt;see langword=&quot;int32&quot; /&gt; value that specifies the scale of the column data, if the data is numeric.">値が設定されていない場合、null 参照 (Visual Basic の場合は <see langword="Nothing" />)、あるいはデータが数値の場合、列のデータの有効桁数を指定する <see langword="int32" /> 値。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary vsli:raw="Gets the assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the assembly-qualified name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">列のデータの型を表す <see cref="T:System.Type" /> オブジェクトのアセンブリ修飾名を取得します。それ以外で、値が設定されていない場合は、<see langword="null" /> です。 アセンブリ修飾名、または派生クラスでオーバーライドされる場合は <see langword="null" />、のいずれかに設定できます。</summary>
      <returns vsli:raw="The assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">列のデータの型を表す <see cref="T:System.Type" /> オブジェクトのアセンブリ修飾名です。それ以外で、値が設定されていない場合は、null 参照 (Visual Basic の場合 <see langword="Nothing" />) です。</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary vsli:raw="Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync&quot; /&gt;.">データ ソースに対して実行する SQL ステートメントまたはストアド プロシージャを表します。 コマンドを表すデータベース固有のクラスの基底クラスを提供します。 <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary vsli:raw="Constructs an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbCommand" /> オブジェクトのインスタンスを構築します。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary vsli:raw="Attempts to cancel the execution of a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">派生クラス内でオーバーライドされた場合、<see cref="T:System.Data.Common.DbCommand" /> の実行のキャンセルを試行します。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">派生クラス内でオーバーライドされた場合、<see cref="T:System.Data.Common.DbParameter" /> オブジェクトの新しいインスタンスを作成します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbParameter" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbParameter" /> オブジェクトの新しいインスタンスを作成します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbParameter" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the command object.">コマンド オブジェクトを非同期に破棄します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">非同期操作を表す <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">派生クラス内でオーバーライドされた場合、接続に対してコマンド テキストを実行します。</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">
        <see cref="T:System.Data.CommandBehavior" /> のインスタンス。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">正しくない <see cref="T:System.Data.CommandBehavior" /> 値。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Providers should implement this method to provide a non-default implementation for &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; overloads.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.  &#xA;  &#xA; This method accepts a cancellation token that can be used to request the operation to be cancelled early. Implementations may ignore this request.">プロバイダーは、<see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" /> のオーバーロードに既定以外の実装を提供するには、このメソッドを実装する必要があります。  
  
既定の実装は <see cref="M:System.Data.Common.DbCommand.ExecuteReader" /> 同期メソッドを呼び出し、完了したタスクを返します。呼び出し元のスレッドはブロックされます。 既定の実装は、既に取り消されたキャンセル トークンを渡した場合、取り消されたタスクを返します。 ExecuteReader によってスローされる例外は、返されたタスクの Exception プロパティを介して通信されます。  
  
このメソッドは、早期に操作をキャンセルすることを要求するために使用できるキャンセル トークンを受け取ります。 実装は、この要求を無視する場合があります。</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">ステートメントの実行とデータ取得に関するオプション。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">非同期操作を取り消すトークン。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">正しくない <see cref="T:System.Data.CommandBehavior" /> 値。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes the command against its connection object, returning the number of rows affected.">派生クラス内でオーバーライドされた場合、接続オブジェクトに対して SQL ステートメントを実行します。</summary>
      <returns vsli:raw="The number of rows affected.">影響を受けた行の数。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;, which executes the command against its connection object, returning the number of rows affected.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">接続オブジェクトに対して SQL ステートメントを実行する <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> の非同期バージョン。  
  
CancellationToken.None を使用して、<see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> を呼び出します。</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token.  Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">これは <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> の非同期バージョンです。 プロバイダーは、適切な実装でオーバーライドする必要があります。 オプションで、キャンセル トークンを無視できます。  
  
既定の実装は <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> 同期メソッドを呼び出し、完了したタスクを返します。呼び出し元のスレッドはブロックされます。 既定の実装は、既に取り消されたキャンセル トークンを渡した場合、取り消されたタスクを返します。  <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> によってスローされる例外は、返されたタスクの Exception プロパティを介して通信されます。  
  
返されたタスクが完了するまで <see langword="DbCommand" /> オブジェクトの他のメソッドとプロパティを呼び出さないでください。</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">非同期操作を取り消すトークン。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">
        <see cref="P:System.Data.Common.DbCommand.CommandText" /> に対して <see cref="P:System.Data.Common.DbCommand.Connection" /> を実行し、<see cref="T:System.Data.Common.DbDataReader" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">
        <see cref="P:System.Data.Common.DbCommand.CommandText" /> に対して <see cref="P:System.Data.Common.DbCommand.Connection" /> を実行し、<see cref="T:System.Data.Common.DbDataReader" /> 値の 1 つを使用して <see cref="T:System.Data.CommandBehavior" /> を返します。</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">コマンドの動作を指定する列挙値の 1 つ。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">
        <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" /> に対して <see cref="P:System.Data.Common.DbCommand.CommandText" /> を実行し、<see cref="P:System.Data.Common.DbCommand.Connection" /> を返す <see cref="T:System.Data.Common.DbDataReader" /> の非同期バージョン。  
  
CancellationToken.None を使用して、<see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> を呼び出します。</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">正しくない <see cref="T:System.Data.CommandBehavior" /> 値。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">
        <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" /> に対して <see cref="P:System.Data.Common.DbCommand.CommandText" /> を実行し、<see cref="P:System.Data.Common.DbCommand.Connection" /> を返す <see cref="T:System.Data.Common.DbDataReader" /> の非同期バージョン。  
  
<see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> を呼び出します。</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies how the command should execute and how data should be retrieved.">コマンドの動作を指定した列挙値の 1 つ。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">正しくない <see cref="T:System.Data.CommandBehavior" /> 値。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">
        <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> を呼び出します。</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">コマンドの動作を指定する列挙値の 1 つ。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">非同期操作を取り消すトークン。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">正しくない <see cref="T:System.Data.CommandBehavior" /> 値。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">
        <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" /> に対して <see cref="P:System.Data.Common.DbCommand.CommandText" /> を実行し、<see cref="P:System.Data.Common.DbCommand.Connection" /> を返す <see cref="T:System.Data.Common.DbDataReader" /> の非同期バージョン。 このメソッドは操作を取り消す通知を配信します。  
  
<see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> を呼び出します。</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">非同期操作を取り消すトークン。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">正しくない <see cref="T:System.Data.CommandBehavior" /> 値。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.">派生クラス内でオーバーライドされた場合、クエリを実行し、そのクエリが返す結果セットの最初の行にある最初の列を返します。 他のすべての列および行は無視されます。</summary>
      <returns vsli:raw="The first column of the first row in the first result set.">結果セット内の最初の行の最初の列。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;, which executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.  &#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">クエリを実行し、クエリで返された結果セットの最初の行の最初の列を返す <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> の非同期バージョン。 他のすべての列および行は無視されます。  
  
CancellationToken.None を使用して、<see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> を呼び出します。</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">これは <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> の非同期バージョンです。 プロバイダーは、適切な実装でオーバーライドする必要があります。 オプションで、キャンセル トークンを無視できます。  
  
既定の実装は <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> 同期メソッドを呼び出し、完了したタスクを返します。呼び出し元のスレッドはブロックされます。 既定の実装は、既に取り消されたキャンセル トークンを渡した場合、取り消されたタスクを返します。 ExecuteScalar によってスローされる例外は、返されたタスクの Exception プロパティを介して通信されます。  
  
返されたタスクが完了するまで <see langword="DbCommand" /> オブジェクトの他のメソッドとプロパティを呼び出さないでください。</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">非同期操作を取り消すトークン。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">派生クラス内でオーバーライドされた場合、準備済み (またはコンパイル済み) バージョンのコマンドをデータ ソース上に作成します。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a prepared (or compiled) version of the command on the data source.">準備済み (またはコンパイル済み) バージョンのコマンドをデータ ソース上に非同期に作成します。</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">非同期操作を取り消すオプションのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">非同期操作を表す <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">
        <see cref="T:System.Data.IDbDataParameter" /> オブジェクトの新しいインスタンスを作成します。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">
        <see langword="IDbDataParameter" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="P:System.Data.IDbCommand.Connection" /> に対して <see cref="P:System.Data.IDbCommand.CommandText" /> を実行し、<see cref="T:System.Data.IDataReader" /> をビルドします。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.IDataReader" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="P:System.Data.IDbCommand.Connection" /> に対して <see cref="P:System.Data.IDbCommand.CommandText" /> を実行し、<see cref="T:System.Data.CommandBehavior" /> の値のいずれかを使用して <see cref="T:System.Data.IDataReader" /> をビルドします。</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">コマンドの動作を指定する列挙値の 1 つ。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.IDataReader" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">派生クラス内でオーバーライドされた場合、データ ソースに対して実行するテキスト コマンドを取得または設定します。</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">実行するテキスト コマンドです。 既定値は空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute the command and generating an error.">派生クラス内でオーバーライドされた場合、コマンド実行の試行を終了してエラーを生成するまでの待機時間 (秒単位) を取得または設定します。</summary>
      <returns vsli:raw="The time in seconds to wait for the command to execute.">コマンドの実行を待機する時間 (秒単位)。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary vsli:raw="Gets or sets how the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandText&quot; /&gt; property is interpreted.">派生クラス内でオーバーライドされた場合、<see cref="P:System.Data.Common.DbCommand.CommandText" /> プロパティがどのように解釈されるかを取得または設定します。</summary>
      <returns vsli:raw="One of the enumeration values that specifies how a command string is interpreted. The default is &lt;see langword=&quot;Text&quot; /&gt;.">コマンド文字列の解釈方法を指定する列挙値の1つ。 既定値は、<see langword="Text" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">この <see cref="T:System.Data.Common.DbConnection" /> により使用される <see cref="T:System.Data.Common.DbCommand" /> を取得または設定します。</summary>
      <returns vsli:raw="The connection to the data source.">データ ソースへの接続です。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">派生クラス内でオーバーライドされた場合、この <see cref="T:System.Data.Common.DbCommand" /> によって使用される <see cref="T:System.Data.Common.DbConnection" /> を取得または設定します。</summary>
      <returns vsli:raw="The connection to the data source.">データ ソースへの接続です。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects.">派生クラス内でオーバーライドされた場合、<see cref="T:System.Data.Common.DbParameter" /> オブジェクトのコレクションを取得します。</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL ステートメントまたはストアド プロシージャのパラメーター。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">派生クラス内でオーバーライドされた場合、この <see cref="T:System.Data.Common.DbCommand" /> オブジェクトが実行される <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> を取得または設定します。</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">.NET データプロバイダーのコマンドオブジェクトが実行されるトランザクション。 既定値は null 参照 (Visual Basic では<see langword="Nothing" /> ) です。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary vsli:raw="Gets or sets a value indicating whether the command object should be visible in a customized interface control.">派生クラス内でオーバーライドされた場合、カスタマイズしたインターフェイス コントロールにコマンド オブジェクトを表示する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command object should be visible in a control; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">コマンド オブジェクトをコントロールに表示する必要がある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects. For more information on parameters, see Configuring Parameters and Parameter Data Types.">
        <see cref="T:System.Data.Common.DbParameter" /> オブジェクトのコレクションを取得します。 パラメーターの詳細については、「パラメーターおよびパラメーター データ型の構成」を参照してください。</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL ステートメントまたはストアド プロシージャのパラメーター。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">この <see cref="T:System.Data.IDbCommand" /> のインスタンスで使用する <see cref="T:System.Data.IDbConnection" /> を取得または設定します。</summary>
      <returns vsli:raw="The connection to the data source.">データ ソースへの接続です。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">
        <see cref="T:System.Data.IDataParameterCollection" /> を取得します。</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL ステートメントまたはストアド プロシージャのパラメーター。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">この <see cref="T:System.Data.Common.DbCommand" /> オブジェクトが実行される <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> を取得または設定します。</summary>
      <returns vsli:raw="The transaction within which a &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">.NET Framework データ プロバイダーの <see langword="Command" /> オブジェクトが実行されるトランザクション。 既定値は null 参照 (Visual Basic では<see langword="Nothing" /> ) です。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">この <see cref="T:System.Data.Common.DbCommand" /> オブジェクトが実行される <see cref="T:System.Data.Common.DbTransaction" /> を取得または設定します。</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">.NET Framework データ プロバイダーの <see langword="Command" /> オブジェクトが実行されるトランザクション。 既定値は null 参照 (Visual Basic では<see langword="Nothing" /> ) です。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the Update method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">派生クラス内でオーバーライドされた場合、コマンドの結果が、<see cref="T:System.Data.Common.DbDataAdapter" /> の Update メソッドにより使用された場合に <see cref="T:System.Data.DataRow" /> に適用される方法を取得または設定します。</summary>
      <returns vsli:raw="One of the enumeration values that indicates how command results are applied. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">コマンドの結果がどのように適用されるかを示す列挙値の1つ。 コマンドが自動的に生成される場合を除き、既定値は <see langword="Both" /> です。 既定は <see langword="None" />です。</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary vsli:raw="Automatically generates single-table commands used to reconcile changes made to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the associated database. This is an abstract class that can only be inherited.">データベースに関連付けられた <see cref="T:System.Data.DataSet" /> への変更を調整するための単一テーブル コマンドを自動的に生成します。 これは抽象クラスであり、継承以外はできません。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of a class that inherits from the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> クラスから継承するクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary vsli:raw="Allows the provider implementation of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class to handle additional parameter properties.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> クラスのプロバイダーの実装が、追加パラメーターのプロパティを処理できるようにします。</summary>
      <param name="parameter" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to which the additional modifications are applied.">追加の変更を適用する対象の <see cref="T:System.Data.Common.DbParameter" />。</param>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the schema table provided by &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> で提供されるスキーマ テーブルの <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />。</param>
      <param name="statementType" vsli:raw="The type of command being generated; INSERT, UPDATE or DELETE.">生成されるコマンドの種類である INSERT、UPDATE、または DELETE。</param>
      <param name="whereClause" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parameter is part of the update or delete WHERE clause, &lt;see langword=&quot;false&quot; /&gt; if it is part of the insert or update values.">パラメーターが UPDATE または DELETE の WHERE 句の一部である場合は <see langword="true" />。INSERT または UPDATE の値の一部である場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source.">データ ソースで削除処理を実行するための、自動生成された <see cref="T:System.Data.Common.DbCommand" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">削除を実行するための自動生成された <see cref="T:System.Data.Common.DbCommand" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source, optionally using columns for parameter names.">オプションでパラメーター名に列を使用し、データ ソースで削除処理を実行するための、自動生成された <see cref="T:System.Data.Common.DbCommand" /> オブジェクトを取得します。</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">可能であれば、列名に一致するパラメーター名を生成する場合は <see langword="true" />。 <see langword="false" /> の場合、<c>@p1</c>、<c>@p2</c> のように生成します。</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">削除を実行するための自動生成された <see cref="T:System.Data.Common.DbCommand" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source.">データ ソースで挿入処理を実行するための、自動生成された <see cref="T:System.Data.Common.DbCommand" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">挿入を実行するための自動生成された <see cref="T:System.Data.Common.DbCommand" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source, optionally using columns for parameter names.">オプションでパラメーター名に列を使用し、データ ソースで挿入処理を実行するための、自動生成された <see cref="T:System.Data.Common.DbCommand" /> オブジェクトを取得します。</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">可能であれば、列名に一致するパラメーター名を生成する場合は <see langword="true" />。 <see langword="false" /> の場合、<c>@p1</c>、<c>@p2</c> のように生成します。</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">挿入を実行するための自動生成された <see cref="T:System.Data.Common.DbCommand" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified parameter in the format of &lt;c&gt;@p#&lt;/c&gt;. Use when building a custom command builder.">指定したパラメーターの名前を、<c>@p#</c> の形式で返します。 カスタムのコマンド ビルダーを作成する場合に使用します。</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">パラメーターの名前の一部として含まれる数。</param>
      <returns vsli:raw="The name of the parameter with the specified number appended as part of the parameter name.">パラメーター名の一部として追加された、指定した数を含むパラメーターの名前。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary vsli:raw="Returns the full parameter name, given the partial parameter name.">部分的なパラメーター名を指定して、完全なパラメーター名を返します。</summary>
      <param name="parameterName" vsli:raw="The partial name of the parameter.">パラメーターの部分的な名前。</param>
      <returns vsli:raw="The full parameter name corresponding to the partial parameter name requested.">要求された部分的なパラメーター名に対応する完全なパラメーター名。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary vsli:raw="Returns the placeholder for the parameter in the associated SQL statement.">関連付けられた SQL ステートメントのパラメーターのプレースホルダーを返します。</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">パラメーターの名前の一部として含まれる数。</param>
      <returns vsli:raw="The name of the parameter with the specified number appended.">追加された、指定した数を含むパラメーターの名前。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary vsli:raw="Returns the schema table for the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> に対するスキーマ テーブルを返します。</summary>
      <param name="sourceCommand" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; for which to retrieve the corresponding schema table.">対応するスキーマ テーブルを取得する対象の <see cref="T:System.Data.Common.DbCommand" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that represents the schema for the specific &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">特定の <see cref="T:System.Data.DataTable" /> に対するスキーマを表す <see cref="T:System.Data.Common.DbCommand" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source.">データ ソースで更新処理を実行するための、自動生成された <see cref="T:System.Data.Common.DbCommand" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">更新を実行するための自動生成された <see cref="T:System.Data.Common.DbCommand" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source, optionally using columns for parameter names.">オプションでパラメーター名に列を使用し、データ ソースで更新処理を実行するための、自動生成された <see cref="T:System.Data.Common.DbCommand" /> オブジェクトを取得します。</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">可能であれば、列名に一致するパラメーター名を生成する場合は <see langword="true" />。 <see langword="false" /> の場合、<c>@p1</c>、<c>@p2</c> のように生成します。</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">更新を実行するための自動生成された <see cref="T:System.Data.Common.DbCommand" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary vsli:raw="Resets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandTimeout&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.Transaction&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandType&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; properties on the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">
        <see cref="P:System.Data.Common.DbCommand.CommandTimeout" /> の <see cref="P:System.Data.Common.DbCommand.Transaction" />、<see cref="P:System.Data.Common.DbCommand.CommandType" />、<see cref="T:System.Data.UpdateRowSource" />、および <see cref="T:System.Data.Common.DbCommand" /> の各プロパティをリセットします。</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; to be used by the command builder for the corresponding insert, update, or delete command.">対応する挿入、更新、または削除コマンドのコマンド ビルダーが使用する <see cref="T:System.Data.Common.DbCommand" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; instance to use for each insert, update, or delete operation. Passing a null value allows the &lt;see cref=&quot;M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)&quot; /&gt; method to create a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object based on the Select command associated with the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">挿入、更新、または削除の各操作で使用する <see cref="T:System.Data.Common.DbCommand" /> インスタンス。 null 値を渡すことで、<see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> メソッドは、<see cref="T:System.Data.Common.DbCommand" /> に関連付けられている SELECT コマンドに基づいて <see cref="T:System.Data.Common.DbCommandBuilder" /> オブジェクトを作成できます。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary vsli:raw="Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.">大文字と小文字を正しく区別したカタログ内の、引用符で囲まれていない ID が指定されると、その ID を引用符で囲まれた正しい形式で返します。ID 内に埋め込まれている引用符はすべて適切にエスケープされます。</summary>
      <param name="unquotedIdentifier" vsli:raw="The original unquoted identifier.">引用符で囲まれていない元の ID。</param>
      <returns vsli:raw="The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.">引用符で囲まれたバージョンの ID。 ID 内に埋め込まれている引用符は適切にエスケープされます。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary vsli:raw="Clears the commands associated with this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">この <see cref="T:System.Data.Common.DbCommandBuilder" /> に関連付けられているコマンドを削除します。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Adds an event handler for the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event.">
        <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> イベントのイベント ハンドラーを追加します。</summary>
      <param name="rowUpdatingEvent" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; instance containing information about the event.">イベントの情報が格納されている <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to handle the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event for a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> を登録して、<see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> の <see cref="T:System.Data.Common.DbDataAdapter" /> イベントを処理します。</summary>
      <param name="adapter" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; to be used for the update.">更新に使用する <see cref="T:System.Data.Common.DbDataAdapter" />。</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary vsli:raw="Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.">引用符で囲まれた ID が指定されると、その ID を引用符で囲まれない正しい形式で返します。ID 内に埋め込まれている引用符はすべて適切にエスケープ解除されます。</summary>
      <param name="quotedIdentifier" vsli:raw="The identifier that will have its embedded quotes removed.">埋め込まれている引用符が削除される ID。</param>
      <returns vsli:raw="The unquoted identifier, with embedded quotes properly un-escaped.">引用符で囲まれない ID。埋め込まれていた引用符は適切にエスケープ解除されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> クラスのインスタンスの <see cref="T:System.Data.Common.CatalogLocation" /> を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; object.">
        <see cref="T:System.Data.Common.CatalogLocation" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary vsli:raw="Gets or sets a string used as the catalog separator for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> クラスのインスタンスのカタログの区切り記号として使用する文字列を取得または設定します。</summary>
      <returns vsli:raw="A string indicating the catalog separator for use with an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> クラスのインスタンスで使用するカタログの区切り記号を示す文字列。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary vsli:raw="Specifies which &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; is to be used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">
        <see cref="T:System.Data.ConflictOption" /> で使用する <see cref="T:System.Data.Common.DbCommandBuilder" /> を指定します。</summary>
      <returns vsli:raw="Returns one of the &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; values describing the behavior of this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">この <see cref="T:System.Data.ConflictOption" /> の動作を説明する <see cref="T:System.Data.Common.DbCommandBuilder" /> 値の 1 つを返します。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object for which Transact-SQL statements are automatically generated.">Transact-SQL ステートメントを自動生成する対象の <see cref="T:System.Data.Common.DbDataAdapter" /> オブジェクトを取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary vsli:raw="Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">名前に空白や予約済みトークンなどの文字を含むデータベース オブジェクト (テーブル、列など) を指定するための開始文字を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property cannot be changed after an insert, update, or delete command has been generated.">このプロパティは、挿入、更新、または削除コマンドの生成後には変更できません。</exception>
      <returns vsli:raw="The beginning character or characters to use. The default is an empty string.">使用する開始文字。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary vsli:raw="Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">名前に空白や予約済みトークンなどの文字を含むデータベース オブジェクト (テーブル、列など) を指定するための終了文字を取得または設定します。</summary>
      <returns vsli:raw="The ending character or characters to use. The default is an empty string.">使用する終了文字。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary vsli:raw="Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.">スキーマ識別子と他の識別子との間の区切り記号として使用される文字列を取得または設定します。</summary>
      <returns vsli:raw="The character to be used as the schema separator.">スキーマ区切り記号として使用される文字列。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary vsli:raw="Specifies whether all column values in an update statement are included or only changed ones.">UPDATE ステートメントにすべての列値が含まれるのか、変更になった列値だけが含まれるのかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UPDATE statement generated by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; includes all columns; &lt;see langword=&quot;false&quot; /&gt; if it includes only changed columns.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> で生成される UPDATE ステートメントがすべての列を含む場合は <see langword="true" />。変更になった列だけを含む場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary vsli:raw="Defines the core behavior of database connections and provides a base class for database-specific connections.">データベース接続のコア動作を定義し、データベース専用の接続の基底クラスを提供します。</summary>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary vsli:raw="Occurs when the state of the connection changes.">接続の状態が変化したときに発生します。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbConnection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="When overridden in a derived class, starts a database transaction.">派生クラスでオーバーライドされた場合、データベース トランザクションを開始します。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">使用するトランザクションの分離レベルを示す列挙値の 1 つ。</param>
      <returns vsli:raw="An object representing the new transaction.">新しいトランザクションを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously starts a database transaction.">データベース トランザクションを非同期に開始します。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">使用するトランザクションの分離レベルを示す列挙値の 1 つ。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">非同期操作を取り消すトークン。</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが新しいトランザクションを表すオブジェクトであるタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary vsli:raw="Starts a database transaction.">データベース トランザクションを開始します。</summary>
      <returns vsli:raw="An object representing the new transaction.">新しいトランザクションを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Starts a database transaction with the specified isolation level.">分離レベルを指定して、データベース トランザクションを開始します。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">使用するトランザクションの分離レベルを示す列挙値の 1 つ。</param>
      <returns vsli:raw="An object representing the new transaction.">新しいトランザクションを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">データベース トランザクションを非同期に開始します。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">使用するトランザクションの分離レベルを示す列挙値の 1 つ。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">非同期操作を取り消すオプションのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが新しいトランザクションを表すオブジェクトであるタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">データベース トランザクションを非同期に開始します。</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">非同期操作を取り消すオプションのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが新しいトランザクションを表すオブジェクトであるタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="When overridden in a derived class, changes the current database for an open connection.">派生クラスでオーバーライドされた場合、開いている接続の現在のデータベースを変更します。</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">使用する接続のデータベースの名前。</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously changes the current database for an open connection.">開いている接続の現在のデータベースを非同期に変更します。</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">使用する接続のデータベースの名前。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">非同期操作を取り消すオプションのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary vsli:raw="When overridden in a derived class, closes the connection to the database.">派生クラスでオーバーライドされた場合、データベースへの接続を閉じます。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary vsli:raw="Asynchronously closes the connection to the database.">データベースへの接続を非同期に閉じます。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">非同期操作を表す <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">現在の接続に関連付けられている <see cref="T:System.Data.Common.DbCommand" /> オブジェクトを作成し、返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbCommand" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary vsli:raw="When overridden in a derived class, creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">派生クラスでオーバーライドされた場合、現在の接続に関連付けられている <see cref="T:System.Data.Common.DbCommand" /> オブジェクトを作成して返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbCommand" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the connection object.">接続オブジェクトを非同期に破棄します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">非同期操作を表す <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary vsli:raw="Enlists in the specified transaction.">指定したトランザクションに参加します。</summary>
      <param name="transaction" vsli:raw="A reference to an existing &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; in which to enlist.">登録先の既存の <see cref="T:System.Transactions.Transaction" /> への参照。</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">この <see cref="T:System.Data.Common.DbConnection" /> のデータ ソースのスキーマ情報を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">スキーマ情報を格納する <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name.">スキーマ名として指定した文字列を使用して、この <see cref="T:System.Data.Common.DbConnection" /> のデータ ソースのスキーマ情報を返します。</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">返すスキーマの名前を指定します。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> は null として指定されます。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">スキーマ情報を格納する <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name and the specified string array for the restriction values.">スキーマ名に指定した文字列と制限値に指定した文字列配列を使用して、この <see cref="T:System.Data.Common.DbConnection" /> のデータ ソースのスキーマ情報を返します。</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">返すスキーマの名前を指定します。</param>
      <param name="restrictionValues" vsli:raw="Specifies a set of restriction values for the requested schema.">要求したスキーマの制限値のセットを指定します。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> は null として指定されます。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">スキーマ情報を格納する <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.String,System.String[],System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])&quot; /&gt; will be communicated via the returned Task Exception property.">これは <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" /> の非同期バージョンです。
プロバイダーは、適切な実装でオーバーライドする必要があります。
必要に応じて、<paramref name="cancellationToken" /> を優先できます。
既定の実装は同期 <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" /> コールを呼び出し、完了したタスクを返します。
既定の実装は、既に取り消された <paramref name="cancellationToken" /> を渡した場合、取り消されたタスクを返します。
<see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" /> によってスローされる例外は、返されたタスクの Exception プロパティを介して通信されます。</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">返すスキーマの名前を指定します。</param>
      <param name="restrictionValues" vsli:raw="Specifies a set of restriction values for the requested schema.">要求したスキーマの制限値のセットを指定します。</param>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取り消し命令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String)&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String)&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String)&quot; /&gt; will be communicated via the returned Task Exception property.">これは <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" /> の非同期バージョンです。
プロバイダーは、適切な実装でオーバーライドする必要があります。
必要に応じて、<paramref name="cancellationToken" /> を優先できます。
既定の実装は同期 <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" /> コールを呼び出し、完了したタスクを返します。
既定の実装は、既に取り消された <paramref name="cancellationToken" /> を渡した場合、取り消されたタスクを返します。
<see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" /> によってスローされる例外は、返されたタスクの Exception プロパティを介して通信されます。</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">返すスキーマの名前を指定します。</param>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取り消し命令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is an asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; will be communicated via the returned Task Exception property.">これは、の非同期バージョンです <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 。
プロバイダーは、適切な実装でオーバーライドする必要があります。
必要に応じて、<paramref name="cancellationToken" /> を優先できます。
既定の実装は同期 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> コールを呼び出し、完了したタスクを返します。
既定の実装は、既に取り消された <paramref name="cancellationToken" /> を渡した場合、取り消されたタスクを返します。
<see cref="M:System.Data.Common.DbConnection.GetSchema" /> によってスローされる例外は、返されたタスクの Exception プロパティを介して通信されます。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取り消し命令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">
        <see cref="E:System.Data.Common.DbConnection.StateChange" /> イベントを発生させます。</summary>
      <param name="stateChange" vsli:raw="A &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.StateChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary vsli:raw="When overridden in a derived class, opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;.">派生クラスでオーバーライドされた場合、<see cref="P:System.Data.Common.DbConnection.ConnectionString" /> で指定された設定を使用してデータベース接続を開きます。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;, which opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;. This method invokes the virtual method &lt;see cref=&quot;M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">
        <see cref="M:System.Data.Common.DbConnection.Open" /> で指定した設定を使用してデータベース接続を開く <see cref="P:System.Data.Common.DbConnection.ConnectionString" /> の非同期バージョン。 このメソッドは、CancellationToken.None で仮想メソッド <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> を呼び出します。</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token can optionally be honored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt; call and returns a completed task. The default implementation will return a cancelled task if passed an already cancelled cancellationToken. Exceptions thrown by Open will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbConnection&quot; /&gt; object until the returned Task is complete.">これは <see cref="M:System.Data.Common.DbConnection.Open" /> の非同期バージョンです。 プロバイダーは、適切な実装でオーバーライドする必要があります。 オプションで、キャンセル トークン優先できます。  
  
既定の実装は同期 <see cref="M:System.Data.Common.DbConnection.Open" /> コールを呼び出し、完了したタスクを返します。 既定の実装は、既に取り消された cancellationToken を渡した場合、取り消されたタスクを返します。 Open によってスローされる例外は、返されたタスクの Exception プロパティを介して通信されます。  
  
返されたタスクが完了するまで <see langword="DbConnection" /> オブジェクトの他のメソッドとプロパティを呼び出さないでください。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取り消し命令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">データベース トランザクションを開始します。</summary>
      <returns vsli:raw="An object that represents the new transaction.">新しいトランザクションを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified isolation level.">分離レベルを指定して、データベース トランザクションを開始します。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">使用するトランザクションの分離レベルを示す列挙値の 1 つ。</param>
      <returns vsli:raw="An object that represents the new transaction.">新しいトランザクションを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the current connection.">現在の接続に関連付けられた <see cref="T:System.Data.Common.DbCommand" /> オブジェクトを作成し、返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the connection.">接続に関連付けられている <see cref="T:System.Data.Common.DbCommand" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary vsli:raw="When overridden in a derived class, gets or sets the string used to open the connection.">派生クラスでオーバーライドされた場合、接続を開くために使用される文字列を取得または設定します。</summary>
      <returns vsli:raw="The connection string used to establish the initial connection. The exact contents of the connection string depend on the specific data source for this connection. The default value is an empty string.">初期接続を確立するために使用する接続文字列。 接続文字列の正確な内容は、この接続の特定のデータ ソースに応じて異なります。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while establishing a connection before terminating the attempt and generating an error.">試行を終了してエラーを生成するまでの、接続の確立時に待機する時間 (秒単位) を取得します。</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is determined by the specific type of connection that you are using.">接続が開くのを待機する時間 (秒単位) です。 既定値は、使用している特定の接続の種類により決まります。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary vsli:raw="When overridden in a derived class, gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.">派生クラスでオーバーライドされた場合、接続が開いてから現在のデータベースの名前を取得するか、接続が開く前に接続文字列に指定されたデータベース名を取得します。</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.">現在のデータベース、または接続が開いてから使用するデータベースの名前。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary vsli:raw="When overridden in a derived class, gets the name of the database server to which to connect.">派生クラスでオーバーライドされた場合、接続するデータベース サーバーの名前を取得します。</summary>
      <returns vsli:raw="The name of the database server to which to connect. The default value is an empty string.">接続するデータベース サーバーの名前。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">この <see cref="T:System.Data.Common.DbProviderFactory" /> の <see cref="T:System.Data.Common.DbConnection" /> を取得します。</summary>
      <returns vsli:raw="A set of methods for creating instances of a provider's implementation of the data source classes.">プロバイダーのデータ ソース クラスの実装のインスタンスを作成するためのメソッドのセット。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary vsli:raw="When overridden in a derived class, gets a string that represents the version of the server to which the object is connected.">派生クラスでオーバーライドされた場合、オブジェクトが接続しているサーバーのバージョンを表す文字列を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Data.Common.DbConnection.ServerVersion&quot; /&gt; was called while the returned Task was not completed and the connection was not opened after a call to &lt;see cref=&quot;Overload:System.Data.Common.DbConnection.OpenAsync&quot; /&gt;.">返されるタスクが完了しておらず、<see cref="Overload:System.Data.Common.DbConnection.OpenAsync" /> への呼び出しの後に接続が開かれていないときに、<see cref="P:System.Data.Common.DbConnection.ServerVersion" /> が呼び出されました。</exception>
      <returns vsli:raw="The version of the database. The format of the string returned depends on the specific type of connection you are using.">データベースのバージョンです。 返される文字列の形式は、使用している特定の接続の種類に応じて決まります。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary vsli:raw="Gets a string that describes the state of the connection.">接続の状態を説明する文字列を取得します。</summary>
      <returns vsli:raw="The state of the connection. The format of the string returned depends on the specific type of connection you are using.">接続の状態。 返される文字列の形式は、使用している特定の接続の種類に応じて決まります。</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary vsli:raw="Provides a base class for strongly typed connection string builders.">厳密に型指定された接続文字列ビルダーのための基底クラスを提供します。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class, optionally using ODBC rules for quoting values.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> クラスの新しいインスタンスを初期化します。必要に応じて、値を引用符で囲むことについての ODBC の規則が使用されます。</summary>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields; &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">フィールドの区切りに {} を使用する場合、<see langword="true" />。引用符を使用する場合、<see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an entry with the specified key and value into the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">指定したキーおよび値を持つエントリを <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> に追加します。</summary>
      <param name="keyword" vsli:raw="The key to add to the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> に追加するキー。</param>
      <param name="value" vsli:raw="The value for the specified key.">指定したキーの値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> は読み取り専用です。

- または -

<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> は固定サイズです。</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">既存の <see cref="T:System.Text.StringBuilder" /> オブジェクトにキーと値を追加する、効率的かつ安全な方法を提供します。</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">キー/値ペアを追加する対象の <see cref="T:System.Text.StringBuilder" />。</param>
      <param name="keyword" vsli:raw="The key to be added.">追加されるキー。</param>
      <param name="value" vsli:raw="The value for the supplied key.">指定されたキーの値。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">既存の <see cref="T:System.Text.StringBuilder" /> オブジェクトにキーと値を追加する、効率的かつ安全な方法を提供します。</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">キー/値ペアを追加する対象の <see cref="T:System.Text.StringBuilder" />。</param>
      <param name="keyword" vsli:raw="The key to be added.">追加されるキー。</param>
      <param name="value" vsli:raw="The value for the supplied key.">指定されたキーの値。</param>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields, &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">フィールドの区切りに {} を使用する場合、<see langword="true" />。引用符を使用する場合、<see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> インスタンスの内容を消去します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> は読み取り専用です。</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary vsli:raw="Clears the collection of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects on the associated &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">関連する <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 上の <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトのコレクションをクリアします。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains a specific key.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> に特定のキーが格納されているかどうかを判断します。</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 内で検索されるキー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定したキーを持つエントリが <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> に格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary vsli:raw="Compares the connection information in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object with the connection information in the supplied object.">この <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> オブジェクトの接続情報を、提供されたオブジェクトの接続情報を比較します。</summary>
      <param name="connectionStringBuilder" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; to be compared with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> オブジェクトと比較される <see cref="T:System.Data.Common.DbConnectionStringBuilder" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection information in both of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; objects causes an equivalent connection string; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> オブジェクトの両方の接続情報により同等の接続文字列が生じる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary vsli:raw="Fills a supplied &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; with information about all the properties of this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">指定された <see cref="T:System.Collections.Hashtable" /> に、この <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> のすべてのプロパティに関する情報を格納します。</summary>
      <param name="propertyDescriptors" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; to be filled with information about this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">この <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> に関する情報が格納される <see cref="T:System.Collections.Hashtable" />。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary vsli:raw="Removes the entry with the specified key from the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">指定されたキーを持つエントリを <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> インスタンスから削除します。</summary>
      <param name="keyword" vsli:raw="The key of the key/value pair to be removed from the connection string in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">この <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 内の接続文字列から削除するキー/値ペアのキー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)">
        <paramref name="keyword" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only, or the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> が読み取り専用であるか、<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> が固定サイズです。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key existed within the connection string and was removed; &lt;see langword=&quot;false&quot; /&gt; if the key did not exist.">キーが接続文字列内に存在していて削除された場合は <see langword="true" />、キーが存在しなかった場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary vsli:raw="Indicates whether the specified key exists in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">指定されたキーが、この <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> インスタンスに存在するかどうかを示します。</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 内で検索されるキー。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定したキーを持つエントリが <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> に格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">
        <see cref="T:System.Collections.ICollection" /> の要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.ICollection" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">指定したキーおよび値を持つ要素を <see cref="T:System.Collections.IDictionary" /> オブジェクトに追加します。</summary>
      <param name="keyword" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the key of the element to add.">追加する要素のキーとして使用する <see cref="T:System.Object" />。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the value of the element to add.">追加する要素の値として使用する <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object contains an element with the specified key.">指定したキーを持つ要素が <see cref="T:System.Collections.IDictionary" /> オブジェクトに格納されているかどうかを確認します。</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionary" /> オブジェクト内で検索されるキー。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したキーを持つ要素を <see langword="true" /> が保持している場合は <see cref="T:System.Collections.IDictionary" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionary" /> オブジェクトの <see cref="T:System.Collections.IDictionaryEnumerator" /> オブジェクトを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionary" /> オブジェクトの <see cref="T:System.Collections.IDictionaryEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">指定したキーを持つ要素を <see cref="T:System.Collections.IDictionary" /> オブジェクトから削除します。</summary>
      <param name="keyword" vsli:raw="The key of the element to remove.">削除する要素のキー。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">コレクションを反復処理する列挙子を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">コンポーネントのこのインスタンスのカスタム属性のコレクションを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; containing the attributes for this object.">このオブジェクトの属性を格納している <see cref="T:System.ComponentModel.AttributeCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">コンポーネントのこのインスタンスのクラス名を返します。</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">オブジェクトのクラス名。クラスに名前がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">コンポーネントのこのインスタンスの名前を返します。</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">オブジェクト名。オブジェクトに名前がない場合は <see langword="null" /> 。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">コンポーネントのこのインスタンスの型コンバーターを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">このオブジェクトのコンバーターである <see cref="T:System.ComponentModel.TypeConverter" />。このオブジェクトの <see cref="T:System.ComponentModel.TypeConverter" /> がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">コンポーネントのこのインスタンスの既定のイベントを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">このオブジェクトの既定のイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> 。このオブジェクトにイベントがない場合は <see langword="null" /> 。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">コンポーネントのこのインスタンスの既定のプロパティを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">このオブジェクトの既定のプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" />。このオブジェクトにプロパティがない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">コンポーネントのこのインスタンスに対して指定されている型のエディターを返します。</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">このオブジェクトのエディターを表す <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">指定した型の、このオブジェクトのエディターとなる <see cref="T:System.Object" />。エディターが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">コンポーネントのこのインスタンスのイベントを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">このコンポーネント インスタンスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">フィルターとして指定された属性配列を使用して、コンポーネントのこのインスタンスのイベントを返します。</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">フィルターとして使用される <see cref="T:System.Attribute" /> 型の配列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">このコンポーネント インスタンスのフィルター処理したイベントを表す <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">コンポーネントのこのインスタンスのプロパティを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">このコンポーネント インスタンスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">属性配列をフィルターとして使用して、コンポーネントのこのインスタンスのプロパティを返します。</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">フィルターとして使用される <see cref="T:System.Attribute" /> 型の配列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">このコンポーネント インスタンスのフィルター処理したプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">指定したプロパティ記述子によって記述されたプロパティを含むオブジェクトを返します。</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">所有者を見つけるプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">指定したプロパティの所有者を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary vsli:raw="Returns the connection string associated with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> に関連付けられた接続文字列を返します。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">現在の <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> プロパティ。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Retrieves a value corresponding to the supplied key from this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">提供されたキーに対応する値をこの <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> から取得します。</summary>
      <param name="keyword" vsli:raw="The key of the item to retrieve.">取得する項目のキー。</param>
      <param name="value" vsli:raw="The value corresponding to the &lt;paramref name=&quot;keyword&quot; /&gt;.">
        <paramref name="keyword" /> に対応する値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; contains a null value (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> に null 値 (Visual Basic の場合は <see langword="Nothing" />) が含まれています。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyword&quot; /&gt; was found within the connection string, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <paramref name="keyword" /> が接続文字列内で見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property is visible in Visual Studio designers.">
        <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> プロパティを Visual Studio デザイナーに表示するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection string is visible within designers; &lt;see langword=&quot;false&quot; /&gt; otherwise. The default is &lt;see langword=&quot;true&quot; /&gt;.">接続文字列がデザイナー内に表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary vsli:raw="Gets or sets the connection string associated with the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> に関連付けられた接続文字列を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid connection string argument has been supplied.">無効な接続文字列引数が指定されています。</exception>
      <returns vsli:raw="The current connection string, created from the key/value pairs that are contained within the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;. The default value is an empty string.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 内に含まれるキーと値のペアから作成された、現在の接続文字列。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary vsli:raw="Gets the current number of keys that are contained within the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">
        <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> プロパティ内に含まれる現在のキー数を取得します。</summary>
      <returns vsli:raw="The number of keys that are contained within the connection string maintained by the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> インスタンスで保守されている接続文字列内に含まれるキーの数。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> が固定サイズかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> が固定サイズの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> が読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が読み取り専用の場合は <see cref="T:System.Data.Common.DbConnectionStringBuilder" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">指定されたキーに関連付けられている値を取得または設定します。</summary>
      <param name="keyword" vsli:raw="The key of the item to get or set.">取得または設定する項目のキー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The property is set, &lt;paramref name=&quot;keyword&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">このプロパティが設定されていますが、<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> が読み取り専用です。

- または -

プロパティが設定済みで、コレクション内に <paramref name="keyword" /> が存在せず、<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> が固定サイズです。</exception>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, trying to get it returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), and trying to set it creates a new element using the specified key.&#xA;&#xA; Passing a null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) key throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;. Assigning a null value removes the key/value pair.">指定されたキーに関連付けられている値。 指定したキーが見つからない場合、そのキーを取得しようとした場合はnull 参照が返され (Visual Basic では <see langword="Nothing" />)、そのキーを設定しようとした場合は、指定したキーを使用して新しい要素が作成されます。

null キー (Visual Basic では <see langword="Nothing" />) を渡すと、<see cref="T:System.ArgumentNullException" /> がスローされます。 null 値を割り当てると、キー/値ペアが削除されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> 内のキーが格納されている <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> 内のキーが格納されている <see cref="T:System.Data.Common.DbConnectionStringBuilder" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">
        <see cref="T:System.Collections.ICollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> へのアクセスの同期に使用できるオブジェクトです。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the element with the specified key.">指定したキーを持つ要素を取得または設定します。</summary>
      <param name="keyword" vsli:raw="The key of the element to get or set.">取得または設定する要素のキー。</param>
      <returns vsli:raw="The element with the specified key.">指定したキーを持つ要素。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> 内の値を格納している <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> 内の値が格納されている <see cref="T:System.Data.Common.DbConnectionStringBuilder" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary vsli:raw="Aids implementation of the &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; interface. Inheritors of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a DataAdapter.">
        <see cref="T:System.Data.IDbDataAdapter" /> インターフェイスの実装を支援します。 <see cref="T:System.Data.Common.DbDataAdapter" /> の継承クラスは、厳密な型指定を行う関数のセットを実装しますが、DataAdapter を完全に実装するために必要な機能の大部分は継承します。</summary>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary vsli:raw="The default name used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object for table mappings.">
        <see cref="T:System.Data.Common.DataAdapter" /> オブジェクトがテーブル マップに使用する既定の名前。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of a DataAdapter class.">DataAdapter クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DataAdapter&quot; /&gt; class from an existing object of the same type.">既存の同じ型のオブジェクトから、<see langword="DataAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="adapter" vsli:raw="A &lt;see langword=&quot;DataAdapter&quot; /&gt; object used to create the new &lt;see langword=&quot;DataAdapter&quot; /&gt;.">新しい <see langword="DataAdapter" /> の作成に使用する <see langword="DataAdapter" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to the current batch.">
        <see cref="T:System.Data.IDbCommand" /> を現在のバッチに追加します。</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to add to the batch.">バッチに追加する <see cref="T:System.Data.IDbCommand" />。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">アダプターでバッチがサポートされていません。</exception>
      <returns vsli:raw="The number of commands in the batch before adding the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> を追加する前のバッチ内のコマンド数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; objects from the batch.">バッチからすべての <see cref="T:System.Data.IDbCommand" /> オブジェクトを削除します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">アダプターでバッチがサポートされていません。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; used to update the data source.">データ ソースの更新に使用した <see cref="T:System.Data.DataRow" />。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> 処理中に実行した <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">コマンドが UPDATE、INSERT、DELETE、または SELECT ステートメントのいずれかを示す値。</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> クラスの新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that updates the data source.">データ ソースを更新する <see cref="T:System.Data.DataRow" />。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> 処理中に実行する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">コマンドが UPDATE、INSERT、DELETE、または SELECT ステートメントのいずれかを示す値。</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> クラスの新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary vsli:raw="Executes the current batch.">現在のバッチを実行します。</summary>
      <returns vsli:raw="The return value from the last command in the batch.">バッチ内の直前のコマンドの戻り値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 内の行を追加または更新します。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。 これには、行を返さないステートメントの影響を受ける行は含まれません。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">
        <see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">取得を開始する、0 から始まるレコード番号。</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">取得するレコードの最大数。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">テーブル マップに使用するソース テーブルの名前。</param>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> が無効です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">ソース テーブルが無効です。  
  
 - または -  
  
 接続が無効です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">接続が見つかりませんでした。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">
        <paramref name="startRecord" /> パラメーターが 0 未満です。  
  
- または - 
<paramref name="maxRecords" /> パラメーターが 0 未満です。</exception>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。 これには、行を返さないステートメントの影響を受ける行は含まれません。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and source table names, command string, and command behavior.">
        <see cref="T:System.Data.DataSet" /> 名、ソース テーブル名、コマンド文字列、およびコマンド動作を使用して、データ ソース内の列と一致するように、<see cref="T:System.Data.DataSet" /> 内の指定した範囲の行を追加または更新します。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">取得を開始する、0 から始まるレコード番号。</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">取得するレコードの最大数。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">テーブル マップに使用するソース テーブルの名前。</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">ソース テーブルが無効です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">
        <paramref name="startRecord" /> パラメーターが 0 未満です。  
  
- または - 
<paramref name="maxRecords" /> パラメーターが 0 未満です。</exception>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。 これには、行を返さないステートメントの影響を受ける行は含まれません。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">
        <see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の列と一致するように <see cref="T:System.Data.DataTable" /> 内の行を追加または更新します。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">テーブル マップに使用するソース テーブルの名前。</param>
      <exception cref="T:System.SystemException" vsli:raw="The source table is invalid.">ソース テーブルが無効です。</exception>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。 これには、行を返さないステートメントの影響を受ける行は含まれません。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">
        <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</summary>
      <param name="dataTable" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use for table mapping.">テーブル マップに使用する <see cref="T:System.Data.DataTable" /> の名前。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">ソース テーブルが無効です。</exception>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。 これには、行を返さないステートメントの影響を受ける行は含まれません。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" />、<see cref="T:System.Data.DataTable" />、および <see cref="T:System.Data.IDbCommand" /> を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.CommandBehavior" /> 内の行を追加または更新します。</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records and, if necessary, schema.">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataTable" />。</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataTable" /> で正常に追加または更新された行数。 これには、行を返さないステートメントの影響を受ける行は含まれません。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">
        <see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</summary>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">データ ソースから読み込む <see cref="T:System.Data.DataTable" /> オブジェクト。</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">取得を開始する、0 から始まるレコード番号。</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">取得するレコードの最大数。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed to fill the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">
        <see cref="T:System.Data.IDbCommand" /> オブジェクトにデータを読み込むために実行する <see cref="T:System.Data.DataTable" />。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> が無効です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">ソース テーブルが無効です。  
  
 - または -  
  
 接続が無効です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">接続が見つかりませんでした。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">
        <paramref name="startRecord" /> パラメーターが 0 未満です。  
  
- または - 
<paramref name="maxRecords" /> パラメーターが 0 未満です。</exception>
      <returns vsli:raw="The number of rows added to or refreshed in the data tables.">データ テーブルで追加または更新された行数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary vsli:raw="Adds or refreshes rows in one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.">指定したレコード位置で開始し、指定した最大数のレコードを読み込んで、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の行を追加または更新します。</summary>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">取得を開始する、0 から始まるレコード番号。</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">取得するレコードの最大数。</param>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">データ ソースから読み込む <see cref="T:System.Data.DataTable" /> オブジェクト。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects. This value does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataTable" /> で正常に追加または更新された行数。 この値には、行を返さないステートメントの影響を受ける行は含まれません。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">"Table" という名前の <see cref="T:System.Data.DataTable" /> を指定された <see cref="T:System.Data.DataSet" /> に追加し、指定された <see cref="T:System.Data.SchemaType" /> に基づいて、データ ソースにあるスキーマと一致するようにスキーマを構成します。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">スキーマの挿入先の <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">スキーマを挿入する方法を指定する <see cref="T:System.Data.SchemaType" /> 値の 1 つ。</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に追加された <see cref="T:System.Data.DataTable" /> オブジェクトのコレクションへの参照。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> に <see cref="T:System.Data.DataSet" /> を追加し、指定した <see cref="T:System.Data.SchemaType" /> に基づいて、データ ソース内のスキーマと一致するようにスキーマを設定します。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 値のいずれか 1 つ。</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">テーブル マップに使用するソース テーブルの名前。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">データ ソースから返されたスキーマ情報が格納された、<see cref="T:System.Data.DataTable" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based upon the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> に <see cref="T:System.Data.DataTable" /> を追加し、指定した <see cref="T:System.Data.SchemaType" /> および <see cref="T:System.Data.DataTable" /> に基づいて、データ ソースにあるスキーマと一致するようにスキーマを構成します。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">スキーマの挿入先の <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">スキーマを挿入する方法を指定する <see cref="T:System.Data.SchemaType" /> 値の 1 つ。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">テーブル マップに使用するソース テーブルの名前。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A source table from which to get the schema could not be found.">スキーマの取得元のソース テーブルが見つかりません。</exception>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に追加された <see cref="T:System.Data.DataTable" /> オブジェクトのコレクションへの参照。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">指定された <see cref="T:System.Data.SchemaType" /> に基づいて、指定された <see cref="T:System.Data.DataTable" /> のスキーマを構成します。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataTable" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information returned from the data source.">データ ソースから返されたスキーマ情報を含む <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;, command string, and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">指定した <see cref="T:System.Data.DataTable" />、コマンド文字列、および <see cref="T:System.Data.SchemaType" /> 値に基づいて、指定した <see cref="T:System.Data.CommandBehavior" /> のスキーマを設定します。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataTable" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 値のいずれか 1 つ。</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="A of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">データ ソースから返されたスキーマ情報が格納された <see cref="T:System.Data.DataTable" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from one of the commands in the current batch.">現在のバッチのコマンドの 1 つから <see cref="T:System.Data.IDataParameter" /> を返します。</summary>
      <param name="commandIdentifier" vsli:raw="The index of the command to retrieve the parameter from.">パラメーターを取得するコマンドのインデックス。</param>
      <param name="parameterIndex" vsli:raw="The index of the parameter within the command.">コマンド内のパラメーターのインデックス。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">アダプターでバッチがサポートされていません。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; specified.">指定された <see cref="T:System.Data.IDataParameter" /> 。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary vsli:raw="Returns information about an individual update attempt within a larger batched update.">バッチ更新内の、個々の更新の試行に関する情報を返します。</summary>
      <param name="commandIdentifier" vsli:raw="The zero-based column ordinal of the individual command within the batch.">バッチ内の個々のコマンドの、0 から始まる列の序数。</param>
      <param name="recordsAffected" vsli:raw="The number of rows affected in the data store by the specified command within the batch.">バッチ内に指定されたコマンドの影響を受ける、データ ストア内の行数。</param>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; thrown during execution of the specified command. Returns &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no exception is thrown.">指定されたコマンドの実行中にスローされた <see cref="T:System.Exception" />。 例外がスローされなかった場合は、<see langword="null" /> (Visual Basic では <see langword="Nothing" />) を返します。</param>
      <returns vsli:raw="Information about an individual update attempt within a larger batched update.">バッチ更新内の、個々の更新の試行に関する情報。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">SQL SELECT ステートメントの実行時にユーザーが設定したパラメーターを取得します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">ユーザーが設定したパラメーターが格納された <see cref="T:System.Data.IDataParameter" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary vsli:raw="Initializes batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> のバッチ処理を初期化します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">アダプターでバッチがサポートされていません。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">.NET Framework データ プロバイダーの <see langword="RowUpdated" /> イベントを発生させます。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; that contains the event data.">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Data.Common.RowUpdatedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdating&quot; /&gt; event of a .NET data provider.">.NET Framework データ プロバイダーの <see langword="RowUpdating" /> イベントを発生させます。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">現在のインスタンスのコピーである新しいオブジェクトを作成します。</summary>
      <returns vsli:raw="A new object that is a copy of this instance.">このインスタンスのコピーである新しいオブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary vsli:raw="Ends batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> のバッチ処理を終了します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">アダプターでバッチがサポートされていません。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> 内の配列での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">データ ソースの更新に使用する <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> が無効です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">ソース テーブルが無効です。</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">更新する <see cref="T:System.Data.DataRow" /> が存在しません。  
  
- または - 
更新する <see cref="T:System.Data.DataTable" /> が存在しません。  
  
- または - 
ソースとして使用する <see cref="T:System.Data.DataSet" /> が存在しません。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">指定した <see cref="T:System.Data.DataSet" /> オブジェクトの配列内の挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">データ ソースの更新に使用する <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;P:System.Data.IDataAdapter.TableMappings&quot; /&gt; collection to use.">使用する <see cref="P:System.Data.IDataAdapter.TableMappings" /> コレクション。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> が無効です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">ソース テーブルが無効です。</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">更新する <see cref="T:System.Data.DataRow" /> が存在しません。  
  
- または - 
更新する <see cref="T:System.Data.DataTable" /> が存在しません。  
  
- または - 
ソースとして使用する <see cref="T:System.Data.DataSet" /> が存在しません。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</exception>
      <returns vsli:raw="The number of rows successfully updated from the array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">データ ソースの更新に使用した <see cref="T:System.Data.DataSet" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">ソース テーブルが無効です。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">
        <see cref="T:System.Data.DataSet" /> 内の指定した <see cref="T:System.Data.DataTable" /> 名を持つ挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use to update the data source.">データ ソースの更新に使用する <see cref="T:System.Data.DataSet" />。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">テーブル マップに使用するソース テーブルの名前。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> が無効です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">ソース テーブルが無効です。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; used to update the data source.">データ ソースの更新に使用した <see cref="T:System.Data.DataTable" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> が無効です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">ソース テーブルが無効です。</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">更新する <see cref="T:System.Data.DataRow" /> が存在しません。  
  
- または - 
更新する <see cref="T:System.Data.DataTable" /> が存在しません。  
  
- または - 
ソースとして使用する <see cref="T:System.Data.DataSet" /> が存在しません。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 内で正常に更新された行の数。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets a command for deleting records from the data set.">データ セットからレコードを削除するコマンドを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary vsli:raw="Gets or sets the behavior of the command used to fill the data adapter.">データ アダプターにデータを読み込むコマンドの動作を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; of the command used to fill the data adapter.">データ アダプターにデータを読み込むコマンドの <see cref="T:System.Data.CommandBehavior" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets a command used to insert new records into the data source.">データ ソースに新しいレコードを挿入するために使用するコマンドを取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets a command used to select records in the data source.">データ ソース内のレコードを選択するコマンドを取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">データ セットからレコードを削除する SQL ステートメントを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">データ ソースに新しいレコードを挿入する SQL ステートメントを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">データ ソース内のレコードを選択する SQL ステートメントを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">データ ソース内のレコードを更新する SQL ステートメントを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary vsli:raw="Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.">バッチ処理サポートを有効にするかどうか、および、1 回のバッチで実行可能なコマンド数を指定する値を取得または設定します。</summary>
      <returns vsli:raw="The number of rows to process per batch.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value is&lt;/term&gt;&lt;description&gt; Effect&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; There is no limit on the batch size.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Disables batch updating.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; &amp;gt; 1&lt;/term&gt;&lt;description&gt; Changes are sent using batches of &lt;see cref=&quot;P:System.Data.Common.DbDataAdapter.UpdateBatchSize&quot; /&gt; operations at a time.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;  &#xA;&#xA; When setting this to a value other than 1, all the commands associated with the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; must have their &lt;see cref=&quot;P:System.Data.IDbCommand.UpdatedRowSource&quot; /&gt; property set to None or OutputParameters. An exception will be thrown otherwise.">バッチごとに処理される行数。  
  
 <list type="table"><listheader><term> 値</term><description> 結果</description></listheader><item><term> 0</term><description> バッチのサイズに制限はありません。</description></item><item><term> 1</term><description> バッチ更新を無効にします。</description></item><item><term> &gt; 1</term><description> 一度に送信される変更内容は <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> のバッチ サイズに基づきます。</description></item></list>  

 これを1以外の値に設定すると、に関連付けられているすべてのコマンドの <see cref="T:System.Data.Common.DbDataAdapter" /><see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> プロパティが None または OutputParametersに設定されている必要があります。 それ以外の場合、例外がスローされます。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets a command used to update records in the data source.">データ ソース内のレコードを更新するコマンドを取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary vsli:raw="Reads a forward-only stream of rows from a data source.">データ ソースから、前方参照専用の行のストリームを読み取ります。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataReader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> オブジェクトを閉じます。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary vsli:raw="Asynchronously closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> オブジェクトを非同期に閉じます。</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataReader" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Data.Common.DbDataReader" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースを解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary vsli:raw="Asynchronously releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataReader" /> クラスの現在のインスタンスによって使用されているすべてのリソースを非同期で解放します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">非同期操作を表す <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a Boolean.">派生クラスでオーバーライドされた場合、指定された列の値をブール値として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a byte.">派生クラスでオーバーライドされた場合、指定された列の値をバイトとして取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">派生クラスでオーバーライドされた場合、指定したインデックスを開始位置として、指定した列から指定したバイト数を読み取り、バッファー内の指定した位置の開始位置としてバッファーに書き込みます。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">読み取り操作を開始する位置を示す行内のインデックス。</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">データのコピー先のバッファー。</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">データのコピー先のバッファーのインデックス。</param>
      <param name="length" vsli:raw="The maximum number of bytes to read.">読み取る最大バイト数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The actual number of bytes read.">実際に読み取られたバイト数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single character.">派生クラスでオーバーライドされた場合、指定された列の値を単一文字として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">派生クラスでオーバーライドされた場合、指定したインデックスを開始位置として、指定した列から指定した文字数を読み取り、指定した位置の開始位置としてバッファーに書き込みます。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">読み取り操作を開始する位置を示す行内のインデックス。</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">データのコピー先のバッファー。</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">データのコピー先のバッファーのインデックス。</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">読み取り対象の最大文字数。</param>
      <returns vsli:raw="The actual number of characters read.">実際に読み取られた文字数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetColumnSchemaAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)&quot; /&gt; will be communicated via the returned Task Exception property.">これは <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" /> の非同期バージョンです。
プロバイダーは、適切な実装でオーバーライドする必要があります。
必要に応じて、<paramref name="cancellationToken" /> を優先できます。
既定の実装は同期 <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" /> コールを呼び出し、完了したタスクを返します。
既定の実装は、既に取り消された <paramref name="cancellationToken" /> を渡した場合、取り消されたタスクを返します。
<see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" /> によってスローされる例外は、返されたタスクの Exception プロパティを介して通信されます。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取り消し命令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">要求された列に対して、入れ子になったデータ リーダーを返します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <returns vsli:raw="A data reader.">データ リーダー。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets name of the data type of the specified column.">派生クラスでオーバーライドされた場合、指定された列のデータ型の名前を取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <returns vsli:raw="The name of the data type.">データ型の名前。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">派生クラスでオーバーライドされた場合、指定された列の値を <see cref="T:System.DateTime" /> オブジェクトとして取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">プロバイダー固有の実装でオーバーライドできる、要求された列序数に対応した <see cref="T:System.Data.Common.DbDataReader" /> オブジェクトを返します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">派生クラスでオーバーライドされた場合、指定された列の値を <see cref="T:System.Decimal" /> として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a double-precision floating point number.">派生クラスでオーバーライドされた場合、指定された列の値を倍精度浮動小数点数として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary vsli:raw="When overridden in a derived class, returns an enumerator that can be used to iterate through the rows in the data reader.">派生クラスでオーバーライドされると、データ リーダー内の行に対して反復処理を行うために使用できる列挙子を返します。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the rows in the data reader.">データ リーダー内の行に対して反復処理を行うために使用できる列挙子。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the data type of the specified column.">派生クラスでオーバーライドされた場合、指定された列のデータ型を取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The data type of the specified column.">指定された列のデータ型。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">要求された型として指定した列の値を取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">返される値の型。</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">データの取得中、接続が切断されたか、閉じられました。  

- または - 
データの取得中、データ リーダーが閉じられました。  
  
- または -

読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.Common.DbDataReader.Read" /> は呼び出されなかったか、<see langword="false" /> を返しました)。  

- または -

リーダーでは、以前に読み取られた列のシーケンシャル モードでの読み取りが試行されました。  

- または -

非同期操作が進行中でした。 シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">データベースによって返された値が一致しないか、<typeparamref name="T" /> にキャストできません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">要求された型として指定された列の値を非同期で取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">返される値の型。</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">データの取得中、接続が切断されたか、閉じられました。  
  
- または -

データの取得中、データ リーダーが閉じられました。  

- または -

読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.Common.DbDataReader.Read" /> は呼び出されなかったか、<see langword="false" /> を返しました)。

- または -

以前に読み取られた列をシーケンシャル モードで読み取ろうとしました。  

- または -

非同期操作が進行中でした。 シーケンシャル モードで実行中、これはすべての Get_*_ メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">データベースによって返された値が一致しないか、<typeparamref name="T" /> にキャストできません。</exception>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">指定された列の値を <see cref="P:System.Threading.Tasks.Task`1.Result" /> に格納しているタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">要求された型として指定された列の値を非同期で取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">非同期操作を取り消すトークン。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">返される値の型。</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">データの取得中、接続が切断されたか、閉じられました。  
  
- または -

データの取得中、データ リーダーが閉じられました。  

- または -

読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.Common.DbDataReader.Read" /> は呼び出されなかったか、<see langword="false" /> を返しました)。

- または -

以前に読み取られた列をシーケンシャル モードで読み取ろうとしました。  

- または -

非同期操作が進行中でした。 シーケンシャル モードで実行中、これはすべての Get_*_ メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">データベースによって返された値が一致しないか、<typeparamref name="T" /> にキャストできません。</exception>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">指定された列の値を <see cref="P:System.Threading.Tasks.Task`1.Result" /> に格納しているタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single-precision floating point number.">派生クラスでオーバーライドされた場合、指定された列の値を単精度浮動小数点数として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a globally unique identifier (GUID).">派生クラスでオーバーライドされた場合、指定された列の値をグローバル一意識別子 (GUID) として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 16-bit signed integer.">派生クラスでオーバーライドされた場合、指定された列の値を 16 ビット符号付き整数として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 32-bit signed integer.">派生クラスでオーバーライドされた場合、指定された列の値を 32 ビット符号付き整数として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 64-bit signed integer.">派生クラスでオーバーライドされた場合、指定された列の値を 64 ビット符号付き整数として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the name of the column, given the zero-based column ordinal.">派生クラスでオーバーライドされた場合、0 から始まる列序数が指定された列の名前列を取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <returns vsli:raw="The name of the specified column.">指定された列の名前。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the column ordinal given the name of the column.">派生クラスでオーバーライドされた場合、列序数が指定された列の名前を取得します。</summary>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <returns vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">指定された列のプロバイダー固有の型を取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <returns vsli:raw="A provider-specific .NET type.">プロバイダー固有の .NET 型。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">指定された列の値をプロバイダー固有の型のインスタンスとして取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Gets all provider-specific attribute columns in the collection for the current row.">現在の行のコレクション内にあるプロバイダー固有の属性列をすべて取得します。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">属性列のコピー先の <see cref="T:System.Object" /> の配列。</param>
      <returns vsli:raw="The number of instances of elements in the array.">配列に含まれる要素のインスタンスの数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.Common.DbDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の列メタデータを記述する <see cref="T:System.Data.Common.DbDataReader" /> を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.Common.DbDataReader" /> が閉じています。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core のみ: このメンバーはサポートされていません。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">列メタデータを記述する <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTableAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt; will be communicated via the returned Task Exception property.">これは <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> の非同期バージョンです。
プロバイダーは、適切な実装でオーバーライドする必要があります。
必要に応じて、<paramref name="cancellationToken" /> を優先できます。
既定の実装は同期 <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> コールを呼び出し、完了したタスクを返します。
既定の実装は、既に取り消された <paramref name="cancellationToken" /> を渡した場合、取り消されたタスクを返します。
<see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> によってスローされる例外は、返されたタスクの Exception プロパティを介して通信されます。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取り消し命令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">指定された列からデータを取得する目的でストリームを取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">データの取得中、接続が切断されたか、閉じられました。  
  
- または -

データの取得中、データ リーダーが閉じられます。  

- または -

読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.Common.DbDataReader.Read" /> は呼び出されなかったか、false を返しました)。  

- または -

データ リーダーでは、以前に読み取られた列のシーケンシャル モードでの読み取りが試行されました。  

- または -

非同期操作が進行中でした。 シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定の列は、<see cref="T:System.IO.Stream" /> で読み込めるバイナリ型ではありません。</exception>
      <returns vsli:raw="A stream.">ストリーム。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">派生クラスでオーバーライドされた場合、指定された列の値を <see cref="T:System.String" /> のインスタンスとして取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">列からデータを取得する目的でテキスト リーダーを取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">データの取得中、接続が切断されたか、閉じられました。  
  
- または -

データの取得中、データ リーダーが閉じられます。  

- または -

読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.Common.DbDataReader.Read" /> は呼び出されなかったか、false を返しました)。  

- または -

データ リーダーでは、以前に読み取られた列のシーケンシャル モードでの読み取りが試行されました。  

- または -

非同期操作が進行中でした。 シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定の列は、<see cref="T:System.IO.TextReader" /> で読み込めるテキスト型ではありません。</exception>
      <returns vsli:raw="A text reader.">テキスト リーダー。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">派生クラスでオーバーライドされた場合、指定された列の値を <see cref="T:System.Object" /> のインスタンスとして取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary vsli:raw="When overridden in a derived class, populates an array of objects with the column values of the current row.">派生クラスでオーバーライドされた場合、オブジェクトの配列に現在行の列値を設定します。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">属性列のコピー先の <see cref="T:System.Object" /> の配列。</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">配列に含まれる <see cref="T:System.Object" /> のインスタンスの数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether the column contains nonexistent or missing values.">派生クラスでオーバーライドされた場合、存在しない値または欠損値が列に含まれているかどうかを示す値を取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した列が <see cref="T:System.DBNull" /> と等価の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">列に格納されている値が存在しない値または欠損値かどうかを示す値を非同期で取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">取得する、0 から始まる列。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">データの取得中、接続が切断されたか、閉じられました。  
  
- または -

データの取得中、データ リーダーが閉じられます。  

- または -

読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.Common.DbDataReader.Read" /> は呼び出されなかったか、false を返しました)。  

- または -

以前に読み取られた列をシーケンシャル モードで読み取ろうとしています。  

- または -

非同期操作が進行中でした。 シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">指定された列値が <see langword="DBNull" /> に等しい場合は、<see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが <see langword="true" /> になり、等しくない場合は <see langword="false" /> になる <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">列に格納されている値が存在しない値または欠損値かどうかを示す値を非同期で取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">取得する、0 から始まる列。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">非同期操作を取り消すトークン。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">データの取得中、接続が切断されたか、閉じられました。  
  
- または -

データの取得中、データ リーダーが閉じられます。  

- または -

読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.Common.DbDataReader.Read" /> は呼び出されなかったか、false を返しました)。  

- または -

以前に読み取られた列をシーケンシャル モードで読み取ろうとしています。  

- または - 
非同期操作が進行中でした。 シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">指定された列値が <see langword="DBNull" /> に等しい場合は、<see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが <see langword="true" /> になり、等しくない場合は <see langword="false" /> になる <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next result when reading the results of a batch of statements.">派生クラスでオーバーライドされた場合、バッチ ステートメントの結果を読み取っているときに、次の結果にリーダーを非同期で進めます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more result sets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">次の結果セットがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">バッチ ステートメントの結果を読み取っているときに、次の結果にリーダーを非同期で進めます。</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが、結果セットが他にもある場合は <see langword="true" />、ない場合は <see langword="false" /> となるタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">バッチ ステートメントの結果を読み取っているときに、次の結果にリーダーを非同期で進めます。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取り消し命令。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">結果セットが他にもある場合は <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが <see langword="true" /> で、ない場合は <see langword="false" /> の <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next record in a result set.">派生クラスでオーバーライドされた場合、リーダーを結果セット内の次のレコードに進めます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">次の行が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">結果セット内の次のレコードにリーダーを非同期で進めます。</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">行が他にもある場合は <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが <see langword="true" /> で、ない場合は <see langword="false" /> の <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">結果セット内の次のレコードにリーダーを非同期で進めます。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取り消し命令。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">コマンド テキストの実行中にエラーが発生しました。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">行が他にもある場合は <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが <see langword="true" /> で、ない場合は <see langword="false" /> の <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Data.IDataRecord.GetData(System.Int32)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />」をご覧ください。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used when the field points to more remote structured data.">フィールドがさらにリモートの構造化データを指しているときに使用する <see cref="T:System.Data.IDataReader" /> のインスタンス。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">現在の行の入れ子の深さを示す値を取得します。</summary>
      <returns vsli:raw="The depth of nesting for the current row.">現在の行の入れ子の深さ。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary vsli:raw="When overridden in a derived class, gets the number of columns in the current row.">派生クラスでオーバーライドされた場合、現在の行の列数を取得します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is no current connection to an instance of SQL Server.">SQL Server のインスタンスへの現在の接続がありません。</exception>
      <returns vsli:raw="The number of columns in the current row.">現在の行の列数です。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows.">派生クラスでオーバーライドされた場合、この <see cref="T:System.Data.Common.DbDataReader" /> に 1 つ以上の行が含まれているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">1 行以上の行が <see cref="T:System.Data.Common.DbDataReader" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">派生クラスでオーバーライドされた場合、<see cref="T:System.Data.Common.DbDataReader" /> が閉じられているかどうかを示す値を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.Common.DbDataReader" /> が閉じています。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" /> が閉じている場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">派生クラスでオーバーライドされた場合、指定された列の値を <see cref="T:System.Object" /> のインスタンスとして取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列インデックスが範囲外です。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">派生クラスでオーバーライドされた場合、指定された列の値を <see cref="T:System.Object" /> のインスタンスとして取得します。</summary>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">指定された名前の列は見つかりませんでした。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary vsli:raw="When overridden in a derived class, gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">派生クラスでオーバーライドされた場合、SQL ステートメントの実行によって変更、挿入、または削除された行の数を取得します。</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.">変更、挿入、または削除された行数です。 SELECT ステートメントの場合は -1、影響を受けた行がなかった場合またはステートメントが失敗した場合は 0。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary vsli:raw="Gets the number of fields in the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; that are not hidden.">
        <see cref="T:System.Data.Common.DbDataReader" /> 内の表示フィールドの数を取得します。</summary>
      <returns vsli:raw="The number of fields that are not hidden.">表示フィールドの数。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary vsli:raw="This class contains column schema extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">このクラスには、<see cref="T:System.Data.Common.DbDataReader" /> の列のスキーマ拡張メソッドが含まれています。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema.">
        <see cref="T:System.Data.Common.DbDataReader" /> が列スキーマを取得できるかどうかを示す値を取得します。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to be checked for column schema support.">列スキーマのサポートを確認するための <see cref="T:System.Data.Common.DbDataReader" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" /> が列スキーマを取得できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" /> 用に、列のスキーマ (<see cref="T:System.Data.Common.DbColumn" /> コレクション) を取得します。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to return the column schema.">列のスキーマを返す <see cref="T:System.Data.Common.DbDataReader" />。</param>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" /> 用の、列のスキーマ (<see cref="T:System.Data.Common.DbColumn" /> コレクション)。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary vsli:raw="Implements &lt;see cref=&quot;T:System.Data.IDataRecord&quot; /&gt; and &lt;see cref=&quot;T:System.ComponentModel.ICustomTypeDescriptor&quot; /&gt;, and provides data binding support for &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt;.">
        <see cref="T:System.Data.IDataRecord" /> および <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> を実装し、<see cref="T:System.Data.Common.DbEnumerator" /> のデータ バインディングのサポートを提供します。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataRecord&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataRecord" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a Boolean.">指定された列の値を Boolean として返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Boolean is &lt;see langword=&quot;true&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Boolean が <see langword="true" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte.">指定された列の値をバイトとして返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte array.">指定された列の値をバイト配列として返します。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">読み取り操作を開始する位置を示すフィールド内のインデックス。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">バイトのストリームを読み込むバッファー。</param>
      <param name="bufferIndex" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">読み取り操作を開始する <paramref name="buffer" /> のインデックス。</param>
      <param name="length" vsli:raw="The number of bytes to read.">読み取るバイト数。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character.">指定された列の値を 1 つの文字として返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">指定された列の値を 1 つの文字配列として返します。</summary>
      <param name="i" vsli:raw="Column ordinal.">列の序数。</param>
      <param name="dataIndex" vsli:raw="Buffer to copy data into.">データのコピー先バッファー。</param>
      <param name="buffer" vsli:raw="Maximum length to copy into the buffer.">バッファーにコピーするデータの最大長。</param>
      <param name="bufferIndex" vsli:raw="Point to start from within the buffer.">バッファー内での開始点。</param>
      <param name="length" vsli:raw="Point to start from within the source data.">ソース データ内での開始点。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Not currently supported.">現在サポートされていません。</summary>
      <param name="i" vsli:raw="Not currently supported.">現在サポートされていません。</param>
      <returns vsli:raw="Not currently supported.">現在サポートされていません。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Returns the name of the back-end data type.">バックエンドのデータ型の名前を返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The name of the back-end data type.">バックエンドのデータ型の名前。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">指定された列の値を <see cref="T:System.DateTime" /> オブジェクトとして返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">プロバイダー固有の実装でオーバーライドできる、要求された列序数に対応した <see cref="T:System.Data.Common.DbDataReader" /> オブジェクトを返します。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">指定された列の値を <see cref="T:System.Decimal" /> オブジェクトとして返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a double-precision floating-point number.">指定された列の値を倍精度浮動小数点値として返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">オブジェクトのデータ型である <see cref="T:System.Type" /> を返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">オブジェクトのデータ型である <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a single-precision floating-point number.">指定された列の値を単精度浮動小数点値として返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">指定したフィールドの GUID 値を返します。</summary>
      <param name="i" vsli:raw="The index of the field to return.">取得するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The GUID value of the specified field.">指定したフィールドの GUID 値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 16-bit signed integer.">指定された列の値を 16 ビット符号付き整数として返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 32-bit signed integer.">指定された列の値を 32 ビット符号付き整数として返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 64-bit signed integer.">指定された列の値を 64 ビット符号付き整数として返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified column.">指定された列の名前を返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The name of the specified column.">指定された列の名前。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Returns the column ordinal, given the name of the column.">名前で指定された列の列序数を返します。</summary>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <returns vsli:raw="The column ordinal.">列の序数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a string.">指定された列の値を文字列として返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Returns the value at the specified column in its native format.">指定された列のネイティブ形式の値を返します。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The value to return.">戻り値。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">現在のレコードの列の値を持つオブジェクトの配列を設定します。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">属性フィールドをコピーする <see cref="T:System.Object" /> の配列。</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">配列に含まれる <see cref="T:System.Object" /> のインスタンスの数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Used to indicate nonexistent values.">存在しない値を示すために使用されます。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定した列が <see cref="T:System.DBNull" /> に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">コンポーネントのこのインスタンスのカスタム属性のコレクションを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; that contains the attributes for this object.">このオブジェクトの属性を格納する <see cref="T:System.ComponentModel.AttributeCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">コンポーネントのこのインスタンスのクラス名を返します。</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">オブジェクトのクラス名。クラスに名前がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">コンポーネントのこのインスタンスの名前を返します。</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">オブジェクト名。オブジェクトに名前がない場合は <see langword="null" /> 。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">コンポーネントのこのインスタンスの型コンバーターを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">このオブジェクトのコンバーターである <see cref="T:System.ComponentModel.TypeConverter" />。このオブジェクトの <see cref="T:System.ComponentModel.TypeConverter" /> がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">コンポーネントのこのインスタンスの既定のイベントを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">このオブジェクトの既定のイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> 。このオブジェクトにイベントがない場合は <see langword="null" /> 。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">コンポーネントのこのインスタンスの既定のプロパティを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">このオブジェクトの既定のプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" />。このオブジェクトにプロパティがない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">コンポーネントのこのインスタンスに対して指定されている型のエディターを返します。</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">このオブジェクトのエディターを表す <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">指定した型の、このオブジェクトのエディターとなる <see cref="T:System.Object" />。エディターが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">コンポーネントのこのインスタンスのイベントを返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">このコンポーネント インスタンスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">フィルターとして指定された属性配列を使用して、コンポーネントのこのインスタンスのイベントを返します。</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">フィルターとして使用される <see cref="T:System.Attribute" /> 型の配列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">このコンポーネント インスタンスのフィルター処理したイベントを表す <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">コンポーネントのこのインスタンスのプロパティを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">このコンポーネント インスタンスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">属性配列をフィルターとして使用して、コンポーネントのこのインスタンスのプロパティを返します。</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">フィルターとして使用される <see cref="T:System.Attribute" /> 型の配列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">このコンポーネント インスタンスのフィルター処理したプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">指定したプロパティ記述子によって記述されたプロパティを含むオブジェクトを返します。</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">所有者を見つけるプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">指定したプロパティの所有者を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary vsli:raw="Indicates the number of fields within the current record. This property is read-only.">現在のレコード内のフィールドの数を示します。 このプロパティは読み取り専用です。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Not connected to a data source to read from.">読み取るデータ ソースに接続されていません。</exception>
      <returns vsli:raw="The number of fields within the current record.">現在のレコード内のフィールド数。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column ordinal. This property is read-only.">列序数を指定して、指定された列のネイティブ形式の値を示します。 このプロパティは読み取り専用です。</summary>
      <param name="i" vsli:raw="The column ordinal.">列の序数。</param>
      <returns vsli:raw="The value at the specified column in its native format.">指定された列のネイティブ形式の値。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column name. This property is read-only.">列の名前を指定して、指定された列のネイティブ形式の値を示します。 このプロパティは読み取り専用です。</summary>
      <param name="name" vsli:raw="The column name.">列名。</param>
      <returns vsli:raw="The value at the specified column in its native format.">指定された列のネイティブ形式の値。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary vsli:raw="Provides a mechanism for enumerating all available instances of database servers within the local network.">ローカル ネットワーク内で利用できるデータベース サーバーのすべてのインスタンスを列挙する機構を提供します。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about all visible instances of the server represented by the strongly typed instance of this class.">このクラスの厳密に型指定されたインスタンスで表されるサーバーの、参照できるすべてのインスタンスに関する情報が格納された <see cref="T:System.Data.DataTable" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about the visible instances of the associated data source.">関連付けられたデータ ソースの参照できるインスタンスに関する情報が格納された <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">.NET Framework データ プロバイダーによるコレクションに対する単純な反復処理をサポートする <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> メソッドを公開します。</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class with the give n data reader.">特定の n データ リーダーを指定して、<see cref="T:System.Data.Common.DbEnumerator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">反復処理する DataReader。</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified reader and indicates whether to automatically close the reader after iterating through its data.">指定したリーダーを使用して <see cref="T:System.Data.Common.DbEnumerator" /> クラスの新しいインスタンスを初期化します。また、データの反復処理後にリーダーを自動的に閉じるかどうかを示します。</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">反復処理する DataReader。</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the DataReader after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">データの反復処理後に DataReader を自動的に閉じる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;.">指定した <see langword="DataReader" /> を使用して <see cref="T:System.Data.Common.DbEnumerator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">反復処理する <see langword="DataReader" />。</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;, and indicates whether to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data.">指定した <see langword="DataReader" /> を使用して <see cref="T:System.Data.Common.DbEnumerator" /> クラスの新しいインスタンスを初期化します。また、データの反復処理後に <see langword="DataReader" /> を自動的に閉じるかどうかを示します。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">反復処理する <see langword="DataReader" />。</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">データの反復処理後に <see langword="DataReader" /> を自動的に閉じる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">列挙子をコレクションの次の要素に進めます。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">コレクションは、列挙子の作成後に変更されました。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">列挙子を初期位置、つまりコレクションの最初の要素の前に設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">コレクションは、列挙子の作成後に変更されました。</exception>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">コレクション内の現在の要素を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">列挙子は、コレクションの最初の要素の前または最後の要素の後に配置されています。</exception>
      <returns vsli:raw="The current element in the collection.">コレクション内にある現在の要素です。</returns>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary vsli:raw="The base class for all exceptions thrown on behalf of the data source.">データ ソースの代わりにスローされるすべての例外の基底クラス。</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified serialization information and context.">指定したシリアル化情報とコンテキストを使用して、<see cref="T:System.Data.Common.DbException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">転送元または転送先についてのコンテキスト情報を含む <see cref="T:System.Runtime.Serialization.StreamingContext" /> です。</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message.">指定されたエラー メッセージで <see cref="T:System.Data.Common.DbException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message to display for this exception.">この例外に表示されるメッセージ。</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージと、この例外の原因である内部例外への参照を使用して、<see cref="T:System.Data.Common.DbException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message string.">エラー メッセージ文字列。</param>
      <param name="innerException" vsli:raw="The inner exception reference.">内部例外の参照。</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and error code.">指定したエラー メッセージおよびエラー コードを使用して、<see cref="T:System.Data.Common.DbException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="errorCode" vsli:raw="The error code for the exception.">例外のエラー コード。</param>
    </member>
    <member name="P:System.Data.Common.DbException.IsTransient">
      <summary vsli:raw="Indicates whether the error represented by this &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; could be a transient error, i.e. if retrying the triggering operation may succeed without any other change.">この <see cref="T:System.Data.Common.DbException" /> によって表されるエラーが一時的なエラーである可能性があるかどうか、つまり他に何も変更せずにトリガー操作を再試行しても成功する可能性があるかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the error represented could be a transient error; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> 示されたエラーが一時的なエラーである可能性があります。 <see langword="false" /> それ以外の場合は。</returns>
    </member>
    <member name="P:System.Data.Common.DbException.SqlState">
      <summary vsli:raw="&lt;para&gt; For database providers which support it, contains a standard SQL 5-character return code indicating the success or failure of the database operation. The first 2 characters represent the &lt;strong&gt;class&lt;/strong&gt; of the return code (e.g. error, success), while the last 3 characters represent the &lt;strong&gt;subclass&lt;/strong&gt;, allowing detection of error scenarios in a database-portable way.&lt;/para&gt;&lt;para&gt; For database providers which don't support it, or for inapplicable error scenarios, contains &lt;see langword=&quot;null&quot; /&gt;.&lt;/para&gt;">
        <para> それをサポートしているデータベース プロバイダーの場合、データベース操作の成功または失敗を示す標準的な SQL の 5 文字のリターン コードが含まれます。 最初の 2 文字は、リターン コードの<strong>クラス</strong> (エラー、成功など) を表します。最後の 3 文字は<strong>サブクラス</strong>を表し、データベースに移植可能な方法でエラー シナリオを検出できます。</para>
        <para> それをサポートしていないデータベース プロバイダーの場合、または該当しないエラー シナリオの場合は、<see langword="null" /> が含まれます。</para>
      </summary>
      <returns vsli:raw="A standard SQL 5-character return code, or &lt;see langword=&quot;null&quot; /&gt;.">標準の SQL 5 文字のリターンコード、または <see langword="null" /> 。</returns>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary vsli:raw="Provides a list of constants for the well-known MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords, and Restrictions.">既知の MetaDataCollections (DataSourceInformation、DataTypes、MetaDataCollections、ReservedWords、Restrictions) の定数のリストを提供します。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataSourceInformation collection.">DataSourceInformation コレクションを表す、<see cref="M:System.Data.Common.DbConnection.GetSchema" /> メソッドで使用するための定数。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataTypes collection.">DataTypes コレクションを表す、<see cref="M:System.Data.Common.DbConnection.GetSchema" /> メソッドで使用するための定数。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the MetaDataCollections collection.">MetaDataCollections コレクションを表す、<see cref="M:System.Data.Common.DbConnection.GetSchema" /> メソッドで使用するための定数。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the ReservedWords collection.">ReservedWords コレクションを表す、<see cref="M:System.Data.Common.DbConnection.GetSchema" /> メソッドで使用するための定数。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the Restrictions collection.">Restrictions コレクションを表す、<see cref="M:System.Data.Common.DbConnection.GetSchema" /> メソッドで使用するための定数。</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary vsli:raw="Provides static values that are used for the column names in the MetaDataCollection objects contained in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is created by the GetSchema method.">
        <see cref="T:System.Data.DataTable" /> に含まれる MetaDataCollection オブジェクトの列名に使用される静的な値を提供します。 <see cref="T:System.Data.DataTable" /> は、GetSchema メソッドによって作成されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary vsli:raw="Used by the GetSchema method to create the CollectionName column in the DataTypes collection.">DataTypes コレクションの CollectionName 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary vsli:raw="Used by the GetSchema method to create the ColumnSize column in the DataTypes collection.">DataTypes コレクションの ColumnSize 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the CompositeIdentifierSeparatorPattern column in the DataSourceInformation collection.">DataSourceInformation コレクションの CompositeIdentifierSeparatorPattern 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary vsli:raw="Used by the GetSchema method to create the CreateFormat column in the DataTypes collection.">DataTypes コレクションの CreateFormat 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary vsli:raw="Used by the GetSchema method to create the CreateParameters column in the DataTypes collection.">DataTypes コレクションの CreateParameters 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductName column in the DataSourceInformation collection.">DataSourceInformation コレクションの DataSourceProductName 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersion column in the DataSourceInformation collection.">DataSourceInformation コレクションの DataSourceProductVersion 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersionNormalized column in the DataSourceInformation collection.">DataSourceInformation コレクションの DataSourceProductVersionNormalized 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary vsli:raw="Used by the GetSchema method to create the DataType column in the DataTypes collection.">DataTypes コレクションの DataType 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary vsli:raw="Used by the GetSchema method to create the GroupByBehavior column in the DataSourceInformation collection.">DataSourceInformation コレクションの GroupByBehavior 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierCase column in the DataSourceInformation collection.">DataSourceInformation コレクションの IdentifierCase 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierPattern column in the DataSourceInformation collection.">DataSourceInformation コレクションの IdentifierPattern 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary vsli:raw="Used by the GetSchema method to create the IsAutoIncrementable column in the DataTypes collection.">DataTypes コレクションの IsAutoIncrementable 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary vsli:raw="Used by the GetSchema method to create the IsBestMatch column in the DataTypes collection.">DataTypes コレクションの IsBestMatch 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary vsli:raw="Used by the GetSchema method to create the IsCaseSensitive column in the DataTypes collection.">DataTypes コレクションの IsCaseSensitive 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary vsli:raw="Used by the GetSchema method to create the IsConcurrencyType column in the DataTypes collection.">DataTypes コレクションの IsConcurrencyType 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedLength column in the DataTypes collection.">DataTypes コレクションの IsFixedLength 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedPrecisionScale column in the DataTypes collection.">DataTypes コレクションの IsFixedPrecisionScale 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary vsli:raw="Used by the GetSchema method to create the IsLiteralSupported column in the DataTypes collection.">DataTypes コレクションの IsLiteralSupported 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary vsli:raw="Used by the GetSchema method to create the IsLong column in the DataTypes collection.">DataTypes コレクションの IsLong 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary vsli:raw="Used by the GetSchema method to create the IsNullable column in the DataTypes collection.">DataTypes コレクションの IsNullable 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchable column in the DataTypes collection.">DataTypes コレクションの IsSearchable 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchableWithLike column in the DataTypes collection.">DataTypes コレクションの IsSearchableWithLike 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary vsli:raw="Used by the GetSchema method to create the IsUnsigned column in the DataTypes collection.">DataTypes コレクションの IsUnsigned 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralPrefix column in the DataTypes collection.">DataTypes コレクションの LiteralPrefix 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralSuffix column in the DataTypes collection.">DataTypes コレクションの LiteralSuffix 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MaximumScale column in the DataTypes collection.">DataTypes コレクションの MaximumScale 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MinimumScale column in the DataTypes collection.">DataTypes コレクションの MinimumScale 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfIdentifierParts column in the MetaDataCollections collection.">MetaDataCollections コレクションの NumberOfIdentifierParts 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfRestrictions column in the MetaDataCollections collection.">MetaDataCollections コレクションの NumberOfRestrictions 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary vsli:raw="Used by the GetSchema method to create the OrderByColumnsInSelect column in the DataSourceInformation collection.">DataSourceInformation コレクションの OrderByColumnsInSelect 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerFormat column in the DataSourceInformation collection.">DataSourceInformation コレクションの ParameterMarkerFormat 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerPattern column in the DataSourceInformation collection.">DataSourceInformation コレクションの ParameterMarkerPattern 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNameMaxLength column in the DataSourceInformation collection.">DataSourceInformation コレクションの ParameterNameMaxLength 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNamePattern column in the DataSourceInformation collection.">DataSourceInformation コレクションの ParameterNamePattern 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary vsli:raw="Used by the GetSchema method to create the ProviderDbType column in the DataTypes collection.">DataTypes コレクションの ProviderDbType 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierCase column in the DataSourceInformation collection.">DataSourceInformation コレクションの QuotedIdentifierCase 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierPattern column in the DataSourceInformation collection.">DataSourceInformation コレクションの QuotedIdentifierPattern 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary vsli:raw="Used by the GetSchema method to create the ReservedWord column in the ReservedWords collection.">ReservedWords コレクションの ReservedWord 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StatementSeparatorPattern column in the DataSourceInformation collection.">DataSourceInformation コレクションの StatementSeparatorPattern 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StringLiteralPattern column in the DataSourceInformation collection.">DataSourceInformation コレクションの StringLiteralPattern 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary vsli:raw="Used by the GetSchema method to create the SupportedJoinOperators column in the DataSourceInformation collection.">DataSourceInformation コレクションの SupportedJoinOperators 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary vsli:raw="Used by the GetSchema method to create the TypeName column in the DataTypes collection.">DataTypes コレクションの TypeName 列を作成するために、GetSchema メソッドによって使用されます。</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary vsli:raw="Represents a parameter to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; and optionally, its mapping to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column. For more information on parameters, see Configuring Parameters and Parameter Data Types.">
        <see cref="T:System.Data.Common.DbCommand" /> に対するパラメーターと、必要に応じてその <see cref="T:System.Data.DataSet" /> 列へのマッピングを表します。 パラメーターの詳細については、「パラメーターおよびパラメーター データ型の構成」を参照してください。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbParameter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary vsli:raw="Resets the DbType property to its original settings.">DbType プロパティを元の設定にリセットします。</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">パラメーターの <see cref="T:System.Data.DbType" /> を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">プロパティが有効な <see cref="T:System.Data.DbType" /> に設定されていません。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">
        <see cref="T:System.Data.DbType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Data.DbType.String" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">パラメーターが入力専用、出力専用、双方向、またはストアド プロシージャの戻り値パラメーターのいずれであるかを示す値を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">プロパティが、いずれかの有効な <see cref="T:System.Data.ParameterDirection" /> 値に設定されていません。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">
        <see cref="T:System.Data.ParameterDirection" /> 値のいずれか 1 つ。 既定値は、<see langword="Input" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter accepts null values.">パラメーターが null 値を受け取るかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">null 値を受け取る場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameter" /> の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;. The default is an empty string (&quot;&quot;).">
        <see cref="T:System.Data.Common.DbParameter" /> の名前。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary vsli:raw="Gets or sets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">
        <see cref="P:System.Data.Common.DbParameter.Value" /> プロパティを表すために使用される最大桁数を取得または設定します。</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">
        <see cref="P:System.Data.Common.DbParameter.Value" /> プロパティを表すために使用される最大桁数です。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary vsli:raw="Gets or sets the number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">
        <see cref="P:System.Data.Common.DbParameter.Value" /> が解決される、小数点以下の桁数を取得または設定します。</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">
        <see cref="P:System.Data.Common.DbParameter.Value" /> の解決先の小数点以下桁数です。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary vsli:raw="Gets or sets the maximum size, in bytes, of the data within the column.">列内のデータの最大サイズ (バイト) を取得または設定します。</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">列内のデータの最大サイズ (バイト) です。 既定値はパラメーター値から推論されます。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に割り当てられ、<see cref="P:System.Data.Common.DbParameter.Value" /> の読み込みまたは戻しに使用されるソース列の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">
        <see cref="T:System.Data.DataSet" /> にマップされるソース列の名前。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary vsli:raw="Gets or sets a value which indicates whether the source column is nullable. This allows &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to correctly generate Update statements for nullable columns.">ソース列が Null 許容かどうかを示す値を取得または設定します。 これにより、<see cref="T:System.Data.Common.DbCommandBuilder" /> で null 許容列の Update ステートメントを正しく生成できます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source column is nullable; &lt;see langword=&quot;false&quot; /&gt; if it is not.">ソース列が null 許容である場合は <see langword="true" />。null 許容ではない場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when you load &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> の読み込み時に使用する <see cref="P:System.Data.Common.DbParameter.Value" /> を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">プロパティが、<see cref="T:System.Data.DataRowVersion" /> 値の 1 つに設定されていません。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 値のいずれか 1 つ。 既定値は、<see langword="Current" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">数値パラメーターの精度を示します。</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; property of a data provider &lt;see langword=&quot;Parameter&quot; /&gt; object. The default value is 0, which indicates that a data provider sets the precision for &lt;see langword=&quot;Value&quot; /&gt;.">データ プロバイダー <see langword="Parameter" /> オブジェクトの <see langword="Value" /> プロパティを表すために使用する最大桁数。 既定値は 0 で、データ プロバイダーにより <see langword="Value" /> の精度が設定されていることを示します。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Data.IDbDataParameter.Scale&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Data.IDbDataParameter.Scale" />」をご覧ください。</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">
        <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> の解決先の小数点以下桁数です。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">パラメーターの値を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">パラメーターの値である <see cref="T:System.Object" />。 既定値は、null です。</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary vsli:raw="The base class for a collection of parameters relevant to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommand" /> に関連するパラメーターのコレクションの基底クラス。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbParameterCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">指定した <see cref="T:System.Data.Common.DbParameter" /> オブジェクトを <see cref="T:System.Data.Common.DbParameterCollection" /> に追加します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">コレクションに追加する <see cref="T:System.Data.Common.DbParameter" /> の <see cref="P:System.Data.Common.DbParameter.Value" />。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">コレクション内の <see cref="T:System.Data.Common.DbParameter" /> オブジェクトのインデックス。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary vsli:raw="Adds an array of items with the specified values to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">指定された値で項目の配列を <see cref="T:System.Data.Common.DbParameterCollection" /> に追加します。</summary>
      <param name="values" vsli:raw="An array of values of type &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">コレクションに追加する <see cref="T:System.Data.Common.DbParameter" /> 型の値の配列。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; values from the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameterCollection" /> からすべての <see cref="T:System.Data.Common.DbParameter" /> 値を削除します。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is contained in the collection.">指定した <see cref="P:System.Data.Common.DbParameter.Value" /> の <see cref="T:System.Data.Common.DbParameter" /> がコレクション内に含まれるかどうかを示します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">コレクション内で検索する <see cref="T:System.Data.Common.DbParameter" /> の <see cref="P:System.Data.Common.DbParameter.Value" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameter" /> がコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name exists in the collection.">指定した名前の <see cref="T:System.Data.Common.DbParameter" /> がコレクション内に存在するかどうかを示します。</summary>
      <param name="value" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">コレクション内で検索する <see cref="T:System.Data.Common.DbParameter" /> の名前。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameter" /> がコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies an array of items to the collection starting at the specified index.">指定したインデックスを開始位置として、項目の配列をコレクションにコピーします。</summary>
      <param name="array" vsli:raw="The array of items to copy to the collection.">コレクションにコピーする項目の配列。</param>
      <param name="index" vsli:raw="The index in the collection to copy the items.">項目をコピーするコレクション内のインデックス。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">.NET Framework データ プロバイダーによるコレクションに対する単純な反復処理をサポートする <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> メソッドを公開します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">コレクション内の指定したインデックス位置にある <see cref="T:System.Data.Common.DbParameter" /> オブジェクトを返します。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">コレクション内の <see cref="T:System.Data.Common.DbParameter" /> のインデックス。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">コレクション内の指定したインデックス位置にある <see cref="T:System.Data.Common.DbParameter" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">指定した名前の <see cref="T:System.Data.Common.DbParameter" /> オブジェクトを返します。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">コレクション内の <see cref="T:System.Data.Common.DbParameter" /> の名前。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">指定した名前の <see cref="T:System.Data.Common.DbParameter" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary vsli:raw="Returns the index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">指定した <see cref="T:System.Data.Common.DbParameter" /> オブジェクトのインデックスを返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">コレクション内の <see cref="T:System.Data.Common.DbParameter" /> オブジェクト。</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">指定された <see cref="T:System.Data.Common.DbParameter" /> オブジェクトのインデックス。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Returns the index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">指定した名前の <see cref="T:System.Data.Common.DbParameter" /> オブジェクトのインデックスを返します。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">コレクション内の <see cref="T:System.Data.Common.DbParameter" /> オブジェクトの名前。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">指定した名前の <see cref="T:System.Data.Common.DbParameter" /> オブジェクトのインデックス。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts the specified index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name into the collection at the specified index.">指定した名前を持つ <see cref="T:System.Data.Common.DbParameter" /> オブジェクトの指定したインデックスを、指定したインデックスにあるコレクションに挿入します。</summary>
      <param name="index" vsli:raw="The index at which to insert the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbParameter" /> オブジェクトを挿入する位置を示すインデックス。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to insert into the collection.">コレクションに挿入する <see cref="T:System.Data.Common.DbParameter" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object from the collection.">指定した <see cref="T:System.Data.Common.DbParameter" /> オブジェクトをコレクションから削除します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">削除する <see cref="T:System.Data.Common.DbParameter" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified from the collection.">指定した位置の <see cref="T:System.Data.Common.DbParameter" /> オブジェクトをコレクションから削除します。</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">
        <see cref="T:System.Data.Common.DbParameter" /> オブジェクトが存在するインデックス。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name from the collection.">指定した名前を持つ <see cref="T:System.Data.Common.DbParameter" /> オブジェクトをコレクションから削除します。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">削除する <see cref="T:System.Data.Common.DbParameter" /> オブジェクトの名前。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index to a new value.">指定したインデックスの <see cref="T:System.Data.Common.DbParameter" /> オブジェクトを新しい値に設定します。</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">
        <see cref="T:System.Data.Common.DbParameter" /> オブジェクトが存在するインデックス。</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">新しい <see cref="T:System.Data.Common.DbParameter" /> 値。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name to a new value.">指定した名前の <see cref="T:System.Data.Common.DbParameter" /> オブジェクトを新しい値に設定します。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">コレクション内の <see cref="T:System.Data.Common.DbParameter" /> オブジェクトの名前。</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">新しい <see cref="T:System.Data.Common.DbParameter" /> 値。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Add(System.Object)" />」をご覧ください。</summary>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Add(System.Object)" />」をご覧ください。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Add(System.Object)" />」をご覧ください。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Contains(System.Object)" />」をご覧ください。</summary>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Contains(System.Object)" />」をご覧ください。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Contains(System.Object)" />」をご覧ください。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.IndexOf(System.Object)" />」をご覧ください。</summary>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.IndexOf(System.Object)" />」をご覧ください。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.IndexOf(System.Object)" />」をご覧ください。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />」をご覧ください。</summary>
      <param name="index" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />」をご覧ください。</param>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />」をご覧ください。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Remove(System.Object)" />」をご覧ください。</summary>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Remove(System.Object)" />」をご覧ください。</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary vsli:raw="Specifies the number of items in the collection.">コレクション内の項目の数を指定します。</summary>
      <returns vsli:raw="The number of items in the collection.">コレクション内の項目数。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary vsli:raw="Specifies whether the collection is a fixed size.">コレクションが固定サイズかどうかを指定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">コレクションが固定サイズの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary vsli:raw="Specifies whether the collection is read-only.">コレクションが読み取り専用かどうかを指定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;.">コレクションが読み取り専用の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary vsli:raw="Specifies whether the collection is synchronized.">コレクションが同期されているかどうかを指定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise &lt;see langword=&quot;false&quot; /&gt;.">コレクションが同期されている場合は <see langword="true" />、それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">指定したインデックス位置にある <see cref="T:System.Data.Common.DbParameter" /> を取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the parameter.">パラメーターの 0 から始まるインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">指定されたインデックスは存在しません。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">指定したインデックスにある <see cref="T:System.Data.Common.DbParameter" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">指定した名前の <see cref="T:System.Data.Common.DbParameter" /> を取得または設定します。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">パラメーターの名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">指定されたインデックスは存在しません。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">指定された名前の <see cref="T:System.Data.Common.DbParameter" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the collection.">コレクションへのアクセスを同期するために使用する <see cref="T:System.Object" /> を指定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameterCollection" /> へのアクセスを同期するために使用する <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns vsli:raw="The element at the specified index.">指定したインデックス位置にある要素。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">指定したインデックスにあるパラメーターを取得または設定します。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">取得するパラメーターの名前。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">指定されたインデックスの <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary vsli:raw="Represents a set of static methods for creating one or more instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; classes.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> クラスの 1 つ以上のインスタンスを作成するための静的メソッドのセットを表します。</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> のインスタンスを返します。</summary>
      <param name="connection" vsli:raw="The connection used.">使用する接続。</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified connection.">指定された接続の <see cref="T:System.Data.Common.DbProviderFactory" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> のインスタンスを返します。</summary>
      <param name="providerRow" vsli:raw="&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; containing the provider's configuration information.">プロバイダーの構成情報を格納している <see cref="T:System.Data.DataRow" />。</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">指定された <see cref="T:System.Data.Common.DbProviderFactory" /> の <see cref="T:System.Data.DataRow" /> インスタンス。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> のインスタンスを返します。</summary>
      <param name="providerInvariantName" vsli:raw="Invariant name of a provider.">プロバイダーの不変名。</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified provider name.">指定されたプロバイダー名の <see cref="T:System.Data.Common.DbProviderFactory" /> インスタンス。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains information about all installed providers that implement &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> を実装するすべてのインストール済みプロバイダーに関する情報を格納している <see cref="T:System.Data.Common.DbProviderFactory" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain the following data:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Column ordinal&lt;/term&gt;&lt;description&gt; Column name&lt;/description&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;description&gt; Human-readable name for the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;description&gt; Human-readable description of the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 2&lt;/term&gt;&lt;description&gt; InvariantName&lt;/description&gt;&lt;description&gt; Name that can be used programmatically to refer to the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 3&lt;/term&gt;&lt;description&gt; AssemblyQualifiedName&lt;/description&gt;&lt;description&gt; Fully qualified name of the factory class, which contains enough information to instantiate the object.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">次のデータを格納する <see cref="T:System.Data.DataRow" /> オブジェクトが格納されている <see cref="T:System.Data.DataTable" />: 
 <list type="table"><listheader><term> 列の序数</term><description> 列名</description><description> 説明</description></listheader><item><term> 0</term><description> Name</description><description> ユーザーが判読できるデータ プロバイダーの名前。</description></item><item><term> 1</term><description> 説明</description><description> ユーザーが判読できるデータ プロバイダーの説明。</description></item><item><term> 2</term><description> 示す invariantname</description><description> データ プロバイダーをプログラムから参照するために使用できる名前。</description></item><item><term> 3</term><description> AssemblyQualifiedName</description><description> オブジェクトをインスタンス化するために必要な情報が含まれるファクトリ クラスの完全修飾名。</description></item></list></returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames">
      <summary vsli:raw="Returns the invariant provider names for all registered instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> のすべての登録済みインスタンスの不変のプロバイダー名を返します。</summary>
      <returns vsli:raw="The invariant provider names for all registered instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> のすべての登録済みインスタンスの不変のプロバイダー名。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <summary vsli:raw="Registers an instance of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; under the specified invariant provider name.">指定された不変のプロバイダー名に <see cref="T:System.Data.Common.DbProviderFactory" /> のインスタンスを登録します。</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">プロバイダーの登録先となる不変のプロバイダー名。</param>
      <param name="factory" vsli:raw="The instance of the provider factory to be registered.">登録するプロバイダー ファクトリのインスタンス。</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; with the given assembly-qualified name under the specified invariant provider name.">指定されたアセンブリ修飾名を使用して、不変のプロバイダー名に <see cref="T:System.Data.Common.DbProviderFactory" /> のインスタンスを登録します。</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">プロバイダーの登録先となる不変のプロバイダー名。</param>
      <param name="factoryTypeAssemblyQualifiedName" vsli:raw="The assembly-qualified name for a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> のアセンブリ修飾名。</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; with the given type under the specified invariant provider name.">指定された型を使用して、不変のプロバイダー名に <see cref="T:System.Data.Common.DbProviderFactory" /> のインスタンスを登録します。</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">プロバイダーの登録先となる不変のプロバイダー名。</param>
      <param name="providerFactoryClass" vsli:raw="The type representing a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> を表す型。</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <summary vsli:raw="Attempts to get the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; registered under the specified invariant provider name.">指定された不変のプロバイダー名に登録されている <see cref="T:System.Data.Common.DbProviderFactory" /> の取得を試みます。</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name to look up.">検索対象のプロバイダーの不変名。</param>
      <param name="factory" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; associated with the specified invariant provider name, if the name is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">このメソッドから制御が戻るとき、指定されたプロバイダーの不変名が見つかった場合は、その名前に関連付けられている <see cref="T:System.Data.Common.DbProviderFactory" /> が格納されます。それ以外の場合は <see langword="null" /> になります。 このパラメーターは初期化せずに渡されます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a provider is registered under the specified invariant provider name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定された不変のプロバイダー名にプロバイダーが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; registration for the given provider invariant name.">指定されたプロバイダーの不変名の <see cref="T:System.Data.Common.DbProviderFactory" /> 登録を削除します。</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name of the registration to remove.">削除対象の登録のプロバイダーの不変名。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the registration is successfully found and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method returns &lt;see langword=&quot;false&quot; /&gt; if a registration for &lt;paramref name=&quot;providerInvariantName&quot; /&gt; is not found.">登録が見つかり、正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 このメソッドは、<paramref name="providerInvariantName" /> の登録が見つからない場合、<see langword="false" /> を返します。</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary vsli:raw="Represents a set of methods for creating instances of a provider's implementation of the data source classes.">プロバイダーのデータ ソース クラスの実装のインスタンスを作成するためのメソッドのセットを表します。</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbCommand" /> クラスを実装するプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommand" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> クラスを実装するプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbConnection" /> クラスを実装するプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnection" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> クラスを実装するプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> クラスを実装するプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> クラスを実装するプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbParameter" /> クラスを実装するプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameter" /> の新しいインスタンス。</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">この <see cref="T:System.Data.Common.DbProviderFactory" /> インスタンスが <see cref="T:System.Data.Common.DbCommandBuilder" /> クラスをサポートしているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> このインスタンスがクラスをサポートしている場合は <see cref="T:System.Data.Common.DbCommandBuilder" /> 。それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">この <see cref="T:System.Data.Common.DbProviderFactory" /> インスタンスが <see cref="T:System.Data.Common.DbDataAdapter" /> クラスをサポートしているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> インスタンスがクラスをサポートしている場合は <see cref="T:System.Data.Common.DbDataAdapter" /> 。それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">この <see cref="T:System.Data.Common.DbProviderFactory" /> インスタンスが <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> クラスをサポートしているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> インスタンスがクラスをサポートしている場合は <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 。それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary vsli:raw="Identifies which provider-specific property in the strongly typed parameter classes is to be used when setting a provider-specific type.">プロバイダー固有の型の設定時に使用される、厳密に型指定されたパラメーター クラスのプロバイダー固有のプロパティを識別します。</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderSpecificTypePropertyAttribute&quot; /&gt; class.">
        <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="isProviderSpecificTypeProperty" vsli:raw="Specifies whether this property is a provider-specific property.">このプロパティがプロバイダー固有のプロパティであるかどうかを示します。</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary vsli:raw="Indicates whether the attributed property is a provider-specific type.">属性付きプロパティがプロバイダー固有の型であるかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property that this attribute is applied to is a provider-specific type property; otherwise &lt;see langword=&quot;false&quot; /&gt;.">この属性が適用されるプロパティがプロバイダー固有の型のプロパティである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary vsli:raw="Defines the core behavior of database transactions and provides a base class for database-specific transactions.">データベース トランザクションのコア動作を定義し、データベース固有のトランザクションに向けた基底クラスを提供します。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; object.">新しい <see cref="T:System.Data.Common.DbTransaction" /> オブジェクトを初期化します。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary vsli:raw="When overridden in a derived class, commits the database transaction.">派生クラス内でオーバーライドされた場合、データベース トランザクションをコミットします。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously commits the database transaction.">データベース トランザクションを非同期にコミットします。</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">非同期操作を取り消すオプションのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">非同期操作を表す <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbTransaction" /> によって使用されているアンマネージ リソースを解放します。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Data.Common.DbTransaction" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, this method releases all resources held by any managed objects that this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; references.">
        <see langword="true" /> の場合、このメソッドは、この <see cref="T:System.Data.Common.DbTransaction" /> から参照されるすべてのマネージド オブジェクトが保持しているすべてのリソースを解放します。</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the transaction object.">トランザクション オブジェクトを非同期に破棄します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">非同期操作を表す <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Release(System.String)">
      <summary vsli:raw="Destroys a savepoint previously defined in the current transaction. This allows the system to reclaim some resources before the transaction ends.">現在のトランザクションで以前に定義されていたセーブポイントを破棄します。 これにより、システムによってトランザクションが終了する前にリソースの一部を再利用できます。</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to release.">解放するセーブポイントの名前。</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Destroys a savepoint previously defined in the current transaction. This allows the system to reclaim some resources before the transaction ends.">現在のトランザクションで以前に定義されていたセーブポイントを破棄します。 これにより、システムによってトランザクションが終了する前にリソースの一部を再利用できます。</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to release.">解放するセーブポイントの名前。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">非同期操作を取り消すオプションのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">非同期操作を表す <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary vsli:raw="When overridden in a derived class, rolls back a transaction from a pending state.">派生クラス内でオーバーライドされた場合、トランザクションを保留状態からロールバックします。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback(System.String)">
      <summary vsli:raw="Rolls back all commands that were executed after the specified savepoint was established.">指定したセーブポイントが確立された後に実行されたすべてのコマンドをロールバックします。</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to roll back to.">ロールバック先のセーブポイントの名前。</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Rolls back all commands that were executed after the specified savepoint was established.">指定したセーブポイントが確立された後に実行されたすべてのコマンドをロールバックします。</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to roll back to.">ロールバック先のセーブポイントの名前。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">非同期操作を取り消すオプションのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">非同期操作を表す <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously rolls back a transaction from a pending state.">トランザクションを保留状態から非同期にロールバックします。</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">非同期操作を取り消すオプションのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">非同期操作を表すタスク。</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Save(System.String)">
      <summary vsli:raw="Creates a savepoint in the transaction. This allows all commands that are executed after the savepoint was established to be rolled back, restoring the transaction state to what it was at the time of the savepoint.">トランザクション内にセーブポイントを作成します。 これにより、セーブポイントが確立された後に実行されるすべてのコマンドがロールバックされ、トランザクションの状態がセーブポイントの時点の状態に復元されます。</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to be created.">作成するセーブポイントの名前。</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a savepoint in the transaction. This allows all commands that are executed after the savepoint was established to be rolled back, restoring the transaction state to what it was at the time of the savepoint.">トランザクション内にセーブポイントを作成します。 これにより、セーブポイントが確立された後に実行されるすべてのコマンドがロールバックされ、トランザクションの状態がセーブポイントの時点の状態に復元されます。</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to be created.">作成するセーブポイントの名前。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">非同期操作を取り消すオプションのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">非同期操作を表す <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">トランザクションに関連付けられている <see cref="T:System.Data.Common.DbConnection" /> オブジェクトを指定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">トランザクションに関連付けられる <see cref="T:System.Data.Common.DbConnection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">派生クラス内でオーバーライドされた場合、トランザクションに関連付けられている <see cref="T:System.Data.Common.DbConnection" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">トランザクションに関連付けられる <see cref="T:System.Data.Common.DbConnection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary vsli:raw="When overridden in a derived class, gets the isolation level for this transaction.">派生クラス内でオーバーライドされた場合、このトランザクションの分離レベルを取得します。</summary>
      <returns vsli:raw="The isolation level for this transaction.">このトランザクションの分離レベル。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.SupportsSavepoints">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; instance supports database savepoints.&#xA;            If &lt;see langword=&quot;false&quot; /&gt;, the methods &lt;see cref=&quot;M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)&quot; /&gt;, &lt;see cref=&quot;M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)&quot; /&gt; and &lt;see cref=&quot;M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)&quot; /&gt; as well as their synchronous counterparts are expected to throw &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">この <see cref="T:System.Data.Common.DbTransaction" /> インスタンスでデータベースのセーブポイントがサポートされているかどうかを示す値を取得します。
<see langword="false" /> の場合、メソッド <see cref="M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)" />、<see cref="M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)" />、<see cref="M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)" /> およびそれらの同期版では <see cref="T:System.NotSupportedException" /> がスローされることが想定されます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; instance supports database savepoints; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> この <see cref="T:System.Data.Common.DbTransaction" /> インスタンスがデータベースのセーブポイントをサポートする場合は、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction, or a null reference if the transaction is no longer valid.">トランザクションに関連付けられた <see cref="T:System.Data.Common.DbConnection" /> オブジェクト、またはトランザクションが無効になった場合に null 参照を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">トランザクションに関連付けられる <see cref="T:System.Data.Common.DbConnection" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary vsli:raw="Specifies the relationship between the columns in a GROUP BY clause and the non-aggregated columns in the select-list of a SELECT statement.">GROUP BY 句の列と SELECT ステートメントの SELECT 一覧の非集計列のリレーションシップを指定します。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and must not contain other columns not in the select list.">GROUP BY 句には、SELECT 一覧のすべての非集計列を含める必要があります。また、SELECT 一覧にない他の列を含めることはできません。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and can contain other columns not in the select list.">GROUP BY 句には、SELECT 一覧のすべての非集計列を含める必要があります。また、SELECT 一覧にない他の列を含めることもできます。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary vsli:raw="The GROUP BY clause is not supported.">GROUP BY 句がサポートされていません。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary vsli:raw="The support for the GROUP BY clause is unknown.">GROUP BY 句がサポートされているか不明です。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary vsli:raw="There is no relationship between the columns in the GROUP BY clause and the nonaggregated columns in the SELECT list. You may group by any column.">GROUP BY 句の列と SELECT 一覧の非集計列との間にリレーションシップがありません。 任意の列によってグループ化できます。</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary vsli:raw="Generates a column schema.">列のスキーマを生成します。</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">列のスキーマ (<see cref="T:System.Data.Common.DbColumn" /> コレクション) を取得します。</summary>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">列のスキーマ (<see cref="T:System.Data.Common.DbColumn" /> コレクション)。</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary vsli:raw="Specifies how identifiers are treated by the data source when searching the system catalog.">システム カタログの検索時に、データ ソースで識別子を処理する方法を指定します。</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary vsli:raw="The data source ignores identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will match.">データ ソースは、システム カタログの検索時に識別子の大文字と小文字を区別しません。 識別子 "ab" と "AB" は一致します。</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary vsli:raw="The data source distinguishes identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will not match.">データ ソースは、システム カタログの検索時に識別子の大文字と小文字を区別します。 識別子 "ab" と "AB" は一致しません。</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary vsli:raw="The data source has ambiguous rules regarding identifier case and cannot discern this information.">データ ソースは、識別子の大文字と小文字の区別に関するあいまいな規則を持ち、この情報を正しく区別できません。</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">.NET Framework データ プロバイダーの <see langword="RowUpdated" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> を通じて送信された <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" /> の呼び出し時に実行される <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="statementType" vsli:raw="The type of SQL statement executed.">実行された SQL ステートメントの種類。</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> を通じて送信された <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">指定した配列に、変更された行の参照をコピーします。</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">コピー先の <see cref="T:System.Data.DataRow" /> の配列。</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">指定した配列に、変更された行の参照をコピーします。</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">コピー先の <see cref="T:System.Data.DataRow" /> の配列。</param>
      <param name="arrayIndex" vsli:raw="The index in the array to start copying into.">コピーの開始位置となる配列内のインデックス。</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" /> の呼び出し時に実行される <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" /> の呼び出し時に実行される <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">
        <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> の実行時に .NET Framework データ プロバイダーが生成したエラーを取得します。</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">
        <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> の実行時に .NET Framework データ プロバイダーが生成したエラー。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">SQL ステートメントの実行によって変更、挿入、または削除された行の数を取得します。</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">変更、挿入、または削除された行の数。影響を受けた行がない、またはステートメントが失敗した場合は 0。SELECT ステートメントの場合は -1。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> を通じて送信された <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> を通じて送信された <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary vsli:raw="Gets the number of rows processed in a batch of updated records.">バッチでの更新済みレコードで処理された行数を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;int&quot; /&gt; that specifies the number of row processed.">処理された行数を示す <see langword="int" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement executed.">実行された SQL ステートメントの種類を取得します。</summary>
      <returns vsli:raw="The type of SQL statement executed.">実行された SQL ステートメントの種類。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">
        <see cref="T:System.Data.UpdateStatus" /> プロパティの <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> を取得します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">
        <see cref="T:System.Data.UpdateStatus" /> 値のいずれか 1 つ。 既定値は、<see langword="Continue" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> を通じて送信された <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> を通じて送信された <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary vsli:raw="Provides the data for the RowUpdating event of a .NET data provider.">.NET Framework データ プロバイダーの RowUpdating イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> を実行する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" /> の呼び出し時に実行する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="statementType" vsli:raw="The type of SQL statement to execute.">実行する SQL ステートメントの種類。</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> を通じて送信する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; object for an instance of this class.">このクラスのインスタンスの <see cref="T:System.Data.IDbCommand" /> オブジェクトを取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> 処理中に実行する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; operation.">
        <see cref="T:System.Data.IDbCommand" /> 処理中に実行する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> 処理中に実行する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">
        <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> の実行時に .NET Framework データ プロバイダーが生成したエラーを取得します。</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">
        <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> の実行時に .NET Framework データ プロバイダーが生成したエラー。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that will be sent to the server as part of an insert, update, or delete operation.">挿入、更新、または削除操作の一部としてサーバーに送信される <see cref="T:System.Data.DataRow" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> を通じて送信する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement to execute.">実行する SQL ステートメントの種類を取得します。</summary>
      <returns vsli:raw="The type of SQL statement to execute.">実行する SQL ステートメントの種類。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">
        <see cref="T:System.Data.UpdateStatus" /> プロパティの <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> を取得または設定します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">
        <see cref="T:System.Data.UpdateStatus" /> 値のいずれか 1 つ。 既定値は、<see langword="Continue" /> です。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> を通じて送信する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> を通じて送信する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary vsli:raw="Describes the column metadata of the schema for a database table.">データベース テーブルのスキーマの列メタデータを記述します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary vsli:raw="Specifies whether value &lt;see langword=&quot;DBNull&quot; /&gt; is allowed.">値 <see langword="DBNull" /> の使用が許可されているかどうかを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">スキーマ テーブルの列の名前を示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary vsli:raw="Specifies the name of the schema in the schema table.">スキーマ テーブルのスキーマの名前を示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary vsli:raw="Specifies the name of the table in the schema table.">スキーマ テーブルのテーブルの名前を示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">スキーマ テーブルの列の名前を示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary vsli:raw="Specifies the ordinal of the column.">列の序数を示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary vsli:raw="Specifies the size of the column.">列のサイズを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary vsli:raw="Specifies the type of data in the column.">列のデータの型を示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary vsli:raw="Specifies whether this column is aliased.">この列に別名が設定されているかどうかを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary vsli:raw="Specifies whether this column is an expression.">この列が式であるかどうかを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary vsli:raw="Specifies whether this column is a key for the table.">この列がテーブルのキーであるかどうかを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary vsli:raw="Specifies whether this column contains long data.">この列に長いデータが格納されているかどうかを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary vsli:raw="Specifies whether a unique constraint applies to this column.">この列に UNIQUE 制約が適用されるかどうかを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary vsli:raw="Specifies the non-versioned provider-specific data type of the column.">バージョンなしのプロバイダー固有の列のデータ型を示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary vsli:raw="Specifies the precision of the column data, if the data is numeric.">データが数値の場合に、列データの有効桁数を示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary vsli:raw="Specifies the scale of the column data, if the data is numeric.">データが数値の場合に、列データの小数点以下桁数を示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">プロバイダー固有の列のデータ型を示します。</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary vsli:raw="Describes optional column metadata of the schema for a database table.">データベース テーブルのスキーマのオプションの列メタデータを記述します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary vsli:raw="Specifies the value at which the series for new identity columns is assigned.">一連の新しい ID 列に割り当てられる値を示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary vsli:raw="Specifies the increment between values in the identity column.">ID 列の値間のインクリメントを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary vsli:raw="The name of the catalog associated with the results of the latest query.">直前のクエリの結果に関連付けられているカタログの名前。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary vsli:raw="The namespace of the column.">列の名前空間。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary vsli:raw="The server name of the column.">列のサーバー名。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary vsli:raw="The namespace for the table that contains the column.">列を格納しているテーブルの名前空間。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary vsli:raw="Specifies the mapping for the column.">列の割り当てを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary vsli:raw="The default value for the column.">列の既定値。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary vsli:raw="The expression used to compute the column.">列の計算に使用される式。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary vsli:raw="Specifies whether the column values in the column are automatically incremented.">列内の列値が自動的にインクリメントされるかどうかを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary vsli:raw="Specifies whether this column is hidden.">この列が非表示かどうかを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary vsli:raw="Specifies whether this column is read-only.">この列が読み取り専用かどうかを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary vsli:raw="Specifies whether this column contains row version information.">この列に行のバージョン情報が格納されているかどうかを示します。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">プロバイダー固有の列のデータ型を示します。</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary vsli:raw="Specifies what types of Transact-SQL join statements are supported by the data source.">データ ソースでサポートされている Transact-SQL の JOIN ステートメントの種類を示します。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary vsli:raw="The data source supports full outer joins.">データ ソースは、完全外部結合をサポートしています。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary vsli:raw="The data source supports inner joins.">データ ソースは、内部結合をサポートしています。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary vsli:raw="The data source supports left outer joins.">データ ソースは、左外部結合をサポートしています。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary vsli:raw="The data source does not support join queries.">データ ソースは、結合クエリをサポートしていません。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary vsli:raw="The data source supports right outer joins.">データ ソースは、右外部結合をサポートしています。</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary vsli:raw="Specifies how conflicting changes to the data source will be detected and resolved.">データ ソースに対する変更が競合していることを検出して解決する方法を指定します。</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary vsli:raw="Update and delete statements will include all searchable columns from the table in the WHERE clause. This is equivalent to specifying &lt;see langword=&quot;CompareAllValuesUpdate&quot; /&gt; | &lt;see langword=&quot;CompareAllValuesDelete&quot; /&gt;.">UPDATE ステートメントおよび DELETE ステートメントに、WHERE 句のテーブルで検索可能な列がすべて含まれます。 これは、<see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" /> を指定することと同じです。</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary vsli:raw="If any Timestamp columns exist in the table, they are used in the WHERE clause for all generated update statements. This is equivalent to specifying &lt;see langword=&quot;CompareRowVersionUpdate&quot; /&gt; | &lt;see langword=&quot;CompareRowVersionDelete&quot; /&gt;.">テーブル内にタイムスタンプ列が存在する場合、その列は生成されるすべての UPDATE ステートメントの WHERE 句で使用されます。 これは、<see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" /> を指定することと同じです。</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary vsli:raw="All update and delete statements include only &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; columns in the WHERE clause. If no &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; is defined, all searchable columns are included in the WHERE clause. This is equivalent to &lt;see langword=&quot;OverwriteChangesUpdate&quot; /&gt; | &lt;see langword=&quot;OverwriteChangesDelete&quot; /&gt;.">すべての UPDATE ステートメントおよび DELETE ステートメントの WHERE 句に、<see cref="P:System.Data.DataTable.PrimaryKey" /> 列のみが含まれます。 <see cref="P:System.Data.DataTable.PrimaryKey" /> が定義されていない場合、検索可能な列がすべて WHERE 句に含まれます。 これは、<see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" /> と同じです。</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary vsli:raw="Describes the current state of the connection to a data source.">データ ソースへの接続の現在の状態について記述します。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary vsli:raw="The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.)">データ ソースへの接続が断絶しています。 この状態は接続が開かれているときだけ発生します。 この状態の接続は、いったん閉じてから再び開くことができる場合があります。 この値は製品の将来のバージョンで使用するために予約されています。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary vsli:raw="The connection is closed.">接続が閉じています。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary vsli:raw="The connection object is connecting to the data source.">接続オブジェクトがデータ ソースに接続しています。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary vsli:raw="The connection object is executing a command. (This value is reserved for future versions of the product.)">接続オブジェクトがコマンドを実行しています。 この値は製品の将来のバージョンで使用するために予約されています。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary vsli:raw="The connection object is retrieving data. (This value is reserved for future versions of the product.)">接続オブジェクトがデータを検索しています。 この値は製品の将来のバージョンで使用するために予約されています。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary vsli:raw="The connection is open.">接続が開いています。</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary vsli:raw="Represents a constraint that can be enforced on one or more &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">1 つ以上の <see cref="T:System.Data.DataColumn" /> オブジェクトに適用できる制約を表します。</summary>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">この制約が属する <see cref="T:System.Data.DataSet" /> を取得します。</summary>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary vsli:raw="Sets the constraint's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">制約の <see cref="T:System.Data.DataSet" /> を設定します。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint will belong.">この制約が属する <see cref="T:System.Data.DataSet" />。</param>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;, if there is one, as a string.">
        <see cref="P:System.Data.Constraint.ConstraintName" /> がある場合は、この制約名を文字列として取得します。</summary>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;.">
        <see cref="P:System.Data.Constraint.ConstraintName" /> の文字列値。</returns>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">この制約が属する <see cref="T:System.Data.DataSet" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the constraint belongs.">制約が属する <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary vsli:raw="The name of a constraint in the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt;.">
        <see cref="T:System.Data.ConstraintCollection" /> 内の制約の名前。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; name is a null value or empty string.">
        <see cref="T:System.Data.Constraint" /> 名が null 値または空の文字列です。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; already contains a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the same name (The comparison is not case-sensitive.).">
        <see cref="T:System.Data.ConstraintCollection" /> には、同じ名前 (名前の比較では大文字と小文字が区別されない) の <see cref="T:System.Data.Constraint" /> が既に含まれています。</exception>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">
        <see cref="T:System.Data.Constraint" /> の名前。</returns>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary vsli:raw="Gets the collection of user-defined constraint properties.">ユーザー定義の制約のプロパティのコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">カスタム情報の <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">制約を適用する <see cref="T:System.Data.DataTable" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">制約を適用する <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary vsli:raw="Represents a collection of constraints for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> に対する制約のコレクションを表します。</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary vsli:raw="Occurs whenever the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects being added or removed.">
        <see cref="T:System.Data.ConstraintCollection" /> オブジェクトを追加または削除したことが原因で <see cref="T:System.Data.Constraint" /> が変更されると、常に発生します。</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object to the collection.">指定した <see cref="T:System.Data.Constraint" /> オブジェクトをコレクションに追加します。</summary>
      <param name="constraint" vsli:raw="The &lt;see langword=&quot;Constraint&quot; /&gt; to add.">追加する <see langword="Constraint" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is null.">
        <paramref name="constraint" /> 引数が null です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection, or belongs to another collection.">この制約は既にこのコレクションまたは別のコレクションに属しています。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the same name. (The comparison is not case-sensitive.)">このコレクションには同じ名前の制約が既に含まれています。 (比較では、大文字と小文字を区別しません。)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, and value that indicates whether the column is a primary key, and adds it to the collection.">指定した名前、<see cref="T:System.Data.UniqueConstraint" />、およびその列が主キーかどうかを示す値を使用して、新しい <see cref="T:System.Data.DataColumn" /> を作成し、この制約をコレクションに追加します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">
        <see langword="UniqueConstraint" /> の名前。</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to which the constraint applies.">制約を適用する <see cref="T:System.Data.DataColumn" />。</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">列を主キーにするかどうかを指定します。 <see langword="true" /> の場合、その列が主キー列になります。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">この制約は既にこのコレクションに属しています。  
  
 -または-  
  
 この制約は他のコレクションに属しています。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">このコレクションには指定した名前の制約が既に含まれています。 (比較では、大文字と小文字を区別しません。)</exception>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">新しい <see langword="UniqueConstraint" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; with the specified name, parent column, and child column, and adds the constraint to the collection.">指定した名前、親列、および子列を使用して新しい <see cref="T:System.Data.ForeignKeyConstraint" /> を作成し、この制約をコレクションに追加します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> の名前。</param>
      <param name="primaryKeyColumn" vsli:raw="The primary key, or parent, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">主キーまたは親 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="foreignKeyColumn" vsli:raw="The foreign key, or child, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">外部キーまたは子 <see cref="T:System.Data.DataColumn" />。</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">新しい <see langword="ForeignKeyConstraint" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether the column is a primary key, and adds it to the collection.">指定した名前、<see cref="T:System.Data.UniqueConstraint" /> オブジェクトの配列、およびその列が主キーかどうかを示す値を使用して新しい <see cref="T:System.Data.DataColumn" /> を作成し、その制約をコレクションに追加します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt;.">
        <see cref="T:System.Data.UniqueConstraint" /> の名前。</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to which the constraint applies.">制約を適用する <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">列を主キーにするかどうかを指定します。 <see langword="true" /> の場合、その列が主キー列になります。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">この制約は既にこのコレクションに属しています。  
  
 -または-  
  
 この制約は他のコレクションに属しています。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">このコレクションには指定した名前の制約が既に含まれています。 (比較では、大文字と小文字を区別しません。)</exception>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">新しい <see langword="UniqueConstraint" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.">指定した親列と子列の配列を使用して新しい <see cref="T:System.Data.ForeignKeyConstraint" /> を作成し、この制約をコレクションに追加します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> の名前。</param>
      <param name="primaryKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the primary key, or parent, columns.">主キー列または親列である <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <param name="foreignKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the foreign key, or child, columns.">外部キー列または子列である <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">新しい <see langword="ForeignKeyConstraint" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; array to the end of the collection.">指定した <see cref="T:System.Data.ConstraintCollection" /> 配列の要素をコレクションの末尾にコピーします。</summary>
      <param name="constraints" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; objects to add to the collection.">コレクションに追加する <see cref="T:System.Data.ConstraintCollection" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed.">
        <see cref="T:System.Data.Constraint" /> を削除できるかどうかを示します。</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to be tested for removal from the collection.">コレクションから削除できるかどうかを確認する <see cref="T:System.Data.Constraint" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed from collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.Constraint" /> をコレクションから削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary vsli:raw="Clears the collection of any &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects.">すべての <see cref="T:System.Data.Constraint" /> オブジェクトのコレクションを削除します。</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name exists in the collection.">名前で指定した <see cref="T:System.Data.Constraint" /> オブジェクトがコレクション内に存在するかどうかを示します。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint.">制約の <see cref="P:System.Data.Constraint.ConstraintName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified constraint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した制約がコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">指定したインデックスをコピー開始位置として、1 次元の <see cref="T:System.Array" /> インスタンスにコレクション オブジェクトをコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">コレクションから値がコピーされる先の 1 次元の <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">挿入の開始位置を示す、配列内のインデックス。</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">指定した <see cref="T:System.Data.Constraint" /> のインデックスを取得します。</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to search for.">検索対象の <see cref="T:System.Data.Constraint" />。</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">
        <see cref="T:System.Data.Constraint" /> がコレクション内に存在する場合はその制約の 0 から始まるインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; specified by name.">名前で指定した <see cref="T:System.Data.Constraint" /> のインデックスを取得します。</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">
        <see cref="T:System.Data.Constraint" /> の名前。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">
        <see cref="T:System.Data.Constraint" /> がコレクション内に存在する場合はその制約のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection.">指定された <see cref="T:System.Data.Constraint" /> をコレクションから削除します。</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">削除する <see cref="T:System.Data.Constraint" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="constraint" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint does not belong to the collection.">この制約はコレクション内に存在しません。</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name from the collection.">名前で指定した <see cref="T:System.Data.Constraint" /> をコレクションから削除します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">削除する <see cref="T:System.Data.Constraint" /> の名前です。</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object at the specified index from the collection.">指定したインデックス位置にある <see cref="T:System.Data.Constraint" /> オブジェクトをコレクションから削除します。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">削除する <see cref="T:System.Data.Constraint" /> のインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a constraint at this index.">このコレクションにはこのインデックス位置に制約がありません。</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection at the specified index.">指定したインデックス位置にある <see cref="T:System.Data.Constraint" /> をコレクションから取得します。</summary>
      <param name="index" vsli:raw="The index of the constraint to return.">返される制約のインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">インデックス値が、コレクション内の項目数を超える値です。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; at the specified index.">指定したインデックスにある <see cref="T:System.Data.Constraint" /> です。</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection with the specified name.">指定した名前の <see cref="T:System.Data.Constraint" /> をコレクションから取得します。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint to return.">返される制約の <see cref="P:System.Data.Constraint.ConstraintName" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the specified name; otherwise a null value if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; does not exist.">指定した名前の <see cref="T:System.Data.Constraint" />。指定した名前の <see cref="T:System.Data.Constraint" /> が存在しない場合は null 値。</returns>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when attempting an action that violates a constraint.">制約に違反する操作を試みた場合にスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class. This is the parameterless constructor.">
        <see cref="T:System.Data.ConstraintException" /> クラスの新しいインスタンスを初期化します。 これはパラメーターなしのコンストラクターです。</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified serialization and stream context.">指定したシリアル化とストリーム コンテキストを使用して <see cref="T:System.Data.ConstraintException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定したシリアル化ストリームの転送元と転送先の説明。</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.ConstraintException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified string and inner exception.">指定した文字列と内部例外を使用して、<see cref="T:System.Data.ConstraintException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
      <param name="innerException" vsli:raw="Gets the &lt;see langword=&quot;Exception&quot; /&gt; instance that caused the current exception.">現在の例外の原因となる <see langword="Exception" /> インスタンスを取得します。</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary vsli:raw="Represents the schema of a column in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の列のスキーマを表します。</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class as type string.">
        <see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを文字列型として初期化します。</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class, as type string, using the specified column name.">指定した列名を使用して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを文字列型として初期化します。</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">作成する列の名前を表す文字列。 <see langword="null" /> または空の文字列 ("") に設定した場合は、列コレクションに追加するときに既定の名前が指定されます。</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified column name and data type.">指定した列名とデータ型を使用して <see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">作成する列の名前を表す文字列。 <see langword="null" /> または空の文字列 ("") に設定した場合は、列コレクションに追加するときに既定の名前が指定されます。</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">サポートされる <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">
        <paramref name="dataType" /> が指定されませんでした。</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, and expression.">指定した名前、データ型、および式を使用して <see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">作成する列の名前を表す文字列。 <see langword="null" /> または空の文字列 ("") に設定した場合は、列コレクションに追加するときに既定の名前が指定されます。</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">サポートされる <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">この列の作成に使用される式。 詳細については、<see cref="P:System.Data.DataColumn.Expression" /> プロパティを参照してください。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">
        <paramref name="dataType" /> が指定されませんでした。</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, expression, and value that determines whether the column is an attribute.">指定した名前、データ型、式、およびこの列が属性かどうかを決定する値を使用して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">作成する列の名前を表す文字列。 <see langword="null" /> または空の文字列 ("") に設定した場合は、列コレクションに追加するときに既定の名前が指定されます。</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">サポートされる <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">この列の作成に使用される式。 詳細については、<see cref="P:System.Data.DataColumn.Expression" /> プロパティを参照してください。</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">
        <see cref="T:System.Data.MappingType" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">
        <paramref name="dataType" /> が指定されませんでした。</exception>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">パラメーターの参照。</param>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="name" vsli:raw="Parameter reference.">パラメーターの参照。</param>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary vsli:raw="Changes the ordinal or position of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to the specified ordinal or position.">
        <see cref="T:System.Data.DataColumn" /> の序数または位置を、指定された序数または位置に変更します。</summary>
      <param name="ordinal" vsli:raw="The specified ordinal.">指定した序数。</param>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; of the column, if one exists.">列の <see cref="P:System.Data.DataColumn.Expression" /> がある場合は、その式を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; value, if the property is set; otherwise, the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; property.">
        <see cref="P:System.Data.DataColumn.Expression" /> プロパティが設定されている場合はその値。それ以外の場合は <see cref="P:System.Data.DataColumn.ColumnName" /> プロパティ。</returns>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary vsli:raw="Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.">このテーブルに属する行のこの列に null 値を格納できるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> null 値が許可される場合は。それ以外の場合は <see langword="false" /> 。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary vsli:raw="Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.">このテーブルに追加される新しい行でこの列の値を自動的にインクリメントするかどうかを示す値を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a computed column.">この列は計算列です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the column increments automatically; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">この列の値を自動的にインクリメントする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary vsli:raw="Gets or sets the starting value for a column that has its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;. The default is 0.">
        <see cref="P:System.Data.DataColumn.AutoIncrement" /> プロパティが <see langword="true" /> に設定されている列の開始値を取得または設定します。 既定値は 0 です。</summary>
      <returns vsli:raw="The starting value for the &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; feature.">
        <see cref="P:System.Data.DataColumn.AutoIncrement" /> 機能の開始値。</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary vsli:raw="Gets or sets the increment used by a column with its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.AutoIncrement" /> プロパティが <see langword="true" /> に設定されている列で使用するインクリメント値を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is zero.">値が 0 に設定されています。</exception>
      <returns vsli:raw="The number by which the value of the column is automatically incremented. The default is 1.">列の値を自動的にインクリメントする数値。 既定値は 1 です。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary vsli:raw="Gets or sets the caption for the column.">列のキャプションを取得または設定します。</summary>
      <returns vsli:raw="The caption of the column. If not set, returns the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; value.">列のキャプション。 キャプションが設定されていない場合は、<see cref="P:System.Data.DataColumn.ColumnName" /> 値を返します。</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; of the column.">列の <see cref="T:System.Data.MappingType" /> を取得します。値の設定も可能です。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">
        <see cref="T:System.Data.MappingType" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary vsli:raw="Gets or sets the name of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataColumnCollection" /> 内の列名を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt; or an empty string and the column belongs to a collection.">このプロパティは <see langword="null" /> または空の文字列に設定され、列がコレクションに属しています。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A column with the same name already exists in the collection. The name comparison is not case sensitive.">同じ名前の列がコレクション内に既に存在します。 名前の比較では、大文字と小文字が区別されません。</exception>
      <returns vsli:raw="The name of the column.">列の名前。</returns>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary vsli:raw="Gets or sets the type of data stored in the column.">列に格納されているデータの型を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already has data stored.">この列には既にデータが格納されています。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the column data type.">列のデータ型を表す <see cref="T:System.Type" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;DateTimeMode&quot; /&gt; for the column.">列の <see langword="DateTimeMode" /> を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSetDateTime&quot; /&gt; for the specified column.">指定した列の <see cref="T:System.Data.DataSetDateTime" />。</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the column when you are creating new rows.">新しい行を作成するときに使用されるこの列の既定値を取得または設定します。</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are adding a row, the default value is not an instance of the column's data type.">行を追加する場合、既定値はこの列のデータ型のインスタンスではありません。</exception>
      <returns vsli:raw="A value appropriate to the column's &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">この列の <see cref="P:System.Data.DataColumn.DataType" /> に適切な値。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary vsli:raw="Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.">行のフィルター処理、列内の値の計算、または集約列の作成に使用する式を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; or &lt;see cref=&quot;P:System.Data.DataColumn.Unique&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.AutoIncrement" /> プロパティまたは <see cref="P:System.Data.DataColumn.Unique" /> プロパティが <see langword="true" /> に設定されます。</exception>
      <exception cref="T:System.FormatException" vsli:raw="When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.">CONVERT 関数を使用すると式が文字列と評価されますが、その文字列には型パラメーターに変換できる形式は含まれていません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are using the CONVERT function, the requested cast is not possible. See the Conversion function in the following section for detailed information about possible casts.">CONVERT 関数を使用する場合は、要求したキャストを実行できません。 実行できるキャストの詳細については、以降のセクションで変換関数に関するトピックを参照してください。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="When you use the SUBSTRING function, the start argument is out of range.  &#xA;  &#xA; -Or-  &#xA;  &#xA; When you use the SUBSTRING function, the length argument is out of range.">SUBSTRING 関数を使用する場合は、開始引数が範囲外にあります。  
  
 -または-  
  
 SUBSTRING 関数を使用する場合は、長さ引数が範囲外にあります。</exception>
      <exception cref="T:System.Exception" vsli:raw="When you use the LEN function or the TRIM function, the expression does not evaluate to a string. This includes expressions that evaluate to &lt;see cref=&quot;T:System.Char&quot; /&gt;.">LEN 関数または TRIM 関数を使用する場合は、式が文字列と評価されません。 これには <see cref="T:System.Char" /> と評価される式も含まれます。</exception>
      <returns vsli:raw="An expression to calculate the value of a column, or create an aggregate column. The return type of an expression is determined by the &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the column.">集約列内の値の計算または集約列の作成に使用する式。 式の戻り型は列の <see cref="P:System.Data.DataColumn.DataType" /> によって決定されます。</returns>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary vsli:raw="Gets the collection of custom user information associated with a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> に関連付けられているカスタム ユーザー情報のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">カスタム情報の <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary vsli:raw="Gets or sets the maximum length of a text column.">テキスト列の最大長を取得または設定します。</summary>
      <returns vsli:raw="The maximum length of the column in characters. If the column has no maximum length, the value is -1 (default).">文字単位で表した列の最大長。 列の最大長が指定されていない場合、値は-1 (既定値) になります。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> の名前空間を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">この名前空間には既にデータが格納されています。</exception>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> の名前空間。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary vsli:raw="Gets the (zero-based) position of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; collection.">
        <see cref="T:System.Data.DataColumnCollection" /> コレクション内の 0 から始まる列の位置を取得します。</summary>
      <returns vsli:raw="The position of the column. Gets -1 if the column is not a member of a collection.">列の位置。 列がコレクションのメンバーでない場合は、-1 を取得します。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の名前空間に別名を付ける XML プリフィックスを取得または設定します。</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace.">
        <see cref="T:System.Data.DataTable" /> 名前空間の XML プリフィックス。</returns>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary vsli:raw="Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.">行がテーブルに追加された直後にこの列を変更できるかどうかを示す値を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;false&quot; /&gt; on a computed column.">このプロパティは計算列に対して <see langword="false" /> に設定されます。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column is read only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">列が読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the column belongs to.">列が属する <see cref="T:System.Data.DataTable" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; belongs to.">
        <see cref="T:System.Data.DataTable" /> が属する <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary vsli:raw="Gets or sets a value that indicates whether the values in each row of the column must be unique.">列の各行の値が一意である必要があるかどうかを示す値を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a calculated column.">この列は計算列です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be unique; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">値が一意である必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.ColumnChanging" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.DataColumnChangeEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with the changing value.">値が変化する列の <see cref="T:System.Data.DataRow" />。</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with the changing value.">値が変化する <see cref="T:System.Data.DataColumn" />。</param>
      <param name="value" vsli:raw="The new value.">新しい値。</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">値が変化する <see cref="T:System.Data.DataColumn" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">値が変化する <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary vsli:raw="Gets or sets the proposed new value for the column.">列の提示された新しい値を取得または設定します。</summary>
      <returns vsli:raw="The proposed value, of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">
        <see cref="T:System.Object" /> 型の提示された値。</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">値が変化する列の <see cref="T:System.Data.DataRow" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">値が変化する列の <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.ColumnChanging" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataColumnChangeEventArgs" />。</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> の <see cref="T:System.Data.DataTable" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the columns collection changes, either by adding or removing a column.">列の追加または削除によって列コレクションが変更されたときに発生します。</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> オブジェクトを作成し、このオブジェクトを <see cref="T:System.Data.DataColumnCollection" /> に追加します。</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">新しく作成された <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary vsli:raw="Creates and adds the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">指定した <see cref="T:System.Data.DataColumn" /> オブジェクトを作成し、このオブジェクトを <see cref="T:System.Data.DataColumnCollection" /> に追加します。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to add.">追加する <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already belongs to this collection, or to another collection.">この列は既にこのコレクションまたは他のコレクションに属しています。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">コレクションには、既に指定した名前の列があります。 (比較では、大文字と小文字を区別しません。)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">式が無効です。 式の作成方法の詳細については、<see cref="P:System.Data.DataColumn.Expression" /> プロパティのトピックを参照してください。</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">指定した名前で <see cref="T:System.Data.DataColumn" /> オブジェクトを作成し、このオブジェクトを <see cref="T:System.Data.DataColumnCollection" /> に追加します。</summary>
      <param name="columnName" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">コレクションには、既に指定した名前の列があります。 (比較では、大文字と小文字を区別しません。)</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">新しく作成された <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name and type to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">指定した名前と型で <see cref="T:System.Data.DataColumn" /> オブジェクトを作成し、このオブジェクトを <see cref="T:System.Data.DataColumnCollection" /> に追加します。</summary>
      <param name="columnName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; to use when you create the column.">列の作成時に使用する <see cref="P:System.Data.DataColumn.ColumnName" />。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">新しい列の <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">コレクションには、既に指定した名前の列があります。 (比較では、大文字と小文字を区別しません。)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">式が無効です。 式の作成方法の詳細については、<see cref="P:System.Data.DataColumn.Expression" /> プロパティのトピックを参照してください。</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">新しく作成された <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name, type, and expression to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">指定した名前、型、および式で <see cref="T:System.Data.DataColumn" /> オブジェクトを作成し、このオブジェクトを <see cref="T:System.Data.DataColumnCollection" /> に追加します。</summary>
      <param name="columnName" vsli:raw="The name to use when you create the column.">列の作成時に使用する名前。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">新しい列の <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <param name="expression" vsli:raw="The expression to assign to the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">
        <see cref="P:System.Data.DataColumn.Expression" /> プロパティに割り当てる式。</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">コレクションには、既に指定した名前の列があります。 (比較では、大文字と小文字を区別しません。)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">式が無効です。 式の作成方法の詳細については、<see cref="P:System.Data.DataColumn.Expression" /> プロパティのトピックを参照してください。</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">新しく作成された <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; array to the end of the collection.">指定した <see cref="T:System.Data.DataColumn" /> 配列の要素をコレクションの末尾にコピーします。</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to add to the collection.">コレクションに追加する <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary vsli:raw="Checks whether a specific column can be removed from the collection.">特定の列をコレクションから削除できるかどうかを確認します。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection.">コレクション内の <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is null.">
        <paramref name="column" /> パラメーターが null です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.&#xA;        &#xA;-or-&#xA;&#xA;The column is part of a relationship.&#xA;&#xA;-or-&#xA;&#xA;Another column's expression depends on this column.">この列はこのコレクションに属していません。
        
- または -

この列はリレーションシップの一部です。

- または -

他の列の式がこの列に依存します。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column can be removed. &lt;see langword=&quot;false&quot; /&gt; if,  &#xA;  &#xA;-   The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-   The column does not belong to this collection.  &#xA;  &#xA;-   The column is part of a relationship.  &#xA;  &#xA;-   Another column's expression depends on this column.">列を削除できる場合は <see langword="true" /> です。 の場合 <see langword="false" /> 
-   <paramref name="column" /> パラメーターが <see langword="null" /> です。  
  
-   この列はこのコレクションに属していません。  
  
-   この列はリレーションシップの一部です。  
  
-   他の列の式がこの列に依存します。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary vsli:raw="Clears the collection of any columns.">列のコレクションを消去します。</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary vsli:raw="Checks whether the collection contains a column with the specified name.">指定した名前の列がコレクション内に存在するかどうかを確認します。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to look for.">検索する列の <see cref="P:System.Data.DataColumn.ColumnName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a column exists with this name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この名前の列が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary vsli:raw="Copies the entire collection into an existing array, starting at a specified index within the array.">コレクション全体を既存の配列内の指定したインデックス位置にコピーします。</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to copy the collection into.">コレクションのコピー先の <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <param name="index" vsli:raw="The index to start from.">コピーの開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary vsli:raw="Gets the index of a column specified by name.">名前で指定した列のインデックスを取得します。</summary>
      <param name="column" vsli:raw="The name of the column to return.">返される列の名前。</param>
      <returns vsli:raw="The index of the column specified by &lt;paramref name=&quot;column&quot; /&gt; if it is found; otherwise, -1.">
        <paramref name="column" /> で指定した列が存在する場合はその列のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the column with the specific name (the name is not case sensitive).">特定の名前の列のインデックスを取得します。名前の大文字と小文字は区別されません。</summary>
      <param name="columnName" vsli:raw="The name of the column to find.">検索する列の名前。</param>
      <returns vsli:raw="The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.">指定した名前の列の 0 から始まるインデックス番号。この列がコレクション内にない場合は -1。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object from the collection.">指定した <see cref="T:System.Data.DataColumn" /> オブジェクトをコレクションから削除します。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to remove.">削除する <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The column is part of a relationship.  &#xA;  &#xA; -Or-  &#xA;  &#xA; Another column's expression depends on this column.">この列はこのコレクションに属していません。  
  
 -または-  
  
 この列はリレーションシップの一部です。  
  
 -または-  
  
 他の列の式がこの列に依存します。</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name from the collection.">指定した名前の <see cref="T:System.Data.DataColumn" /> オブジェクトをコレクションから削除します。</summary>
      <param name="name" vsli:raw="The name of the column to remove.">削除する列の名前。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column with the specified name.">このコレクションには指定した名前の列がありません。</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the column at the specified index from the collection.">指定したインデックス位置にある列をコレクションから削除します。</summary>
      <param name="index" vsli:raw="The index of the column to remove.">削除する列のインデックス。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column at the specified index.">このコレクションには指定したインデックス位置に列がありません。</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection at the specified index.">指定したインデックス位置にある <see cref="T:System.Data.DataColumn" /> をコレクションから取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the column to return.">返される列の 0 から始まるインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">インデックス値が、コレクション内の項目数を超える値です。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; at the specified index.">指定したインデックスにある <see cref="T:System.Data.DataColumn" /> です。</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection with the specified name.">指定した名前の <see cref="T:System.Data.DataColumn" /> をコレクションから取得します。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to return.">返される列の <see cref="P:System.Data.DataColumn.ColumnName" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection with the specified &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt;; otherwise a null value if the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; does not exist.">コレクション内の指定した <see cref="T:System.Data.DataColumn" /> の <see cref="P:System.Data.DataColumn.ColumnName" />。<see cref="T:System.Data.DataColumn" /> が存在しない場合は null 値。</returns>
    </member>
    <member name="T:System.Data.DataException">
      <summary vsli:raw="Represents the exception that is thrown when errors are generated using ADO.NET components.">ADO.NET コンポーネントを使用してエラーが生成されたときにスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class. This is the parameterless constructor.">
        <see cref="T:System.Data.DataException" /> クラスの新しいインスタンスを初期化します。 これはパラメーターなしのコンストラクターです。</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified serialization information and context.">指定したシリアル化情報とコンテキストを使用して、<see cref="T:System.Data.DataException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定したシリアル化ストリームの転送元と転送先の説明。</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.DataException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string and inner exception.">指定した文字列と内部例外を使用して、<see cref="T:System.Data.DataException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">内部例外への参照。</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary vsli:raw="Provides extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" /> の拡張メソッドを提供します。</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">指定された列の値を Boolean として取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">指定された列の値をバイトとして取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">指定したインデックスを開始位置として、指定した列から指定したバイト数を読み取り、バッファー内の指定した位置の開始位置としてバッファーに書き込みます。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">読み取り操作を開始する位置を示す行内のインデックス。</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">データのコピー先のバッファー。</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">データのコピー先のバッファーのインデックス。</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">読み取り対象の最大文字数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The actual number of bytes read.">実際に読み取られたバイト数。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single character.">指定した列の値を単一の文字として取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">指定したインデックスを開始位置として、指定した列から指定した文字数を読み取り、バッファー内の指定した位置の開始位置としてバッファーに書き込みます。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">読み取り操作を開始する位置を示す行内のインデックス。</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">データのコピー先のバッファー。</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">データのコピー先のバッファーのインデックス。</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">読み取り対象の最大文字数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <returns vsli:raw="The actual number of characters read.">実際に読み取られた文字数。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">要求された列に対して、入れ子になったデータ リーダーを返します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <returns vsli:raw="A data reader.">データ リーダー。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets name of the data type of the specified column.">指定された列のデータ型の名前を取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column type name from.">列の型名の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <returns vsli:raw="The name of the data type.">データ型の名前です。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">指定された列の値を <see cref="T:System.DateTime" /> オブジェクトとして取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">指定した列の値を <see cref="T:System.Decimal" /> として取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a double-precision floating point number.">指定した列の値を倍精度浮動小数点数として取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the data type of the specified column.">指定された列のデータ型を取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the field type from.">フィールドの型の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The data type of the specified column.">指定された列のデータ型。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">要求された型として指定した列の値を取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">返される値の型。</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">データの取得中、接続が切断されたか、閉じられました。  

- または - 
データの取得中、データ リーダーが閉じられました。  
  
- または -

読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.Common.DbDataReader.Read" /> は呼び出されなかったか、<see langword="false" /> を返しました)。  

- または -

リーダーでは、以前に読み取られた列のシーケンシャル モードでの読み取りが試行されました。  

- または -

非同期操作が進行中でした。 シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">データベースによって返された値が一致しないか、<typeparamref name="T" /> にキャストできません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">要求された型として指定された列の値を非同期で取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">非同期操作を取り消すオプションのトークン。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">返される値の型。</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">データの取得中、接続が切断されたか、閉じられました。  
  
- または -

データの取得中、データ リーダーが閉じられました。  

- または -

読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.Common.DbDataReader.Read" /> は呼び出されなかったか、<see langword="false" /> を返しました)。

- または -

以前に読み取られた列をシーケンシャル モードで読み取ろうとしました。  

- または -

非同期操作が進行中でした。 シーケンシャル モードで実行中、これはすべての Get_*_ メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">データベースによって返された値が一致しないか、<typeparamref name="T" /> にキャストできません。</exception>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">指定された列の値を <see cref="P:System.Threading.Tasks.Task`1.Result" /> に格納しているタスク。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">指定された列の値を単精度浮動小数点値として取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a globally unique identifier (GUID).">指定した列の値をグローバル一意識別子 (GUID) として取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">指定した列の値を 16 ビット符号付き整数として取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">指定された列の値を 32 ビット符号付き整数として取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">指定された列の値を 64 ビット符号付き整数として取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">指定された列のプロバイダー固有の型を取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <returns vsli:raw="A provider-specific .NET type.">プロバイダー固有の .NET 型。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">指定された列の値をプロバイダー固有の型のインスタンスとして取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">指定された列からデータを取得する目的でストリームを取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">データの取得中、接続が切断されたか、閉じられました。  
  
- または -

データの取得中、データ リーダーが閉じられます。  

- または -

読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.Common.DbDataReader.Read" /> は呼び出されなかったか、false を返しました)。  

- または -

データ リーダーでは、以前に読み取られた列のシーケンシャル モードでの読み取りが試行されました。  

- または -

非同期操作が進行中でした。 シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定の列は、<see cref="T:System.IO.Stream" /> で読み込めるバイナリ型ではありません。</exception>
      <returns vsli:raw="A stream.">ストリーム。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">指定された列の値を <see cref="T:System.String" /> のインスタンスとして取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定したキャストが有効ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">列からデータを取得する目的でテキスト リーダーを取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">データの取得中、接続が切断されたか、閉じられました。  
  
- または -

データの取得中、データ リーダーが閉じられます。  

- または -

読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.Common.DbDataReader.Read" /> は呼び出されなかったか、false を返しました)。  

- または -

データ リーダーでは、以前に読み取られた列のシーケンシャル モードでの読み取りが試行されました。  

- または -

非同期操作が進行中でした。 シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定の列は、<see cref="T:System.IO.TextReader" /> で読み込めるテキスト型ではありません。</exception>
      <returns vsli:raw="A text reader.">テキスト リーダー。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">指定された列の値を <see cref="T:System.Object" /> のインスタンスとして取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a value that indicates whether the column contains nonexistent or missing values.">存在しない値や欠落値が列に含まれているかどうかを示す値を取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した列が <see cref="T:System.DBNull" /> と等価の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">列に格納されている値が存在しない値または欠損値かどうかを示す値を非同期で取得します。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">列値の取得元となるデータ リーダー。</param>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">非同期操作を取り消すオプションのトークン。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">データの取得中、接続が切断されたか、閉じられました。  
  
- または -

データの取得中、データ リーダーが閉じられます。  

- または -

読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.Common.DbDataReader.Read" /> は呼び出されなかったか、false を返しました)。  

- または -

以前に読み取られた列をシーケンシャル モードで読み取ろうとしています。  

- または - 
非同期操作が進行中でした。 シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">指定された列値が <see langword="DBNull" /> に等しい場合は、<see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティが <see langword="true" /> になり、等しくない場合は <see langword="false" /> になる <see cref="T:System.Threading.Tasks.Task`1" />。</returns>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary vsli:raw="Represents a parent/child relationship between two &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">2 つの <see cref="T:System.Data.DataTable" /> オブジェクト間の親子のリレーションシップを表します。</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name, and parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRelation" /> 名、および親と子の <see cref="T:System.Data.DataRelation" /> オブジェクトを指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> の名前。 <see langword="null" /> または空の文字列 ("") の場合は、作成したオブジェクトを <see cref="T:System.Data.DataRelationCollection" /> に追加するときに既定の名前が使用されます。</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">このリレーションシップの親 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">このリレーションシップの子 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> オブジェクトの一方または両方が <see langword="null" /> を格納しています。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列のデータ型が異なります。 
-または- 
テーブルが同じ <see cref="T:System.Data.DataSet" /> に属していません。</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and a value that indicates whether to create constraints.">名前、親と子の <see cref="T:System.Data.DataRelation" /> オブジェクト、および制約を作成するかどうかを示す値を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">リレーションシップの名前。 <see langword="null" /> または空の文字列 ("") の場合は、作成したオブジェクトを <see cref="T:System.Data.DataRelationCollection" /> に追加するときに既定の名前が使用されます。</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">このリレーションシップの親 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">このリレーションシップの子 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether constraints are created. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">制約を作成するかどうかを示す値。 制約を作成する場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> オブジェクトの一方または両方が <see langword="null" /> を格納しています。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列のデータ型が異なります。 
-または- 
テーブルが同じ <see cref="T:System.Data.DataSet" /> に属していません。</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRelation" /> 名、および親と子で一致した <see cref="T:System.Data.DataRelation" /> オブジェクトの配列を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">リレーションシップの名前。 <see langword="null" /> または空の文字列 ("") の場合は、作成したオブジェクトを <see cref="T:System.Data.DataRelationCollection" /> に追加するときに既定の名前が使用されます。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">親 <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">子 <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> オブジェクトの一方または両方が <see langword="null" /> を格納しています。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or both of the arrays are not composed of distinct columns from the same table.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> オブジェクトのデータ型が異なります。 
-または- 
配列の一方または両方が、同じテーブルの異なる列で構成されていません。  
  
-または- 
テーブルが同じ <see cref="T:System.Data.DataSet" /> に属していません。</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether to create constraints.">名前、親と子で一致した <see cref="T:System.Data.DataRelation" /> オブジェクトの配列、および制約を作成するかどうかを示す値を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">リレーションシップの名前。 <see langword="null" /> または空の文字列 ("") の場合は、作成したオブジェクトを <see cref="T:System.Data.DataRelationCollection" /> に追加するときに既定の名前が使用されます。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">親 <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">子 <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether to create constraints. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">制約を作成するかどうかを示す値。 制約を作成する場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> オブジェクトの一方または両方が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列のデータ型が異なります。 
-または- 
テーブルが同じ <see cref="T:System.Data.DataSet" /> に属していません。</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">このコンストラクターは、Visual Studio 環境でのデザイン時のサポートのために用意されています。</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> の名前。 <see langword="null" /> または空の文字列 ("") の場合は、作成したオブジェクトを <see cref="T:System.Data.DataRelationCollection" /> に追加するときに既定の名前が使用されます。</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">このリレーションシップの親テーブルである <see cref="T:System.Data.DataTable" /> の名前。</param>
      <param name="parentTableNamespace" vsli:raw="The name of the parent table namespace.">親テーブルの名前空間の名前。</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">このリレーションシップの子テーブルである <see cref="T:System.Data.DataTable" /> の名前。</param>
      <param name="childTableNamespace" vsli:raw="The name of the child table namespace.">子テーブルの名前空間の名前。</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">このリレーションシップの親 <see cref="T:System.Data.DataColumn" /> 内の <see cref="T:System.Data.DataTable" /> オブジェクト名の配列。</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">このリレーションシップの子 <see cref="T:System.Data.DataColumn" /> 内の <see cref="T:System.Data.DataTable" /> オブジェクト名の配列。</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">リレーションシップを入れ子にするかどうかを示す値。</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">このコンストラクターは、Visual Studio 環境でのデザイン時のサポートのために用意されています。</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">リレーションシップの名前。 <see langword="null" /> または空の文字列 ("") の場合は、作成したオブジェクトを <see cref="T:System.Data.DataRelationCollection" /> に追加するときに既定の名前が使用されます。</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">このリレーションシップの親テーブルである <see cref="T:System.Data.DataTable" /> の名前。</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">このリレーションシップの子テーブルである <see cref="T:System.Data.DataTable" /> の名前。</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">このリレーションシップの親 <see cref="T:System.Data.DataColumn" /> 内の <see cref="T:System.Data.DataTable" /> オブジェクト名の配列。</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">このリレーションシップの子 <see cref="T:System.Data.DataColumn" /> 内の <see cref="T:System.Data.DataTable" /> オブジェクト名の配列。</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">リレーションシップを入れ子にするかどうかを示す値。</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary vsli:raw="This method supports .NET infrastructure and is not intended to be used directly from your code.">このメソッドは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <exception cref="T:System.Data.DataException" vsli:raw="The parent and child tables belong to different &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; objects.  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or more pairs of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have mismatched data types.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects are identical.">親テーブルと子テーブルが異なる <see cref="T:System.Data.DataSet" /> オブジェクトに属しています。  
  
-または- 
1 つ以上のペアの親と子の <see cref="T:System.Data.DataColumn" /> オブジェクトのデータ型が一致していません。  
  
-または- 
親と子の <see cref="T:System.Data.DataColumn" /> オブジェクトが同一です。</exception>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">パラメーターの参照。</param>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="name" vsli:raw="Parameter reference.">パラメーターの参照。</param>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt;, if one exists.">
        <see cref="P:System.Data.DataRelation.RelationName" /> が存在する場合は、このリレーションシップの名前を取得します。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; property.">
        <see cref="P:System.Data.DataRelation.RelationName" /> プロパティの値。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary vsli:raw="Gets the child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects of this relation.">このリレーションシップの子 <see cref="T:System.Data.DataColumn" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; for the relation.">このリレーションシップの <see cref="T:System.Data.ForeignKeyConstraint" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">
        <see langword="ForeignKeyConstraint" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary vsli:raw="Gets the child table of this relation.">このリレーションシップの子テーブルを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">このリレーションシップの子テーブルである <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">
        <see cref="T:System.Data.DataSet" /> が属する <see cref="T:System.Data.DataRelation" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">
        <see cref="T:System.Data.DataSet" /> が属する <see cref="T:System.Data.DataRelation" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary vsli:raw="Gets the collection that stores customized properties.">カスタマイズしたプロパティを格納するコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains customized properties.">カスタマイズしたプロパティを格納している <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested.">
        <see cref="T:System.Data.DataRelation" /> オブジェクトが入れ子になっているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> オブジェクトが入れ子になっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">この <see cref="T:System.Data.DataColumn" /> の親列である <see cref="T:System.Data.DataRelation" /> オブジェクトの配列を取得します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">この <see cref="T:System.Data.DataColumn" /> の親列である <see cref="T:System.Data.DataRelation" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that guarantees that values in the parent column of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; are unique.">
        <see cref="T:System.Data.UniqueConstraint" /> の親列内の値が一意であることを保証する <see cref="T:System.Data.DataRelation" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that makes sure that values in a parent column are unique.">親列内の値が一意になるようにする <see cref="T:System.Data.UniqueConstraint" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">この <see cref="T:System.Data.DataTable" /> の親 <see cref="T:System.Data.DataRelation" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of this relation.">このリレーションシップの親テーブルである <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary vsli:raw="Gets or sets the name used to retrieve a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> から <see cref="T:System.Data.DataRelationCollection" /> を取得する名前を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) was passed into a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see langword="null" /> または空の文字列 ("") が、<see cref="T:System.Data.DataColumn" /> である <see cref="T:System.Data.DataRelation" /> に渡されました。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs to a collection that already contains a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the same name.">
        <see cref="T:System.Data.DataRelation" /> は、同じ名前の <see cref="T:System.Data.DataRelation" /> が既に含まれるコレクションに属しています。</exception>
      <returns vsli:raw="The name of the a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> の名前。</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary vsli:raw="Represents the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">この <see cref="T:System.Data.DataRelation" /> の <see cref="T:System.Data.DataSet" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the collection has changed.">コレクションが変更されたときに発生します。</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; class.">
        <see cref="T:System.Data.DataRelationCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with a specified parent and child column, and adds it to the collection.">指定した親列と子列を使用して <see cref="T:System.Data.DataRelation" /> を作成し、コレクションに追加します。</summary>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">リレーションシップの親列。</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">リレーションシップの子列。</param>
      <returns vsli:raw="The created relation.">作成されたリレーションシップ。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified parent and child columns, and adds it to the collection.">指定した親列と子列を使用して <see cref="T:System.Data.DataRelation" /> を作成し、コレクションに追加します。</summary>
      <param name="parentColumns" vsli:raw="The parent columns of the relation.">リレーションシップの親列。</param>
      <param name="childColumns" vsli:raw="The child columns of the relation.">リレーションシップの子列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; argument is a null value.">
        <paramref name="relation" /> 引数が null 値です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">リレーションシップは、既にこのコレクションに属しているか、他のコレクションに属しています。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">コレクションには、既に同じ名前のリレーションシップが含まれています。 比較では、大文字と小文字が区別されません。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">リレーションシップの作成後に、そのリレーションシップが無効な状態になりました。</exception>
      <returns vsli:raw="The created relation.">作成されたリレーションシップ。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> を <see cref="T:System.Data.DataRelationCollection" /> に追加します。</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; to add to the collection.">コレクションに追加する <see langword="DataRelation" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; parameter is a null value.">
        <paramref name="relation" /> パラメーターが null 値です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">リレーションシップは、既にこのコレクションに属しているか、他のコレクションに属しています。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the specified name. (The comparison is not case sensitive.)">このコレクションには指定した名前のリレーションシップが既に含まれています。 比較では、大文字と小文字が区別されません。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">リレーションシップの作成後に、そのリレーションシップが無効な状態になりました。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, and parent and child columns, and adds it to the collection.">指定した名前、および親列と子列を使用して <see cref="T:System.Data.DataRelation" /> を作成し、コレクションに追加します。</summary>
      <param name="name" vsli:raw="The name of the relation.">リレーションシップの名前。</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">リレーションシップの親列。</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">リレーションシップの子列。</param>
      <returns vsli:raw="The created relation.">作成されたリレーションシップ。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, parent and child columns, with optional constraints according to the value of the &lt;paramref name=&quot;createConstraints&quot; /&gt; parameter, and adds it to the collection.">指定した名前、親列と子列、および <paramref name="createConstraints" /> パラメーターの値に応じた制約 (オプション) を使用して <see cref="T:System.Data.DataRelation" /> を作成し、コレクションに追加します。</summary>
      <param name="name" vsli:raw="The name of the relation.">リレーションシップの名前。</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">リレーションシップの親列。</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">リレーションシップの子列。</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create constraints; otherwise &lt;see langword=&quot;false&quot; /&gt;. (The default is &lt;see langword=&quot;true&quot; /&gt;).">制約を作成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</param>
      <returns vsli:raw="The created relation.">作成されたリレーションシップ。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name and arrays of parent and child columns, and adds it to the collection.">指定した名前および親列と子列の配列を使用して <see cref="T:System.Data.DataRelation" /> を作成し、このリレーションシップをコレクションに追加します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">作成する <see langword="DataRelation" /> の名前。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">親 <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">子 <see langword="DataColumn" /> オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">リレーションシップ名が null 値です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">リレーションシップは、既にこのコレクションに属しているか、他のコレクションに属しています。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">コレクションには、既に同じ名前のリレーションシップが含まれています。 比較では、大文字と小文字が区別されません。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">リレーションシップの作成後に、そのリレーションシップが無効な状態になりました。</exception>
      <returns vsli:raw="The created &lt;see langword=&quot;DataRelation&quot; /&gt;.">作成された <see langword="DataRelation" />。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.">指定した名前、親列と子列の配列、および制約を作成するかどうかを示す値を使用して <see cref="T:System.Data.DataRelation" /> を作成し、このリレーションシップをコレクションに追加します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">作成する <see langword="DataRelation" /> の名前。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">親 <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">子 <see langword="DataColumn" /> オブジェクトの配列。</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a constraint; otherwise &lt;see langword=&quot;false&quot; /&gt;.">制約を作成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">リレーションシップ名が null 値です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">リレーションシップは、既にこのコレクションに属しているか、他のコレクションに属しています。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">コレクションには、既に同じ名前のリレーションシップが含まれています。 比較では、大文字と小文字が区別されません。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">リレーションシップの作成後に、そのリレーションシップが無効な状態になりました。</exception>
      <returns vsli:raw="The created relation.">作成されたリレーションシップ。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs verification on the table.">テーブルに対して検証を実行します。</summary>
      <param name="relation" vsli:raw="The relation to check.">確認するリレーションシップ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is null.">リレーションシップが null です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">リレーションシップは、既にこのコレクションに属しているか、他のコレクションに属しています。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">コレクションには、既に同じ名前のリレーションシップが含まれています。 比較では、大文字と小文字が区別されません。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; array to the end of the collection.">指定した <see cref="T:System.Data.DataRelation" /> 配列の要素をコレクションの末尾にコピーします。</summary>
      <param name="relations" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to add to the collection.">コレクションに追加する <see cref="T:System.Data.DataRelation" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed from the collection.">指定した <see cref="T:System.Data.DataRelation" /> をコレクションから削除できるかどうかを検証します。</summary>
      <param name="relation" vsli:raw="The relation to perform the check against.">検証対象のリレーションシップ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> を削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary vsli:raw="Clears the collection of any relations.">リレーションシップのコレクションを消去します。</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary vsli:raw="Verifies whether a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specific name (case insensitive) exists in the collection.">特定の名前 (大文字と小文字を区別しない) の <see cref="T:System.Data.DataRelation" /> がコレクション内に存在するかどうかを検証します。</summary>
      <param name="name" vsli:raw="The name of the relation to find.">検索対象のリレーションシップの名前。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a relation with the specified name exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定した名前のリレーションシップが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary vsli:raw="Copies the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects starting at the specified index.">指定したインデックスを開始位置として、<see cref="T:System.Data.DataRelation" /> オブジェクトのコレクションをコピーします。</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to copy the collection to.">コレクションのコピー先の <see cref="T:System.Data.DataRelation" /> オブジェクトの配列。</param>
      <param name="index" vsli:raw="The index to start from.">コピーの開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary vsli:raw="This method supports the .NET infrastructure and is not intended to be used directly from your code.">このメソッドは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="The referenced DataSet.">参照されたデータセット。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">指定した <see cref="T:System.Data.DataRelation" /> オブジェクトのインデックスを取得します。</summary>
      <param name="relation" vsli:raw="The relation to search for.">検索するリレーションシップ。</param>
      <returns vsli:raw="The 0-based index of the relation, or -1 if the relation is not found in the collection.">このリレーションシップの 0 から始まるインデックス番号。リレーションシップがコレクション内に存在しない場合は -1。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; specified by name.">名前で指定した <see cref="T:System.Data.DataRelation" /> のインデックスを取得します。</summary>
      <param name="relationName" vsli:raw="The name of the relation to find.">検索対象のリレーションシップの名前。</param>
      <returns vsli:raw="The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.">指定した名前のリレーションシップの 0 から始まるインデックス番号。このリレーションシップがコレクション内に存在しない場合は -1。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">
        <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> イベントを発生させます。</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">
        <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> イベントを発生させます。</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary vsli:raw="Removes the specified relation from the collection.">指定したリレーションシップをコレクションから削除します。</summary>
      <param name="relation" vsli:raw="The relation to remove.">削除するリレーションシップ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is a null value.">リレーションシップが null 値です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the collection.">このリレーションシップはこのコレクションに属していません。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary vsli:raw="Removes the relation with the specified name from the collection.">指定した名前のリレーションシップをコレクションから削除します。</summary>
      <param name="name" vsli:raw="The name of the relation to remove.">削除するリレーションシップの名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a relation with the specified name.">このコレクションには指定した名前のリレーションシップがありません。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the relation at the specified index from the collection.">指定したインデックス位置にあるリレーションシップをコレクションから削除します。</summary>
      <param name="index" vsli:raw="The index of the relation to remove.">削除するリレーションシップのインデックス。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a relation at the specified index.">このコレクションには指定したインデックス位置にリレーションシップがありません。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs a verification on the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">指定した <see cref="T:System.Data.DataRelation" /> オブジェクトに対して検証を実行します。</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; object to verify.">検証する <see langword="DataRelation" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The collection does not have a relation at the specified index.">このコレクションには指定したインデックス位置にリレーションシップがありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified relation does not belong to this collection, or it belongs to another collection.">指定したリレーションシップがこのコレクションに属していないか、他のコレクションに属しています。</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object at the specified index.">指定したインデックス位置にある <see cref="T:System.Data.DataRelation" /> オブジェクトを取得します。</summary>
      <param name="index" vsli:raw="The zero-based index to find.">検索する 0 から始まるインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">インデックス値が、コレクション内の項目数を超える値です。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataRelation" />。指定した <see cref="T:System.Data.DataRelation" /> が存在しない場合は null 値。</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object specified by name.">名前で指定した <see cref="T:System.Data.DataRelation" /> オブジェクトを取得します。</summary>
      <param name="name" vsli:raw="The name of the relation to find.">検索対象のリレーションシップの名前。</param>
      <returns vsli:raw="The named &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">指定した <see cref="T:System.Data.DataRelation" />。指定した <see cref="T:System.Data.DataRelation" /> が存在しない場合は null 値。</returns>
    </member>
    <member name="T:System.Data.DataRow">
      <summary vsli:raw="Represents a row of data in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 内のデータ行を表します。</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary vsli:raw="Initializes a new instance of the DataRow class using the specified builder. Only for internal usage.">DataRow の新しいインスタンスを初期化します。 ビルダーから行を構築します。 内部でのみ使用されます。</summary>
      <param name="builder" vsli:raw="The builder that contains the table and record for the new row.">ビルダー</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this row since the last time &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was called.">前回 <see cref="M:System.Data.DataRow.AcceptChanges" /> を呼び出した以降にこの行に対して行われたすべての変更をコミットします。</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary vsli:raw="Starts an edit operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの編集操作を開始します。</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowChanging" /> イベント内でメソッドが呼び出されました。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The method was called upon a deleted row.">このメソッドは削除した行に対して呼び出されました。</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary vsli:raw="Cancels the current edit on the row.">この行の現在の編集をキャンセルします。</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowChanging" /> イベント内でメソッドが呼び出されました。</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary vsli:raw="Clears the errors for the row. This includes the &lt;see cref=&quot;P:System.Data.DataRow.RowError&quot; /&gt; and errors set with &lt;see cref=&quot;M:System.Data.DataRow.SetColumnError(System.Int32,System.String)&quot; /&gt;.">行のエラーを消去します。 これには <see cref="P:System.Data.DataRow.RowError" /> と、<see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> に設定されているエラーが含まれます。</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> を削除します。</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has already been deleted.">
        <see cref="T:System.Data.DataRow" /> が既に削除されています。</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary vsli:raw="Ends the edit occurring on the row.">この行で行われている編集を終了します。</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowChanging" /> イベント内でメソッドが呼び出されました。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The edit broke a constraint.">編集が制約に違反しています。</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="The row belongs to the table and the edit tried to change the value of a read-only column.">この行がこのテーブルに属し、編集によって読み取り専用の列の値を変更しようとしています。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The edit tried to put a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">編集によって、<see cref="P:System.Data.DataColumn.AllowDBNull" /> が false である列に null 値を挿入しようとしています。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the child rows of this &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">指定した <see cref="T:System.Data.DataRow" /> を使用して、この <see cref="T:System.Data.DataRelation" /> の子行を取得します。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">使用する <see cref="T:System.Data.DataRelation" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">リレーションシップと行が同じテーブルに属していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is &lt;see langword=&quot;null&quot; /&gt;.">リレーションシップが <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">このバージョンのデータが行にありません。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列、または長さ 0 の配列。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">指定した <see cref="T:System.Data.DataRow" /> と <see cref="T:System.Data.DataRelation" /> を使用して、<see cref="T:System.Data.DataRowVersion" /> の子行を取得します。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">使用する <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">取得するデータのバージョンを指定する <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">リレーションシップと行が同じテーブルに属していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">要求された <see cref="T:System.Data.DataRowVersion" /> が行にありません。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> の指定した <see cref="P:System.Data.DataRelation.RelationName" /> を使用して、<see cref="T:System.Data.DataRelation" /> の子行を取得します。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">使用する <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">リレーションシップと行が同じテーブルに属していません。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列、または長さ 0 の配列。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> の指定した <see cref="P:System.Data.DataRelation.RelationName" /> と <see cref="T:System.Data.DataRelation" /> を使用して、<see cref="T:System.Data.DataRowVersion" /> の子行を取得します。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">使用する <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">取得するデータのバージョンを指定する <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">リレーションシップと行が同じテーブルに属していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">要求された <see cref="T:System.Data.DataRowVersion" /> が行にありません。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列、または長さ 0 の配列。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary vsli:raw="Gets the error description of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">指定した <see cref="T:System.Data.DataColumn" /> のエラーの説明を取得します。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />。</param>
      <returns vsli:raw="The text of the error description.">エラーの説明のテキスト。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary vsli:raw="Gets the error description for the column specified by index.">インデックスで指定した列のエラーの説明を取得します。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">列の 0 から始まるインデックス番号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">引数 <paramref name="columnIndex" /> が範囲外です。</exception>
      <returns vsli:raw="The text of the error description.">エラーの説明のテキスト。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary vsli:raw="Gets the error description for a column, specified by name.">名前で指定した列のエラーの説明を取得します。</summary>
      <param name="columnName" vsli:raw="The name of the column.">列の名前。</param>
      <returns vsli:raw="The text of the error description.">エラーの説明のテキスト。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary vsli:raw="Gets an array of columns that have errors.">エラーが含まれる列の配列を取得します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that contain errors.">エラーが含まれる <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">指定した <see cref="T:System.Data.DataRow" /> を使用して、<see cref="T:System.Data.DataRelation" /> の親行を取得します。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">使用する <see cref="T:System.Data.DataRelation" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The row is &lt;see langword=&quot;null&quot; /&gt;.">この <paramref name="relation" /> は <see cref="T:System.Data.DataTable" /> に属していません。  
  
- または -

行が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">子の行に複数の親が含まれます。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="This row does not belong to the child table of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">この行は <see cref="T:System.Data.DataRelation" /> オブジェクトの子テーブルに属していません。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">この行はテーブルに属していません。</exception>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">現在の行の親 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">指定した <see cref="T:System.Data.DataRow" /> と <see cref="T:System.Data.DataRelation" /> を使用して、<see cref="T:System.Data.DataRowVersion" /> の親行を取得します。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">使用する <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">取得するデータのバージョンを指定する <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to this table's parent relations.">行が <see langword="null" /> です。  
  
- または -

<paramref name="relation" /> は、このテーブルの親リレーションシップに属していません。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">子の行に複数の親が含まれます。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">このリレーションシップの子テーブルは、この行が属しているテーブルではありません。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">この行はテーブルに属していません。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">このバージョンのデータが行にありません。</exception>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">現在の行の親 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> の指定した <see cref="P:System.Data.DataRelation.RelationName" /> を使用して、<see cref="T:System.Data.DataRelation" /> の親行を取得します。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">リレーションシップと行が同じテーブルに属していません。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">子の行に複数の親が含まれます。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">現在の行の親 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> の指定した <see cref="P:System.Data.DataRelation.RelationName" /> と <see cref="T:System.Data.DataRelation" /> を使用して、<see cref="T:System.Data.DataRowVersion" /> の親行を取得します。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowVersion" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">リレーションシップと行が同じテーブルに属していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">子の行に複数の親が含まれます。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">要求された <see cref="T:System.Data.DataRowVersion" /> が行にありません。</exception>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">現在の行の親 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">指定した <see cref="T:System.Data.DataRow" /> を使用して、<see cref="T:System.Data.DataRelation" /> の親行を取得します。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">使用する <see cref="T:System.Data.DataRelation" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> は、この行の <see cref="T:System.Data.DataSet" /> に属していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">行が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">このリレーションシップの子テーブルは、この行が属しているテーブルではありません。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">この行は <see cref="T:System.Data.DataTable" /> に属していません。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列、または長さ 0 の配列。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">指定した <see cref="T:System.Data.DataRow" /> と <see cref="T:System.Data.DataRelation" /> を使用して、<see cref="T:System.Data.DataRowVersion" /> の親行を取得します。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">使用する <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">取得するデータのバージョンを指定する <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> は、この行の <see cref="T:System.Data.DataSet" /> に属していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">行が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">このリレーションシップの子テーブルは、この行が属しているテーブルではありません。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">この行は <see cref="T:System.Data.DataTable" /> に属していません。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">要求された <see cref="T:System.Data.DataRowVersion" /> が行にありません。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列、または長さ 0 の配列。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> の指定した <see cref="P:System.Data.DataRelation.RelationName" /> を使用して、<see cref="T:System.Data.DataRelation" /> の親行を取得します。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">リレーションシップと行が同じテーブルに属していません。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列、または長さ 0 の配列。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> の指定した <see cref="P:System.Data.DataRelation.RelationName" /> と <see cref="T:System.Data.DataRelation" /> を使用して、<see cref="T:System.Data.DataRowVersion" /> の親行を取得します。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">取得するデータのバージョンを指定する <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">リレーションシップと行が同じテーブルに属していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">要求された <see cref="T:System.Data.DataRowVersion" /> が行にありません。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列、または長さ 0 の配列。</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether a specified version exists.">指定したバージョンが存在するかどうかを示す値を取得します。</summary>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version.">行のバージョンを指定する <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the version exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したバージョンが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a null value.">指定した <see cref="T:System.Data.DataColumn" /> に null 値が格納されているかどうかを示す値を取得します。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">列が null 値を格納している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; contains a null value.">指定した <see cref="T:System.Data.DataColumn" /> と <see cref="T:System.Data.DataRowVersion" /> に null 値が格納されているかどうかを示す値を取得します。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">行のバージョンを指定する <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;paramref name=&quot;version&quot; /&gt;.">要求された <paramref name="version" /> が行にありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">列が null 値を格納している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column at the specified index contains a null value.">指定したインデックス位置にある列に null 値が格納されているかどうかを示す値を取得します。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">列の 0 から始まるインデックス番号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to the index specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">
        <paramref name="columnIndex" /> で指定されたインデックスに対応する列がありません。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">列が null 値を格納している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary vsli:raw="Gets a value that indicates whether the named column contains a null value.">指定した列に null 値が格納されているかどうかを示す値を取得します。</summary>
      <param name="columnName" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">
        <paramref name="columnName" /> で指定した列が見つかりません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;columnName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="columnName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">列が null 値を格納している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary vsli:raw="Rejects all changes made to the row since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">前回 <see cref="M:System.Data.DataRow.AcceptChanges" /> を呼び出した以降にこの行に対して行われたすべての変更を拒否します。</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">行がこのテーブルに属していません。</exception>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Added&quot; /&gt;.">
        <see cref="P:System.Data.DataRow.RowState" /> の <see cref="T:System.Data.DataRow" /> を <see langword="Added" /> に変更します。</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary vsli:raw="Sets the error description for a column specified as a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> として指定した列のエラーの説明を設定します。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to set the error description for.">エラーの説明を設定する対象となる <see cref="T:System.Data.DataColumn" />。</param>
      <param name="error" vsli:raw="The error description.">エラーの説明。</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by index.">インデックスで指定した列のエラーの説明を設定します。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">列の 0 から始まるインデックス番号。</param>
      <param name="error" vsli:raw="The error description.">エラーの説明。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range">引数 <paramref name="columnIndex" /> が範囲外です。</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by name.">名前で指定した列のエラーの説明を設定します。</summary>
      <param name="columnName" vsli:raw="The name of the column.">列の名前。</param>
      <param name="error" vsli:raw="The error description.">エラーの説明。</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Modified&quot; /&gt;.">
        <see cref="P:System.Data.DataRow.RowState" /> の <see cref="T:System.Data.DataRow" /> を <see langword="Modified" /> に変更します。</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary vsli:raw="Sets the value of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to a null value.">指定した <see cref="T:System.Data.DataColumn" /> の値を null 値に設定します。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />。</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">指定した新しい親 <see cref="T:System.Data.DataRow" /> を使用して、<see cref="T:System.Data.DataRow" /> の親行を設定します。</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">新しい親 <see cref="T:System.Data.DataRow" />。</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">指定した新しい親 <see cref="T:System.Data.DataRow" /> と <see cref="T:System.Data.DataRow" /> を使用して、<see cref="T:System.Data.DataRelation" /> の親行を設定します。</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">新しい親 <see cref="T:System.Data.DataRow" />。</param>
      <param name="relation" vsli:raw="The relation &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">使用するリレーションシップ <see cref="T:System.Data.DataRelation" />。</param>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="One of the rows does not belong to a table">行の 1 つがテーブルに属していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One of the rows is &lt;see langword=&quot;null&quot; /&gt;.">行の 1 つが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object.">リレーションシップが <see cref="T:System.Data.DataRelationCollection" /> オブジェクトの <see cref="T:System.Data.DataSet" /> に属していません。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is not the table this row belongs to.">このリレーションシップの子 <see cref="T:System.Data.DataTable" /> は、この行が属しているテーブルではありません。</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary vsli:raw="Gets a value that indicates whether there are errors in a row.">行にエラーがあるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">行にエラーがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary vsli:raw="Gets or sets the data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">指定した <see cref="T:System.Data.DataColumn" /> に格納されているデータを取得または設定します。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains the data.">データが格納されている <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this table.">この列はこのテーブルに属していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">
        <paramref name="column" /> が null です。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">削除した行に値を設定しようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">列と値のデータ型が一致しません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">データを格納している <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">指定した <see cref="T:System.Data.DataColumn" /> に格納されているデータの指定したバージョンを取得します。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains information about the column.">列に関する情報を格納する <see cref="T:System.Data.DataColumn" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">行のバージョンを指定する <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to the table.">行がこのテーブルに属していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; argument contains null.">引数 <paramref name="column" /> が null です。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">このバージョンのデータが行にありません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">データを格納している <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by index.">インデックスで指定した列に格納されているデータを取得または設定します。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">列の 0 から始まるインデックス番号。</param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">削除した行に値を設定しようとしたときに発生します。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">引数 <paramref name="columnIndex" /> が範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set the value and the new value's &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">値を設定したときに、新しい値の <see cref="T:System.Type" /> の設定が <see cref="P:System.Data.DataColumn.DataType" /> と一致しない場合に発生します。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">データを格納している <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the data stored in the column, specified by index and version of the data to retrieve.">列に格納されている、取得するデータのインデックスとバージョンで指定したデータを取得します。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">列の 0 から始まるインデックス番号。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">行のバージョンを指定する <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">引数 <paramref name="columnIndex" /> が範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">列と値のデータ型が一致しません。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">このバージョンのデータが行にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">削除した行に値を設定しようとしました。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">データを格納している <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by name.">名前で指定した列に格納されているデータを取得または設定します。</summary>
      <param name="columnName" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">
        <paramref name="columnName" /> で指定した列が見つかりません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">削除した行に値を設定しようとしたときに発生します。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set a value and its &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">値を設定したときに、その値の <see cref="T:System.Type" /> の設定が <see cref="P:System.Data.DataColumn.DataType" /> と一致していない場合に発生します。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Occurs when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.AllowDBNull" /> が <see langword="false" /> に設定されている列に Null 値を挿入したときに発生します。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">データを格納している <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the named column.">指定した列に格納されているデータの指定したバージョンを取得します。</summary>
      <param name="columnName" vsli:raw="The name of the column.">列の名前。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">行のバージョンを指定する <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">
        <paramref name="columnName" /> で指定した列が見つかりません。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">列と値のデータ型が一致しません。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">このバージョンのデータが行にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row was deleted.">この行は削除されました。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">データを格納している <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary vsli:raw="Gets or sets all the values for this row through an array.">配列を使用してこの行のすべての値を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">配列がテーブルの列数より大きいです。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value in the array does not match its &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; in its respective &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">配列内の値が、各値の <see cref="P:System.Data.DataColumn.DataType" /> 内の <see cref="T:System.Data.DataColumn" /> と一致していません。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="An edit broke a constraint.">編集が制約に違反しています。</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="An edit tried to change the value of a read-only column.">編集によって読み取り専用の列の値を変更しようとしています。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="An edit tried to put a null value in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object is &lt;see langword=&quot;false&quot; /&gt;.">編集によって、<see cref="P:System.Data.DataColumn.AllowDBNull" /> オブジェクトの <see cref="T:System.Data.DataColumn" /> が <see langword="false" /> である列に null 値を入力しようとしています。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row has been deleted.">行が削除されました。</exception>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">
        <see cref="T:System.Object" /> 型の配列。</returns>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary vsli:raw="Gets or sets the custom error description for a row.">行のカスタム エラー説明を取得または設定します。</summary>
      <returns vsli:raw="The text describing an error.">エラーを説明するテキスト。</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary vsli:raw="Gets the current state of the row with regard to its relationship to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRowCollection" /> とのリレーションシップに関する、行の現在の状態を取得します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowState" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for which this row has a schema.">この行のスキーマが関連する <see cref="T:System.Data.DataTable" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which this row belongs.">この行が属する <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary vsli:raw="Describes an action performed on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> で実行されたアクションを記述します。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary vsli:raw="The row has been added to the table.">この行はこのテーブルに追加されています。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary vsli:raw="The row has changed.">この行は変更されています。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary vsli:raw="The original and the current versions of the row have been changed.">行の元のバージョンおよび現在のバージョンが変更されました。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary vsli:raw="The original version of the row has been changed.">行の元のバージョンが変更されました。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary vsli:raw="The changes to the row have been committed.">この行に対する変更がコミットされています。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary vsli:raw="The row was deleted from the table.">この行はテーブルから削除されました。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary vsli:raw="The row has not changed.">この行は変更されていません。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary vsli:raw="The most recent change to the row has been rolled back.">この行に対する最新の変更がロールバックされました。</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary vsli:raw="The &lt;see langword=&quot;DataRowBuilder&quot; /&gt; type supports the .NET infrastructure and is not intended to be used directly from your code.">
        <see langword="DataRowBuilder" /> 型は .NET Framework インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)&quot; /&gt; events.">
        <see cref="E:System.Data.DataTable.RowChanged" />、<see cref="E:System.Data.DataTable.RowChanging" />、<see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />、<see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> の各イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action is occurring.">アクションを実行する <see cref="T:System.Data.DataRow" />。</param>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary vsli:raw="Gets the action that has occurred on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> で実行されたアクションを取得します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowAction" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary vsli:raw="Gets the row upon which an action has occurred.">アクションが実行された行を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action has occurred.">アクションが実行された <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt;, and &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; events of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="E:System.Data.DataTable.RowChanging" /> の <see cref="E:System.Data.DataTable.RowChanged" />、<see cref="E:System.Data.DataTable.RowDeleting" />、<see cref="E:System.Data.DataTable.RowDeleted" />、<see cref="T:System.Data.DataTable" /> の各イベントを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataRowChangeEventArgs" />。</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary vsli:raw="Represents a collection of rows for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の行のコレクションを表します。</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; object.">指定した <see cref="T:System.Data.DataRow" /> を <see cref="T:System.Data.DataRowCollection" /> オブジェクトに追加します。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">追加する <see cref="T:System.Data.DataRow" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is null.">行が null です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The row either belongs to another table or already belongs to this table.">この行は他のテーブルに属しているか、既にこのテーブルに属しています。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The addition invalidates a constraint.">この行を追加すると、制約が無効になります。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The addition tries to put a null in a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">この行を追加すると、<see cref="T:System.Data.DataColumn" /> が false である <see cref="P:System.Data.DataColumn.AllowDBNull" /> に null を格納することになります。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary vsli:raw="Creates a row using specified values and adds it to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">指定した値を使用して行を作成し、この行を <see cref="T:System.Data.DataRowCollection" /> に追加します。</summary>
      <param name="values" vsli:raw="The array of values that are used to create the new row.">新しい行の作成に使用する値の配列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">配列がテーブルの列数より大きいです。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value does not match its respective column type.">値が各列の型と一致していません。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">この行を追加すると、制約が無効になります。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Trying to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">
        <see cref="P:System.Data.DataColumn.AllowDBNull" /> が false である列に null を格納しようとしました。</exception>
      <returns vsli:raw="The new row.">[なし] :</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary vsli:raw="Clears the collection of all rows.">すべての行のコレクションを消去します。</summary>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="A &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced on the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> が <see cref="T:System.Data.DataRowCollection" /> に対して強制的に適用されます。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether the primary key of any row in the collection contains the specified value.">このコレクション内のいずれかの行の主キーに指定した値が格納されているかどうかを示す値を取得します。</summary>
      <param name="key" vsli:raw="The value of the primary key to test for.">確認する主キーの値。</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">このテーブルには主キーがありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified primary key value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した主キー値が格納されている <see cref="T:System.Data.DataRow" /> がコレクション内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary vsli:raw="Gets a value that indicates whether the primary key columns of any row in the collection contain the values specified in the object array.">このコレクション内のいずれかの行の主キー列に、オブジェクト配列内で指定した値が格納されているかどうかを示す値を取得します。</summary>
      <param name="keys" vsli:raw="An array of primary key values to test for.">確認する主キー値の配列。</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">このテーブルには主キーがありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified key values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したキー値が格納されている <see cref="T:System.Data.DataRowCollection" /> が <see cref="T:System.Data.DataRow" /> 内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">このコレクション内のすべての <see cref="T:System.Data.DataRow" /> オブジェクトを、指定したコピー先配列インデックスから始まる指定した配列にコピーします。</summary>
      <param name="ar" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">
        <see langword="DataRowCollection" /> から要素がコピーされる 1 次元配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">配列内のコピーを開始する位置を示す、0 から始まるインデックスです。</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">このコレクション内のすべての <see cref="T:System.Data.DataRow" /> オブジェクトを、指定したコピー先配列インデックスから始まる指定した配列にコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">
        <see langword="DataRowCollection" /> から要素がコピーされる 1 次元配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">配列内のコピーを開始する位置を示す、0 から始まるインデックスです。</param>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary vsli:raw="Gets the row specified by the primary key value.">主キー値で指定した行を取得します。</summary>
      <param name="key" vsli:raw="The primary key value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to find.">検索する <see cref="T:System.Data.DataRow" /> の主キー値。</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">このテーブルには主キーがありません。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that contains the primary key value specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">指定した主キー値が格納されている <see cref="T:System.Data.DataRow" />。指定した主キー値が <see cref="T:System.Data.DataRowCollection" /> 内に存在しない場合は null 値。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary vsli:raw="Gets the row that contains the specified primary key values.">指定した主キー値が格納されている行を取得します。</summary>
      <param name="keys" vsli:raw="An array of primary key values to find. The type of the array is &lt;see langword=&quot;Object&quot; /&gt;.">検索する主キー値の配列。 配列の型は <see langword="Object" /> です。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No row corresponds to that index value.">インデックス値に対応する行がありません。</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">このテーブルには主キーがありません。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object that contains the primary key values specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">指定した主キー値が格納されている <see cref="T:System.Data.DataRow" /> オブジェクト。指定した主キー値が <see cref="T:System.Data.DataRowCollection" /> 内に存在しない場合は null 値。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">このコレクションの <see cref="T:System.Collections.IEnumerator" /> を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">このコレクションの <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">指定した <see cref="T:System.Data.DataRow" /> オブジェクトのインデックスを取得します。</summary>
      <param name="row" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; to search for.">検索対象の <see langword="DataRow" />。</param>
      <returns vsli:raw="The zero-based index of the row, or -1 if the row is not found in the collection.">行の 0 から始まるインデックス番号。コレクション内でその行が見つからなかった場合は -1。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Inserts a new row into the collection at the specified location.">コレクション内の指定した位置に新しい行を挿入します。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">追加する <see cref="T:System.Data.DataRow" />。</param>
      <param name="pos" vsli:raw="The (zero-based) location in the collection where you want to add the &lt;see langword=&quot;DataRow&quot; /&gt;.">
        <see langword="DataRow" /> を追加するコレクション内の (0 から始まる) 位置。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;pos&quot; /&gt; is less than 0.">
        <paramref name="pos" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the collection.">指定された <see cref="T:System.Data.DataRow" /> をコレクションから削除します。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to remove.">削除する <see cref="T:System.Data.DataRow" />。</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the row at the specified index from the collection.">指定したインデックス位置にある行をコレクションから削除します。</summary>
      <param name="index" vsli:raw="The index of the row to remove.">削除する行のインデックス。</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary vsli:raw="Gets the total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">このコレクション内の <see cref="T:System.Data.DataRow" /> オブジェクトの合計数を取得します。</summary>
      <returns vsli:raw="The total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">このコレクション内の <see cref="T:System.Data.DataRow" /> オブジェクトの合計数。</returns>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the row at the specified index.">指定したインデックス位置にある行を取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the row to return.">返す行の 0 から始まるインデックス番号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">インデックス値が、コレクション内の項目数を超える値です。</exception>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">指定された <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary vsli:raw="Returns a singleton instance of the &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt; class.">
        <see cref="T:System.Data.DataRowComparer`1" /> クラスのシングルトン インスタンスを返します。</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">
        <see cref="T:System.Data.DataRowComparer`1" /> のシングルトン インスタンスを取得します。 このプロパティは読み取り専用です。</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">
        <see cref="T:System.Data.DataRowComparer`1" /> のインスタンス。</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects for equivalence by using value-based comparison.">2 つの <see cref="T:System.Data.DataRow" /> オブジェクトが等しいかどうかを値に基づいて比較します。</summary>
      <typeparam name="TRow" vsli:raw="The type of objects to be compared, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">比較するオブジェクトの型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects by using a column-by-column, value-based comparison.">2 つの <see cref="T:System.Data.DataRow" /> オブジェクトを、列単位で値に基づいて比較します。</summary>
      <param name="leftRow" vsli:raw="The first &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">比較する最初の <see cref="T:System.Data.DataRow" /> オブジェクト。</param>
      <param name="rightRow" vsli:raw="The second &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">比較する 2 番目の <see cref="T:System.Data.DataRow" /> オブジェクトです。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects are &lt;see langword=&quot;null&quot; /&gt;.">比較する 2 つの <see cref="T:System.Data.DataRow" /> オブジェクトのどちらか一方または両方が <see langword="null" /> です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects have ordered sets of column values that are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの <see cref="T:System.Data.DataRow" /> オブジェクトの順序付けされたセットの列値が等しい場合は <see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary vsli:raw="Returns a hash code for the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">指定した <see cref="T:System.Data.DataRow" /> オブジェクトのハッシュ コードを返します。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to compute the hash code from.">ハッシュ コードの計算対象となる <see cref="T:System.Data.DataRow" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">計算対象の <see cref="T:System.Data.DataRow" /> オブジェクトが <see cref="T:System.Data.DataTable" /> に属していません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">計算対象の <see cref="T:System.Data.DataRow" /> オブジェクトが <see langword="null" /> です。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the hash code of the row.">行のハッシュ コードを表す <see cref="T:System.Int32" /> 値。</returns>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">
        <see cref="T:System.Data.DataRowComparer`1" /> のシングルトン インスタンスを取得します。 このプロパティは読み取り専用です。</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">
        <see cref="T:System.Data.DataRowComparer`1" /> のインスタンス。</returns>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; class. This is a static class.">
        <see cref="T:System.Data.DataRow" /> クラスの拡張メソッドを定義します。 これは静的クラスです。</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)&quot; /&gt; method also supports nullable types.">指定された行の個々の列値に対し、型を厳密に指定してアクセスできます。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> メソッドは Null 許容型もサポートします。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">どの列の値を取得するかを指定する入力 <see cref="T:System.Data.DataColumn" /> オブジェクト。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">列の戻り値の型を指定するジェネリック パラメーター。</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="column" /> で指定された列は、<see cref="T:System.Data.DataTable" /> が属している <see cref="T:System.Data.DataRow" /> には存在しません。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Null 非許容型に null 値が割り当てられました。</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt;.">
        <paramref name="T" /> で指定された <see cref="T:System.Data.DataColumn" /> の <paramref name="column" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">指定された行の個々の列値に対し、型を厳密に指定してアクセスできます。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> メソッドは Null 許容型もサポートします。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">どの列の値を取得するかを指定する入力 <see cref="T:System.Data.DataColumn" /> オブジェクト。</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">取得する列の値のバージョン (<see langword="Current" />、<see langword="Original" /> など) を指定する <see cref="T:System.Data.DataRowVersion" /> 列挙値。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">列の戻り値の型を指定するジェネリック パラメーター。</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="column" /> で指定された列は、<see cref="T:System.Data.DataTable" /> が属している <see cref="T:System.Data.DataRow" /> には存在しません。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Null 非許容型に null 値が割り当てられました。</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">
        <paramref name="T" /> および <paramref name="column" /> で指定された <see cref="T:System.Data.DataColumn" /> の <paramref name="version" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)&quot; /&gt; method also supports nullable types.">指定された行の個々の列値に対し、型を厳密に指定してアクセスできます。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> メソッドは Null 許容型もサポートします。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
      <param name="columnIndex" vsli:raw="The column index.">列インデックス。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">列の戻り値の型を指定するジェネリック パラメーター。</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="ordinal" /> で指定された列は、<see cref="T:System.Data.DataTable" /> が属している <see cref="T:System.Data.DataRow" /> には存在しません。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Null 非許容型に null 値が割り当てられました。</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">
        <paramref name="T" /> で指定された <see cref="T:System.Data.DataColumn" /> の <paramref name="columnIndex" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">指定された行の個々の列値に対し、型を厳密に指定してアクセスできます。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> メソッドは Null 許容型もサポートします。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to return the value of.">取得する値が格納されている列の、0 から始まる序数。</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">取得する列の値のバージョン (<see langword="Current" />、<see langword="Original" /> など) を指定する <see cref="T:System.Data.DataRowVersion" /> 列挙値。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">列の戻り値の型を指定するジェネリック パラメーター。</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="ordinal" /> で指定された列は、<see cref="T:System.Data.DataTable" /> が属している <see cref="T:System.Data.DataRow" /> には存在しません。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Null 非許容型に null 値が割り当てられました。</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;ordinal&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">
        <paramref name="T" /> および <paramref name="ordinal" /> で指定された <see cref="T:System.Data.DataColumn" /> の <paramref name="version" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)&quot; /&gt; method also supports nullable types.">指定された行の個々の列値に対し、型を厳密に指定してアクセスできます。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> メソッドは Null 許容型もサポートします。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">値を取得する列の名前。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">列の戻り値の型を指定するジェネリック パラメーター。</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="columnName" /> で指定された列は、<see cref="T:System.Data.DataTable" /> が属している <see cref="T:System.Data.DataRow" /> には存在しません。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A &lt;see langword=&quot;null&quot; /&gt; value was assigned to a non-nullable type.">Null 非許容型に <see langword="null" /> 値が割り当てられました。</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt;.">
        <paramref name="T" /> で指定された <see cref="T:System.Data.DataColumn" /> の <paramref name="columnName" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">指定された行の個々の列値に対し、型を厳密に指定してアクセスできます。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> メソッドは Null 許容型もサポートします。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">値を取得する列の名前。</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">取得する列の値のバージョン (<see langword="Current" />、<see langword="Original" /> など) を指定する <see cref="T:System.Data.DataRowVersion" /> 列挙値。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">列の戻り値の型を指定するジェネリック パラメーター。</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="columnName" /> で指定された列は、<see cref="T:System.Data.DataTable" /> が属している <see cref="T:System.Data.DataRow" /> には存在しません。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Null 非許容型に null 値が割り当てられました。</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">
        <paramref name="T" /> および <paramref name="columnName" /> で指定された <see cref="T:System.Data.DataColumn" /> の <paramref name="version" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)&quot; /&gt; method also supports nullable types.">
        <see cref="T:System.Data.DataRow" /> 内の指定された列に新しい値を設定します。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> メソッドは Null 許容型もサポートします。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specifies which row value to retrieve.">取得する行の値は、入力の <see cref="T:System.Data.DataColumn" /> によって指定されます。</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">行内の指定された列に設定する新しい <paramref name="T" /> 型の値。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">列の値の型を指定するジェネリック パラメーター。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; cannot be found.">
        <paramref name="column" /> で指定した列が見つかりません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">
        <paramref name="column" /> が null です。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">削除した行に値を設定しようとしたときに発生します。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; the method is called on. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)&quot; /&gt; method also supports nullable types.">メソッドを呼び出した <see cref="T:System.Data.DataRow" /> 内の指定された列に新しい値を設定します。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> メソッドは Null 許容型もサポートします。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to set the value of.">値の設定先となる列の、0 から始まる序数。</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">行内の指定された列に設定する新しい <paramref name="T" /> 型の値。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">列の値の型を指定するジェネリック パラメーター。</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">削除した行に値を設定しようとしたときに発生します。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;ordinal&quot; /&gt; argument is out of range.">引数 <paramref name="ordinal" /> が範囲外です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could be not cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)&quot; /&gt; method also supports nullable types.">
        <see cref="T:System.Data.DataRow" /> 内の指定された列に新しい値を設定します。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> メソッドは Null 許容型もサポートします。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">拡張メソッドの <see langword="this" /> インスタンスとして機能する入力 <see cref="T:System.Data.DataRow" />。</param>
      <param name="columnName" vsli:raw="The name of the column to set the value of.">値の設定先となる列の名前。</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">行内の指定された列に設定する新しい <paramref name="T" /> 型の値。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">列の値の型を指定するジェネリック パラメーター。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">
        <paramref name="columnName" /> で指定した列が見つかりません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">削除した行に値を設定しようとしたときに発生します。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基になる列値の型を、ジェネリック パラメーター <paramref name="T" /> で指定された型にキャストできませんでした。</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary vsli:raw="Gets the state of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの状態を取得します。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary vsli:raw="The row has been added to a &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">行が <see cref="T:System.Data.DataRowCollection" /> に追加されましたが、<see cref="M:System.Data.DataRow.AcceptChanges" /> が呼び出されていません。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary vsli:raw="The row was deleted using the &lt;see cref=&quot;M:System.Data.DataRow.Delete&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="M:System.Data.DataRow.Delete" /> の <see cref="T:System.Data.DataRow" /> メソッドを使用して行が削除されました。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary vsli:raw="The row has been created but is not part of any &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;. A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is in this state immediately after it has been created and before it is added to a collection, or if it has been removed from a collection.">行は作成されましたが、<see cref="T:System.Data.DataRowCollection" /> の一部ではありません。 <see cref="T:System.Data.DataRow" /> は、作成された直後からコレクションに追加されるまでの間、またはコレクションから削除された場合に、この状態になります。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary vsli:raw="The row has been modified and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">行が変更されましたが、<see cref="M:System.Data.DataRow.AcceptChanges" /> が呼び出されていません。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary vsli:raw="The row has not changed since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">行は <see cref="M:System.Data.DataRow.AcceptChanges" /> が最後に呼び出されてから変更されていません。</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary vsli:raw="Describes the version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> のバージョンを記述します。</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary vsli:raw="The row contains current values.">行には、現在の値が含まれています。</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary vsli:raw="The default version of &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;. For a &lt;see langword=&quot;DataRowState&quot; /&gt; value of &lt;see langword=&quot;Added&quot; /&gt;, &lt;see langword=&quot;Modified&quot; /&gt; or &lt;see langword=&quot;Deleted&quot; /&gt;, the default version is &lt;see langword=&quot;Current&quot; /&gt;. For a &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; value of &lt;see langword=&quot;Detached&quot; /&gt;, the version is &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowState" /> の既定のバージョン。 <see langword="DataRowState" /> の値が <see langword="Added" />、<see langword="Modified" />、または <see langword="Deleted" /> の場合、既定バージョンは <see langword="Current" /> です。 <see langword="Detached" /> の <see cref="T:System.Data.DataRowState" /> 値の場合、バージョンは <see langword="Proposed" /> です。</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary vsli:raw="The row contains its original values.">行には、元の値が含まれています。</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary vsli:raw="The row contains a proposed value.">行には、提案値が含まれています。</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary vsli:raw="Represents a customized view of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> のカスタマイズされたビューを表します。</summary>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary vsli:raw="Event that is raised when a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; property is changed.">
        <see cref="T:System.Data.DataRowView" /> プロパティの変更時に発生するイベント。</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary vsli:raw="Begins an edit procedure.">編集プロシージャを開始します。</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary vsli:raw="Cancels an edit procedure.">編集プロシージャをキャンセルします。</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">指定した子 <see cref="T:System.Data.DataView" /> を使用して子 <see cref="T:System.Data.DataTable" /> の <see cref="T:System.Data.DataRelation" /> を返します。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">
        <see cref="T:System.Data.DataRelation" /> オブジェクト。</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">子 <see cref="T:System.Data.DataView" /> の <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; and parent.">指定した <see cref="T:System.Data.DataRelation" /> と親を使用して子 <see cref="T:System.Data.DataTable" /> の <see cref="T:System.Data.DataView" /> を返します。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">
        <see cref="T:System.Data.DataRelation" /> オブジェクト。</param>
      <param name="followParent" vsli:raw="The parent object.">親であるオブジェクトです。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">子 <see cref="T:System.Data.DataView" /> の <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">指定した子 <see cref="T:System.Data.DataView" /> 名を使用して子 <see cref="T:System.Data.DataTable" /> の <see cref="T:System.Data.DataRelation" /> を返します。</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">
        <see cref="T:System.Data.DataRelation" /> 名を格納している文字列。</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">子 <see cref="T:System.Data.DataView" /> の <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and parent.">指定した <see cref="T:System.Data.DataView" /> 名と親を使用して子 <see cref="T:System.Data.DataTable" /> の <see cref="T:System.Data.DataRelation" /> を返します。</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">
        <see cref="T:System.Data.DataRelation" /> 名を格納している文字列。</param>
      <param name="followParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the created child view in sync with the parent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">作成された子ビューと親の同期を維持するには <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">子 <see cref="T:System.Data.DataView" /> の <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary vsli:raw="Deletes a row.">行を削除します。</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary vsli:raw="Commits changes to the underlying &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and ends the editing session that was begun with &lt;see cref=&quot;M:System.Data.DataRowView.BeginEdit&quot; /&gt;.  Use &lt;see cref=&quot;M:System.Data.DataRowView.CancelEdit&quot; /&gt; to discard the changes made to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> に対する変更をコミットし、<see cref="M:System.Data.DataRowView.BeginEdit" /> によって開始された編集セッションを終了します。  <see cref="M:System.Data.DataRowView.CancelEdit" /> への変更を破棄するには、<see cref="T:System.Data.DataRow" /> を使用します。</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is identical to the specified object.">現在の <see cref="T:System.Data.DataRowView" /> が指定したオブジェクトと同一かどうかを示す値を取得します。</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較する <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;object&quot; /&gt; is a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; and it returns the same row as the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="object" /> が <see cref="T:System.Data.DataRowView" /> であり、現在の <see cref="T:System.Data.DataRowView" /> と同じ行を返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary vsli:raw="Returns the hash code of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">
        <see cref="T:System.Data.DataRow" /> オブジェクトのハッシュ コードを返します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code 1, which represents Boolean &lt;see langword=&quot;true&quot; /&gt; if the value of this instance is nonzero; otherwise the integer zero, which represents Boolean &lt;see langword=&quot;false&quot; /&gt;.">このインスタンスの値が 0 以外の場合はブール値 <see langword="true" /> を表す 32 ビット符号付き整数ハッシュ コードの 1。それ以外の場合はブール値 <see langword="false" /> を表す整数の 0。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">コンポーネントのこのインスタンスのカスタム属性のコレクションを返します。</summary>
      <returns vsli:raw="An AttributeCollection containing the attributes for this object.">このオブジェクトの属性を格納する AttributeCollection。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">コンポーネントのこのインスタンスのクラス名を返します。</summary>
      <returns vsli:raw="The class name of this instance of a component.">コンポーネントのこのインスタンスのクラス名。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">コンポーネントのこのインスタンスの名前を返します。</summary>
      <returns vsli:raw="The name of this instance of a component.">コンポーネントのこのインスタンスの名前。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">コンポーネントのこのインスタンスの型コンバーターを返します。</summary>
      <returns vsli:raw="The type converter for this instance of a component.">コンポーネントのこのインスタンスの型コンバーター。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">コンポーネントのこのインスタンスの既定のイベントを返します。</summary>
      <returns vsli:raw="The default event for this instance of a component.">コンポーネントのこのインスタンスの既定のイベント。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">コンポーネントのこのインスタンスの既定のプロパティを返します。</summary>
      <returns vsli:raw="The default property for this instance of a component.">コンポーネントのこのインスタンスの既定のプロパティ。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">コンポーネントのこのインスタンスに対して指定されている型のエディターを返します。</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">このオブジェクトのエディターを表す <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">指定した型の、このオブジェクトのエディターとなる <see cref="T:System.Object" />。エディターが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">コンポーネントのこのインスタンスのイベントを返します。</summary>
      <returns vsli:raw="The events for this instance of a component.">コンポーネントのこのインスタンスのイベント。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component with specified attributes.">指定された属性を持つコンポーネントのこのインスタンスのイベントを返します。</summary>
      <param name="attributes" vsli:raw="The attributes.">属性</param>
      <returns vsli:raw="The events for this instance of a component.">コンポーネントのこのインスタンスのイベント。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">コンポーネントのこのインスタンスのプロパティを返します。</summary>
      <returns vsli:raw="The properties for this instance of a component.">コンポーネントのこのインスタンスのプロパティ。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component with specified attributes.">指定された属性を持つコンポーネントのこのインスタンスのプロパティを返します。</summary>
      <param name="attributes" vsli:raw="The attributes.">属性。</param>
      <returns vsli:raw="The properties for this instance of a component.">コンポーネントのこのインスタンスのプロパティ。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">指定したプロパティ記述子によって記述されたプロパティを含むオブジェクトを返します。</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">所有者を見つけるプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">指定したプロパティの所有者を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to which this row belongs.">この行が属する <see cref="T:System.Data.DataView" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataView&quot; /&gt; to which this row belongs.">この行が属する <see langword="DataView" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary vsli:raw="Indicates whether the row is in edit mode.">行が編集モードかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is in edit mode; otherwise &lt;see langword=&quot;false&quot; /&gt;.">行が編集モードである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is new.">
        <see cref="T:System.Data.DataRowView" /> が新しいかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is new; otherwise &lt;see langword=&quot;false&quot; /&gt;.">行が新しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a value in a specified column.">指定した列の値を取得または設定します。</summary>
      <param name="ndx" vsli:raw="The column index.">列インデックス。</param>
      <exception cref="T:System.Data.DataException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">
        <see cref="P:System.Data.DataRowView.DataView" /> では編集を許可しておらず、<see cref="T:System.Data.DataRowView" /> は新しくありません。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to that index value.">そのインデックス値に対応する列がありません。</exception>
      <returns vsli:raw="The value of the column.">列の値。</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary vsli:raw="Gets or sets a value in a specified column.">指定した列の値を取得または設定します。</summary>
      <param name="property" vsli:raw="String that contains the specified column.">指定した列を格納している文字列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A column with the specified name or relation was not found.&#xA;        &#xA;-or-&#xA;&#xA;The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">指定された名前または関係を持つ列が見つかりませんでした。
        
- または -

<see cref="P:System.Data.DataRowView.DataView" /> では編集を許可しておらず、<see cref="T:System.Data.DataRowView" /> は新しくありません。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="Unmatched &lt;paramref name=&quot;property&quot; /&gt; when setting a value.">値を設定するときに一致しなかった <paramref name="property" />。</exception>
      <returns vsli:raw="The value of the column.">列の値。</returns>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed.">表示されている <see cref="T:System.Data.DataRow" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed by the &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> に表示されている <see cref="T:System.Data.DataRowView" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary vsli:raw="Gets the current version description of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> の現在のバージョンの説明を取得します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. Possible values for the &lt;see cref=&quot;P:System.Data.DataRowView.RowVersion&quot; /&gt; property are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 値のいずれか 1 つ。 <see cref="P:System.Data.DataRowView.RowVersion" /> プロパティに使用できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary vsli:raw="Gets a message that describes any validation errors for the object.">オブジェクトの検証エラーを説明するメッセージを取得します。</summary>
      <returns vsli:raw="The validation error on the object.">オブジェクトの検証エラー。</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary vsli:raw="Gets the error message for the property with the given name.">指定した名前のプロパティに関するエラー メッセージを取得します。</summary>
      <param name="colName" vsli:raw="The name of the property whose error message to get.">エラー メッセージを取得する対象のプロパティの名前。</param>
      <returns vsli:raw="The error message for the property. The default is an empty string (&quot;&quot;).">プロパティに関するエラー メッセージ。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary vsli:raw="Represents an in-memory cache of data.">データのメモリ内キャッシュを表します。</summary>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">
        <see cref="T:System.Data.DataSet" /> が初期化された後に発生します。</summary>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary vsli:raw="Occurs when a target and source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; have the same primary key value, and &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; is set to true.">ターゲットとソースの <see cref="T:System.Data.DataRow" /> に同じ主キー値が格納されていて、<see cref="P:System.Data.DataSet.EnforceConstraints" /> が true に設定されているときに発生します。</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class.">
        <see cref="T:System.Data.DataSet" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">指定されたシリアル化情報とコンテキストを持つ <see cref="T:System.Data.DataSet" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">オブジェクトのシリアル化または逆シリアル化に必要なデータです。</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">指定したシリアル化ストリームの転送元と転送先。</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">
        <see cref="T:System.Data.DataSet" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</param>
      <param name="ConstructSchema" vsli:raw="">ブール値。</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with the given name.">指定した名前で <see cref="T:System.Data.DataSet" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataSetName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> の名前。</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was loaded or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">この <see cref="T:System.Data.DataSet" /> の読み込み、または前回の <see cref="M:System.Data.DataSet.AcceptChanges" /> の呼び出し以降にこのデータセットに対して行われたすべての変更をコミットします。</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">フォームまたは別のコンポーネントで使用する <see cref="T:System.Data.DataSet" /> の初期化を開始します。 初期化は実行時に発生します。</summary>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; of any data by removing all rows in all tables.">すべてのテーブル内のすべての行を削除して、データの <see cref="T:System.Data.DataSet" /> を消去します。</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary vsli:raw="Copies the structure of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas, relations, and constraints. Does not copy any data.">すべての <see cref="T:System.Data.DataSet" /> スキーマ、リレーションシップ、および制約を含め <see cref="T:System.Data.DataTable" /> の構造体をコピーします。 データのコピーは行いません。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, but none of the data.">現在の <see cref="T:System.Data.DataSet" /> と同じスキーマを持つが、データが格納されていない新しい <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">この <see cref="T:System.Data.DataSet" /> の構造体だけでなくデータもコピーします。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same structure (table schemas, relations, and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">この <see cref="T:System.Data.DataSet" /> と同じ構造体 (テーブル スキーマ、リレーションシップ、および制約) とデータを持つ新しい <see cref="T:System.Data.DataSet" />。  
  
 <block subset="none" type="note"><para>  
 これらのクラスがサブクラス化されている場合は、コピーも同じサブクラスになります。</para></block></returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, in the same sequence as the tables appear in the &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; collection.">
        <see cref="T:System.Data.DataTableReader" /> ごとに 1 つの結果セットを含む <see cref="T:System.Data.DataTable" /> を返します。順序は、<see cref="P:System.Data.DataSet.Tables" /> コレクション内のテーブルでの出現順序と同じです。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">ソースの <see cref="T:System.Data.DataTableReader" /> 内に格納されている <see cref="T:System.Data.DataTable" /> インスタンスに対応する結果セットを 1 つ以上格納している <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">1 つの <see cref="T:System.Data.DataTableReader" /> につき 1 つの結果セットを含む <see cref="T:System.Data.DataTable" /> を返します。</summary>
      <param name="dataTables" vsli:raw="An array of DataTables providing the order of the result sets to be returned in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" /> で返される結果セットの順序を示す、DataTable の配列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The returned result sets are in the order specified by the &lt;paramref name=&quot;dataTables&quot; /&gt; parameter.">ソースの <see cref="T:System.Data.DataTableReader" /> 内に格納されている <see cref="T:System.Data.DataTable" /> インスタンスに対応する結果セットを 1 つ以上格納している <see cref="T:System.Data.DataSet" />。 返される結果セットの順序は、<paramref name="dataTables" /> パラメーターにより指定されます。</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> の <see cref="T:System.Data.DataSet" /> を判別します。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">リモート処理のシナリオで逆シリアル化の間に <see langword="DataSet" /> の保護されたコンストラクター <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> を起動するために使用される <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">リモート処理のシナリオで逆シリアル化の間に <see langword="DataSet" /> の保護されたコンストラクター <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> を起動するために使用される <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">ペイロードのスキーマ情報が省略されているかどうかを示す、<see cref="T:System.Data.SchemaSerializationMode" /> 列挙体。</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> の <see cref="T:System.Data.DataSet" /> を判別します。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance that is passed during deserialization of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の逆シリアル化の際に渡される <see cref="T:System.Data.DataSet" /> インスタンス。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">ペイロードのスキーマ情報が省略されているかどうかを示す、<see cref="T:System.Data.SchemaSerializationMode" /> 列挙体。</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">フォームまたは別のコンポーネントで使用する <see cref="T:System.Data.DataSet" /> の初期化を終了します。 初期化は実行時に発生します。</summary>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that contains all changes made to it since it was loaded or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was last called.">前回 <see cref="T:System.Data.DataSet" /> を読み取るか、<see cref="M:System.Data.DataSet.AcceptChanges" /> を呼び出した以降にこのデータセットに対して行われたすべての変更が格納されているこのデータセットのコピーを取得します。</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it and later be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no changed rows are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">この <see cref="T:System.Data.DataSet" /> の変更内容のコピー。これに対してアクションを実行した後、<see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> を使って元のデータにマージできます。 変更された行が見つからない場合、このメソッドは <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">前回 <see cref="T:System.Data.DataSet" /> を読み取るか、<see cref="M:System.Data.DataSet.AcceptChanges" /> を呼び出した以降にこのデータセットに対して行われたすべての変更が格納されているこのデータセットのコピーを、<see cref="T:System.Data.DataRowState" /> によってフィルター処理した後で取得します。</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowState" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it, and subsequently be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">アクションを実行した後、<see cref="T:System.Data.DataSet" /> を使用して元のデータセットにマージするために使用できる、<see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> のフィルター処理後のコピー。 必要な <see cref="T:System.Data.DataRowState" /> の行が見つからない場合、このメソッドは <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Gets a copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; for the DataSet.">データセットの <see cref="T:System.Xml.Schema.XmlSchemaSet" /> のコピーを取得します。</summary>
      <param name="schemaSet" vsli:raw="The specified schema set.">指定されたスキーマ セット。</param>
      <returns vsli:raw="A copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> のコピーです。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">シリアル化情報オブジェクトを、<see cref="T:System.Data.DataSet" /> のシリアル化に必要なデータで事前設定します。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> と関連付けるシリアル化データを保持する <see cref="T:System.Data.DataSet" />。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> に関連付けるシリアル化ストリームの転送元および転送先を格納する <see cref="T:System.Data.DataSet" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary vsli:raw="Returns a serializable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">シリアル化することができる <see cref="T:System.Xml.Schema.XmlSchema" /> インスタンスを返します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> インスタンス。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Deserializes the table data from the binary or XML stream.">バイナリまたは XML ストリームからテーブル データを逆シリアル化します。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンス。</param>
      <param name="context" vsli:raw="The streaming context.">ストリーム コンテキスト。</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary vsli:raw="Returns the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に格納されているデータの XML 表現を返します。</summary>
      <returns vsli:raw="A string that is a representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に格納されているデータの表現である文字列。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary vsli:raw="Returns the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に格納されているデータの XML 表現の XML スキーマを返します。</summary>
      <returns vsli:raw="String that is the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に格納されているデータの XML 表現の XML スキーマである文字列。</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows.">
        <see cref="T:System.Data.DataSet" /> に新しい行、削除された行、変更された行などの変更があるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に変更がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に <see cref="T:System.Data.DataRowState" /> でフィルター処理された新しい行、削除された行、変更された行などの変更があるかどうかを示す値を取得します。</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowState" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に変更がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定した <see cref="T:System.IO.Stream" /> の XML スキーマを <see cref="T:System.Data.DataSet" /> に適用します。</summary>
      <param name="stream" vsli:raw="The &lt;see langword=&quot;Stream&quot; /&gt; from which to read the schema.">スキーマの読み出し元の <see langword="Stream" />。</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">スキーマ推論から除外する名前空間 URI (Uniform Resource Identifier) 文字列の配列。</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定した <see cref="T:System.IO.TextReader" /> の XML スキーマを <see cref="T:System.Data.DataSet" /> に適用します。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema.">スキーマの読み出し元の <see langword="TextReader" />。</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">スキーマ推論から除外する名前空間 URI (Uniform Resource Identifier) 文字列の配列。</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified file to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定したファイルの XML スキーマを <see cref="T:System.Data.DataSet" /> に適用します。</summary>
      <param name="fileName" vsli:raw="The name of the file (including the path) from which to read the schema.">スキーマの読み込み元の (パスを含む) ファイル名。</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">スキーマ推論から除外する名前空間 URI (Uniform Resource Identifier) 文字列の配列。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> が <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> に設定されていません。</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlReader" /> の XML スキーマを <see cref="T:System.Data.DataSet" /> に適用します。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XMLReader&quot; /&gt; from which to read the schema.">スキーマの読み出し元の <see langword="XMLReader" />。</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">スキーマ推論から除外する名前空間 URI (Uniform Resource Identifier) 文字列の配列。</param>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary vsli:raw="Deserialize all of the tables data of the DataSet from the binary or XML stream.">バイナリまたは XML ストリームからデータセットのすべてのテーブル データを逆シリアル化します。</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Inspects the format of the serialized representation of the &lt;see langword=&quot;DataSet&quot; /&gt;.">
        <see langword="DataSet" /> のシリアル化された表現の形式を検査します。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; represents a &lt;see langword=&quot;DataSet&quot; /&gt; serialized in its binary format, &lt;see langword=&quot;false&quot; /&gt; otherwise.">指定した <see cref="T:System.Runtime.Serialization.SerializationInfo" /> がバイナリ形式でシリアル化された <see langword="true" /> を表す場合は <see langword="DataSet" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">指定した <see cref="T:System.Data.DataSet" /> を使用するデータ ソースの値を <see cref="T:System.Data.IDataReader" /> に格納し、<see cref="T:System.Data.DataTable" /> インスタンスの配列を使用してスキーマ情報と名前空間情報を指定します。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">1 つ以上の結果セットを含む <see cref="T:System.Data.IDataReader" />。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">
        <see cref="T:System.Data.LoadOption" /> 列挙体の値。<see cref="T:System.Data.DataTable" /> 内の <see cref="T:System.Data.DataSet" /> インスタンスに既に含まれている行を同じ主キーを持つ受信した行と結合する方法を示します。</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information. Each of these tables must be a member of the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> メソッドが名前と名前空間の情報を取得する、<see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> インスタンスの配列。 これらのテーブルは、この <see cref="T:System.Data.DataTableCollection" /> に格納されている <see cref="T:System.Data.DataSet" /> のメンバーである必要があります。</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">指定した <see cref="T:System.Data.DataSet" /> を使用するデータ ソースの値を <see cref="T:System.Data.IDataReader" /> に格納し、<see cref="T:System.Data.DataTable" /> インスタンスの配列を使用してスキーマ情報と名前空間情報を指定します。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">1 つ以上の結果セットを含む <see cref="T:System.Data.IDataReader" />。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">
        <see cref="T:System.Data.LoadOption" /> 列挙体の値。<see cref="T:System.Data.DataTable" /> 内の <see cref="T:System.Data.DataSet" /> インスタンスに既に含まれている行を同じ主キーを持つ受信した行と結合する方法を示します。</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">データの読み込み中にエラーが発生した場合に呼び出される <see cref="T:System.Data.FillErrorEventHandler" /> デリゲート。</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information.">
        <see cref="T:System.Data.DataTable" /> メソッドが名前と名前空間の情報を取得する、<see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> インスタンスの配列。</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of strings to supply the names for the tables within the &lt;see langword=&quot;DataSet&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> を使用するデータ ソースの値を <see cref="T:System.Data.IDataReader" /> に格納し、文字列の配列を使用して <see langword="DataSet" /> 内のテーブルの名前を指定します。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">1 つ以上の結果セットを含む <see cref="T:System.Data.IDataReader" />。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see langword=&quot;DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">
        <see cref="T:System.Data.LoadOption" /> 列挙体の値。<see cref="T:System.Data.DataTable" /> 内の <see langword="DataSet" /> インスタンスに既に含まれている行を同じ主キーを持つ受信した行と結合する方法を示します。</param>
      <param name="tables" vsli:raw="An array of strings, from which the &lt;see langword=&quot;Load&quot; /&gt; method retrieves table name information.">
        <see langword="Load" /> メソッドがテーブル名の情報を取得する、文字列の配列。</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列を現在の <see cref="T:System.Data.DataSet" /> にマージします。</summary>
      <param name="rows" vsli:raw="The array of &lt;see langword=&quot;DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">
        <see langword="DataRow" /> にマージされる <see langword="DataSet" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列を現在の <see cref="T:System.Data.DataSet" /> にマージします。指定した引数に従って、この <see langword="DataSet" /> に行われた変更を保持または破棄し、互換性のないスキーマを処理します。</summary>
      <param name="rows" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> にマージされる <see langword="DataSet" /> オブジェクトの配列。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> に対して行われた変更を保持するには <see langword="DataSet" />。保持しない場合は <see langword="false" />。</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> およびそのスキーマを現在の <see langword="DataSet" /> にマージします。</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">データとスキーマをマージする対象の <see langword="DataSet" />。</param>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enabled.">1 つ以上の制約を有効にできません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding any changes in this &lt;see langword=&quot;DataSet&quot; /&gt; according to the given argument.">指定した <see cref="T:System.Data.DataSet" /> およびそのスキーマを現在の <see langword="DataSet" /> にマージします。この <see langword="DataSet" /> に対して行われた変更は、指定した引数に従って保持または破棄します。</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">データとスキーマをマージする対象の <see langword="DataSet" />。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">現在の <see langword="DataSet" /> に対して行われた変更を保持するには <see langword="true" />。保持しない場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema with the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the current &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">指定した <see cref="T:System.Data.DataSet" /> およびそのスキーマを現在の <see langword="DataSet" /> にマージします。指定した引数に従って、この <see langword="DataSet" /> に行われた変更を保持または破棄し、互換性のないスキーマを処理します。</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">データとスキーマをマージする対象の <see langword="DataSet" />。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">現在の <see langword="DataSet" /> に対して行われた変更を保持するには <see langword="true" />。保持しない場合は <see langword="false" />。</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> およびそのスキーマを現在の <see cref="T:System.Data.DataSet" /> にマージします。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose data and schema will be merged.">データとスキーマをマージする対象の <see cref="T:System.Data.DataTable" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;table&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="table" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">指定した <see cref="T:System.Data.DataTable" /> およびそのスキーマを現在の <see langword="DataSet" /> にマージします。指定した引数に従って、この <see langword="DataSet" /> に行われた変更を保持または破棄し、互換性のないスキーマを処理します。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; whose data and schema will be merged.">データとスキーマをマージする対象の <see langword="DataTable" />。</param>
      <param name="preserveChanges" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 値のいずれか 1 つ。</param>
      <param name="missingSchemaAction" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> に対して行われた変更を保持するには <see langword="DataSet" />。保持しない場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)&quot; /&gt; event.">
        <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> イベントを発生させます。</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object is removed from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> から <see cref="T:System.Data.DataTable" /> オブジェクトが削除されたときに発生します。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; being removed.">削除する <see cref="T:System.Data.DataRelation" />。</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is removed from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> から <see cref="T:System.Data.DataSet" /> が削除されたときに発生します。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being removed.">削除する <see cref="T:System.Data.DataTable" />。</param>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary vsli:raw="Sends a notification that the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; property is about to change.">指定した <see cref="T:System.Data.DataSet" /> プロパティがこれから変更されるという通知を送信します。</summary>
      <param name="name" vsli:raw="The name of the property that is about to change.">これから変更されるプロパティの名前。</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> を使用して、XML スキーマとデータを <see cref="T:System.IO.Stream" /> に読み込みます。</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.IO.Stream" /> から派生するオブジェクト。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">データを読み込むために使用する <see cref="T:System.Data.XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> と <see cref="T:System.IO.Stream" /> を使用して、XML スキーマとデータを <see cref="T:System.Data.XmlReadMode" /> に読み込みます。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">読み取り元の <see cref="T:System.IO.Stream" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlReadMode" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">データを読み込むために使用する <see langword="XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> を使用して、XML スキーマとデータを <see cref="T:System.IO.TextReader" /> に読み込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema and data.">スキーマおよびデータの読み出し元の <see langword="TextReader" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">データを読み込むために使用する <see cref="T:System.Data.XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> と <see cref="T:System.IO.TextReader" /> を使用して、XML スキーマとデータを <see cref="T:System.Data.XmlReadMode" /> に読み込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">読み取り元の <see cref="T:System.IO.TextReader" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlReadMode" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">データを読み込むために使用する <see langword="XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file.">指定したファイルを使用して、XML スキーマとデータを <see cref="T:System.Data.DataSet" /> に読み込みます。</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">読み込み元の (パスを含む) ファイル名。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> が <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> に設定されていません。</exception>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">データを読み込むために使用する <see langword="XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">指定したファイルと <see cref="T:System.Data.DataSet" /> を使用して、XML スキーマとデータを <see cref="T:System.Data.XmlReadMode" /> に読み込みます。</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">読み込み元の (パスを含む) ファイル名。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlReadMode" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> が <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> に設定されていません。</exception>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">データを読み込むために使用する <see langword="XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> を使用して、XML スキーマとデータを <see cref="T:System.Xml.XmlReader" /> に読み込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">読み取り元の <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">データを読み込むために使用する <see langword="XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> と <see cref="T:System.Xml.XmlReader" /> を使用して、XML スキーマとデータを <see cref="T:System.Data.XmlReadMode" /> に読み込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">読み取り元の <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlReadMode" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">データを読み込むために使用する <see langword="XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定した <see cref="T:System.IO.Stream" /> から <see cref="T:System.Data.DataSet" /> に XML スキーマを読み込みます。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">読み取り元の <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定した <see cref="T:System.IO.TextReader" /> から <see cref="T:System.Data.DataSet" /> に XML スキーマを読み込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">読み取り元の <see cref="T:System.IO.TextReader" />。</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads the XML schema from the specified file into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定したファイルから <see cref="T:System.Data.DataSet" /> に XML スキーマを読み込みます。</summary>
      <param name="fileName" vsli:raw="The file name (including the path) from which to read.">読み込み元の (パスを含む) ファイル名。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> が <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> に設定されていません。</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlReader" /> から <see cref="T:System.Data.DataSet" /> に XML スキーマを読み込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">読み取り元の <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Ignores attributes and returns an empty DataSet.">属性を無視して、空のデータセットを返します。</summary>
      <param name="reader" vsli:raw="The specified XML reader.">指定された XML リーダー。</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary vsli:raw="Rolls back all the changes made to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was created, or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">この <see cref="T:System.Data.DataSet" /> を作成するか、前回 <see cref="M:System.Data.DataSet.AcceptChanges" /> を呼び出した以降にこのデータセットに対して行われたすべての変更をロールバックします。</summary>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary vsli:raw="Clears all tables and removes all relations, foreign constraints, and tables from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. Subclasses should override &lt;see cref=&quot;M:System.Data.DataSet.Reset&quot; /&gt; to restore a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to its original state.">すべてのテーブルをクリアし、<see cref="T:System.Data.DataSet" />からすべての関係、外部の制約、テーブルを削除します。 サブクラスが <see cref="M:System.Data.DataSet.Reset" /> をオーバーライドして <see cref="T:System.Data.DataSet" /> を元の状態に戻す必要があります。</summary>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Relations&quot; /&gt; property should be persisted.">
        <see cref="P:System.Data.DataSet.Relations" /> プロパティを永続化する必要があるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; property should be persisted.">
        <see cref="P:System.Data.DataSet.Tables" /> プロパティを永続化する必要があるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IListSource.GetList" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IListSource.GetList" />」をご覧ください。</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />」をご覧ください。</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />」をご覧ください。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />」をご覧ください。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> を使用して <see cref="T:System.IO.Stream" /> の現在のデータを書き込みます。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">ファイルに書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> と <see cref="T:System.IO.Stream" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。 スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">ファイルに書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> を使用して <see cref="T:System.IO.TextWriter" /> の現在のデータを書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">書き込む対象の <see cref="T:System.IO.TextWriter" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> と <see cref="T:System.IO.TextWriter" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。 スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object used to write the document.">ドキュメントの書き込みに使用する <see cref="T:System.IO.TextWriter" /> オブジェクト。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file.">指定したファイルに、<see cref="T:System.Data.DataSet" /> の現在のデータを書き込みます。</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">書き込み先の (パスを含む) ファイル名。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> が <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> に設定されていません。</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを、指定したファイルに書き込みます。オプションでスキーマを書き込むこともできます。 スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">書き込み先の (パスを含む) ファイル名。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> が <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> に設定されていません。</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> に、<see cref="T:System.Xml.XmlWriter" /> の現在のデータを書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">書き込みに使用する <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> と <see cref="T:System.Xml.XmlWriter" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。 スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">書き込みに使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">XML スキーマとして <see cref="T:System.Data.DataSet" /> 構造体を指定した <see cref="T:System.IO.Stream" /> オブジェクトに書き込みます。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">ファイルに書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">XML スキーマとして <see cref="T:System.Data.DataSet" /> 構造体を指定した <see cref="T:System.IO.Stream" /> オブジェクトに書き込みます。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to write to.">書き込み先の <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">
        <see cref="T:System.Type" /> を文字列に変換するために使用するデリゲート。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object.">XML スキーマとして <see cref="T:System.Data.DataSet" /> 構造体を指定した <see cref="T:System.IO.TextWriter" /> オブジェクトに書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">書き込む対象の <see cref="T:System.IO.TextWriter" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> に対し、<see cref="T:System.IO.TextWriter" /> 構造体を XML スキーマとして書き込みます。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object to write to.">書き込み先の <see cref="T:System.IO.TextWriter" /> オブジェクト。</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">
        <see cref="T:System.Type" /> を文字列に変換するために使用するデリゲート。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">
        <see cref="T:System.Data.DataSet" /> 構造体を XML スキーマとしてファイルに書き込みます。</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">書き込み先の (パスを含む) ファイル名。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> が <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> に設定されていません。</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">
        <see cref="T:System.Data.DataSet" /> 構造体を XML スキーマとしてファイルに書き込みます。</summary>
      <param name="fileName" vsli:raw="The name of the file to write to.">書き込み先のファイルの名前。</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">
        <see cref="T:System.Type" /> を文字列に変換するために使用するデリゲート。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">
        <see cref="T:System.Data.DataSet" /> 構造体を XML スキーマとして <see cref="T:System.Xml.XmlWriter" /> オブジェクトに書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">書き込み先の <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> に対し、<see cref="T:System.Xml.XmlWriter" /> 構造体を XML スキーマとして書き込みます。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write to.">書き込み先の <see cref="T:System.Xml.XmlWriter" /> オブジェクト。</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">
        <see cref="T:System.Type" /> を文字列に変換するために使用するデリゲート。</param>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary vsli:raw="Gets or sets a value indicating whether string comparisons within &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects are case-sensitive.">
        <see cref="T:System.Data.DataTable" /> オブジェクト内の文字列比較で大文字と小文字を区別するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if string comparisons are case-sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 文字列比較で大文字と小文字を区別する場合は、それ以外の場合は <see langword="false" /> 。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary vsli:raw="Gets or sets the name of the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">現在の <see cref="T:System.Data.DataSet" /> の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> の名前。</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary vsli:raw="Gets a custom view of the data contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to allow filtering, searching, and navigating using a custom &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">カスタム <see cref="T:System.Data.DataSet" /> を使用してフィルター処理、検索、移動の各操作を行うことができる、<see cref="T:System.Data.DataViewManager" /> に格納されているデータのカスタム ビューを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">
        <see cref="T:System.Data.DataViewManager" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary vsli:raw="Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.">更新操作を試みたときに操作が制約規則に従っているかどうかを示す値を取得または設定します。</summary>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enforced.">1 つ以上の制約を適用できません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if rules are enforced; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 規則が適用される場合は。それ以外の場合は <see langword="false" /> 。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information associated with the &lt;see langword=&quot;DataSet&quot; /&gt;.">
        <see langword="DataSet" /> に関連付けられている、カスタマイズされたユーザー情報のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; with all custom user information.">すべてのカスタム ユーザー情報が含まれる <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">この <see cref="T:System.Data.DataTable" /> 内の <see cref="T:System.Data.DataSet" /> オブジェクトのいずれかにエラーがあるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any table contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> いずれかのテーブルにエラーがある場合は、それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">
        <see cref="T:System.Data.DataSet" /> が初期化されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンポーネントの初期化が完了していることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">テーブル内の文字列の比較に使用するロケール情報を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is &lt;see langword=&quot;null&quot; /&gt;.">ユーザーのコンピューターのロケールについてのデータが格納されている <see cref="T:System.Globalization.CultureInfo" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> の名前空間を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">この名前空間には既にデータが格納されています。</exception>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> の名前空間。</returns>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> の名前空間に別名を付ける XML プリフィックスを取得または設定します。</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; namespace.">
        <see cref="T:System.Data.DataSet" /> 名前空間の XML プリフィックス。</returns>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary vsli:raw="Gets the collection of relations that link tables and allow navigation from parent tables to child tables.">テーブルをリンクし、親テーブルから子テーブルへ移動できるようにするリレーションシップのコレクションが取得されます。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">
        <see cref="T:System.Data.DataRelationCollection" /> オブジェクトのコレクションを格納している <see cref="T:System.Data.DataRelation" />。 <see cref="T:System.Data.DataRelation" /> オブジェクトが存在しない場合、空のコレクションが返されます。</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that's used during remoting.">リモート処理中に使用される <see cref="T:System.Data.SerializationFormat" /> の <see cref="T:System.Data.DataSet" /> を取得または設定します。</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">
        <see cref="T:System.Data.SerializationFormat" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.SchemaSerializationMode" /> の <see cref="T:System.Data.DataSet" /> を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.SchemaSerializationMode" /> の <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" /> の <see cref="T:System.Data.DataSet" /> を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" /> の <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary vsli:raw="Gets the collection of tables contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に格納されているテーブルのコレクションを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects exist.">この <see cref="T:System.Data.DataTableCollection" /> に格納されている <see cref="T:System.Data.DataSet" />。 <see cref="T:System.Data.DataTable" /> オブジェクトが存在しない場合、空のコレクションが返されます。</returns>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary vsli:raw="Describes the serialization format for &lt;see cref=&quot;T:System.DateTime&quot; /&gt; columns in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.DateTime" /> 内の <see cref="T:System.Data.DataSet" /> 列のシリアル化形式を記述します。</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Local. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into Local. Serialization in this mode is always performed in Local. There is an offset during serialization.">
        <see langword="DateTime" /> は常に Local として格納されます。 このモードの列に <see cref="F:System.Data.DataSetDateTime.Utc" /> または <see cref="F:System.Data.DataSetDateTime.Unspecified" /> が割り当てられている場合、最初に Local に変換されます。 このモードのシリアル化は常に Local として実行されます。 シリアル化の際にはオフセットが発生します。</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode does not cause an offset.">
        <see langword="DateTime" /> は常に Unspecified として格納されます。 このモードの列に <see cref="F:System.Data.DataSetDateTime.Local" /> または <see cref="F:System.Data.DataSetDateTime.Utc" /> が割り当てられている場合、最初に <see cref="F:System.Data.DataSetDateTime.Unspecified" /> に変換されます。 このモードのシリアル化では、オフセットは発生しません。</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode causes offset. This is the default behavior and is backward compatible. This option should be thought of as being Unspecified in storage but applying an offset that is similar to &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; during serialization.">
        <see langword="DateTime" /> は Unspecified として格納されます。 このモードの列に <see cref="F:System.Data.DataSetDateTime.Local" /> または <see cref="F:System.Data.DataSetDateTime.Utc" /> が割り当てられている場合、最初に <see cref="F:System.Data.DataSetDateTime.Unspecified" /> に変換されます。 このモードのシリアル化では、オフセットが発生します。 これは既定の動作であり、下位互換性があります。 このオプションはストレージにおける Unspecified であると考えられますが、シリアル化の際には <see cref="F:System.Data.DataSetDateTime.Local" /> に似たオフセットが適用されます。</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Universal Coordinated Time (UTC). If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see langword=&quot;Utc&quot; /&gt; format. Serialization in this mode is always performed in &lt;see langword=&quot;Utc&quot; /&gt;. There is no offset during serialization.">
        <see langword="DateTime" /> は世界協定時刻 (UTC) で格納されます。 このモードの列に <see cref="F:System.Data.DataSetDateTime.Local" /> または <see cref="F:System.Data.DataSetDateTime.Unspecified" /> が割り当てられている場合、最初に <see langword="Utc" /> 形式に変換されます。 このモードのシリアル化は常に <see langword="Utc" /> として実行されます。 シリアル化の際にオフセットは発生しません。</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary vsli:raw="Marks a property, event, or extender with a description. Visual designers can display this description when referencing the member.">プロパティ、イベント、またはエクステンダーを作成し、説明を付けます。 メンバーを参照するときに、ビジュアル デザイナーでこの説明を表示できます。</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSysDescriptionAttribute&quot; /&gt; class using the specified description string.">説明文字列を指定して、<see cref="T:System.Data.DataSysDescriptionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="description" vsli:raw="The description string.">説明文字列。</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary vsli:raw="Gets the text for the description.">説明のテキストを取得します。</summary>
      <returns vsli:raw="The description string.">説明文字列。</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary vsli:raw="Represents one table of in-memory data.">メモリ内データの 1 つのテーブルを表します。</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary vsli:raw="Occurs after a value has been changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 内の指定した <see cref="T:System.Data.DataRow" /> の値が変更された後に発生します。</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary vsli:raw="Occurs when a value is being changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 内の指定した <see cref="T:System.Data.DataRow" /> の値が変更されているときに発生します。</summary>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">
        <see cref="T:System.Data.DataTable" /> が初期化された後に発生します。</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has been changed successfully.">
        <see cref="T:System.Data.DataRow" /> が正常に変更された後に発生します。</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is changing.">
        <see cref="T:System.Data.DataRow" /> が変更されているときに発生します。</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary vsli:raw="Occurs after a row in the table has been deleted.">テーブル内の行が削除された後に発生します。</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary vsli:raw="Occurs before a row in the table is about to be deleted.">テーブル内の行が削除される直前に発生します。</summary>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">
        <see cref="T:System.Data.DataTable" /> が消去された後に発生します。</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">
        <see cref="T:System.Data.DataTable" /> が削除されたときに発生します。</summary>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary vsli:raw="Occurs when a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is inserted.">新しい <see cref="T:System.Data.DataRow" /> が挿入されると発生します。</summary>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary vsli:raw="Checks whether initialization is in progress. The initialization occurs at run time.">初期化処理中かどうかをチェックします。 初期化は実行時に発生します。</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with no arguments.">引数を指定せずに、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with serialized data.">
        <see cref="T:System.Data.DataTable" /> と <see cref="T:System.Runtime.Serialization.SerializationInfo" /> を使用して、<see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">オブジェクトのシリアル化または逆シリアル化に必要なデータです。</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">指定したシリアル化ストリームの転送元と転送先。</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with the specified table name.">指定したテーブル名を使用して <see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">テーブルに付ける名前。 <paramref name="tableName" /> が <see langword="null" /> または空の文字列の場合は、<see cref="T:System.Data.DataTableCollection" /> に追加したときに既定の名前が付けられます。</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class using the specified table name and namespace.">指定したテーブル名と名前空間を使用して、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">テーブルに付ける名前。 <paramref name="tableName" /> が <see langword="null" /> または空の文字列の場合は、<see cref="T:System.Data.DataTableCollection" /> に追加したときに既定の名前が付けられます。</param>
      <param name="tableNamespace" vsli:raw="The namespace for the XML representation of the data stored in the &lt;see langword=&quot;DataTable&quot; /&gt;.">
        <see langword="DataTable" /> に格納されているデータの XML 表現の名前空間。</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this table since the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">前回 <see cref="M:System.Data.DataTable.AcceptChanges" /> を呼び出した以降にこのテーブルに対して行われたすべての変更をコミットします。</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">フォームまたは別のコンポーネントで使用する <see cref="T:System.Data.DataTable" /> の初期化を開始します。 初期化は実行時に発生します。</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary vsli:raw="Turns off notifications, index maintenance, and constraints while loading data.">データを読み込む間、通知、インデックスの維持、および制約をオフにします。</summary>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of all data.">
        <see cref="T:System.Data.DataTable" /> からすべてのデータを消去します。</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary vsli:raw="Clones the structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas and constraints.">すべての <see cref="T:System.Data.DataTable" /> スキーマおよび制約を含め <see cref="T:System.Data.DataTable" /> の構造体のクローンを作成します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">現在の <see cref="T:System.Data.DataTable" /> と同じスキーマを持つ新しい <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary vsli:raw="Computes the given expression on the current rows that pass the filter criteria.">フィルター基準を満たしている現在の行で指定した式を計算します。</summary>
      <param name="expression" vsli:raw="The expression to compute.">計算する式。</param>
      <param name="filter" vsli:raw="The filter to limit the rows that evaluate in the expression.">式で評価される行を制限するフィルター。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt;, set to the result of the computation. If the expression evaluates to null, the return value will be &lt;see cref=&quot;F:System.DBNull.Value&quot; /&gt;.">計算の結果に設定された <see cref="T:System.Object" />。 式が null に評価された場合、戻り値は <see cref="F:System.DBNull.Value" /> です。</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">この <see cref="T:System.Data.DataTable" /> の構造体だけでなくデータもコピーします。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure (table schemas and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA; If these classes have been derived, the copy will also be of the same derived classes.  &#xA;  &#xA; &lt;see cref=&quot;M:System.Data.DataTable.Copy&quot; /&gt; creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure and data as the original &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. To copy the structure to a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, but not the data, use &lt;see cref=&quot;M:System.Data.DataTable.Clone&quot; /&gt;.">この <see cref="T:System.Data.DataTable" /> と同じ構造体 (テーブル スキーマおよび制約) とデータを持つ新しい <see cref="T:System.Data.DataTable" />。  
  
これらのクラスが派生されている場合は、コピーも同じ派生クラスになります。  
  
 <see cref="M:System.Data.DataTable.Copy" /> は、新しい <see cref="T:System.Data.DataTable" /> を元の <see cref="T:System.Data.DataTable" /> と同じ構造とデータで作成します。 構造体を新しい <see cref="T:System.Data.DataTable" /> にコピーし、データをコピーしない場合は、<see cref="M:System.Data.DataTable.Clone" /> を使用します。</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; corresponding to the data within this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">この <see cref="T:System.Data.DataTableReader" /> 内のデータに対応する <see cref="T:System.Data.DataTable" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one result set, corresponding to the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance.">1 つの結果セットを格納した <see cref="T:System.Data.DataTableReader" />。ソース インスタンスである <see cref="T:System.Data.DataTable" /> に対応します。</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary vsli:raw="Creates a new instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の新しいインスタンスを作成します。</summary>
      <returns vsli:raw="The new expression.">新しい式。</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">フォームまたは別のコンポーネントで使用する <see cref="T:System.Data.DataTable" /> の初期化を終了します。 初期化は実行時に発生します。</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary vsli:raw="Turns on notifications, index maintenance, and constraints after loading data.">データを読み込んだ後、通知、インデックスの維持、および制約をオンにします。</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains all changes made to it since it was loaded or &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was last called.">前回 <see cref="T:System.Data.DataTable" /> を読み取るか、<see cref="M:System.Data.DataTable.AcceptChanges" /> を呼び出した以降にこのデータセットに対して行われたすべての変更が格納されているこのデータセットのコピーを取得します。</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if no changes are found.">この <see cref="T:System.Data.DataTable" /> からの変更のコピー。変更がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">前回 <see cref="T:System.Data.DataTable" /> を読み取るか、<see cref="M:System.Data.DataTable.AcceptChanges" /> を呼び出した以降にこのデータセットに対して行われたすべての変更が格納されているこのデータセットのコピーを、<see cref="T:System.Data.DataRowState" /> によってフィルター処理した後で取得します。</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowState" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that can have actions performed on it, and later be merged back in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">アクションを実行した後、<see cref="T:System.Data.DataTable" /> を使用して元の <see cref="T:System.Data.DataTable" /> にマージするために使用できる、<see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> のフィルター処理後のコピー。 必要な <see cref="T:System.Data.DataRowState" /> の行が見つからない場合、このメソッドは <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="This method returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance containing the Web Services Description Language (WSDL) that describes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for Web Services.">このメソッドは、Web サービスの <see cref="T:System.Xml.Schema.XmlSchemaSet" /> を記述する Web サービス記述言語 (WSDL) を含む <see cref="T:System.Data.DataTable" /> インスタンスを返します。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> のインスタンス。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> インスタンス。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain errors.">エラーが含まれる <see cref="T:System.Data.DataRow" /> オブジェクトの配列を取得します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that have errors.">エラーが含まれる <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">シリアル化情報オブジェクトを、<see cref="T:System.Data.DataTable" /> のシリアル化に必要なデータで事前設定します。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトと関連付けられているシリアル化データを保持する <see cref="T:System.Data.DataTable" />。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> に関連付けられているシリアル化ストリームのソースおよびデスティネーションを格納する <see cref="T:System.Data.DataTable" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="info" /> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary vsli:raw="Gets the row type.">行の種類を取得します。</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> の型。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />」をご覧ください。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> メソッドで生成され、<see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> メソッドで利用されるオブジェクトの XML 表現を表す <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> です。</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary vsli:raw="Copies a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; into a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, preserving any property settings, as well as original and current values.">プロパティ設定、元の値、および現在の値を保持し、<see cref="T:System.Data.DataRow" /> を <see cref="T:System.Data.DataTable" /> にコピーします。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to be imported.">インポートする <see cref="T:System.Data.DataRow" />。</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows.">指定された <see cref="T:System.Data.DataTable" /> を使用し、<see cref="T:System.Data.IDataReader" /> にデータ ソースからの値を設定します。 <see cref="T:System.Data.DataTable" /> が既に行を含んでいる場合、データ ソースからの受信データは既存の行にマージされます。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">結果セットを提供する <see cref="T:System.Data.IDataReader" />。</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see langword=&quot;DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the &lt;paramref name=&quot;loadOption&quot; /&gt; parameter.">指定された <see cref="T:System.Data.DataTable" /> を使用し、<see cref="T:System.Data.IDataReader" /> にデータ ソースからの値を設定します。 <see langword="DataTable" /> が既に行を含んでいる場合、<paramref name="loadOption" /> パラメーターの値に従って、データ ソースからの受信データは既存の行にマージされます。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">1 つ以上の結果セットを含む <see cref="T:System.Data.IDataReader" />。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">
        <see cref="T:System.Data.LoadOption" /> 列挙体の値。<see cref="T:System.Data.DataTable" /> に既に含まれている行を同じ主キーを持つ受信した行と結合する方法を示します。</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using an error-handling delegate.">エラー処理デリゲートを使用し、指定された <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Data.IDataReader" /> にデータ ソースからの値を設定します。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">結果セットを提供する <see cref="T:System.Data.IDataReader" />。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">
        <see cref="T:System.Data.LoadOption" /> 列挙体の値。<see cref="T:System.Data.DataTable" /> に既に含まれている行を同じ主キーを持つ受信した行と結合する方法を示します。</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">データの読み込み中にエラーが発生した場合に呼び出される <see cref="T:System.Data.FillErrorEventHandler" /> デリゲート。</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">特定の行を検索し、更新します。 一致する行が見つからない場合は、指定した値を使用して新しい行が作成されます。</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">新しい行の作成に使用する値の配列。</param>
      <param name="fAcceptChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to accept changes; otherwise &lt;see langword=&quot;false&quot; /&gt;.">変更を受け入れる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">配列がテーブルの列数より大きいです。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value doesn't match its respective column type.">値が各列の型と一致していません。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">この行を追加すると、制約が無効になります。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Attempting to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">
        <see cref="P:System.Data.DataColumn.AllowDBNull" /> が false である列に null を格納しようとしています。</exception>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">新しい <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">特定の行を検索し、更新します。 一致する行が見つからない場合は、指定した値を使用して新しい行が作成されます。</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">新しい行の作成に使用する値の配列。</param>
      <param name="loadOption" vsli:raw="Used to determine how the array values are applied to the corresponding values in an existing row.">配列値を既存の行にある対応する値に適用する方法を決定するために使用します。</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">新しい <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を現在の <see cref="T:System.Data.DataTable" /> とマージします。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">現在の <see cref="T:System.Data.DataTable" /> とマージする <see cref="T:System.Data.DataTable" />。</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を現在の <see langword="DataTable" /> とマージし、現在の <see langword="DataTable" /> の変更を保持するかどうかを指定します。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to be merged with the current &lt;see langword=&quot;DataTable&quot; /&gt;.">現在の <see langword="DataTable" /> とマージする <see langword="DataTable" />。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">現在の <see langword="true" /> に対して行われた変更を保持するには <see langword="DataTable" />。保持しない場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes and how to handle missing schema in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を現在の <see langword="DataTable" /> とマージして、現在の <see langword="DataTable" /> の変更を保持するかどうかを指定し、さらに欠けているスキーマの処理方法を指定します。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">現在の <see cref="T:System.Data.DataTable" /> とマージする <see cref="T:System.Data.DataTable" />。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">現在の <see langword="true" /> に対して行われた変更を保持するには <see cref="T:System.Data.DataTable" />。保持しない場合は <see langword="false" />。</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the table.">テーブルと同じスキーマで新しい <see cref="T:System.Data.DataRow" /> を作成します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> と同じスキーマを持つ <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> の配列を返します。</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that describes the size of the array.">配列のサイズを表す <see cref="T:System.Int32" /> 値。</param>
      <returns vsli:raw="The new array.">新しい配列。</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary vsli:raw="Creates a new row from an existing row.">既存の行から新しい行を作成します。</summary>
      <param name="builder" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowBuilder&quot; /&gt; object.">
        <see cref="T:System.Data.DataRowBuilder" /> オブジェクト。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; derived class.">
        <see cref="T:System.Data.DataRow" /> の派生クラス。</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanged&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.ColumnChanged" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataColumnChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.ColumnChanging" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataColumnChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントを発生させます。</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is being removed.">
        <see cref="T:System.Data.DataTable" /> が削除されることを <see cref="T:System.Data.DataColumn" /> に通知します。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; being removed.">削除する <see cref="T:System.Data.DataColumn" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowChanged" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataRowChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowChanging" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataRowChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowDeleted" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataRowChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.RowDeleting" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataRowChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableCleared&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.TableCleared" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataTableClearEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableClearing&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.TableClearing" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataTableClearEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableNewRow&quot; /&gt; event.">
        <see cref="E:System.Data.DataTable.TableNewRow" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataTableNewRowEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を使用して、XML スキーマとデータを <see cref="T:System.IO.Stream" /> に読み込みます。</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.IO.Stream" /> から派生するオブジェクト。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">データを読み込むために使用する <see cref="T:System.Data.XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を使用して、XML スキーマとデータを <see cref="T:System.IO.TextReader" /> に読み込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be used to read the data.">データを読み込むために使用する <see cref="T:System.IO.TextReader" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">データを読み込むために使用する <see cref="T:System.Data.XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">指定したファイルから、XML スキーマとデータを <see cref="T:System.Data.DataTable" /> に読み込みます。</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the data.">データの読み取り元のファイルの名前。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">データを読み込むために使用する <see cref="T:System.Data.XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML Schema and Data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を使用して、XML スキーマとデータを <see cref="T:System.Xml.XmlReader" /> に読み込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be used to read the data.">データを読み込むために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">データを読み込むために使用する <see cref="T:System.Data.XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified stream.">指定したストリームを使用して、XML スキーマを <see cref="T:System.Data.DataTable" /> に読み込みます。</summary>
      <param name="stream" vsli:raw="The stream used to read the schema.">スキーマを読み込むために使用するストリーム。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を使用して、XML スキーマを <see cref="T:System.IO.TextReader" /> に読み込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; used to read the schema information.">スキーマ情報を読み込むために使用する <see cref="T:System.IO.TextReader" />。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">指定したファイルから <see cref="T:System.Data.DataTable" /> に XML スキーマを読み込みます。</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the schema information.">スキーマ情報の読み取り元のファイルの名前。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を使用して、XML スキーマを <see cref="T:System.Xml.XmlReader" /> に読み込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the schema information.">スキーマ情報を読み込むために使用する <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Reads from an XML stream.">XML ストリームから読み取ります。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlReader" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary vsli:raw="Rolls back all changes that have been made to the table since it was loaded, or the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">このテーブルを読み込むか、前回 <see cref="M:System.Data.DataTable.AcceptChanges" /> を呼び出した以降にこのテーブルに対して行われたすべての変更をロールバックします。</summary>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary vsli:raw="Resets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to its original state. Reset removes all data, indexes, relations, and columns of the table. If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.">
        <see cref="T:System.Data.DataTable" /> を元の状態にリセットします。 テーブルのすべてのデータ、インデックス、リレーションシップ、および列の削除をリセットします。 DataSet に DataTable が含まれている場合は、テーブルをリセットした後も、テーブルは DataSet の一部です。</summary>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">すべての <see cref="T:System.Data.DataRow" /> オブジェクトの配列を取得します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria.">フィルター基準と一致するすべての <see cref="T:System.Data.DataRow" /> オブジェクトの配列を取得します。</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">行にフィルターをかけるために使用する基準。 行をフィルター処理する方法の例については、「DataView RowFilter の構文 [C#]」を参照してください。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria, in the specified sort order.">フィルター基準と一致するすべての <see cref="T:System.Data.DataRow" /> オブジェクトの配列を、指定した並べ替え順で取得します。</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">行にフィルターをかけるために使用する基準。 行をフィルター処理する方法の例については、「DataView RowFilter の構文 [C#]」を参照してください。</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">列と並べ替え方向を指定する文字列。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects matching the filter expression.">フィルター式と一致する <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter in the order of the sort that match the specified state.">フィルター基準と一致するすべての <see cref="T:System.Data.DataRow" /> オブジェクトの配列を、指定した状態と一致する並べ替え順に取得します。</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">行にフィルターをかけるために使用する基準。 行をフィルター処理する方法の例については、「DataView RowFilter の構文 [C#]」を参照してください。</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">列と並べ替え方向を指定する文字列。</param>
      <param name="recordStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataViewRowState" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IListSource.GetList" />」をご覧ください。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; that can be bound to a data source from the object.">オブジェクトからデータ ソースに連結できる <see cref="T:System.Collections.IList" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />」をご覧ください。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> メソッドで生成され、<see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> メソッドで利用されるオブジェクトの XML 表現を表す <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> です。</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />」をご覧ください。</summary>
      <param name="reader" vsli:raw="An XmlReader.">XmlReader。</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />」をご覧ください。</summary>
      <param name="writer" vsli:raw="An XmlWriter.">XmlWriter。</param>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt;, if there is one as a concatenated string.">
        <see cref="P:System.Data.DataTable.TableName" /> と <see cref="P:System.Data.DataTable.DisplayExpression" /> が連結された文字列として存在する場合は、これらを取得します。</summary>
      <returns vsli:raw="A string consisting of the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt; values.">
        <see cref="P:System.Data.DataTable.TableName" /> と <see cref="P:System.Data.DataTable.DisplayExpression" /> 値で構成された文字列。</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の現在の内容を指定された <see cref="T:System.IO.Stream" /> を使用して XML として書き込みます。</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">データが書き込まれるストリーム。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の現在の内容を指定された <see cref="T:System.IO.Stream" /> を使用して XML として書き込みます。 テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">データが書き込まれるストリーム。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。 <see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを、指定したファイルに書き込みます。オプションでスキーマを書き込むこともできます。 スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">データが書き込まれるストリーム。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを、指定したファイルに書き込みます。オプションでスキーマを書き込むこともできます。 スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。 テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">データが書き込まれるストリーム。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。 <see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の現在の内容を指定された <see cref="T:System.IO.TextWriter" /> を使用して XML として書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">内容を書き込む対象の <see cref="T:System.IO.TextWriter" />。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の現在の内容を指定された <see cref="T:System.IO.TextWriter" /> を使用して XML として書き込みます。 テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">内容を書き込む対象の <see cref="T:System.IO.TextWriter" />。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。 <see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> と <see cref="T:System.IO.TextWriter" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。 スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">ドキュメントを書き込むために使用する <see cref="T:System.IO.TextWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> と <see cref="T:System.IO.TextWriter" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。 スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。 テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">ドキュメントを書き込むために使用する <see cref="T:System.IO.TextWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。 <see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file.">指定したファイルを使用して <see cref="T:System.Data.DataTable" /> の現在の内容を XML で書き込みます。</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">XML データの書き込み先ファイル。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">指定したファイルを使用して <see cref="T:System.Data.DataTable" /> の現在の内容を XML で書き込みます。 テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">XML データの書き込み先ファイル。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。 <see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">指定したファイルと <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。 スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">データが書き込まれるファイルの名前。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">指定したファイルと <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。 スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。 テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">データが書き込まれるファイルの名前。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。 <see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の現在の内容を指定された <see cref="T:System.Xml.XmlWriter" /> を使用して XML として書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">内容の書き込みに使用する <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の現在の内容を指定された <see cref="T:System.Xml.XmlWriter" /> を使用して XML として書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">内容の書き込みに使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。 <see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> と <see cref="T:System.Xml.XmlWriter" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。 スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> と <see cref="T:System.Xml.XmlWriter" /> を使用して、<see cref="T:System.Data.XmlWriteMode" /> の現在のデータを書き込みます。オプションでスキーマを書き込むこともできます。 スキーマを書き込むには、<paramref name="mode" /> パラメーターの値を <see langword="WriteSchema" /> に設定します。 テーブルのデータとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 値のいずれか 1 つ。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">
        <see langword="true" /> の場合は、現在のテーブルとその子孫の内容を書き込みます。 <see langword="false" /> (既定値) の場合は、現在のテーブルのデータのみを書き込みます。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream.">
        <see cref="T:System.Data.DataTable" /> の現在のデータ構造体を指定されたストリームに XML スキーマとして書き込みます。</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">XML スキーマが書き込まれるストリーム。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の現在のデータ構造体を指定されたストリームに XML スキーマとして書き込みます。 テーブルのスキーマとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">XML スキーマが書き込まれるストリーム。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">
        <see langword="true" /> の場合は、現在のテーブルとその子孫のスキーマを書き込みます。 <see langword="false" /> (既定値) の場合は、現在のテーブルのスキーマのみを書き込みます。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.IO.TextWriter" /> の現在のデータ構造体を XML スキーマとして書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">書き込みに使用する <see cref="T:System.IO.TextWriter" />。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.IO.TextWriter" /> の現在のデータ構造体を XML スキーマとして書き込みます。 テーブルのスキーマとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">書き込みに使用する <see cref="T:System.IO.TextWriter" />。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">
        <see langword="true" /> の場合は、現在のテーブルとその子孫のスキーマを書き込みます。 <see langword="false" /> (既定値) の場合は、現在のテーブルのスキーマのみを書き込みます。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file.">
        <see cref="T:System.Data.DataTable" /> の現在のデータ構造体を指定されたファイルに XML スキーマとして書き込みます。</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">使用するファイルの名前。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の現在のデータ構造体を指定されたファイルに XML スキーマとして書き込みます。 テーブルのスキーマとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">使用するファイルの名前。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">
        <see langword="true" /> の場合は、現在のテーブルとその子孫のスキーマを書き込みます。 <see langword="false" /> (既定値) の場合は、現在のテーブルのスキーマのみを書き込みます。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Xml.XmlWriter" /> の現在のデータ構造体を XML スキーマとして書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to use.">使用する <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> を使用して、<see cref="T:System.Xml.XmlWriter" /> の現在のデータ構造体を XML スキーマとして書き込みます。 テーブルのスキーマとその子孫をすべて保存するには、<paramref name="writeHierarchy" /> パラメーターを <see langword="true" /> に設定します。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">
        <see langword="true" /> の場合は、現在のテーブルとその子孫のスキーマを書き込みます。 <see langword="false" /> (既定値) の場合は、現在のテーブルのスキーマのみを書き込みます。</param>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary vsli:raw="Indicates whether string comparisons within the table are case-sensitive.">テーブル内の文字列比較で大文字と小文字を区別するかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the comparison is case-sensitive; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is set to the parent &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;P:System.Data.DataSet.CaseSensitive&quot; /&gt; property, or &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; was created independently of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">比較で大文字と小文字を区別する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は親 <see cref="T:System.Data.DataSet" /> オブジェクトの <see cref="P:System.Data.DataSet.CaseSensitive" /> プロパティに設定します。<see cref="T:System.Data.DataTable" /> とは独立して <see cref="T:System.Data.DataSet" /> を作成した場合は <see langword="false" /> に設定します。</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary vsli:raw="Gets the collection of child relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">この <see cref="T:System.Data.DataTable" /> の子リレーションシップのコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the child relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">テーブルの子リレーションを格納している <see cref="T:System.Data.DataRelationCollection" />。 <see cref="T:System.Data.DataRelation" /> オブジェクトが存在しない場合、空のコレクションが返されます。</returns>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary vsli:raw="Gets the collection of columns that belong to this table.">このテーブルに属する列のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects exist.">テーブルの <see cref="T:System.Data.DataColumnCollection" /> オブジェクトのコレクションを格納している <see cref="T:System.Data.DataColumn" />。 <see cref="T:System.Data.DataColumn" /> オブジェクトが存在しない場合、空のコレクションが返されます。</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary vsli:raw="Gets the collection of constraints maintained by this table.">このテーブルに保持されている制約のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects exist.">テーブルの <see cref="T:System.Data.ConstraintCollection" /> オブジェクトのコレクションを格納している <see cref="T:System.Data.Constraint" />。 <see cref="T:System.Data.Constraint" /> オブジェクトが存在しない場合、空のコレクションが返されます。</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">このテーブルが属する <see cref="T:System.Data.DataSet" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">このテーブルが属する <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary vsli:raw="Gets a customized view of the table that may include a filtered view, or a cursor position.">フィルター処理されたビューまたはカーソル位置を含むことがある、テーブルのカスタマイズされたビューを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> に関連付けられている <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary vsli:raw="Gets or sets the expression that returns a value used to represent this table in the user interface. The &lt;see langword=&quot;DisplayExpression&quot; /&gt; property lets you display the name of this table in a user interface.">ユーザー インターフェイスにこのテーブルを表示するために使用する値を返す式を取得または設定します。 <see langword="DisplayExpression" /> プロパティを使用すると、ユーザー インターフェイスにこのテーブルの名前が表示されます。</summary>
      <returns vsli:raw="A display string.">表示文字列。</returns>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information.">カスタマイズされたユーザー情報のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains custom user information.">カスタム ユーザー情報が格納された <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the rows in any of the tables of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the table belongs.">テーブルが属する <see cref="T:System.Data.DataSet" /> のいずれかのテーブルのいずれかの行にエラーがあるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if errors exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">エラーがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">
        <see cref="T:System.Data.DataTable" /> が初期化されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise &lt;see langword=&quot;false&quot; /&gt;.">コンポーネントが初期化を完了したことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">テーブル内の文字列の比較に使用するロケール情報を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; (returned by the &lt;see cref=&quot;P:System.Data.DataSet.Locale&quot; /&gt; property) to which the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; belongs; if the table doesn't belong to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, the default is the current system &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">ユーザーのコンピューターのロケールについてのデータが格納されている <see cref="T:System.Globalization.CultureInfo" />。 既定値は <see cref="T:System.Data.DataSet" /> が属する <see cref="T:System.Globalization.CultureInfo" /> オブジェクトの (<see cref="P:System.Data.DataSet.Locale" /> プロパティによって返される) <see cref="T:System.Data.DataTable" /> です。テーブルが <see cref="T:System.Data.DataSet" /> に属さない場合、既定値は現在のシステムの <see cref="T:System.Globalization.CultureInfo" /> です。</returns>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary vsli:raw="Gets or sets the initial starting size for this table.">このテーブルの初期開始サイズを取得または設定します。</summary>
      <returns vsli:raw="The initial starting size in rows of this table. The default is 50.">この行の初期開始サイズ。行数で表します。 既定値は 50 です。</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> に格納されているデータの XML 表現の名前空間を取得または設定します。</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の名前空間。</returns>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary vsli:raw="Gets the collection of parent relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">この <see cref="T:System.Data.DataTable" /> の親リレーションシップのコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the parent relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">テーブルの親リレーションを格納している <see cref="T:System.Data.DataRelationCollection" />。 <see cref="T:System.Data.DataRelation" /> オブジェクトが存在しない場合、空のコレクションが返されます。</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> に格納されているデータの XML 表現の名前空間を取得または設定します。</summary>
      <returns vsli:raw="The prefix of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> のプリフィックス。</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary vsli:raw="Gets or sets an array of columns that function as primary keys for the data table.">このデータ テーブルの主キーとして機能する列の配列を取得または設定します。</summary>
      <exception cref="T:System.Data.DataException" vsli:raw="The key is a foreign key.">キーが外部キーです。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format.">シリアル化形式を取得または設定します。</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">
        <see langword="Binary" /> シリアル化または <see langword="Xml" /> シリアル化を指定する <see cref="T:System.Data.SerializationFormat" /> 列挙体。</returns>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary vsli:raw="Gets the collection of rows that belong to this table.">このテーブルに属する行のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; that contains &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRowCollection" /> オブジェクトが格納されている <see cref="T:System.Data.DataRow" />。<see cref="T:System.Data.DataRow" /> オブジェクトが存在しない場合は null 値。</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" /> の <see cref="T:System.Data.DataTable" /> を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" /> の <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />」をご覧ください。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a collection of &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; objects; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コレクションが <see cref="T:System.Collections.IList" /> オブジェクトのコレクションである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の名前を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) is passed in and this table belongs to a collection.">
        <see langword="null" /> または空の文字列 ("") が渡され、このテーブルはコレクションに属します。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The table belongs to a collection that already has a table with the same name. (Comparison is case-sensitive).">テーブルが属しているコレクションに、同じ名前のテーブルが既に含まれています。 比較では、大文字と小文字が区別されます。</exception>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の名前。</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">
        <see cref="M:System.Data.DataTable.Clear" /> メソッドのデータを提供します。</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.DataTableClearEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">行が削除される <see cref="T:System.Data.DataTable" />。</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary vsli:raw="Gets the table whose rows are being cleared.">行が削除されるテーブルを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">行が削除される <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary vsli:raw="Gets the table name whose rows are being cleared.">行が削除されるテーブル名を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the table name.">テーブル名を示す <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary vsli:raw="Gets the namespace of the table whose rows are being cleared.">行が削除されるテーブルの名前空間を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the namespace name.">名前空間名を示す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">
        <see cref="M:System.Data.DataTable.Clear" /> メソッドを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataTableClearEventArgs" />。</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary vsli:raw="Represents the collection of tables for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> のテーブルのコレクションを表します。</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">
        <see cref="T:System.Data.DataTableCollection" /> オブジェクトを追加または削除したことが原因で <see cref="T:System.Data.DataTable" /> が変更された後に発生します。</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary vsli:raw="Occurs while the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changing because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">
        <see cref="T:System.Data.DataTableCollection" /> オブジェクトを追加または削除したことが原因で <see cref="T:System.Data.DataTable" /> が変更されているときに発生します。</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using a default name and adds it to the collection.">既定の名前を使用して新しい <see cref="T:System.Data.DataTable" /> オブジェクトを作成し、それをコレクションに追加します。</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">新しく作成された <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary vsli:raw="Adds the specified &lt;see langword=&quot;DataTable&quot; /&gt; to the collection.">指定された <see langword="DataTable" /> をコレクションに追加します。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; object to add.">追加する <see langword="DataTable" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">このテーブルに指定した値が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table already belongs to this collection, or belongs to another collection.">このテーブルは既にこのコレクションに属しているか、他のコレクションに属しています。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. The comparison is not case sensitive.">コレクション内に同じ名前のテーブルがあります。 大文字と小文字は区別されません。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">指定した名前を使用して <see cref="T:System.Data.DataTable" /> オブジェクトを作成し、このオブジェクトをコレクションに追加します。</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">作成した <see cref="T:System.Data.DataTable" /> に付ける名前。</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">コレクション内に同じ名前のテーブルがあります。 比較では、大文字と小文字が区別されません。</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">新しく作成された <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">指定した名前を使用して <see cref="T:System.Data.DataTable" /> オブジェクトを作成し、このオブジェクトをコレクションに追加します。</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">作成した <see cref="T:System.Data.DataTable" /> に付ける名前。</param>
      <param name="tableNamespace" vsli:raw="The namespace to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">作成した <see cref="T:System.Data.DataTable" /> に指定する名前空間。</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">コレクション内に同じ名前のテーブルがあります。 比較では、大文字と小文字が区別されません。</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">新しく作成された <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; array to the end of the collection.">指定した <see cref="T:System.Data.DataTable" /> 配列の要素をコレクションの末尾にコピーします。</summary>
      <param name="tables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to add to the collection.">コレクションに追加する <see cref="T:System.Data.DataTable" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object can be removed from the collection.">指定した <see cref="T:System.Data.DataTable" /> オブジェクトをコレクションから削除できるかどうかを確認します。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; in the collection to perform the check against.">確認するコレクション内の <see langword="DataTable" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the table can be removed; otherwise &lt;see langword=&quot;false&quot; /&gt;.">このテーブルを削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary vsli:raw="Clears the collection of all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">すべての <see cref="T:System.Data.DataTable" /> オブジェクトをコレクションから削除します。</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name exists in the collection.">指定した名前の <see cref="T:System.Data.DataTable" /> オブジェクトがコレクション内に存在するかどうかを示す値を取得します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">検索する <see cref="T:System.Data.DataTable" /> の名前です。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定したテーブルが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name and table namespace exists in the collection.">指定した名前の <see cref="T:System.Data.DataTable" /> オブジェクト、およびテーブルの名前空間がコレクション内に存在するかどうかを示す値を取得します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">検索する <see cref="T:System.Data.DataTable" /> の名前です。</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">検索する <see cref="T:System.Data.DataTable" /> 名前空間の名前。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定したテーブルが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified destination array index.">指定したコピー先の配列のインデックスを開始位置として、現在の <see cref="T:System.Data.DataTableCollection" /> のすべての要素を 1 次元の <see cref="T:System.Array" /> にコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; object's elements into.">現在の <see cref="T:System.Array" /> オブジェクトの要素をコピーする先の 1 次元 <see cref="T:System.Data.DataTableCollection" />。</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">コピーを開始するコピー先の <see cref="T:System.Array" /> インデックス。</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">指定した <see cref="T:System.Data.DataTable" /> オブジェクトのインデックスを取得します。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to search for.">検索対象の <see langword="DataTable" />。</param>
      <returns vsli:raw="The zero-based index of the table, or -1 if the table is not found in the collection.">テーブルの 0 から始まるインデックス番号。コレクション内でそのテーブルが見つからなかった場合は -1。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index in the collection of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">コレクション内の、指定した名前の <see cref="T:System.Data.DataTable" /> オブジェクトのインデックスを取得します。</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; object to look for.">検索する <see langword="DataTable" /> オブジェクトの名前。</param>
      <returns vsli:raw="The zero-based index of the &lt;see langword=&quot;DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">指定した名前の <see langword="DataTable" /> の 0 から始まるインデックス番号。このテーブルがコレクション内に存在しない場合は -1。  
  
 <block subset="none" type="note"><para>  
 複数のテーブルが同じ名前を持つ一方で名前空間が異なる場合は -1 を返します。 1 つのテーブル名を正確に 1 つのテーブルに一致させるときにあいまいな点があると、この呼び出しは成功しません。</para></block></returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary vsli:raw="Gets the index in the collection of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">指定した <see cref="T:System.Data.DataTable" /> オブジェクトのコレクション内のインデックスを取得します。</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to look for.">検索する <see cref="T:System.Data.DataTable" /> オブジェクトの名前。</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">検索する <see cref="T:System.Data.DataTable" /> 名前空間の名前。</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">指定した名前の <see cref="T:System.Data.DataTable" /> の 0 から始まるインデックス番号。このテーブルがコレクション内に存在しない場合は -1。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object from the collection.">指定した <see cref="T:System.Data.DataTable" /> オブジェクトをコレクションから削除します。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">削除する <see langword="DataTable" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">このテーブルに指定した値が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table does not belong to this collection.  &#xA;  &#xA; -or-  &#xA;  &#xA; The table is part of a relationship.">このテーブルはこのコレクションに属していません。  
  
 - または -  
  
 このテーブルはリレーションシップの一部です。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">指定した名前を持つ <see cref="T:System.Data.DataTable" /> オブジェクトをコレクションから削除します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">削除する <see cref="T:System.Data.DataTable" /> オブジェクトの名前。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">このコレクションには指定した名前のテーブルがありません。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">指定した名前を持つ <see cref="T:System.Data.DataTable" /> オブジェクトをコレクションから削除します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">削除する <see cref="T:System.Data.DataTable" /> オブジェクトの名前。</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">検索する <see cref="T:System.Data.DataTable" /> 名前空間の名前。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">このコレクションには指定した名前のテーブルがありません。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index from the collection.">指定したインデックス位置にある <see cref="T:System.Data.DataTable" /> オブジェクトをコレクションから削除します。</summary>
      <param name="index" vsli:raw="The index of the &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">削除する <see langword="DataTable" /> のインデックス。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table at the specified index.">このコレクションには指定したインデックス位置にテーブルがありません。</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index.">指定したインデックス位置にある <see cref="T:System.Data.DataTable" /> オブジェクトを取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">検索する <see cref="T:System.Data.DataTable" /> の 0 から始まるインデックスです。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">インデックス値が、コレクション内の項目数を超える値です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified index; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataTable" />指定したインデックスを持つ <see langword="null" /> 。が存在しない場合は <see cref="T:System.Data.DataTable" /> 。</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">指定した名前の <see cref="T:System.Data.DataTable" /> オブジェクトを取得します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">検索する <see langword="DataTable" /> の名前です。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">指定した名前の <see cref="T:System.Data.DataTable" />。そのような <see cref="T:System.Data.DataTable" /> が存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name in the specified namespace.">指定した名前の <see cref="T:System.Data.DataTable" /> オブジェクトを、指定した名前空間から取得します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">検索する <see langword="DataTable" /> の名前です。</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">検索する <see cref="T:System.Data.DataTable" /> 名前空間の名前。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">指定した名前の <see cref="T:System.Data.DataTable" />。そのような <see cref="T:System.Data.DataTable" /> が存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class. &lt;see cref=&quot;T:System.Data.DataTableExtensions&quot; /&gt; is a static class.">
        <see cref="T:System.Data.DataTable" /> クラスの拡張メソッドを定義します。 <see cref="T:System.Data.DataTableExtensions" /> は静的クラスです。</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">LINQ 対応の <see cref="T:System.Data.DataView" /> オブジェクトを作成して返します。</summary>
      <param name="table" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">LINQ 対応の <see cref="T:System.Data.DataTable" /> を作成する元となる <see cref="T:System.Data.DataView" />。</param>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">LINQ 対応の <see cref="T:System.Data.DataView" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object representing the LINQ to DataSet query.">LINQ to DataSet クエリを表す LINQ 対応の <see cref="T:System.Data.DataView" /> オブジェクトを作成して返します。</summary>
      <param name="source" vsli:raw="The source LINQ to DataSet query from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">LINQ 対応の <see cref="T:System.Data.DataView" /> を作成する元となる LINQ to DataSet クエリ。</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">ソース シーケンスのオブジェクトの型 (通常は <see cref="T:System.Data.DataRow" />)。</typeparam>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">LINQ 対応の <see cref="T:System.Data.DataView" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクトを返します。ここで、ジェネリック パラメーター <paramref name="T" /> は <see cref="T:System.Data.DataRow" /> です。 このオブジェクトは、LINQ 式またはメソッド クエリで使用できます。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to make enumerable.">列挙可能にする対象のソース <see cref="T:System.Data.DataTable" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">ソース <see cref="T:System.Data.DataTable" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。ここで、ジェネリック パラメーター <paramref name="T" /> は <see cref="T:System.Data.DataRow" /> です。</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains copies of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">指定した入力 <see cref="T:System.Data.DataTable" /> オブジェクトに応じて (ジェネリック パラメーター <paramref name="T" /> は <see cref="T:System.Data.DataRow" />)、<see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクトのコピーを格納する <see cref="T:System.Data.DataRow" /> を返します。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">ソース <see cref="T:System.Collections.Generic.IEnumerable`1" /> シーケンス。</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">ソース シーケンスのオブジェクトの型 (通常は <see cref="T:System.Data.DataRow" />)。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; and a new table cannot be created.">ソース <see cref="T:System.Collections.Generic.IEnumerable`1" /> シーケンスが <see langword="null" /> で、新しいテーブルは作成できません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">ソース シーケンス内の <see cref="T:System.Data.DataRow" /> が <see cref="F:System.Data.DataRowState.Deleted" /> の状態です。  
  
ソース シーケンスに <see cref="T:System.Data.DataRow" /> オブジェクトは格納されていません。  
  
ソース シーケンス内の <see cref="T:System.Data.DataRow" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains the input sequence as the type of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataTable" /> オブジェクト型の入力シーケンスを格納する <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">指定した入力 <see cref="T:System.Data.DataRow" /> オブジェクトに応じて (ジェネリック パラメーター <paramref name="T" /> は <see cref="T:System.Data.DataTable" />)、指定した <see cref="T:System.Collections.Generic.IEnumerable`1" /> に <see cref="T:System.Data.DataRow" /> オブジェクトをコピーします。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">ソース <see cref="T:System.Collections.Generic.IEnumerable`1" /> シーケンス。</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">コピー先の <see cref="T:System.Data.DataTable" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">
        <see cref="T:System.Data.LoadOption" /> 読み込みオプションを指定する <see cref="T:System.Data.DataTable" /> 列挙体。</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">ソース シーケンスのオブジェクトの型 (通常は <see cref="T:System.Data.DataRow" />)。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">コピーされた <see cref="T:System.Data.DataRow" /> オブジェクトが、転送先の <see cref="T:System.Data.DataTable" /> のスキーマに適合しません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">転送元の <see cref="T:System.Collections.Generic.IEnumerable`1" /> シーケンスが <see langword="null" />、または転送先の <see cref="T:System.Data.DataTable" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">ソース シーケンス内の <see cref="T:System.Data.DataRow" /> が <see cref="F:System.Data.DataRowState.Deleted" /> の状態です。  
  
ソース シーケンスに <see cref="T:System.Data.DataRow" /> オブジェクトは格納されていません。  
  
ソース シーケンス内の <see cref="T:System.Data.DataRow" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">指定した入力 <see cref="T:System.Data.DataRow" /> オブジェクトに応じて (ジェネリック パラメーター <paramref name="T" /> は <see cref="T:System.Data.DataTable" />)、指定した <see cref="T:System.Collections.Generic.IEnumerable`1" /> に <see cref="T:System.Data.DataRow" /> オブジェクトをコピーします。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">ソース <see cref="T:System.Collections.Generic.IEnumerable`1" /> シーケンス。</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">コピー先の <see cref="T:System.Data.DataTable" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">
        <see cref="T:System.Data.LoadOption" /> 読み込みオプションを指定する <see cref="T:System.Data.DataTable" /> 列挙体。</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate that represents the method that will handle an error.">エラーを処理するメソッドを表す <see cref="T:System.Data.FillErrorEventHandler" /> デリゲート。</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">ソース シーケンスのオブジェクトの型 (通常は <see cref="T:System.Data.DataRow" />)。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">コピーされた <see cref="T:System.Data.DataRow" /> オブジェクトが、転送先の <see cref="T:System.Data.DataTable" /> のスキーマに適合しません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">転送元の <see cref="T:System.Collections.Generic.IEnumerable`1" /> シーケンスが <see langword="null" />、または転送先の <see cref="T:System.Data.DataTable" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; -or-  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">ソース シーケンス内の <see cref="T:System.Data.DataRow" /> が <see cref="F:System.Data.DataRowState.Deleted" /> の状態です。  
  
- または - 
ソース シーケンスに <see cref="T:System.Data.DataRow" /> オブジェクトは格納されていません。  
  
- または - 
ソース シーケンス内の <see cref="T:System.Data.DataRow" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">
        <see cref="M:System.Data.DataTable.NewRow" /> メソッドのデータを提供します。</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt;.">
        <see cref="T:System.Data.DataTableNewRowEventArgs" /> の新しいインスタンスを初期化します。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being added.">追加される <see cref="T:System.Data.DataRow" />。</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary vsli:raw="Gets the row that is being added.">追加される行を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is being added.">追加される <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">
        <see cref="M:System.Data.DataTable.NewRow" /> メソッドを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.DataTableNewRowEventArgs" />。</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains the contents of one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects in the form of one or more read-only, forward-only result sets.">
        <see cref="T:System.Data.DataTableReader" /> は、1 つ以上の <see cref="T:System.Data.DataTable" /> オブジェクトの内容を、読み取り専用、前方参照専用の 1 つ以上の結果セットとして取得します。</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class by using data from the supplied &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">指定された <see cref="T:System.Data.DataTableReader" /> のデータを使用して、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains its result set.">新しい <see cref="T:System.Data.DataTable" /> が結果セットを取得する <see cref="T:System.Data.DataTableReader" />。</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class using the supplied array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">
        <see cref="T:System.Data.DataTableReader" /> オブジェクトの指定した配列を使用して、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataTables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that supplies the results for the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; object.">新しい <see cref="T:System.Data.DataTable" /> オブジェクトの結果を提供する <see cref="T:System.Data.DataTableReader" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary vsli:raw="Closes the current &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">現在の <see cref="T:System.Data.DataTableReader" /> を閉じます。</summary>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">指定した列の値を <see cref="T:System.Boolean" /> として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Boolean&quot; /&gt;.">指定した列には <see langword="Boolean" /> が含まれていません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">指定された列の値をバイトとして取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte.">指定した列にバイトが含まれていません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.">指定したバッファー オフセットを開始位置として、指定した列オフセットから始まる文字のストリームをバッファーに配列として読み込みます。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">読み取り操作を開始する位置を示すフィールド内のインデックス。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">バイトのストリームを読み込むバッファー。</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">バッファー内でデータの配置を開始するインデックス。</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">バッファーにコピーする最大長。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte array.">指定した列にはバイト配列が含まれていません。</exception>
      <returns vsli:raw="The actual number of bytes read.">実際に読み取られたバイト数。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a character.">指定した列の値を文字として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified field does not contain a character.">指定したフィールドに文字が含まれていません。</exception>
      <returns vsli:raw="The value of the column.">列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">指定された列の値を 1 つの文字配列として返します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">読み取り操作を開始する位置を示すフィールド内のインデックス。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of chars.">char のストリームの読み込み先のバッファー。</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">バッファー内でデータの配置を開始するインデックス。</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">バッファーにコピーする最大長。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a character array.">指定した列には文字配列が含まれていません。</exception>
      <returns vsli:raw="The actual number of characters read.">実際に読み取られた文字数。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets a string representing the data type of the specified column.">指定した列のデータ型を示す文字列を取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <returns vsli:raw="A string representing the column's data type.">列のデータ型を示す文字列。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">指定された列の値を <see cref="T:System.DateTime" /> オブジェクトとして取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a DateTime value.">指定した列に DateTime 値が含まれていません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">指定した列の値を <see cref="T:System.Decimal" /> として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Decimal&quot; /&gt; value.">指定した列には <see langword="Decimal" /> 値が含まれていません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the value of the column as a double-precision floating point number.">列の値を倍精度浮動小数点数値として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based ordinal of the column.">列の 0 から始まる序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">閉じている <see langword="DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a double-precision floating point number.">指定した列に倍精度浮動小数点数が格納されていません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can be used to iterate through the item collection.">項目のコレクションを反復処理するために使用できる列挙子を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that represents the item collection.">項目のコレクションを表す <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">オブジェクトのデータ型である <see cref="T:System.Type" /> を取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">オブジェクトのデータ型である <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">指定された列の値を単精度浮動小数点値として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a single-precision floating point number.">指定した列に単精度浮動小数点数が格納されていません。</exception>
      <returns vsli:raw="The value of the column.">列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a globally-unique identifier (GUID).">指定された列の値をグローバル一意識別子 (GUID) として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a GUID.">指定した列に GUID が含まれていません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">指定した列の値を 16 ビット符号付き整数として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">列の 0 から始まる序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 16-bit signed integer.">指定した列に 16 ビット符号付き整数が格納されていません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">指定された列の値を 32 ビット符号付き整数として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">列の 0 から始まる序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 32-bit signed integer value.">指定した列に 32 ビット符号付き整数値が格納されていません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">指定された列の値を 64 ビット符号付き整数として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">列の 0 から始まる序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 64-bit signed integer value.">指定した列に 64 ビット符号付き整数値が格納されていません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">指定した列の値を <see cref="T:System.String" /> として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">列の 0 から始まる序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <returns vsli:raw="The name of the specified column.">指定された列の名前。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary vsli:raw="Gets the column ordinal, given the name of the column.">列の名前を指定して、列の序数を取得します。</summary>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <returns vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the type of the specified column in provider-specific format.">指定した列の型をプロバイダー固有の形式で取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">オブジェクトのデータ型である <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in provider-specific format.">指定した列の値をプロバイダー固有の形式で取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based number of the column whose value is retrieved.">値を取得した列の、0 から始まるインデックス番号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <returns vsli:raw="The value of the specified column in provider-specific format.">プロバイダー固有の形式による、指定した列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Fills the supplied array with provider-specific type information for all the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">指定された配列に、<see cref="T:System.Data.DataTableReader" /> のすべての列に関するプロバイダー固有の型の情報を格納します。</summary>
      <param name="values" vsli:raw="An array of objects to be filled in with type information for the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" /> の列の型情報を格納するオブジェクトの配列。</param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <returns vsli:raw="The number of column values copied into the array.">配列にコピーされる列の値の数。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の列メタデータを記述する <see cref="T:System.Data.DataTableReader" /> を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.DataTableReader" /> が閉じています。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">列メタデータを記述する <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a string.">指定した列の値を文字列として取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">列の 0 から始まる序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a string.">指定した列に文字列が含まれていません。</exception>
      <returns vsli:raw="The value of the specified column.">指定された列の値。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format.">指定した列の値をネイティブ形式で取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">列の 0 から始まる序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access columns in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <returns vsli:raw="The value of the specified column. This method returns &lt;see langword=&quot;DBNull&quot; /&gt; for null columns.">指定された列の値。 null 列の場合は、<see langword="DBNull" /> が返されます。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current row.">オブジェクトの配列に現在行の列値を設定します。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the column values from the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Object" /> の列の値のコピー先である <see cref="T:System.Data.DataTableReader" /> の配列。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <returns vsli:raw="The number of column values copied into the array.">配列にコピーされる列の値の数。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column contains non-existent or missing values.">列に格納されている値が存在しない値または欠損値かどうかを示す値を取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">列の 0 から始まる序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した列の値が <see cref="T:System.DBNull" /> と等価である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next result set, if any.">
        <see cref="T:System.Data.DataTableReader" /> を次の結果に進めます (存在する場合)。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to navigate within a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じられた <see cref="T:System.Data.DataTableReader" /> 内を移動しようとしました。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another result set; otherwise &lt;see langword=&quot;false&quot; /&gt;.">別の結果セットがあった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next record.">
        <see cref="T:System.Data.DataTableReader" /> を次のレコードに進めます。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another row to read; otherwise &lt;see langword=&quot;false&quot; /&gt;.">読み取る行が他にもあった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary vsli:raw="The depth of nesting for the current row of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" /> の現在の行の入れ子の深さ。</summary>
      <returns vsli:raw="The depth of nesting for the current row; always zero.">現在の行の入れ子の深さ。常に 0 になります。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary vsli:raw="Returns the number of columns in the current row.">現在の行の列数を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve the field count in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> 内のフィールド数を取得しようとしました。</exception>
      <returns vsli:raw="When not positioned in a valid result set, 0; otherwise the number of columns in the current row.">有効なレコードセットに位置していない場合は 0。それ以外の場合は現在の行の列数。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows.">
        <see cref="T:System.Data.DataTableReader" /> に 1 行以上の行が格納されているかどうかを示す値を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve information about a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じられた <see cref="T:System.Data.DataTableReader" /> に関する情報を取得しようとしました。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows; otherwise &lt;see langword=&quot;false&quot; /&gt;.">1 行以上の行が <see cref="T:System.Data.DataTableReader" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.DataTableReader" /> が閉じられているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" /> が閉じている場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column ordinal.">列の序数によって指定した列の値をネイティブ形式で取得します。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <returns vsli:raw="The value of the specified column in its native format.">指定された列のネイティブ形式の値です。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column name.">列名によって指定した列の値をネイティブ形式で取得します。</summary>
      <param name="name" vsli:raw="The name of the column.">列の名前。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">指定された名前は、有効な列名ではありません。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">削除した行からデータを取得しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">閉じている <see cref="T:System.Data.DataTableReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <returns vsli:raw="The value of the specified column in its native format.">指定された列のネイティブ形式の値です。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.">SQL ステートメントを実行したことで挿入、変更、または削除された行数を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; does not support this property and always returns 0.">
        <see cref="T:System.Data.DataTableReader" /> はこのプロパティをサポートしません。常に 0 を返します。</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary vsli:raw="Represents a databindable, customized view of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for sorting, filtering, searching, editing, and navigation. The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; does not store data, but instead represents a connected view of its corresponding &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;'s data will affect the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;'s data will affect all &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;s associated with it.">並べ替え、フィルター処理、検索、編集、およびナビゲーションを実行するための、データ連結可能な、カスタマイズされた <see cref="T:System.Data.DataTable" /> のビューを表します。 <see cref="T:System.Data.DataView" /> はデータを格納しませんが、代わりに対応する <see cref="T:System.Data.DataTable" /> の接続したビューを表します。 <see cref="T:System.Data.DataView" /> のデータに対して加えた変更は、<see cref="T:System.Data.DataTable" /> に影響します。 <see cref="T:System.Data.DataTable" /> のデータに対して加えた変更は、それに関連付けられているすべての <see cref="T:System.Data.DataView" /> に影響します。</summary>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary vsli:raw="Occurs when initialization of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is completed.">
        <see cref="T:System.Data.DataView" /> の初期化が完了した時点で発生します。</summary>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary vsli:raw="Occurs when the list managed by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; changes.">
        <see cref="T:System.Data.DataView" /> によって管理されているリストが変更されたときに発生します。</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class.">
        <see cref="T:System.Data.DataView" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> を指定して、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> に追加する <see cref="T:System.Data.DataTable" />。</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt;.">指定された <see cref="T:System.Data.DataTable" />、<see cref="P:System.Data.DataView.RowFilter" />、<see cref="P:System.Data.DataView.Sort" />、および <see cref="T:System.Data.DataViewRowState" /> を使用して、<see cref="T:System.Data.DataView" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> に追加する <see cref="T:System.Data.DataTable" />。</param>
      <param name="RowFilter" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> に適用する <see cref="P:System.Data.DataView.RowFilter" />。</param>
      <param name="Sort" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> に適用する <see cref="P:System.Data.DataView.Sort" />。</param>
      <param name="RowState" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> に適用する <see cref="T:System.Data.DataViewRowState" />。</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary vsli:raw="Adds a new row to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> に新しい行を追加します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; object.">新しい <see cref="T:System.Data.DataRowView" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary vsli:raw="Starts the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">フォームまたは別のコンポーネントで使用する <see cref="T:System.Data.DataView" /> の初期化を開始します。 初期化は実行時に発生します。</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> を閉じます。</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; has been changed successfully.">
        <see cref="T:System.Data.DataColumnCollection" /> が正常に変更された後に発生します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.ListChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies items into an array. Only for Web Forms Interfaces.">配列に項目をコピーします。 Web フォームのインターフェイスに対してのみ。</summary>
      <param name="array" vsli:raw="array to copy into.">コピー先の配列。</param>
      <param name="index" vsli:raw="index to start at.">開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary vsli:raw="Deletes a row at the specified index.">指定したインデックスの行を削除します。</summary>
      <param name="index" vsli:raw="The index of the row to delete.">削除する行のインデックス。</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary vsli:raw="Disposes of the resources (other than memory) used by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">
        <see cref="T:System.Data.DataView" /> オブジェクトによって使用されていたリソース (メモリを除く) を破棄します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">フォームまたは別のコンポーネントで使用する <see cref="T:System.Data.DataView" /> の初期化を終了します。 初期化は実行時に発生します。</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are considered equal.">指定された <see cref="T:System.Data.DataView" /> インスタンスが等しいかどうかを判断します。</summary>
      <param name="view" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Data.DataView" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの <see cref="T:System.Data.DataView" /> インスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key value.">指定された並べ替えキーの値で <see cref="T:System.Data.DataView" /> 内の行を検索します。</summary>
      <param name="key" vsli:raw="The object to search for.">検索するオブジェクト。</param>
      <returns vsli:raw="The index of the row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that contains the sort key value specified; otherwise -1 if the sort key value does not exist.">並べ替えキーの値が存在しない場合、指定された並べ替えキー値を含む <see cref="T:System.Data.DataView" /> の行のインデックス。指定された並べ替えキー値を含む行がない場合は -1。</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key values.">指定された並べ替えキーの値で <see cref="T:System.Data.DataView" /> 内の行を検索します。</summary>
      <param name="key" vsli:raw="An array of values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;.">
        <see cref="T:System.Object" /> 型の値の配列。</param>
      <returns vsli:raw="The index of the position of the first row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that matches the sort key values specified; otherwise -1 if there are no matching sort key values.">指定された並べ替えキーの値に一致する <see cref="T:System.Data.DataView" /> 内の最初の行の位置のインデックス。それ以外の場合で、一致する並べ替えキー値がない時は -1。</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">列が指定した並べ替えキーの値と一致する <see cref="T:System.Data.DataRowView" /> オブジェクトの配列を返します。</summary>
      <param name="key" vsli:raw="The column value, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">
        <see cref="T:System.Object" /> として型指定された、検索対象の列の値。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">指定した並べ替えキーの値と列が一致する <see langword="DataRowView" /> オブジェクトの配列。または、指定した並べ替えキーが行にない場合は、空の <see langword="DataRowView" /> 配列。</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">列が指定した並べ替えキーの値と一致する <see cref="T:System.Data.DataRowView" /> オブジェクトの配列を返します。</summary>
      <param name="key" vsli:raw="An array of column values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">
        <see cref="T:System.Object" /> として型指定された、検索対象の列の値の配列。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">指定した並べ替えキーの値と列が一致する <see langword="DataRowView" /> オブジェクトの配列。または、指定した並べ替えキーが行にない場合は、空の <see langword="DataRowView" /> 配列。</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary vsli:raw="Gets an enumerator for this &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">この <see cref="T:System.Data.DataView" /> の列挙子を取得します</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for navigating through the list.">リストを移動する <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; has been changed successfully.">
        <see cref="T:System.Data.DataView" /> が正常に変更された後に発生します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.ListChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataView.ListChanged&quot; /&gt; event.">
        <see cref="E:System.Data.DataView.ListChanged" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.ListChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> を開きます。</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary vsli:raw="Reserved for internal use only.">内部使用専用に予約されています。</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Add(System.Object)" />」をご覧ください。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 値。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Add(System.Object)" />」をご覧ください。</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Clear" />」をご覧ください。</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Contains(System.Object)" />」をご覧ください。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 値。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Contains(System.Object)" />」をご覧ください。</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.IndexOf(System.Object)" />」をご覧ください。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 値。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.IndexOf(System.Object)" />」をご覧ください。</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />」をご覧ください。</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">
        <see cref="T:System.Int32" /> 値。</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value to be inserted.">挿入する <see cref="T:System.Object" /> 値。</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Remove(System.Object)" />」をご覧ください。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 値。</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.RemoveAt(System.Int32)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />」をご覧ください。</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">
        <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />」をご覧ください。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IBindingList.AddNew" />」をご覧ください。</summary>
      <returns vsli:raw="The item added to the list.">リストに追加された項目。</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />」をご覧ください。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。</param>
      <param name="direction" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.ListSortDirection" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />」をご覧ください。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。</param>
      <param name="key" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 値。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />」をご覧ください。</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />」をご覧ください。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveSort&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IBindingList.RemoveSort" />」をご覧ください。</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />」をご覧ください。</summary>
      <param name="sorts" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDescriptionCollection&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.RemoveFilter&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />」をご覧ください。</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />」をご覧ください。</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">コレクションから検索するバインド可能な <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。 これは <see langword="null" /> でもかまいません。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">データ バインドに使用される各項目のプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />」をご覧ください。</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />」をご覧ください。</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">既存の<see cref="T:System.Data.DataView" /> の行に基づく新しい <see cref="T:System.Data.DataTable" /> を作成して返します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">要求した行と列を格納する新しい <see cref="T:System.Data.DataTable" /> インスタンス。</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">既存の<see cref="T:System.Data.DataView" /> の行に基づく新しい <see cref="T:System.Data.DataTable" /> を作成して返します。</summary>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> の場合、返された <see cref="T:System.Data.DataTable" /> にはすべての列に対して重複しない値を持つ行が含まれています。 既定値は <see langword="false" /> です。</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">返された <see cref="T:System.Data.DataTable" /> に含まれる列名の一覧を格納する文字列の配列。 <see cref="T:System.Data.DataTable" /> には、この配列内に表示される順序で、指定された列が含まれています。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">要求した行と列を格納する新しい <see cref="T:System.Data.DataTable" /> インスタンス。</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">既存の<see cref="T:System.Data.DataView" /> の行に基づく新しい <see cref="T:System.Data.DataTable" /> を作成して返します。</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">返された <see cref="T:System.Data.DataTable" /> の名前。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">要求した行と列を格納する新しい <see cref="T:System.Data.DataTable" /> インスタンス。</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">既存の<see cref="T:System.Data.DataView" /> の行に基づく新しい <see cref="T:System.Data.DataTable" /> を作成して返します。</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">返された <see cref="T:System.Data.DataTable" /> の名前。</param>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> の場合、返された <see cref="T:System.Data.DataTable" /> にはすべての列に対して重複しない値を持つ行が含まれています。 既定値は <see langword="false" /> です。</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see langword=&quot;DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">返された <see cref="T:System.Data.DataTable" /> に含まれる列名の一覧を格納する文字列の配列。 <see langword="DataTable" /> には、この配列内に表示される順序で、指定された列が含まれています。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">要求した行と列を格納する新しい <see cref="T:System.Data.DataTable" /> インスタンス。</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary vsli:raw="Reserved for internal use only.">内部使用専用に予約されています。</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary vsli:raw="Reserved for internal use only.">内部使用専用に予約されています。</summary>
      <param name="force" vsli:raw="Reserved for internal use only.">内部使用専用に予約されています。</param>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary vsli:raw="Gets or sets a value that indicates whether deletes are allowed.">削除が許可されているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if deletes are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">削除が許可される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary vsli:raw="Gets or sets a value that indicates whether edits are allowed.">更新が許可されるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if edits are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">更新が許可される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary vsli:raw="Gets or sets a value that indicates whether the new rows can be added by using the &lt;see cref=&quot;M:System.Data.DataView.AddNew&quot; /&gt; method.">
        <see cref="M:System.Data.DataView.AddNew" /> メソッドを使用して新しい行を追加できるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if new rows can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">新しい行を追加できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value that indicates whether to use the default sort. The default sort is (ascending) by all primary keys as specified by &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt;.">既定の並べ替えを使用するかどうかを示す値を取得または設定します。 既定の並べ替えは、<see cref="P:System.Data.DataTable.PrimaryKey" /> で指定されているとおり、すべての主キーで "昇順" です。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the default sort is used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">既定の並べ替えを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary vsli:raw="Gets the number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; after &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt; have been applied.">
        <see cref="P:System.Data.DataView.RowFilter" /> と <see cref="P:System.Data.DataView.RowStateFilter" /> が適用された後に、<see cref="T:System.Data.DataView" /> 内のレコード数を取得します。</summary>
      <returns vsli:raw="The number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> のレコード数です。</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; associated with this view.">このビューに関連付けられている <see cref="T:System.Data.DataViewManager" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataViewManager&quot; /&gt; that created this view. If this is the default &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, the &lt;see langword=&quot;DataViewManager&quot; /&gt; property returns the default &lt;see langword=&quot;DataViewManager&quot; /&gt; for the &lt;see langword=&quot;DataSet&quot; /&gt;. Otherwise, if the &lt;see langword=&quot;DataView&quot; /&gt; was created without a &lt;see langword=&quot;DataViewManager&quot; /&gt;, this property is &lt;see langword=&quot;null&quot; /&gt;.">このビューを作成した <see langword="DataViewManager" />。 これが <see cref="T:System.Data.DataTable" /> の既定値 <see cref="T:System.Data.DataView" /> である場合、<see langword="DataViewManager" /> プロパティは <see langword="DataSet" /> の既定値 <see langword="DataViewManager" /> を返します。 それ以外の場合、つまり <see langword="DataViewManager" /> を使用せずに <see langword="DataView" /> が作成された場合は、このプロパティは <see langword="null" /> になります。</returns>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the component is initialized.">コンポーネントが初期化されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンポーネントの初期化が完了していることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary vsli:raw="Gets a value that indicates whether the data source is currently open and projecting views of data on the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">データ ソースが現在開かれており、かつ <see cref="T:System.Data.DataTable" /> 上のデータのビューを投射しているのかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the source is open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ソースが開かれている場合、<see langword="true" />。それ以外の場合、<see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary vsli:raw="Gets a row of data from a specified table.">指定したテーブルからデータの行を取得します。</summary>
      <param name="recordIndex" vsli:raw="The index of a record in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 内のレコードのインデックス。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; of the row that you want.">目的の行の <see cref="T:System.Data.DataRowView" />。</returns>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary vsli:raw="Gets or sets the expression used to filter which rows are viewed in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> の中で表示する行のフィルター処理に使用する式を取得または設定します。</summary>
      <returns vsli:raw="A string that specifies how rows are to be filtered.">行のフィルター処理方法を指定する文字列。</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary vsli:raw="Gets or sets the row state filter used in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> で使用される行の状態のフィルターを取得または設定します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataViewRowState" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary vsli:raw="Gets or sets the sort column or columns, and sort order for the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">1 つ以上の並べ替え列、および <see cref="T:System.Data.DataView" /> の並べ替え順序を取得または設定します。</summary>
      <returns vsli:raw="A string that contains the column name followed by &quot;ASC&quot; (ascending) or &quot;DESC&quot; (descending). Columns are sorted ascending by default. Multiple columns can be separated by commas.">列名の後に "ASC" (昇順) または "DESC" (降順) を含む文字列。 既定では列は昇順で並べ替えられます。 複数の列をコンマで区切ることができます。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.IsSynchronized" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.IsSynchronized" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.SyncRoot" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.SyncRoot" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsFixedSize" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsFixedSize" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsReadOnly" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsReadOnly" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.IList.Item(System.Int32)" />」をご覧ください。</summary>
      <param name="recordIndex" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">
        <see cref="T:System.Int32" /> 値。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.IList.Item(System.Int32)" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.AllowEdit" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.AllowEdit" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.AllowNew" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.AllowNew" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.AllowRemove" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.AllowRemove" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.IsSorted" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.IsSorted" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SortDirection" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SortDirection" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SortProperty" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SortProperty" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingListView.Filter" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingListView.Filter" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary vsli:raw="Gets or sets the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">ソース <see cref="T:System.Data.DataTable" /> を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that provides the data for this view.">このビューに対してデータを提供する <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary vsli:raw="Contains a default &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> の <see cref="T:System.Data.DataTable" /> ごとに、既定の <see cref="T:System.Data.DataViewSettingCollection" /> が含まれています。</summary>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary vsli:raw="Occurs after a row is added to or deleted from a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> に対して行を追加または削除した後に発生します。</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class.">
        <see cref="T:System.Data.DataViewManager" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定した <see cref="T:System.Data.DataSet" /> の <see cref="T:System.Data.DataViewManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataSet" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">使用する <see cref="T:System.Data.DataSet" /> の名前です。</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">指定した <see cref="T:System.Data.DataTable" /> に対して <see cref="T:System.Data.DataView" /> を作成します。</summary>
      <param name="table" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 内で使用する <see cref="T:System.Data.DataView" /> の名前。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">
        <see cref="T:System.Data.DataView" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataViewManager.ListChanged&quot; /&gt; event.">
        <see cref="E:System.Data.DataViewManager.ListChanged" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.ListChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> に <see cref="T:System.Data.DataRelation" /> が追加されるか削除されたときに、<see cref="T:System.Data.DataRelationCollection" /> イベントを発生させます。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">
        <see cref="T:System.Collections.ICollection" /> の要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.ICollection" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Collections.IList" /> に項目を追加します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Object" /> に追加する <see cref="T:System.Collections.IList" />。</param>
      <returns vsli:raw="The position into which the new element was inserted.">新しい要素が挿入された位置。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Clear" />」をご覧ください。</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; contains a specific value.">
        <see cref="T:System.Collections.IList" /> に特定の値が格納されているかどうかを判断します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Collections.IList" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Object" /> が <see cref="T:System.Collections.IList" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Collections.IList" /> 内の特定の項目のインデックスを確認します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Collections.IList" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; at the specified index.">指定したインデックスの <see cref="T:System.Collections.IList" /> に項目を挿入します。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert into the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Collections.IList" /> に挿入する <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">特定のオブジェクトが <see cref="T:System.Collections.IList" /> 内にあるときに、最初に出現したものを削除します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Object" /> から削除する <see cref="T:System.Collections.IList" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; item at the specified index.">指定したインデックスにある <see cref="T:System.Collections.IList" /> 項目を削除します。</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">削除する項目の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to the indexes used for searching.">検索に使用されるインデックスに <see cref="T:System.ComponentModel.PropertyDescriptor" /> を追加します。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to add to the indexes used for searching.">検索に使用されるインデックスに追加する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IBindingList.AddNew" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IBindingList.AddNew" />」をご覧ください。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Sorts the list based on a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; and a &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> と <see cref="T:System.ComponentModel.ListSortDirection" /> に基づいて並べ替えを行います。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to sort by.">並べ替えのキーとなる <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; values.">
        <see cref="T:System.ComponentModel.ListSortDirection" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="Returns the index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">指定された <see cref="T:System.ComponentModel.PropertyDescriptor" /> を保持する行のインデックスを返します。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to search on.">検索対象の <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="key" vsli:raw="The value of the property parameter to search for.">検索する property パラメーターの値。</param>
      <returns vsli:raw="The index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">指定された <see cref="T:System.ComponentModel.PropertyDescriptor" /> を保持する行のインデックス。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; from the indexes used for searching.">検索に使用されるインデックスから <see cref="T:System.ComponentModel.PropertyDescriptor" /> を削除します。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to remove from the indexes used for searching.">検索に使用されるインデックスから削除する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="Removes any sort applied using &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">
        <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /> を使用して並べ替えを適用した場合は、その並べ替えを削除します。</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">データ バインドに使用される各項目のプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> を返します。</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">コレクションから検索するバインド可能な <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。 これは <see langword="null" /> でもかまいません。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">データ バインドに使用される各項目のプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the name of the list.">リストの名前を返します。</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects, for which the list name is returned. This can be &lt;see langword=&quot;null&quot; /&gt;.">リスト名を返す対象の <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。 これは <see langword="null" /> でもかまいません。</param>
      <returns vsli:raw="The name of the list.">リストの名前。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataTableCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">
        <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> に <see cref="T:System.Data.DataTable" /> が追加されるか削除されたときに、<see cref="T:System.Data.DataTableCollection" /> イベントを発生させます。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</param>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use with the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> で使用する <see cref="T:System.Data.DataViewManager" /> を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">使用する <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary vsli:raw="Gets or sets a value that is used for code persistence.">コードの永続化に使用する値を取得または設定します。</summary>
      <returns vsli:raw="A value that is used for code persistence.">コードの永続化に使用する値。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSettingCollection" /> 内の各 <see cref="T:System.Data.DataTable" /> の <see cref="T:System.Data.DataSet" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see langword=&quot;DataTable&quot; /&gt;.">各 <see langword="DataTable" /> の <see cref="T:System.Data.DataViewSettingCollection" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.Count" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.Count" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.IsSynchronized" />」をご覧ください。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.SyncRoot" />」をご覧ください。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> へのアクセスの同期に使用できるオブジェクトです。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsFixedSize" />」をご覧ください。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsReadOnly" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsReadOnly" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns vsli:raw="The element at the specified index.">指定したインデックス位置にある要素。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.AllowEdit" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.AllowEdit" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.AllowNew" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.AllowNew" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.AllowRemove" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.AllowRemove" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.IsSorted" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.IsSorted" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SortDirection" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SortDirection" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SortProperty" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SortProperty" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />」をご覧ください。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />」をご覧ください。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />」をご覧ください。</returns>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary vsli:raw="Describes the version of data in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> 内のデータのバージョンを記述します。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary vsli:raw="A new row.">新しい行。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary vsli:raw="Current rows including unchanged, new, and modified rows. By default, &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; is set to CurrentRows.">変更されていない行、新しい行、および変更された行を含む現在の行。 既定では、<see cref="T:System.Data.DataViewRowState" /> は CurrentRows に設定されています。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary vsli:raw="A deleted row.">削除された行。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary vsli:raw="A current version of original data that has been modified (see &lt;see langword=&quot;ModifiedOriginal&quot; /&gt;).">変更された元のデータの現在のバージョン (<see langword="ModifiedOriginal" /> を参照)。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary vsli:raw="The original version of the data that was modified. (Although the data has since been modified, it is available as &lt;see langword=&quot;ModifiedCurrent&quot; /&gt;).">変更されたデータの元のバージョン。 (データは変更されても、<see langword="ModifiedCurrent" /> として利用可能です)。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary vsli:raw="None.">[なし] :</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary vsli:raw="Original rows including unchanged and deleted rows.">変更されていない行と削除された行を含む元の行。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary vsli:raw="An unchanged row.">変更されていない行。</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary vsli:raw="Represents the default settings for &lt;see cref=&quot;P:System.Data.DataView.ApplyDefaultSort&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.DataViewManager&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;P:System.Data.DataView.Table&quot; /&gt; for DataViews created from the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">
        <see cref="P:System.Data.DataView.ApplyDefaultSort" /> から作成された DataView の <see cref="P:System.Data.DataView.DataViewManager" />、<see cref="P:System.Data.DataView.RowFilter" />、<see cref="P:System.Data.DataView.RowStateFilter" />、<see cref="P:System.Data.DataView.Sort" />、<see cref="P:System.Data.DataView.Table" />、および <see cref="T:System.Data.DataViewManager" /> の既定の設定を表します。</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value indicating whether to use the default sort.">既定の並べ替えを使用するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default sort is used; otherwise &lt;see langword=&quot;false&quot; /&gt;.">既定の並べ替えを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; that contains this &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt;.">この <see cref="T:System.Data.DataViewManager" /> を格納している <see cref="T:System.Data.DataViewSetting" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">
        <see cref="T:System.Data.DataViewManager" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary vsli:raw="Gets or sets the filter to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;. See &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; for a code sample using RowFilter.">
        <see cref="T:System.Data.DataView" /> 内で適用するフィルターを取得または設定します。 RowFilter を使用するコード例については、「<see cref="P:System.Data.DataView.RowFilter" />」を参照してください。</summary>
      <returns vsli:raw="A string that contains the filter to apply.">適用するフィルターを格納している文字列。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary vsli:raw="Gets or sets a value indicating whether to display Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged, or no rows in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> 内で Current、Deleted、Modified Current、ModifiedOriginal、New、Original、または Unchanged のいずれかの状態の行を表示するか、または行を表示しないかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="A value that indicates which rows to display.">表示する行を示す値。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary vsli:raw="Gets or sets a value indicating the sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> 内で適用する並べ替えを示す値を取得または設定します。</summary>
      <returns vsli:raw="The sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> に適用される並べ替え。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; properties apply.">
        <see cref="T:System.Data.DataTable" /> プロパティを適用する <see cref="T:System.Data.DataViewSetting" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary vsli:raw="Contains a read-only collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSetting" /> 内の各 <see cref="T:System.Data.DataTable" /> に対する <see cref="T:System.Data.DataSet" /> オブジェクトの読み取り専用コレクションを格納しています。</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">指定したインデックスをコピー開始位置として、1 次元の <see cref="T:System.Array" /> インスタンスにコレクション オブジェクトをコピーします。</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">コレクションから値がコピーされる先の 1 次元の <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">挿入の開始位置を示す、配列内のインデックス。</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">指定したインデックスをコピー開始位置として、1 次元の <see cref="T:System.Array" /> インスタンスにコレクション オブジェクトをコピーします。</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">コレクションから値がコピーされる先の 1 次元の <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">挿入の開始位置を示す、配列内のインデックス。</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">コレクションの <see cref="T:System.Collections.IEnumerator" /> を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object.">
        <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSetting" /> に含まれる <see cref="T:System.Data.DataViewSettingCollection" /> オブジェクトの数を取得します。</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the collection.">コレクションに含まれる <see cref="T:System.Data.DataViewSetting" /> オブジェクトの数です。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is read-only.">
        <see cref="T:System.Data.DataViewSettingCollection" /> が読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt; to indicate the collection is read-only.">
        <see langword="true" />コレクションが読み取り専用であることを示すために、常にを返します。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is synchronized (thread-safe).">
        <see cref="T:System.Data.DataViewSettingCollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;false&quot; /&gt;, unless overridden by a derived class.">このプロパティは、派生クラスでオーバーライドされない限り、常に <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the collection.">指定した <see cref="T:System.Data.DataViewSetting" /> の <see cref="T:System.Data.DataTable" /> オブジェクトをコレクションから取得します。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">検索する <see cref="T:System.Data.DataTable" />。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">
        <see cref="T:System.Data.DataViewSetting" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its index.">インデックスで指定した <see cref="T:System.Data.DataViewSetting" /> の <see cref="T:System.Data.DataTable" /> オブジェクトを取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">検索する <see cref="T:System.Data.DataTable" /> の 0 から始まるインデックスです。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">
        <see cref="T:System.Data.DataViewSetting" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its name.">名前で指定した <see cref="T:System.Data.DataViewSetting" /> の <see cref="T:System.Data.DataTable" /> を取得します。</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">検索する <see cref="T:System.Data.DataTable" /> の名前です。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">
        <see cref="T:System.Data.DataViewSetting" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSettingCollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSettingCollection" /> へのアクセスの同期に使用できるオブジェクトです。</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary vsli:raw="The exception that is thrown by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; during an insert, update, or delete operation if the number of rows affected equals zero.">挿入、更新、または削除操作中に影響を受ける行数が 0 になった場合に <see cref="T:System.Data.Common.DataAdapter" /> によってスローされる例外。</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">
        <see cref="T:System.Data.DBConcurrencyException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">
        <see cref="T:System.Data.DBConcurrencyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">例外の詳細を説明する文字列。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">
        <see cref="T:System.Data.DBConcurrencyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">例外の詳細を説明する文字列。</param>
      <param name="inner" vsli:raw="A reference to an inner exception.">内部例外への参照。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">
        <see cref="T:System.Data.DBConcurrencyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for this exception.">この例外の原因を説明するエラー メッセージ。</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
      <param name="dataRows" vsli:raw="An array containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception.">この例外を生成する原因となった、更新が失敗した <see cref="T:System.Data.DataRow" /> オブジェクトを格納している配列。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">この例外を生成する原因となった、更新が失敗した <see cref="T:System.Data.DataRow" /> オブジェクトを、<see cref="T:System.Data.DataRow" /> オブジェクトの指定した配列にコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">
        <see cref="T:System.Data.DataRow" /> オブジェクトのコピー先の <see cref="T:System.Data.DataRow" /> オブジェクトの 1 次元配列。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, starting at the specified destination array index.">指定したコピー先の配列のインデックスを開始位置として、この例外を生成する原因となった、更新が失敗した <see cref="T:System.Data.DataRow" /> オブジェクトを、<see cref="T:System.Data.DataRow" /> オブジェクトの指定した配列にコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">
        <see cref="T:System.Data.DataRow" /> オブジェクトのコピー先の <see cref="T:System.Data.DataRow" /> オブジェクトの 1 次元配列。</param>
      <param name="arrayIndex" vsli:raw="The destination array index to start copying into.">コピーを開始するコピー先の配列のインデックス。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates the specified serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">
        <see cref="T:System.Data.DBConcurrencyException" /> をシリアル化するために必要なデータを指定したシリアル化情報オブジェクトに設定します。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> と関連付けるシリアル化データを保持する <see cref="T:System.Data.DBConcurrencyException" />。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> に関連付けるシリアル化ストリームの転送元および転送先を格納する <see cref="T:System.Data.DBConcurrencyException" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="info" /> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that generated the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> を生成した <see cref="T:System.Data.DBConcurrencyException" /> の値を取得または設定します。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> の値です。</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary vsli:raw="Gets the number of rows whose update failed, generating this exception.">この例外を生成する原因となった、更新が失敗した行の数を取得します。</summary>
      <returns vsli:raw="An integer containing a count of the number of rows whose update failed.">更新が失敗した行の数を格納する整数。</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary vsli:raw="Specifies the data type of a field, a property, or a &lt;see langword=&quot;Parameter&quot; /&gt; object of a .NET data provider.">.NET Framework データ プロバイダーのフィールド、プロパティ、または <see langword="Parameter" /> オブジェクトのデータ型を指定します。</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary vsli:raw="A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">1 から 8,000 文字の範囲内の非 Unicode 文字の可変長ストリーム。</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary vsli:raw="A fixed-length stream of non-Unicode characters.">非 Unicode 文字の固定長ストリーム。</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary vsli:raw="A variable-length stream of binary data ranging between 1 and 8,000 bytes.">1 から 8,000 バイトの範囲内のバイナリ データの可変長ストリーム。</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary vsli:raw="A simple type representing Boolean values of &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> または <see langword="false" /> のブール値を表す単純型。</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary vsli:raw="An 8-bit unsigned integer ranging in value from 0 to 255.">値が 0 から 255 までの範囲内の 8 ビット符号なし整数。</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary vsli:raw="A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit.">精度が通貨単位の 1/10,000 の、 -2 63 (または -922,337,203,685,477.5808) から 2 63 -1 (または +922,337,203,685,477.5807) までの範囲内の通貨値。</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary vsli:raw="A type representing a date value.">日付の値を表す型。</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary vsli:raw="A type representing a date and time value.">日時の値を表す型。</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">日付と時刻のデータ。 日付の値の範囲は、AD 1 年 1 月 1 日から AD 9999 年 12 月 31 日です。 時刻の値の範囲は、00:00:00 から 23:59:59.9999999 で、精度は 100 ナノ秒です。</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">タイム ゾーンに対応した日付と時刻。 日付の値の範囲は、AD 1 年 1 月 1 日から AD 9999 年 12 月 31 日です。 時刻の値の範囲は、00:00:00 から 23:59:59.9999999 で、精度は 100 ナノ秒です。 タイム ゾーンの値の範囲は、-14:00 から +14:00 です。</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary vsli:raw="A simple type representing values ranging from 1.0 x 10 -28 to approximately 7.9 x 10 28 with 28-29 significant digits.">1.0 × 10 -28 から概数 7.9 × 10 28 までの範囲で、有効桁数が 28 または 29 の値を表す単純型。</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary vsli:raw="A floating point type representing values ranging from approximately 5.0 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.">概数 5.0 × 10 -324 から 1.7 × 10 308 までの範囲で、有効桁数が 15 または 16 の値を表す浮動小数点型。</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary vsli:raw="A globally unique identifier (or GUID).">グローバル一意識別子 (GUID)。</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary vsli:raw="An integral type representing signed 16-bit integers with values between -32768 and 32767.">-32768 から 32767 までの値を保持する符号付き 16 ビット整数を表す整数型。</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary vsli:raw="An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647.">-2147483648 から 2147483647 までの値を保持する符号付き 32 ビット整数を表す整数型。</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary vsli:raw="An integral type representing signed 64-bit integers with values between -9223372036854775808 and 9223372036854775807.">-9223372036854775808 から 9223372036854775807 までの値を保持する符号付き 64 ビット整数を表す整数型。</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary vsli:raw="A general type representing any reference or value type not explicitly represented by another &lt;see langword=&quot;DbType&quot; /&gt; value.">別の <see langword="DbType" /> 値で明示的に表されていない参照型または値型を表す汎用型。</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary vsli:raw="An integral type representing signed 8-bit integers with values between -128 and 127.">-128 から 127 までの値を保持する符号付き 8 ビット整数を表す整数型。</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary vsli:raw="A floating point type representing values ranging from approximately 1.5 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.">概数 1.5 x 10 -45 から 3.4 x 10 38 までの範囲で、有効桁数が 7 の値を表す浮動小数点型。</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary vsli:raw="A type representing Unicode character strings.">Unicode 文字列を表す型。</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary vsli:raw="A fixed-length string of Unicode characters.">Unicode 文字の固定長文字列。</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary vsli:raw="A type representing a SQL Server &lt;see langword=&quot;DateTime&quot; /&gt; value. If you want to use a SQL Server &lt;see langword=&quot;time&quot; /&gt; value, use &lt;see cref=&quot;F:System.Data.SqlDbType.Time&quot; /&gt;.">SQL Server の <see langword="DateTime" /> 値を表す型。 SQL Server の <see langword="time" /> 値を使用する場合は、<see cref="F:System.Data.SqlDbType.Time" /> を使用してください。</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary vsli:raw="An integral type representing unsigned 16-bit integers with values between 0 and 65535.">0 から 65535 までの値を保持する符号なし 16 ビット整数を表す整数型。</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary vsli:raw="An integral type representing unsigned 32-bit integers with values between 0 and 4294967295.">0 から 4294967295 までの値を保持する符号なし 32 ビット整数を表す整数型。</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary vsli:raw="An integral type representing unsigned 64-bit integers with values between 0 and 18446744073709551615.">0 から 18446744073709551615 までの値を保持する符号なし 64 ビット整数を表す整数型。</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary vsli:raw="A variable-length numeric value.">可変長数値。</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary vsli:raw="A parsed representation of an XML document or fragment.">解析された XML ドキュメントまたは XML フラグメントの表現。</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary vsli:raw="Represents the exception that is thrown when an action is tried on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">削除された <see cref="T:System.Data.DataRow" /> でアクションを実行しようとしたときにスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class.">
        <see cref="T:System.Data.DeletedRowInaccessibleException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with serialization information.">シリアル化情報を指定して、<see cref="T:System.Data.DeletedRowInaccessibleException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定したシリアル化ストリームの転送元と転送先の説明。</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.DeletedRowInaccessibleException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.DeletedRowInaccessibleException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary vsli:raw="Represents the exception that is thrown when a duplicate database object name is encountered during an add operation in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; -related object.">
        <see cref="T:System.Data.DataSet" /> 関連オブジェクトで追加操作を実行中に、重複するデータベース オブジェクト名が発見されたときにスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class.">
        <see cref="T:System.Data.DuplicateNameException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with serialization information.">シリアル化情報を指定して、<see cref="T:System.Data.DuplicateNameException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定したシリアル化ストリームの転送元と転送先の説明。</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.DuplicateNameException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string and exception.">指定した文字列と例外を使用して、<see cref="T:System.Data.DuplicateNameException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a LINQ to DataSet query. This API supports the .NET infrastructure and is not intended to be used directly from your code.">LINQ to DataSet クエリから返される <see cref="T:System.Data.DataRow" /> オブジェクトのコレクションを表します。 この API は、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects. This API supports the .NET infrastructure and is not intended to be used directly from your code.">
        <see cref="T:System.Data.DataRow" /> オブジェクトのコレクションの列挙子を返します。 この API は、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Collections.IEnumerator" /> オブジェクトのコレクションをスキャンするために使用できる <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">クエリから返される <see cref="T:System.Data.DataRow" /> オブジェクトのコレクションを表します。</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">ソース シーケンスのオブジェクトの型 (通常は <see cref="T:System.Data.DataRow" />)。</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of contained row objects.">格納されている行オブジェクトのコレクションの列挙子を返します。</summary>
      <returns vsli:raw="A strongly-typed &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to traverse the collection of &lt;paramref name=&quot;TRow&quot; /&gt; objects.">
        <paramref name="TRow" /> オブジェクトのコレクションをスキャンするために使用できる、厳密に型指定された <see cref="T:System.Collections.Generic.IEnumerator`1" />。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> オブジェクトのコレクションの列挙子を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Collections.IEnumerator" /> オブジェクトのコレクションをスキャンするために使用できる <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary vsli:raw="Contains the extension methods for the data row collection classes.">データ行コレクション クラスの拡張メソッドが含まれます。</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; to the specified type.">
        <see cref="T:System.Data.EnumerableRowCollection" /> の要素を指定した型に変換します。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains the elements to be converted.">変換する要素が格納されている <see cref="T:System.Data.EnumerableRowCollection" />。</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of source to.">元の要素の変換後の型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="An element in the sequence cannot be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">シーケンスの要素を <paramref name="TResult" /> 型にキャストできません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">指定した型に変換されたソース シーケンスの各要素が格納されている <see cref="T:System.Data.EnumerableRowCollection" />。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">
        <see cref="T:System.Data.EnumerableRowCollection" /> の行を指定したキーに従って昇順に並べ替えます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">並べ替えられる <see cref="T:System.Data.EnumerableRowCollection" /> 要素を含む <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">要素が指定したキーで並べ替えられている <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">
        <see cref="T:System.Data.EnumerableRowCollection" /> の行を指定したキーと比較子に従って昇順に並べ替えます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">並べ替えられる <see cref="T:System.Data.EnumerableRowCollection" /> 要素を含む <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">要素が指定したキーと比較子で並べ替えられている <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">
        <see cref="T:System.Data.EnumerableRowCollection" /> の行を指定したキーに従って降順に並べ替えます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">並べ替えられる <see cref="T:System.Data.EnumerableRowCollection" /> 要素を含む <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">要素が指定したキーで並べ替えられている <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">
        <see cref="T:System.Data.EnumerableRowCollection" /> の行を指定したキーと比較子に従って降順に並べ替えます。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">並べ替えられる <see cref="T:System.Data.EnumerableRowCollection" /> 要素を含む <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">要素が指定したキーと比較子で並べ替えられている <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; into a new form.">
        <see cref="T:System.Data.EnumerableRowCollection`1" /> の各要素を新しいフォームに射影します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transform function upon.">変換関数を呼び出す <see cref="T:System.Data.EnumerableRowCollection`1" /> 要素を格納する <see cref="T:System.Data.DataRow" />。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="S" vsli:raw="The type that &lt;paramref name=&quot;TRow&quot; /&gt; will be transformed into.">
        <paramref name="TRow" /> の変換先の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の各要素に対して変換関数を呼び出した結果として得られる要素を含む <see cref="T:System.Data.EnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">
        <see cref="T:System.Data.EnumerableRowCollection" /> の行の 2 番目の並べ替えを、指定したキーに従って昇順で行います。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">並べ替えられる <see cref="T:System.Data.EnumerableRowCollection" /> 要素を含む <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">要素が指定したキーで並べ替えられている <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">
        <see cref="T:System.Data.EnumerableRowCollection" /> の行の 2 番目の並べ替えを、指定したキーと比較子に従って昇順で行います。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">並べ替えられる <see cref="T:System.Data.EnumerableRowCollection" /> 要素を含む <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">要素が指定したキーと比較子で並べ替えられている <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">
        <see cref="T:System.Data.EnumerableRowCollection" /> の行の 2 番目の並べ替えを、指定したキーに従って降順で行います。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">並べ替えられる <see cref="T:System.Data.EnumerableRowCollection" /> 要素を含む <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">要素が指定したキーで並べ替えられている <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">
        <see cref="T:System.Data.EnumerableRowCollection" /> の行の 2 番目の並べ替えを、指定したキーと比較子に従って降順で行います。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">並べ替えられる <see cref="T:System.Data.EnumerableRowCollection" /> 要素を含む <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">要素が指定したキーと比較子で並べ替えられている <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">指定した述語に基づいて行のシーケンスをフィルター処理します。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">フィルター処理する <see cref="T:System.Data.EnumerableRowCollection" /> 要素を格納している <see cref="T:System.Data.DataRow" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">条件を満たす、入力シーケンスの行を含む <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; cannot be evaluated.">
        <see cref="P:System.Data.DataColumn.Expression" /> の <see cref="T:System.Data.DataColumn" /> プロパティを評価できないときにスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class.">
        <see cref="T:System.Data.EvaluateException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">
        <see cref="T:System.Data.EvaluateException" /> と <see cref="T:System.Runtime.Serialization.SerializationInfo" /> を使用して、<see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータです。</param>
      <param name="context" vsli:raw="The source and destination of a particular serialized stream.">特定のシリアル化ストリームの転送元と転送先。</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.EvaluateException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.EvaluateException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="E:System.Data.Common.DataAdapter.FillError" /> の <see cref="T:System.Data.Common.DbDataAdapter" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.FillErrorEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">更新されていた <see cref="T:System.Data.DataTable" />。</param>
      <param name="values" vsli:raw="The values for the row being updated.">更新されていた行の値。</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary vsli:raw="Gets or sets a value indicating whether to continue the fill operation despite the error.">エラーが発生しても格納操作を続行するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the fill operation should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">格納操作を続行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated when the error occurred.">エラーが発生したときに更新されていた <see cref="T:System.Data.DataTable" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">更新されていた <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary vsli:raw="Gets the errors being handled.">処理中のエラーを取得します。</summary>
      <returns vsli:raw="The errors being handled.">処理中のエラー。</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary vsli:raw="Gets the values for the row being updated when the error occurred.">エラーが発生したときに更新されていた行の値を取得します。</summary>
      <returns vsli:raw="The values for the row being updated.">更新されていた行の値。</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event.">
        <see cref="E:System.Data.Common.DataAdapter.FillError" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.FillErrorEventArgs" />。</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary vsli:raw="Represents an action restriction enforced on a set of columns in a primary key/foreign key relationship when a value or row is either deleted or updated.">値または行を削除または更新したときに、主キーと外部キーのリレーションシップに関係する列セットに対して適用するアクション制約を表します。</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">親子の <see cref="T:System.Data.ForeignKeyConstraint" /> オブジェクトを指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">制約内の親 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">制約内の子 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">列の一方または両方が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列のデータ型が異なります。  
  
- または - 
テーブルが同じ <see cref="T:System.Data.DataSet" /> に属していません。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">親子の <see cref="T:System.Data.ForeignKeyConstraint" /> オブジェクトの配列を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">制約内の親 <see cref="T:System.Data.DataColumn" /> の配列。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">制約内の子 <see cref="T:System.Data.DataColumn" /> の配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">列の一方または両方が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列のデータ型が異なります。  
  
- または - 
テーブルが同じ <see cref="T:System.Data.DataSet" /> に属していません。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">名前と親子の <see cref="T:System.Data.ForeignKeyConstraint" /> オブジェクトを指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">制約の名前。</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">制約内の親 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">制約内の子 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">列の一方または両方が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列のデータ型が異なります。  
  
- または - 
テーブルが同じ <see cref="T:System.Data.DataSet" /> に属していません。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, and arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">名前と親子の <see cref="T:System.Data.ForeignKeyConstraint" /> オブジェクトの配列を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or empty string, a default name will be given when added to the constraints collection.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> の名前。 <see langword="null" /> または空の文字列の場合は、制約コレクションに追加したときに既定の名前が付けられます。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">制約内の親 <see cref="T:System.Data.DataColumn" /> の配列。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">制約内の子 <see cref="T:System.Data.DataColumn" /> の配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">列の一方または両方が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列のデータ型が異なります。  
  
- または - 
テーブルが同じ <see cref="T:System.Data.DataSet" /> に属していません。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">このコンストラクターは、Visual Studio 環境でのデザイン時のサポートのために用意されています。 このコンストラクターを使用して作成した <see cref="T:System.Data.ForeignKeyConstraint" /> オブジェクトは、<see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" /> を使用してコレクションに追加する必要があります。 このメソッドを呼び出したときに、指定した名前のテーブルと列が存在している必要があります。このコンストラクターを呼び出す前に <see cref="M:System.Data.DataTable.BeginInit" /> を呼び出した場合は、<see cref="M:System.Data.DataTable.EndInit" /> を呼び出したときに、指定した名前のテーブルと列が存在している必要があります。</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">制約の名前。</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">制約内の親 <see cref="T:System.Data.DataTable" /> オブジェクトを格納している親 <see cref="T:System.Data.DataColumn" /> の名前。</param>
      <param name="parentTableNamespace" vsli:raw="The name of the &lt;see cref=&quot;P:System.Data.DataTable.Namespace&quot; /&gt;.">
        <see cref="P:System.Data.DataTable.Namespace" /> の名前。</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">制約内の親 <see cref="T:System.Data.DataColumn" /> オブジェクトの名前の配列。</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">制約内の子 <see cref="T:System.Data.DataColumn" /> オブジェクトの名前の配列。</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">
        <see cref="T:System.Data.AcceptRejectRule" /> 値のいずれか 1 つ。 使用できる値は、<see langword="None" />、<see langword="Cascade" />、および <see langword="Default" /> です。</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">行が削除されたときに使用する <see cref="T:System.Data.Rule" /> 値の 1 つ。 既定値は、<see langword="Cascade" /> です。 使用できる値は、<see langword="None" />、<see langword="Cascade" />、<see langword="SetNull" />、<see langword="SetDefault" />、<see langword="Default" /> などです。</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">行が更新されたときに使用する <see cref="T:System.Data.Rule" /> 値の 1 つ。 既定値は、<see langword="Cascade" /> です。 使用できる値は、<see langword="None" />、<see langword="Cascade" />、<see langword="SetNull" />、<see langword="SetDefault" />、<see langword="Default" /> などです。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">列の一方または両方が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列のデータ型が異なります。  
  
- または - 
テーブルが同じ <see cref="T:System.Data.DataSet" /> に属していません。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">このコンストラクターは、Visual Studio 環境でのデザイン時のサポートのために用意されています。 このコンストラクターを使用して作成した <see cref="T:System.Data.ForeignKeyConstraint" /> オブジェクトは、<see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" /> を使用してコレクションに追加する必要があります。 このメソッドを呼び出したときに、指定した名前のテーブルと列が存在している必要があります。このコンストラクターを呼び出す前に <see cref="M:System.Data.DataTable.BeginInit" /> を呼び出した場合は、<see cref="M:System.Data.DataTable.EndInit" /> を呼び出したときに、指定した名前のテーブルと列が存在している必要があります。</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">制約の名前。</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">制約内の親 <see cref="T:System.Data.DataTable" /> オブジェクトを格納している親 <see cref="T:System.Data.DataColumn" /> の名前。</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">制約内の親 <see cref="T:System.Data.DataColumn" /> オブジェクトの名前の配列。</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">制約内の子 <see cref="T:System.Data.DataColumn" /> オブジェクトの名前の配列。</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">
        <see cref="T:System.Data.AcceptRejectRule" /> 値のいずれか 1 つ。 使用できる値は、<see langword="None" />、<see langword="Cascade" />、および <see langword="Default" /> です。</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">行が削除されたときに使用する <see cref="T:System.Data.Rule" /> 値の 1 つ。 既定値は、<see langword="Cascade" /> です。 使用できる値は、<see langword="None" />、<see langword="Cascade" />、<see langword="SetNull" />、<see langword="SetDefault" />、<see langword="Default" /> などです。</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">行が更新されたときに使用する <see cref="T:System.Data.Rule" /> 値の 1 つ。 既定値は、<see langword="Cascade" /> です。 使用できる値は、<see langword="None" />、<see langword="Cascade" />、<see langword="SetNull" />、<see langword="SetDefault" />、<see langword="Default" /> などです。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">列の一方または両方が <see langword="null" /> です。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列のデータ型が異なります。  
  
- または - 
テーブルが同じ <see cref="T:System.Data.DataSet" /> に属していません。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is identical to the specified object.">現在の <see cref="T:System.Data.ForeignKeyConstraint" /> が指定したオブジェクトと同一かどうかを示す値を取得します。</summary>
      <param name="key" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is compared. Two &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; are equal if they constrain the same columns.">この <see cref="T:System.Data.ForeignKeyConstraint" /> と比較するオブジェクト。 2 つの <see cref="T:System.Data.ForeignKeyConstraint" /> が同じ列を制約している場合、両者は同等です。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the objects are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが同一の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; object.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> オブジェクトのこのインスタンスのハッシュ コードを取得します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary vsli:raw="Indicates the action that should take place across this constraint when &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; is invoked.">
        <see cref="M:System.Data.DataTable.AcceptChanges" /> が呼び出されたときにこの制約全体で実行する必要があるアクションを示します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, and &lt;see langword=&quot;Cascade&quot; /&gt;. The default is &lt;see langword=&quot;None&quot; /&gt;.">
        <see cref="T:System.Data.AcceptRejectRule" /> 値のいずれか 1 つ。 使用できる値は、<see langword="None" />、<see langword="Cascade" /> などです。 既定値は、<see langword="None" /> です。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary vsli:raw="Gets the child columns of this constraint.">この制約の子列を取得します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the child columns of the constraint.">この制約の子列である <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint when a row is deleted.">行を削除したときにこの制約全体で発生するアクションを取得または設定します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">
        <see cref="T:System.Data.Rule" /> 値のいずれか 1 つ。 既定値は、<see langword="Cascade" /> です。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary vsli:raw="The parent columns of this constraint.">この制約の親列。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of the constraint.">この制約の親列である <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary vsli:raw="Gets the parent table of this constraint.">この制約の親テーブルを取得します。</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this constraint.">この制約の親 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary vsli:raw="Gets the child table of this constraint.">この制約の子テーブルを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table in the constraint.">この制約内の子テーブルである <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint on when a row is updated.">行を更新したときにこの制約全体で発生するアクションを取得または設定します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">
        <see cref="T:System.Data.Rule" /> 値のいずれか 1 つ。 既定値は、<see langword="Cascade" /> です。</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary vsli:raw="Associates a data source column with a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class, which is used in common by .NET data providers.">データ ソース列に <see cref="T:System.Data.DataSet" /> 列を関連付けます。この関連付けは、.NET Framework データ プロバイダーが共通に使用する <see cref="T:System.Data.Common.DataColumnMapping" /> クラスによって実装されます。</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">割り当て先の <see cref="T:System.Data.DataSet" /> 内の列の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">割り当て先の <see cref="T:System.Data.DataSet" /> 内の列の名前。 名前の大文字と小文字は区別されません。</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">割り当て元のデータ ソース内の列の名前を取得または設定します。 名前の大文字と小文字は区別されます。</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">データ ソース内の列の名前。大文字と小文字が区別されます。</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary vsli:raw="Contains a collection of DataColumnMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">DataColumnMapping オブジェクトのコレクションを格納します。 .NET Framework データ プロバイダーが共通に使用する <see cref="T:System.Data.Common.DataColumnMappingCollection" /> によって実装されます。</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a ColumnMapping object to the ColumnMapping collection using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">ソース列名と <see cref="T:System.Data.DataSet" /> 列名を使用して、ColumnMapping オブジェクトを ColumnMapping コレクションに追加します。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">ソース列の名前。大文字と小文字は区別されます。</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">
        <see cref="T:System.Data.DataSet" /> 列の名前。</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">コレクションに追加された ColumnMapping オブジェクト。</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">指定したソース列名を持つ <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトが <see cref="T:System.Data.Common.DataColumnMappingCollection" /> に格納されているかどうかを示す値を取得します。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">ソース列の名前。大文字と小文字は区別されます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定したソース列名を持つ <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトが存在する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the ColumnMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">指定した <see cref="T:System.Data.DataSet" /> 列名で ColumnMapping オブジェクトを取得します。</summary>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column within the collection.">コレクション内の <see cref="T:System.Data.DataSet" /> 列の名前。</param>
      <returns vsli:raw="The ColumnMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; column name.">指定した <see langword="DataSet" /> 列名を持つ ColumnMapping オブジェクト。</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name. The name is case-sensitive.">指定したソース列名で <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトの位置を取得します。 名前の大文字と小文字は区別されます。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">ソース列の名前。大文字と小文字は区別されます。</param>
      <returns vsli:raw="The zero-based location of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object with the specified source column name.">指定したソース列名を持つ <see langword="DataColumnMapping" /> オブジェクトの 0 から始まる位置。</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.IColumnMapping.SourceColumn&quot; /&gt; name from the collection.">指定した <see cref="P:System.Data.IColumnMapping.SourceColumn" /> 名を持つ <see cref="T:System.Data.IColumnMapping" /> オブジェクトをコレクションから削除します。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">大文字と小文字を区別する <see langword="SourceColumn" /> 名。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object does not exist with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">指定した <see langword="SourceColumn" /> 名を持つ <see cref="T:System.Data.Common.DataColumnMapping" /> オブジェクトは存在しません。</exception>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">指定した <see langword="SourceColumn" /> 名で <see cref="T:System.Data.IColumnMapping" /> オブジェクトを取得または設定します。</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceColumn&quot; /&gt; name of the &lt;see langword=&quot;IColumnMapping&quot; /&gt; object to find.">検索する <see langword="IColumnMapping" /> オブジェクトの <see langword="SourceColumn" /> 名。</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">指定した <see langword="IColumnMapping" /> 名を持つ <see langword="SourceColumn" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary vsli:raw="Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source.  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while &lt;see cref=&quot;T:System.Data.IDataAdapter&quot; /&gt; instances could can use any type of data source.">オブジェクトが DataAdapter を実装できるようにします。<see cref="T:System.Data.DataSet" /> の格納と更新およびデータ ソースの更新に使用するメソッドとマップ アクション関連プロパティのセットを表します。  
  
 <see cref="T:System.Data.IDbDataAdapter" /> インスタンスは、テキスト コマンド (例: Transact-SQL) を入力するリレーショナル データベースのデータ ソース (またはそれに類似したもの) で、<see cref="T:System.Data.IDataAdapter" /> インスタンスは任意の型のデータ ソースに使用できます。</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or updates rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; name, and creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">
        <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataSet" /> 内の行を追加または更新します。また、Table という名前の <see cref="T:System.Data.DataTable" /> を作成します。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">
        <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。 これには、行を返さないステートメントの影響を受ける行は含まれません。</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">"Table" という名前の <see cref="T:System.Data.DataTable" /> を指定された <see cref="T:System.Data.DataSet" /> に追加し、指定された <see cref="T:System.Data.SchemaType" /> に基づいて、データ ソースにあるスキーマと一致するようにスキーマを構成します。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">データ ソースから返されたスキーマ情報が格納された、<see cref="T:System.Data.DataTable" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">SQL SELECT ステートメントの実行時にユーザーが設定したパラメーターを取得します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">ユーザーが設定したパラメーターが格納された <see cref="T:System.Data.IDataParameter" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">指定された <see cref="T:System.Data.DataSet" /> 内の Table という名前の <see cref="T:System.Data.DataTable" /> に含まれる挿入行、更新行、または削除行に対して、INSERT、UPDATE、または DELETE ステートメントを個別に呼び出します。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">データ ソースの更新に使用した <see cref="T:System.Data.DataSet" />。</param>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary vsli:raw="Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.">割り当てられていないソース テーブルまたはソース列をソース名で渡して、フィルター処理するか、エラーを発生させるかどうかを指示または指定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">設定された値が <see cref="T:System.Data.MissingMappingAction" /> 値の 1 つではありません。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">
        <see cref="T:System.Data.MissingMappingAction" /> 値のいずれか 1 つ。 既定値は、<see langword="Passthrough" /> です。</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary vsli:raw="Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.">存在しないソース テーブル、ソース列、それらのリレーションシップをデータセット スキーマに追加するか、無視するか、またはエラーを発生させるかを表示または指定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">設定された値が <see cref="T:System.Data.MissingSchemaAction" /> 値の 1 つではありません。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">
        <see cref="T:System.Data.MissingSchemaAction" /> 値のいずれか 1 つ。 既定値は、<see langword="Add" /> です。</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">ソース テーブルをデータセット テーブルに割り当てる方法を示します。</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">返されたレコードと <see cref="T:System.Data.DataSet" /> との間のマスター マップを提供するコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary vsli:raw="Represents a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns; and is implemented by .NET data providers that access data sources.">Command オブジェクトへのパラメーター、さらに必要に応じて <see cref="T:System.Data.DataSet" /> 列へのそれらのマッピングを表し、データ ソースにアクセスする .NET Framework データ プロバイダーによって実装されます。</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">パラメーターの <see cref="T:System.Data.DbType" /> を取得または設定します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property was not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">プロパティが有効な <see cref="T:System.Data.DbType" /> に設定されませんでした。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">
        <see cref="T:System.Data.DbType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Data.DbType.String" /> です。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary vsli:raw="Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">パラメーターが入力専用、出力専用、双方向、またはストアド プロシージャの戻り値パラメーターのいずれであるかを示す値を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">プロパティが、有効な <see cref="T:System.Data.ParameterDirection" /> 値のいずれかに設定されていません。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">
        <see cref="T:System.Data.ParameterDirection" /> 値のいずれか 1 つ。 既定値は、<see langword="Input" /> です。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary vsli:raw="Gets a value indicating whether the parameter accepts null values.">パラメーターが null 値を受け取るかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">null 値を受け取る場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;.">
        <see cref="T:System.Data.IDataParameter" /> の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;. The default is an empty string.">
        <see cref="T:System.Data.IDataParameter" /> の名前。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> にマップされ、<see cref="P:System.Data.IDataParameter.Value" /> を読み込んだり返したりするために使用されるソース列の名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">
        <see cref="T:System.Data.DataSet" /> にマップされるソース列の名前。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when loading &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">
        <see cref="P:System.Data.IDataParameter.Value" /> を読み込むときに使用する <see cref="T:System.Data.DataRowVersion" /> を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">プロパティが <see cref="T:System.Data.DataRowVersion" /> 値のいずれかに設定されていません。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 値のいずれか 1 つ。 既定値は、<see langword="Current" /> です。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">パラメーターの値を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">パラメーターの値である <see cref="T:System.Object" />。 既定値は、null です。</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary vsli:raw="Collects all parameters relevant to a Command object and their mappings to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns, and is implemented by .NET data providers that access data sources.">Command オブジェクトと <see cref="T:System.Data.DataSet" /> 列へのそれらのマッピングに対応するすべてのパラメーターを収集し、データ ソースにアクセスする .NET Framework データ プロバイダーによって実装されます。</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a parameter in the collection has the specified name.">コレクション内のパラメーターが指定した名前を持つかどうかを示す値を取得します。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">パラメーターの名前。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">パラメーターがコレクションに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">コレクション内の <see cref="T:System.Data.IDataParameter" /> の場所を取得します。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">パラメーターの名前。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">コレクション内の <see cref="T:System.Data.IDataParameter" /> の 0 から始まる場所。</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from the collection.">
        <see cref="T:System.Data.IDataParameter" /> をコレクションから削除します。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">パラメーターの名前。</param>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">指定したインデックスにあるパラメーターを取得または設定します。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">取得するパラメーターの名前。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">指定されたインデックスの <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary vsli:raw="Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET data providers that access relational databases.">データ ソースでのコマンド実行により取得された結果セットの 1 つ以上の順方向専用ストリームを読み取る手段を提供し、リレーショナル データベースにアクセスする .NET Framework データ プロバイダーによって実装されます。</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; Object.">
        <see cref="T:System.Data.IDataReader" /> オブジェクトを閉じます。</summary>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.&#xA;&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.IDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> の列メタデータを記述する <see cref="T:System.Data.IDataReader" /> を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.IDataReader" /> が閉じています。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">列メタデータを記述する <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary vsli:raw="Advances the data reader to the next result, when reading the results of batch SQL statements.">バッチ SQL ステートメントの結果を読み取っているときに、次の結果にデータ リーダーを進めます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">次の行が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to the next record.">
        <see cref="T:System.Data.IDataReader" /> を次のレコードに進めます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">次の行が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">現在の行の入れ子の深さを示す値を取得します。</summary>
      <returns vsli:raw="The level of nesting.">入れ子のレベル。</returns>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary vsli:raw="Gets a value indicating whether the data reader is closed.">データ リーダーが閉じているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data reader is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">データ リーダーが閉じている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">SQL ステートメントの実行によって変更、挿入、または削除された行の数を取得します。</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">変更、挿入、または削除された行の数。影響を受けた行がない、またはステートメントが失敗した場合は 0。SELECT ステートメントの場合は -1。</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary vsli:raw="Provides access to the column values within each row for a &lt;see langword=&quot;DataReader&quot; /&gt;, and is implemented by .NET data providers that access relational databases.">
        <see langword="DataReader" /> について各行内の列の値へのアクセスを提供し、リレーショナル データベースにアクセスする .NET Framework データ プロバイダーによって実装されています。</summary>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">指定された列の値を Boolean として取得します。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The value of the column.">列の値。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Gets the 8-bit unsigned integer value of the specified column.">指定された列の 8 ビット符号なし整数値を取得します。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The 8-bit unsigned integer value of the specified column.">指定した列の 8 ビット符号なし整数値。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.">指定した列オフセットから、指定したバッファー オフセットから始まるバイトのストリームを、配列としてバッファーに読み取ります。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <param name="fieldOffset" vsli:raw="The index within the field from which to start the read operation.">読み取り操作を開始する位置を示すフィールド内のインデックス。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">バイトのストリームを読み込むバッファー。</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">読み取り操作を開始する <paramref name="buffer" /> のインデックス。</param>
      <param name="length" vsli:raw="The number of bytes to read.">読み取るバイト数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The actual number of bytes read.">実際に読み取られたバイト数。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Gets the character value of the specified column.">指定された列の文字値を取得します。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The character value of the specified column.">指定した列の文字値。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.">指定した列オフセットから、指定したバッファー オフセットから始まる文字列ストリームを、配列としてバッファーに読み取ります。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">0 から始まる列序数。</param>
      <param name="fieldoffset" vsli:raw="The index within the row from which to start the read operation.">読み取り操作を開始する位置を示す行内のインデックス。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">バイトのストリームを読み込むバッファー。</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">読み取り操作を開始する <paramref name="buffer" /> のインデックス。</param>
      <param name="length" vsli:raw="The number of bytes to read.">読み取るバイト数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The actual number of characters read.">実際に読み取られた文字数。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">指定された列序数の <see cref="T:System.Data.IDataReader" /> を返します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">指定した列の序数の <see cref="T:System.Data.IDataReader" />。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets the data type information for the specified field.">指定されたフィールドのデータ型情報を取得します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The data type information for the specified field.">指定したフィールドのデータ型情報。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the date and time data value of the specified field.">指定されたフィールドの日付と時刻のデータ値を取得します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The date and time data value of the specified field.">指定したフィールドの日時のデータ値。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the fixed-position numeric value of the specified field.">指定されたフィールドの固定位置の数値を取得します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The fixed-position numeric value of the specified field.">指定したフィールドの固定位置数値。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the double-precision floating point number of the specified field.">指定されたフィールドの倍精度浮動小数点値を取得します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The double-precision floating point number of the specified field.">指定したフィールドの倍精度浮動小数点数。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">
        <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" /> から返される <see cref="T:System.Object" /> の型に対応する <see cref="T:System.Type" /> 情報を取得します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">
        <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" /> から返される <see cref="T:System.Object" /> の型に対応する <see cref="T:System.Type" /> 情報。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the single-precision floating point number of the specified field.">指定されたフィールドの単精度浮動小数点値を取得します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The single-precision floating point number of the specified field.">指定したフィールドの単精度浮動小数点数。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">指定したフィールドの GUID 値を返します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The GUID value of the specified field.">指定したフィールドの GUID 値。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the 16-bit signed integer value of the specified field.">指定されたフィールドの 16 ビット符号付き整数値を取得します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The 16-bit signed integer value of the specified field.">指定したフィールドの 16 ビット符号付き整数値。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the 32-bit signed integer value of the specified field.">指定されたフィールドの 32 ビット符号付き整数値を取得します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The 32-bit signed integer value of the specified field.">指定されたフィールドの 32 ビット符号付き整数値。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the 64-bit signed integer value of the specified field.">指定されたフィールドの 64 ビット符号付き整数値を取得します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The 64-bit signed integer value of the specified field.">指定されたフィールドの 64 ビット符号付き整数値。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Gets the name for the field to find.">検索するフィールドの名前を取得します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The name of the field or the empty string (&quot;&quot;), if there is no value to return.">フィールドの名前。返される値がない場合は空の文字列 ("")。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Return the index of the named field.">名前付きフィールドのインデックスを返します。</summary>
      <param name="name" vsli:raw="The name of the field to find.">検索するフィールドの名前。</param>
      <returns vsli:raw="The index of the named field.">名前付きフィールドのインデックス。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Gets the string value of the specified field.">指定したフィールドの文字列値を取得します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The string value of the specified field.">指定したフィールドの文字列値。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Return the value of the specified field.">指定したフィールドの値を返します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; which will contain the field value upon return.">フィールドの値が返されたときにその値を格納する <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">現在のレコードの列の値を持つオブジェクトの配列を設定します。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">属性フィールドをコピーする <see cref="T:System.Object" /> の配列。</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">配列に含まれる <see cref="T:System.Object" /> のインスタンスの数。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Return whether the specified field is set to null.">指定されたフィールドが null に設定されているかどうかを返します。</summary>
      <param name="i" vsli:raw="The index of the field to find.">検索するフィールドのインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified field is set to null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したフィールドが null に設定されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary vsli:raw="Gets the number of columns in the current row.">現在の行の列の数を取得します。</summary>
      <returns vsli:raw="When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.">有効なレコードセットに配置されない場合は 0。それ以外の場合は現在のレコードの列の数。 既定値は -1 です。</returns>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary vsli:raw="Gets the column located at the specified index.">指定したインデックスにある列を取得します。</summary>
      <param name="i" vsli:raw="The zero-based index of the column to get.">取得する列の 0 から始まるインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">渡されたインデックスは 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲外にあります。</exception>
      <returns vsli:raw="The column located at the specified index as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">指定したインデックス位置に <see cref="T:System.Object" /> として存在する列。</returns>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary vsli:raw="Gets the column with the specified name.">指定された名前を持つ列を取得します。</summary>
      <param name="name" vsli:raw="The name of the column to find.">検索する列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">指定された名前の列は見つかりませんでした。</exception>
      <returns vsli:raw="The column with the specified name as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">指定した名前を <see cref="T:System.Object" /> として持つ列。</returns>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary vsli:raw="Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET data providers that access relational databases.">データ ソースに接続しながら実行される SQL ステートメントを表し、リレーショナル データベースにアクセスする .NET Framework データ プロバイダーにより実装されます。</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary vsli:raw="Attempts to cancels the execution of an &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> の実行のキャンセルを試行します。</summary>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">
        <see cref="T:System.Data.IDbDataParameter" /> オブジェクトの新しいインスタンスを作成します。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">
        <see langword="IDbDataParameter" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes an SQL statement against the &lt;see langword=&quot;Connection&quot; /&gt; object of a .NET data provider, and returns the number of rows affected.">.NET Framework データ プロバイダーの <see langword="Connection" /> オブジェクトに対して SQL ステートメントを実行し、影響を受ける行の数を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is not open.">接続が存在しません。  
  
 - または -  
  
 接続が開かれていません。</exception>
      <returns vsli:raw="The number of rows affected.">影響を受けた行の数。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="P:System.Data.IDbCommand.Connection" /> に対して <see cref="P:System.Data.IDbCommand.CommandText" /> を実行し、<see cref="T:System.Data.IDataReader" /> をビルドします。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.IDataReader" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="P:System.Data.IDbCommand.Connection" /> に対して <see cref="P:System.Data.IDbCommand.CommandText" /> を実行し、<see cref="T:System.Data.CommandBehavior" /> の値のいずれかを使用して <see cref="T:System.Data.IDataReader" /> をビルドします。</summary>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.IDataReader" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.">クエリを実行し、そのクエリが返す結果セットの最初の行にある最初の列を返します。 追加の列または行は無視されます。</summary>
      <returns vsli:raw="The first column of the first row in the resultset.">結果セットの最初の行の最初の列。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">コマンドの準備済み (またはコンパイル済み) のバージョンをデータ ソースに作成します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not &lt;see cref=&quot;M:System.Data.OleDb.OleDbConnection.Open&quot; /&gt;.">
        <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> が設定されていません。  
  
- または - 
<see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> が <see cref="M:System.Data.OleDb.OleDbConnection.Open" /> ではありません。</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">データ ソースに対して実行するテキスト コマンドを取得または設定します。</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">実行するテキスト コマンドです。 既定値は空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute a command and generating an error.">コマンド実行の試行を終了してエラーを生成するまでの待機時間 (秒単位) を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property value assigned is less than 0.">割り当てられたプロパティ値が 0 未満です。</exception>
      <returns vsli:raw="The time (in seconds) to wait for the command to execute. The default value is 30 seconds.">コマンドの実行を待機する時間 (秒単位) です。 既定値は 30 秒です。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary vsli:raw="Indicates or specifies how the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; property is interpreted.">
        <see cref="P:System.Data.IDbCommand.CommandText" /> プロパティをどのように解釈するかを表示または指定します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandType&quot; /&gt; values. The default is &lt;see langword=&quot;Text&quot; /&gt;.">
        <see cref="T:System.Data.CommandType" /> 値のいずれか 1 つ。 既定値は、<see langword="Text" /> です。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">この <see cref="T:System.Data.IDbCommand" /> のインスタンスで使用する <see cref="T:System.Data.IDbConnection" /> を取得または設定します。</summary>
      <returns vsli:raw="The connection to the data source.">データ ソースへの接続です。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">
        <see cref="T:System.Data.IDataParameterCollection" /> を取得します。</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL ステートメントまたはストアド プロシージャのパラメーター。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary vsli:raw="Gets or sets the transaction within which the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET data provider executes.">.NET Framework データ プロバイダーの <see langword="Command" /> オブジェクトが実行されるトランザクションを取得または設定します。</summary>
      <returns vsli:raw="the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is &lt;see langword=&quot;null&quot; /&gt;.">.NET Framework データ プロバイダーが実行する <see langword="Command" /> オブジェクト。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> の <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> メソッドで使用するときに、コマンドの結果を <see cref="T:System.Data.DataRow" /> に適用する方法を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value entered was not one of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values.">入力された値が、<see cref="T:System.Data.UpdateRowSource" /> 値ではありませんでした。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">
        <see cref="T:System.Data.UpdateRowSource" /> 値のいずれか 1 つ。 コマンドが自動的に生成される場合を除き、既定値は <see langword="Both" /> です。 既定は <see langword="None" />です。</returns>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary vsli:raw="Represents an open connection to a data source, and is implemented by .NET data providers that access relational databases.">データ ソースへのオープン接続を表し、リレーショナル データベースにアクセスする .NET Framework データ プロバイダーにより実装されます。</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">データベース トランザクションを開始します。</summary>
      <returns vsli:raw="An object representing the new transaction.">新しいトランザクションを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; value.">指定した <see cref="T:System.Data.IsolationLevel" /> 値を使用して、データベース トランザクションを開始します。</summary>
      <param name="il" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; values.">
        <see cref="T:System.Data.IsolationLevel" /> 値のいずれか 1 つ。</param>
      <returns vsli:raw="An object representing the new transaction.">新しいトランザクションを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="Changes the current database for an open &lt;see langword=&quot;Connection&quot; /&gt; object.">開いている <see langword="Connection" /> オブジェクトの現在のデータベースを変更します。</summary>
      <param name="databaseName" vsli:raw="The name of the database to use in place of the current database.">現在のデータベースの代わりに使用するデータベースの名前。</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary vsli:raw="Closes the connection to the database.">データベースへの接続を閉じます。</summary>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a Command object associated with the connection.">接続に関連付けられた Command オブジェクトを作成し、返します。</summary>
      <returns vsli:raw="A Command object associated with the connection.">接続に関連付けられている Command オブジェクト。</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary vsli:raw="Opens a database connection with the settings specified by the &lt;see langword=&quot;ConnectionString&quot; /&gt; property of the provider-specific Connection object.">プロバイダー固有の接続オブジェクトの <see langword="ConnectionString" /> プロパティで指定した設定でデータベース接続を開きます。</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary vsli:raw="Gets or sets the string used to open a database.">データベースを開くために使用する文字列を取得または設定します。</summary>
      <returns vsli:raw="A string containing connection settings.">接続設定が格納されている文字列。</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error.">試行を終了してエラーを生成するまでの、接続の確立の試行時に待機する時間 (秒単位) を取得します。</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is 15 seconds.">接続が開くのを待機する時間 (秒単位) です。 既定値は 15 秒です。</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary vsli:raw="Gets the name of the current database or the database to be used after a connection is opened.">現在のデータベース、または接続が開いてから使用するデータベースの名前を取得します。</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.">現在のデータベース、または接続が開いてから使用するデータベースの名前。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary vsli:raw="Gets the current state of the connection.">現在の接続の状態を取得します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary vsli:raw="Represents a set of command-related properties that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source, and is implemented by .NET data providers that access relational databases.">
        <see cref="T:System.Data.DataSet" /> にデータを格納し、データ ソースを更新するために使用するコマンド関連プロパティのセットを表します。リレーショナル データベースにアクセスする .NET Framework データ プロバイダーによって実装されます。</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">データ セットからレコードを削除する SQL ステートメントを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">データ ソースに新しいレコードを挿入する SQL ステートメントを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">データ ソース内のレコードを選択する SQL ステートメントを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">データ ソース内のレコードを更新する SQL ステートメントを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary vsli:raw="Used by the Visual Basic .NET Data Designers to represent a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns.">Visual Basic .NET データ デザイナーで使用され、コマンド オブジェクトにパラメーターを表し、オプションで <see cref="T:System.Data.DataSet" /> 列にそのマッピングを表します。</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">数値パラメーターの精度を示します。</summary>
      <returns vsli:raw="The maximum number of digits used to represent the Value property of a data provider Parameter object. The default value is 0, which indicates that a data provider sets the precision for Value.">データ プロバイダーである Parameter オブジェクトの Value プロパティを表すために使用される最大桁数。 既定値は 0 で、データ プロバイダーにより Value の精度が設定されていることを示します。</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary vsli:raw="Indicates the scale of numeric parameters.">数値パラメーターのスケールを示します。</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">
        <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> の解決先の小数点以下桁数です。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary vsli:raw="The size of the parameter.">パラメーターのサイズ。</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">列内のデータの最大サイズ (バイト) です。 既定値はパラメーター値から推論されます。</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary vsli:raw="Represents a transaction to be performed at a data source, and is implemented by .NET data providers that access relational databases.">データ ソースで実行されるトランザクションを表し、リレーショナル データベースにアクセスする .NET Framework データ プロバイダーにより実装されます。</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary vsli:raw="Commits the database transaction.">データベース トランザクションをコミットします。</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">トランザクションをコミットしようとしてエラーが発生しました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">トランザクションは既にコミットまたはロールバックされています。  
  
 - または -  
  
 接続が切れています。</exception>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary vsli:raw="Rolls back a transaction from a pending state.">トランザクションを保留状態からロールバックします。</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">トランザクションをコミットしようとしてエラーが発生しました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">トランザクションは既にコミットまたはロールバックされています。  
  
 - または -  
  
 接続が切れています。</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary vsli:raw="Specifies the Connection object to associate with the transaction.">トランザクションに関連付けられる Connection オブジェクトを指定します。</summary>
      <returns vsli:raw="The Connection object to associate with the transaction.">トランザクションに関連付けられる Connection オブジェクト。</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction.">このトランザクションの <see cref="T:System.Data.IsolationLevel" /> を指定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction. The default is &lt;see langword=&quot;ReadCommitted&quot; /&gt;.">このトランザクションの <see cref="T:System.Data.IsolationLevel" />。 既定値は、<see langword="ReadCommitted" /> です。</returns>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary vsli:raw="Represents the exception that is thrown when you call the &lt;see cref=&quot;M:System.Data.DataRow.EndEdit&quot; /&gt; method within the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">
        <see cref="M:System.Data.DataRow.EndEdit" /> イベント内で <see cref="E:System.Data.DataTable.RowChanging" /> メソッドを呼び出したときにスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class.">
        <see cref="T:System.Data.InRowChangingEventException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with serialization information.">シリアル化情報を指定して、<see cref="T:System.Data.InRowChangingEventException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定したシリアル化ストリームの転送元と転送先の説明。</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.InRowChangingEventException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.InRowChangingEventException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary vsli:raw="Provides the base functionality for creating collections.">コレクションを作成するための基本機能を用意しています。</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; class.">
        <see cref="T:System.Data.InternalDataCollectionBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; index.">現在の <see cref="T:System.Data.InternalDataCollectionBase" /> のすべての要素を 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、指定した <see cref="T:System.Data.InternalDataCollectionBase" /> インデックスから始まります。</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; object's elements into.">現在の <see cref="T:System.Array" /> オブジェクトの要素をコピーする先の 1 次元 <see cref="T:System.Data.InternalDataCollectionBase" />。</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">コピーを開始するコピー先の <see cref="T:System.Array" /> インデックス。</param>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">コレクションの <see cref="T:System.Collections.IEnumerator" /> を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">コレクションの <see cref="T:System.Collections.IEnumerator" /> です。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary vsli:raw="Gets the total number of elements in a collection.">コレクション内の要素の合計数を取得します。</summary>
      <returns vsli:raw="The total number of elements in a collection.">コレクション内の要素の合計数。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is read-only.">
        <see cref="T:System.Data.InternalDataCollectionBase" /> が読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">コレクションが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is synchronized.">
        <see cref="T:System.Data.InternalDataCollectionBase" /> が同期されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">コレクションが同期される場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary vsli:raw="Gets the items of the collection as a list.">コレクションの項目をリストとして取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the collection.">コレクションを格納している <see cref="T:System.Collections.ArrayList" />。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize the collection.">コレクションの同期をとるために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; used to synchronize the collection.">コレクションを同期するために使用する <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when incorrectly trying to create or access a relation.">リレーションシップを誤って作成またはアクセスしようとしたときに生成される例外を表します。</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class.">
        <see cref="T:System.Data.InvalidConstraintException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with serialization information.">シリアル化情報を指定して、<see cref="T:System.Data.InvalidConstraintException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定したシリアル化ストリームの転送元と転送先の説明。</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.InvalidConstraintException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.InvalidConstraintException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary vsli:raw="Represents the exception that is thrown when you try to add a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains an invalid &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">無効な <see cref="T:System.Data.DataColumn" /> が格納された <see cref="P:System.Data.DataColumn.Expression" /> を <see cref="T:System.Data.DataColumnCollection" /> に追加しようとした場合にスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class.">
        <see cref="T:System.Data.InvalidExpressionException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">
        <see cref="T:System.Data.InvalidExpressionException" /> と <see cref="T:System.Runtime.Serialization.SerializationInfo" /> を使用して、<see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータです。</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">指定したシリアル化ストリームの転送元と転送先。</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.InvalidExpressionException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.InvalidExpressionException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary vsli:raw="Specifies the transaction locking behavior for the connection.">接続のトランザクション ロック動作を指定します。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary vsli:raw="The pending changes from more highly isolated transactions cannot be overwritten.">これより分離性の高いトランザクションからの保留中の変更に対しては上書きできません。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary vsli:raw="Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.">データが読み込まれている間、ダーティ読み込みを防ぐために共有ロックが保持されますが、トランザクションが終了する前にデータを変更できます。このため、読み込みは繰り返されません。また実際には存在しないデータを生成できます。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary vsli:raw="A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.">ダーティ読み込みができます。つまり、共有ロックが発行されておらず、排他ロックが有効ではありません。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary vsli:raw="Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.">他のユーザーがデータを更新できないようにするために、クエリで使用するすべてのデータをロックします。 繰り返し不能読み込みはできませんが、実際には存在しない行を生成できます。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary vsli:raw="A range lock is placed on the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preventing other users from updating or inserting rows into the dataset until the transaction is complete.">
        <see cref="T:System.Data.DataSet" /> にレンジ ロックがかけられ、トランザクションが完了するまで、他のユーザーは行を更新したりデータセットに行を挿入できません。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary vsli:raw="Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.">あるアプリケーションで変更中のデータを他のアプリケーションから読み取ることができるように、そのデータのバージョンを保存して、ブロッキングを減らします。 この場合、クエリを再実行しても、あるトランザクションで加えられた変更を、他のトランザクションで表示できません。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary vsli:raw="A different isolation level than the one specified is being used, but the level cannot be determined.">指定した分離レベルとは異なる分離レベルが使用されていますが、レベルを確認できません。</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary vsli:raw="Associates a source table with a table in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class, which is used in common by .NET data providers.">ソース テーブルに <see cref="T:System.Data.DataSet" /> 内のテーブルを関連付けます。 .NET Framework データ プロバイダーが共通に使用する <see cref="T:System.Data.Common.DataTableMapping" /> クラスによって実装されます。</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" /> の派生 <see cref="T:System.Data.DataTable" /> を取得します。</summary>
      <returns vsli:raw="A collection of data column mappings.">データ列マップのコレクション。</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 内にあるテーブルの、大文字と小文字が区別されない名前を取得または設定します。</summary>
      <returns vsli:raw="The case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 内にあるテーブルの、大文字と小文字が区別されない名前。</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive name of the source table.">ソース テーブルの、大文字と小文字が区別される名前を取得または設定します。</summary>
      <returns vsli:raw="The case-sensitive name of the source table.">ソース テーブルの、大文字と小文字が区別される名前。</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary vsli:raw="Contains a collection of TableMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">TableMapping オブジェクトのコレクションを格納します。 .NET Framework データ プロバイダーが共通に使用する <see cref="T:System.Data.Common.DataTableMappingCollection" /> によって実装されます。</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">コレクションにテーブル マップを追加します。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">ソース テーブルの、大文字と小文字が区別される名前。</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">
        <see cref="T:System.Data.DataSet" /> テーブルの名前。</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">新しく割り当てられた <see cref="T:System.Data.ITableMapping" /> オブジェクトへの参照。</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the collection contains a table mapping with the specified source table name.">指定したソース テーブル名を持つテーブル マップがコレクションに格納されているかどうかを示す値を取得します。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">ソース テーブルの、大文字と小文字が区別される名前。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a table mapping with the specified source table name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">指定したソース テーブル名のテーブル マップが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">指定した <see cref="T:System.Data.DataSet" /> テーブル名を持つ TableMapping オブジェクトを取得します。</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">コレクション内の <see langword="DataSet" /> テーブルの名前。</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">指定した <see langword="DataSet" /> テーブル名を持つ TableMapping オブジェクト。</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">コレクション内の <see cref="T:System.Data.ITableMapping" /> オブジェクトの位置を取得します。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">ソース テーブルの、大文字と小文字が区別される名前。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">コレクション内の <see cref="T:System.Data.ITableMapping" /> オブジェクトの 0 から始まる位置。</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name from the collection.">指定した <see cref="P:System.Data.ITableMapping.SourceTable" /> 名を持つ <see cref="T:System.Data.ITableMapping" /> オブジェクトをコレクションから削除します。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the &lt;see langword=&quot;SourceTable&quot; /&gt;.">
        <see langword="SourceTable" /> の、大文字と小文字が区別される名前。</param>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">指定した <see cref="T:System.Data.ITableMapping" /> 名で <see cref="P:System.Data.ITableMapping.SourceTable" /> のインスタンスを取得または設定します。</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">
        <see cref="T:System.Data.ITableMapping" /> の <see langword="SourceTable" /> 名。</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">指定した <see langword="SourceTable" /> 名の <see cref="T:System.Data.ITableMapping" /> のインスタンス。</returns>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary vsli:raw="Identifies a list of connection string parameters identified by the &lt;see langword=&quot;KeyRestrictions&quot; /&gt; property that are either allowed or not allowed.">許可されている、または、許可されていないことのいずれかを表す <see langword="KeyRestrictions" /> プロパティで指定された、接続文字列パラメーターのリストを示します。</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary vsli:raw="Default. Identifies the only additional connection string parameters that are allowed.">既定値。 許可されている追加接続文字列パラメーターだけを示します。</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary vsli:raw="Identifies additional connection string parameters that are not allowed.">許可されていない追加接続文字列パラメーターを示します。</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary vsli:raw="Controls how the values from the data source will be applied to existing rows when using the &lt;see cref=&quot;Overload:System.Data.DataTable.Load&quot; /&gt; or &lt;see cref=&quot;Overload:System.Data.DataSet.Load&quot; /&gt; method.">
        <see cref="Overload:System.Data.DataTable.Load" /> メソッドまたは <see cref="Overload:System.Data.DataSet.Load" /> メソッドの使用時に、データ ソースからの値を既存の行にどのように適用するかを制御します。</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary vsli:raw="The incoming values for this row will be written to both the current value and the original value versions of the data for each column.">この行に受信した値は、各列で、データの現在の値と元の値の両方のバージョンに書き込まれます。</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary vsli:raw="The incoming values for this row will be written to the original value version of each column. The current version of the data in each column will not be changed.  This is the default.">この行に受信した値は、各列の元の値のバージョンに書き込まれます。 各列のデータの現在のバージョンは、変更されません。  これは既定値です。</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary vsli:raw="The incoming values for this row will be written to the current version of each column. The original version of each column's data will not be changed.">この行に受信した値は、各列の現在の値のバージョンに書き込まれます。 各列のデータの元のバージョンは、変更されません。</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary vsli:raw="Specifies how a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is mapped.">
        <see cref="T:System.Data.DataColumn" /> の割り当て方法を指定します。</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary vsli:raw="The column is mapped to an XML attribute.">列が XML 属性に割り当てられます。</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary vsli:raw="The column is mapped to an XML element.">列が XML 要素に割り当てられます。</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary vsli:raw="The column is mapped to an internal structure.">列が内部構造に割り当てられます。</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary vsli:raw="The column is mapped to an &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; node.">列が <see cref="T:System.Xml.XmlText" /> ノードに割り当てられます。</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary vsli:raw="Occurs when a target and source &lt;see langword=&quot;DataRow&quot; /&gt; have the same primary key value, and the &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; property is set to true.">ターゲットとソースの <see langword="DataRow" /> に同じ主キー値が格納されていて、<see cref="P:System.Data.DataSet.EnforceConstraints" /> プロパティが true に設定されている場合に発生します。</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MergeFailedEventArgs&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and a description of the merge conflict.">
        <see cref="T:System.Data.MergeFailedEventArgs" /> とマージの矛盾の説明を使用して、<see cref="T:System.Data.DataTable" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> オブジェクト。</param>
      <param name="conflict" vsli:raw="A description of the merge conflict.">マージの矛盾の説明。</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary vsli:raw="Returns a description of the merge conflict.">マージの矛盾の説明を返します。</summary>
      <returns vsli:raw="A description of the merge conflict.">マージの矛盾の説明。</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> オブジェクトを返します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataSet.MergeFailed&quot; /&gt; event.">
        <see cref="E:System.Data.DataSet.MergeFailed" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="The data for the event.">イベントのデータ。</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary vsli:raw="Determines the action that occurs when a mapping is missing from a source table or a source column.">ソース テーブルまたはソース列からのマップがない場合に実行するアクションを決定します。</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">指定した列マップが存在しない場合は、<see cref="T:System.InvalidOperationException" /> が生成されます。</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary vsli:raw="The column or table not having a mapping is ignored. Returns &lt;see langword=&quot;null&quot; /&gt;.">マップがない列またはテーブルは無視されます。 <see langword="null" /> を返します。</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary vsli:raw="The source column or source table is created and added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using its original name.">ソース列またはソース テーブルは、元の名前を使用して作成され、<see cref="T:System.Data.DataSet" /> に追加されます。</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to access a row in a table that has no primary key.">主キーが格納されていないテーブル内の行にアクセスしようとした場合にスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class.">
        <see cref="T:System.Data.MissingPrimaryKeyException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with serialization information.">シリアル化情報を指定して、<see cref="T:System.Data.MissingPrimaryKeyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</param>
      <param name="context" vsli:raw="A description of the source and destination of the specified serialized stream.">指定したシリアル化ストリームの転送元と転送先の説明。</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.MissingPrimaryKeyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.MissingPrimaryKeyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary vsli:raw="Specifies the action to take when adding data to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and the required &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; or &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is missing.">データを <see cref="T:System.Data.DataSet" /> に追加する場合に、必要な <see cref="T:System.Data.DataTable" /> または <see cref="T:System.Data.DataColumn" /> がないときに実行するアクションを指定します。</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary vsli:raw="Adds the necessary columns to complete the schema.">必要な列を追加してスキーマを完成します。</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary vsli:raw="&lt;para&gt;Adds the necessary columns and primary key information to complete the schema. For more information about how primary key information is added to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, see &lt;see cref=&quot;M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt;.&lt;/para&gt;&lt;para&gt;To function properly with the .NET Framework Data Provider for OLE DB, &lt;see langword=&quot;AddWithKey&quot; /&gt; requires that the native OLE DB provider obtains necessary primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset. As an alternative, the user may explicitly set the primary key constraints on each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This ensures that incoming records that match existing records are updated instead of appended. When using &lt;see langword=&quot;AddWithKey&quot; /&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. For more information, see SET FMTONLY (Transact-SQL).&lt;/para&gt;">必要な列と主キー情報を追加してスキーマを完成します。 主キー情報を <see cref="T:System.Data.DataTable" /> に追加する方法の詳細については、「<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />」を参照してください。.NET Framework OLE DB 用データ プロバイダーで <see langword="AddWithKey" /> が正しく機能するためには、ネイティブな OLE DB プロバイダーが DBPROP_UNIQUEROWS プロパティを設定して必要な主キー情報を取得し、IColumnsRowset 内の DBCOLUMN_KEYCOLUMN を調べてどの列が主キー列かを確認する必要があります。 <see cref="T:System.Data.DataTable" /> ごとに主キー制約を明示的に設定することもできます。 これにより、既存のレコードと一致する入力レコードが、追加ではなく更新されるようになります。 <see langword="AddWithKey" /> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。 SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。 詳細については、「SET FMTONLY (Transact-SQL)」をご覧ください。</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">指定した列マップが存在しない場合は、<see cref="T:System.InvalidOperationException" /> が生成されます。</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary vsli:raw="Ignores the extra columns.">余分な列を無視します。</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary vsli:raw="Represents the exception that is thrown when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.AllowDBNull" /> が <see langword="false" /> に設定されている列に null 値を挿入しようとした場合にスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class.">
        <see cref="T:System.Data.NoNullAllowedException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with serialization information.">シリアル化情報を指定して、<see cref="T:System.Data.NoNullAllowedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定したシリアル化ストリームの転送元と転送先の説明。</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.NoNullAllowedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.NoNullAllowedException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of ordered &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">クエリから返される順序付けされた <see cref="T:System.Data.DataRow" /> オブジェクトのコレクションを表します。</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">ソース シーケンスのオブジェクトの型 (通常は <see cref="T:System.Data.DataRow" />)。</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary vsli:raw="Specifies the type of a parameter within a query relative to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> に関連するクエリ内のパラメーターの型を指定します。</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary vsli:raw="The parameter is an input parameter.">このパラメーターは入力パラメーターです。</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary vsli:raw="The parameter is capable of both input and output.">このパラメーターは入力または出力のどちらでもできます。</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary vsli:raw="The parameter is an output parameter.">このパラメーターは出力パラメーターです。</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary vsli:raw="The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.">パラメーターは、ストアド プロシージャ、組み込み関数、ユーザー定義関数などの操作からの戻り値を表します。</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary vsli:raw="Represents a collection of properties that can be added to &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />、<see cref="T:System.Data.DataSet" />、または <see cref="T:System.Data.DataTable" /> に追加できるプロパティのコレクションを表します。</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">
        <see cref="T:System.Data.PropertyCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">
        <see cref="T:System.Data.PropertyCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータです。</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">指定したシリアル化ストリームの転送元と転送先。</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">
        <see cref="T:System.Data.PropertyCollection" /> オブジェクトのシャロー コピーを作成します。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Object&quot; /&gt;, a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">
        <see cref="T:System.Object" /> オブジェクトの簡易コピーである <see cref="T:System.Data.PropertyCollection" /> を返します。</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to change the value of a read-only column.">読み取り専用列の値を変更しようとした場合にスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class.">
        <see cref="T:System.Data.ReadOnlyException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with serialization information.">シリアル化情報を指定して、<see cref="T:System.Data.ReadOnlyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定したシリアル化ストリームの転送元と転送先の説明。</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.ReadOnlyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.ReadOnlyException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary vsli:raw="Represents the exception that is thrown when you try to perform an operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is not in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> 内に存在しない <see cref="T:System.Data.DataTable" /> で操作を実行しようとした場合にスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class.">
        <see cref="T:System.Data.RowNotInTableException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with serialization information.">シリアル化情報を指定して、<see cref="T:System.Data.RowNotInTableException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定したシリアル化ストリームの転送元と転送先の説明。</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.RowNotInTableException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.RowNotInTableException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary vsli:raw="Indicates the action that occurs when a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> を適用した場合に実行されるアクションを示します。</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary vsli:raw="Delete or update related rows. This is the default.">関連付けられている行を削除または更新します。 これは既定値です。</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary vsli:raw="No action taken on related rows.">関連行で何もアクションが実行されません。</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary vsli:raw="Set values in related rows to the value contained in the &lt;see cref=&quot;P:System.Data.DataColumn.DefaultValue&quot; /&gt; property.">関連行の値を <see cref="P:System.Data.DataColumn.DefaultValue" /> プロパティに格納されている値に設定します。</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary vsli:raw="Set values in related rows to &lt;see langword=&quot;DBNull&quot; /&gt;.">関連行の値を <see langword="DBNull" /> に設定します。</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary vsli:raw="Indicates the schema serialization mode for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">型指定された <see cref="T:System.Data.DataSet" /> のスキーマのシリアル化モードを示します。</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary vsli:raw="Skips schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">型指定された <see cref="T:System.Data.DataSet" /> のスキーマのシリアル化を省略します。</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary vsli:raw="Includes schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default.">型指定された <see cref="T:System.Data.DataSet" /> のスキーマのシリアル化を適用します。 これが既定値です。</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary vsli:raw="Specifies how to handle existing schema mappings when performing a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt; operation.">
        <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> 操作を実行するときに既存のスキーマ マップを処理する方法を指定します。</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary vsli:raw="Apply any existing table mappings to the incoming schema. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the transformed schema.">既存のテーブル マップを受信スキーマに適用します。 変換されたスキーマで <see cref="T:System.Data.DataSet" /> を構成します。</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary vsli:raw="Ignore any table mappings on the DataAdapter. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the incoming schema without applying any transformations.">DataAdapter のテーブル マップを無視します。 変換されたスキーマを適用せずに、受信スキーマを使用して <see cref="T:System.Data.DataSet" /> を構成します。</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary vsli:raw="Determines the serialization format for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> のシリアル化形式を決定します。</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary vsli:raw="Serialize as binary content. Available in ADO.NET 2.0 and later versions only. This field is obsolete starting in .NET 7.">バイナリ コンテンツとしてシリアル化します。 ADO.NET 2.0 でのみ使用できます。</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary vsli:raw="Serialize as XML content. The default.">XML コンテンツとしてシリアル化します。 これが既定値です。</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary vsli:raw="Specifies SQL Server-specific data type of a field, property, for use in a &lt;see cref=&quot;T:System.Data.SqlClient.SqlParameter&quot; /&gt;.">
        <see cref="T:System.Data.SqlClient.SqlParameter" /> で使用するフィールド (プロパティ) のデータ型として、SQL Server に固有のデータ型を指定します。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int64&quot; /&gt;. A 64-bit signed integer.">
        <see cref="T:System.Int64" />。 64 ビット符号付き整数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.">
        <see cref="T:System.Array" /> 型の <see cref="T:System.Byte" />。 1 から 8,000 バイトまでの範囲内のバイナリ データの固定長ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Boolean&quot; /&gt;. An unsigned numeric value that can be 0, 1, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Boolean" />。 0、1、または <see langword="null" /> である符号なし数値。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">
        <see cref="T:System.String" />。 1 から 8,000 文字までの範囲内の非 Unicode 文字の固定長ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary vsli:raw="Date data ranging in value from January 1,1 AD through December 31, 9999 AD.">AD 1 年 1 月 1 日から AD 9999 年 12 月 31 日までの日付のデータ。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.">
        <see cref="T:System.DateTime" />。 1753 年 1 月 1 日から 9999 年 12 月 31 日までの範囲で、精度 3.33 ミリ秒の日付と時刻のデータ。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">日付と時刻のデータ。 日付の値の範囲は、AD 1 年 1 月 1 日から AD 9999 年 12 月 31 日です。 時刻の値の範囲は、00:00:00 から 23:59:59.9999999 で、精度は 100 ナノ秒です。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">タイム ゾーンに対応した日付と時刻。 日付の値の範囲は、AD 1 年 1 月 1 日から AD 9999 年 12 月 31 日です。 時刻の値の範囲は、00:00:00 から 23:59:59.9999999 で、精度は 100 ナノ秒です。 タイム ゾーンの値の範囲は、-14:00 から +14:00 です。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.">
        <see cref="T:System.Decimal" />。 -10 38 -1 から 10 38 -1 までの範囲内の固定精度小数部桁数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Double&quot; /&gt;. A floating point number within the range of -1.79E +308 through 1.79E +308.">
        <see cref="T:System.Double" />。 -1.79E +308 から 1.79E +308 までの範囲内の浮動小数点数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.">
        <see cref="T:System.Array" /> 型の <see cref="T:System.Byte" />。 0 バイトから 2 31 -1 (または 2,147,483,647) バイトまでの範囲内のバイナリ データの可変長ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int32&quot; /&gt;. A 32-bit signed integer.">
        <see cref="T:System.Int32" />。 32 ビット符号付き整数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -2 63 (or -9,223,372,036,854,775,808) to 2 63 -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />。 精度が通貨単位の 1/10,000 の、-2 63 (-9,223,372,036,854,775,808) から 2 63 -1 (+9,223,372,036,854,775,807) までの範囲内の通貨値。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.">
        <see cref="T:System.String" />。 1 から 4,000 文字までの範囲内の Unicode 文字の固定長ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.">
        <see cref="T:System.String" />。 最大長が 2 30 -1 (1,073,741,823) 文字の Unicode データの可変長ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.NVarChar&quot; /&gt; when the database column is &lt;see langword=&quot;nvarchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />。 1 から 4,000 文字までの範囲内の Unicode 文字の可変長ストリーム。 文字列が 4,000 文字を超える場合は、暗黙の型変換が失敗します。 4,000 文字を超える文字列を使用する場合は、明示的にオブジェクトを設定します。 データベース列が <see langword="nvarchar(max)" /> の場合、<see cref="F:System.Data.SqlDbType.NVarChar" /> を使用します。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Single&quot; /&gt;. A floating point number within the range of -3.40E +38 through 3.40E +38.">
        <see cref="T:System.Single" />。 -3.40E +38 から 3.40E +38 までの範囲内の浮動小数点数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.">
        <see cref="T:System.DateTime" />。 1900 年 1 月 1 日から 2079 年 6 月 6 日までの範囲内で、精度 1 分の日付と時刻のデータ。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int16&quot; /&gt;. A 16-bit signed integer.">
        <see cref="T:System.Int16" />。 16 ビット符号付き整数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />。 精度が通貨単位の 1/10,000 の、-214,748.3648 から +214,748.3647 までの範囲内の通貨値。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary vsli:raw="A special data type for specifying structured data contained in table-valued parameters.">テーブル値パラメーターに含まれる構造化データを指定するための特別なデータ型。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.">
        <see cref="T:System.String" />。 最大長が 2 31 -1 (2,147,483,647) 文字の非 Unicode データの可変長ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary vsli:raw="Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server &lt;see langword=&quot;time&quot; /&gt; value.">24 時間表記に基づく時間データ。 時刻の値の範囲は、00:00:00 から 23:59:59.9999999 で、精度は 100 ナノ秒です。 SQL Server <see langword="time" /> 値に対応します。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. Automatically generated binary numbers, which are guaranteed to be unique within a database. &lt;see langword=&quot;timestamp&quot; /&gt; is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.">
        <see cref="T:System.Array" /> 型の <see cref="T:System.Byte" />。 自動的に生成されるバイナリ数値。データベース内で一意であることが保証されます。 <see langword="timestamp" /> は通常、テーブルの行にバージョンを記録するためのメカニズムとして使用されます。 格納サイズは 8 バイトです。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Byte&quot; /&gt;. An 8-bit unsigned integer.">
        <see cref="T:System.Byte" />。 8 ビット符号なし整数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary vsli:raw="A SQL Server user-defined type (UDT).">SQL Server ユーザー定義型 (UDT)。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Guid&quot; /&gt;. A globally unique identifier (or GUID).">
        <see cref="T:System.Guid" />。 グローバル一意識別子 (GUID)。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.">
        <see cref="T:System.Array" /> 型の <see cref="T:System.Byte" />。 1 から 8,000 バイトの範囲内のバイナリ データの可変長ストリーム。 バイト配列が 8,000 バイトを超える場合は、暗黙の型変換が失敗します。 8,000 バイトを超えるバイト配列を使用するときは、オブジェクトを明示的に設定します。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.VarChar&quot; /&gt; when the database column is &lt;see langword=&quot;varchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />。 1 から 8,000 文字の範囲内の非 Unicode 文字の可変長ストリーム。 データベース列が <see langword="varchar(max)" /> の場合、<see cref="F:System.Data.SqlDbType.VarChar" /> を使用します。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Object&quot; /&gt;. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.">
        <see cref="T:System.Object" />。 数値、文字列、バイナリ、日付の各データのほか、SQL Server の値である Empty と Null を格納できる特殊なデータ型。他の型が宣言されていない場合はこのデータ型であると見なされます。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary vsli:raw="An XML value. Obtain the XML as a string using the &lt;see cref=&quot;M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)&quot; /&gt; method or &lt;see cref=&quot;P:System.Data.SqlTypes.SqlXml.Value&quot; /&gt; property, or as an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; by calling the &lt;see cref=&quot;M:System.Data.SqlTypes.SqlXml.CreateReader&quot; /&gt; method.">XML 値。 <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> メソッドまたは <see cref="P:System.Data.SqlTypes.SqlXml.Value" /> プロパティを使用して、XML を文字列として取得します。または、<see cref="T:System.Xml.XmlReader" /> メソッドを呼び出して、XML を <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" /> として取得します。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary vsli:raw="All the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; objects and structures implement the &lt;see langword=&quot;INullable&quot; /&gt; interface.">
        <see cref="N:System.Data.SqlTypes" /> のすべてのオブジェクトおよび構造体は、<see langword="INullable" /> インターフェイスを実装しています。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary vsli:raw="Indicates whether a structure is null. This property is read-only.">構造体が null かどうかを示します。 このプロパティは読み取り専用です。</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see langword=&quot;true&quot; /&gt; if the value of this object is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">このオブジェクトの値が null の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">
        <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> クラスは、スタンドアロン コンポーネントとしてではなく、他のクラスによる標準機能の派生元クラスとして使用するためのものです。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
      <param name="e" vsli:raw="A reference to an inner exception.">内部例外への参照。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Represents a variable-length stream of binary data to be stored in or retrieved from a database.">データベースに格納する、またはデータベースから取得するバイナリ データの可変長ストリームを表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.DBNull" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlBinary" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure, setting the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property to the contents of the supplied byte array.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体の新しいインスタンスを初期化し、<see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティを指定されたバイト配列の定数に設定します。</summary>
      <param name="value" vsli:raw="The byte array to be stored or retrieved.">格納または取得するバイト配列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">指定された 2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 値を連結して、新しい <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を作成します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; that is the concatenated value of x and y.">x と y の値を連結した <see cref="T:System.Data.SqlTypes.SqlBinary" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトとこの <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体と比較する <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">この <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体とオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトの値はオブジェクト未満。</description></item><item><term> ゼロ</term><description> この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトはオブジェクトと同じ。</description></item><item><term> 0 より大きい値</term><description> この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトはオブジェクトより大きいか、またはオブジェクトが null 参照です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied object and returns an indication of their relative values.">指定したオブジェクトとこの <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体と比較されるオブジェクト。</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">この <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体とオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトの値はオブジェクト未満。</description></item><item><term> ゼロ</term><description> この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトはオブジェクトと同じ。</description></item><item><term> 0 より大きい値</term><description> この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトはオブジェクトより大きいか、またはオブジェクトが null 参照です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を連結して、新しい <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を作成します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">
        <paramref name="x" /> パラメーターと <paramref name="y" /> パラメーターを連結した値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較し、それらの構造体が等しいかどうかを判断します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlBinary&quot; /&gt; will be null.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。 いずれかのインスタンスが null の場合、<see langword="SqlBinary" /> は null になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">指定したオブジェクト パラメーターを <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> オブジェクトの <see cref="T:System.Data.SqlTypes.SqlBinary" /> プロパティと比較します。</summary>
      <param name="value" vsli:raw="The object to be compared.">比較されるオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.Data.SqlTypes.SqlBinary" /> のインスタンスで、2 つが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体のハッシュ コードを返します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体より大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。 <see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。 <see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体より小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。 <see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。 <see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較し、それらの構造体が等しくないかどうかを判断します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameters to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> パラメーターを連結して、新しい <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を作成します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">
        <paramref name="x" /> パラメーターと <paramref name="y" /> パラメーターを連結した値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較し、それらの構造体が等しいかどうかを判断します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を <see cref="T:System.Byte" /> 配列に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">
        <see cref="T:System.Byte" /> 配列。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体より大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。 <see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。 <see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts an array of bytes to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">バイト配列を <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体に変換します。</summary>
      <param name="x" vsli:raw="The array of bytes to be converted.">変換されるバイト配列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure that represents the converted array of bytes.">変換されたバイト配列を表す <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較し、それらの構造体が等しくないかどうかを判断します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体より小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。 <see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。 <see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />」をご覧ください。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />」をご覧ください。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />」をご覧ください。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> のこのインスタンスを <see cref="T:System.Data.SqlTypes.SqlGuid" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to a string.">この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトを文字列に変換します。</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;. If the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; is null the string will contain &quot;null&quot;.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBinary" /> を格納している文字列。 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> が null の場合は、文字列に "null" が格納されます。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure is null. This property is read-only.">この <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体が null であるかどうかを示します。 このプロパティは読み取り専用です。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="null" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary vsli:raw="Gets the single byte from the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property located at the position indicated by the integer parameter, &lt;paramref name=&quot;index&quot; /&gt;. If &lt;paramref name=&quot;index&quot; /&gt; indicates a position beyond the end of the byte array, a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; will be raised. This property is read-only.">整数パラメーター <paramref name="index" /> で指定された位置にある <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティから 1 バイトを取得します。 <paramref name="index" /> で示された位置がバイト配列の末尾を超えている場合は、<see cref="T:System.Data.SqlTypes.SqlNullValueException" /> が発生します。 このプロパティは読み取り専用です。</summary>
      <param name="index" vsli:raw="The position of the byte to be retrieved.">取得するバイトの位置。</param>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;index&quot; /&gt; parameter indicates a position beyond the length of the byte array as indicated by the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティに <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> が格納されているときに、プロパティが読み取られました。  
  
- または - 
<paramref name="index" /> パラメーターが示す位置が、<see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> プロパティで示されるバイト配列の長さを超えています。</exception>
      <returns vsli:raw="The byte located at the position indicated by the integer parameter.">整数パラメーターで指定された位置にあるバイト。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary vsli:raw="Gets the length in bytes of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property. This property is read-only.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティの長さをバイト数で取得します。 このプロパティは読み取り専用です。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> プロパティに <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> が格納されているときに、<see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> プロパティが読み取られました。</exception>
      <returns vsli:raw="The length of the binary data in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティのバイナリ データの長さ。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体の値を取得します。 このプロパティは読み取り専用です。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property is read when the property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">プロパティに <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> が格納されているときに、<see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> プロパティが読み取られました。</exception>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体の値。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.">データベースに格納する、またはデータベースから取得する 1 または 0 の整数値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary vsli:raw="Represents a false value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 構造体のインスタンスの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> プロパティに割り当てることができる false 値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary vsli:raw="Represents &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.DBNull" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlBoolean" /> を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary vsli:raw="Represents a one value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 構造体のインスタンスの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> プロパティに割り当てることができる 1 の値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary vsli:raw="Represents a true value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 構造体のインスタンスの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> プロパティに割り当てることができる true 値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 構造体のインスタンスの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the supplied Boolean value.">指定したブール値を使用して、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure; either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値。<see langword="true" /> または <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the specified integer value.">指定した整数値を使用して、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The integer whose value is to be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体で使用する値を持つ整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体のビットごとの AND 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="The result of the logical AND operation.">論理 AND 演算の結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> オブジェクトとこの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> オブジェクトを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">比較する <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> オブジェクト、または null 参照 (Visual Basic の場合は <see langword="Nothing" />)。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">このインスタンスと値の相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 値</term><description> 説明</description></listheader><item><term> 負の整数</term><description> このインスタンスは <paramref name="value" /> より小さい値です。</description></item><item><term> ゼロ</term><description> このインスタンスは <paramref name="value" /> と同じ値です。</description></item><item><term> 正の整数</term><description> このインスタンスはより大きい <paramref name="value" /> か、または <paramref name="value" /> が null 参照 ( <see langword="Nothing" /> Visual Basic) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a specified object and returns an indication of their relative values.">指定したオブジェクトとこの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="An object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">比較するオブジェクト、または null 参照 (Visual Basic の場合は <see langword="Nothing" />)。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">このインスタンスと値の相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 値</term><description> 説明</description></listheader><item><term> 負の整数</term><description> このインスタンスは <paramref name="value" /> より小さい値です。</description></item><item><term> ゼロ</term><description> このインスタンスは <paramref name="value" /> と同じ値です。</description></item><item><term> 正の整数</term><description> このインスタンスはより大きい <paramref name="value" /> か、または <paramref name="value" /> が null 参照 ( <see langword="Nothing" /> Visual Basic) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を比較し、それらの構造体が等しいかどうかを判断します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">指定したオブジェクト パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> と比較します。</summary>
      <param name="value" vsli:raw="The object to be compared.">比較されるオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.Data.SqlTypes.SqlBoolean" /> のインスタンスで、2 つが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較し、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体で 1 の補数演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 1 の補数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体のビットごとの AND 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="The result of the logical AND operation.">論理 AND 演算の結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise OR of its operands.">オペランドのビットごとの OR を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="The results of the logical OR operation.">論理 OR 演算の結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較し、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.">指定したパラメーターでビットごとの排他的 OR (XOR) 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="The result of the logical XOR operation.">論理 XOR 演算の結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to a Boolean.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> をブール値に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to convert.">変換対象の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A Boolean set to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に設定されたブール値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The false operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is false.">false 演算子を使用して、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> をテストし、false かどうかを確認できます。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">テストされる <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したパラメーター <see cref="T:System.Data.SqlTypes.SqlBoolean" /> が <see langword="false" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を比較して、最初の構造体が 2 番目の構造体より大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> オブジェクト。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> オブジェクト。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を比較して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">指定したバイト値を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換されるバイト値。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; value that contains 0 or 1.">0 または 1 を格納している <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether they are not equal.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較し、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a NOT operation on a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に対して NOT 演算を実行します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; on which the NOT operation will be performed.">NOT 演算が実行される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; with the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt;&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if argument was true, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if argument was null, and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; otherwise.">引数が true だった場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> を持つ <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />、引数が null だった場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />、それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体で 1 の補数演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 1 の補数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The true operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is true.">true 演算子を使用して、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> をテストし、true かどうかを確認できます。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">テストされる <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したパラメーター <see cref="T:System.Data.SqlTypes.SqlBoolean" /> が <see langword="true" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise OR operation on the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体のビットごとの OR 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose Value is the result of the bitwise OR operation.">ビットごとの OR 演算の結果を Value に持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a logical value to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; equivalent.">論理値の指定した <see cref="T:System.String" /> 表現を等価の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">変換される <see cref="T:System.String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure that contains the parsed value.">解析した値を格納している <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 0.">値が 1 または 0 である、新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が <see langword="true" /> の場合、新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の値は 1 です。 それ以外の場合、新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 0.">値が 1 または 0 である、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が <see langword="true" /> の場合、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値は 1 です。 それ以外の場合、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 0.">値が 1 または 0 である、新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が <see langword="true" /> の場合、新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値は 1 です。 それ以外の場合、新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure's value is 0.">値が 1 または 0 である、新しい <see langword="SqlInt16" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が <see langword="true" /> の場合、新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の値は 1 です。 それ以外の場合、新しい <see langword="SqlInt16" /> 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure's value is 0.">値が 1 または 0 である、新しい <see langword="SqlInt32" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が <see langword="true" /> の場合、新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の値は 1 です。 それ以外の場合、新しい <see langword="SqlInt32" /> 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure's value is 0.">値が 1 または 0 である、新しい <see langword="SqlInt64" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が <see langword="true" /> の場合、新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の値は 1 です。 それ以外の場合、新しい <see langword="SqlInt64" /> 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 1. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;false&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 0. If &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value is neither 1 nor 0, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;.">値が 1 または 0 である、新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が <see langword="true" /> の場合、新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値は 1 です。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が <see langword="false" /> の場合、新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値は 0 です。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が 1 でも 0 でもない場合、新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値は <see cref="F:System.Data.SqlTypes.SqlMoney.Null" /> です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose value is 1 or 0.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals true, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 1; otherwise the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 0.">値が 1 または 0 である、新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。  
  
<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が true の場合、新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の値は 1 です。それ以外の場合、新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 0.">値が 1 または 0 である、新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が <see langword="true" /> と等しい場合、<see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の値は 1 です。 それ以外の場合、新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a string.">この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を文字列に変換します。</summary>
      <returns vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;. If the value is null, the string will contain &quot;null&quot;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の値を格納している文字列。 値が null の場合は、文字列に "null" が格納されます。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="The result of the logical XOR operation.">論理 XOR 演算の結果。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure as a byte.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値をバイトとして取得します。</summary>
      <returns vsli:raw="A byte representing the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値を表すバイト。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">現在の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> が <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> かどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が <see langword="Value" /> の場合は <see langword="False" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null.">この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体が null であるかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />構造体が null の場合は。それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary vsli:raw="Gets a value that indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">現在の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> が <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が <see langword="Value" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値を取得します。 このプロパティは読み取り専用です。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">プロパティが null に設定されています。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> が <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.">データベースに格納する、またはデータベースから取得する 0 から 255 までの範囲の、8 ビットの符号なし整数を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の最大有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の最小有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.DBNull" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlByte" /> を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 構造体のインスタンスの <see cref="T:System.Data.SqlTypes.SqlByte" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure using the specified byte value.">指定したバイト値を使用して、<see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A byte value to be stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">新しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 構造体の <see cref="T:System.Data.SqlTypes.SqlByte" /> プロパティに格納されるバイト値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を加算した値を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; property contains the results of the addition.">加算した結果を格納している <see langword="Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドのビットごとの AND を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="The results of the bitwise AND operation.">ビットごとの AND 演算の結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドのビットごとの OR を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="The results of the bitwise OR operation.">ビットごとの OR 演算の結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> オブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object to be compared.">比較される <see cref="T:System.Data.SqlTypes.SqlByte" /> オブジェクト。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Object" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドを 2 番目のオペランドで除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">除算の結果を含む <see cref="P:System.Data.SqlTypes.SqlByte.Value" />プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlByte&quot; /&gt; will be null.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。 いずれかのインスタンスが null の場合、<see langword="SqlByte" /> は null になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object.">指定した <see cref="T:System.Object" /> パラメーターを <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> オブジェクトの <see cref="T:System.Data.SqlTypes.SqlByte" /> プロパティと比較します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.Data.SqlTypes.SqlByte" /> のインスタンスで、2 つが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を比較して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドを 2 番目のオペランドで除算した後の剰余を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">剰余を格納している <see cref="T:System.Data.SqlTypes.SqlByte" /> を持つ <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; values and returns the remainder.">2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> 値を除算し、剰余を返します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">
        <paramref name="x" /> と <paramref name="y" /> の除算によって得られた剰余。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">乗算の積を格納している <see cref="T:System.Data.SqlTypes.SqlByte" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較し、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">1 の補数演算子は、<see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドでビットごとの 1 の補数演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの 1 の補数を格納している <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を加算した値を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the sum of the two operands.">2 つのオペランドの合計を格納している <see cref="T:System.Data.SqlTypes.SqlByte" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドのビットごとの AND を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="The results of the bitwise AND operation.">ビットごとの AND 演算の結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドのビットごとの OR を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="The results of the bitwise OR operation.">ビットごとの OR 演算の結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドを 2 番目のオペランドで除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">除算の結果を含む <see cref="P:System.Data.SqlTypes.SqlByte.Value" />プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="The results of the bitwise XOR operation.">ビットごとの XOR 演算の結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換される <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーター。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a byte.">指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体をバイトに変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted to a byte.">バイトに変換される <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <returns vsli:raw="A byte whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> パラメーターの <see cref="T:System.Data.SqlTypes.SqlByte" /> プロパティと等しい値を持つバイト。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ <see langword="SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure.">
        <see langword="SqlMoney" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlString" /> を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <param name="x" vsli:raw="An instance of the &lt;see langword=&quot;SqlString&quot; /&gt; class.">
        <see langword="SqlString" /> クラスのインスタンス。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the numeric value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> で表される数値と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see langword=&quot;SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see langword="SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">指定したバイト値を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換されるバイト値。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the supplied parameter.">指定したパラメーターと等しい <see cref="T:System.Data.SqlTypes.SqlByte" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較し、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドを 2 番目のオペランドで除算した後の剰余を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">剰余を格納している <see cref="T:System.Data.SqlTypes.SqlByte" /> を持つ <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">乗算の積を格納している <see cref="T:System.Data.SqlTypes.SqlByte" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">1 の補数演算子は、<see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドでビットごとの 1 の補数演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの 1 の補数を格納している <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドから 2 番目のオペランドを減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドから 2 番目のオペランドを減算した結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 8-bit unsigned integer equivalent.">数値の <see cref="T:System.String" /> 形式をそれと等価な 8 ビット符号なし整数に変換します。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">解析対象の文字列。<see langword="String" /></param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure that contains the 8-bit number represented by the &lt;see langword=&quot;String&quot; /&gt; parameter.">
        <see langword="String" /> パラメーターで表された 8 ビットの数値を格納している <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドから 2 番目のオペランドを減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドから 2 番目のオペランドを減算した結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> が 0 以外の場合は <see langword="true" />。0 の場合は <see langword="false" />。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">この <see langword="SqlDecimal" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDouble&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> と同じ値を持つ <see langword="SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt16&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> と同じ値を持つ <see langword="SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt32&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> と同じ値を持つ <see langword="SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure who &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> の <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="T:System.Data.SqlTypes.SqlByte" /> を持つ <see langword="SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">この <see langword="SqlMoney" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlSingle&quot; /&gt; structure that has the same &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">この <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 構造体と同じ <see cref="T:System.Data.SqlTypes.SqlByte" /> を持つ <see langword="SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> のこのインスタンスを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> の文字列形式を格納している <see langword="SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;. If the &lt;see langword=&quot;Value&quot; /&gt; is null, the &lt;see langword=&quot;String&quot; /&gt; will be a null string.">
        <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> の <see cref="T:System.Data.SqlTypes.SqlByte" /> を格納している文字列。 <see langword="Value" /> が null の場合、<see langword="String" /> は null 文字列になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="The results of the XOR operation.">XOR 演算の結果。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure is null.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体が null かどうかを示すブール値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">null の場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の値を取得します。 このプロパティは読み取り専用です。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の値。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Represents a mutable reference type that wraps either a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Buffer&quot; /&gt; or a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Stream&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> または <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" /> をラップする、変更可能な参照型を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified byte array.">指定されたバイト配列に基づいて、<see cref="T:System.Data.SqlTypes.SqlBytes" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="buffer" vsli:raw="The array of unsigned bytes.">符号なしバイト配列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">指定された <see cref="T:System.Data.SqlTypes.SqlBytes" /> 値に基づいて、<see cref="T:System.Data.SqlTypes.SqlBinary" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; value.">指定された <see cref="T:System.Data.SqlTypes.SqlBytes" /> 値に基づいて、<see cref="T:System.IO.Stream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see langword=&quot;XmlSchemaSet&quot; /&gt;.">指定した <see langword="XmlSchemaSet" /> の XSD を示す <see langword="string" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBytes" /> 構造体に変換します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 構造。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体に変換します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlBytes" /> 構造体。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to the passed-in buffer and returns the number of copied bytes.">この <see cref="T:System.Data.SqlTypes.SqlBytes" /> のインスタンスから、引数に指定されたバッファーにバイトをコピーし、コピーされたバイト数を返します。</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Int64" /> インスタンス内の値のオフセット位置 (<see cref="T:System.Data.SqlTypes.SqlBytes" /> long 値)。</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">コピー対象のバイト配列バッファー。</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">バッファー内のコピー開始位置を示すオフセット値 (<see cref="T:System.Int32" /> 整数)。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">コピーするバイト数を表す <see cref="T:System.Int32" /> 型の整数。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the number of copied bytes.">コピーされたバイト数を表す <see cref="T:System.Int64" /> long 値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">この <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスの長さを設定します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the length.">長さを表す <see cref="T:System.Int64" /> long 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to null.">この <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスを null に設定します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">シリアル化情報と、この <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスの再インスタンス化に必要なすべてのデータを取得します。</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">シリアル化情報が設定されるオブジェクト。</param>
      <param name="context" vsli:raw="The destination context of the serialization.">シリアル化の対象コンテキスト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary vsli:raw="Constructs and returns a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">この <see cref="T:System.Data.SqlTypes.SqlBinary" /> インスタンスから <see cref="T:System.Data.SqlTypes.SqlBytes" /> を構築して返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this instance.">このインスタンスの <see cref="T:System.Data.SqlTypes.SqlBinary" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">引数に指定されたバイトから、この <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスに文字をコピーします。</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Int64" /> インスタンス内の値のオフセット位置 (<see cref="T:System.Data.SqlTypes.SqlBytes" /> long 値)。</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">コピー対象のバイト配列バッファー。</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">バッファー内のコピー開始位置を示すオフセット値 (<see cref="T:System.Int32" /> 整数)。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">コピーするバイト数を表す <see cref="T:System.Int32" /> 型の整数。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">内部バッファーへの参照を返します。</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">内部バッファーへの参照。 アンマネージド ポインター上に作成された <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスの場合、内部バッファーのマネージド コピーを返します。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null.">この <see cref="T:System.Data.SqlTypes.SqlBytes" /> が null かどうかを示すブール値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> が null の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance at the specified index.">指定したインデックス位置にある <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスを取得または設定します。</summary>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">
        <see cref="T:System.Int64" /> 値。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">
        <see cref="T:System.Byte" /> 値。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスが保持する値の長さを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">
        <see cref="T:System.Int64" /> のインスタンスに格納された値の長さを表す <see cref="T:System.Data.SqlTypes.SqlBytes" /> 値。  
  
インスタンスから利用できるバッファーがない場合、または値が null の場合は -1 を返します。  
  
ストリームでラップされたインスタンスの <see cref="P:System.IO.Stream.Length" /> を返します。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary vsli:raw="Gets the maximum length of the value of the internal buffer of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlBytes" /> の内部バッファーが保持できる値の最大長を取得します。</summary>
      <returns vsli:raw="A long representing the maximum length of the value of the internal buffer. Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">内部バッファーが保持できる値の最大長を表す long 型の値。 ストリームでラップされた <see cref="T:System.Data.SqlTypes.SqlBytes" /> の場合、-1 を返します。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary vsli:raw="Gets a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlBytes" /> の null インスタンスが取得されます。</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" />プロパティがを返すインスタンス <see langword="true" /> 。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">この <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスについて、ストレージの状態に関する情報を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">
        <see cref="T:System.Data.SqlTypes.StorageState" /> 列挙です。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary vsli:raw="Gets or sets the data of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as a stream.">この <see cref="T:System.Data.SqlTypes.SqlBytes" /> のデータをストリームとして取得または設定します。</summary>
      <returns vsli:raw="The stream that contains the SqlBytes data.">SqlBytes データを格納しているストリーム。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlBytes" /> が保持する値のマネージド コピーを返します。</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as an array of bytes.">この <see cref="T:System.Data.SqlTypes.SqlBytes" /> の値を表すバイト配列。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is a mutable reference type that wraps a &lt;see cref=&quot;T:System.Char&quot; /&gt; array or a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> は、<see cref="T:System.Char" /> 配列または <see cref="T:System.Data.SqlTypes.SqlString" /> インスタンスをラップする変更可能な参照型です。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified character array.">指定された文字配列に基づいて、<see cref="T:System.Data.SqlTypes.SqlChars" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">
        <see cref="T:System.Char" /> 配列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; value.">指定された <see cref="T:System.Data.SqlTypes.SqlChars" /> 値に基づいて、<see cref="T:System.Data.SqlTypes.SqlString" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体に変換します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlChars" /> 構造体。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 構造。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlChars" /> 構造体に変換します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 構造。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to the passed-in buffer and returns the number of copied characters.">この <see cref="T:System.Data.SqlTypes.SqlChars" /> のインスタンスから、引数に指定されたバッファーに文字をコピーし、コピーされた文字数を返します。</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンス内の値のオフセット位置 (<see cref="T:System.Int64" /><see langword="long" /> 値)。</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">コピー対象の文字配列バッファー。</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">バッファー内のコピー開始位置を示すオフセット値 (<see cref="T:System.Int32" /> 整数)。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer value representing the number of characters to copy.">コピーする文字数を表す <see cref="T:System.Int32" /> 型の整数値。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the number of copied bytes.">コピーされたバイト数を表す <see cref="T:System.Int64" /><see langword="long" /> 値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">この <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスの長さを設定します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the length.">長さを表す <see cref="T:System.Int64" /><see langword="long" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to null.">この <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスを null に設定します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">シリアル化情報と、この <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスの再インスタンス化に必要なすべてのデータを取得します。</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">シリアル化情報が設定されるオブジェクト。</param>
      <param name="context" vsli:raw="The destination context of the serialization.">シリアル化の対象コンテキスト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to its equivalent &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation.">この <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスを、対応する等価の <see cref="T:System.Data.SqlTypes.SqlString" /> 表現に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation of this type.">この型の <see cref="T:System.Data.SqlTypes.SqlString" /> 表現。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">引数に指定されたバッファーから、この <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスに文字をコピーします。</summary>
      <param name="offset" vsli:raw="A &lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンス内の値のオフセット位置 (<see langword="long" /> 値)。</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">コピー対象の文字配列バッファー。</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">バッファー内のコピー開始位置を示すオフセット値 (<see cref="T:System.Int32" /> 整数)。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of characters to copy.">コピーする文字数を表す <see cref="T:System.Int32" /> 型の整数。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">内部バッファーへの参照を返します。</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">内部バッファーへの参照。 アンマネージド ポインター上に作成された <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスの場合、内部バッファーのマネージド コピーを返します。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null.">この <see cref="T:System.Data.SqlTypes.SqlChars" /> が null かどうかを示すブール値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> が null の場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance at the specified index.">指定したインデックス位置にある <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスを取得または設定します。</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">
        <see cref="T:System.Int64" /> 値。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">
        <see cref="T:System.Char" /> 値。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスが保持する値の長さを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that indicates the length in characters of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance, or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">
        <see cref="T:System.Int64" /> インスタンスが保持する値の文字長を示す <see cref="T:System.Data.SqlTypes.SqlChars" /> 値。  
  
インスタンスから利用できるバッファーがない場合、または値が null の場合は -1 を返します。  
  
ストリームでラップされたインスタンスの <see cref="P:System.IO.Stream.Length" /> を返します。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary vsli:raw="Gets the maximum length in two-byte characters of the value the internal buffer can hold.">内部バッファーが保持できる値の最大長 (2 バイト文字単位) を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the maximum length in two-byte characters of the value of the internal buffer.  &#xA;  &#xA; Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">内部バッファーが保持できる値の最大長 (2 バイト文字単位) を表す <see cref="T:System.Int64" /> 値。  
  
ストリームでラップされた <see cref="T:System.Data.SqlTypes.SqlChars" /> の場合、-1 を返します。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary vsli:raw="Returns a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlChars" /> の null インスタンスを返します。</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlChars.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;. For more information, see Handling Null Values.">
        <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" />プロパティがを返すインスタンス <see langword="true" /> 。 詳細については、「 Null 値の処理」を参照してください。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">この <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスについて、ストレージの状態に関する情報を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">
        <see cref="T:System.Data.SqlTypes.StorageState" /> 列挙です。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlChars" /> が保持する値のマネージド コピーを返します。</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; as an array of characters.">この <see cref="T:System.Data.SqlTypes.SqlChars" /> の値を表す文字配列。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary vsli:raw="Specifies the compare option values for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプション値を指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">文字のアルファベット値ではなく、文字の数値に基づいて並べ替えるように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary vsli:raw="Performs a binary sort.">バイナリでの並べ替えを実行します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore case.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> の比較で、大文字と小文字を区別しないように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the Kana type. Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as &quot;computer&quot; or &quot;Internet&quot;. A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> の比較で、カナ型を無視するように指定します。 カナ型とは、日本語の発音を表すひらがなとカタカナの文字を指します。 ひらがなは、本来の日本語の表現と単語に使用し、カタカナは "コンピューター" または "インターネット" などの外来語に使用します。 発音は、ひらがなとカタカナのどちらでも表現できます。 この値が選択されている場合、ある発音を示すひらがなは、同じ発音を示すカタカナと同一であると見なされます。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore nonspace combining characters, such as diacritics. The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character. Non-space combining characters do not use character space by themselves when rendered. For more information about non-space combining characters, see the Unicode Standard at https://www.unicode.org.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> の比較で、発音区別符など、空白以外の組み合わせ文字を無視するように指定します。 Unicode 標準は、基本文字を組み合わせて生成される新しい文字を組み合わせ文字として定義しています。 空白以外の組み合わせ文字は、表示するときに文字と文字の間に空白が入りません。 空白以外の組み合わせ文字の詳細については、https://www.unicode.org の「The Unicode Standard」を参照してください。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the character width. For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> の比較で、半角と全角の区別を無視するように指定します。 たとえば、日本語のカタカナ文字は、全角または半角で記述できます。この値を選択した場合、全角で記述されたカタカナ文字は、半角で記述されたカタカナ文字と同一であると見なされます。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary vsli:raw="Specifies the default option settings for &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> の比較で、既定のオプション設定を指定します。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure has a different underlying data structure from its corresponding .NET type, &lt;see cref=&quot;T:System.DateTime&quot; /&gt;, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from &quot;00:00:00 AM 1/1/1900&quot; to an integer will return 0.">データベースに格納する、またはデータベースから取得する日付と時刻のデータを表します。値の範囲は 1753 年 1 月 1 日から 9999 年 12 月 31 日までで、精度は 3.33 ミリ秒です。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体は、基になるデータ構造体が、対応する .NET Framework の型 <see cref="T:System.DateTime" /> (12:00:00 AM 1/1/0001 から 11:59:59 PM 12/31/9999 までの任意の日時を、100 ナノ秒の精度で表現できる) とは異なります。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> では、00:00:00 AM 1/1/1900 を起点とした相対的な差が格納されます。 つまり、"00:00:00 AM 1/1/1900" を整数に変換すると、0 が返されます。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary vsli:raw="Represents the maximum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の有効な日付の最大値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary vsli:raw="Represents the minimum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の有効な日付の最小値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.DBNull" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlDateTime" /> を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one hour.">値が 1 時間に相当するタイマー刻み数である定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one minute.">値が 1 分に相当するタイマー刻み数である定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one second.">値が 1 秒に相当するタイマー刻み数である定数。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">
        <see cref="T:System.DateTime" /> 値を指定して、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">
        <see langword="DateTime" /> 構造。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters.">パラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="dayTicks" vsli:raw="An integer value that represents the date as ticks.">日付をタイマー刻みとして表す整数値。</param>
      <param name="timeTicks" vsli:raw="An integer value that represents the time as ticks.">時刻をタイマー刻みとして表す整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day.">年、月、日を初期化するパラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="year" vsli:raw="An integer representing the year of the of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の年を表す整数値。</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の月を表す整数値。</param>
      <param name="day" vsli:raw="An integer value representing the day number of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の日付数字を表す整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, and second of the new structure.">新しい構造体の年、月、日、時、分、秒を初期化するパラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の年を表す整数値。</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の月を表す整数値。</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の月の日付を表す整数値。</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の時間を表す整数値。</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の分を表す整数値。</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の秒を表す整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and millisecond of the new structure.">新しい構造体の年、月、日、時、分、秒、ミリ秒を初期化するパラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の年を表す整数値。</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の月を表す整数値。</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の月の日付を表す整数値。</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の時間を表す整数値。</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の分を表す整数値。</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の秒を表す整数値。</param>
      <param name="millisecond" vsli:raw="An double value representing the millisecond of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体のミリ秒を表す double 型の値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and microsecond of the new structure.">新しい構造体の年、月、日、時、分、秒、マイクロ秒を初期化するパラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の年を表す整数値。</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の月を表す整数値。</param>
      <param name="day" vsli:raw="An integer value representing the day of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の日付を表す整数値。</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の時間を表す整数値。</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の分を表す整数値。</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の秒を表す整数値。</param>
      <param name="bilisecond" vsli:raw="An integer value representing the microsecond (thousandths of a millisecond) of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体のマイクロ秒 (1 ミリ秒の 1/1000) を表す整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to the specified &lt;see langword=&quot;TimeSpan&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> を指定した <see langword="TimeSpan" /> に追加します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 値。</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">
        <see langword="Timespan" /> 値。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体とこの <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体を比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be compared.">比較対象の <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスは <see cref="T:System.Data.SqlTypes.SqlDateTime" /> より小さい値です。</description></item><item><term> ゼロ</term><description> このインスタンスは <see cref="T:System.Data.SqlTypes.SqlDateTime" /> と同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスは <see cref="T:System.Data.SqlTypes.SqlDateTime" /> よりも大きくなっています。  
  
- または - 
 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlDateTime" /> とこの <see cref="T:System.Object" /> 構造体を比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; as Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; object.">指定したオブジェクト パラメーターを <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> オブジェクトの <see cref="T:System.Data.SqlTypes.SqlDateTime" /> プロパティと比較します。</summary>
      <param name="value" vsli:raw="The object to be compared.">比較されるオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.Data.SqlTypes.SqlDateTime" /> のインスタンスで、2 つが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">インスタンスのハッシュ コードを取得します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスの論理比較を実行して、等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds the period of time indicated by the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; parameter, &lt;paramref name=&quot;t&quot; /&gt;, to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">指定した <see cref="T:System.TimeSpan" /> 構造体に、指定した <see cref="T:System.Data.SqlTypes.SqlDateTime" /> パラメーターの <paramref name="t" /> で示された時間を加算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">
        <see cref="T:System.TimeSpan" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;. If either argument is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;, the new &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;.">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" />。 いずれかの引数が <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" /> の場合、新しい <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> は <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体を <see cref="T:System.DateTime" /> 構造体に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object whose &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties contain the same date and time values as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">指定した <see cref="T:System.DateTime" /> 構造体の <see cref="P:System.DateTime.Date" /> プロパティと同じ日付と時刻の値を格納している <see cref="P:System.DateTime.TimeOfDay" /> プロパティと <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlDateTime" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDateTime" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the date and time represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see langword=&quot;Value&quot; /&gt; of the newly created &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure will be null.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> パラメーターによって表される日付と時刻に等しい <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlString" /> が null の場合、新しく作成される <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の <see langword="Value" /> は null になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.DateTime" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体に変換します。</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">
        <see langword="DateTime" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the combined &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties of the supplied &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">指定した <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> プロパティと <see cref="P:System.DateTime.Date" /> プロパティの組み合わせに等しい <see cref="P:System.DateTime.TimeOfDay" /> を持つ <see cref="T:System.DateTime" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスの論理比較を実行して、等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure, &lt;paramref name=&quot;t&quot; /&gt;, from the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">指定した <see cref="T:System.TimeSpan" /> 構造体から、指定した <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の <paramref name="t" /> を減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造。</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">
        <see cref="T:System.TimeSpan" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure representing the results of the subtraction.">減算の結果を表す <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a date and time to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; equivalent.">指定した <see cref="T:System.String" /> 形式の日付と時刻を等価の <see cref="T:System.Data.SqlTypes.SqlDateTime" /> に変換します。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; to be parsed.">解析対象の文字列。<see langword="string" /></param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure equal to the date and time represented by the specified &lt;see langword=&quot;string&quot; /&gt;.">指定した <see langword="string" /> によって表される日付と時刻に等しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the specified &lt;see langword=&quot;Timespan&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; instance.">この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> インスタンスから、指定した <see langword="Timespan" /> を減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 値。</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">
        <see langword="Timespan" /> 値。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; structure whose value is a string representing the date and time that is contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体に格納されている日付と時刻を表す文字列である値を持つ <see langword="SqlString" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">この <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 構造体の <see cref="T:System.Data.SqlTypes.SqlDateTime" /> プロパティを表す <see langword="String" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary vsli:raw="Gets the number of ticks representing the date of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の日付を表すタイマー刻みの数を取得します。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">
        <see langword="Value" /> 構造体の <see cref="N:System.Data.SqlTypes" /> プロパティが null に設定されている場合にスローされる例外。</exception>
      <returns vsli:raw="The number of ticks representing the date that is contained in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">この <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 構造体の <see cref="T:System.Data.SqlTypes.SqlDateTime" /> プロパティに格納されている日付を表すタイマー刻みの数。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure is null.">この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体が null であるかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">null の場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary vsli:raw="Gets the number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の時刻を表すタイマー刻みの数を取得します。</summary>
      <returns vsli:raw="The number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の時刻を表すタイマー刻みの数。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の値を取得します。 このプロパティは読み取り専用です。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">
        <see langword="Value" /> 構造体の <see cref="N:System.Data.SqlTypes" /> プロパティが null に設定されている場合にスローされる例外。</exception>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の値。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale.">- 10^38 +1 から 10^38 - 1 までの固定精度小数部桁数の数値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary vsli:raw="A constant representing the largest possible value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Precision&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" /> プロパティの最大有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary vsli:raw="A constant representing the maximum value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Scale&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" /> プロパティの最大値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary vsli:raw="A constant representing the maximum value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の最大値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary vsli:raw="A constant representing the minimum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の最小値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; class.">
        <see cref="T:System.DBNull" /> クラスのこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlDecimal" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">パラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 構造体の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> プロパティを表すために使用できる最大桁数。</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 構造体に対して <see cref="T:System.Data.SqlTypes.SqlDecimal" /> プロパティを解決するための小数部桁数。</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体が正数を表すか負数を表すかを示すブール値。</param>
      <param name="data1" vsli:raw="An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">data2、data3、および data4 と組み合わされて、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を表す 128 ビット符号なし整数を構成する 32 ビット符号なし整数。</param>
      <param name="data2" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">data1、data3、および data4 と組み合わされて、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を表す 128 ビット符号なし整数を構成する 32 ビット符号なし整数。</param>
      <param name="data3" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">data1、data2、および data4 と組み合わされて、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を表す 128 ビット符号なし整数を構成する 32 ビット符号なし整数。</param>
      <param name="data4" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">data1、data2、および data3 と組み合わされて、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を表す 128 ビット符号なし整数を構成する 32 ビット符号なし整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">パラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 構造体の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> プロパティを表すために使用できる最大桁数。</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 構造体に対して <see cref="T:System.Data.SqlTypes.SqlDecimal" /> プロパティを解決するための小数部桁数。</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体が正数を表すか負数を表すかを示すブール値。</param>
      <param name="bits" vsli:raw="The 128-bit unsigned integer that provides the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> の値を指定する 128 ビット符号なし整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 値を使用して、<see cref="T:System.Decimal" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be stored as a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Decimal" /> 構造体として格納される <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied double parameter.">指定した倍精度浮動小数点数パラメーターを使用して、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="dVal" vsli:raw="A double, representing the value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を表す倍精度浮動小数点数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied integer value.">指定した整数値を使用して、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The supplied integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値として使用される指定した整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied long integer value.">指定した long 型整数値を使用して、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The supplied long integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値として使用される指定した long 型整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The Abs method gets the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Abs メソッドは、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの絶対値を取得します。</summary>
      <param name="n" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the unsigned number representing the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの絶対値を表す符号なし数値を格納している <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドを加算した値を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">合計を格納している <see cref="T:System.Data.SqlTypes.SqlDecimal" /> プロパティを持つ新しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary vsli:raw="The scale of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand will be adjusted to the number of digits indicated by the digits parameter. Depending on the value of the fRound parameter, the value will either be rounded to the appropriate number of digits or truncated.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドの小数点以下桁数は、digits パラメーターで示される桁数に調整されます。 fRound パラメーターの値に応じて、値は、適切な桁数に丸められるか、切り捨てられます。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be adjusted.">調整される <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="digits" vsli:raw="The number of digits in the adjusted structure.">調整した構造体の桁数。</param>
      <param name="fRound" vsli:raw="If this parameter is &lt;see langword=&quot;true&quot; /&gt;, the new Value will be rounded, if &lt;see langword=&quot;false&quot; /&gt;, the value will be truncated.">このパラメーターが <see langword="true" /> の場合、新しい Value は丸められます。<see langword="false" /> の場合、値は切り捨てられます。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the adjusted number.">調整された数値を格納している <see cref="T:System.Data.SqlTypes.SqlDecimal" /> プロパティを持つ新しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Returns the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体以上で、最小の整数を返します。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the ceiling value is to be calculated.">切り上げ値を計算する対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; representing the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体以上で、最小の値を表す <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; object and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オブジェクトとこの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> とこの <see cref="T:System.Object" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary vsli:raw="Adjusts the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand to the indicated precision and scale.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドの値を示された精度と小数点以下桁数に調整します。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is to be adjusted.">値が調整される <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="precision" vsli:raw="The precision for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の精度。</param>
      <param name="scale" vsli:raw="The scale for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の小数点以下桁数。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value has been adjusted to the precision and scale indicated in the parameters.">パラメーターで示された精度と小数点以下桁数に調整された Value を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">除算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドを 2 番目のオペランドで除算した結果を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">除算の結果を含む <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, the value of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; will be null.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。 いずれかのインスタンスが null の場合、<see langword="SqlDecimal" /> の値は null になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance.">指定した <see cref="T:System.Object" /> パラメーターを <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> インスタンスの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> プロパティと比較します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のインスタンスで、2 つが等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Rounds a specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; number to the next lower whole number.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 数を次に小さな整数に丸めます。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the floor value is to be calculated.">切り下げ値を計算する対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the whole number part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の整数部を格納している <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の論理比較を実行して、最初の構造体が 2 番目の構造体より大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の論理比較を実行して、最初の構造体が 2 番目の構造体より小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">乗算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">乗算の積を格納している <see cref="T:System.Data.SqlTypes.SqlDecimal" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドを加算した値を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">合計を格納している <see cref="T:System.Data.SqlTypes.SqlDecimal" /> プロパティを持つ新しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">除算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドを 2 番目のオペランドで除算した結果を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">除算の結果を含む <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Decimal" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see langword=&quot;Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see langword="Decimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> と等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">変換される <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトです。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Double" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Double" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value equals the value of the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの値と等しい値を持つ新しい <see cref="T:System.Double" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の論理比較を実行して、最初の構造体が 2 番目の構造体より大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to SqlDecimal.">指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を SqlDecimal に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; operand to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> オペランドを <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Decimal" /> 値を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">変換される <see cref="T:System.Decimal" /> 値。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see langword=&quot;Decimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの値と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see langword="Decimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">指定した <see cref="T:System.Int64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Int64" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの値と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Int64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の論理比較を実行して、最初の構造体が 2 番目の構造体より小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">乗算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">乗算の積を格納している <see cref="T:System.Data.SqlTypes.SqlDecimal" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドから 2 番目のオペランドを減算した結果を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">減算した結果を格納している Value プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">単項マイナス演算子は、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを無効にします。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be negated.">無効にされる <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value contains the results of the negation.">否定の結果を格納している値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent.">数値の <see cref="T:System.String" /> 形式をそれと等価な <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">解析対象の文字列。<see langword="String" /></param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に格納されている値と等価の <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary vsli:raw="Raises the value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to the specified exponential power.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を指定した指数で累乗します。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be raised to a power.">累乗される <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="exp" vsli:raw="A double value that indicates the power to which the number should be raised.">数値を累乗する指数を示す double 値。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results.">結果を格納している <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Gets the number nearest the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value with the specified precision.">指定した精度で、指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値に最も近い数値を取得します。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be rounded.">丸められる <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="position" vsli:raw="The number of significant fractional digits (precision) in the return value.">戻り値の小数点以下の有効桁数 (精度)。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results of the rounding operation.">丸め演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Gets a value that indicates the sign of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティの符号を示す値を取得します。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose sign is to be evaluated.">評価される符号を持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の符号を示す数値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドから 2 番目のオペランドを減算した結果を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">減算した結果を格納している Value プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary vsli:raw="Returns the a double equal to the contents of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of this instance.">このインスタンスの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティの内容と等しい double 値を返します。</summary>
      <returns vsli:raw="The decimal representation of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティの 10 進形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> が 0 以外の場合は <see langword="true" />。0 の場合は <see langword="false" />。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の <see langword="Value" /> と等しい <see langword="Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値が <see langword="true" /> の場合、<see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の<see langword="Value" />は 1 になります。 それ以外の場合、<see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の <see langword="Value" /> は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> のインスタンスと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> のインスタンスと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> のインスタンスと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> のインスタンスと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> のインスタンスと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> のインスタンスと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の値の文字列表現を値として持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">
        <see cref="T:System.String" /> 構造体の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> プロパティの文字列形式を格納している新しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Truncates the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value to the that you want position.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を、目的の位置で切り捨てます。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be truncated.">切り捨てられる <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="position" vsli:raw="The decimal position to which the number will be truncated.">数値を切り捨てる小数部の位置。</param>
      <returns vsli:raw="Supply a negative value for the &lt;paramref name=&quot;position&quot; /&gt; parameter in order to truncate the value to the corresponding position to the left of the decimal point.">整数部で値を切り捨てるには、<paramref name="position" /> パラメーターに、切り捨てる位置に対応する負の値を指定します。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary vsli:raw="Gets the binary representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of bytes.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値のバイナリ表現をバイト配列として取得します。</summary>
      <returns vsli:raw="An array of bytes that contains the binary representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値のバイナリ表現を格納しているバイト配列。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary vsli:raw="Gets the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of integers.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体のバイナリ表現を整数の配列として取得します。</summary>
      <returns vsli:raw="An array of integers that contains the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体のバイナリ表現を格納している整数の配列。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体が null であるかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体が null の場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is greater than zero.">この <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 構造体の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> がゼロより大きいかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is assigned to null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> に null が代入されている場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary vsli:raw="Gets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを表すための最大桁数を取得します。</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の <see langword="Value" /> を表すときに使用する最大桁数。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary vsli:raw="Gets the number of decimal places to which &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is resolved.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> を解決するための小数部の桁数を取得します。</summary>
      <returns vsli:raw="The number of decimal places to which the &lt;see langword=&quot;Value&quot; /&gt; property is resolved.">
        <see langword="Value" /> プロパティを解決するための小数部桁数。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を取得します。 このプロパティは読み取り専用です。</summary>
      <returns vsli:raw="A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.">-79,228,162,514,264,337,593,543,950,335 から 79,228,162,514,162,514,264,337,593,543,950,335 までの範囲の数値。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.">データベースに格納する、またはデータベースから取得する -1.79E +308 から 1.79E +308 の範囲内の浮動小数点数を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary vsli:raw="A constant representing the maximum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の最大値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary vsli:raw="A constant representing the minimum possible value of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の最小有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.DBNull" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlDouble" /> を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 構造体のインスタンスの <see cref="T:System.Data.SqlTypes.SqlDouble" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure using the supplied double parameter to set the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property.">新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の <see cref="T:System.Data.SqlTypes.SqlDouble" /> プロパティを設定する倍精度浮動小数点数パラメーターを指定して、<see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A double whose value will be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> に使用する値を持つ倍精度浮動小数点数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">加算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの合計を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの合計。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> とこの <see cref="T:System.Data.SqlTypes.SqlDouble" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Data.SqlTypes.SqlDouble" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> とこの <see cref="T:System.Object" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">除算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドを 2 番目のオペランドで除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">除算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; object.">指定したオブジェクト パラメーターを <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> オブジェクトの <see cref="T:System.Data.SqlTypes.SqlDouble" /> プロパティと比較します。</summary>
      <param name="value" vsli:raw="The object to be compared.">比較されるオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体のハッシュ コードを返します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">乗算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are notequal.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較し、等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">加算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの合計を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの合計。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">除算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドを 2 番目のオペランドで除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">除算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to be converted.">変換される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is either 0 or 1, depending on the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> プロパティに応じて、0 または 1 の <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> が <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to double.">指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を倍精度浮動小数点数に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A double equivalent to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値と等価な倍精度浮動小数点数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the value of the number represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> で表された数値と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlString" />。 <see cref="T:System.Data.SqlTypes.SqlString" /> が <see cref="F:System.Data.SqlTypes.SqlString.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlByte.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlByte" /> が <see cref="F:System.Data.SqlTypes.SqlByte.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDecimal.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> が <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt16.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> が <see cref="F:System.Data.SqlTypes.SqlInt16.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" />。 <see cref="T:System.Data.SqlTypes.SqlInt32" /> が <see cref="F:System.Data.SqlTypes.SqlInt32.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt64.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" />。 <see cref="T:System.Data.SqlTypes.SqlInt64" /> が <see cref="F:System.Data.SqlTypes.SqlInt64.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" />。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> が <see cref="F:System.Data.SqlTypes.SqlMoney.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlSingle.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> が <see cref="F:System.Data.SqlTypes.SqlSingle.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied double value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">指定した double 値を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <param name="x" vsli:raw="The double value to convert.">変換する double 値。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; with the same value as the specified double parameter.">指定した倍精度浮動小数点数パラメーターと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are not equal.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較し、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">乗算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">減算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドから 2 番目のオペランドを減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="The results of the subtraction operation.">減算の結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Returns the negated value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値と符号が逆の値を返します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the negated value.">符号が逆の値を格納している <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its double-precision floating point number equivalent.">数値の <see cref="T:System.String" /> 形式をそれと等価の倍精度浮動小数点数に変換します。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">解析対象の文字列。<see langword="String" /></param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that contains the value represented by the &lt;see langword=&quot;String&quot; /&gt;.">
        <see langword="String" /> で表された値を格納している <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">減算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドから 2 番目のオペランドを減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="The results of the subtraction operation.">減算の結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">.NET Framework によって使用される XML スキーマ。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBoolean&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is non-zero, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is zero and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> が 0 以外の場合は、<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> になる <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> を持つ <see langword="SqlBoolean" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlDouble" /> が 0 の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体が <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">この <see langword="SqlByte" /> 構造体の <see langword="Value" /> と等しい <see langword="Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose converted value equals the rounded value of this &lt;see langword=&quot;SqlDouble&quot; /&gt;.">変換された値がこの <see langword="SqlDecimal" /> の丸められた値に等しい、新しい <see langword="SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の値の整数部と等しい <see langword="Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の値の整数部と等しい <see langword="Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の値の整数部と等しい <see langword="Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; is equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> の値と等しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> を持つ新しい <see langword="SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> の <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> を持つ新しい <see langword="SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> の <see cref="T:System.Data.SqlTypes.SqlDouble" /> を表す <see langword="SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to a string.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を文字列に変換します。</summary>
      <returns vsli:raw="A string representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> の <see cref="T:System.Data.SqlTypes.SqlDouble" /> を表す文字列。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance is null.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> インスタンスが null かどうかを示すブール値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が null の場合は <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値を取得します。 このプロパティは読み取り専用です。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Represents a GUID to be stored in or retrieved from a database.">データベースに格納する、またはデータベースから取得する GUID を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.DBNull" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlGuid" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the supplied byte array parameter.">指定したバイト配列パラメーターを使用して、<see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A byte array.">バイト配列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">指定した <see cref="T:System.Data.SqlTypes.SqlGuid" /> パラメーターを使用して、<see cref="T:System.Guid" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified values.">指定した値を使用して、<see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="a" vsli:raw="The first four bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の最初の 4 バイト。</param>
      <param name="b" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次の 2 バイト。</param>
      <param name="c" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次の 2 バイト。</param>
      <param name="d" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="e" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="f" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="g" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="h" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="i" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="j" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="k" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.String&quot; /&gt; parameter.">指定した <see cref="T:System.Data.SqlTypes.SqlGuid" /> パラメーターを使用して、<see cref="T:System.String" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object.">
        <see cref="T:System.String" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">指定した <see cref="T:System.Data.SqlTypes.SqlGuid" /> とこの <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体を比較し、これらの相対値を示す値を返します。 最後の 6 バイト以外も比較しますが、最後の 6 バイトを比較では最上位バイトとして扱います。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Data.SqlTypes.SqlGuid" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (<see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied object and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">指定したオブジェクトとこの <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体を比較し、これらの相対値を示す値を返します。 最後の 6 バイト以外も比較しますが、最後の 6 バイトを比較では最上位バイトとして扱います。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (<see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlGuid&quot; /&gt; will be null.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。 いずれかのインスタンスが null の場合、<see langword="SqlGuid" /> は null になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; object.">指定したオブジェクト パラメーターを <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> オブジェクトの <see cref="T:System.Data.SqlTypes.SqlGuid" /> プロパティと比較します。</summary>
      <param name="value" vsli:raw="The object to be compared.">比較されるオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.Data.SqlTypes.SqlGuid" /> のインスタンスで、2 つが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary vsli:raw="Returns the hash code of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体のハッシュ コードを返します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の論理比較を実行して、等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlGuid" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; object.">
        <see langword="SqlBinary" /> オブジェクト。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlBinary" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlGuid" /> パラメーターを <see cref="T:System.Guid" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Guid&quot; /&gt; equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Guid" /> の <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> と等しい新しい <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlGuid" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">指定した <see cref="T:System.Guid" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlGuid" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> パラメーターと等しい <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> を持つ新しい <see cref="T:System.Guid" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の論理比較を実行して、等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">指定した <see cref="T:System.String" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlGuid" /> に変換します。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">解析対象の文字列。<see langword="String" /></param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlGuid" /> に格納されている値と等価の <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a byte array.">この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体をバイト配列に変換します。</summary>
      <returns vsli:raw="An array of bytes representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">この <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 構造体の <see cref="T:System.Data.SqlTypes.SqlGuid" /> を表すバイト配列。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBinary" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; structure that contains the bytes in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体のバイトを格納している <see langword="SqlBinary" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の文字列形式を格納している <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.String" /> 構造体の文字列形式を格納している <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure is null.">この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体が null かどうかを示すブール値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> if <see langword="null" />. それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の値を取得します。 このプロパティは読み取り専用です。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; structure.">
        <see cref="T:System.Guid" /> 構造。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Represents a 16-bit signed integer to be stored in or retrieved from a database.">データベースに格納する、またはデータベースから取得する 16 ビット符号付き整数を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> の最大有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> の最小有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.DBNull" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlInt16" /> を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 構造体のインスタンスの <see cref="T:System.Data.SqlTypes.SqlInt16" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure using the supplied short integer parameter.">指定した短整数パラメーターを使用して、<see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A short integer.">短整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドの合計を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドの合計を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドのビットごとの AND を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">ビットごとの AND の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドのビットごとの OR を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">ビットごとの OR の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> とこの <see cref="T:System.Data.SqlTypes.SqlInt16" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Data.SqlTypes.SqlInt16" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object, or the object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスがオブジェクトより大きいか、オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> とこの <see cref="T:System.Object" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
object が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">最初の <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドを 2 番目のオペランドで除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">除算した結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt16&quot; /&gt; will be null.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。 いずれかのインスタンスが null の場合、<see langword="SqlInt16" /> は null になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; object.">指定したオブジェクトを <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> オブジェクトの <see cref="T:System.Data.SqlTypes.SqlInt16" /> プロパティと比較します。</summary>
      <param name="value" vsli:raw="The object to be compared.">比較されるオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.Data.SqlTypes.SqlInt16" /> のインスタンスで、2 つが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see cref="T:System.String" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を比較して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を比較して、最初の構造体が 2 番目の構造体以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">最初の <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドを 2 番目のオペランドで除算した後の剰余を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">剰余を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> を持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; values and returns the remainder.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 値を除算し、剰余を返します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 値。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 値。</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">
        <paramref name="x" /> と <paramref name="y" /> の除算によって得られた剰余。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">2 つのパラメーターの積を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> を持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の論理比較を実行して、等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">~ 演算子は、<see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドでビットごとの 1 の補数演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の補数を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドの合計を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドの合計を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドのビットごとの AND を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">ビットごとの AND の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドのビットごとの OR を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">ビットごとの OR の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">最初の <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドを 2 番目のオペランドで除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">除算した結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise XOR.">ビットごとの XOR の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to a short integer.">指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を短整数に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A short integer whose value is the Value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの Value と等しい値を持つ短整数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトを <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> オブジェクト パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を比較して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied short integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">指定した短整数を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <param name="x" vsli:raw="A short integer value.">短整数値。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as the specified short integer.">指定した短整数と同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の論理比較を実行して、等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を比較して、最初の構造体が 2 番目の構造体以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">最初の <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドを 2 番目のオペランドで除算した後の剰余を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">剰余を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> を持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">2 つのパラメーターの積を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> を持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">~ 演算子は、<see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドでビットごとの 1 の補数演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の補数を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">減算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand.">単項マイナス演算子は、<see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> オペランドの <see cref="T:System.Data.SqlTypes.SqlInt16" /> を無効にします。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the negated value.">符号が逆の値を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 16-bit signed integer equivalent.">数値の <see cref="T:System.String" /> 形式を等価の 16 ビット符号付き整数に変換します。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">解析対象の文字列。<see langword="String" /></param>
      <returns vsli:raw="A 16-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">指定した <see cref="T:System.String" /> に格納されている値と等しい 16 ビット符号付き整数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">減算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">.NET Framework によって使用される XML スキーマ。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> が 0 以外の場合は <see langword="true" />。0 の場合は <see langword="false" />。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlInt16" /> の値が 0 より小さいか、255 を超える場合、<see cref="T:System.OverflowException" /> が発生します。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値と等しい <see langword="Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値と等しい <see langword="Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の値と等しい <see langword="Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の値と等しい <see langword="Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体の値と等しい <see langword="Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の値と等しい <see langword="Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> のこのインスタンスの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を表す <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">
        <see cref="T:System.String" /> のインスタンスの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を表す <see cref="T:System.Data.SqlTypes.SqlInt16" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the results of the XOR operation.">XOR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure is null.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体が null であるかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. For more information, see Handling Null Values.">null の場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。 詳細については、「 Null 値の処理」を参照してください。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary vsli:raw="Gets the value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. This property is read-only.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体のインスタンスの値を取得します。 このプロパティは読み取り専用です。</summary>
      <returns vsli:raw="A short integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の値を表す短整数。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Represents a 32-bit signed integer to be stored in or retrieved from a database.">データベースに格納する、またはデータベースから取得する 32 ビット符号付き整数を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> の最大有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> の最小有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; class.">
        <see cref="T:System.DBNull" /> クラスのこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlInt32" /> を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 構造体のインスタンスの <see cref="T:System.Data.SqlTypes.SqlInt32" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure using the supplied integer value.">指定した整数値を使用して、<see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The integer to be converted.">変換される整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を加算した値を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の合計を格納している <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> オペランドのビットごとの AND を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">ビットごとの AND 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体のビットごとの OR を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">ビットごとの OR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> とこの <see cref="T:System.Data.SqlTypes.SqlInt32" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Data.SqlTypes.SqlInt32" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> とこの <see cref="T:System.Object" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">最初の <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを 2 番目のパラメーターで除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">除算した結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt32&quot; /&gt; will be null.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。 いずれかのインスタンスが null の場合、<see langword="SqlInt32" /> は null になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; object.">指定したオブジェクト パラメーターを <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> オブジェクトの <see cref="T:System.Data.SqlTypes.SqlInt32" /> プロパティと比較します。</summary>
      <param name="value" vsli:raw="The object to be compared.">比較されるオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.Data.SqlTypes.SqlInt32" /> のインスタンスで、2 つが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">最初の <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを 2 番目のパラメーターで除算した後の剰余を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">剰余を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> を持つ <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; values and returns the remainder.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> 値を除算し、剰余を返します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 値。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 値。</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">
        <paramref name="x" /> と <paramref name="y" /> の除算によって得られた剰余。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">2 つのパラメーターの積を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> を持つ <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体でビットごとの 1 の補数演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">1 の補数演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を加算した値を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の合計を格納している <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> オペランドのビットごとの AND を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">ビットごとの AND 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体のビットごとの OR を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">ビットごとの OR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">最初の <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを 2 番目のパラメーターで除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">除算した結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体でビットごとの排他的 OR 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">ビットごとの XOR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to an integer.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を整数に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="The converted integer value.">変換された整数値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see langword="SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトを <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; property to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> プロパティを <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">指定した整数を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <param name="x" vsli:raw="An integer value.">整数値。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose Value property is equal to the integer parameter.">整数パラメーターと等しい Value プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">最初の <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを 2 番目のパラメーターで除算した後の剰余を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">剰余を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> を持つ <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">2 つのパラメーターの積を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> を持つ <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体でビットごとの 1 の補数演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">1 の補数演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">減算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operand.">
        <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> オペランドの <see cref="T:System.Data.SqlTypes.SqlInt32" /> を無効にします。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the negated value.">符号が逆の値を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 32-bit signed integer equivalent.">数値の <see cref="T:System.String" /> 形式を等価の 32 ビット符号付き整数に変換します。</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">解析対象の文字列。<see cref="T:System.String" /></param>
      <returns vsli:raw="A 32-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">指定した <see cref="T:System.String" /> に格納されている値と等しい 32 ビット符号付き整数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">減算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> プロパティを持つ <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> が 0 以外の場合は <see langword="true" />。0 の場合は <see langword="false" />。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. If the value of the &lt;see langword=&quot;SqlInt32&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の <see langword="Value" /> と等しい <see langword="Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。 <see langword="SqlInt32" /> の値が 0 より小さいか、255 を超える場合、<see cref="T:System.OverflowException" /> が発生します。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.String" /> の値と等しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体でビットごとの排他的 OR 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">ビットごとの XOR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure is null.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体が null であるかどうかを示します。</summary>
      <returns vsli:raw="This property is &lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> が null の場合、このプロパティは <see langword="true" /> になります。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. This property is read-only.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の値を取得します。 このプロパティは読み取り専用です。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;.">プロパティに <see cref="F:System.Data.SqlTypes.SqlInt32.Null" /> が格納されています。</exception>
      <returns vsli:raw="An integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の値を表す整数。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Represents a 64-bit signed integer to be stored in or retrieved from a database.">データベースに格納する、またはデータベースから取得する 64 ビット符号付き整数を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の最大有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の最小有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.DBNull" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlInt64" /> を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 構造体のインスタンスの <see cref="T:System.Data.SqlTypes.SqlInt64" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure using the supplied long integer.">指定した長整数を使用して、<see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A long integer.">長整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの合計を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの合計と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドのビットごとの AND を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">ビットごとの AND 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドのビットごとの OR を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">ビットごとの OR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> とこの <see cref="T:System.Data.SqlTypes.SqlInt64" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Data.SqlTypes.SqlInt64" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> とこの <see cref="T:System.Object" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">最初の <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを 2 番目のパラメーターで除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">除算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> プロパティを持つ新しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt64&quot; /&gt; will be null.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。 いずれかのインスタンスが null の場合、<see langword="SqlInt64" /> は null になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; object.">指定したオブジェクト パラメーターを <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> オブジェクトの <see cref="T:System.Data.SqlTypes.SqlInt64" /> プロパティと比較します。</summary>
      <param name="value" vsli:raw="The object to be compared.">比較されるオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.Data.SqlTypes.SqlInt64" /> のインスタンスで、2 つが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">最初の <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを 2 番目のパラメーターで除算した後の剰余を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">剰余を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> プロパティを持つ新しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; values and returns the remainder.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> 値を除算し、剰余を返します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 値。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 値。</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">
        <paramref name="x" /> と <paramref name="y" /> の除算によって得られた剰余。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの積と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">2 つの SqlInt64 パラメーターの論理比較を実行して、等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドでビットごとの 1 の補数演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの 1 の補数と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの合計を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの合計と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドのビットごとの AND を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">ビットごとの AND 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドのビットごとの OR を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">ビットごとの OR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">最初の <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを 2 番目のパラメーターで除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">除算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> プロパティを持つ新しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">ビットごとの XOR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to long.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを long 型に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new long value equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> の <see cref="T:System.Data.SqlTypes.SqlInt64" /> と等しい新しい long 値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">変換される <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトです。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the long parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">long 型パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <param name="x" vsli:raw="A long integer value.">長整数値。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the value of the long parameter.">long 型パラメーターの値と等しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> を持つ新しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">2 つの SqlInt64 パラメーターの論理比較を実行して、等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">最初の <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを 2 番目のパラメーターで除算した後の剰余を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">剰余を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> プロパティを持つ新しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの積と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドでビットごとの 1 の補数演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの 1 の補数と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">減算の結果と等しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> プロパティを持つ新しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">単項マイナス演算子は、<see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> オペランドの <see cref="T:System.Data.SqlTypes.SqlInt64" /> を無効にします。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the negated &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの符号が逆の <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 64-bit signed integer equivalent.">数値の <see cref="T:System.String" /> 形式を等価の 64 ビット符号付き整数に変換します。</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">解析対象の文字列。<see cref="T:System.String" /></param>
      <returns vsli:raw="A 64-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">指定した <see cref="T:System.String" /> に格納されている値と等しい 64 ビット符号付き整数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">減算の結果と等しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> プロパティを持つ新しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> が 0 以外の場合は <see langword="true" />。0 の場合は <see langword="false" />。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の <see langword="Value" /> と等しい <see langword="Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> の値を表す <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> のこのインスタンスを <see cref="T:System.String" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.String" /> の値を表す <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">ビットごとの XOR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure is null.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体が null かどうかを示すブール値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">null の場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure. This property is read-only.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の値を取得します。 このプロパティは読み取り専用です。</summary>
      <returns vsli:raw="A long integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の値を表す長整数。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Represents a currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.">データベースに格納する、またはデータベースから取得する通貨の値を表します。値の範囲は -2 63 (-922,337,203,685,477.5808) から 2 63 -1 (+922,337,203,685,477.5807) までで、精度は通貨単位の 1/10,000 です。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">
        <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> クラスのインスタンスの <see cref="T:System.Data.SqlTypes.SqlMoney" /> プロパティに割り当てることができる最大値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">
        <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> クラスのインスタンスの <see cref="T:System.Data.SqlTypes.SqlMoney" /> プロパティに割り当てることができる最小値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">
        <see cref="T:System.DBNull" /> クラスのこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlMoney" /> を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">
        <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> クラスのインスタンスの <see cref="T:System.Data.SqlTypes.SqlMoney" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">指定した <see cref="T:System.Decimal" /> 値を使用して、<see cref="T:System.Data.SqlTypes.SqlMoney" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">初期化する通貨の値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with specified double value.">指定した double 値を使用して、<see cref="T:System.Data.SqlTypes.SqlMoney" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">初期化する通貨の値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified integer value.">指定した整数値を使用して、<see cref="T:System.Data.SqlTypes.SqlMoney" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">初期化する通貨の値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified long integer value.">指定した長整数値を使用して、<see cref="T:System.Data.SqlTypes.SqlMoney" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">初期化する通貨の値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの合計を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの合計を格納している <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> とこの <see cref="T:System.Data.SqlTypes.SqlMoney" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Data.SqlTypes.SqlMoney" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> とこの <see cref="T:System.Object" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">除算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを 2 番目のパラメーターで除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">除算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlMoney" /> を持つ <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlMoney&quot; /&gt; will be null.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。 いずれかのインスタンスが null の場合、<see langword="SqlMoney" /> は null になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; object.">指定したオブジェクト パラメーターを <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> オブジェクトの <see cref="T:System.Data.SqlTypes.SqlMoney" /> プロパティと比較します。</summary>
      <param name="value" vsli:raw="The object to be compared.">比較されるオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.Data.SqlTypes.SqlMoney" /> のインスタンスで、2 つが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">インスタンスのハッシュ コードを取得します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">乗算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">乗算の積を格納している <see cref="T:System.Data.SqlTypes.SqlMoney" /> を持つ新しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの合計を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの合計を格納している <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">除算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを 2 番目のパラメーターで除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">除算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlMoney" /> を持つ <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Decimal" /> に変換します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Decimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この演算子は、<see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">変換される <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトです。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">
        <see cref="T:System.Decimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">変換される <see cref="T:System.Decimal" /> 値。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the value of the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの値と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ新しい <see cref="T:System.Decimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この暗黙の演算子は、指定した <see cref="T:System.Int64" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Int64" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの値と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Int64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">乗算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">乗算の積を格納している <see cref="T:System.Data.SqlTypes.SqlMoney" /> を持つ新しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">減算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">減算の結果を格納している新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">単項マイナス演算子は、<see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを無効にします。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be negated.">無効にされる <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the negation.">否定の結果を格納している <see cref="T:System.Data.SqlTypes.SqlMoney" /> を持つ <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent.">数値の <see cref="T:System.String" /> 形式をそれと等価な <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">解析対象の文字列。<see langword="String" /></param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> に格納されている値と等価の <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">減算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">減算の結果を格納している新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary vsli:raw="Converts the Value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> のインスタンスの Value を <see cref="T:System.Decimal" /> 構造体に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">この <see cref="T:System.Decimal" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティと等しい値を持つ <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Double" /> に変換します。</summary>
      <returns vsli:raw="A double with a value equal to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体と等しい値を持つ倍精度浮動小数点数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Int32" /> に変換します。</summary>
      <returns vsli:raw="A 32-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体の整数部と等しい値を持つ 32 ビット整数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary vsli:raw="Converts the Value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体の Value を <see cref="T:System.Int64" /> に変換します。</summary>
      <returns vsli:raw="A 64-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体の整数部と等しい値を持つ 64 ビット整数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is zero, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造。 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体の値がゼロの場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> になります。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> の値と等しい <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> の値の文字列表現を値として持つ <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to string.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> のインスタンスを文字列に変換します。</summary>
      <returns vsli:raw="A string whose value is the string representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値の文字列表現を値として持つ文字列。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is null.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体が null かどうかを示すブール値を返します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">null の場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary vsli:raw="Gets the monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure. This property is read-only.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体のインスタンスの通貨値を取得します。 このプロパティは読み取り専用です。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">プロパティが null に設定されています。</exception>
      <returns vsli:raw="The monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体のインスタンスの通貨値。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">
        <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> クラスは、スタンドアロン コンポーネントとしてではなく、他のクラスによる標準機能の派生元クラスとして使用するためのものです。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
      <param name="e" vsli:raw="A reference to an inner exception.">内部例外への参照。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">
        <see langword="Value" /> 構造体の <see cref="N:System.Data.SqlTypes" /> プロパティが null に設定されている場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a system-supplied message that describes the error.">エラーを説明するシステム提供メッセージを使用して、<see cref="T:System.Data.SqlTypes.SqlNullValueException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified message that describes the error.">指定したメッセージでエラーを説明する <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステム環境向けにローカライズされていることを確認する必要があります。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.SqlTypes.SqlNullValueException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステム環境向けにローカライズされていることを確認する必要があります。</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">現在の例外の原因となった例外。 <c>innerException</c> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Represents a floating point number within the range of -3.40E +38 through 3.40E +38 to be stored in or retrieved from a database.">データベースに格納する、またはデータベースから取得する、-3.40E +38 から 3.40E +38 までの範囲の浮動小数点数を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">
        <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> クラスのインスタンスの <see cref="T:System.Data.SqlTypes.SqlSingle" /> プロパティに割り当てることができる最大値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">
        <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> クラスのインスタンスの <see cref="T:System.Data.SqlTypes.SqlSingle" /> プロパティに割り当てることができる最小値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.DBNull" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlSingle" /> を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">
        <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> クラスのインスタンスの <see cref="T:System.Data.SqlTypes.SqlSingle" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure using the supplied double parameter.">指定した倍精度浮動小数点数パラメーターを使用して、<see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A double value which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">新しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 構造体の <see cref="T:System.Data.SqlTypes.SqlSingle" /> として使用される double 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A floating point number which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">新しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 構造体の <see cref="T:System.Data.SqlTypes.SqlSingle" /> として使用される浮動小数点数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を加算した値を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の合計を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> とこの <see cref="T:System.Data.SqlTypes.SqlSingle" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Data.SqlTypes.SqlSingle" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> とこの <see cref="T:System.Object" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">最初の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を 2 番目の構造体で除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure that contains the results of the division.">除算の結果を格納している <see langword="SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlSingle&quot; /&gt; will be null.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。 いずれかのインスタンスが null の場合、<see langword="SqlSingle" /> は null になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; object.">指定したオブジェクト パラメーターを <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> オブジェクトの <see cref="T:System.Data.SqlTypes.SqlSingle" /> プロパティと比較します。</summary>
      <param name="value" vsli:raw="The object to be compared.">比較されるオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.Data.SqlTypes.SqlSingle" /> のインスタンスで、2 つが等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">インスタンスのハッシュ コードを取得します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の論理比較を実行して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">乗算の積を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を加算した値を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の合計を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">最初の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を 2 番目の構造体で除算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the division.">除算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two SqlSingle parameters to determine whether they are equal.">2 つの SqlSingle パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to be converted.">変換される <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーター。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to float.">指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を float 型に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; value to be converted to float.">float 型に変換される <see cref="T:System.Data.SqlTypes.SqlSingle" /> 値。</param>
      <returns vsli:raw="A float that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の値を格納している float 型。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">変換される <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトです。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の論理比較を実行して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この暗黙の演算子は、<see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted.">変換される <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the specified floating point value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">指定した浮動小数点値を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <param name="x" vsli:raw="The float value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換される float 型の値。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the value of the specified float.">指定した float 型の値を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の積を計算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">乗算の積を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体から 2 番目の構造体を減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">減算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">指定した <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 構造体の <see cref="T:System.Data.SqlTypes.SqlSingle" /> を無効にします。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the negated value.">符号が逆の値を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">指定した <see cref="T:System.String" /> を <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体に変換します。</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">解析対象の文字列。<see cref="T:System.String" /></param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> に格納されている値と等価の <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">最初の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体から 2 番目の構造体を減算します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">減算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> が 0 以外の場合は <see langword="true" />。0 の場合は <see langword="false" />。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の <see langword="Value" /> と等しい <see langword="Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の値が <see langword="true" /> の場合、<see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の<see langword="Value" />は 1 になります。 それ以外の場合、<see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の <see langword="Value" /> は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see langword="SqlDecimal" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see langword="SqlDouble" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see langword="SqlInt16" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値と等しい <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> の値を表す <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; object representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の値を表す <see langword="String" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure is null.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体が null であるかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">null の場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. This property is read-only.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の値を取得します。 このプロパティは読み取り専用です。</summary>
      <returns vsli:raw="A floating point value in the range -3.40E+38 through 3.40E+38.">-3.40E+38 から 3.40E+38 までの浮動小数点値。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Represents a variable-length stream of characters to be stored in or retrieved from the database. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; has a different underlying data structure from its corresponding .NET &lt;see cref=&quot;T:System.String&quot; /&gt; data type.">データベースに格納する、またはデータベースから取得する文字の可変長ストリームを表します。 <see cref="T:System.Data.SqlTypes.SqlString" /> は、基になるデータ構造体が、対応する .NET Framework の <see cref="T:System.String" /> データ型とは異なります。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">文字のアルファベット値ではなく、文字の数値に基づいて並べ替えるように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary vsli:raw="Specifies that sorts should be based on a character's numeric value instead of its alphabetical value.">文字のアルファベット値ではなく、文字の数値に基づいて並べ替えるように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons should ignore case.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> の比較で、大文字と小文字を区別しないように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary vsli:raw="Specifies that the string comparison must ignore the Kana type.">文字列比較でカナ型を無視するように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary vsli:raw="Specifies that the string comparison must ignore non-space combining characters, such as diacritics.">文字列比較で、発音区別符など、空白以外の組み合わせ文字を無視するように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary vsli:raw="Specifies that the string comparison must ignore the character width.">文字列比較で、半角と全角の区別を無視するように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.DBNull" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.Data.SqlTypes.SqlString" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified locale id, compare options, and data.">ロケール ID、比較オプション、およびデータを指定して、<see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプションを指定します。</param>
      <param name="data" vsli:raw="The data array to store.">格納するデータ配列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプションを指定します。</param>
      <param name="data" vsli:raw="The data array to store.">格納するデータ配列。</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Unicode でエンコードされている場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプションを指定します。</param>
      <param name="data" vsli:raw="The data array to store.">格納するデータ配列。</param>
      <param name="index" vsli:raw="The starting index within the array.">配列内の開始インデックス。</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">インデックスからコピーする文字数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプションを指定します。</param>
      <param name="data" vsli:raw="The data array to store.">格納するデータ配列。</param>
      <param name="index" vsli:raw="The starting index within the array.">配列内の開始インデックス。</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">インデックスからコピーする文字数。</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Unicode でエンコードされている場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string.">文字列を指定して、<see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="data" vsli:raw="The string to store.">格納する文字列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string and locale id values.">文字列とロケール ID 値を指定して、<see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="data" vsli:raw="The string to store.">格納する文字列。</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string, locale id, and compare option values.">文字列、ロケール ID、および比較オプションの値を指定して、<see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="data" vsli:raw="The string to store.">格納する文字列。</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプションを指定します。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定された 2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> 値を連結して、新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を作成します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that is the concatenated value of &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">
        <paramref name="x" /> と <paramref name="y" /> の値を連結した <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">この <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトのコピーを作成します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object in which all property values are the same as the original.">すべてのプロパティ値が元のオブジェクトと同じ新しい <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareOptions&quot; /&gt; enumeration equivalent of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value.">指定した <see cref="T:System.Globalization.CompareOptions" /> 値と等価の <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 列挙値を取得します。</summary>
      <param name="compareOptions" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value that describes the comparison options for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 構造体の比較オプションを記述する <see cref="T:System.Data.SqlTypes.SqlString" /> 値。</param>
      <returns vsli:raw="A &lt;see langword=&quot;CompareOptions&quot; /&gt; value that corresponds to the &lt;see langword=&quot;SqlCompareOptions&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の <see langword="CompareOptions" /> に対応する <see langword="SqlCompareOptions" /> 値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlString" /> とこの <see cref="T:System.Data.SqlTypes.SqlString" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">指定した <see cref="T:System.Data.SqlTypes.SqlString" /> とこの <see cref="T:System.Object" /> オブジェクトを比較し、これらの相対値を示す値を返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">比較対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">インスタンスとオブジェクトの相対値を示す符号付き数値。  
  
 <list type="table"><listheader><term> 戻り値</term><description> 条件</description></listheader><item><term> 0 より小さい値</term><description> このインスタンスはオブジェクトよりも小さくなっています。</description></item><item><term> ゼロ</term><description> このインスタンスはオブジェクトと同じです。</description></item><item><term> 0 より大きい値</term><description> このインスタンスはオブジェクトよりも大きくなっています。 
- または - 
オブジェクトが null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を連結します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの内容を表す新しく連結された値を格納している <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlString&quot; /&gt; will be null.">2 つの値が等しい場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。 いずれかのインスタンスが null の場合、<see langword="SqlString" /> は null になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">指定したオブジェクト パラメーターを <see cref="P:System.Data.SqlTypes.SqlString.Value" /> オブジェクトの <see cref="T:System.Data.SqlTypes.SqlString" /> プロパティと比較します。</summary>
      <param name="value" vsli:raw="The object to be compared.">比較されるオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.Data.SqlTypes.SqlString" /> のインスタンスで、2 つが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">インスタンスのハッシュ コードを取得します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> の内容を ANSI 形式で格納しているバイト配列を取得します。</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> の内容を ANSI 形式で格納しているバイト配列。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> の内容を Unicode 形式で格納しているバイト配列を取得します。</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> の内容を Unicode 形式で格納しているバイト配列。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す <see langword="string" /> 型の値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、最初のオペランドが 2 番目のオペランド以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を連結します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの内容を表す新しく連結された値を格納している <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、等しいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDateTime" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure to be converted.">変換対象の <see langword="SqlDecimal" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの文字列形式を格納している新しい <see langword="SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlGuid" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; whose value is the string representation of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlString" /> の文字列形式である値を持つ <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <param name="x" vsli:raw="The SqlInt32 structure to be converted.">変換される SqlInt32 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">変換対象の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> を <see cref="T:System.String" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted.">変換される <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt;, whose contents are the same as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlString.Value" /> プロパティと同じ内容を持つ <see langword="String" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.String" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">変換される <see cref="T:System.String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the value of the specified &lt;see langword=&quot;String&quot; /&gt;.">指定した <see langword="String" /> の値を格納している <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">2 つのインスタンスが等しくない場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、最初のオペランドが 2 番目のオペランド以下かどうかを確認します。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 <see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see cref="P:System.Data.SqlTypes.SqlString.Value" /> が 0 以外の場合は <see langword="true" />。0 の場合は <see langword="false" />。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; equals the number represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 構造体で表される数値と等しい <see cref="T:System.Data.SqlTypes.SqlString" /> を持つ新しい <see langword="SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDateTime" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDateTime&quot; /&gt; structure that contains the date value represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> で表される日付値を格納している新しい <see langword="SqlDateTime" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; that contains the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> の値を格納する新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlDouble" /> の数値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlGuid" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is the &lt;see langword=&quot;Guid&quot; /&gt; represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体で表される <see langword="Guid" /> である <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt16" /> の数値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt32" /> の数値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の数値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の数値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の数値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトを <see cref="T:System.String" /> に変換します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">この <see cref="T:System.String" /> 構造体と同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareInfo&quot; /&gt; object that defines how string comparisons should be performed for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">この <see cref="T:System.Globalization.CompareInfo" /> 構造体で実行する文字列比較の方法を定義する <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトを取得します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;CompareInfo&quot; /&gt; object that defines string comparison for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の文字列比較を定義する <see langword="CompareInfo" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that represents information about the culture of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">この <see cref="T:System.Globalization.CultureInfo" /> オブジェクトのカルチャに関する情報を表す <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that describes information about the culture of this SqlString structure including the names of the culture, the writing system, and the calendar used, and also access to culture-specific objects that provide methods for common operations, such as formatting dates and sorting strings.">カルチャの名前、書記体系、使用する暦など、この SqlString 構造体のカルチャに関する情報を記述し、カルチャ固有のオブジェクトにアクセスできるようにする <see cref="T:System.Globalization.CultureInfo" /> 構造体。カルチャ固有のオブジェクトは、日付の書式指定や文字列の並べ替えなどの共通の操作を行うためのメソッドを提供します。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure is null.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体が null であるかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlString.Value" /> が <see cref="F:System.Data.SqlTypes.SqlString.Null" /> の場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary vsli:raw="Specifies the geographical locale and language for the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</summary>
      <returns vsli:raw="The locale id for the string stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlString.Value" /> プロパティに格納されている文字列のロケール ID。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary vsli:raw="A combination of one or more of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; enumeration values that represent the way in which this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">この <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> を他の <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体と比較する方法を表す 1 つ以上の <see cref="T:System.Data.SqlTypes.SqlString" /> 列挙値の組み合わせ。</summary>
      <returns vsli:raw="A value specifying how this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">この <see cref="T:System.Data.SqlTypes.SqlString" /> を他の <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体と比較する方法を指定する値。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary vsli:raw="Gets the string that is stored in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure. This property is read-only.">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体に格納されている文字列を取得します。 このプロパティは読み取り専用です。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The value of the string is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;.">文字列の値が <see cref="F:System.Data.SqlTypes.SqlString.Null" /> です。</exception>
      <returns vsli:raw="The string that is stored.">格納されている文字列。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary vsli:raw="The exception that is thrown when you set a value into a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure would truncate that value.">
        <see cref="N:System.Data.SqlTypes" /> 構造体に値を設定するとその値が切り捨てられる場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message.">指定したエラー メッセージを使用して、<see cref="T:System.Data.SqlTypes.SqlTruncateException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message and a reference to the &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">指定したエラー メッセージと <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> に対する参照を使用して、<see cref="T:System.Exception" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="e" vsli:raw="A reference to an inner &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">内部 <see cref="T:System.Exception" /> への参照。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary vsli:raw="The base exception class for the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt;.">
        <see cref="N:System.Data.SqlTypes" /> の基本例外クラス。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class.">
        <see cref="T:System.Data.SqlTypes.SqlTypeException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Data.SqlTypes.SqlTypeException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="si" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="sc" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message.">指定したエラー メッセージを使用して、<see cref="T:System.Data.SqlTypes.SqlTypeException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.SqlTypes.SqlTypeException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステム環境向けにローカライズされていることを確認する必要があります。</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">現在の例外の原因となった例外。 <c>innerException</c> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary vsli:raw="Represents XML data stored in or retrieved from a server.">サーバーに格納する、またはサーバーから取得する XML データを表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">新しい <see cref="T:System.Data.SqlTypes.SqlXml" /> のインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance, supplying the XML value from the supplied &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance.">新しい <see cref="T:System.Data.SqlTypes.SqlXml" /> インスタンスを作成します。<see cref="T:System.IO.Stream" /> から派生したインスタンスを引数に受け取り、XML 値を生成します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance (such as &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt;) from which to load the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance's Xml content.">
        <see cref="T:System.IO.Stream" /> から派生したインスタンス (<see cref="T:System.IO.FileStream" /> など)。このインスタンスから、<see cref="T:System.Data.SqlTypes.SqlXml" /> インスタンスの Xml コンテンツが読み込まれます。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance and associates it with the content of the supplied &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">新しい <see cref="T:System.Data.SqlTypes.SqlXml" /> インスタンスを作成し、指定された <see cref="T:System.Xml.XmlReader" /> の内容と関連付けます。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived class instance to be used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">新しい <see cref="T:System.Xml.XmlReader" /> インスタンスの値として使用する、<see cref="T:System.Data.SqlTypes.SqlXml" /> の派生クラスのインスタンス。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary vsli:raw="Gets the value of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; as a &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlXml" /> として表現された、<see cref="T:System.Xml.XmlReader" /> の XML コンテンツの値を取得します。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="Attempt was made to access this property on a null instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlXml" /> の null インスタンスに対し、このプロパティにアクセスしようとしました。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived instance that contains the XML content. The actual type may vary (for example, the return value might be &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;) depending on how the information is represented internally, on the server.">XML コンテンツを格納している、<see cref="T:System.Xml.XmlReader" /> から派生したインスタンス。 実際の型は、サーバー上で情報が内部的にどのように表現されているかによって異なる場合があります。たとえば、戻り値は <see cref="T:System.Xml.XmlTextReader" /> になる場合もあります。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XML スキーマ定義言語 (XSD) を返します。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A string that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> の XSD を示す文字列。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />」をご覧ください。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> メソッドで生成され、<see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> メソッドで利用されるオブジェクトの XML 表現を表す <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />」をご覧ください。</summary>
      <param name="r" vsli:raw="An XmlReader.">XmlReader。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />」をご覧ください。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; stream to which the object is serialized.">XmlWriter。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary vsli:raw="Indicates whether this instance represents a null &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; value.">このインスタンスが null の <see cref="T:System.Data.SqlTypes.SqlXml" /> 値を表すかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> が null の場合は <see langword="Value" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary vsli:raw="Represents a null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 型の null インスタンスを表します。</summary>
      <returns vsli:raw="A null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 型の Null インスタンス。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary vsli:raw="Gets the string representation of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">この <see cref="T:System.Data.SqlTypes.SqlXml" /> インスタンスが保持する XML コンテンツの文字列形式を取得します。</summary>
      <returns vsli:raw="The string representation of the XML content.">XML コンテンツの文字列形式。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration is not intended for use as a stand-alone component, but as an enumeration from which other classes derive standard functionality.">
        <see cref="T:System.Data.SqlTypes.StorageState" /> 列挙体は、スタンドアロン コンポーネントとしてではなく、他のクラスによる標準機能の派生元の列挙体として使用するためのものです。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary vsli:raw="Buffer size.">バッファー サイズ。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary vsli:raw="Stream.">ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary vsli:raw="Unmanaged buffer.">アンマネージ バッファー。</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary vsli:raw="Provides data for the state change event of a .NET data provider.">.NET Framework データ プロバイダーの状態変更イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; class, when given the original state and the current state of the object.">オブジェクトの元の状態と現在の状態が指定されている場合は、<see cref="T:System.Data.StateChangeEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="originalState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 値のいずれか 1 つ。</param>
      <param name="currentState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary vsli:raw="Gets the new state of the connection. The connection object will be in the new state already when the event is fired.">接続の新しい状態を取得します。 イベントが発生したときは、接続オブジェクトが既に新しい状態になっています。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary vsli:raw="Gets the original state of the connection.">接続の元の状態を取得します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">
        <see cref="E:System.Data.Common.DbConnection.StateChange" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Data.StateChangeEventArgs" />。</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary vsli:raw="Provides additional information for the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> イベントの追加情報を提供します。</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.StatementCompletedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.StatementCompletedEventArgs" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="recordCount" vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> イベントが発生する原因となったステートメントの影響を受けた行の数を示します。</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> イベントが発生する原因となったステートメントの影響を受けた行の数を示します。</summary>
      <returns vsli:raw="The number of rows affected.">影響を受けた行の数。</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary vsli:raw="The delegate type for the event handlers of the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> イベントのイベント ハンドラーのデリゲート型。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="The data for the event.">イベントのデータ。</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary vsli:raw="Specifies the type of SQL query to be used by the &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatedEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatingEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatedEventArgs&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />、<see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />、<see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" />、または <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> の各クラスが使用する SQL クエリの種類を指定します。</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary vsli:raw="A SQL query that is a batch statement.">バッチ ステートメントである SQL クエリ。</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary vsli:raw="An SQL query that is a DELETE statement.">DELETE ステートメントである SQL クエリ。</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary vsli:raw="An SQL query that is an INSERT statement.">INSERT ステートメントである SQL クエリ。</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary vsli:raw="An SQL query that is a SELECT statement.">SELECT ステートメントである SQL クエリ。</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary vsli:raw="An SQL query that is an UPDATE statement.">UPDATE ステートメントである SQL クエリ。</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary vsli:raw="The exception that is thrown by a strongly typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; when the user accesses a &lt;see langword=&quot;DBNull&quot; /&gt; value.">ユーザーが <see langword="DBNull" /> 値にアクセスした場合に厳密に型指定された <see cref="T:System.Data.DataSet" /> によってスローされる例外。</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class.">
        <see cref="T:System.Data.StrongTypingException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class using the specified serialization information and streaming context.">シリアル化情報とストリーム コンテキストを指定して、<see cref="T:System.Data.StrongTypingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 構造。</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.StrongTypingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string and inner exception.">指定した文字列と内部例外を使用して、<see cref="T:System.Data.StrongTypingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">内部例外への参照。</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a syntax error.">
        <see cref="P:System.Data.DataColumn.Expression" /> の <see cref="T:System.Data.DataColumn" /> プロパティが構文エラーを含んでいる場合にスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class.">
        <see cref="T:System.Data.SyntaxErrorException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">
        <see cref="T:System.Data.SyntaxErrorException" /> と <see cref="T:System.Runtime.Serialization.SerializationInfo" /> を使用して、<see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータです。</param>
      <param name="context" vsli:raw="The source and destination of a specific serialized stream.">特定のシリアル化ストリームの転送元と転送先。</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.SyntaxErrorException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.SyntaxErrorException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary vsli:raw="This type is used as a base class for typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool, and is not intended to be used directly from your code.">この型は、Visual Studio および XSD.exe .NET Framework ツールによって、型指定された <see cref="T:System.Data.DataTable" /> オブジェクト生成の基底クラスとして使用されます。コードから直接使用するためのものではありません。</summary>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence represented by the table, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">テーブルによって表されるソース シーケンスのオブジェクトの型 (通常は <see cref="T:System.Data.DataRow" />)。</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This type is not intended to be used directly from your code.">新しい <see cref="T:System.Data.TypedTableBase`1" /> を初期化します。 このメソッドは、Visual Studio と XSD.exe .NET Framework ツールによって、型指定された <see cref="T:System.Data.DataTable" /> オブジェクトの生成をサポートします。 この型は、コードで直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">新しい <see cref="T:System.Data.TypedTableBase`1" /> を初期化します。 このメソッドは、Visual Studio と XSD.exe .NET Framework ツールによって、型指定された <see cref="T:System.Data.DataTable" /> オブジェクトの生成をサポートします。 このメソッドはコードから直接使用するためのものではありません。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that contains data to construct the object.">オブジェクトを構築するためのデータを含んでいる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The streaming context for the object being deserialized.">逆シリアル化されるオブジェクトのストリーミング コンテキスト。</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to the specified type. This method supports typed &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">
        <see cref="T:System.Data.TypedTableBase`1" /> の要素を指定した型に変換します。 このメソッドは、Visual Studio と XSD.exe .NET Framework ツールによって、型指定された <see cref="T:System.Data.DataTable" /> オブジェクトの生成をサポートします。 このメソッドはコードから直接使用するためのものではありません。</summary>
      <typeparam name="TResult" vsli:raw="The type to convert the elements to.">要素の変換後の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">指定した型に変換されたソース シーケンスの各要素が格納されている <see cref="T:System.Data.EnumerableRowCollection" />。</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">型指定された <see cref="T:System.Data.DataRow" /> の列挙子を返します。 このメソッドは、Visual Studio と XSD.exe .NET Framework ツールによって、型指定された <see cref="T:System.Data.DataTable" /> オブジェクトの生成をサポートします。 このメソッドはコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> インターフェイスを実装するオブジェクト。</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">型指定された <see cref="T:System.Data.DataRow" /> の列挙子を返します。 このメソッドは、Visual Studio と XSD.exe .NET Framework ツールによって、型指定された <see cref="T:System.Data.DataTable" /> オブジェクトの生成をサポートします。 このメソッドはコードから直接使用するためのものではありません。</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> インターフェイスを実装するオブジェクト。</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary vsli:raw="Contains the extension methods for the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; class.">
        <see cref="T:System.Data.TypedTableBase`1" /> クラスの拡張メソッドを格納します。</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary vsli:raw="Enumerates the data row elements of the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; and returns an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">
        <see cref="T:System.Data.TypedTableBase`1" /> のデータ行要素を列挙し、<see cref="T:System.Data.EnumerableRowCollection`1" /> オブジェクトを返します。ここで、ジェネリック パラメーター <paramref name="T" /> は <see cref="T:System.Data.DataRow" /> です。 このオブジェクトは、LINQ 式またはメソッド クエリで使用できます。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to make enumerable.">列挙可能にする対象のソース <see cref="T:System.Data.TypedTableBase`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type to convert the elements of the source to.">元の要素の変換後の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.EnumerableRowCollection`1" /> オブジェクト。ここで、ジェネリック パラメーター <paramref name="T" /> は <see cref="T:System.Data.DataRow" /> です。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified row in a sequence or a default value if the row is out of range.">シーケンス内の指定された行にある要素を返します。行が範囲外の場合は既定値を返します。</summary>
      <param name="source" vsli:raw="An enumerable object to return an element from.">要素が返される列挙可能オブジェクト。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">取得する要素の、0 から始まるインデックス。</param>
      <typeparam name="TRow" vsli:raw="The type of the elements or the row.">要素または行の型。</typeparam>
      <returns vsli:raw="The element at a specified row in a sequence.">シーケンス内の指定された行位置にある要素。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key.">
        <see cref="T:System.Data.TypedTableBase`1" /> の行を指定したキーに従って昇順に並べ替えます。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">順序付けする <see cref="T:System.Data.TypedTableBase`1" /> 要素が格納されている <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">要素が指定したキーで並べ替えられている <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key and comparer.">
        <see cref="T:System.Data.TypedTableBase`1" /> の行を指定したキーと比較子に従って昇順に並べ替えます。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">順序付けする <see cref="T:System.Data.TypedTableBase`1" /> 要素が格納されている <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">要素が指定したキーと比較子で並べ替えられている <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key.">
        <see cref="T:System.Data.TypedTableBase`1" /> の行を指定したキーに従って降順に並べ替えます。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">順序付けする <see cref="T:System.Data.TypedTableBase`1" /> 要素が格納されている <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">要素が指定したキーで並べ替えられている <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key and comparer.">
        <see cref="T:System.Data.TypedTableBase`1" /> の行を指定したキーと比較子に従って降順に並べ替えます。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">順序付けする <see cref="T:System.Data.TypedTableBase`1" /> 要素が格納されている <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">要素からキーを抽出する関数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> の行要素の型。通常は、<see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> によって返されるキーの型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">要素が指定したキーと比較子で並べ替えられている <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; into a new form.">
        <see cref="T:System.Data.TypedTableBase`1" /> の各要素を新しいフォームに射影します。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transformation function upon.">変換関数を呼び出す <see cref="T:System.Data.TypedTableBase`1" /> 要素を格納する <see cref="T:System.Data.DataRow" />。</param>
      <param name="selector" vsli:raw="A transformation function to apply to each element.">各要素に適用する変換関数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />、<see cref="T:System.Data.DataRow" /> の行要素の型。</typeparam>
      <typeparam name="S" vsli:raw="" />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transformation function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> の各要素に対して変換関数を呼び出した結果として得られる要素を含む <see cref="T:System.Data.EnumerableRowCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">指定した述語に基づいて行のシーケンスをフィルター処理します。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">フィルター処理する <see cref="T:System.Data.TypedTableBase`1" /> 要素が格納されている <see cref="T:System.Data.DataRow" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">各要素が条件を満たしているかどうかをテストする関数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" />、<see cref="T:System.Data.DataRow" /> の行要素の型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">条件を満たす、入力シーケンスの行を含む <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />。</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary vsli:raw="Represents a restriction on a set of columns in which all values must be unique.">すべての値が一意である必要がある列のセットに対する制限を表します。</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.UniqueConstraint" /> を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">制約する <see cref="T:System.Data.DataColumn" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">制約する <see cref="T:System.Data.UniqueConstraint" /> と、その制約が主キーかどうかを示す値を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">制約する <see cref="T:System.Data.DataColumn" />。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">制約が主キーであることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the given array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.UniqueConstraint" /> オブジェクトの配列を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">制約する <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">制約する <see cref="T:System.Data.UniqueConstraint" /> オブジェクトの配列と、その制約が主キーかどうかを示す値を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">制約する <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">制約が主キーであることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">名前と <see cref="T:System.Data.UniqueConstraint" /> を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the constraint.">制約の名前。</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">制約する <see cref="T:System.Data.DataColumn" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">名前、制約する <see cref="T:System.Data.UniqueConstraint" />、およびその制約が主キーかどうかを示す値を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the constraint.">制約の名前。</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">制約する <see cref="T:System.Data.DataColumn" />。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">制約が主キーであることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">名前と <see cref="T:System.Data.UniqueConstraint" /> オブジェクトの配列を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the constraint.">制約の名前。</param>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">制約する <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">名前、制約する <see cref="T:System.Data.UniqueConstraint" /> オブジェクトの配列、およびその制約が主キーかどうかを示す値を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the constraint.">制約の名前。</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">制約する <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">制約が主キーであることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">名前、制約する <see cref="T:System.Data.UniqueConstraint" /> オブジェクトの配列、およびその制約が主キーかどうかを示す値を指定して、<see cref="T:System.Data.DataColumn" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the constraint.">制約の名前。</param>
      <param name="columnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">制約する <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">制約が主キーであることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary vsli:raw="Compares this constraint to a second to determine if both are identical.">この制約と 2 つ目の制約を比較して、2 つの制約が等しいかどうかを判断します。</summary>
      <param name="key2" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; is compared.">この <see cref="T:System.Data.UniqueConstraint" /> と比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraints are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの制約が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; object.">
        <see cref="T:System.Data.UniqueConstraint" /> オブジェクトのこのインスタンスのハッシュ コードを取得します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary vsli:raw="Gets the array of columns that this constraint affects.">この制約が影響を与える列の配列を取得します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary vsli:raw="Gets a value indicating whether or not the constraint is on a primary key.">この制約が主キーに適用されるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraint is on a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この制約が主キーに適用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary vsli:raw="Gets the table to which this constraint belongs.">制約が属するテーブルを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint belongs.">制約が属する <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary vsli:raw="Specifies how query command results are applied to the row being updated.">更新対象の行に、クエリ コマンドの結果を適用する方法を指定します。</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary vsli:raw="Both the output parameters and the first returned row are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">出力パラメーターと最初に返された行の両方が、<see cref="T:System.Data.DataSet" /> 内の変更された行に割り当てられます。</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary vsli:raw="The data in the first returned row is mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">最初に返された行のデータが、<see cref="T:System.Data.DataSet" /> 内の変更された行に割り当てられます。</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary vsli:raw="Any returned parameters or rows are ignored.">返されたパラメーターまたは行はすべて無視されます。</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary vsli:raw="Output parameters are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">出力パラメーターが <see cref="T:System.Data.DataSet" /> 内の変更された行に割り当てられます。</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary vsli:raw="Specifies the action to take with regard to the current and remaining rows during an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 中に現在の行と残りの行に対して実行するアクションを指定します。</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; is to continue processing rows.">
        <see cref="T:System.Data.Common.DataAdapter" /> は行の処理を続行します。</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary vsli:raw="The event handler reports that the update should be treated as an error.">イベント ハンドラーは、更新をエラーとして処理する必要があることを報告します。</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary vsli:raw="The current row and all remaining rows are not to be updated.">現在の行と残りのすべての行は更新されません。</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary vsli:raw="The current row is not to be updated.">現在の行は更新されません。</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary vsli:raw="Represents the exception that is thrown when you try to return a version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">削除された <see cref="T:System.Data.DataRow" /> のバージョンを返そうとした場合にスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class.">
        <see cref="T:System.Data.VersionNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with serialization information.">シリアル化情報を指定して、<see cref="T:System.Data.VersionNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定したシリアル化ストリームの転送元と転送先の説明。</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with the specified string.">文字列を指定して、<see cref="T:System.Data.VersionNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外がスローされたときに表示する文字列。</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Data.VersionNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary vsli:raw="Specifies how to read XML data and a relational schema into a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">XML データとリレーショナル スキーマを <see cref="T:System.Data.DataSet" /> に読み込む方法を指定します。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary vsli:raw="The default read mode.">既定の読み取りモード。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary vsli:raw="Reads a DiffGram, applying changes from the DiffGram to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The semantics are identical to those of a &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation. As with the &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation, &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; values are preserved. Input to &lt;see cref=&quot;M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)&quot; /&gt; with DiffGrams should only be obtained using the output from &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram.&#xA;        &#xA;The target &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; must have the same schema as the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; on which &lt;see cref=&quot;Overload:System.Data.DataSet.WriteXml&quot; /&gt; as DiffGram is called. Otherwise the DiffGram merge operation fails and an exception is thrown.">DiffGram を読み込んで、変更を DiffGram から <see cref="T:System.Data.DataSet" /> に適用します。 セマンティクスは <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 操作の場合と同じです。 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 操作の場合と同様に、<see cref="P:System.Data.DataRow.RowState" /> 値が保存されます。 DiffGram による <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> への入力は、<see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> からの出力を DiffGram として使用する方法によってだけ取得する必要があります。
        
ターゲットの <see cref="T:System.Data.DataSet" /> は、DiffGram として <see cref="Overload:System.Data.DataSet.WriteXml" /> が呼び出される <see cref="T:System.Data.DataSet" /> と同じスキーマを持つ必要があります。 それ以外の場合、DiffGram のマージ操作が失敗し、例外がスローされます。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary vsli:raw="Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; is set to &lt;see langword=&quot;Fragment&quot; /&gt;, the default namespace is read as the inline schema.">SQL Server のインスタンスに対して、XML フラグメント (FOR XML クエリを実行して生成されたものなど) を読み込みます。 <see cref="T:System.Data.XmlReadMode" /> が <see langword="Fragment" /> に設定されている場合は、既定の名前空間がインライン スキーマとして読み込まれます。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary vsli:raw="Ignores any inline schema and reads data into the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;). If the data is a DiffGram, &lt;see langword=&quot;IgnoreSchema&quot; /&gt; has the same functionality as &lt;see langword=&quot;DiffGram&quot; /&gt;.">インライン スキーマを無視し、データを既存の <see cref="T:System.Data.DataSet" /> スキーマに読み取ります。 既存のスキーマと一致しないデータがある場合、そのデータ (<see cref="T:System.Data.DataSet" /> 用に定義された、異なる名前空間からのデータを含む) は破棄されます。 データが DiffGram の場合、<see langword="IgnoreSchema" /> は <see langword="DiffGram" /> と同じ機能を果たします。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary vsli:raw="Ignores any inline schema, infers schema from the data and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">インライン スキーマを無視し、データからスキーマを推論し、データを読み込みます。 <see cref="T:System.Data.DataSet" /> が既にスキーマを格納している場合は、新しいテーブルを追加するか、既存のテーブルに新しい列を追加して、現在のスキーマを拡張します。 推論されたテーブルが既に存在するが名前空間が異なる場合、または推論された列が既存の列と矛盾する場合は例外がスローされます。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary vsli:raw="Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">インライン スキーマを無視し、厳密に型指定されたスキーマをデータから推論し、データを読み込みます。 データから型を推測できない場合は、文字列データとして解釈されます。 <see cref="T:System.Data.DataSet" /> が既にスキーマを格納している場合は、新しいテーブルを追加するか、既存のテーブルに新しい列を追加して、現在のスキーマを拡張します。 推論されたテーブルが既に存在するが名前空間が異なる場合、または推論された列が既存の列と矛盾する場合は例外がスローされます。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary vsli:raw="Reads any inline schema and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">インライン スキーマを読み込み、データを読み込みます。 <see cref="T:System.Data.DataSet" /> が既にスキーマを格納している場合は、新しいテーブルをスキーマに追加できますが、インライン スキーマ内のテーブルが既に <see cref="T:System.Data.DataSet" /> 内に存在する場合は例外がスローされます。</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary vsli:raw="Specifies how to write XML data and a relational schema from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">XML データとリレーショナル スキーマを <see cref="T:System.Data.DataSet" /> から書き込む方法を指定します。</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary vsli:raw="Writes the entire &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as a DiffGram, including original and current values. To generate a DiffGram containing only changed values, call &lt;see cref=&quot;M:System.Data.DataSet.GetChanges&quot; /&gt;, and then call &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram on the returned &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">元の値と現在の値を含め、<see cref="T:System.Data.DataSet" /> 全体を DiffGram として書き込みます。 変更された値だけを格納する DiffGram を生成するには、<see cref="M:System.Data.DataSet.GetChanges" /> を呼び出し、返された <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> で <see cref="T:System.Data.DataSet" /> を DiffGram として呼び出します。</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data, without an XSD schema. If no data is loaded into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, nothing is written.">XSD スキーマを使用せずに <see cref="T:System.Data.DataSet" /> の現在の内容を XML データとして書き込みます。 <see cref="T:System.Data.DataSet" /> にデータが書き込まれていない場合は、何も書き込まれません。</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data with the relational structure as inline XSD schema. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has only a schema with no data, only the inline schema is written. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; does not have a current schema, nothing is written.">リレーショナル構造をインライン XSD スキーマとして使用して、<see cref="T:System.Data.DataSet" /> の現在の内容を XML データとして書き込みます。 <see cref="T:System.Data.DataSet" /> がスキーマだけを持ち、データを持っていない場合は、インライン スキーマだけが書き込まれます。 <see cref="T:System.Data.DataSet" /> が現在のスキーマを持っていない場合は、何も書き込まれません。</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary vsli:raw="Allows structured data to be stored, retrieved, and manipulated through a relational &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">リレーショナル <see cref="T:System.Data.DataSet" /> を通じて、構造化データを格納、取得、および操作できるようにします。</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlDataDocument" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDataDocument" /> を指定して、<see cref="T:System.Data.DataSet" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataset" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; to load into &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">
        <see langword="DataSet" /> に読み込む <see langword="XmlDataDocument" />。</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of the current node.">現在のノードの複製を作成します。</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">指定したノードの下にあるサブツリーのクローンを順次作成していく場合は <see langword="true" />。指定したノードだけのクローンを作成する場合は <see langword="false" />。</param>
      <returns vsli:raw="The cloned node.">クローンとして作成されたノード。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; , and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">指定した <see cref="P:System.Xml.XmlNode.Prefix" />、<see cref="P:System.Xml.XmlDocument.LocalName" />、<see cref="P:System.Xml.XmlNode.NamespaceURI" /> を使用して、要素を作成します。</summary>
      <param name="prefix" vsli:raw="The prefix of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no prefix.">新しい要素のプレフィックス。 String.Empty または <see langword="null" /> の場合、プレフィックスはありません。</param>
      <param name="localName" vsli:raw="The local name of the new element.">新しい要素のローカル名。</param>
      <param name="namespaceURI" vsli:raw="The namespace Uniform Resource Identifier (URI) of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no namespaceURI.">新しい要素の名前空間 URI (Uniform Resource Identifier)。 String.Empty または <see langword="null" /> の場合、namespaceURI はありません。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">新しい <see cref="T:System.Xml.XmlElement" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">指定した名前を使用して、<see cref="T:System.Xml.XmlEntityReference" /> を作成します。</summary>
      <param name="name" vsli:raw="The name of the entity reference.">エンティティ参照の名前。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">このメソッドを呼び出しています。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">指定した名前を持つ <see cref="T:System.Xml.XmlEntityReference" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document. The &lt;see langword=&quot;XPathNavigator&quot; /&gt; is positioned on the node specified in the &lt;paramref name=&quot;node&quot; /&gt; parameter.">このドキュメント内を移動するための、新しい <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクトを作成します。 <see langword="XPathNavigator" /> は、<paramref name="node" /> パラメーターに指定されたノード上に配置されています。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; you want the navigator initially positioned on.">ナビゲーターを最初に配置する <see cref="T:System.Xml.XmlNode" />。</param>
      <returns vsli:raw="An &lt;see langword=&quot;XPathNavigator&quot; /&gt; used to navigate the document.">XML ドキュメントに移動するために使用される <see langword="XPathNavigator" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID. This method is not supported by the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class. Calling this method throws an exception.">指定した ID の <see cref="T:System.Xml.XmlElement" /> を取得します。 このメソッドは <see cref="T:System.Xml.XmlDataDocument" /> クラスでサポートされていません。 このメソッドを呼び出すと、例外がスローされます。</summary>
      <param name="elemId" vsli:raw="The attribute ID to match.">一致する属性 ID。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">このメソッドを呼び出しています。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID.">指定した ID を持つ <see cref="T:System.Xml.XmlElement" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlElement" /> に関連付けられている <see cref="T:System.Data.DataRow" /> を取得します。</summary>
      <param name="r" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; whose associated &lt;see langword=&quot;XmlElement&quot; /&gt; you want to retrieve.">取得する対象の、関連付けられた <see langword="DataRow" /> を持つ <see langword="XmlElement" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; containing a representation of the specified &lt;see langword=&quot;DataRow&quot; /&gt;.">指定した <see langword="XmlElement" /> の表現を格納している <see langword="DataRow" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">指定した <see cref="P:System.Xml.XmlDocument.Name" /> に一致するすべての子孫の要素のリストを格納している <see cref="T:System.Xml.XmlNodeList" /> を返します。</summary>
      <param name="name" vsli:raw="The qualified name to match. It is matched against the &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt; property of the matching node. The special value &quot;*&quot; matches all tags.">一致する限定名。 一致するノードの <see cref="P:System.Xml.XmlDocument.Name" /> プロパティに一致します。 特殊値の "*" は、すべてのタグに一致します。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes.">一致しているすべてのノードのリストを格納している <see cref="T:System.Xml.XmlNodeList" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">指定した <see cref="T:System.Data.DataRow" /> に関連付けられている <see cref="T:System.Xml.XmlElement" /> を取得します。</summary>
      <param name="e" vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; whose associated &lt;see langword=&quot;DataRow&quot; /&gt; you want to retrieve.">取得する対象の、関連付けられた <see langword="XmlElement" /> を持つ <see langword="DataRow" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; containing a representation of the &lt;see langword=&quot;XmlElement&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see langword=&quot;DataRow&quot; /&gt; associated with the &lt;see langword=&quot;XmlElement&quot; /&gt;.">
        <see langword="DataRow" /> の表現を格納している <see langword="XmlElement" />。<see langword="null" /> に関連付けられた <see langword="DataRow" /> がない場合は <see langword="XmlElement" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified stream.">指定したストリームから <see langword="XmlDataDocument" /> を読み込みます。</summary>
      <param name="inStream" vsli:raw="The stream containing the XML document to load.">読み込む XML ドキュメントが含まれているストリーム。</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定した <see cref="T:System.IO.TextReader" /> から <see langword="XmlDataDocument" /> を読み込みます。</summary>
      <param name="txtReader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; used to feed the XML data into the document.">XML データをドキュメントに送るために使用する <see langword="TextReader" />。</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using the specified URL.">指定した URL を使用して、<see langword="XmlDataDocument" /> を読み込みます。</summary>
      <param name="filename" vsli:raw="The URL of the file containing the XML document to load.">読み込む XML ドキュメントを格納しているファイルの URL。</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlReader" /> から <see langword="XmlDataDocument" /> を読み込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; containing the XML document to load.">読み込む XML ドキュメントを格納している <see langword="XmlReader" />。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The XML being loaded contains entity references, and the reader cannot resolve entities.">読み込まれている XML にエンティティ参照が含まれており、リーダーがエンティティを解決できません。</exception>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that provides a relational representation of the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">
        <see langword="XmlDataDocument" /> のデータのリレーショナル表現を提供する <see cref="T:System.Data.DataSet" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;DataSet&quot; /&gt; that can be used to access the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using a relational model.">リレーショナル モデルを使用して <see langword="DataSet" /> のデータにアクセスするために使用できる <see langword="XmlDataDocument" />。</returns>
    </member>
  </members>
</doc>