<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.RegularExpressions</name>
  </assembly>
  <members>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary vsli:raw="Represents the results from a single successful subexpression capture.">Representa los resultados de una única captura de subexpresiones correcta.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary vsli:raw="Retrieves the captured substring from the input string by calling the &lt;see cref=&quot;P:System.Text.RegularExpressions.Capture.Value&quot; /&gt; property.">Recupera la subcadena capturada de la cadena de entrada llamando a la propiedad <see cref="P:System.Text.RegularExpressions.Capture.Value" />.</summary>
      <returns vsli:raw="The substring that was captured by the match.">Subcadena capturada por la coincidencia.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary vsli:raw="The position in the original string where the first character of the captured substring is found.">Posición en la cadena original donde se encuentra el primer carácter de la subcadena capturada.</summary>
      <returns vsli:raw="The zero-based starting position in the original string where the captured substring is found.">Posición inicial basada en cero en la cadena original donde se encuentra la subcadena capturada.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary vsli:raw="Gets the length of the captured substring.">Obtiene la longitud de la subcadena capturada.</summary>
      <returns vsli:raw="The length of the captured substring.">Longitud de la subcadena capturada.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary vsli:raw="Gets the captured substring from the input string.">Obtiene la subcadena capturada desde la cadena de entrada.</summary>
      <returns vsli:raw="The substring that is captured by the match.">Subcadena capturada por la coincidencia.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary vsli:raw="Represents the set of captures made by a single capturing group. The collection is immutable (read-only) and has no public constructor.">Representa el conjunto de capturas realizadas por un único grupo de captura. La colección es inmutable (de solo lectura) y no tiene ningún constructor público.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">Copia todos los elementos de la colección en la matriz indicada a partir del índice especificado.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Matriz en la que se va a copiar la colección.</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where copying is to begin.">Posición de la matriz de destino en que se inicia la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> está fuera de los límites de <paramref name="array" />.  
  
o bien 
 <paramref name="arrayIndex" /> más <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> está fuera de los límites de <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia los elementos de la colección en un objeto <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Control <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados desde la colección. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than 0.">
        <paramref name="arrayIndex" /> es menor que 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source collection is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">El número de elementos de la colección de origen es mayor que el espacio disponible en <paramref name="arrayIndex" /> hasta el final del objeto <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Proporciona un enumerador que recorre en iteración la colección.</summary>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Capture&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">Objeto que contiene todos los objetos <see cref="T:System.Text.RegularExpressions.Capture" /> de la <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to add to the collection.">El objeto que se va a agregar a la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">Determina si la colección contiene un valor concreto.</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">Objeto que se va a buscar en la colección.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="item" /> se encuentra en la colección; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to remove from the collection.">Objeto que se quitará de la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Devuelve un enumerador que procesa una iteración en la colección.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Enumerador que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Determina el índice de un elemento específico de la colección.</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">Objeto que se va a buscar en la colección.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;item&quot; /&gt; if found in the list; otherwise, -1.">Devuelve el índice de <paramref name="item" /> si se encuentra en la lista; de lo contrario, devuelve -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted.">Índice basado en cero en el que debe insertarse <paramref name="item" />.</param>
      <param name="item" vsli:raw="The object to insert into the collection.">El objeto que se va a insertar en la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Índice de base cero del elemento que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to add to the collection.">El objeto que se va a agregar a la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">Determina si la colección contiene un valor concreto.</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">Objeto que se va a buscar en la colección.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> está en la colección; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Determina el índice de un elemento específico de la colección.</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">Objeto que se va a buscar en la colección.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">Devuelve el índice de <paramref name="value" /> si se encuentra en la lista; de lo contrario, devuelve -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Índice basado en cero en el que debe insertarse <paramref name="value" />.</param>
      <param name="value" vsli:raw="The object to insert into the collection.">El objeto que se va a insertar en la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to remove from the collection.">Objeto que se quitará de la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Índice de base cero del elemento que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary vsli:raw="Gets the number of substrings captured by the group.">Obtiene el número de subcadenas capturadas por el grupo.</summary>
      <returns vsli:raw="The number of items in the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">Número de elementos en <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">Obtiene un valor que indica si la colección es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread-safe).">Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">Obtiene un miembro individual de la colección.</summary>
      <param name="i" vsli:raw="Index into the capture collection.">Índice en la colección de captura.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt;.">
        <paramref name="i" /> es menor que 0 o mayor que <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />.</exception>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">Subcadena capturada en la posición <paramref name="i" /> de la colección.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">Obtiene un objeto que se puede utilizar para sincronizar el acceso a la colección.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection.">Objeto que se puede usar para sincronizar el acceso a la colección.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">Obtiene el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">Índice de base cero del elemento que se va a obtener.</param>
      <returns vsli:raw="The element at the specified index.">Elemento en el índice especificado.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the collection has a fixed size.">Obtiene un valor que indica si la colección tiene un tamaño fijo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, since the collection has a fixed size.">
        <see langword="true" />, ya que la colección tiene un tamaño fijo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">Obtiene el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">Índice de base cero del elemento que se va a obtener.</param>
      <returns vsli:raw="The element at the specified index.">Elemento en el índice especificado.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary vsli:raw="Represents the results from a single capturing group.">Representa los resultados de un único grupo de captura.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Group&quot; /&gt; object equivalent to the one supplied that is safe to share between multiple threads.">Devuelve un objeto <see langword="Group" /> equivalente al suministrado que puede compartirse con seguridad entre varios subprocesos.</summary>
      <param name="inner" vsli:raw="The input &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; object.">El objeto <see cref="T:System.Text.RegularExpressions.Group" /> de entrada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A regular expression &lt;see langword=&quot;Group&quot; /&gt; object.">Objeto <see langword="Group" /> de expresión regular.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary vsli:raw="Gets a collection of all the captures matched by the capturing group, in innermost-leftmost-first order (or innermost-rightmost-first order if the regular expression is modified with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option). The collection may have zero or more items.">Obtiene una colección de todas las capturas que coinciden con el grupo de captura, en orden empezando por el más interno de la izquierda (o por el más interno de la derecha si se modifica con la opción <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />). La colección puede tener cero o más elementos.</summary>
      <returns vsli:raw="The collection of substrings matched by the group.">Colección de subcadenas que coinciden por el grupo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Name">
      <summary vsli:raw="Returns the name of the capturing group represented by the current instance.">Devuelve el nombre del grupo de captura que la instancia actual representa.</summary>
      <returns vsli:raw="The name of the capturing group represented by the current instance.">El nombre del grupo de captura que la instancia actual representa.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary vsli:raw="Gets a value indicating whether the match is successful.">Obtiene un valor que indica si la coincidencia ha tenido éxito.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the match is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la coincidencia es correcta; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary vsli:raw="Returns the set of captured groups in a single match. The collection is immutable (read-only) and has no public constructor.">Devuelve el conjunto de grupos capturados en una única coincidencia. La colección es inmutable (de solo lectura) y no tiene ningún constructor público.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the group collection contains a captured group identified by the specified name.">Determina si la colección de grupos contiene un grupo capturado identificado mediante el nombre especificado.</summary>
      <param name="key" vsli:raw="A string with the name of the captured group to locate.">Cadena con el nombre del grupo capturado que se va a buscar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group collection contains a captured group identified by &lt;paramref name=&quot;key&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si la colección de grupos contiene un grupo capturado identificado mediante <paramref name="key" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">Copia todos los elementos de la colección en la matriz indicada a partir del índice especificado.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Matriz en la que se va a copiar la colección.</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where the copying is to begin.">Posición de la matriz de destino donde se inicia la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.GroupCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> está fuera de los límites de <paramref name="array" />.

o bien

<paramref name="arrayIndex" /> más <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> está fuera de los límites de <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)">
      <summary vsli:raw="Copies the elements of the group collection to a &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; array, starting at a particular array index.">Copia los elementos de la colección de grupos en una matriz <see cref="T:System.Text.RegularExpressions.Group" />, a partir de un índice de matriz concreto.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the group collection. The array must have zero-based indexing.">Matriz unidimensional que constituye el destino de los elementos copiados de la colección de grupos. La matriz debe tener una indización de base cero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is null.">
        <paramref name="array" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; is greater than the length of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> es menor que cero.

o bien

<paramref name="arrayIndex" /> es mayor que la longitud de <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; - &lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the group collection count.">La longitud de <paramref name="array" /> - <paramref name="arrayIndex" /> es menor que el número de colecciones de grupos.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Proporciona un enumerador que recorre en iteración la colección.</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">Enumerador que contiene todos los objetos <see cref="T:System.Text.RegularExpressions.Group" /> de la colección <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Add(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The group to add to the collection.">Grupo que se va a agregar a la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">No se admite este método. Es una colección de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">No se admite este método. Es una colección de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Contains(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">Determina si la colección de grupos contiene un elemento de grupo específico.</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">Grupo que se va a ubicar en la colección de grupos.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si el elemento de grupo se encuentra en la colección de grupos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Remove(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The group to remove.">Grupo que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">No se admite este método. Es una colección de solo lectura.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Text#RegularExpressions#Group}}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">Proporciona un enumerador que recorre en iteración la colección de grupos.</summary>
      <returns vsli:raw="An enumerator that contains all names and objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; collection.">Enumerador que contiene todos los nombres y objetos de la colección <see cref="T:System.Text.RegularExpressions.Group" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Group}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">Proporciona un enumerador que recorre en iteración la colección de grupos.</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the group collection.">Enumerador que contiene todos los objetos <see cref="T:System.Text.RegularExpressions.Group" /> de la colección de grupos.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#IndexOf(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">Determina el índice de un grupo específico de la colección de grupos.</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">Grupo que se va a ubicar en la colección de grupos.</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">Índice de <paramref name="item" /> si se encuentra; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Insert(System.Int32,System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">Posición en la que se van a insertar los grupos.</param>
      <param name="item" vsli:raw="The group to insert.">Grupo que se va a insertar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">No se admite este método. Es una colección de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">Índice de base cero del grupo que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">No se admite este método. Es una colección de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to add to the group collection.">Objeto que se va a agregar a la colección de grupos.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">No se admite este método. Es una colección de solo lectura.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">No se admite este método. Es una colección de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">Determina si la colección de grupos contiene un elemento de grupo específico.</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">Grupo que se va a ubicar en la colección de grupos.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si el elemento de grupo se encuentra en la colección de grupos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">Determina el índice de un grupo específico de la colección de grupos.</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">Grupo que se va a ubicar en la colección de grupos.</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">Índice de <paramref name="item" /> si se encuentra; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">Posición en la que se van a insertar los grupos.</param>
      <param name="value" vsli:raw="The group to insert.">Grupo que se va a insertar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">No se admite este método. Es una colección de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The group to remove.">Grupo que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">No se admite este método. Es una colección de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">Índice de base cero del grupo que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">No se admite este método. Es una colección de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)">
      <summary vsli:raw="Attempts to retrieve a group identified by the provided name key, if it exists in the group collection.">Intenta recuperar un grupo identificado mediante la clave de nombre proporcionada, si existe en la colección de grupos.</summary>
      <param name="key" vsli:raw="A string with the group name key to look for.">Cadena con la clave de nombre de grupo que se va a buscar.</param>
      <param name="value" vsli:raw="When the method returns, the group whose name is &lt;paramref name=&quot;key&quot; /&gt;, if it is found; otherwise, &lt;see langword=&quot;null&quot; /&gt; if not found.">El resultado que devuelve este método indica el grupo cuyo nombre es <paramref name="key" />, si se encuentra; en caso contrario, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a group identified by the provided name key exists; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si existe un grupo identificado mediante la clave de nombre proporcionada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary vsli:raw="Returns the number of groups in the collection.">Devuelve el número de grupos de la colección.</summary>
      <returns vsli:raw="The number of groups in the collection.">Número de grupos de la colección.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read-only.">Obtiene un valor que indica si la colección es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt; is synchronized (thread-safe).">Obtiene un valor que indica si el acceso a <see cref="T:System.Text.RegularExpressions.GroupCollection" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary vsli:raw="Enables access to a member of the collection by integer index.">Habilita el acceso a un miembro de la colección por índice de entero.</summary>
      <param name="groupnum" vsli:raw="The zero-based index of the collection member to be retrieved.">Índice de base cero del miembro de la colección que se va a recuperar.</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupnum&quot; /&gt;.">Miembro de la colección especificado por <paramref name="groupnum" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary vsli:raw="Enables access to a member of the collection by string index.">Habilita el acceso a un miembro de la colección por índice de cadena.</summary>
      <param name="groupname" vsli:raw="The name of a capturing group.">Nombre de un grupo de captura.</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupname&quot; /&gt;.">Miembro de la colección especificado por <paramref name="groupname" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Keys">
      <summary vsli:raw="Gets a string enumeration that contains the name keys of the group collection.">Obtiene una enumeración de cadena que contiene las claves de nombre de la colección de grupos.</summary>
      <returns vsli:raw="The name keys of the group collection.">Claves de nombre de la colección de grupos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</summary>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object to synchronize.">Copia del objeto <see cref="T:System.Text.RegularExpressions.Match" /> que se va a sincronizar.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Item(System.Int32)">
      <summary vsli:raw="Gets the group at the specified position in the collection.">Obtiene el grupo en la posición especificada de la colección.</summary>
      <param name="index" vsli:raw="The zero-based index of the group in the group collection.">Índice basado en cero del grupo en la colección de grupos.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">No se puede establecer un elemento. Es una colección de solo lectura.</exception>
      <returns vsli:raw="The group in the desired position.">Grupo en la posición deseada.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the group collection has a fixed size.">Obtiene un valor que indica si la colección de grupos tiene un tamaño fijo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">Es siempre <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the group in the desired position.">Obtiene el grupo en la posición elegida.</summary>
      <param name="index" vsli:raw="The zero-index position of the group in the group collection.">Posición del índice basado en cero del grupo en la colección de grupos.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">No se puede establecer un elemento. Es una colección de solo lectura.</exception>
      <returns vsli:raw="The group in the desired position.">Grupo en la posición deseada.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Values">
      <summary vsli:raw="Gets a group enumeration with all the groups in the group collection.">Obtiene una enumeración de grupos con todos los grupos de la colección de grupos.</summary>
      <returns vsli:raw="A group enumeration.">Enumeración de grupos.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary vsli:raw="Represents the results from a single regular expression match.">Representa los resultados de una sola coincidencia de expresión regular.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).">Devuelve un nuevo objeto <see cref="T:System.Text.RegularExpressions.Match" /> con los resultados de la siguiente coincidencia, empezando en la posición donde finalizó la última (en el carácter siguiente al último que coincidía).</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Se agotó el tiempo de espera.</exception>
      <returns vsli:raw="The next regular expression match.">Siguiente coincidencia de expresión regular.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary vsli:raw="Returns the expansion of the specified replacement pattern.">Devuelve la expansión del patrón de reemplazo especificado.</summary>
      <param name="replacement" vsli:raw="The replacement pattern to use.">Patrón de reemplazo que se va a utilizar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="replacement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Expansion is not allowed for this pattern.">No se permite la expansión para este modelo.</exception>
      <returns vsli:raw="The expanded version of the &lt;paramref name=&quot;replacement&quot; /&gt; parameter.">Versión expandida del parámetro <paramref name="replacement" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; instance equivalent to the one supplied that is suitable to share between multiple threads.">Devuelve una instancia de <see cref="T:System.Text.RegularExpressions.Match" /> equivalente a la suministrada que es adecuada para compartirse entre varios subprocesos.</summary>
      <param name="inner" vsli:raw="A regular expression match equivalent to the one expected.">Coincidencia de expresión regular equivalente a la esperada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A regular expression match that is suitable to share between multiple threads.">Coincidencia de expresión regular que se puede compartir entre varios subprocesos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary vsli:raw="Gets the empty group. All failed matches return this empty match.">Obtiene el grupo vacío. Todas las coincidencias erróneas devuelven esta coincidencia vacía.</summary>
      <returns vsli:raw="An empty match.">Coincidencia vacía.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary vsli:raw="Gets a collection of groups matched by the regular expression.">Obtiene una colección de grupos que coinciden con la expresión regular.</summary>
      <returns vsli:raw="The character groups matched by the pattern.">Los grupos de carácter coinciden con el patrón.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary vsli:raw="Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.  The collection is immutable (read-only) and has no public constructor. The &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex.Matches(System.String)&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt; object.">Representa el conjunto de coincidencias con éxito encontradas por la solicitud iterada de un modelo de expresión regular en la cadena de entrada.  La colección es inmutable (de solo lectura) y no tiene ningún constructor público. El método <see cref="T:System.Text.RegularExpressions.Regex.Matches(System.String)" /> devuelve un objeto <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array starting at the given index.">Copia todos los elementos de la colección en la matriz indicada a partir del índice dado.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Matriz en la que se va a copiar la colección.</param>
      <param name="arrayIndex" vsli:raw="The position in the array where copying is to begin.">Posición de la matriz donde se inicia la copia.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a multi-dimensional array.">
        <paramref name="array" /> es una matriz multidimensional.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> está fuera de los límites de <paramref name="array" />.  
  
o bien 
 <paramref name="arrayIndex" /> más <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> está fuera de los límites de <paramref name="array" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Se agotó el tiempo de espera.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia los elementos de la colección en un objeto <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Control <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados desde la colección. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Proporciona un enumerador que recorre en iteración la colección.</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Se agotó el tiempo de espera.</exception>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt;.">Objeto que contiene todos los objetos <see cref="T:System.Text.RegularExpressions.Match" /> de la <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Add(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to add to the collection.">El objeto que se va a agregar a la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Contains(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">Determina si la colección contiene un valor concreto.</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">Objeto que se va a buscar en la colección.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="item" /> se encuentra en la colección; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Remove(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The object to remove from the collection.">Objeto que se quitará de la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was successfully removed from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is not found in the original collection.">Es <see langword="true" /> si <paramref name="item" /> se quitó correctamente de la colección; de lo contrario, es <see langword="false" />. Este método también devuelve <see langword="false" /> si <paramref name="item" /> no se encuentra en la colección original.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Match}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Devuelve un enumerador que procesa una iteración en la colección.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Enumerador que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#IndexOf(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Determina el índice de un elemento específico de la colección.</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">Objeto que se va a buscar en la colección.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;item&quot; /&gt; if found in the list; otherwise, -1.">Devuelve el índice de <paramref name="item" /> si se encuentra en la lista; de lo contrario, devuelve -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Insert(System.Int32,System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted.">Índice basado en cero en el que debe insertarse <paramref name="item" />.</param>
      <param name="item" vsli:raw="The object to insert into the collection.">El objeto que se va a insertar en la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Índice de base cero del elemento que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to add to the collection.">El objeto que se va a agregar a la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Removes all items from the collection.">Quita todos los elementos de la colección.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">Determina si la colección contiene un valor concreto.</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">Objeto que se va a buscar en la colección.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> está en la colección; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Determina el índice de un elemento específico de la colección.</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">Objeto que se va a buscar en la colección.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">Devuelve el índice de <paramref name="value" /> si se encuentra en la lista; de lo contrario, devuelve -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Índice basado en cero en el que debe insertarse <paramref name="value" />.</param>
      <param name="value" vsli:raw="The object to insert into the collection.">El objeto que se va a insertar en la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to remove from the collection.">Objeto que se quitará de la colección.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cuando se llama a este método, siempre se produce <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Índice de base cero del elemento que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">La colección es de solo lectura.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary vsli:raw="Gets the number of matches.">Obtiene el número de coincidencias.</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Se agotó el tiempo de espera.</exception>
      <returns vsli:raw="The number of matches.">Número de coincidencias.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">Obtiene un valor que indica si la colección es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread-safe).">Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">Obtiene un miembro individual de la colección.</summary>
      <param name="i" vsli:raw="Index into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; collection.">Índice de la colección <see cref="T:System.Text.RegularExpressions.Match" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt;.">
        <paramref name="i" /> es menor que 0, o mayor o igual a <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Se agotó el tiempo de espera.</exception>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">Subcadena capturada en la posición <paramref name="i" /> de la colección.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">Obtiene un objeto que se puede utilizar para sincronizar el acceso a la colección.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection. This property always returns the object itself.">Objeto que se puede usar para sincronizar el acceso a la colección. Esta propiedad devuelve siempre el propio objeto.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">Obtiene el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">Índice de base cero del elemento que se va a obtener.</param>
      <returns vsli:raw="The element at the specified index.">Elemento en el índice especificado.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the collection has a fixed size.">Obtiene un valor que indica si la colección tiene un tamaño fijo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">Obtiene el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">Índice de base cero del elemento que se va a obtener.</param>
      <returns vsli:raw="The element at the specified index.">Elemento en el índice especificado.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary vsli:raw="Represents the method that is called each time a regular expression match is found during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">Representa el método al que se llama cada vez que se encuentra una coincidencia de expresión regular durante una operación del método <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object that represents a single regular expression match during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">Objeto <see cref="T:System.Text.RegularExpressions.Match" /> que representa la coincidencia de la expresión regular única durante una operación del método <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</param>
      <returns vsli:raw="A string returned by the method that is represented by the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Cadena que devuelve el método representado por el delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary vsli:raw="Represents an immutable regular expression.">Representa una expresión regular inmutable.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary vsli:raw="Specifies that a pattern-matching operation should not time out.">Especifica que una operación de coincidencia de patrones no debe superar el tiempo de espera.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.internalMatchTimeout">
      <summary vsli:raw="The maximum amount of time that can elapse in a pattern-matching operation before the operation times out.">Tiempo máximo que puede transcurrir en una operación de coincidencia de patrones antes de que se agote el tiempo de espera de la operación.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class by using serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.Regex" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that contains a serialized pattern and &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; information.">Objeto que contiene un modelo serializado e información de <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</param>
      <param name="context" vsli:raw="The destination for this serialization. (This parameter is not used; specify &lt;see langword=&quot;null&quot; /&gt;.)">Destino de esta serialización. (Este parámetro no se usa; especifique <see langword="null" />).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The pattern that &lt;paramref name=&quot;info&quot; /&gt; contains is &lt;see langword=&quot;null&quot; /&gt;.">El modelo que contiene <paramref name="info" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; contains an invalid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; flag.">
        <paramref name="info" /> contiene una marca <see cref="T:System.Text.RegularExpressions.RegexOptions" /> no válida.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.Regex" /> para la expresión regular especificada.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.Regex" /> para la expresión regular especificada, con opciones que modifican el modelo.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">Combinación bit a bit de los valores de enumeración que modifican la expresión regular.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; contains an invalid flag.">
        <paramref name="options" /> contiene una marca no válida.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern and a value that specifies how long a pattern matching method should attempt a match before it times out.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.Regex" /> para la expresión regular especificada, con las opciones que modifican el modelo y un valor que especifica cuánto tiempo debe intentar un método de coincidencia de modelos una coincidencia antes de que se agote el tiempo de espera.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">Combinación bit a bit de los valores de enumeración que modifican la expresión regular.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Un intervalo de tiempo de espera, o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que el método no debe agotar el tiempo de espera.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> no es un valor <see cref="T:System.Text.RegularExpressions.RegexOptions" /> válido.  
  
o bien 
 <paramref name="matchTimeout" /> es negativo, cero o mayor que 24 días aproximadamente.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly.">Compila uno o varios objetos <see cref="T:System.Text.RegularExpressions.Regex" /> especificados en un ensamblado con nombre.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Matriz que describe las expresiones regulares que se van a compilar.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">El nombre de archivo del ensamblado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">El valor de la propiedad <see cref="P:System.Reflection.AssemblyName.Name" /> del parámetro <paramref name="assemblyname" /> es una cadena vacía o NULL.  
  
O bien 
El modelo de expresión regular de uno o varios objetos de <paramref name="regexinfos" /> contiene una sintaxis no válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> o <paramref name="regexinfos" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">Solo .NET Core: no se admite la creación de un ensamblado de expresiones regulares compiladas.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly with the specified attributes.">Compila uno o varios objetos <see cref="T:System.Text.RegularExpressions.Regex" /> especificados en un ensamblado con nombre que tiene los atributos especificados.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Matriz que describe las expresiones regulares que se van a compilar.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">El nombre de archivo del ensamblado.</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">Matriz que define los atributos que se van a aplicar al ensamblado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">El valor de la propiedad <see cref="P:System.Reflection.AssemblyName.Name" /> del parámetro <paramref name="assemblyname" /> es una cadena vacía o NULL.  
  
O bien 
El modelo de expresión regular de uno o varios objetos de <paramref name="regexinfos" /> contiene una sintaxis no válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> o <paramref name="regexinfos" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">Solo .NET Core: no se admite la creación de un ensamblado de expresiones regulares compiladas.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects and a specified resource file to a named assembly with the specified attributes.">Compila uno o varios objetos <see cref="T:System.Text.RegularExpressions.Regex" /> especificados y un archivo de recursos especificado en un ensamblado con nombre que tiene los atributos indicados.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Matriz que describe las expresiones regulares que se van a compilar.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">El nombre de archivo del ensamblado.</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">Matriz que define los atributos que se van a aplicar al ensamblado.</param>
      <param name="resourceFile" vsli:raw="The name of the Win32 resource file to include in the assembly.">Nombre del archivo de recursos Win32 que se va a incluir en el ensamblado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">El valor de la propiedad <see cref="P:System.Reflection.AssemblyName.Name" /> del parámetro <paramref name="assemblyname" /> es una cadena vacía o NULL.  
  
O bien 
El modelo de expresión regular de uno o varios objetos de <paramref name="regexinfos" /> contiene una sintaxis no válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> o <paramref name="regexinfos" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="The &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter designates an invalid Win32 resource file.">El parámetro <paramref name="resourceFile" /> designa un archivo de recursos de Win32 no válido.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file designated by the &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter cannot be found.">No se pudo encontrar el archivo designado por el parámetro <paramref name="resourceFile" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">Solo .NET Core: no se admite la creación de un ensamblado de expresiones regulares compiladas.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary vsli:raw="Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $, ., #, and white space) by replacing them with their escape codes. This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.">Convierte en caracteres de escape un juego mínimo de caracteres (\, *, +, ?, |, {, [, (,), ^, $,., # y espacio en blanco) al reemplazarlos con sus códigos de escape. Esto indica al motor de expresiones regulares que interprete los caracteres literalmente en lugar de como metacaracteres.</summary>
      <param name="str" vsli:raw="The input string that contains the text to convert.">Cadena de entrada que contiene el texto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A string of characters with metacharacters converted to their escaped form.">Cadena de caracteres con metacaracteres convertidos a su forma de escape.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary vsli:raw="Returns an array of capturing group names for the regular expression.">Devuelve una matriz de nombres de grupo de captura para la expresión regular.</summary>
      <returns vsli:raw="A string array of group names.">Matriz de cadenas de nombres de grupo.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary vsli:raw="Returns an array of capturing group numbers that correspond to group names in an array.">Devuelve una matriz de números de grupo de captura que corresponde a los nombres de grupo en una matriz.</summary>
      <returns vsli:raw="An integer array of group numbers.">Matriz de enteros de números de grupo.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary vsli:raw="Gets the group name that corresponds to the specified group number.">Obtiene el nombre de grupo que corresponde al número de grupo especificado.</summary>
      <param name="i" vsli:raw="The group number to convert to the corresponding group name.">Número de grupo para convertir al nombre de grupo correspondiente.</param>
      <returns vsli:raw="A string that contains the group name associated with the specified group number. If there is no group name that corresponds to &lt;paramref name=&quot;i&quot; /&gt;, the method returns &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Cadena que contiene el nombre de grupo asociado al número de grupo especificado. Si no hay un nombre de grupo que se corresponda con <paramref name="i" />, el método devuelve <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary vsli:raw="Returns the group number that corresponds to the specified group name.">Devuelve el número de grupo que corresponde al nombre de grupo especificado.</summary>
      <param name="name" vsli:raw="The group name to convert to the corresponding group number.">Nombre de grupo para convertir al número de grupo correspondiente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The group number that corresponds to the specified group name, or -1 if &lt;paramref name=&quot;name&quot; /&gt; is not a valid group name.">Número del grupo que corresponde al nombre de grupo especificado o -1 si <paramref name="name" /> no es un nombre de grupo válido.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="References have already been initialized.">Ya se han inicializado las referencias.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in a specified input string.">Indica si la expresión regular especificada en el constructor <see cref="T:System.Text.RegularExpressions.Regex" /> encuentra una coincidencia en una cadena de entrada indicada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la expresión regular encuentra una coincidencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in the specified input string, beginning at the specified starting position in the string.">Indica si la expresión regular especificada en el constructor <see cref="T:System.Text.RegularExpressions.Regex" /> encuentra una coincidencia en la cadena de entrada especificada, empezando en la posición inicial indicada en la cadena.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="startat" vsli:raw="The character position at which to start the search.">Posición de carácter en la que se va a iniciar la búsqueda.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> es menor que cero o mayor que la longitud de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la expresión regular encuentra una coincidencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string.">Indica si la expresión regular especificada busca una coincidencia en la cadena de entrada indicada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la expresión regular encuentra una coincidencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.">Indica si la expresión regular especificada encuentra una coincidencia en la cadena de entrada indicada, utilizando para ello las opciones de coincidencia especificadas.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinación bit a bit de los valores de enumeración que proporcionan opciones de coincidencia.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.">
        <paramref name="options" /> no es un valor <see cref="T:System.Text.RegularExpressions.RegexOptions" /> válido.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la expresión regular encuentra una coincidencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options and time-out interval.">Indica si la expresión regular especificada encuentra una coincidencia en la cadena de entrada indicada, utilizando para ello las opciones de coincidencia y el intervalo de tiempo de espera que se especifiquen.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinación bit a bit de los valores de enumeración que proporcionan opciones de coincidencia.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Un intervalo de tiempo de espera, o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que el método no debe agotar el tiempo de espera.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> no es un valor <see cref="T:System.Text.RegularExpressions.RegexOptions" /> válido.  
  
o bien 
 <paramref name="matchTimeout" /> es negativo, cero o mayor que 24 días aproximadamente.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Se agotó el tiempo de espera.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la expresión regular encuentra una coincidencia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Busca en la cadena de entrada especificada la primera aparición de la expresión regular especificada en el constructor <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="An object that contains information about the match.">Objeto que contiene información sobre la coincidencia.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.">Busca en la cadena de entrada la primera aparición de una expresión regular, empezando en la posición inicial especificada de la cadena.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="startat" vsli:raw="The zero-based character position at which to start the search.">Posición de carácter basada en cero en la que se va a iniciar la búsqueda.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> es menor que cero o mayor que la longitud de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="An object that contains information about the match.">Objeto que contiene información sobre la coincidencia.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.">Busca en la cadena de entrada la primera aparición de una expresión regular, empezando en la posición inicial especificada y buscando solo en el número de caracteres indicado.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="beginning" vsli:raw="The zero-based character position in the input string that defines the leftmost position to be searched.">Posición de caracteres de base cero en la cadena de entrada que define la posición más a la izquierda en la que se buscará.</param>
      <param name="length" vsli:raw="The number of characters in the substring to include in the search.">Número de caracteres de la subcadena que se van a incluir en la búsqueda.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;beginning&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;beginning&quot; /&gt;&lt;see langword=&quot;+&quot; /&gt;&lt;paramref name=&quot;length&quot; /&gt;&lt;see langword=&quot;-1&quot; /&gt; identifies a position that is outside the range of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="beginning" /> es menor que cero o mayor que la longitud de <paramref name="input" />.  
  
O bien 
 <paramref name="length" /> es menor que cero o mayor que la longitud de <paramref name="input" />.  
  
O bien 
 <paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> identifica una posición que está fuera del intervalo de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="An object that contains information about the match.">Objeto que contiene información sobre la coincidencia.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the specified regular expression.">Busca en la cadena de entrada especificada la primera aparición de la expresión regular indicada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="An object that contains information about the match.">Objeto que contiene información sobre la coincidencia.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.">Busca en la cadena de entrada la primera aparición de la expresión regular especificada, utilizando para ello las opciones de coincidencia indicadas.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinación bit a bit de los valores de enumeración que proporcionan opciones de coincidencia.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> no es una combinación bit a bit válida de valores <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="An object that contains information about the match.">Objeto que contiene información sobre la coincidencia.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options and time-out interval.">Busca en la cadena de entrada la primera aparición de la expresión regular especificada, utilizando para ello las opciones de coincidencia y el intervalo de tiempo de espera que se indiquen.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinación bit a bit de los valores de enumeración que proporcionan opciones de coincidencia.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Un intervalo de tiempo de espera, o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que el método no debe agotar el tiempo de espera.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> no es una combinación bit a bit válida de valores <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
O bien 
 <paramref name="matchTimeout" /> es negativo, cero o mayor que 24 días aproximadamente.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="An object that contains information about the match.">Objeto que contiene información sobre la coincidencia.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression.">Busca en la cadena de entrada especificada todas las apariciones de una expresión regular.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Colección de los objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados en la búsqueda. Si no se encuentran coincidencias, el método devuelve un objeto de colección vacía.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.">Busca en la cadena de entrada especificada todas las apariciones de una expresión regular, empezando en la posición de inicio especificada de la cadena.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="startat" vsli:raw="The character position in the input string at which to start the search.">Posición de carácter de la cadena de entrada en la que se va a iniciar la búsqueda.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> es menor que cero o mayor que la longitud de <paramref name="input" />.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Colección de los objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados en la búsqueda. Si no se encuentran coincidencias, el método devuelve un objeto de colección vacía.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression.">Busca en la cadena de entrada especificada todas las apariciones de una expresión regular indicada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Colección de los objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados en la búsqueda. Si no se encuentran coincidencias, el método devuelve un objeto de colección vacía.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.">Busca en la cadena de entrada especificada todas las apariciones de una expresión regular indicada, utilizando para ello las opciones de coincidencia especificadas.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">Combinación bit a bit de los valores de enumeración que especifican opciones de coincidencia.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> no es una combinación bit a bit válida de valores <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Colección de los objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados en la búsqueda. Si no se encuentran coincidencias, el método devuelve un objeto de colección vacía.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options and time-out interval.">Busca en la cadena de entrada especificada todas las apariciones de una expresión regular indicada, utilizando para ello las opciones de coincidencia y el intervalo de tiempo de espera que se especifiquen.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">Combinación bit a bit de los valores de enumeración que especifican opciones de coincidencia.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Un intervalo de tiempo de espera, o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que el método no debe agotar el tiempo de espera.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> no es una combinación bit a bit válida de valores <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
O bien 
 <paramref name="matchTimeout" /> es negativo, cero o mayor que 24 días aproximadamente.</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Colección de los objetos <see cref="T:System.Text.RegularExpressions.Match" /> encontrados en la búsqueda. Si no se encuentran coincidencias, el método devuelve un objeto de colección vacía.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.">En una cadena de entrada especificada, reemplaza todas las cadenas que coinciden con un patrón de expresión regular por una cadena de reemplazo especificada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="replacement" vsli:raw="The replacement string.">La cadena de reemplazo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="replacement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Cadena nueva que es idéntica a la cadena de entrada, salvo que la cadena de reemplazo ocupa el lugar de cada cadena coincidente. Si no se encuentran coincidencias del patrón de expresión regular en la instancia actual, el método devuelve la instancia sin modificar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">En una cadena de entrada especificada, reemplaza un número máximo indicado de cadenas que coinciden con un patrón de expresión regular por una cadena de reemplazo especificada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="replacement" vsli:raw="The replacement string.">La cadena de reemplazo.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement can occur.">Número máximo de veces que puede producirse el reemplazo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="replacement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Cadena nueva que es idéntica a la cadena de entrada, salvo que la cadena de reemplazo ocupa el lugar de cada cadena coincidente. Si no se encuentran coincidencias del patrón de expresión regular en la instancia actual, el método devuelve la instancia sin modificar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">En una subcadena de entrada especificada, reemplaza un número máximo especificado de cadenas que coinciden con un patrón de expresión regular por una cadena de reemplazo especificada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="replacement" vsli:raw="The replacement string.">La cadena de reemplazo.</param>
      <param name="count" vsli:raw="Maximum number of times the replacement can occur.">Número máximo de veces que puede producirse el reemplazo.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">Posición del carácter en la cadena de entrada donde comienza la búsqueda.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="replacement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> es menor que cero o mayor que la longitud de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Cadena nueva que es idéntica a la cadena de entrada, salvo que la cadena de reemplazo ocupa el lugar de cada cadena coincidente. Si no se encuentran coincidencias del patrón de expresión regular en la instancia actual, el método devuelve la instancia sin modificar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.">En una cadena de entrada especificada, reemplaza todas las cadenas que coinciden con una expresión regular concreta por la cadena de reemplazo indicada.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="replacement" vsli:raw="The replacement string.">La cadena de reemplazo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="replacement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Cadena nueva que es idéntica a la cadena de entrada, salvo que la cadena de reemplazo ocupa el lugar de cada cadena coincidente. Si <paramref name="pattern" /> no coincide con la instancia actual, el método devuelve la instancia actual sin modificar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.">En una cadena de entrada especificada, reemplaza todas las cadenas que coinciden con una expresión regular concreta por la cadena de reemplazo indicada. Las opciones especificadas modifican la operación de coincidencia.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="replacement" vsli:raw="The replacement string.">La cadena de reemplazo.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinación bit a bit de los valores de enumeración que proporcionan opciones de coincidencia.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="replacement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> no es una combinación bit a bit válida de valores <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Cadena nueva que es idéntica a la cadena de entrada, salvo que la cadena de reemplazo ocupa el lugar de cada cadena coincidente. Si <paramref name="pattern" /> no coincide con la instancia actual, el método devuelve la instancia actual sin modificar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">En una cadena de entrada especificada, reemplaza todas las cadenas que coinciden con una expresión regular concreta por la cadena de reemplazo indicada. Los parámetros adicionales especifican las opciones que modifican la operación de coincidencia y un intervalo de tiempo de espera si no se encuentra ninguna coincidencia.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="replacement" vsli:raw="The replacement string.">La cadena de reemplazo.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinación bit a bit de los valores de enumeración que proporcionan opciones de coincidencia.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Un intervalo de tiempo de espera, o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que el método no debe agotar el tiempo de espera.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="replacement" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> no es una combinación bit a bit válida de valores <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
O bien 
 <paramref name="matchTimeout" /> es negativo, cero o mayor que 24 días aproximadamente.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Cadena nueva que es idéntica a la cadena de entrada, salvo que la cadena de reemplazo ocupa el lugar de cada cadena coincidente. Si <paramref name="pattern" /> no coincide con la instancia actual, el método devuelve la instancia actual sin modificar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">En una cadena de entrada especificada, reemplaza todas las cadenas que coinciden con una expresión regular especificada por una cadena devuelta por un delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Un método personalizado que examina cada coincidencia y devuelve la cadena coincidente original o una cadena de reemplazo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="evaluator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Cadena nueva que es idéntica a la cadena de entrada, salvo que una cadena de reemplazo ocupa el lugar de cada cadena coincidente. Si <paramref name="pattern" /> no coincide con la instancia actual, el método devuelve la instancia actual sin modificar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Specified options modify the matching operation.">En una cadena de entrada especificada, reemplaza todas las cadenas que coinciden con una expresión regular especificada por una cadena devuelta por un delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Las opciones especificadas modifican la operación de coincidencia.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Un método personalizado que examina cada coincidencia y devuelve la cadena coincidente original o una cadena de reemplazo.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinación bit a bit de los valores de enumeración que proporcionan opciones de coincidencia.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="evaluator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> no es una combinación bit a bit válida de valores <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Cadena nueva que es idéntica a la cadena de entrada, salvo que una cadena de reemplazo ocupa el lugar de cada cadena coincidente. Si <paramref name="pattern" /> no coincide con la instancia actual, el método devuelve la instancia actual sin modificar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">En una cadena de entrada especificada, reemplaza todas las subcadenas que coinciden con una expresión regular especificada por una cadena devuelta por un delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Los parámetros adicionales especifican las opciones que modifican la operación de coincidencia y un intervalo de tiempo de espera si no se encuentra ninguna coincidencia.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Un método personalizado que examina cada coincidencia y devuelve la cadena coincidente original o una cadena de reemplazo.</param>
      <param name="options" vsli:raw="A bitwise combination of enumeration values that provide options for matching.">Combinación bit a bit de los valores de la enumeración que proporcionan opciones de coincidencia.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Un intervalo de tiempo de espera, o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que el método no debe agotar el tiempo de espera.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="evaluator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> no es una combinación bit a bit válida de valores <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
O bien 
 <paramref name="matchTimeout" /> es negativo, cero o mayor que 24 días aproximadamente.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Cadena nueva que es idéntica a la cadena de entrada, salvo que la cadena de reemplazo ocupa el lugar de cada cadena coincidente. Si <paramref name="pattern" /> no coincide con la instancia actual, el método devuelve la instancia actual sin modificar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">En una cadena de entrada especificada, reemplaza todas las cadenas que coinciden con una expresión regular especificada por una cadena devuelta por un delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Un método personalizado que examina cada coincidencia y devuelve la cadena coincidente original o una cadena de reemplazo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="evaluator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Cadena nueva que es idéntica a la cadena de entrada, salvo que una cadena de reemplazo ocupa el lugar de cada cadena coincidente. Si no se encuentran coincidencias del patrón de expresión regular en la instancia actual, el método devuelve la instancia sin modificar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">En una cadena de entrada especificada, reemplaza un número máximo especificado de cadenas que coinciden con un modelo de expresión regular por una cadena devuelta por un delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Un método personalizado que examina cada coincidencia y devuelve la cadena coincidente original o una cadena de reemplazo.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">Número máximo de veces que se llevará a cabo el reemplazo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="evaluator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Cadena nueva que es idéntica a la cadena de entrada, salvo que una cadena de reemplazo ocupa el lugar de cada cadena coincidente. Si no se encuentran coincidencias del patrón de expresión regular en la instancia actual, el método devuelve la instancia sin modificar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">En una subcadena de entrada especificada, reemplaza un número máximo especificado de cadenas que coinciden con un modelo de expresión regular por una cadena devuelta por un delegado <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Cadena en la que se va a buscar una coincidencia.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Un método personalizado que examina cada coincidencia y devuelve la cadena coincidente original o una cadena de reemplazo.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">Número máximo de veces que se llevará a cabo el reemplazo.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">Posición del carácter en la cadena de entrada donde comienza la búsqueda.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="evaluator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> es menor que cero o mayor que la longitud de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Cadena nueva que es idéntica a la cadena de entrada, salvo que una cadena de reemplazo ocupa el lugar de cada cadena coincidente. Si no se encuentran coincidencias del patrón de expresión regular en la instancia actual, el método devuelve la instancia sin modificar.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Divide una cadena de entrada en una matriz de subcadenas en las posiciones definidas por un modelo de expresión regular especificado en el constructor <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to split.">La cadena que se va a dividir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="An array of strings.">Una matriz de cadenas.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Divide una cadena de entrada por un número máximo especificado de veces en una matriz de subcadenas, en las posiciones definidas por una expresión regular especificada en el constructor <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to be split.">Cadena que se va a dividir.</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">Número máximo de veces que puede llevarse a cabo la división.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="An array of strings.">Una matriz de cadenas.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor. The search for the regular expression pattern starts at a specified character position in the input string.">Divide una cadena de entrada por un número máximo especificado de veces en una matriz de subcadenas, en las posiciones definidas por una expresión regular especificada en el constructor <see cref="T:System.Text.RegularExpressions.Regex" />. La búsqueda del patrón de expresión regular se inicia en la posición de carácter especificada de la cadena de entrada.</summary>
      <param name="input" vsli:raw="The string to be split.">Cadena que se va a dividir.</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">Número máximo de veces que puede llevarse a cabo la división.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search will begin.">Posición de carácter de la cadena de entrada donde comenzará la búsqueda.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> es menor que cero o mayor que la longitud de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="An array of strings.">Una matriz de cadenas.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern.">Divide una cadena de entrada en una matriz de subcadenas en las posiciones definidas por un patrón de expresión regular.</summary>
      <param name="input" vsli:raw="The string to split.">La cadena que se va a dividir.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="An array of strings.">Una matriz de cadenas.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.">Divide una cadena de entrada en una matriz de subcadenas en las posiciones definidas por un patrón de expresión regular especificado. Las opciones especificadas modifican la operación de coincidencia.</summary>
      <param name="input" vsli:raw="The string to split.">La cadena que se va a dividir.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinación bit a bit de los valores de enumeración que proporcionan opciones de coincidencia.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> no es una combinación bit a bit válida de valores <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="An array of strings.">Una matriz de cadenas.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">Divide una cadena de entrada en una matriz de subcadenas en las posiciones definidas por un patrón de expresión regular especificado. Los parámetros adicionales especifican las opciones que modifican la operación de coincidencia y un intervalo de tiempo de espera si no se encuentra ninguna coincidencia.</summary>
      <param name="input" vsli:raw="The string to split.">La cadena que se va a dividir.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Patrón de expresión regular del que van a buscarse coincidencias.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinación bit a bit de los valores de enumeración que proporcionan opciones de coincidencia.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Un intervalo de tiempo de espera, o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> para indicar que el método no debe agotar el tiempo de espera.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Se produjo un error de análisis de expresión regular.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> o <paramref name="pattern" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> no es una combinación bit a bit válida de valores <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
O bien 
 <paramref name="matchTimeout" /> es negativo, cero o mayor que 24 días aproximadamente.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Se agotó el tiempo de espera. Para más información sobre los tiempos de espera, vea la sección Comentarios.</exception>
      <returns vsli:raw="A string array.">Matriz de cadenas.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data necessary to deserialize the current &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object.">Rellena un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para deserializar el objeto <see cref="T:System.Text.RegularExpressions.Regex" /> actual.</summary>
      <param name="si" vsli:raw="The object to populate with serialization information.">Objeto que se va a rellenar con información de serialización.</param>
      <param name="context" vsli:raw="The place to store and retrieve serialized data. This parameter is reserved for future use.">Sitio para almacenar y recuperar los datos serializados. Este parámetro se reserva para uso futuro.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary vsli:raw="Returns the regular expression pattern that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">Devuelve el modelo de expresión regular que se pasó al constructor <see langword="Regex" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;pattern&quot; /&gt; parameter that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">Parámetro <paramref name="pattern" /> que se pasó al constructor <see langword="Regex" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary vsli:raw="Converts any escaped characters in the input string.">Convierte los caracteres de escape de la cadena de entrada.</summary>
      <param name="str" vsli:raw="The input string containing the text to convert.">Cadena de entrada que contiene el texto que se desea convertir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; includes an unrecognized escape sequence.">
        <paramref name="str" /> incluye una secuencia de escape desconocida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A string of characters with any escaped characters converted to their unescaped form.">Cadena de caracteres con caracteres de escape convertidos a su forma sin escape.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la propiedad <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contiene la opción <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la propiedad <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contiene la opción <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)">
      <summary vsli:raw="Checks whether a time-out interval is within an acceptable range.">Comprueba si un intervalo de tiempo de espera está dentro del intervalo permitido.</summary>
      <param name="matchTimeout" vsli:raw="The time-out interval to check.">Intervalo de tiempo de espera que se va a comprobar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The specified time-out is not within a valid range.">El tiempo de espera especificado no está dentro del intervalo válido.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary vsli:raw="Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.">Obtiene o establece el número máximo de entradas en la memoria caché estática actual de expresiones regulares compiladas.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value in a set operation is less than zero.">El valor de una operación Set es menor que cero.</exception>
      <returns vsli:raw="The maximum number of entries in the static cache.">Número máximo de entradas en la memoria caché estática.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CapNames">
      <summary vsli:raw="Gets or sets a dictionary that maps named capturing groups to their index values.">Obtiene o establece un diccionario que asigna grupos de captura denominados con sus valores de índice.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.CapNames&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">El valor asignado a la propiedad <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> en una operación Set es <see langword="null" />.</exception>
      <returns vsli:raw="A dictionary that maps named capturing groups to their index values.">Diccionario que asigna grupos de captura denominados con sus valores de índice.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Caps">
      <summary vsli:raw="Gets or sets a dictionary that maps numbered capturing groups to their index values.">Obtiene o establece un diccionario que asigna grupos de captura numerados con sus valores de índice.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Caps&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">El valor asignado a la propiedad <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> en una operación Set es <see langword="null" />.</exception>
      <returns vsli:raw="A dictionary that maps numbered capturing groups to their index values.">Diccionario que asigna grupos de captura numerados con sus valores de índice.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval of the current instance.">Obtiene el intervalo de tiempo de espera de la instancia actual.</summary>
      <returns vsli:raw="The maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">Intervalo de tiempo máximo que puede transcurrir en una operación de coincidencia de modelos antes de que se produzca una <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> si se deshabilitan los tiempos de espera.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary vsli:raw="Gets the options that were passed into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Obtiene las opciones que se pasaron en el constructor <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns vsli:raw="One or more members of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; enumeration that represent options that were passed to the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Uno o más miembros de la enumeración <see cref="T:System.Text.RegularExpressions.RegexOptions" /> que representan opciones pasadas al constructor de <see cref="T:System.Text.RegularExpressions.Regex" /></returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary vsli:raw="Gets a value that indicates whether the regular expression searches from right to left.">Obtiene un valor que indica si la expresión regular busca de derecha a izquierda.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression searches from right to left; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la expresión regular busca de derecha a izquierda; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary vsli:raw="Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.">Proporciona información sobre una expresión regular que se usa para compilar una expresión regular en un ensamblado independiente.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression to be included in an assembly.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> que contiene información sobre una expresión regular que se va a incluir en un ensamblado.</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">Expresión regular que se va a compilar.</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">Opciones de la expresión regular que se van a usar al compilar la expresión regular.</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">Nombre del tipo que representa la expresión regular compilada.</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">Espacio de nombres al que pertenece el nuevo tipo.</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para hacer públicamente visible la expresión regular compilada; en caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> es <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> es <see langword="null" />.  
  
o bien 
 <paramref name="name" /> es <see langword="null" />.  
  
o bien 
 <paramref name="fullnamespace" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression with a specified time-out value to be included in an assembly.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> que contiene información sobre una expresión regular con un valor de tiempo de espera especificado que se va a incluir en un ensamblado.</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">Expresión regular que se va a compilar.</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">Opciones de la expresión regular que se van a usar al compilar la expresión regular.</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">Nombre del tipo que representa la expresión regular compilada.</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">Espacio de nombres al que pertenece el nuevo tipo.</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para hacer públicamente visible la expresión regular compilada; en caso contrario, <see langword="false" />.</param>
      <param name="matchTimeout" vsli:raw="The default time-out interval for the regular expression.">Intervalo de tiempo de espera predeterminado para la expresión regular.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> es <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> es <see langword="null" />.  
  
o bien 
 <paramref name="name" /> es <see langword="null" />.  
  
o bien 
 <paramref name="fullnamespace" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="matchTimeout" /> es negativo, cero o mayor que 24 días aproximadamente.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary vsli:raw="Gets or sets a value that indicates whether the compiled regular expression has public visibility.">Obtiene o establece un valor que indica si la expresión regular compilada tiene visibilidad pública.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression has public visibility; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la expresión regular tiene visibilidad pública; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
      <summary vsli:raw="Gets or sets the regular expression's default time-out interval.">Obtiene o establece el intervalo de tiempo de espera predeterminado de la expresión regular.</summary>
      <returns vsli:raw="The default maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">Intervalo de tiempo máximo predeterminado que puede transcurrir en una operación de coincidencia de modelos antes de que se produzca una <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> si se deshabilitan los tiempos de espera.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary vsli:raw="Gets or sets the name of the type that represents the compiled regular expression.">Obtiene o establece el nombre del tipo que representa la expresión regular compilada.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">El valor de esta propiedad es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for this property is an empty string.">El valor de esta propiedad es una cadena vacía.</exception>
      <returns vsli:raw="The name of the new type.">Nombre del nuevo tipo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary vsli:raw="Gets or sets the namespace to which the new type belongs.">Obtiene o establece el espacio de nombres al que pertenece el nuevo tipo.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">El valor de esta propiedad es <see langword="null" />.</exception>
      <returns vsli:raw="The namespace of the new type.">Espacio de nombres del nuevo tipo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary vsli:raw="Gets or sets the options to use when compiling the regular expression.">Obtiene o establece las opciones que se van a usar al compilar la expresión regular.</summary>
      <returns vsli:raw="A bitwise combination of the enumeration values.">Combinación bit a bit de los valores de la enumeración.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary vsli:raw="Gets or sets the regular expression to compile.">Obtiene o establece la expresión regular que se va a compilar.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">El valor de esta propiedad es <see langword="null" />.</exception>
      <returns vsli:raw="The regular expression to compile.">Expresión regular que se va a compilar.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary vsli:raw="The exception that is thrown when the execution time of a regular expression pattern-matching method exceeds its time-out interval.">Excepción que se produce cuando el tiempo de ejecución de un método de coincidencia de patrón de expresión regular supera su intervalo de tiempo de espera.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a system-supplied message.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con un mensaje proporcionado por el sistema.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that contains the serialized data.">Objeto que contiene los datos serializados.</param>
      <param name="context" vsli:raw="The stream that contains the serialized data.">Flujo que contiene los datos serializados.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with the specified message string.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con la cadena de mensaje especificada.</summary>
      <param name="message" vsli:raw="A string that describes the exception.">Cadena que describe la excepción.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="A string that describes the exception.">Cadena que describe la excepción.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">Excepción que es la causa de la excepción actual.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with information about the regular expression pattern, the input text, and the time-out interval.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con información sobre el modelo de expresión regular, el texto de entrada y el intervalo de tiempo de espera.</summary>
      <param name="regexInput" vsli:raw="The input text processed by the regular expression engine when the time-out occurred.">Texto de entrada procesado por el motor de expresiones regulares cuando se supera el tiempo de espera.</param>
      <param name="regexPattern" vsli:raw="The pattern used by the regular expression engine when the time-out occurred.">El modelo usado por el motor de expresiones regulares cuando se agota el tiempo de espera.</param>
      <param name="matchTimeout" vsli:raw="The time-out interval.">El intervalo de tiempo de espera.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data needed to serialize a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; object.">Rellena un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar un objeto <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />.</summary>
      <param name="info" vsli:raw="The serialization information object to populate with data.">El objeto de información de serialización que se va a rellenar con datos.</param>
      <param name="context" vsli:raw="The destination for this serialization.">Destino de esta serialización.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary vsli:raw="Gets the input text that the regular expression engine was processing when the time-out occurred.">Obtiene el texto de entrada que el motor de expresiones regulares estaba procesando cuando se agotó el tiempo de espera.</summary>
      <returns vsli:raw="The regular expression input text.">El texto de entrada de la expresión regular.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval for a regular expression match.">Obtiene el intervalo de tiempo de espera para una coincidencia de expresión regular.</summary>
      <returns vsli:raw="The time-out interval.">El intervalo de tiempo de espera.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary vsli:raw="Gets the regular expression pattern that was used in the matching operation when the time-out occurred.">Obtiene el modelo de expresión regular usado en la operación coincidente cuando se agotó el tiempo de espera.</summary>
      <returns vsli:raw="The regular expression pattern.">El modelo de expresión regular.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary vsli:raw="Provides enumerated values to use to set regular expression options.">Proporciona valores enumerados que se pueden utilizar para establecer las opciones de expresión regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary vsli:raw="Specifies that the regular expression is compiled to MSIL code, instead of being interpreted. Compiled regular expressions maximize run-time performance at the expense of initialization time. This value should not be assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexCompilationInfo.Options&quot; /&gt; property when calling the &lt;see cref=&quot;M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)&quot; /&gt; method. For more information, see the &quot;Compiled Regular Expressions&quot; section in the Regular Expression Options article.">Especifica que la expresión regular se compila en un ensamblado. Esto proporciona una ejecución más veloz pero incrementa el tiempo de inicio. Este valor no debe asignarse a la propiedad <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> al llamar al método <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />. Para obtener más información, vea la sección "expresiones regulares compiladas" en el artículo Opciones de expresiones regulares .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary vsli:raw="Specifies that cultural differences in language is ignored. For more information, see the &quot;Comparison Using the Invariant Culture&quot; section in the Regular Expression Options article.">Especifica que las diferencias culturales de idioma se pasan por alto. Para obtener más información, vea la sección "comparación con la referencia cultural de todos los idiomas" en el artículo Opciones de expresiones regulares .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary vsli:raw="&lt;para&gt;Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.IgnoreCase&quot; /&gt;, &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Multiline&quot; /&gt;, and &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; values. The use of this value with any other values results in an exception.&lt;/para&gt;&lt;para&gt;For more information on the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.ECMAScript&quot; /&gt; option, see the &quot;ECMAScript Matching Behavior&quot; section in the Regular Expression Options article.&lt;/para&gt;">Habilita el comportamiento conforme a ECMAScript para esta expresión. Este valor sólo se puede utilizar junto con los valores <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />, <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /> y <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />. El uso de este valor con otros valores dará como resultado una excepción.  
  
Para obtener más información sobre la <see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" /> opción, vea la sección sobre el comportamiento de coincidencia de ECMAScript en el artículo Opciones de expresiones regulares .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary vsli:raw="Specifies that the only valid captures are explicitly named or numbered groups of the form (?&amp;lt;name&amp;gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...). For more information, see the &quot;Explicit Captures Only&quot; section in the Regular Expression Options article.">Especifica que las únicas capturas válidas son grupos con nombre explícito o numerados con el formato (? &lt; nombre &gt; ...). Esto permite que los paréntesis sin nombre actúen como grupos sin captura sin la torpeza sintáctica de la expresión (?:...). Para obtener más información, vea la sección "solo capturas explícitas" en el artículo Opciones de expresiones regulares .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary vsli:raw="Specifies case-insensitive matching. For more information, see the &quot;Case-Insensitive Matching &quot; section in the Regular Expression Options article.">Especifica la coincidencia con distinción entre mayúsculas y minúsculas. Para obtener más información, vea la sección "coincidencia sin distinción entre mayúsculas y minúsculas" en el artículo Opciones de expresiones regulares .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary vsli:raw="Eliminates unescaped white space from the pattern and enables comments marked with #. However, this value does not affect or eliminate white space in character classes, numeric quantifiers, or tokens that mark the beginning of individual regular expression language elements. For more information, see the &quot;Ignore White Space&quot; section of the Regular Expression Options article.">Elimina el espacio en blanco sin escape del patrón y habilita los comentarios marcados con #. Sin embargo, este valor no afecta ni elimina el espacio en blanco en clases de caracteres, en cuantificadores numéricos ni en tokens que marquen el inicio de elementos de lenguaje de expresiones regulares individuales. Para más información, vea la sección "Ignorar el espacio en blanco" del artículo Opciones de expresiones regulares.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary vsli:raw="Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string. For more information, see the &quot;Multiline Mode&quot; section in the Regular Expression Options article.">Modo multilínea. Cambia el significado de ^ y $ de manera que coincidan al principio y al final, respectivamente, de cada línea y no justo al principio y al final de toda la cadena. Para obtener más información, vea la sección "modo multilínea" en el artículo Opciones de expresiones regulares .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary vsli:raw="Specifies that no options are set. For more information about the default behavior of the regular expression engine, see the &quot;Default Options&quot; section in the Regular Expression Options article.">Especifica que no hay opciones establecidas. Para obtener más información sobre el comportamiento predeterminado del motor de expresiones regulares, vea la sección "opciones predeterminadas" en el artículo Opciones de expresiones regulares .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary vsli:raw="Specifies that the search will be from right to left instead of from left to right. For more information, see the &quot;Right-to-Left Mode&quot; section in the Regular Expression Options article.">Especifica que la búsqueda será de derecha a izquierda en lugar de izquierda a derecha. Para obtener más información, vea la sección "modo de derecha a izquierda" en el artículo Opciones de expresiones regulares .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary vsli:raw="Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n). For more information, see the &quot;Single-line Mode&quot; section in the Regular Expression Options article.">Especifica el modo de una sola línea. Cambia el significado del punto (.) de manera que coincida con todos los caracteres (en lugar de hacerlo con todos los caracteres excepto con \n). Para obtener más información, vea la sección "modo de una sola línea" en el artículo Opciones de expresiones regulares .</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexParseError">
      <summary vsli:raw="Specifies the detailed underlying reason why a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexParseException&quot; /&gt; is thrown when a regular expression contains a parsing error.">Especifica el motivo subyacente detallado por el que se produce una excepción <see cref="T:System.Text.RegularExpressions.RegexParseException" /> cuando una expresión regular contiene un error de análisis.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasComment">
      <summary vsli:raw="An alternation construct in a regular expression contains a comment.">Una construcción de alternancia en una expresión regular contiene un comentario.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedCondition">
      <summary vsli:raw="An alternation in a regular expression has a malformed condition.">Una alternancia en una expresión regular tiene una condición con formato incorrecto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedReference">
      <summary vsli:raw="An alternation construct in a regular expression contains a malformed reference.">Una construcción de alternancia en una expresión regular contiene una referencia con formato incorrecto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasNamedCapture">
      <summary vsli:raw="An alternation construct in a regular expression uses a named capture.">Una construcción de alternancia en una expresión regular utiliza una captura con nombre.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasTooManyConditions">
      <summary vsli:raw="An alternation in a regular expression has too many conditions.">Una alternancia en una expresión regular tiene demasiadas condiciones.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasUndefinedReference">
      <summary vsli:raw="An alternation construct in a regular expression contains an undefined reference.">Una construcción de alternancia en una expresión regular contiene una referencia no definida.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupNameInvalid">
      <summary vsli:raw="The group name of a captured group in a regular expression is invalid.">El nombre de grupo de un grupo capturado en una expresión regular no es válido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupOfZero">
      <summary vsli:raw="A regular expression defines a numbered subexpression named zero.">Una expresión regular define una subexpresión numerada denominada cero.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ExclusionGroupNotLast">
      <summary vsli:raw="A character class in a regular expression with an exclusion group is not the last part of the character class.">Una clase de caracteres de una expresión regular con un grupo de exclusión no es la última parte de la clase de caracteres.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientClosingParentheses">
      <summary vsli:raw="A regular expression has a non-escaped left parenthesis, or misses a closing right parenthesis.">Una expresión regular tiene un paréntesis de apertura sin escape, o bien no tiene un paréntesis de cierre.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientOpeningParentheses">
      <summary vsli:raw="A regular expression has a non-escaped right parenthesis, or misses an opening left parenthesis.">Una expresión regular tiene un paréntesis de cierre sin escape, o bien se no tiene un paréntesis de apertura.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientOrInvalidHexDigits">
      <summary vsli:raw="A hexadecimal escape sequence in a regular expression does not have enough digits, or contains invalid digits.">Una secuencia de escape hexadecimal de una expresión regular no tiene suficientes dígitos o contiene dígitos no válidos.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InvalidGroupingConstruct">
      <summary vsli:raw="A grouping construct in a regular expression is invalid or malformed.">Una construcción de agrupación en una expresión regular no es válida o tiene un formato incorrecto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InvalidUnicodePropertyEscape">
      <summary vsli:raw="A Unicode property escape in a regular expression is invalid or unknown.">Un escape de propiedad Unicode en una expresión regular no es válido o no se conoce.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MalformedNamedReference">
      <summary vsli:raw="A named reference in a regular expression is malformed.">Una referencia con nombre en una expresión regular tiene un formato incorrecto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MalformedUnicodePropertyEscape">
      <summary vsli:raw="A Unicode property escape is malformed.">Un escape de propiedad Unicode tiene un formato incorrecto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MissingControlCharacter">
      <summary vsli:raw="A control character in a regular expression is missing.">Falta un carácter de control en una expresión regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.NestedQuantifiersNotParenthesized">
      <summary vsli:raw="Repeated quantifiers on another quantifier inside a regular expression are not grouped in parentheses.">Los cuantificadores repetidos en otro cuantificador dentro de una expresión regular no se agrupan entre paréntesis.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.QuantifierAfterNothing">
      <summary vsli:raw="A quantifier in a regular expression is in a position where it cannot quantify anything, like at the beginning of a regular expression or in a group.">Un cuantificador en una expresión regular está en una posición en la que no puede cuantificar nada, como al principio de una expresión regular o en un grupo.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.QuantifierOrCaptureGroupOutOfRange">
      <summary vsli:raw="A captured group or a quantifier in a regular expression is not within range, that is, it is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Un grupo capturado o un cuantificador en una expresión regular no se encuentra dentro del intervalo, es decir, es mayor que <see cref="F:System.Int32.MaxValue" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ReversedCharacterRange">
      <summary vsli:raw="A character class in a regular expression contains an inverse character range, like z-a instead of a-z.">Una clase de caracteres de una expresión regular contiene un intervalo de caracteres inverso, como z-a en lugar de a-z.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ReversedQuantifierRange">
      <summary vsli:raw="A quantifier range in a regular expression is inverse, like &lt;c&gt;{10,1}&lt;/c&gt; instead of &lt;c&gt;(1,10}&lt;/c&gt;.">Un intervalo de cuantificador de una expresión regular está invertido, como <code>{10,1}</code> en lugar de <code>(1,10}</code>.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ShorthandClassInCharacterRange">
      <summary vsli:raw="A character-class in a regular expression contains a short-hand class that is not allowed inside a character class.">Una clase de caracteres de una expresión regular contiene una clase abreviada que no está permitida dentro de una clase de caracteres.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UndefinedNamedReference">
      <summary vsli:raw="A used named reference in a regular expression is not defined.">No se ha definido una referencia con nombre utilizada en una expresión regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UndefinedNumberedReference">
      <summary vsli:raw="A used numbered reference in a regular expression is not defined.">No se ha definido una referencia numerada utilizada en una expresión regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnescapedEndingBackslash">
      <summary vsli:raw="A regular expression ends with a non-escaped ending backslash.">Una expresión regular termina con una barra diagonal inversa sin escape.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.Unknown">
      <summary vsli:raw="An unknown regular expression parse error.">Error desconocido de análisis de expresión regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedControlCharacter">
      <summary vsli:raw="A control character in a regular expression is not recognized.">No se reconoce un carácter de control en una expresión regular.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedEscape">
      <summary vsli:raw="An escape character or sequence in a regular expression is invalid.">Un carácter o una secuencia de escape en una expresión regular no son válidos.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedUnicodeProperty">
      <summary vsli:raw="A unicode property in a regular expression is not recognized, or invalid.">No se reconoce una propiedad Unicode en una expresión regular o no es válida.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnterminatedBracket">
      <summary vsli:raw="A regular expression has a non-escaped left square bracket, or misses a closing right square bracket.">Una expresión regular tiene un corchete de apertura sin escape o no tiene un corchete de cierre.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnterminatedComment">
      <summary vsli:raw="A comment in a regular expression is not terminated.">Un comentario en una expresión regular no tiene terminación.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexParseException">
      <summary vsli:raw="An exception as a result of a parse error in a regular expression, with detailed information in the &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexParseException.Error&quot; /&gt; and &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexParseException.Offset&quot; /&gt; properties.">Excepción como resultado de un error de análisis en una expresión regular, con información detallada en las propiedades <see cref="P:System.Text.RegularExpressions.RegexParseException.Error" /> y <see cref="P:System.Text.RegularExpressions.RegexParseException.Offset" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;paramref name=&quot;info&quot; /&gt; object with the parameter name and additional exception information.">Establece el objeto <paramref name="info" /> con el nombre del parámetro y la información adicional de la excepción.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexParseException.Error">
      <summary vsli:raw="Gets the error that happened during parsing.">Obtiene el error que se produjo durante el análisis.</summary>
      <returns vsli:raw="The error that occured during parsing.">Error que se produjo durante el análisis.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexParseException.Offset">
      <summary vsli:raw="Gets the zero-based character offset in the regular expression pattern where the parse error occurs.">Obtiene el desplazamiento de caracteres basado en cero en el patrón de expresión regular donde se produce el error de análisis.</summary>
      <returns vsli:raw="The offset at which the parse error occurs.">Desplazamiento en el que se produce el error de análisis.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class is the base class for compiled regular expressions.">La clase <see cref="T:System.Text.RegularExpressions.RegexRunner" /> es la clase base de las expresiones regulares compiladas.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.RegexRunner" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum" vsli:raw="A capture number.">Número de captura.</param>
      <param name="start" vsli:raw="The starting position of the capture.">Posición inicial de la captura.</param>
      <param name="end" vsli:raw="The ending position of the capture.">La posición final de la captura.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method. Determines whether a character is in a character class.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />. Determina si un carácter está en una clase de caracteres.</summary>
      <param name="ch" vsli:raw="A character to test.">Carácter que se va a probar.</param>
      <param name="charClass" vsli:raw="The internal name of a character class.">Nombre interno de una clase de caracteres.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;ch&quot; /&gt; parameter is in the character class specified by the &lt;paramref name=&quot;charClass&quot; /&gt; parameter.">
        <see langword="true" /> si el parámetro <paramref name="ch" /> está en la clase de caracteres especificada por el parámetro <paramref name="charClass" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="ch" vsli:raw="A character.">Un carácter.</param>
      <param name="set" vsli:raw="The character set.">El conjunto de caracteres.</param>
      <param name="category" vsli:raw="The character category.">La categoría de caracteres.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Devuelve <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CheckTimeout">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="i" vsli:raw="A number to save.">Número que se va a guardar.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Devuelve <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Devuelve <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index" vsli:raw="The possible boundary position.">Posición del límite posible.</param>
      <param name="startpos" vsli:raw="The starting position.">Posición inicial.</param>
      <param name="endpos" vsli:raw="The ending position.">Posición final.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Devuelve <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index" vsli:raw="The possible ECMA boundary position.">Posición del límite ECMA posible.</param>
      <param name="startpos" vsli:raw="The starting position.">Posición inicial.</param>
      <param name="endpos" vsli:raw="The ending position.">Posición final.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Devuelve <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">El número de captura.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Devuelve <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">El número de captura.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Devuelve <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">El número de captura.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Devuelve <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Devuelve <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">Instancia del motor de expresiones regulares.</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">Texto para buscar una coincidencia de patrones.</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">La posición inicial de base cero de <paramref name="text" /> en la que el motor de expresiones regulares buscará una coincidencia.</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">La posición final de base cero en <paramref name="text" /> en la que el motor de expresiones regulares buscará una coincidencia.</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">Posición inicial de base cero en la que se va a buscar esta coincidencia.</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">Número de caracteres de la coincidencia anterior.</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para buscar una coincidencia en el modo rápido; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="A match.">Una coincidencia.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">Instancia del motor de expresiones regulares.</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">Texto para buscar una coincidencia de patrones.</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">La posición inicial de base cero de <paramref name="text" /> en la que el motor de expresiones regulares buscará una coincidencia.</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">La posición final de base cero en <paramref name="text" /> en la que el motor de expresiones regulares buscará una coincidencia.</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">Posición inicial de base cero en la que se va a buscar esta coincidencia.</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">Número de caracteres de la coincidencia anterior.</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para buscar una coincidencia en el modo rápido; de lo contrario, <see langword="false" />.</param>
      <param name="timeout" vsli:raw="The timeout interval.">Intervalo de tiempo de espera.</param>
      <returns vsli:raw="A match.">Una coincidencia.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum" vsli:raw="A capture number.">Número de captura.</param>
      <param name="uncapnum" vsli:raw="A saved capture number.">Número de captura guardado.</param>
      <param name="start" vsli:raw="The starting position.">Posición inicial.</param>
      <param name="end" vsli:raw="The ending position.">Posición final.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">Lo usa un objeto <see cref="T:System.Text.RegularExpressions.Regex" /> generado por el método <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class for a compiled regular expression.">Crea una clase <see cref="T:System.Text.RegularExpressions.RegexRunner" /> para una expresión regular compilada.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunnerFactory&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary vsli:raw="When overridden in a derived class, creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object for a specific compiled regular expression.">Cuando se reemplaza en una clase derivada, crea un objeto <see cref="T:System.Text.RegularExpressions.RegexRunner" /> para una expresión regular compilada específica.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object designed to execute a specific compiled regular expression.">Objeto <see cref="T:System.Text.RegularExpressions.RegexRunner" /> diseñado para ejecutar una expresión regular compilada específica.</returns>
    </member>
  </members>
</doc>