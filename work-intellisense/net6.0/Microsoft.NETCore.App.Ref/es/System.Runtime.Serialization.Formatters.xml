<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Formatters</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Formatter">
      <summary>Proporciona funcionalidad básica para los formateadores de serialización de Common Language Runtime.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_idGenerator">
      <summary>Contiene <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> que se utiliza con el formateador actual.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_objectQueue">
      <summary>Contiene <see cref="T:System.Collections.Queue" /> de los objetos que quedan por serializar.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Formatter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
      <summary>Cuando se reemplaza en una clase derivada, deserializa la secuencia conectada al formateador cuando se creó, y crea un gráfico de objetos idéntico al gráfico serializado originalmente en esa secuencia.</summary>
      <param name="serializationStream">Secuencia que se va a deserializar.</param>
      <returns>El primer objeto del gráfico de objetos deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
      <summary>Devuelve el siguiente objeto que se va a serializar desde la cola de trabajo interna del formateador.</summary>
      <param name="objID">Identificador asignado al objeto actual durante la serialización.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">El siguiente objeto recuperado de la cola de trabajo no tenía un identificador asignado.</exception>
      <returns>Siguiente objeto que se va a serializar.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
      <summary>Programa un objeto para su posterior serialización.</summary>
      <param name="obj">Objeto que se debe programar para su serialización.</param>
      <returns>Identificador de objeto asignado al objeto.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Cuando se reemplaza en una clase derivada, serializa el gráfico de objetos con la raíz especificada para la secuencia ya conectada al formateador.</summary>
      <param name="serializationStream">Secuencia para la que se serializan los objetos.</param>
      <param name="graph">Objeto de la raíz del gráfico que se va a serializar.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
      <summary>Cuando se reemplaza en una clase derivada, escribe una matriz en la secuencia ya conectada al formateador.</summary>
      <param name="obj">Matriz que se va a escribir.</param>
      <param name="name">Nombre de la matriz.</param>
      <param name="memberType">Tipo de elementos que contiene la matriz.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un valor Boolean en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un entero de 8 bits sin signo en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un carácter Unicode en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un valor <see cref="T:System.DateTime" /> en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un valor <see cref="T:System.Decimal" /> en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un número de punto flotante de doble precisión en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un entero de 16 bits con signo en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un entero de 32 bits con signo en la secuencia.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un entero de 64 bits con signo en la secuencia.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
      <summary>Examina el tipo de datos recibidos y llama al método <see langword="Write" /> apropiado para realizar la escritura en la secuencia ya conectada al formateador.</summary>
      <param name="memberName">Nombre del miembro que se va a serializar.</param>
      <param name="data">Objeto que se va a escribir en la secuencia conectada al formateador.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
      <summary>Cuando se reemplaza en una clase derivada, escribe una referencia de objeto en la secuencia ya conectada al formateador.</summary>
      <param name="obj">Referencia de objeto que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
      <param name="memberType">Tipo de objeto al que señala la referencia.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un entero de 8 bits con signo en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un número de punto flotante de precisión sencilla en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un valor <see cref="T:System.TimeSpan" /> en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un entero de 16 bits sin signo en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un entero de 32 bits sin signo en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un entero de 64 bits sin signo en la secuencia ya conectada al formateador.</summary>
      <param name="val">Valor que se va a escribir.</param>
      <param name="name">Nombre del miembro.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
      <summary>Cuando se reemplaza en una clase derivada, escribe un valor del tipo dado en la secuencia ya conectada al formateador.</summary>
      <param name="obj">Objeto que representa el tipo de valor.</param>
      <param name="name">Nombre del miembro.</param>
      <param name="memberType">
        <see cref="T:System.Type" /> del tipo de valor.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Binder">
      <summary>Cuando se reemplaza en una clase derivada, obtiene o establece <see cref="T:System.Runtime.Serialization.SerializationBinder" /> que se utiliza con el formateador actual.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.SerializationBinder" /> que se utiliza con el formateador actual.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Context">
      <summary>Cuando se reemplaza en una clase derivada, obtiene o establece <see cref="T:System.Runtime.Serialization.StreamingContext" /> que se utiliza para la serialización actual.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que se utiliza para la serialización actual.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
      <summary>Cuando se reemplaza en una clase derivada, obtiene o establece <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> que se utiliza con el formateador actual.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> que se utiliza con el formateador actual.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterConverter">
      <summary>Representa una implementación básica de la interfaz <see cref="T:System.Runtime.Serialization.IFormatterConverter" /> que utiliza la clase <see cref="T:System.Convert" /> y la interfaz <see cref="T:System.IConvertible" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.FormatterConverter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.Type)">
      <summary>Convierte un valor en el <see cref="T:System.Type" /> dado.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <param name="type">
        <see cref="T:System.Type" /> al que se convierte <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.TypeCode)">
      <summary>Convierte un valor en el <see cref="T:System.TypeCode" /> dado.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <param name="typeCode">
        <see cref="T:System.TypeCode" /> al que se convierte <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToBoolean(System.Object)">
      <summary>Convierte un valor en <see cref="T:System.Boolean" />.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToByte(System.Object)">
      <summary>Convierte un valor en un entero de 8 bits sin signo.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToChar(System.Object)">
      <summary>Convierte un valor en un carácter Unicode.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDateTime(System.Object)">
      <summary>Convierte un valor en <see cref="T:System.DateTime" />.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDecimal(System.Object)">
      <summary>Convierte un valor en <see cref="T:System.Decimal" />.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDouble(System.Object)">
      <summary>Convierte un valor en un número de punto flotante de precisión doble.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt16(System.Object)">
      <summary>Convierte un valor en un entero de 16 bits con signo.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt32(System.Object)">
      <summary>Convierte un valor en un entero de 32 bits con signo.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt64(System.Object)">
      <summary>Convierte un valor en un entero de 64 bits con signo.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSByte(System.Object)">
      <summary>Convierte un valor en <see cref="T:System.SByte" />.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSingle(System.Object)">
      <summary>Convierte un valor en un número de punto flotante de precisión sencilla.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToString(System.Object)">
      <summary>Convierte el objeto especificado en un tipo de datos <see cref="T:System.String" />.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt16(System.Object)">
      <summary>Convierte un valor en un entero de 16 bits sin signo.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt32(System.Object)">
      <summary>Convierte un valor en un entero de 32 bits sin signo.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt64(System.Object)">
      <summary>Convierte un valor en un entero de 64 bits sin signo.</summary>
      <param name="value">Objeto que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>El valor <paramref name="value" /> convertido o <see langword="null" /> si el parámetro <paramref name="type" /> es <see langword="null" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
      <summary>Serializa y deserializa un objeto, o todo un grafo de objetos conectados, en formato binario.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> con valores predeterminados.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> con el selector suplente y el contexto de secuencia especificados.</summary>
      <param name="selector">Objeto <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> que se va a usar. Puede ser <see langword="null" />.</param>
      <param name="context">Origen y destino de los datos serializados.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)">
      <summary>Deserializa la secuencia especificada en un gráfico de objetos.</summary>
      <param name="serializationStream">Secuencia a partir de la que se va a deserializar el gráfico de objetos.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="serializationStream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="serializationStream" /> admite operaciones de búsqueda, pero su longitud es cero.  
  
O bien 
El flujo de entrada no representa una carga serializada <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> con un formato adecuado.
          
O bien 
Error al deserializar un objeto del flujo de entrada.
          
La propiedad <see langword="InnerException" /> puede contener más información sobre la causa principal.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <exception cref="T:System.NotSupportedException">ASP.NET 5.0 y versiones posteriores: siempre se produce a menos que se vuelva a habilitar la funcionalidad <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> en el archivo de proyecto. Para más información, consulte Resolución de errores de desactivación y deshabilitación de BinaryFormatter.</exception>
      <returns>Partes superior (raíz) del gráfico de objetos.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Serializa el objeto, o gráfico de objetos con el objeto superior (raíz) especificado, en la secuencia indicada.</summary>
      <param name="serializationStream">Secuencia en la que se va a serializar el gráfico.</param>
      <param name="graph">Objeto de la raíz del gráfico que se va a serializar.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="serializationStream" /> es <see langword="null" />.  
  
O bien 
El valor de <paramref name="graph" /> es null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Error durante la serialización, como sucede si un objeto del parámetro <paramref name="graph" /> no está marcado como serializable.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <exception cref="T:System.NotSupportedException">ASP.NET 5.0 y versiones posteriores: siempre se produce a menos que se vuelva a habilitar la funcionalidad <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> en el archivo de proyecto. Para más información, consulte Resolución de errores de desactivación y deshabilitación de BinaryFormatter.</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.AssemblyFormat">
      <summary>Obtiene o establece el comportamiento del deserializador en lo que respecta a buscar y cargar ensamblados.</summary>
      <returns>Uno de los valores de <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> que especifica el comportamiento del deserializador.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Binder">
      <summary>(No seguro) Obtiene o establece un objeto de tipo <see cref="T:System.Runtime.Serialization.SerializationBinder" /> que controla el enlace entre un objeto serializado a un tipo.</summary>
      <returns>Enlazador de serialización que se va a utilizar con este formateador.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context">
      <summary>Obtiene o establece <see cref="T:System.Runtime.Serialization.StreamingContext" /> para este formateador.</summary>
      <returns>Contexto de secuencia que se va a utilizar con este formateador.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.FilterLevel">
      <summary>Obtiene o establece el <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> de la deserialización automática que realiza <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</summary>
      <returns>El objeto <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> que representa el nivel actual de deserialización automática.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector">
      <summary>Obtiene o establece un <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> que controla la sustitución de tipos durante la serialización y la deserialización.</summary>
      <returns>Selector suplente que se va a utilizar con este formateador.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.TypeFormat">
      <summary>Obtiene o establece el formato en que se distribuyen las descripciones de tipos en la secuencia serializada.</summary>
      <returns>Estilo de la distribución de tipos que se va a utilizar.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle">
      <summary>Indica el método que se va a utilizar durante la deserialización para buscar y cargar los ensamblados.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full">
      <summary>En el modo completo, el ensamblado utilizado durante la deserialización debe coincidir exactamente con el ensamblado utilizado durante la serialización. El método <see cref="Overload:System.Reflection.Assembly.Load" /> de la clase <see cref="T:System.Reflection.Assembly" /> se utiliza para cargar el ensamblado.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple">
      <summary>En el modo simple, no es necesario que el ensamblado utilizado durante la deserialización coincida con el ensamblado utilizado durante la serialización. De forma específica, no es necesario que los números de versión coincidan con el método <see cref="Overload:System.Reflection.Assembly.LoadWithPartialName" /> que se utiliza para cargar el ensamblado.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle">
      <summary>Indica el formato de distribución de las descripciones de tipos en la secuencia serializada.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways">
      <summary>Indica que se pueden asignar tipos a todos los miembros de objetos y a todos los miembros de objetos de <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded">
      <summary>Indica que sólo pueden establecerse tipos para matrices de objetos, miembros de objetos de tipo <see cref="T:System.Object" /> y tipos de valor no primitivos de <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
      <summary>Indica que las cadenas pueden especificarse en formato XSD en lugar de SOAP. No se transmiten los identificadores de cadena.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.IFieldInfo">
      <summary>Permite el acceso a nombres de campo y tipos de campo de objetos que admiten la interfaz <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldNames">
      <summary>Obtiene o establece los nombres de campo de los objetos serializados.</summary>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>Nombres de campo de los objetos serializados.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldTypes">
      <summary>Obtiene o establece los tipos de campo de los objetos serializados.</summary>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>Tipos de campo de los objetos serializados.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.TypeFilterLevel">
      <summary>Especifica el nivel de deserialización automática para la comunicación remota de .NET Framework.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full">
      <summary>Nivel de deserialización Full para la comunicación remota de .NET Framework. Admite todos los tipos que la comunicación remota admite en todas las situaciones.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low">
      <summary>Nivel de deserialización Low para la comunicación remota de .NET Framework. Admite tipos asociados a la funcionalidad de comunicación remota básica.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterServices">
      <summary>Proporciona métodos estáticos para ayudar a la implementación de un objeto <see cref="T:System.Runtime.Serialization.Formatter" /> para la serialización. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
      <summary>Determina si el <see cref="T:System.Type" /> especificado se puede deserializar con la propiedad <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> establecida en <see langword="Low" />.</summary>
      <param name="t">
        <see cref="T:System.Type" /> del que se va a comprobar la capacidad para deserializar.</param>
      <param name="securityLevel">valor de propiedad <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />.</param>
      <exception cref="T:System.Security.SecurityException">El parámetro <paramref name="t" /> es un tipo avanzado y no se puede deserializar cuando la propiedad <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> está establecida en <see langword="Low" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
      <summary>Extrae los datos del objeto especificado y los devuelve como matriz de objetos.</summary>
      <param name="obj">Objeto que se va a escribir en el formateador.</param>
      <param name="members">Miembros que se van a extraer del objeto.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="obj" /> o <paramref name="members" /> es <see langword="null" />.  
  
Un elemento de <paramref name="members" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Un elemento de <paramref name="members" /> no representa un campo.</exception>
      <returns>Matriz de <see cref="T:System.Object" /> que contiene datos almacenados en <paramref name="members" /> y asociados a <paramref name="obj" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
      <summary>Crea una nueva instancia del tipo de objeto especificado.</summary>
      <param name="type">Tipo del objeto que se va a crear.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">El parámetro <paramref name="type" /> no es un tipo Common Language Runtime válido.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>Objeto del tipo especificado inicializado en cero.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
      <summary>Obtiene todos los miembros serializables para una clase del <see cref="T:System.Type" /> especificado.</summary>
      <param name="type">Tipo que se va a serializar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>Matriz de tipo <see cref="T:System.Reflection.MemberInfo" /> de miembros no transitorios y no estáticos.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary>Obtiene todos los miembros serializables para una clase del <see cref="T:System.Type" /> especificado y en el <see cref="T:System.Runtime.Serialization.StreamingContext" /> proporcionado.</summary>
      <param name="type">Tipo que se va a serializar o a clonar.</param>
      <param name="context">Contexto donde se produce la serialización.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>Matriz de tipo <see cref="T:System.Reflection.MemberInfo" /> de miembros no transitorios y no estáticos.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
      <summary>Devuelve un suplente de serialización para el <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />especificado.</summary>
      <param name="innerSurrogate">Suplente especificado.</param>
      <returns>Un objeto <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> para el <paramref name="innerSurrogate" /> especificado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
      <summary>Busca el <see cref="T:System.Type" /> del objeto especificado en el objeto <see cref="T:System.Reflection.Assembly" /> proporcionado.</summary>
      <param name="assem">Ensamblado donde se desea buscar el objeto.</param>
      <param name="name">El nombre del objeto.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="assem" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>
        <see cref="T:System.Type" /> del objeto con nombre.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
      <summary>Crea una nueva instancia del tipo de objeto especificado.</summary>
      <param name="type">Tipo del objeto que se va a crear.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>Objeto del tipo especificado inicializado en cero.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
      <summary>Rellena el objeto especificado con valores para cada campo dibujado a partir de la matriz de datos de objetos.</summary>
      <param name="obj">Objeto que se va a llenar.</param>
      <param name="members">Matriz de <see cref="T:System.Reflection.MemberInfo" /> que describe qué campos y propiedades se van a llenar.</param>
      <param name="data">Matriz de <see cref="T:System.Object" /> que especifica los valores de cada campo y propiedad que se va a llenar.</param>
      <exception cref="T:System.ArgumentNullException">El <paramref name="obj" />, <paramref name="members" /> o el parámetro <paramref name="data" /> es <see langword="null" />.  
  
Un elemento de <paramref name="members" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longitud de <paramref name="members" /> no coincide con la longitud de <paramref name="data" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Un elemento de <paramref name="members" /> no es una instancia de <see cref="T:System.Reflection.FieldInfo" />.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>Objeto que se acaba de llenar.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.IFormatter">
      <summary>Proporciona funcionalidad para aplicar formato a los objetos serializados.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)">
      <summary>Deserializa los datos de la secuencia suministrada y reconstituye el gráfico de objetos.</summary>
      <param name="serializationStream">Secuencia que contiene los datos que se van a deserializar.</param>
      <returns>El objeto superior del gráfico deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Serializa en la secuencia proporcionada un objeto o un gráfico de objetos con la secuencia dada.</summary>
      <param name="serializationStream">Secuencia en la que el formateador coloca los datos serializados. Esta secuencia puede hacer referencia a varias memorias auxiliares (como archivos, red, memoria, etc.).</param>
      <param name="graph">Objeto, o raíz del gráfico de objetos, que se va a serializar. Todos los objetos secundarios de este objeto raíz se serializan automáticamente.</param>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Binder">
      <summary>Obtiene o establece el objeto <see cref="T:System.Runtime.Serialization.SerializationBinder" /> que realiza las búsquedas de tipos durante la deserialización.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.SerializationBinder" /> que realiza las búsquedas de tipos durante la deserialización.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Context">
      <summary>Obtiene o establece el objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que se utiliza para la serialización y deserialización.</summary>
      <returns>Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que se utiliza para la serialización y deserialización.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.SurrogateSelector">
      <summary>Obtiene o establece el objeto <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> que utiliza el formateador actual.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> que utiliza este formateador.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ISerializationSurrogate">
      <summary>Implementa un selector de suplentes de serialización que permite que un objeto realice la serialización y deserialización de otro objeto.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Llena el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> proporcionado con los datos necesarios para serializar el objeto.</summary>
      <param name="obj">El objeto que se va a serializar.</param>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="context">Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización.</param>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Llena el objeto con la información de <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Objeto que se va a llenar.</param>
      <param name="info">Información con la que se llenará el objeto.</param>
      <param name="context">Origen desde donde se deserializa el objeto.</param>
      <param name="selector">Selector de suplentes donde se inicia la búsqueda de un suplente compatible.</param>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>Objeto deserializado que se ha llenado con información.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ISurrogateSelector">
      <summary>Indica una clase de selectores de suplentes de serialización.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Especifica el siguiente <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> que los suplentes deben examinar si la instancia actual no tiene un suplente para el tipo y el ensamblado especificados en el contexto especificado.</summary>
      <param name="selector">El siguiente selector de suplentes que se va a examinar.</param>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetNextSelector">
      <summary>Devuelve el siguiente selector de suplentes de la cadena.</summary>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>Siguiente selector de suplentes de la cadena o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>Encuentra el suplente que representa el tipo de objeto especificado, comenzando por el selector de suplentes definido para un contexto de serialización específico.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de objeto (clase) que necesita un suplente.</param>
      <param name="context">Contexto de origen o de destino para la serialización actual.</param>
      <param name="selector">El resultado que devuelve este método contiene un objeto <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> que incluye una referencia al selector de suplentes donde se encontró el suplente correcto. Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>Suplente correcto para un tipo dado en un contexto determinado.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectIDGenerator">
      <summary>Genera identificadores para los objetos.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)">
      <summary>Devuelve el identificador del objeto especificado, y genera un identificador nuevo si el objeto especificado todavía no ha sido identificado por <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />.</summary>
      <param name="obj">Objeto para el que se solicita un identificador.</param>
      <param name="firstTime">Es <see langword="true" /> si <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> no conocía previamente <paramref name="obj" />; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="obj" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Se ha solicitado a <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> que realice el seguimiento de un número de objetos demasiado grande.</exception>
      <returns>El identificador del objeto se utiliza para la serialización. <paramref name="firstTime" /> se establece en <see langword="true" /> si es la primera vez que se identifica el objeto; en caso contrario, se establece en <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)">
      <summary>Determina si ya se ha asignado un identificador a un objeto.</summary>
      <param name="obj">Objeto que se solicita.</param>
      <param name="firstTime">Es <see langword="true" /> si <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> no conocía previamente <paramref name="obj" />; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="obj" /> es <see langword="null" />.</exception>
      <returns>Identificador de objeto de <paramref name="obj" /> si <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> ya lo conocía; en caso contrario, es cero.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectManager">
      <summary>Realiza el seguimiento de los objetos a medida que se deserializan.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.ObjectManager" />.</summary>
      <param name="selector">Selector de suplentes que se va a utilizar. <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> determina el suplente que se debe utilizar al deserializar objetos de un tipo dado. En el momento de la deserialización, el selector de suplentes crea una nueva instancia del objeto a partir de la información transmitida en la secuencia.</param>
      <param name="context">Contexto de transmisión por secuencias. <see langword="ObjectManager" /> no utiliza <see cref="T:System.Runtime.Serialization.StreamingContext" />, sino que se pasa como parámetro a los objetos que implementan <see cref="T:System.Runtime.Serialization.ISerializable" /> o tienen <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. Estos objetos pueden realizar acciones específicas dependiendo del origen de la información que se va a deserializar.</param>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.DoFixups">
      <summary>Realiza todas las correcciones registradas.</summary>
      <exception cref="T:System.Runtime.Serialization.SerializationException">No se completó una corrección satisfactoriamente.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)">
      <summary>Devuelve el objeto que tiene el identificador de objeto especificado.</summary>
      <param name="objectID">Identificador del objeto solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="objectID" /> es menor o igual que cero.</exception>
      <returns>Objeto que tiene el identificador de objeto especificado, si se ha almacenado previamente, o <see langword="null" /> si no se ha registrado tal objeto.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent">
      <summary>Provoca el evento de deserialización para cualquier objeto registrado que implemente <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)">
      <summary>Invoca el método marcado con <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" />.</summary>
      <param name="obj">Instancia del tipo que contiene el método que se va a invocar.</param>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)">
      <summary>Registra una corrección para un elemento de una matriz.</summary>
      <param name="arrayToBeFixed">Identificador de la matriz que se utiliza para registrar una corrección.</param>
      <param name="index">Índice de <c>arrayFixup</c> para el que se solicita una corrección.</param>
      <param name="objectRequired">Identificador del objeto al que apuntará el elemento de matriz actual una vez completada la corrección.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="arrayToBeFixed" /> o <paramref name="objectRequired" /> es menor o igual que cero.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="index" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)">
      <summary>Registra correcciones para los elementos especificados de una matriz que se ejecutarán más adelante.</summary>
      <param name="arrayToBeFixed">Identificador de la matriz que se utiliza para registrar una corrección.</param>
      <param name="indices">Índices de la matriz multidimensional para los que se solicita una corrección.</param>
      <param name="objectRequired">Identificador del objeto al que apuntarán los elementos de la matriz una vez completada la corrección.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="arrayToBeFixed" /> o <paramref name="objectRequired" /> es menor o igual que cero.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="indices" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)">
      <summary>Registra una corrección para un miembro de objeto que se ejecutará más adelante.</summary>
      <param name="objectToBeFixed">Identificador del objeto que requiere la referencia a <paramref name="objectRequired" />.</param>
      <param name="memberName">Nombre de miembro de <paramref name="objectToBeFixed" /> donde se realizará la corrección.</param>
      <param name="objectRequired">Identificador del objeto requerido por <paramref name="objectToBeFixed" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="objectToBeFixed" /> o <paramref name="objectRequired" /> es menor o igual que cero.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="memberName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)">
      <summary>Registra una corrección para un miembro de un objeto que se ejecutará más adelante.</summary>
      <param name="objectToBeFixed">Identificador del objeto que requiere la referencia al objeto <paramref name="objectRequired" />.</param>
      <param name="member">Miembro de <paramref name="objectToBeFixed" /> donde se realizará la corrección.</param>
      <param name="objectRequired">Identificador del objeto requerido por <paramref name="objectToBeFixed" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="objectToBeFixed" /> o <paramref name="objectRequired" /> es menor o igual que cero.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="member" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)">
      <summary>Registra un objeto cuando se deserializa y lo asocia a <paramref name="objectID" />.</summary>
      <param name="obj">Objeto que se va a registrar.</param>
      <param name="objectID">Identificador del objeto que se va a registrar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="obj" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="objectID" /> es menor o igual que cero.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> ya se ha registrado para un objeto distinto de <paramref name="obj" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)">
      <summary>Registra un objeto cuando se deserializa, lo asocia a <paramref name="objectID" /> y registra el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se utilizó con el mismo.</summary>
      <param name="obj">Objeto que se va a registrar.</param>
      <param name="objectID">Identificador del objeto que se va a registrar.</param>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilizado si <paramref name="obj" /> implementa <see cref="T:System.Runtime.Serialization.ISerializable" /> o tiene un objeto <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> se completará con la información de corrección necesaria y, a continuación, se pasará al objeto requerido cuando ese objeto se complete.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="obj" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="objectID" /> es menor o igual que cero.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> ya se ha registrado para un objeto distinto de <paramref name="obj" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)">
      <summary>Registra un miembro de un objeto cuando se deserializa, lo asocia a <paramref name="objectID" /> y registra <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Objeto que se va a registrar.</param>
      <param name="objectID">Identificador del objeto que se va a registrar.</param>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilizado si <paramref name="obj" /> implementa <see cref="T:System.Runtime.Serialization.ISerializable" /> o tiene un objeto <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> se completará con la información de corrección necesaria y, a continuación, se pasará al objeto requerido cuando ese objeto se complete.</param>
      <param name="idOfContainingObj">Identificador del objeto que contiene <paramref name="obj" />. Este parámetro es obligatorio sólo si <paramref name="obj" /> es un tipo de valor.</param>
      <param name="member">Campo del objeto contenedor donde existe <paramref name="obj" />. Este parámetro tiene significado sólo si <paramref name="obj" /> es un tipo de valor.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="obj" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="objectID" /> es menor o igual que cero.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> ya se ha registrado para un objeto distinto de <paramref name="obj" />, o <paramref name="member" /> no es <see cref="T:System.Reflection.FieldInfo" /> y <paramref name="member" /> no es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])">
      <summary>Registra un miembro de una matriz incluida en un objeto mientras se deserializa, lo asocia a <paramref name="objectID" /> y registra <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="obj">Objeto que se va a registrar.</param>
      <param name="objectID">Identificador del objeto que se va a registrar.</param>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> utilizado si <paramref name="obj" /> implementa <see cref="T:System.Runtime.Serialization.ISerializable" /> o tiene un objeto <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />. <paramref name="info" /> se completará con la información de corrección necesaria y, a continuación, se pasará al objeto requerido cuando ese objeto se complete.</param>
      <param name="idOfContainingObj">Identificador del objeto que contiene <paramref name="obj" />. Este parámetro es obligatorio sólo si <paramref name="obj" /> es un tipo de valor.</param>
      <param name="member">Campo del objeto contenedor donde existe <paramref name="obj" />. Este parámetro tiene significado sólo si <paramref name="obj" /> es un tipo de valor.</param>
      <param name="arrayIndex">Si <paramref name="obj" /> es <see cref="T:System.ValueType" /> y miembro de una matriz, <paramref name="arrayIndex" /> contiene el índice de la matriz donde existe <paramref name="obj" />. <paramref name="arrayIndex" /> se pasa por alto si <paramref name="obj" /> no es a la vez <see cref="T:System.ValueType" /> y miembro de una matriz.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="obj" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="objectID" /> es menor o igual que cero.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> ya se ha registrado para un objeto distinto de <paramref name="obj" />, o <paramref name="member" /> no es <see cref="T:System.Reflection.FieldInfo" /> y <paramref name="member" /> no es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationBinder">
      <summary>Permite a los usuarios controlar la carga de clases y encargar qué clase se debe cargar.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.SerializationBinder" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
      <summary>Si se reemplaza en una clase derivada, controla el enlace de un objeto serializado a un tipo.</summary>
      <param name="serializedType">Tipo del objeto del que el formateador va a crear una nueva instancia.</param>
      <param name="assemblyName">Especifica el nombre de la clase <see cref="T:System.Reflection.Assembly" /> del objeto serializado.</param>
      <param name="typeName">Especifica el nombre de la clase <see cref="T:System.Type" /> del objeto serializado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
      <summary>Si se reemplaza en una clase derivada, controla el enlace de un objeto serializado a un tipo.</summary>
      <param name="assemblyName">Especifica el nombre de la clase <see cref="T:System.Reflection.Assembly" /> del objeto serializado.</param>
      <param name="typeName">Especifica el nombre de la clase <see cref="T:System.Type" /> del objeto serializado.</param>
      <returns>Tipo del objeto del que el formateador va a crear una nueva instancia.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationObjectManager">
      <summary>Administra en tiempo de ejecución los procesos de serialización. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.#ctor(System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.SerializationObjectManager" />.</summary>
      <param name="context">Instancia de la clase <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información sobre la operación de serialización actual.</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RaiseOnSerializedEvent">
      <summary>Invoca el evento de devolución de llamada OnSerializing si el tipo del objeto tiene este evento y registra el objeto para iniciar el evento OnSerialized si el tipo del objeto tiene este evento.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RegisterObject(System.Object)">
      <summary>Registra el objeto en el que se provocarán los eventos.</summary>
      <param name="obj">Objeto que se va a registrar.</param>
    </member>
    <member name="T:System.Runtime.Serialization.SurrogateSelector">
      <summary>Ayuda a los formateadores en la selección de los suplentes de serialización en los que se puede delegar el proceso de serialización o de deserialización.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.SurrogateSelector" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)">
      <summary>Agrega un suplente a la lista de suplentes comprobados.</summary>
      <param name="type">
        <see cref="T:System.Type" /> para el que se requiere el suplente.</param>
      <param name="context">Datos específicos del contexto.</param>
      <param name="surrogate">Suplente que se va a llamar para este tipo.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="type" /> o <paramref name="surrogate" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Ya existe un suplente para este tipo y contexto.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary>Agrega a la lista de suplentes el objeto <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> especificado que puede controlar un tipo de objeto concreto.</summary>
      <param name="selector">Selector de suplentes que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="selector" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">El selector ya existe en la lista de selectores.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetNextSelector">
      <summary>Devuelve el siguiente selector de la cadena de selectores.</summary>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>Siguiente <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> de la cadena de selectores.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>Devuelve el suplente de un tipo concreto.</summary>
      <param name="type">
        <see cref="T:System.Type" /> para el que se solicita el suplente.</param>
      <param name="context">Contexto de transmisión por secuencias.</param>
      <param name="selector">Suplente que se va a utilizar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
      <returns>Suplente de un tipo concreto.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary>Quita el suplente asociado a un tipo determinado.</summary>
      <param name="type">
        <see cref="T:System.Type" /> para el que se va a quitar el suplente.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> para el suplente actual.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
  </members>
</doc>