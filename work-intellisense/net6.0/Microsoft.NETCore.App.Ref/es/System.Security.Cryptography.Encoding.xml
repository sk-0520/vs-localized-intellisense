<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Encoding</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.AsnEncodedData">
      <summary>Representa datos codificados con Abstract Syntax Notation One (ASN.1).</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Byte[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.AsnEncodedData" /> utilizando una matriz de bytes.</summary>
      <param name="rawData">Matriz de bytes que contiene datos codificados mediante Notación de sintaxis abstracta uno (ASN.1, Abstract Syntax Notation One).</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Security.Cryptography.AsnEncodedData" /> a partir de datos codificados existentes.</summary>
      <param name="rawData">Datos con codificación ASN.1 (Abstract Syntax Notation One).</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.AsnEncodedData" /> utilizando una instancia de la clase <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</summary>
      <param name="asnEncodedData">Instancia de la clase <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.AsnEncodedData" /> utilizando un objeto <see cref="T:System.Security.Cryptography.Oid" /> y una matriz de bytes.</summary>
      <param name="oid">Un objeto <see cref="T:System.Security.Cryptography.Oid" />.</param>
      <param name="rawData">Matriz de bytes que contiene datos codificados mediante Notación de sintaxis abstracta uno (ASN.1, Abstract Syntax Notation One).</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.Oid,System.ReadOnlySpan{System.Byte})">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Security.Cryptography.AsnEncodedData" /> a partir de un identificador de objeto (OID) y de los datos codificados existentes.</summary>
      <param name="oid">Identificador de objeto del atributo.</param>
      <param name="rawData">Datos con codificación ASN.1 (Abstract Syntax Notation One).</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.String,System.Byte[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.AsnEncodedData" /> utilizando una matriz de bytes.</summary>
      <param name="oid">Cadena que representa la información de <see cref="T:System.Security.Cryptography.Oid" />.</param>
      <param name="rawData">Matriz de bytes que contiene datos codificados mediante Notación de sintaxis abstracta uno (ASN.1, Abstract Syntax Notation One).</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.String,System.ReadOnlySpan{System.Byte})">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Security.Cryptography.AsnEncodedData" /> a partir de un identificador de objeto (OID) y de los datos codificados existentes.</summary>
      <param name="oid">Identificador de objeto del atributo.</param>
      <param name="rawData">Datos con codificación ASN.1 (Abstract Syntax Notation One).</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copia información de un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</summary>
      <param name="asnEncodedData">Objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> en el que se va a basar el nuevo objeto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.Format(System.Boolean)">
      <summary>Devuelve una versión con formato de los datos codificados mediante Notación de sintaxis abstracta uno (ASN.1, Abstract Syntax Notation One) como una cadena.</summary>
      <param name="multiLine">Es <see langword="true" /> si la cadena de retorno debe contener los retornos de carro; de lo contrario, es <see langword="false" />.</param>
      <returns>Cadena con formato que representa los datos codificados mediante Notación de sintaxis abstracta uno (ASN.1, Abstract Syntax Notation One).</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedData.Oid">
      <summary>Obtiene o establece el valor <see cref="T:System.Security.Cryptography.Oid" /> de un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</summary>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.Oid" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedData.RawData">
      <summary>Obtiene o establece los datos codificados mediante Notación de sintaxis abstracta uno (ASN.1, Abstract Syntax Notation One) que están representados en una matriz de bytes.</summary>
      <exception cref="T:System.ArgumentNullException">El valor es <see langword="null" />.</exception>
      <returns>Matriz de bytes que representa los datos codificados mediante Notación de sintaxis abstracta uno (ASN.1, Abstract Syntax Notation One).</returns>
    </member>
    <member name="T:System.Security.Cryptography.AsnEncodedDataCollection">
      <summary>Representa una colección de objetos <see cref="T:System.Security.Cryptography.AsnEncodedData" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> y agrega un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> a la colección.</summary>
      <param name="asnEncodedData">Objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary>Agrega un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> al objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</summary>
      <param name="asnEncodedData">Objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> que se va a agregar a la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Ninguno de los identificadores de objetos (OID) es <see langword="null" /> y éstos no coinciden.

o bien

Uno de los identificadores de objetos (OID) es <see langword="null" /> y éstos no coinciden.</exception>
      <returns>Índice del objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> agregado.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.CopyTo(System.Security.Cryptography.AsnEncodedData[],System.Int32)">
      <summary>Copia el objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> en una matriz.</summary>
      <param name="array">Matriz en la que se va a copiar el objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</param>
      <param name="index">Ubicación donde se inicia la operación de copia.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.GetEnumerator">
      <summary>Devuelve un objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> que se puede usar para navegar por el objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.Remove(System.Security.Cryptography.AsnEncodedData)">
      <summary>Quita un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> de <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</summary>
      <param name="asnEncodedData">Objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> que se quita.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia el objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> en una matriz.</summary>
      <param name="array">Matriz en la que se va a copiar el objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</param>
      <param name="index">Ubicación donde se inicia la operación de copia.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es un matriz multidimensional, que no es compatible con este método.

o bien 
La longitud de <paramref name="index" /> no es válida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longitud de <paramref name="index" /> está fuera del intervalo.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> que se puede usar para navegar por el objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> que se puede usar para navegar por la colección.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.Count">
      <summary>Obtiene el número de objetos <see cref="T:System.Security.Cryptography.AsnEncodedData" /> de una colección.</summary>
      <returns>Número de objetos <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso al objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> es seguro para subprocesos.</summary>
      <returns>
        <see langword="false" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.Item(System.Int32)">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> a partir del objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</summary>
      <param name="index">La ubicación en la colección.</param>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.SyncRoot">
      <summary>Obtiene un objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</summary>
      <returns>Objeto utilizado para sincronizar el acceso al objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.AsnEncodedDataEnumerator">
      <summary>Proporciona la capacidad de navegar por un objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataEnumerator.MoveNext">
      <summary>Avanza al siguiente objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> de un objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</summary>
      <exception cref="T:System.InvalidOperationException">La colección se modificó después de que el enumerador se creara.</exception>
      <returns>Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador alcanzó el final de la colección.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataEnumerator.Reset">
      <summary>Establece un enumerador en su posición inicial.</summary>
      <exception cref="T:System.InvalidOperationException">La colección se modificó después de que el enumerador se creara.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataEnumerator.Current">
      <summary>Obtiene el objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> actual de un objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</summary>
      <returns>El objeto actual <see cref="T:System.Security.Cryptography.AsnEncodedData" /> en la colección.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>Obtiene el objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> actual de un objeto <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> actual.</returns>
    </member>
    <member name="T:System.Security.Cryptography.FromBase64Transform">
      <summary>Convierte un <see cref="T:System.Security.Cryptography.CryptoStream" /> desde la base 64.</summary>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.FromBase64Transform" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.FromBase64Transform" /> con el modo de transformación especificado.</summary>
      <param name="whitespaces">Uno de los valores de <see cref="T:System.Security.Cryptography.FromBase64Transform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.Clear">
      <summary>Libera todos los recursos que usa <see cref="T:System.Security.Cryptography.FromBase64Transform" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.Dispose">
      <summary>Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Security.Cryptography.FromBase64Transform" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Security.Cryptography.FromBase64Transform" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.Finalize">
      <summary>Libera los recursos no administrados que <see cref="T:System.Security.Cryptography.FromBase64Transform" /> usa.</summary>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>Convierte la región especificada de la matriz de bytes de entrada desde base 64 y copia el resultado en la región especificada de la matriz de bytes de salida.</summary>
      <param name="inputBuffer">Entrada para calcular desde la base 64.</param>
      <param name="inputOffset">Desplazamiento en la matriz de bytes de entrada a partir del cual se van a empezar a usar los datos.</param>
      <param name="inputCount">Número de bytes de la matriz de bytes de entrada que se van a usar como datos.</param>
      <param name="outputBuffer">Salida en la que se escribe el resultado.</param>
      <param name="outputOffset">Desplazamiento en la matriz de bytes de salida a partir del cual se van a empezar a escribir los datos.</param>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Security.Cryptography.FromBase64Transform" /> actual ya se ha desechado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputCount" /> utiliza un valor no válido.  
  
o bien 
 <paramref name="inputBuffer" /> tiene una longitud de desplazamiento no válida.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inputOffset" /> está fuera del intervalo. Este parámetro requiere un número no negativo.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputBuffer" /> es <see langword="null" />.</exception>
      <returns>Número de bytes escritos.</returns>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
      <summary>Convierte la región especificada de la matriz de bytes indicada desde la base 64.</summary>
      <param name="inputBuffer">Entrada para convertir desde la base 64.</param>
      <param name="inputOffset">Desplazamiento en la matriz de bytes a partir del cual se empezarán a usar los datos.</param>
      <param name="inputCount">Número de bytes de la matriz de bytes que se van a utilizar como datos.</param>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Security.Cryptography.FromBase64Transform" /> actual ya se ha desechado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputBuffer" /> tiene una longitud de desplazamiento no válida.  
  
o bien 
 <paramref name="inputCount" /> tiene un valor no válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inputOffset" /> está fuera del intervalo. Este parámetro requiere un número no negativo.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputBuffer" /> es <see langword="null" />.</exception>
      <returns>Conversión calculada.</returns>
    </member>
    <member name="P:System.Security.Cryptography.FromBase64Transform.CanReuseTransform">
      <summary>Obtiene un valor que indica si la transformación actual puede volver a usarse.</summary>
      <returns>Siempre es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks">
      <summary>Obtiene un valor que indica si se pueden transformar varios bloques.</summary>
      <returns>Siempre es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.FromBase64Transform.InputBlockSize">
      <summary>Obtiene el tamaño del bloque de entrada.</summary>
      <returns>Tamaño de los bloques de datos de entrada en bytes.</returns>
    </member>
    <member name="P:System.Security.Cryptography.FromBase64Transform.OutputBlockSize">
      <summary>Obtiene el tamaño del bloque de salida.</summary>
      <returns>Tamaño de los bloques de datos de salida en bytes.</returns>
    </member>
    <member name="T:System.Security.Cryptography.FromBase64TransformMode">
      <summary>Especifica si el espacio en blanco debe pasarse por alto en la transformación de base 64.</summary>
    </member>
    <member name="F:System.Security.Cryptography.FromBase64TransformMode.DoNotIgnoreWhiteSpaces">
      <summary>El espacio en blanco no debe pasarse por alto.</summary>
    </member>
    <member name="F:System.Security.Cryptography.FromBase64TransformMode.IgnoreWhiteSpaces">
      <summary>El espacio en blanco debe pasarse por alto.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Oid">
      <summary>Representa un identificador de objeto criptográfico. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Oid" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Oid" /> utilizando el objeto <see cref="T:System.Security.Cryptography.Oid" /> especificado.</summary>
      <param name="oid">Información del identificador de objeto que se va a utilizar para crear el nuevo identificador de objeto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oid" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Oid" /> utilizando un valor de cadena de un objeto <see cref="T:System.Security.Cryptography.Oid" />.</summary>
      <param name="oid">Identificador de objeto.</param>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Oid" /> con el nombre descriptivo y el valor especificados.</summary>
      <param name="value">El número con punto del identificador.</param>
      <param name="friendlyName">Nombre descriptivo del identificador.</param>
    </member>
    <member name="M:System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)">
      <summary>Crea un objeto <see cref="T:System.Security.Cryptography.Oid" /> a partir del nombre descriptivo de OID buscando en el grupo especificado.</summary>
      <param name="friendlyName">Nombre descriptivo del identificador.</param>
      <param name="group">Grupo en el que se va a buscar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="friendlyName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se encontró el OID.</exception>
      <returns>Objeto que representa el OID especificado.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)">
      <summary>Crea un objeto <see cref="T:System.Security.Cryptography.Oid" /> utilizando el grupo y el valor de OID especificados.</summary>
      <param name="oidValue">Valor OID.</param>
      <param name="group">Grupo en el que se va a buscar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oidValue" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El nombre descriptivo para el valor de OID no se encontró.</exception>
      <returns>Nueva instancia de un objeto <see cref="T:System.Security.Cryptography.Oid" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Oid.FriendlyName">
      <summary>Obtiene o establece el nombre descriptivo del identificador.</summary>
      <exception cref="T:System.PlatformNotSupportedException">.NET 5.0 y versiones posteriores: se realiza un intento de establecer el valor y este se ha establecido previamente.</exception>
      <returns>Nombre descriptivo del identificador.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Oid.Value">
      <summary>Obtiene o establece el número separado por puntos del identificador.</summary>
      <exception cref="T:System.PlatformNotSupportedException">.NET 5.0 y versiones posteriores: se realiza un intento de establecer el valor y este se ha establecido previamente.</exception>
      <returns>El número con punto del identificador.</returns>
    </member>
    <member name="T:System.Security.Cryptography.OidCollection">
      <summary>Representa una colección de objetos <see cref="T:System.Security.Cryptography.Oid" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.OidCollection" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.Add(System.Security.Cryptography.Oid)">
      <summary>Agrega un objeto <see cref="T:System.Security.Cryptography.Oid" /> al objeto <see cref="T:System.Security.Cryptography.OidCollection" />.</summary>
      <param name="oid">Objeto <see cref="T:System.Security.Cryptography.Oid" /> que se va a agregar a la colección.</param>
      <returns>Índice del objeto <see cref="T:System.Security.Cryptography.Oid" /> agregado.</returns>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.CopyTo(System.Security.Cryptography.Oid[],System.Int32)">
      <summary>Copia el objeto <see cref="T:System.Security.Cryptography.OidCollection" /> en una matriz.</summary>
      <param name="array">Matriz en la que se va a copiar el objeto <see cref="T:System.Security.Cryptography.OidCollection" />.</param>
      <param name="index">Ubicación donde se inicia la operación de copia.</param>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.GetEnumerator">
      <summary>Devuelve un objeto <see cref="T:System.Security.Cryptography.OidEnumerator" /> que se puede usar para navegar por el objeto <see cref="T:System.Security.Cryptography.OidCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.OidEnumerator" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia el objeto <see cref="T:System.Security.Cryptography.OidCollection" /> en una matriz.</summary>
      <param name="array">Matriz a la que se va a copiar el objeto <see cref="T:System.Security.Cryptography.OidCollection" />.</param>
      <param name="index">Ubicación donde se inicia la operación de copia.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> no puede ser una matriz multidimensional.  
  
o bien 
La longitud de <paramref name="array" /> es una longitud de desplazamiento no válida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> está fuera del intervalo.</exception>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un objeto <see cref="T:System.Security.Cryptography.OidEnumerator" /> que se puede usar para navegar por el objeto <see cref="T:System.Security.Cryptography.OidCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.OidEnumerator" /> que se puede usar para navegar por la colección.</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.Count">
      <summary>Obtiene el número de objetos <see cref="T:System.Security.Cryptography.Oid" /> de una colección.</summary>
      <returns>Número de objetos <see cref="T:System.Security.Cryptography.Oid" /> de una colección.</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso al objeto <see cref="T:System.Security.Cryptography.OidCollection" /> es seguro para subprocesos.</summary>
      <returns>
        <see langword="false" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.Item(System.Int32)">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.Oid" /> a partir del objeto <see cref="T:System.Security.Cryptography.OidCollection" />.</summary>
      <param name="index">La ubicación del objeto <see cref="T:System.Security.Cryptography.Oid" /> en la colección.</param>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.Oid" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.Item(System.String)">
      <summary>Obtiene el primer objeto <see cref="T:System.Security.Cryptography.Oid" /> que contiene un valor de la propiedad <see cref="P:System.Security.Cryptography.Oid.Value" /> o un valor de la propiedad <see cref="P:System.Security.Cryptography.Oid.FriendlyName" /> que coincide con el valor de cadena especificado del objeto <see cref="T:System.Security.Cryptography.OidCollection" />.</summary>
      <param name="oid">Cadena que representa una propiedad <see cref="P:System.Security.Cryptography.Oid.Value" /> o una propiedad <see cref="P:System.Security.Cryptography.Oid.FriendlyName" />.</param>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.Oid" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.SyncRoot">
      <summary>Obtiene un objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:System.Security.Cryptography.OidCollection" />.</summary>
      <returns>Objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:System.Security.Cryptography.OidCollection" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.OidEnumerator">
      <summary>Proporciona la capacidad de navegar por un objeto <see cref="T:System.Security.Cryptography.OidCollection" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.OidEnumerator.MoveNext">
      <summary>Avanza al siguiente objeto <see cref="T:System.Security.Cryptography.Oid" /> de un objeto <see cref="T:System.Security.Cryptography.OidCollection" />.</summary>
      <exception cref="T:System.InvalidOperationException">La colección se modificó después de que el enumerador se creara.</exception>
      <returns>Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador alcanzó el final de la colección.</returns>
    </member>
    <member name="M:System.Security.Cryptography.OidEnumerator.Reset">
      <summary>Establece un enumerador en su posición inicial.</summary>
      <exception cref="T:System.InvalidOperationException">La colección se modificó después de que el enumerador se creara.</exception>
    </member>
    <member name="P:System.Security.Cryptography.OidEnumerator.Current">
      <summary>Obtiene el objeto <see cref="T:System.Security.Cryptography.Oid" /> actual de un objeto <see cref="T:System.Security.Cryptography.OidCollection" />.</summary>
      <returns>El objeto actual <see cref="T:System.Security.Cryptography.Oid" /> en la colección.</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current">
      <summary>Obtiene el objeto <see cref="T:System.Security.Cryptography.Oid" /> actual de un objeto <see cref="T:System.Security.Cryptography.OidCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Oid" /> actual.</returns>
    </member>
    <member name="T:System.Security.Cryptography.OidGroup">
      <summary>Identifica los grupos de identificadores de objetos (OID) criptográficos de Windows.</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.All">
      <summary>Todos los grupos.</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.Attribute">
      <summary>El grupo de Windows que se representa mediante CRYPT_RDN_ATTR_OID_GROUP_ID.</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.EncryptionAlgorithm">
      <summary>El grupo de Windows que se representa mediante CRYPT_ENCRYPT_ALG_OID_GROUP_ID.</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.EnhancedKeyUsage">
      <summary>El grupo de Windows que se representa mediante CRYPT_ENHKEY_USAGE_OID_GROUP_ID.</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.ExtensionOrAttribute">
      <summary>El grupo de Windows que se representa mediante CRYPT_EXT_OR_ATTR_OID_GROUP_ID.</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.HashAlgorithm">
      <summary>El grupo de Windows que se representa mediante CRYPT_HASH_ALG_OID_GROUP_ID.</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.KeyDerivationFunction">
      <summary>El grupo de Windows que se representa mediante CRYPT_KDF_OID_GROUP_ID.</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.Policy">
      <summary>El grupo de Windows que se representa mediante CRYPT_POLICY_OID_GROUP_ID.</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.PublicKeyAlgorithm">
      <summary>El grupo de Windows que se representa mediante CRYPT_PUBKEY_ALG_OID_GROUP_ID.</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.SignatureAlgorithm">
      <summary>El grupo de Windows que se representa mediante CRYPT_SIGN_ALG_OID_GROUP_ID.</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.Template">
      <summary>El grupo de Windows que se representa mediante CRYPT_TEMPLATE_OID_GROUP_ID.</summary>
    </member>
    <member name="T:System.Security.Cryptography.PemEncoding">
      <summary>Proporciona métodos para leer y escribir el subconjunto IETF RFC 7468 de las codificaciones de texto PEM (correo con privacidad mejorada).
Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.PemEncoding.Find(System.ReadOnlySpan{System.Char})">
      <summary>Busca los primeros datos con codificación PEM.</summary>
      <param name="pemData">Texto que contiene los datos con codificación PEM.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pemData" /> no contiene un valor con codificación PEM correcto.</exception>
      <returns>Un valor que especifica la ubicación, la etiqueta y la ubicación de datos de los datos codificados.</returns>
    </member>
    <member name="M:System.Security.Cryptography.PemEncoding.GetEncodedSize(System.Int32,System.Int32)">
      <summary>Determina la longitud de un valor con codificación PEM, en caracteres, dada la longitud de una etiqueta y datos binarios.</summary>
      <param name="labelLength">La longitud de la etiqueta, en caracteres.</param>
      <param name="dataLength">La longitud de los datos, en bytes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="labelLength" /> es un valor negativo.

o bien

<paramref name="dataLength" /> es un valor negativo.

o bien

<paramref name="labelLength" /> supera la longitud máxima posible de la etiqueta.

o bien

<paramref name="dataLength" /> supera la longitud máxima posible de los datos codificados.</exception>
      <exception cref="T:System.ArgumentException">La longitud del valor con codificación PEM es mayor que <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns>El número de caracteres del PEM codificado.</returns>
    </member>
    <member name="M:System.Security.Cryptography.PemEncoding.TryFind(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PemFields@)">
      <summary>Intenta buscar los primeros datos con codificación PEM.</summary>
      <param name="pemData">Texto que contiene los datos con codificación PEM.</param>
      <param name="fields">Cuando este método vuelve, contiene un valor que especifica la ubicación, la etiqueta y la ubicación de datos de los datos codificados; o bien, si no se encuentra ningún dato con codificación PEM, un valor que especifica esas ubicaciones como vacías.

          Este parámetro se trata como sin inicializar.</param>
      <returns>
        <see langword="true" /> Si se encontraron datos con codificación PEM; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.PemEncoding.TryWrite(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@)">
      <summary>Intenta escribir los datos y la etiqueta proporcionados como datos con codificación PEM en un búfer proporcionado.</summary>
      <param name="label">La etiqueta que se va a escribir.</param>
      <param name="data">Datos que se van a escribir.</param>
      <param name="destination">El búfer en el que se va a recibir el texto con codificación PEM.</param>
      <param name="charsWritten">Cuando este método vuelve, este parámetro contiene el número de caracteres escritos en <paramref name="destination" />. Este parámetro se trata como sin inicializar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="label" /> supera la longitud máxima posible de la etiqueta.

o bien

<paramref name="data" /> supera la longitud máxima posible de los datos codificados.</exception>
      <exception cref="T:System.ArgumentException">El texto con codificación PEM resultante es mayor que <see cref="F:System.Int32.MaxValue" />.

o bien

<paramref name="label" /> contiene caracteres no válidos.</exception>
      <returns>
        <see langword="true" /> si <paramref name="destination" /> es lo suficientemente grande como para contener el texto con codificación PEM; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.PemEncoding.Write(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <summary>Crea un PEM codificado con la etiqueta y los datos dados.</summary>
      <param name="label">La etiqueta que se va a codificar.</param>
      <param name="data">Los datos que se van a codificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="label" /> supera la longitud máxima posible de la etiqueta.

o bien

<paramref name="data" /> supera la longitud máxima posible de los datos codificados.</exception>
      <exception cref="T:System.ArgumentException">El texto con codificación PEM resultante es mayor que <see cref="F:System.Int32.MaxValue" />.

o bien

<paramref name="label" /> contiene caracteres no válidos.</exception>
      <returns>Una matriz de caracteres del PEM codificado.</returns>
    </member>
    <member name="T:System.Security.Cryptography.PemFields">
      <summary>Contiene información sobre la ubicación de los datos PEM.</summary>
    </member>
    <member name="P:System.Security.Cryptography.PemFields.Base64Data">
      <summary>Obtiene la ubicación de los datos en base 64 dentro de PEM.</summary>
    </member>
    <member name="P:System.Security.Cryptography.PemFields.DecodedDataLength">
      <summary>Obtiene el tamaño de los datos en base 64 descodificados, en bytes.</summary>
    </member>
    <member name="P:System.Security.Cryptography.PemFields.Label">
      <summary>Obtiene la ubicación de la etiqueta.</summary>
    </member>
    <member name="P:System.Security.Cryptography.PemFields.Location">
      <summary>Obtiene la ubicación del texto con codificación PEM, incluidos los límites de encapsulación circundantes.</summary>
    </member>
    <member name="T:System.Security.Cryptography.ToBase64Transform">
      <summary>Convierte <see cref="T:System.Security.Cryptography.CryptoStream" /> a base 64.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.Clear">
      <summary>Libera todos los recursos que usa <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.Dispose">
      <summary>Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Security.Cryptography.ToBase64Transform" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.Finalize">
      <summary>Libera los recursos no administrados que <see cref="T:System.Security.Cryptography.ToBase64Transform" /> usa.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>Convierte la región especificada de la matriz de bytes de entrada a base 64 y copia el resultado en la región especificada de la matriz de bytes de salida.</summary>
      <param name="inputBuffer">Entrada para calcular en base 64.</param>
      <param name="inputOffset">Desplazamiento en la matriz de bytes de entrada a partir del cual se van a empezar a usar los datos.</param>
      <param name="inputCount">Número de bytes de la matriz de bytes de entrada que se van a usar como datos.</param>
      <param name="outputBuffer">Salida en la que se escribe el resultado.</param>
      <param name="outputOffset">Desplazamiento en la matriz de bytes de salida a partir del cual se van a empezar a escribir los datos.</param>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Security.Cryptography.ToBase64Transform" /> actual ya se ha desechado.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El tamaño de los datos no es válido.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="inputBuffer" /> contiene una longitud de desplazamiento no válida.  
  
o bien 
El parámetro <paramref name="inputCount" /> contiene un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="inputBuffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="inputBuffer" /> requiere un número no negativo.</exception>
      <returns>Número de bytes escritos.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
      <summary>Convierte la región especificada de la matriz de bytes establecida a base 64.</summary>
      <param name="inputBuffer">Entrada que se va a convertir a base 64.</param>
      <param name="inputOffset">Desplazamiento en la matriz de bytes a partir del cual se empezarán a usar los datos.</param>
      <param name="inputCount">Número de bytes de la matriz de bytes que se van a utilizar como datos.</param>
      <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Security.Cryptography.ToBase64Transform" /> actual ya se ha desechado.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="inputBuffer" /> contiene una longitud de desplazamiento no válida.  
  
o bien 
El parámetro <paramref name="inputCount" /> contiene un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="inputBuffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="inputBuffer" /> requiere un número no negativo.</exception>
      <returns>Conversión a base 64 calculada.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform">
      <summary>Obtiene un valor que indica si la transformación actual puede volver a usarse.</summary>
      <returns>Siempre es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks">
      <summary>Obtiene un valor que indica si se pueden transformar varios bloques.</summary>
      <returns>Siempre es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize">
      <summary>Obtiene el tamaño del bloque de entrada.</summary>
      <returns>Tamaño de los bloques de datos de entrada en bytes.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize">
      <summary>Obtiene el tamaño del bloque de salida.</summary>
      <returns>Tamaño de los bloques de datos de salida en bytes.</returns>
    </member>
  </members>
</doc>