<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DateTimeFormat">
      <summary vsli:raw="Specifies date-time format options.">Especifica las opciones de formato de fecha y hora.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DateTimeFormat&quot; /&gt; class using the format string.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> con la cadena de formato.</summary>
      <param name="formatString" vsli:raw="The format string.">Cadena de formato.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DateTimeFormat&quot; /&gt; class using the format string and format provider.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> usando la cadena de formato y proveedor de formato.</summary>
      <param name="formatString" vsli:raw="The format sting.">Cadena de formato.</param>
      <param name="formatProvider" vsli:raw="The format provider.">Proveedor de formatos.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles">
      <summary vsli:raw="Gets or sets the formatting options that customize string parsing for some date and time parsing methods.">Obtiene o establece las opciones de formato que personalizan el análisis de cadenas de algunos métodos de análisis de fecha y hora.</summary>
      <returns vsli:raw="The formatting options that customize string parsing for some date and time parsing methods.">Opciones de formato que personalizan el análisis de cadenas de algunos métodos de análisis de fecha y hora.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatProvider">
      <summary vsli:raw="Gets an object that controls formatting.">Obtiene un objeto que controla las operaciones de formato.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatString">
      <summary vsli:raw="Gets the format strings to control the formatting produced when a date or time is represented as a string.">Obtiene las cadenas de formato para controlar el formato que se produce cuando una fecha o una hora se representa como cadena.</summary>
      <returns vsli:raw="The format strings to control the formatting produced when a date or time is represented as a string.">Cadenas de formato para controlar el formato mostrado cuando una fecha o una hora se representa como una cadena.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EmitTypeInformation">
      <summary vsli:raw="Specifies how often to emit type information.">Especifica la frecuencia para emitir información de tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Always">
      <summary vsli:raw="Always to emit type information.">Emitir siempre información de tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.AsNeeded">
      <summary vsli:raw="As needed emit type information.">Según sea necesario emitir información de tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Never">
      <summary vsli:raw="Never to emit type information.">No emitir jamás información de tipo.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary vsli:raw="Serializes objects to the JavaScript Object Notation (JSON) and deserializes JSON data to objects. This class cannot be inherited.">Serializa objetos a JavaScript Object Notation (JSON) y deserializa datos de JSON a objetos. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto del tipo especificado.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Tipo de las instancias que se serializa o deserializa.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, with a collection of known types that may be present in the object graph.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto del tipo especificado con una colección de tipos conocidos que pueden encontrarse en el gráfico de objetos.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo de las instancias serializadas o deserializadas.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contiene los tipos que pueden estar presentes en el gráfico de objetos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and serializer settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto del tipo y configuración de serializador especificados.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Tipo de las instancias que se serializa o deserializa.</param>
      <param name="settings" vsli:raw="The serializer settings for the JSON serializer.">La configuración de serializador para el serializador JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto de un tipo especificado utilizando el elemento raíz de XML especificado por un parámetro.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Tipo de las instancias que se serializa o deserializa.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">El nombre del elemento XML que incluye el contenido para serializar o deserializar.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter, with a collection of known types that may be present in the object graph.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto de un tipo especificado utilizando el elemento raíz de XML especificado por un parámetro, con una colección de tipos conocidos que pueden encontrarse en el gráfico de objetos.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Tipo de las instancias que se serializa o deserializa.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize. The default is &quot;root&quot;.">El nombre del elemento XML que incluye el contenido para serializar o deserializar. El valor predeterminado es "root".</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contiene los tipos que pueden estar presentes en el gráfico de objetos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto de un tipo especificado utilizando el elemento raíz de XML especificado por un parámetro del tipo <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Tipo de las instancias que se serializa o deserializa.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el nombre del elemento raíz del contenido.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, with a collection of known types that may be present in the object graph.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto de un tipo especificado utilizando el elemento raíz de XML especificado por un parámetro del tipo <see cref="T:System.Xml.XmlDictionaryString" />, con una colección de tipos conocidos que pueden encontrarse en el gráfico de objetos.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Tipo de las instancias que se serializa o deserializa.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el nombre del elemento raíz del contenido.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contiene los tipos que pueden estar presentes en el gráfico de objetos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that represents an object the serializer can deserialize from.">Obtiene un valor que especifica si <see cref="T:System.Xml.XmlDictionaryReader" /> se coloca sobre un elemento XML que representa un objeto del que el serializador puede deserializar.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream mapped from JSON.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilizado para leer la secuencia XML asignada de JSON.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned correctly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el lector está colocado correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">Determina si <see cref="T:System.Xml.XmlReader" /> se coloca en un objeto que se puede deserializar.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">
        <see cref="T:System.Xml.XmlReader" /> utilizado para leer la secuencia XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned correctly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el lector está colocado correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads a document stream in the JSON (JavaScript Object Notation) format and returns the deserialized object.">Lee una secuencia del documento en el formato JSON (JavaScript Object Notation) y devuelve el objeto deserializado.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to be read.">
        <see cref="T:System.IO.Stream" /> que se leerá.</param>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document mapped from JSON (JavaScript Object Notation) with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">Lee el documento XML asignado de JSON (JavaScript Object Notation) con <see cref="T:System.Xml.XmlDictionaryReader" /> y devuelve el objeto deserializado.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document mapped from JSON.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilizado para leer el documento XML asignado de JSON.</param>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document mapped from JSON with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.">Lee el documento XML asignado de JSON con <see cref="T:System.Xml.XmlDictionaryReader" /> y devuelve el objeto deserializado; también le permite especificar si el serializador debería comprobar que está colocado sobre un elemento adecuado antes de intentar deserializar.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document mapped from JSON.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilizado para leer el documento XML asignado de JSON.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> para comprobar si el nombre del elemento envolvente XML y el espacio de nombres corresponden al nombre y al espacio de nombres esperados; de lo contrario, <see langword="false" /> para omitir la comprobación. De manera predeterminada, es <see langword="true" />.</param>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document mapped from JSON (JavaScript Object Notation) with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Lee el documento XML asignado de JSON (JavaScript Object Notation) con <see cref="T:System.Xml.XmlReader" /> y devuelve el objeto deserializado.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document mapped from JSON.">
        <see cref="T:System.Xml.XmlReader" /> utilizado para leer el documento XML asignado de JSON.</param>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads an XML document mapped from JSON with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.">Lee un documento XML asignado de JSON con <see cref="T:System.Xml.XmlReader" /> y devuelve el objeto deserializado; también le permite especificar si el serializador debería comprobar que está colocado sobre un elemento adecuado antes de intentar deserializar.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document mapped from JSON.">
        <see cref="T:System.Xml.XmlReader" /> utilizado para leer el documento XML asignado de JSON.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;, which skips the verification. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> para comprobar si el nombre del elemento envolvente XML y el espacio de nombres corresponden al nombre y al espacio de nombres esperados; de lo contrario, <see langword="false" /> para omitir la comprobación. De manera predeterminada, es <see langword="true" />.</param>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element to an XML document, using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, which can be mapped to JavaScript Object Notation (JSON).">Escribe el elemento XML de cierre en un documento XML, que puede estar asignado a JavaScript Object Notation (JSON), mediante <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document to map to JSON.">Un <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el documento XML que se asignará a JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element to an XML document, using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, which can be mapped to JavaScript Object Notation (JSON).">Escribe el elemento XML de cierre en un documento XML, que puede estar asignado a JavaScript Object Notation (JSON), mediante <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document mapped to JSON.">Un <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el documento XML asignado a JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes a specified object to JavaScript Object Notation (JSON) data and writes the resulting JSON to a stream.">Serializa un objeto especificado a datos JavaScript Object Notation (JSON) y escribe el JSON resultante en una secuencia.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that is written to.">
        <see cref="T:System.IO.Stream" /> en el que se escribe.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">El objeto que contiene los datos que se van a escribir en la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Hay un problema con la instancia que se está escribiendo.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">Se ha superado el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Serializa a XML un objeto que puede estar asignado a JavaScript Object Notation (JSON). Escribe todos los datos de objeto (incluido el elemento XML inicial, el contenido y el elemento de cierre) con <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream to map to JSON.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para escribir el documento o la secuencia XML que se asignará a JSON.</param>
      <param name="graph" vsli:raw="The object that contains the data to write.">El objeto que contiene los datos que se van a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Hay un problema con la instancia que se está escribiendo.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">Se ha superado el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serializa a XML un objeto que puede estar asignado a JavaScript Object Notation (JSON). Escribe todos los datos de objeto (incluido el elemento XML inicial, el contenido y el elemento de cierre) con <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document to map to JSON.">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento XML que se asignará a JSON.</param>
      <param name="graph" vsli:raw="The object that contains the data to write.">El objeto que contiene los datos que se van a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Hay un problema con la instancia que se está escribiendo.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">Se ha superado el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Escribe el contenido de XML que puede asignarse a JavaScript Object Notation (JSON) mediante <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; to write to.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> en el que se va a escribir.</param>
      <param name="graph" vsli:raw="The object to write.">Objeto que se va a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Hay un problema con la instancia que se está escribiendo.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">Se ha superado el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el contenido de XML que puede asignarse a JavaScript Object Notation (JSON) mediante <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write to.">
        <see cref="T:System.Xml.XmlWriter" /> donde se va a escribir.</param>
      <param name="graph" vsli:raw="The object to write.">Objeto que se va a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Hay un problema con la instancia que se está escribiendo.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">Se ha superado el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Escribe el elemento XML de apertura para serializar un objeto a XML que puede asignarse a JavaScript Object Notation (JSON) utilizando <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el elemento de inicio XML.</param>
      <param name="graph" vsli:raw="The object to write.">Objeto que se va a escribir.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el elemento XML de apertura para serializar un objeto a XML que puede asignarse a JavaScript Object Notation (JSON) utilizando <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el elemento de inicio XML.</param>
      <param name="graph" vsli:raw="The object to write.">Objeto que se va a escribir.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
      <summary vsli:raw="Gets the format of the date and time type items in object graph.">Obtiene el formato de los elementos de tipo fecha y hora en un gráfico de objetos.</summary>
      <returns vsli:raw="The format of the date and time type items in object graph.">Formato de los elementos de tipo de fecha y hora en un gráfico de objetos.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
      <summary vsli:raw="Gets or sets the data contract JSON serializer settings to emit type information.">Obtiene o establece la configuración del serializador JSON de contrato de datos para emitir información de tipo.</summary>
      <returns vsli:raw="The data contract JSON serializer settings to emit type information.">Configuración del serializador JSON de contrato de datos para emitir información de tipo.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether unknown data is ignored on deserialization and whether the &lt;see cref=&quot;T:System.Runtime.Serialization.IExtensibleDataObject&quot; /&gt; interface is ignored on serialization.">Obtiene un valor que especifica si los datos desconocidos se omiten en la deserialización y si la interfaz <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> se omite en la serialización.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore unknown data and &lt;see cref=&quot;T:System.Runtime.Serialization.IExtensibleDataObject&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para omitir datos desconocidos y <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt;.">Obtiene una colección de tipos que se pueden encontrarse en el gráfico de objetos serializado utilizando esta instancia de <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; constructor.">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene los tipos esperados pasados como tipos conocidos por el constructor <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph that the serializer serializes or deserializes in one read or write call.">Obtiene el número máximo de elementos en un gráfico de objetos que el serializador serializa o deserializa en una llamada de lectura o de escritura.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">El número de elementos supera el valor máximo.</exception>
      <returns vsli:raw="The maximum number of items to serialize or deserialize.">El número máximo de elementos para serializar o deserializar.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Obtiene o establece un valor que especifica si se van a serializar tipos de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para serializar tipos de solo lectura; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
      <summary vsli:raw="Gets a value that specifies whether to use a simple dictionary format.">Obtiene un valor que especifica si se va a usar un formato de diccionario simple.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use a simple dictionary format; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para usar un formato simple de diccionario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings">
      <summary vsli:raw="Specifies &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; settings.">Especifica valores de configuración de <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat">
      <summary vsli:raw="Gets or sets a DateTimeFormat that defines the culturally appropriate format of displaying dates and times.">Obtiene o establece un DateTimeFormat que define el formato de presentación de fechas y horas culturalmente apropiado.</summary>
      <returns vsli:raw="The DateTimeFormat that defines the culturally appropriate format of displaying dates and times.">DateTimeFormat que define el formato de presentación de fechas y horas culturalmente apropiado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation">
      <summary vsli:raw="Gets or sets the data contract JSON serializer settings to emit type information.">Obtiene o establece la configuración del serializador JSON de contrato de datos para emitir información de tipo.</summary>
      <returns vsli:raw="The data contract JSON serializer settings to emit type information.">Configuración del serializador JSON de contrato de datos para emitir información de tipo.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Obtiene o establece un valor que especifica si se deben omitir los datos proporcionados por una extensión de la clase cuando la clase se serializa o deserializa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se deben omitir los datos proporcionados por una extensión de la clase cuando la clase se serializa o deserializa; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.">Obtiene o establece una colección de tipos que pueden encontrarse en el gráfico de objetos serializado utilizando esta instancia de DataContractJsonSerializerSettings.</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.">Colección de tipos que pueden encontrarse en el gráfico de objetos serializado utilizando esta instancia de DataContractJsonSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">Obtiene o define el número máximo de elementos en un gráfico de objetos que se vaya a serializar o deserializar.</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">Número máximo de elementos de un gráfico de objetos que se van a serializar o deserializar.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">Obtiene o establece el nombre raíz del objeto seleccionado.</summary>
      <returns vsli:raw="The root name of the selected object.">El nombre raíz del objeto seleccionado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Obtiene o establece un valor que especifica si se van a serializar tipos de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para serializar tipos de solo lectura; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat">
      <summary vsli:raw="Gets or sets a value that specifies whether to use a simple dictionary format.">Obtiene o establece un valor que especifica si se va a utilizar un formato de diccionario simple.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use a simple dictionary format; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para usar un formato simple de diccionario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary vsli:raw="Specifies the interface for initializing a JavaScript Object Notation (JSON) reader when reusing them to read from a particular stream or buffer.">Especifica la interfaz para inicializar un lector de JavaScript Object Notation (JSON) al reutilizarlos para leer de una secuencia determinada o búfer.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified buffer that contains JSON-encoded data.">Reinicializa un lector habilitado JavaScript Object Notation (JSON) para un búfer especificado que contiene datos codificados por JSON.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; used by the reader.">
        <see cref="T:System.Text.Encoding" /> utilizado por el lector.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed.">Delegado <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> que se llamará cuando se cierre el lector.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream that contains JSON-encoded data.">Reinicializa un lector habilitado JavaScript Object Notation (JSON) para una secuencia especificada que contiene datos codificados por JSON.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">
        <see cref="T:System.IO.Stream" /> de entrada de donde se leerá.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; used by the reader.">
        <see cref="T:System.Text.Encoding" /> utilizado por el lector.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Delegado al que se llamará cuando se cierre el lector.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary vsli:raw="Specifies the interface for initializing a JavaScript Object Notation (JSON) writer when reusing them to write to a particular output stream.">Especifica la interfaz para inicializar un sistema de escritura de JavaScript Object Notation (JSON) al reutilizarlos para escribir en un flujo de salida determinado.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes (or reinitializes) a JavaScript Object Notation (JSON) writer to a specified output stream with specified character encoding.">Inicializa (o reinicializa) un sistema de escritura JavaScript Object Notation (JSON) para un flujo de salida especificado con una codificación de caracteres especificada.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to which the writer writes.">
        <see cref="T:System.IO.Stream" /> de salida donde escribe el sistema de escritura.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding of the output stream.">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres del flujo de salida.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary vsli:raw="Produces instances of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that can map an XML Infoset to JSON and write JSON-encoded data to a stream.">Genera instancias de <see cref="T:System.Xml.XmlDictionaryReader" /> que pueden leer datos codificados por JavaScript Object Notation (JSON) de una secuencia o búfer y asignarlos a un conjunto de información XML e instancias de <see cref="T:System.Xml.XmlDictionaryWriter" /> que pueden asignar un conjunto de información XML a JSON y escribir datos codificados por JSON en una secuencia.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.">Crea <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar búferes codificados con JavaScript Object Notation (JSON), con un tamaño y desplazamiento especificados y codificación de caracteres, a un conjunto de información XML.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the reader. If &lt;see langword=&quot;null&quot; /&gt; is specified as the value, the reader attempts to auto-detect the encoding.">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el lector. Si se especifica <see langword="null" /> como valor, el lector intenta detectar automáticamente la codificación.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed. The default value is &lt;see langword=&quot;null&quot; /&gt;.">Delegado <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> que se llamará cuando se cierre el lector. El valor predeterminado es <see langword="null" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">
        <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.">Crea <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar búferes codificados con JavaScript Object Notation (JSON), de un tamaño y desplazamiento especificados, a un conjunto de información XML.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">
        <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.">Crea un <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar búferes codificados con JavaScript Object Notation (JSON) a un conjunto de información XML.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can process JavaScript Object Notation (JSON) data.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> que puede procesar datos JavaScript Object Notation (JSON).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.">Crea <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar secuencias codificadas con JavaScript Object Notation (JSON), de un tamaño y desplazamiento especificados, a un conjunto de información XML.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">
        <see cref="T:System.IO.Stream" /> de entrada de donde se leerá.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the reader. If &lt;see langword=&quot;null&quot; /&gt; is specified as the value, the reader attempts to auto-detect the encoding.">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el lector. Si se especifica <see langword="null" /> como valor, el lector intenta detectar automáticamente la codificación.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed.">Delegado <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> que se llamará cuando se cierre el lector.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">
        <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.">Crea un <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar secuencias codificadas con JavaScript Object Notation (JSON) a un conjunto de información XML.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">
        <see cref="T:System.IO.Stream" /> de entrada de donde se leerá.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">
        <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream.">Crea un objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">
        <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character encoding.">Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con una codificación de caracteres especificada.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">
        <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura. La codificación predeterminada es UTF-8.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character encoding.">Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con una codificación de caracteres especificada.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">
        <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura. La codificación predeterminada es UTF-8.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character.">Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con un carácter especificado.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">
        <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura. La codificación predeterminada es UTF-8.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</param>
      <param name="indent" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output uses multiline format, indenting each level properly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Si es <see langword="true" />, la salida usa el formato multilínea y aplica sangría a cada nivel correctamente; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character.">Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con un carácter especificado.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">
        <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura. La codificación predeterminada es UTF-8.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</param>
      <param name="indent" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output uses multiline format, indenting each level properly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Si es <see langword="true" />, la salida usa el formato multilínea y aplica sangría a cada nivel correctamente; de lo contrario, <see langword="false" />.</param>
      <param name="indentChars" vsli:raw="The string used to indent each level.">La cadena usada para aplicar sangría a cada nivel.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
    </member>
  </members>
</doc>