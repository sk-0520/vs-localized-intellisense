<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary vsli:raw="This type represents an ASN.1 tag, as described in ITU-T Recommendation X.680.">Este tipo representa una etiqueta ASN.1, como se describe en la recomendación X. 680 de ITU-T.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary vsli:raw="Represents the universal class tag for a Boolean value.">Representa la etiqueta de clase universal para un valor booleano.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a constructed encoding.">Representa la etiqueta de clase universal para un valor de cadena de bits en una codificación construida.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary vsli:raw="Represents the universal class tag for a Octet String value under a constructed encoding.">Representa la etiqueta de clase universal para un valor de cadena de octetos en una codificación construida.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary vsli:raw="Represents the universal class tag for an Enumerated value.">Representa la etiqueta de clase universal para un valor enumerado.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary vsli:raw="Represents the universal class tag for a GeneralizedTime value.">Representa la etiqueta de clase universal para un valor GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary vsli:raw="Represents the universal class tag for an Integer value.">Representa la etiqueta de clase universal para un valor entero.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary vsli:raw="Represents the universal class tag for a &lt;see langword=&quot;null&quot; /&gt; value.">Representa la etiqueta de clase universal para un valor <see langword="null" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary vsli:raw="Represents the universal class tag for an Object Identifier value.">Representa la etiqueta de clase universal para un valor de identificador de objeto.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a primitive encoding.">Representa la etiqueta de clase universal para un valor de cadena de bits en una codificación primitiva.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary vsli:raw="Represents the universal class tag for an Octet String value under a primitive encoding.">Representa la etiqueta de clase universal para un valor de cadena de octetos en una codificación primitiva.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary vsli:raw="Represents the universal class tag for a Sequence value (always a constructed encoding).">Representa la etiqueta de clase universal para un valor de secuencia (siempre una codificación construida).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary vsli:raw="Represents the universal class tag for a SetOf value (always a constructed encoding).">Representa la etiqueta de clase universal para un valor SetOf (siempre es una codificación construida).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary vsli:raw="Represents the universal class tag for a UtcTime value.">Representa la etiqueta de clase universal para un valor UtcTime.</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a specified value within a specified tag class.">Cree <see cref="T:System.Formats.Asn1.Asn1Tag" /> para un valor especificado dentro de una clase de etiqueta especificada.</summary>
      <param name="tagClass" vsli:raw="The tag class for this tag.">La clase de etiqueta para esta etiqueta.</param>
      <param name="tagValue" vsli:raw="The numeric value for this tag.">Valor numérico de esta etiqueta.</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">
        <see langword="true" /> para una etiqueta construida, <see langword="false" /> para una etiqueta primitiva.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;tagClass&quot; /&gt; is not a known value.&#xA;             -or- &#xA;               &lt;paramref name=&quot;tagValue&quot; /&gt; is negative.">
        <paramref name="tagClass" /> no es un valor conocido.
O bien, <paramref name="tagValue" /> es negativo.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a tag from the UNIVERSAL class.">Cree un <see cref="T:System.Formats.Asn1.Asn1Tag" /> para una etiqueta de la clase UNIVERSAL.</summary>
      <param name="universalTagNumber" vsli:raw="One of the enumeration values that specifies the semantic type for this tag.">Uno de los valores de enumeración que especifica el tipo semántico para esta etiqueta.</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">
        <see langword="true" /> para una etiqueta construida, <see langword="false" /> para una etiqueta primitiva.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;universalTagNumber&quot; /&gt; is not a known value.">
        <paramref name="universalTagNumber" /> no es un valor conocido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Genera una etiqueta con los mismos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, pero cuyo <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> es <see langword="true" />.</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Una etiqueta con los mismos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, pero cuyo <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Genera una etiqueta con los mismos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, pero cuyo <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> es <see langword="false" />.</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Una etiqueta con los mismos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, pero cuyo <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary vsli:raw="Reports the number of bytes required for the BER-encoding of this tag.">Indica el número de bytes necesarios para la codificación BER de esta etiqueta.</summary>
      <returns vsli:raw="The number of bytes required for the BER-encoding of this tag.">El número de bytes necesarios para la codificación BER de esta etiqueta.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary vsli:raw="Reads a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">Lee una etiqueta codificada en BER que comienza en <paramref name="source" />.</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">La secuencia de bytes de solo lectura cuyo comienzo es una etiqueta codificada en BER.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag. This parameter is treated as uninitialized.">Cuando este método vuelve, contiene el número de bytes que contribuyeron a la etiqueta codificada. Este parámetro se trata como sin inicializar.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The provided data does not decode to a tag.">Los datos proporcionados no se descodifican en una etiqueta.</exception>
      <returns vsli:raw="The decoded tag.">La etiqueta descodificada.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">Escribe el formulario codificado en BER de esta etiqueta en <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">El inicio de donde se debe escribir la etiqueta codificada.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;.">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />.</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Número de bytes escritos en <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same encoding as this tag.">Comprueba si <paramref name="other" /> tiene la misma codificación que esta etiqueta.</summary>
      <param name="other" vsli:raw="Tag to test for equality.">Etiqueta cuya igualdad se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same values for &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt;, &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt;, and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />si <paramref name="other" /> tiene los mismos valores para <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />, <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; with the same encoding as this tag.">Comprueba si <paramref name="obj" /> es <see cref="T:System.Formats.Asn1.Asn1Tag" /> con la misma codificación que esta etiqueta.</summary>
      <param name="obj" vsli:raw="Object to test for value equality.">Objeto cuya igualdad de valores se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is not an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)&quot; /&gt; otherwise.">
        <see langword="false" /> si <paramref name="obj" /> no es <see cref="T:System.Formats.Asn1.Asn1Tag" />; de lo contrario <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values as this tag, and does not compare &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;.">Comprueba si <paramref name="other" /> tiene los mismos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> que esta etiqueta, y no compara <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />.</summary>
      <param name="other" vsli:raw="Tag to test for concept equality.">Etiqueta cuya igualdad de concepto se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; as this tag, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si <paramref name="other" /> tiene los mismos <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> y <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> que esta etiqueta; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have the same BER encoding.">Comprueba si dos valores <see cref="T:System.Formats.Asn1.Asn1Tag" /> tienen la misma codificación BER.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primer valor que se va a comparar.</param>
      <param name="right" vsli:raw="The second value to compare.">Segundo valor que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have the same BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> tienen la misma codificación BER; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have a different BER encoding.">Comprueba si dos valores <see cref="T:System.Formats.Asn1.Asn1Tag" /> tienen una codificación BER diferente.</summary>
      <param name="left" vsli:raw="The first value to compare.">Primer valor que se va a comparar.</param>
      <param name="right" vsli:raw="The second value to compare.">Segundo valor que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have a different BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> tienen una codificación BER diferente; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary vsli:raw="Provides a text representation of this tag suitable for debugging.">Proporciona una representación de texto de esta etiqueta adecuada para la depuración.</summary>
      <returns vsli:raw="A text representation of this tag suitable for debugging.">Una representación de texto de esta etiqueta adecuada para la depuración.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary vsli:raw="Attempts to read a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">Intenta leer una etiqueta codificada en BER que comienza en <paramref name="source" />.</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">La secuencia de bytes de solo lectura cuyo comienzo es una etiqueta codificada en BER.</param>
      <param name="tag" vsli:raw="The decoded tag.">La etiqueta descodificada.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag, 0 on failure. This parameter is treated as uninitialized.">Cuando este método vuelve, contiene el número de bytes que han contribuido a la etiqueta codificada, 0 en caso de error. Este parámetro se trata como sin inicializar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a tag was correctly decoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si una etiqueta se descodificó correctamente; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">Intenta escribir el formulario codificado en BER de esta etiqueta en <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">El inicio de donde se debe escribir la etiqueta codificada.</param>
      <param name="bytesWritten" vsli:raw="Receives the value from &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt; on success, 0 on failure.">Recibe el valor de <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" /> si la operación se realiza correctamente, 0 en caso de error.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;(), &lt;see langword=&quot;true&quot; /&gt; otherwise.">
        <see langword="false" /> si <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />(); en caso contrario, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary vsli:raw="Indicates if the tag represents a constructed encoding (&lt;see langword=&quot;true&quot; /&gt;), or a primitive encoding (&lt;see langword=&quot;false&quot; /&gt;).">Indica si la etiqueta representa una codificación construida (<see langword="true" />) o una codificación primitiva (<see langword="false" />).</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary vsli:raw="The tag class to which this tag belongs.">La clase de etiqueta a la que pertenece esta etiqueta.</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary vsli:raw="The numeric value for this tag.">Valor numérico de esta etiqueta.</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary vsli:raw="The exception that is thrown when an encoded ASN.1 value cannot be successfully decoded.">Excepción que se produce cuando no se puede descodificar correctamente un valor de ASN.1 codificado.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the default message.">Inicializa una nueva instancia de la clase <see cref="T:System.Formats.Asn1.AsnContentException" /> con el mensaje predeterminado.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Formats.Asn1.AsnContentException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message.">Inicializa una nueva instancia de la clase <see cref="T:System.Formats.Asn1.AsnContentException" /> con el mensaje proporcionado.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message and exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Formats.Asn1.AsnContentException" /> con el mensaje proporcionado y la excepción que es la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">Excepción que es la causa de la excepción actual.</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary vsli:raw="Provides stateless methods for decoding BER-encoded, CER-encoded, and DER-encoded ASN.1 data.">Proporciona métodos sin estado para descodificar datos ASN.1 con codificación BER, CER o DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">Lee un valor de cadena de bits de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y devuelve el contenido de una nueva matriz.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">Si la operación se realiza correctamente, recibe el número de bits en el último byte que el escritor comunicó como "sin usar".
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="An array containing the contents of the Bit String value.">Una matriz que incluye el contenido del valor de la cadena de bits.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Boolean value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lee un valor booleano de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 1).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The decoded value.">El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded string.">Lee el siguiente valor como cadena de caracteres con la etiqueta y el tipo de codificación especificados, y devuelve la cadena descodificada.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">Uno de los valores de enumeración que representa el tipo de valor que se va a procesar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta universal adecuada para el tipo de codificación solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="ruleSet" /> no está definido.
O bien, <paramref name="encodingType" /> no es un tipo de cadena de caracteres conocido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, la cadena no se descodificó correctamente.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es igual que <paramref name="encodingType" />.</exception>
      <returns vsli:raw="The decoded value.">El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Locates the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">Busca el intervalo de contenido para el valor codificado al principio del búfer <paramref name="source" /> utilizando las reglas de codificación especificadas.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">Cuando este método vuelve, el desplazamiento de la carga útil de contenido en relación al inicio de <paramref name="source" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">Cuando este método vuelve, el número de bytes de la carga útil de contenido (que puede ser 0).
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not represent a value encoded under the specified encoding rules.">
        <paramref name="source" /> no representa un valor codificado con las reglas de codificación especificadas.</exception>
      <returns vsli:raw="The tag identifying the content.">La etiqueta que identifica el contenido.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">Lee un valor enumerado de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y devuelve el contenido como un segmento del búfer.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Enumerated value, in signed big-endian form.">El segmento del búfer que contiene los bytes del valor enumerado, en formato big endian con signo.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">Lee un valor enumerado de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y lo convierte en la enumeración que es distinta de [<see cref="T:System.FlagsAttribute" />] especificada por <paramref name="enumType" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="enumType" vsli:raw="Type object representing the destination type.">Objeto de tipo que representa el tipo de destino.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" /> no es un tipo de enumeración.
O bien, <paramref name="enumType" /> se declaró con <see cref="T:System.FlagsAttribute" />.
O bien <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">El valor enumerado convertido en <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Lee un valor enumerado de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y lo convierte en la enumeración que es distinta de [<see cref="T:System.FlagsAttribute" />] especificada por <typeparamref name="TEnum" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">Tipo de enumeración de destino</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" /> no es un tipo de enumeración.
O bien, <typeparamref name="TEnum" /> se declaró con <see cref="T:System.FlagsAttribute" />.
O bien <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">El valor enumerado convertido en <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a GeneralizedTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lee un valor GeneralizedTime de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The decoded value.">El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lee un valor entero de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The decoded numeric value.">El valor numérico descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">Lee un valor entero de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y devuelve el contenido como un segmento del búfer.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Integer value, in signed big-endian form.">El segmento del búfer que contiene los bytes del valor entero, en formato big endian con signo.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lee un valor NamedBitList de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The bits from the encoded value.">Los bits del valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Lee un valor NamedBitList de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y lo convierte en la enumeración [<see cref="T:System.FlagsAttribute" />] especificada por <paramref name="flagsEnumType" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">Objeto de tipo que representa el tipo de destino.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" /> no es un tipo de enumeración.
O bien, <paramref name="flagsEnumType" /> no se declaró con <see cref="T:System.FlagsAttribute" /> o <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" /> es <see langword="null" /></exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">El valor de NamedBitList convertido en <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Lee un valor NamedBitList de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y lo convierte en la enumeración [<see cref="T:System.FlagsAttribute" />] especificada por <typeparamref name="TFlagsEnum" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">Tipo de enumeración de destino</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" /> no es un tipo de enumeración.
O bien, <typeparamref name="TFlagsEnum" /> no se declaró con <see cref="T:System.FlagsAttribute" /> o <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">El valor de NamedBitList convertido en <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a &lt;see langword=&quot;null&quot; /&gt; value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lee un valor <see langword="null" /> de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 5).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Object Identifier value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lee un valor de identificador de objeto de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 6).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The decoded object identifier, in dotted-decimal notation.">El identificador de objeto descodificado, en notación decimal con puntos.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">Lee un valor de cadena de octetos de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas y devuelve el contenido de una nueva matriz.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="An array containing the contents of the Octet String value.">Una matriz que incluye el contenido del valor de la cadena de octetos.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Sequence or Sequence-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lee un valor de Sequence o Sequence-Of de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el desplazamiento de la carga útil de contenido en relación al inicio de <paramref name="source" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número de bytes de la carga útil de contenido (que puede ser 0).
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 16).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Set-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lee un valor Set-Of de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el desplazamiento de la carga útil de contenido en relación al inicio de <paramref name="source" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número de bytes de la carga útil de contenido (que puede ser 0).
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">
        <see langword="true" /> para aceptar siempre los datos en el orden en que se presentan, <see langword="false" /> para comprobar que los datos se ordenan correctamente cuando las reglas de codificación indican que se requiere la ordenación (CER y DER).</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 17).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a UtcTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Lee un valor UtcTime de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.&#xA;               The default value, 2049, represents the 1950-2049 range for X.509 certificates.">El año más grande que se va a representar con este valor.
El valor predeterminado, 2049, representa el intervalo 1950-2049 para los certificados X.509.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; is not in the range [99, 9999].">
        <paramref name="ruleSet" /> no está definido.
O bien, <paramref name="twoDigitYearMax" /> no están en el intervalo [99, 9999].</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The decoded value.">El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to copy a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules into &lt;paramref name=&quot;destination&quot; /&gt;.">Intenta copiar un valor de cadena de bits de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas en <paramref name="destination" />.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">El búfer en el que se va a escribir.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">Si la operación se realiza correctamente, recibe el número de bits en el último byte que el escritor comunicó como "sin usar".
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes escritos en <paramref name="destination" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="destination" /> se superpone a <paramref name="source" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Bit String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="destination" /> es lo suficientemente grande como para recibir el valor de la cadena de bits; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the decoded string into a provided destination buffer.">Lee un valor de cadena de caracteres de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas, copiando la cadena descodificada en un búfer de destino proporcionado.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">El búfer en el que se va a escribir.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">Uno de los valores de enumeración que representa el tipo de valor que se va a procesar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="charsWritten" vsli:raw="When this method returns, the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número de caracteres escritos en <paramref name="destination" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta universal adecuada para el tipo de codificación solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="ruleSet" /> no está definido.
O bien, <paramref name="encodingType" /> no es un tipo de cadena de caracteres conocido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, la cadena no se descodificó correctamente.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es igual que <paramref name="encodingType" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> y avanza el lector si <paramref name="destination" /> tenía suficiente longitud para recibir el valor; en caso contrario, <see langword="false" /> y el lector no avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts to read a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the unprocessed bytes into the provided destination buffer.">Intenta leer un valor de cadena de caracteres de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas, copiando los bytes sin procesar en el búfer de destino proporcionado.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">El búfer en el que se va a escribir.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">La etiqueta que se va a comprobar antes de leer.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Si la operación se realiza correctamente, recibe el número de bytes escritos en <paramref name="destination" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es un tipo de etiqueta de cadena de caracteres.
O bien, <paramref name="destination" /> se superpone a <paramref name="source" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the unprocessed character string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="destination" /> es lo suficientemente grande como para recibir el valor de la cadena de caracteres sin procesar; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts locate the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">Intenta localizar el intervalo de contenido para el valor codificado al principio del búfer <paramref name="source" /> utilizando las reglas de codificación especificadas.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="tag" vsli:raw="When this method returns, the tag identifying the content.&#xA;              This parameter is treated as uninitialized.">Cuando este método vuelve, la etiqueta que identifica el contenido.
Este parámetro se trata como sin inicializar.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">Cuando este método vuelve, el desplazamiento de la carga útil de contenido en relación al inicio de <paramref name="source" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">Cuando este método vuelve, el número de bytes de la carga útil de contenido (que puede ser 0).
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;source&quot; /&gt; represents a valid structural encoding for the specified encoding rules; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="source" /> representa una codificación estructural válida para las reglas de codificación especificadas; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 32-bit value.">Intenta leer un valor entero de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas como un valor de 32 bits.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">Si la operación se ejecuta correctamente, recibe el valor numérico interpretado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el entero representa un valor que se encuentra entre <see cref="F:System.Int32.MinValue" /> y <see cref="F:System.Int32.MaxValue" />, ambos incluidos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 64-bit value.">Intenta leer un valor entero desde <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas como un valor de bit 64 con signo.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">Si la operación se ejecuta correctamente, recibe el valor numérico interpretado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el entero representa un valor que se encuentra entre <see cref="F:System.Int64.MinValue" /> y <see cref="F:System.Int64.MaxValue" />, ambos incluidos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the value into the provided destination buffer.">Intenta obtener un valor de cadena de octetos de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas, copiando el valor en el búfer de destino proporcionado.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">El búfer en el que se va a escribir.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes escritos en <paramref name="destination" />.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="destination" /> se superpone a <paramref name="source" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Octet String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="destination" /> es lo suficientemente grande como para recibir el valor de la cadena de octetos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">Intenta obtener un valor de cadena de bits de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas, si el valor está contenido en una sola codificación (primitiva).</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">Si la operación se realiza correctamente, recibe el número de bits en el último byte que el escritor comunicó como "sin usar".
Este parámetro se trata como sin inicializar.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">Si la operación se ejecuta correctamente, recibe un segmento del búfer de entrada que corresponde al valor de la cadena de bits.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Bit String value has a primitive encoding and all of the bits reported as unused are set to 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor de la cadena de bits tiene una codificación primitiva y todos los bits notificados como no utilizados se establecen en 0; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary vsli:raw="Attempts to get an unprocessed character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">Intenta obtener un valor de cadena de caracteres sin procesar de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas, si el valor está contenido en una sola codificación (primitiva).</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">La etiqueta que se va a comprobar antes de leer.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">Si la operación se ejecuta correctamente, recibe un segmento del búfer de entrada que corresponde al valor de la cadena de bits.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es un tipo de etiqueta de cadena de caracteres.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character string value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor de la cadena de caracteres tiene una codificación primitiva; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">Intenta obtener un valor de cadena de octetos de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas, si el valor está contenido en una sola codificación (primitiva).</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Octet String.&#xA;               This parameter is treated as uninitialized.">Si la operación se ejecuta correctamente, recibe un segmento del búfer de entrada que corresponde al valor de la cadena de octetos.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Octet String value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor de la cadena de octetos tiene una codificación primitiva; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 32-bit value.">Intenta leer un valor entero de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas como un valor de 32 bits sin signo.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">Si la operación se ejecuta correctamente, recibe el valor numérico interpretado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el entero representa un valor que se encuentra entre <see cref="F:System.UInt32.MinValue" /> y <see cref="F:System.UInt32.MaxValue" />, ambos incluidos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 64-bit value.">Intenta leer un valor entero de <paramref name="source" /> con una etiqueta especificada en las reglas de codificación especificadas como un valor de 64 bits sin signo.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">El búfer que contiene los datos codificados.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Las restricciones de codificación que se van a usar al interpretar los datos.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">Si la operación se ejecuta correctamente, recibe el valor numérico interpretado.
Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Cuando este método vuelve, el número total de bytes para el valor codificado.
Este parámetro se trata como sin inicializar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el entero representa un valor que se encuentra entre <see cref="F:System.UInt64.MinValue" /> y <see cref="F:System.UInt64.MaxValue" />, ambos incluidos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary vsli:raw="The encoding ruleset for an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; or &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt;.">Conjunto de reglas de codificación de un objeto <see cref="T:System.Formats.Asn1.AsnReader" /> o <see cref="T:System.Formats.Asn1.AsnWriter" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary vsli:raw="ITU-T X.690 Basic Encoding Rules.">Reglas de codificación básica ITU-T X. 690</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary vsli:raw="ITU-T X.690 Canonical Encoding Rules.">Reglas de codificación canónica ITU-T X. 690</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary vsli:raw="ITU-T X.690 Distinguished Encoding Rules.">Reglas de codificación distinguida ITU-T X. 690</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary vsli:raw="A stateful, forward-only reader for BER-, CER-, or DER-encoded ASN.1 data.">Un lector con estado y de solo avance para datos de ASN.1 con codificación BER, CER o DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary vsli:raw="Construct an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; over &lt;paramref name=&quot;data&quot; /&gt; with a given ruleset.">Construya <see cref="T:System.Formats.Asn1.AsnReader" /> sobre <paramref name="data" /> con un conjunto de reglas determinado.</summary>
      <param name="data" vsli:raw="The data to read.">Datos que se van a leer.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints for the reader.">Las restricciones de codificación para el lector.</param>
      <param name="options" vsli:raw="Additional options for the reader.">Opciones adicionales para el lector.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the content octets (bytes) of the next encoded value without advancing the reader.">Obtenga una vista de <see cref="T:System.ReadOnlyMemory`1" /> de los octetos de contenido (bytes) del siguiente valor codificado sin avanzar el lector.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">El lector se coloca en un punto en el que la etiqueta o la longitud no son válidas bajo las reglas de codificación actuales.</exception>
      <returns vsli:raw="The bytes of the contents octets of the next encoded value.">Los bytes de los octetos de contenido del siguiente valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value without advancing the reader. For indefinite length encodings this includes the End of Contents marker.">Obtenga una vista de <see cref="T:System.ReadOnlyMemory`1" /> del siguiente valor codificado sin avanzar el lector. En el caso de codificaciones de longitud indefinida, esto incluye el marcador de fin de contenido.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">El lector se coloca en un punto en el que la etiqueta o la longitud no son válidas bajo las reglas de codificación actuales.</exception>
      <returns vsli:raw="The bytes of the next encoded value.">Los bytes del siguiente valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary vsli:raw="Read the encoded tag at the next data position, without advancing the reader.">Lea la etiqueta codificada en la posición de datos siguiente, sin avanzar el lector.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="A tag could not be decoded at the reader's current position.">no se pudo descodificar una etiqueta en la posición actual del lector.</exception>
      <returns vsli:raw="The decoded tag value.">El valor de la etiqueta descodificada.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the value in a byte array.">Lee el siguiente valor como una CADENA DE BITS con una etiqueta especificada y devuelve el valor en una matriz de bytes.</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">Si la operación se realiza correctamente, recibe el número de bits en el último byte que el escritor comunicó como "sin usar".</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">Una copia del valor en una matriz recién asignada de tamaño preciso.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Boolean with a specified tag.">Lee el siguiente valor como booleano con una etiqueta especificada.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The decoded value.">El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded value as a string.">Lee el siguiente valor como cadena de caracteres con la etiqueta y el tipo de codificación especificados, y devuelve el valor descodificado como una cadena.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">Uno de los valores de enumeración que representa el tipo de valor que se va a procesar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta universal adecuada para el tipo de codificación solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" /> no es un tipo de cadena de caracteres conocido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, la cadena no se descodificó correctamente.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es igual que <paramref name="encodingType" />.</exception>
      <returns vsli:raw="The decoded value.">El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value, and advance the reader past it. For an indefinite length encoding this includes the End of Contents marker.">Obtenga una vista de <see cref="T:System.ReadOnlyMemory`1" /> del siguiente valor codificado y haga avanzar el lector después. Para una codificación de longitud indefinida, esto incluye el marcador de fin de contenido.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value.">Una vista de <see cref="T:System.ReadOnlyMemory`1" /> del siguiente valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Enumerated with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Lee el siguiente valor como enumerado con una etiqueta especificada y devuelve el contenido como <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The bytes of the Enumerated value, in signed big-endian form.">Los bytes del valor enumerado, en formato big endian firmado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">Lee el siguiente valor como enumerado con una etiqueta especificada y lo convierte en la enumeración que es distinta de [<see cref="T:System.FlagsAttribute" />] especificada por <paramref name="enumType" />.</summary>
      <param name="enumType" vsli:raw="Type object representing the destination type.">Objeto de tipo que representa el tipo de destino.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" /> no es un tipo de enumeración.
O bien, <paramref name="enumType" /> se declaró con <see cref="T:System.FlagsAttribute" />.
O bien <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">El valor enumerado convertido en <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Lee el siguiente valor como enumerado con una etiqueta especificada y lo convierte en la enumeración que es distinta de [<see cref="T:System.FlagsAttribute" />] especificada por <typeparamref name="TEnum" />.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">Tipo de enumeración de destino</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TEnum&quot; /&gt; value.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" /> no es un tipo de enumeración.
O bien, <typeparamref name="TEnum" /> se declaró con <see cref="T:System.FlagsAttribute" />.
O bien <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">El valor enumerado convertido en <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a GeneralizedTime with a specified tag.">Lee el siguiente valor como GeneralizedTime con una etiqueta especificada.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 24).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The decoded value.">El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Integer with a specified tag.">Lee el siguiente valor como un entero con una etiqueta especificada.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The decoded value.">El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Integer with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Lee el siguiente valor como un entero con una etiqueta especificada y devuelve el contenido como <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The bytes of the Integer value, in signed big-endian form.">Los bytes del valor entero, en formato big endian con signo.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag.">Lee el siguiente valor como NamedBitList con una etiqueta especificada.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">La etiqueta que se va a comprobar antes de leer.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The bits from the encoded value.">Los bits del valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Lee el siguiente valor como NamedBitList con una etiqueta especificada y lo convierte en la enumeración [<see cref="T:System.FlagsAttribute" />] especificada por <paramref name="flagsEnumType" />.</summary>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">Objeto de tipo que representa el tipo de destino.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">La etiqueta que se va a comprobar antes de leer.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" /> no es un tipo de enumeración.
O bien, <paramref name="flagsEnumType" /> no se declaró con <see cref="T:System.FlagsAttribute" /> o <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" /> es <see langword="null" /></exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">El valor de NamedBitList convertido en <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Lee el siguiente valor como NamedBitList con una etiqueta especificada y lo convierte en la enumeración [<see cref="T:System.FlagsAttribute" />] especificada por <typeparamref name="TFlagsEnum" />.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">La etiqueta que se va a comprobar antes de leer.</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">Tipo de enumeración de destino</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, el valor codificado es demasiado grande para ajustarse a un valor <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" /> no es un tipo de enumeración.
O bien, <typeparamref name="TFlagsEnum" /> no se declaró con <see cref="T:System.FlagsAttribute" /> o <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">El valor de NamedBitList convertido en <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NULL with a specified tag.">Lee el siguiente valor como NULL con una etiqueta especificada.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 5).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OBJECT IDENTIFIER with a specified tag, returning the value in a dotted decimal format string.">Lee el siguiente valor como un IDENTIFICADOR DE OBJETO con una etiqueta especificada y devuelve el valor en una cadena con formato decimal con puntos.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 6).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The object identifier value in a dotted decimal format string.">Valor del identificador de objeto en una cadena de formato decimal con puntos.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with tag UNIVERSAL 4, returning the value in a byte array.">Lee el siguiente valor como una CADENA DE OCTETOS con la etiqueta UNIVERSAL 4 y devuelve el valor en una matriz de bytes.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">Una copia del valor en una matriz recién asignada de tamaño preciso.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SEQUENCE or SEQUENCE-OF with the specified tag and returns the result as a new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Lee el siguiente valor como SEQUENCE o SEQUENCE-OF con la etiqueta especificada y devuelve el resultado como un nuevo lector situado en el primer valor de la secuencia (o con <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 16).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Un nuevo lector situado en el primer valor de la secuencia (o con <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Lee el siguiente valor como un SET-OF con la etiqueta especificada y devuelve el resultado como un nuevo lector situado en el primer valor de Set-Of (o con <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">
        <see langword="true" /> para aceptar siempre los datos en el orden en que se presentan, <see langword="false" /> para comprobar que los datos se ordenan correctamente cuando las reglas de codificación indican que se requiere la ordenación (CER y DER).</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Un nuevo lector situado en el primer valor de Set-Of (o con <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;), using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification&quot; /&gt; value from the constructor (default &lt;see langword=&quot;false&quot; /&gt;).">Lee el siguiente valor como SET-OF con la etiqueta especificada y devuelve el resultado como un nuevo lector situado en el primer valor de Set-Of (o con <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />), utilizando el valor <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> del constructor (valor predeterminado <see langword="false" />).</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Un nuevo lector situado en el primer valor de Set-Of (o con <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag.">Lee el siguiente valor como UTCTime con una etiqueta especificada.</summary>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.">El año más grande que se va a representar con este valor.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The decoded value.">El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax&quot; /&gt; value from options passed to the constructor (with a default of 2049).">Lee el siguiente valor como UTCTime con una etiqueta especificada utilizando el valor de <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> de las opciones que se pasan al constructor (con un valor predeterminado de 2049).</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="The decoded value.">El valor descodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary vsli:raw="Throws a standardized &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; if the reader has remaining data, performs no function if &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Produce un <see cref="T:System.Formats.Asn1.AsnContentException" /> estandarizado si el lector tiene datos restantes; no realiza ninguna función si <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> devuelve <see langword="false" />.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, copying the value into a provided destination buffer.">Lee el siguiente valor como una CADENA DE BITS con una etiqueta especificada y copia el valor en un búfer de destino proporcionado.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">El búfer en el que se va a escribir.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">Si la operación se realiza correctamente, recibe el número de bits en el último byte que el escritor comunicó como "sin usar".</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Si la operación se realiza correctamente, recibe el número de bytes escritos en <paramref name="destination" />.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> y avanza el lector si <paramref name="destination" /> tenía suficiente longitud para recibir el valor; en caso contrario, <see langword="false" /> y el lector no avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, copying the decoded value into a provided destination buffer.">Lee el siguiente valor como cadena de caracteres con la etiqueta y el tipo de codificación especificados y copia el valor descodificado en un búfer de destino proporcionado.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">El búfer en el que se va a escribir.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">Uno de los valores de enumeración que representa el tipo de valor que se va a procesar.</param>
      <param name="charsWritten" vsli:raw="On success, receives the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.">Si la operación se ejecuta correctamente, recibe el número de caracteres escritos en <paramref name="destination" />.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta universal adecuada para el tipo de codificación solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" /> no es un tipo de cadena de caracteres conocido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.
O bien, la cadena no se descodificó correctamente.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es igual que <paramref name="encodingType" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> y avanza el lector si <paramref name="destination" /> tenía suficiente longitud para recibir el valor; en caso contrario, <see langword="false" /> y el lector no avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary vsli:raw="Reads the next value as character string with the specified tag, copying the unprocessed bytes into a provided destination buffer.">Lee el siguiente valor como cadena de caracteres con la etiqueta especificada y copia los bytes sin procesar en un búfer de destino proporcionado.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">El búfer en el que se va a escribir.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">La etiqueta que se va a comprobar antes de leer.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Si la operación se realiza correctamente, recibe el número de bytes escritos en <paramref name="destination" />.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es un tipo de etiqueta de cadena de caracteres.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> y avanza el lector si <paramref name="destination" /> tenía suficiente longitud para recibir el valor; en caso contrario, <see langword="false" /> y el lector no avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 32-bit value.">Intenta leer el siguiente valor como un entero con una etiqueta especificada, como un valor de 32 bits con signo.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">Si la operación se ejecuta correctamente, recibe el valor descodificado.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">
        <see langword="false" /> y no avanza el lector si el valor no está entre <see cref="F:System.Int32.MinValue" /> y <see cref="F:System.Int32.MaxValue" />, ambos incluidos; en caso contrario, se devuelve <see langword="true" /> y el lector avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 64-bit value.">Intenta leer el siguiente valor como un entero con una etiqueta especificada, como un valor de 64 bits con signo.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">Si la operación se ejecuta correctamente, recibe el valor descodificado.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">
        <see langword="false" /> y no avanza el lector si el valor no está entre <see cref="F:System.Int64.MinValue" /> y <see cref="F:System.Int64.MaxValue" />, ambos incluidos; en caso contrario, se devuelve <see langword="true" /> y el lector avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with a specified tag, copying the value into a provided destination buffer.">Lee el valor siguiente como una CADENA DE OCTETOS con una etiqueta especificada, copiando el valor en un búfer de destino proporcionado.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">El búfer en el que se va a escribir.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Si la operación se realiza correctamente, recibe el número de bytes escritos en <paramref name="destination" />.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> y avanza el lector si <paramref name="destination" /> tenía suficiente longitud para recibir el valor; en caso contrario, <see langword="false" /> y el lector no avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Lee el siguiente valor como una CADENA DE BITS con una etiqueta especificada y devuelve el contenido como <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales.</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">Si la operación se realiza correctamente, recibe el número de bits en el último byte que el escritor comunicó como "sin usar".</param>
      <param name="value" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the BIT STRING.">Si la operación se ejecuta correctamente, recibe <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales correspondientes al valor de la CADENA DE BITS.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the BIT STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">
        <see langword="true" /> y avanza el lector si el valor de la CADENA DE BITS tenía una codificación primitiva, <see langword="false" /> y no avanza el lector si tenía una codificación construida.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary vsli:raw="Reads the next value as a character with a specified tag, returning the contents as an unprocessed &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Lee el siguiente valor como un carácter con una etiqueta especificada y devuelve el contenido como <see cref="T:System.ReadOnlyMemory`1" /> sin procesar sobre los datos originales.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">La etiqueta que se va a comprobar antes de leer.</param>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the character string.">Si la operación se ejecuta correctamente, recibe <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales correspondientes al valor de la cadena de caracteres.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es un tipo de etiqueta de cadena de caracteres.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the character string value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">
        <see langword="true" /> y avanza el lector si el valor de la cadena de caracteres tenía una codificación primitiva; <see langword="false" /> y no avanza el lector si tenía una codificación construida.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an OCTET STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Intenta leer el siguiente valor como una CADENA DE OCTETOS con una etiqueta especificada y devuelve el contenido como <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales.</summary>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the OCTET STRING.">Si la operación se ejecuta correctamente, recibe <see cref="T:System.ReadOnlyMemory`1" /> sobre los datos originales correspondientes al valor de la CADENA DE OCTETOS.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">La etiqueta que se va a comprobar antes de leer.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the OCTET STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">
        <see langword="true" /> y avanza el lector si el valor de la CADENA DE OCTETOS tenía una codificación primitiva, <see langword="false" /> y no avanza el lector si tenía una codificación construida.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 32-bit value.">Intenta leer el siguiente valor como un entero con una etiqueta especificada, como un valor de 32 bits sin signo.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">Si la operación se ejecuta correctamente, recibe el valor descodificado.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">
        <see langword="false" /> y no avanza el lector si el valor no está entre <see cref="F:System.UInt32.MinValue" /> y <see cref="F:System.UInt32.MaxValue" />, ambos incluidos; en caso contrario, se devuelve <see langword="true" /> y el lector avanza.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 64-bit value.">Intenta leer el siguiente valor como un entero con una etiqueta especificada, como un valor de 64 bits sin signo.</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">Si la operación se ejecuta correctamente, recibe el valor descodificado.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a comprobar antes de leer, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">El siguiente valor no tiene la etiqueta correcta.
O bien, la codificación de longitud no es válida bajo las reglas de codificación actuales.
O bien, el contenido no es válido bajo las reglas de codificación actuales.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">
        <see langword="false" /> y no avanza el lector si el valor no está entre <see cref="F:System.UInt64.MinValue" /> y <see cref="F:System.UInt64.MaxValue" />, ambos incluidos; en caso contrario, se devuelve <see langword="true" /> y el lector avanza.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary vsli:raw="Gets an indication of whether the reader has remaining data available to process.">Obtiene una indicación de si el lector tiene datos restantes disponibles para su procesamiento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is more data available for the reader to process; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si hay más datos disponibles para que los procese el lector; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this reader.">Obtiene las reglas de codificación que usa este lector.</summary>
      <returns vsli:raw="The encoding rules in use by this reader.">Las reglas de codificación que usa este lector.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary vsli:raw="Specifies options that modify the behavior of an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt;.">Especifica las opciones que modifican el comportamiento de un objeto <see cref="T:System.Formats.Asn1.AsnReader" />.</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary vsli:raw="Gets or sets a value that indicates whether the reader should bypass sort ordering on a Set or Set-Of value.">Obtiene o establece un valor que indica si el lector debe omitir el orden de ordenación en un conjunto o conjunto de valores.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should not validate that a Set or Set-Of value is sorted correctly for the current encoding rules; otherwise &lt;see langword=&quot;false&quot; /&gt;.&#xA;              The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si el lector no debe validar que un conjunto o conjunto de valores está ordenado correctamente para las reglas de codificación actuales; en caso contrario, <see langword="false" /> .
De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary vsli:raw="Gets or sets the largest year to represent with a UtcTime value.">Obtiene o establece el año más grande que se va a representar con un valor de UtcTime.</summary>
      <returns vsli:raw="The largest year to represent with a UtcTime value. The default is 2049.">El año más grande que se va a representar con un valor de UtcTime. El valor predeterminado es 2049.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary vsli:raw="A writer for BER-, CER-, and DER-encoded ASN.1 data.">Un escritor de datos de ASN. 1 con codificación de BER, CER y DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary vsli:raw="Create a new &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt; with a given set of encoding rules.">Cree un nuevo <see cref="T:System.Formats.Asn1.AsnWriter" /> con un conjunto determinado de reglas de codificación.</summary>
      <param name="ruleSet" vsli:raw="The encoding constraints for the writer.">Las restricciones de codificación para el escritor.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> no está definido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Copy the value of this writer into another.">Copie el valor de este escritor en otro.</summary>
      <param name="destination" vsli:raw="The writer to receive the value.">El escritor que va a recibir el valor.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.&#xA;             -or- &#xA;               This writer is empty.&#xA;             -or- &#xA;               This writer represents more than one top-level value.&#xA;             -or- &#xA;               This writer's value is encoded in a manner that is not compatible with the ruleset for the destination writer.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> no se ha cerrado a través de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.
O bien, este escritor está vacío.
O bien, este escritor representa más de un valor de nivel superior.
O bien, el valor de este escritor se codifica de una manera que no es compatible con el conjunto de reglas del escritor de destino.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary vsli:raw="Return a new array containing the encoded value.">Devuelve una nueva matriz que contiene el valor codificado.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> no se ha cerrado a través de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="A precisely-sized array containing the encoded value.">Un matriz de tamaño preciso que contiene el valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">Escribe la representación codificada de los datos en <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">El búfer en el que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> no se ha cerrado a través de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Número de bytes escritos en <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">Determina si <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> generaría una salida idéntica a <paramref name="other" />.</summary>
      <param name="other" vsli:raw="The instance to compare encoded values against.">Instancia con la que se van a comparar los valores codificados.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> no se ha cerrado a través de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si los datos codificados pendientes son idénticos a <paramref name="other" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">Determina si <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> generaría una salida idéntica a <paramref name="other" />.</summary>
      <param name="other" vsli:raw="The encoded value to compare against.">Valor codificado con el que se va a comparar.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> no se ha cerrado a través de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si los datos codificados pendientes son idénticos a <paramref name="other" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary vsli:raw="Gets the number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">Obtiene el número de bytes que <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> escribiría.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; was called without the corresponding Pop method.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, o <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> se llamó sin el método Pop correspondiente.</exception>
      <returns vsli:raw="The number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">El número de bytes que <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> escribirá.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Octet String with the tag UNIVERSAL 4 is closed, returning the writer to the parent context.">Indica que la cadena de octetos abiertos con la etiqueta UNIVERSAL 4 está cerrada y devuelve el escritor al contexto primario.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within an Octet String with the specified tag.">El escritor no está colocado actualmente dentro de una cadena de octetos con la etiqueta especificada.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Sequence with the specified tag is closed, returning the writer to the parent context.">Indica que la secuencia abierta con la etiqueta especificada está cerrada y se devuelve el escritor al contexto principal.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 16).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Sequence with the specified tag.">El escritor no está colocado actualmente dentro de una secuencia con la etiqueta especificada.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Set-Of with the specified tag is closed, returning the writer to the parent context.">Indica que Set-Of abierto con la etiqueta especificada está cerrado y se devuelve el escritor al contexto principal.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 17).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Set-Of with the specified tag.">El escritor no está colocado actualmente dentro de un Set-Of con la etiqueta especificada.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing an Octet String value with a specified tag.">Comience a escribir un valor de cadena de octetos con una etiqueta especificada.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Un valor descartable que llamará automáticamente a <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Sequence with a specified tag.">Comience a escribir una secuencia con una etiqueta especificada.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 16).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Un valor descartable que llamará automáticamente a <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Set-Of with a specified tag.">Comience a escribir un elemento Set-Of con una etiqueta especificada.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 17).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Un valor descartable que llamará automáticamente a <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary vsli:raw="Reset the writer to have no data, without releasing resources.">Restablezca el escritor para que no tenga datos, sin liberar recursos.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">Intenta escribir la representación codificada de los datos en <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">El búfer en el que se va a escribir.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Si la operación se realiza correctamente, recibe el número de bytes escritos en <paramref name="destination" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> no se ha cerrado a través de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> o <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the encode succeeded, &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is too small.">
        <see langword="true" /> si la codificación se realiza correctamente, <see langword="false" /> si <paramref name="destination" /> es demasiado pequeño.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Bit String value with a specified tag.">Escriba un valor de cadena de bits con una etiqueta especificada.</summary>
      <param name="value" vsli:raw="The value to write.">Valor que se va a escribir.</param>
      <param name="unusedBitCount" vsli:raw="The number of trailing bits which are not semantic.">El número de bits finales que no son semánticos.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has length 0 and &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not 0 &#xA;               -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not empty and any of the bits identified by &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is set.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="value" /> tiene una longitud 0 y <paramref name="unusedBitCount" /> no es 0. O bien <paramref name="value" /> no está vacío y se ha establecido cualquiera de los bits identificados por <paramref name="unusedBitCount" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not in the range [0,7].">
        <paramref name="unusedBitCount" /> no está en el intervalo [0,7].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Boolean value with a specified tag.">Escribe un valor booleano con una etiqueta especificada.</summary>
      <param name="value" vsli:raw="The value to write.">Valor que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 1).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">Escriba la cadena proporcionada con el tipo de codificación especificado mediante la etiqueta especificada que corresponde al tipo de codificación.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">Uno de los valores de enumeración que representa la codificación que se va a utilizar.</param>
      <param name="str" vsli:raw="The string to write.">Cadena que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta universal que es adecuada para el tipo de codificación solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" /> no es un tipo de codificación de cadena de caracteres restringido.
O bien, <paramref name="encodingType" /> es un tipo de codificación de cadena de caracteres restringido que actualmente no es compatible con este método.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">Escriba la cadena proporcionada con el tipo de codificación especificado mediante la etiqueta especificada que corresponde al tipo de codificación.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">Uno de los valores de enumeración que representa la codificación que se va a utilizar.</param>
      <param name="value" vsli:raw="The string to write.">Cadena que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta universal que es adecuada para el tipo de codificación solicitado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="value" /> es <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" /> no es un tipo de codificación de cadena de caracteres restringido.
O bien, <paramref name="encodingType" /> es un tipo de codificación de cadena de caracteres restringido que actualmente no es compatible con este método.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Write a single value which has already been encoded.">Escriba un solo valor que ya se haya codificado.</summary>
      <param name="value" vsli:raw="The value to write.">Valor que se va a escribir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; could not be read under the current encoding rules.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has data beyond the end of the first value.">
        <paramref name="value" /> no se pudo leer bajo las reglas de codificación actuales.
O bien, <paramref name="value" /> tiene datos más allá del final del primer valor.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">Escriba un valor de enumeración que es distinto de [<see cref="T:System.FlagsAttribute" />] como enumerado con la etiqueta UNIVERSAL 10.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">El valor de enumeración al que se le ha aplicado con conversión boxing que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="value" /> no es un valor de enumeración al que se le ha aplicado la conversión boxing.
O bien, el tipo de <paramref name="value" /> al que no se le ha aplicado la conversión boxing se ha declarado [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">Escriba un valor de enumeración que es distinto de [<see cref="T:System.FlagsAttribute" />] como enumerado con la etiqueta UNIVERSAL 10.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">El valor de enumeración al que se le ha aplicado con conversión boxing que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 10).</param>
      <typeparam name="TEnum" vsli:raw="The non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">Tipo de enumeración que no es [ <see cref="T:System.FlagsAttribute" /> ] que se va a escribir.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <typeparamref name="TEnum" /> no es una enumeración.
O bien, <typeparamref name="TEnum" /> se declara [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; as a GeneralizedTime with a specified UNIVERSAL 24, optionally excluding the fractional seconds.">Escribe el <see cref="T:System.DateTimeOffset" /> proporcionado como GeneralizedTime con una etiqueta UNIVERSAL 24 especificada, excluyendo opcionalmente las fracciones de segundo.</summary>
      <param name="value" vsli:raw="The value to write.">Valor que se va a escribir.</param>
      <param name="omitFractionalSeconds" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to treat the fractional seconds in &lt;paramref name=&quot;value&quot; /&gt; as 0 even if a non-zero value is present.">
        <see langword="true" /> para tratar las fracciones de segundo de <paramref name="value" /> como 0, incluso si hay un valor distinto de cero.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 24).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Escribe un valor entero con una etiqueta especificada.</summary>
      <param name="value" vsli:raw="The value to write.">Valor que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Escribe un valor entero con una etiqueta especificada.</summary>
      <param name="value" vsli:raw="The value to write.">Valor que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Escribe un valor entero con una etiqueta especificada.</summary>
      <param name="value" vsli:raw="The integer value to write, in signed big-endian byte order.">El valor entero que se va a escribir, en el orden de bytes big endian con signo.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all set.&#xA;             -or- &#xA;               the 9 most significant bits are all unset.">Los 9 bits más significativos están establecidos.
O bien, los 9 bits más significativos no se han establecido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Escribe un valor entero con una etiqueta especificada.</summary>
      <param name="value" vsli:raw="The value to write.">Valor que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Escribe un valor entero con una etiqueta especificada.</summary>
      <param name="value" vsli:raw="The integer value to write, in unsigned big-endian byte order.">El valor entero que se va a escribir, en el orden de bytes big endian sin signo.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all unset.">Los 9 bits más significativos están anulados.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a bit array value as a NamedBitList with a specified tag.">Escriba un valor de matriz de bits como NamedBitList con una etiqueta especificada.</summary>
      <param name="value" vsli:raw="The bits to write.">Los bits que se van a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">Escriba un valor de enumeración [<see cref="T:System.FlagsAttribute" />] como NamedBitList con una etiqueta especificada.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">Valor de enumeración al que se le ha aplicado con conversión boxing que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="value" /> no es un valor de enumeración al que se le ha aplicado la conversión boxing.
O bien, el tipo al que no se le ha aplicado la conversión boxing <paramref name="value" /> no se ha declarado [<see cref="T:System.FlagsAttribute" />].</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">Escriba un valor de enumeración [<see cref="T:System.FlagsAttribute" />] como NamedBitList con una etiqueta especificada.</summary>
      <param name="value" vsli:raw="The enumeration value to write.">El valor de enumeración que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 3).</param>
      <typeparam name="TEnum" vsli:raw="The [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">Tipo de <see cref="T:System.FlagsAttribute" /> enumeración [] que se va a escribir.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum value.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <typeparamref name="TEnum" /> no es un valor de enumeración.
O bien, <typeparamref name="TEnum" /> no se ha declarado como [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write NULL with a specified tag.">Escriba NULL con una etiqueta especificada.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 5).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">Escriba un identificador de objeto con una etiqueta especificada.</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">El identificador de objeto que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 6).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="oidValue" /> no es un identificador de objeto decimal con puntos válido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">Escriba un identificador de objeto con una etiqueta especificada.</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">El identificador de objeto que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 6).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.
O bien, <paramref name="oidValue" /> no es un identificador de objeto decimal con puntos válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oidValue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oidValue" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Octet String value with a specified tag.">Escriba un valor de cadena de octetos con una etiqueta especificada.</summary>
      <param name="value" vsli:raw="The value to write.">Valor que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">La etiqueta que se va a escribir o <see langword="null" /> para la etiqueta predeterminada (Universal 4).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, provided the year is in the allowed range.">Escriba el valor proporcionado como UTCTime con una etiqueta especificada, siempre que el año esté en el intervalo permitido.</summary>
      <param name="value" vsli:raw="The value to write.">Valor que se va a escribir.</param>
      <param name="twoDigitYearMax" vsli:raw="The maximum valid year for &lt;paramref name=&quot;value&quot; /&gt;, after conversion to UTC.&#xA;              For the X.509 Time.utcTime range of 1950-2049, pass &lt;c&gt;2049&lt;/c&gt;.">El año válido máximo para <paramref name="value" />, después de la conversión a UTC.
Para el intervalo Time.utcTime X.509 de 1950-2049, pase <c>2049</c>.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 23).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt;.&lt;see cref=&quot;P:System.DateTimeOffset.Year&quot; /&gt; (after conversion to UTC) is not in the range (&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; - 100, &lt;paramref name=&quot;twoDigitYearMax&quot; /&gt;].">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (después de la conversión a UTC) no está en el intervalo (<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, accepting the two-digit year as valid in context.">Escriba el valor proporcionado como UTCTime con una etiqueta especificada y acepte el año de dos dígitos como válido en contexto.</summary>
      <param name="value" vsli:raw="The value to write.">Valor que se va a escribir.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">La etiqueta que se va a escribir, o <see langword="null" /> para la etiqueta predeterminada (Universal 23).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> es <see cref="F:System.Formats.Asn1.TagClass.Universal" />, pero <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> no es correcto para el método.</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this writer.">Obtiene las reglas de codificación que este escritor usa.</summary>
      <returns vsli:raw="The encoding rules in use by this writer.">Las reglas de codificación que usa este escritor.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; target for safely closing an opened tag by using a lexical scope as a logical scope.">Proporciona un destino <see cref="T:System.IDisposable" /> para cerrar de manera segura una etiqueta abierta usando un ámbito léxico como ámbito lógico.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary vsli:raw="Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.">Realiza tareas definidas por la aplicación asociadas a la liberación o al restablecimiento de recursos no administrados.</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary vsli:raw="The tag class for a particular ASN.1 tag.">La clase de etiqueta para una etiqueta ASN.1 determinada.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary vsli:raw="The Application tag class.">La clase de etiqueta de aplicación</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary vsli:raw="The Context-Specific tag class.">La clase de etiqueta específica del contexto</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary vsli:raw="The Private tag class.">La clase de etiqueta privada</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary vsli:raw="The Universal tag class.">La clase de etiqueta universal</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary vsli:raw="Tag assignments for the UNIVERSAL class in ITU-T X.680.">Asignaciones de etiquetas para la clase UNIVERSAL en ITU-T X.680.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary vsli:raw="The universal class tag value for Bit String.">Valor de la etiqueta de clase universal para una cadena de bits.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary vsli:raw="The universal class tag value for BMPString.">Valor de la etiqueta de clase universal para BMPString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary vsli:raw="The universal class tag value for Boolean.">Valor de la etiqueta de clase universal para un valor booleano.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary vsli:raw="The universal class tag value for Date.">Valor de la etiqueta de clase universal para Date.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary vsli:raw="The universal class tag value for Date-Time.">Valor de la etiqueta de clase universal para Date-Time.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary vsli:raw="The universal class tag value for Duration.">Valor de la etiqueta de clase universal para Duration.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary vsli:raw="The universal class tag value for Embedded-PDV.">Valor de la etiqueta de clase universal para Embedded-PDV.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary vsli:raw="The reserved identifier for the End-of-Contents marker in an indefinite length encoding.">Identificador reservado para el marcador de fin de contenido en una codificación de longitud indefinida.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary vsli:raw="The universal class tag value for Enumerated.">Valor de la etiqueta de clase universal para Enumerated.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary vsli:raw="The universal class tag value for External.">Valor de la etiqueta de clase universal para External.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary vsli:raw="The universal class tag value for GeneralizedTime.">Valor de la etiqueta de clase universal para GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary vsli:raw="The universal class tag value for GeneralString.">Valor de la etiqueta de clase universal para GeneralString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary vsli:raw="The universal class tag value for GraphicString.">Valor de la etiqueta de clase universal para GraphicString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary vsli:raw="The universal class tag value for IA5String.">Valor de la etiqueta de clase universal para IA5String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary vsli:raw="The universal class tag value for Instance-Of.">Valor de la etiqueta de clase universal para Instance-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary vsli:raw="The universal class tag value for Integer.">Valor de la etiqueta de clase universal para un entero.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary vsli:raw="The universal class tag value for ISO646String (VisibleString).">Valor de la etiqueta de clase universal para ISO646String (VisibleString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary vsli:raw="The universal class tag value for Null.">Valor de la etiqueta de clase universal para un valor NULL.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary vsli:raw="The universal class tag value for NumericString.">Valor de la etiqueta de clase universal para NumericString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary vsli:raw="The universal class tag value for Object Descriptor.">El valor de la etiqueta de clase universal para un descriptor de objeto.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Object Identifier.">El valor de la etiqueta de clase universal para un identificador de objeto.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Object Identifier Internationalized Resource Identifier (IRI).">El valor de la etiqueta de clase universal para un identificador de recursos internacionalizado de identificador de objetos (IRI).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary vsli:raw="The universal class tag value for Octet String.">El valor de la etiqueta de clase universal para una cadena de octeto.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary vsli:raw="The universal class tag value for PrintableString.">Valor de la etiqueta de clase universal para PrintableString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary vsli:raw="The universal class tag value for Real.">Valor de la etiqueta de clase universal para Real.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier.">Valor de la etiqueta de clase universal para un identificador de objeto relativo.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier Internationalized Resource Identifier (IRI).">Valor de la etiqueta de clase universal para el identificador de recursos internacionalizado (IRI) del identificador de objeto relativo.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary vsli:raw="The universal class tag value for Sequence.">Valor de la etiqueta de clase universal para Sequence.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary vsli:raw="The universal class tag value for Sequence-Of.">Valor de la etiqueta de clase universal para Sequence-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary vsli:raw="The universal class tag value for Set.">Valor de la etiqueta de clase universal para Set.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary vsli:raw="The universal class tag value for Set-Of.">Valor de la etiqueta de clase universal para Set-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary vsli:raw="The universal class tag value for T61String (TeletexString).">Valor de la etiqueta de clase universal para T61String (TeletexString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary vsli:raw="The universal class tag value for TeletexString (T61String).">Valor de la etiqueta de clase universal para TeletexString (T61String).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary vsli:raw="The universal class tag value for Time.">Valor de la etiqueta de clase universal para Time.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary vsli:raw="The universal class tag value for Time-Of-Day.">Valor de la etiqueta de clase universal para Time-Of-Day.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary vsli:raw="The universal class tag value for UniversalString.">Valor de la etiqueta de clase universal para UniversalString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary vsli:raw="The universal class tag value for an unrestricted character string.">Valor de la etiqueta de clase universal para una cadena de caracteres no restringida.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary vsli:raw="The universal class tag value for UTCTime.">Valor de la etiqueta de clase universal para UTCTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary vsli:raw="The universal class tag value for UTF8String.">Valor de la etiqueta de clase universal para UTF8String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary vsli:raw="The universal class tag value for VideotexString.">Valor de la etiqueta de clase universal para VideotexString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary vsli:raw="The universal class tag value for VisibleString (ISO646String).">Valor de la etiqueta de clase universal para VisibleString (ISO646String).</summary>
    </member>
  </members>
</doc>