<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Pkcs</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObject">
      <summary>包含型別以及與該型別關聯的數值集合。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)">
      <summary>使用由指定 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件所表示的屬性，初始化 <see cref="T:System.Security.Cryptography.Oid" /> 類別的新執行個體。</summary>
      <param name="oid">要儲存在這個 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件中的屬性。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)">
      <summary>使用由指定 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件所表示的屬性，以及與指定 <see cref="T:System.Security.Cryptography.Oid" /> 集合所表示的屬性關聯之數值集合，初始化 <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> 類別的新執行個體。</summary>
      <param name="oid">要儲存在這個 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件中的屬性。</param>
      <param name="values">與 <paramref name="oid" /> 參數表示的屬性相關聯的一組值。</param>
      <exception cref="T:System.InvalidOperationException">集合包含重複的項目。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Oid">
      <summary>取得指定屬性的物件識別項之 <see cref="T:System.Security.Cryptography.Oid" /> 物件。</summary>
      <returns>屬性的物件識別項。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Values">
      <summary>取得 <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> 集合，其中含有與屬性相關聯的數值集合。</summary>
      <returns>與屬性相關聯的一組值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectCollection">
      <summary>包含一組 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>初始化 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 類別的新執行個體，並將指定的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 加入至集合。</summary>
      <param name="attribute">加到集合中的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary>將指定的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 物件加入至集合。</summary>
      <param name="asnEncodedData">要新增到集合的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 物件。</param>
      <returns>如果方法傳回新增項目之以零起始的索引即為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>將指定的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件加入至集合。</summary>
      <param name="attribute">要新增到集合的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件。</param>
      <returns>如果方法傳回新增項目之以零起始的索引即為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
      <exception cref="T:System.InvalidOperationException">指定的項目已存在集合中。</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.CopyTo(System.Security.Cryptography.CryptographicAttributeObject[],System.Int32)">
      <summary>將 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合複製到 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件的陣列。</summary>
      <param name="array">要複製集合的目標 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件陣列。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，集合會被複製到此陣列。</param>
      <exception cref="T:System.ArgumentException">提供給方法的其中一個引數無效。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> 已傳遞至不會將其接受 (Accept) 為有效引數的方法。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引數值超出呼叫方法所定義值的容許範圍。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Count">
      <summary>取得集合中的項目數目。</summary>
      <returns>集合中的項目數目</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.GetEnumerator">
      <summary>取得集合的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> 物件。</summary>
      <returns>如果方法傳回可用來列舉集合的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> 物件即為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.IsSynchronized">
      <summary>取得值，指出集合的存取是否同步，或者具備執行緒安全。</summary>
      <returns>如果集合的存取具備執行緒安全則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Item(System.Int32)">
      <summary>取得集合中位於指定索引的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件。</summary>
      <param name="index">
        <see cref="T:System.Int32" /> 值，表示要擷取的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件之以零起始的索引。</param>
      <returns>位於指定索引處的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Remove(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>從集合中移除指定的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件。</summary>
      <param name="attribute">要從集合移除的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attribute" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.SyncRoot">
      <summary>取得用來同步存取集合的 <see cref="T:System.Object" /> 物件。</summary>
      <returns>物件，用來同步處理對集合<see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />的存取。 <see cref="T:System.Object" /></returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>從特定的索引開始，將這個 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合的項目複製到 <see cref="T:System.Array" /> 陣列。</summary>
      <param name="array">一維 <see cref="T:System.Array" /> 陣列，表示從這個 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 複製過來之項目的目的端。 <see cref="T:System.Array" /> 陣列必須有以零起始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回逐一查看 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合的列舉值。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 物件，可用於逐一查看 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator">
      <summary>提供 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合的列舉功能。 這個類別無法被繼承。</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current">
      <summary>從 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 集合中取得目前的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 物件。</summary>
      <returns>表示 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 集合中目前密碼編譯屬性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 物件。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext">
      <summary>將列舉型別推進至 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 集合中的下一個 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 物件。</summary>
      <returns>如果列舉型別成功移動到下一個 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 物件則為 <see langword="true" />，如果列舉值已到達列舉型別的結尾，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset">
      <summary>將列舉型別重設為 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 集合中的第一個 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 物件。</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>從 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 集合中取得目前的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 物件。</summary>
      <returns>表示 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 集合中目前密碼編譯屬性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 物件。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 類別，定義用於密碼編譯作業的演算法。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor" /> 建構函式使用一組預設參數建立 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 類別的執行個體。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)" /> 建構函式使用指定的演算法識別項，建立 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 類別的執行個體。</summary>
      <param name="oid">演算法的物件識別項。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)" /> 建構函式使用指定的演算法識別項和金鑰長度建立 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 類別的執行個體。</summary>
      <param name="oid">演算法的物件識別項。</param>
      <param name="keyLength">金鑰的長度 (位元數)。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength" /> 屬性會設定或擷取金鑰長度 (位元數)。 使用固定金鑰長度的演算法不使用此屬性。</summary>
      <returns>int 值表示金鑰長度 (位元數)。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid" /> 屬性會設定或擷取指定演算法之物件識別項的 <see cref="T:System.Security.Cryptography.Oid" /> 物件。</summary>
      <returns>表示演算法的物件。 <see cref="T:System.Security.Cryptography.Oid" /></returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters" /> 屬性會設定或擷取任何演算法所需要的參數。</summary>
      <returns>位元組值陣列，指定演算法所需要的任何參數。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipient">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 類別定義 CMS/PKCS #7 訊息的收件者。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>使用指定的憑證和收件者識別碼類型，並使用公開金鑰演算法的預設加密模式，初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 類別的新執行個體。</summary>
      <param name="recipientIdentifierType">用於識別所要使用收件者憑證的配置。</param>
      <param name="certificate">為此收件者進行加密時要使用的憑證。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">不支援 <paramref name="recipientIdentifierType" /> 值。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>使用指定的 RSA 憑證、RSA 加密填補和主體識別碼，初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 類別的新執行個體。</summary>
      <param name="recipientIdentifierType">用於識別所要使用收件者憑證的配置。</param>
      <param name="certificate">為此收件者進行加密時要使用的憑證。</param>
      <param name="rsaEncryptionPadding">為此收件者進行加密時要使用的 RSA 填補模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 或 <paramref name="rsaEncryptionPadding" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 參數公開金鑰無法辨識為 RSA 公開金鑰。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>使用指定的憑證，並使用公開金鑰演算法的預設加密模式和 <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> 主體識別碼，初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 類別的新執行個體。</summary>
      <param name="certificate">為此收件者進行加密時要使用的憑證。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>使用指定的 RSA 憑證和 RSA 加密填補，並使用 <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> 主體識別碼，初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 類別的新執行個體。</summary>
      <param name="certificate">為此收件者進行加密時要使用的憑證。</param>
      <param name="rsaEncryptionPadding">為此收件者進行加密時要使用的 RSA 填補模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 或 <paramref name="rsaEncryptionPadding" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 參數公開金鑰無法辨識為 RSA 公開金鑰。
-或-
不支援 <paramref name="recipientIdentifierType" /> 值。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate">
      <summary>取得為此收件者進行加密時要使用的憑證。</summary>
      <returns>為此收件者進行加密時要使用的憑證。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType">
      <summary>取得用於識別所要使用收件者憑證的配置。</summary>
      <returns>用於識別所要使用收件者憑證的配置。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RSAEncryptionPadding">
      <summary>取得為此收件者進行加密時要使用的 RSA 加密填補。</summary>
      <returns>為此收件者加密時要使用的 RSA 加密填補。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 類別表示一組 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 物件。 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 會實作 <see cref="T:System.Collections.ICollection" /> 介面。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor" /> 建構函式會建立 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 建構函式會建立 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 類別的執行個體，並加入指定的收件者。</summary>
      <param name="recipient">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 類別的執行個體，表示指定的 CMS/PKCS #7 收件者。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> 建構函式會建立 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 類別的執行個體，並根據指定的主旨識別項和識別收件者的憑證組來加入收件者。</summary>
      <param name="recipientIdentifierType">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 列舉型別的成員，指定主旨識別項的型別。</param>
      <param name="certificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 集合，包含識別收件者的憑證。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 方法會將收件者加入至 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合。</summary>
      <param name="recipient">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 物件，表示要加入至 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合的收件者。</param>
      <returns>如果方法成功，方法會傳回 <see cref="T:System.Int32" /> 值，表示要插入收件者之以零起始的位置。
如果方法失敗，就會擲回例外狀況。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)" /> 方法可複製 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合至陣列。</summary>
      <param name="array">
        <see cref="T:System.Array" /> 物件，<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合會複製到該物件。</param>
      <param name="index">
        <paramref name="array" />中以零起始的索引，其中複製 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 的大小無法容納指定項目。
-或-
<paramref name="array" /> 未包含適當的維度數。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 在 <paramref name="array" /> 的元素範圍之外。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)" /> 方法可複製 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合至 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 陣列。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 物件的陣列中，<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合會複製到該陣列。</param>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 集合會複製到 <paramref name="array" /> 中之 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 物件陣列以零起始的索引。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 的大小無法容納指定項目。
-或-
<paramref name="array" /> 未包含適當的維度數。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 在 <paramref name="array" /> 的元素範圍之外。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count" /> 屬性擷取 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中的項目數目。</summary>
      <returns>
        <see cref="T:System.Int32" /> 值，表示集合中的項目數目。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator" /> 方法傳回 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 集合的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 物件，可用於列舉 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized">
      <summary>不論是以同步方式或是以執行緒安全方式來存取集合，<see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized" /> 屬性都會進行擷取。 這個屬性一律傳回 <see langword="false" />，表示此集合並不具備執行緒安全。</summary>
      <returns>
        <see langword="false" /> 的 <see cref="T:System.Boolean" /> 值，表示集合不具備執行緒安全。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)" /> 屬性會擷取位於集合中指定索引的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 物件。</summary>
      <param name="index">
        <see cref="T:System.Int32" /> 值，表示集合中的索引。 索引以零起始。</param>
      <returns>在指定索引處的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 物件。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">引數值超出呼叫方法所定義值的容許範圍。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 方法會從 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合移除收件者。</summary>
      <param name="recipient">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 物件，表示要從集合移除的收件者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot" /> 屬性會擷取 <see cref="T:System.Object" /> 物件，其用來同步存取 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合。</summary>
      <returns>
        <see cref="T:System.Object" /> 物件，用來同步存取 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator" /> 方法傳回 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 集合的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 物件，可用於列舉 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 類別提供 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合的列舉功能。 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 會實作 <see cref="T:System.Collections.IEnumerator" /> 介面。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current" /> 屬性從 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 集合中擷取目前的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 集合中，代表目前收件者的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 物件。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext" /> 方法會將列舉前移至 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 集合中的下一個 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 物件。</summary>
      <returns>如果列舉成功移動到下一個 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 物件，則為 <see langword="true" />，如果列舉已移過列舉中的最後一項，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset" /> 方法會將列舉重設為 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 集合中的第一個 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 物件。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current" /> 屬性從 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 集合中擷取目前的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 集合中，代表目前收件者的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 物件。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsSigner">
      <summary>代表 CMS/PKCS # 7 已簽署訊息的可能簽署者。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor">
      <summary>使用預設值，初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>從保留金鑰初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 類別的新執行個體。</summary>
      <param name="parameters">用來描述所要使用簽署金鑰的 CSP 參數。</param>
      <exception cref="T:System.PlatformNotSupportedException">僅限 .NET Core：不支援此成員。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>使用指定的主體識別碼類型，初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 類別的新執行個體。</summary>
      <param name="signerIdentifierType">用於識別所要使用簽署憑證的配置。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>使用指定的簽署者憑證和主體識別碼類型，初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 類別的新執行個體。</summary>
      <param name="signerIdentifierType">用於識別所要使用簽署憑證的配置。</param>
      <param name="certificate">其私密金鑰將用於簽署訊息的憑證。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>使用指定的簽署者憑證、主體識別碼類型和私密金鑰物件，初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 類別的新執行個體。</summary>
      <param name="signerIdentifierType">其中一個列舉值，指定要用於識別所要使用簽署憑證的配置。</param>
      <param name="certificate">其私密金鑰將用於簽署訊息的憑證。</param>
      <param name="privateKey">簽署訊息時要使用的私用金鑰物件。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>使用指定的簽署者憑證，初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 類別的新執行個體。</summary>
      <param name="certificate">其私密金鑰將用於簽署訊息的憑證。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> 屬性會設定或擷取表示簽章憑證的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件。</summary>
      <returns>代表簽署憑證的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificates">
      <summary>取得被視為 <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /> 和 <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" /> 之憑證的集合。</summary>
      <returns>視為 <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /> 和 <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" />的憑證集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.DigestAlgorithm">
      <summary>取得或設定要與簽章搭配使用的雜湊演算法演算法識別碼。</summary>
      <returns>要與簽章搭配使用之雜湊演算法的演算法識別碼。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption">
      <summary>取得或設定選項，指出簽署者憑證之憑證鏈結應該內嵌在已簽署訊息中的數量。</summary>
      <returns>其中一個列舉值，表示簽署者憑證的憑證鏈應該內嵌在已簽署訊息中的數量。</returns>
      <exception cref="T:System.ArgumentException">提供給方法的其中一個引數無效。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.PrivateKey">
      <summary>取得或設定要在簽署期間使用的私密金鑰物件。</summary>
      <returns>簽章期間要使用的私密金鑰，或 <see langword="null" /> 使用與 <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> 屬性相關聯的私密金鑰。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes">
      <summary>取得與這個簽章建立關聯的屬性集合，這些集合也受到此簽章保護。</summary>
      <returns>與這個簽章相關聯的屬性集合，這些簽章也會受到簽章的保護。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignerIdentifierType">
      <summary>取得用於識別所要使用簽署憑證的配置。</summary>
      <returns>用於識別所要使用收件者憑證的配置。</returns>
      <exception cref="T:System.ArgumentException">提供給方法的其中一個引數無效。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.UnsignedAttributes">
      <summary>取得與這個簽章建立關聯的屬性集合，這些集合不受簽章保護。</summary>
      <returns>與這個簽章相關聯的屬性集合，這些簽章不受簽章保護。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.ContentInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 類別表示 CMS/PKCS #7 標準文件中所定義的 CMS/PKCS #7 ContentInfo 資料結構。 此資料結構為所有 CMS/PKCS #7 訊息的基礎。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])" /> 建構函式使用位元組值陣列做為資料，以及表示內容類型的預設 <paramref name="object identifier" /> (OID)，建立 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 類別的執行個體。</summary>
      <param name="content">位元組值陣列，表示用於建立 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 物件的資料。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它作為有效引數的方法。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])" /> 建構函式使用指定的內容類型和位元組值陣列作為資料，建立 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 類別的執行個體。</summary>
      <param name="contentType">
        <see cref="T:System.Security.Cryptography.Oid" /> 物件，包含指定內容之內容類型的「物件識別碼」<c></c>(OID)。 其可為 data、digestedData、encryptedData、envelopedData、hashedData、signedAndEnvelopedData 或 signedData。  如需詳細資訊，請參閱＜備註＞。</param>
      <param name="content">位元組值陣列，表示用於建立 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 物件的資料。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它作為有效引數的方法。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.Content">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.Content" /> 屬性，會擷取 CMS/PKCS #7 訊息的內容。</summary>
      <returns>位元組值陣列，表示內容資料。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType" /> 屬性，會擷取 <see cref="T:System.Security.Cryptography.Oid" /> 物件，該物件包含 CMS/PKCS #7 訊息中內部內容之內容類型的 <paramref name="object identifier" /> (OID)。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Oid" />物件，其中包含代表內容類型的 OID 值。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])" /> 靜態方法，會擷取以位元組值陣列表示之編碼 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 訊息的外部內容類型。</summary>
      <param name="encodedMessage">位元組值陣列，表示編碼 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 訊息 (外部內容類型的擷取來源)。</param>
      <returns>如果方法成功，會傳回 <see cref="T:System.Security.Cryptography.Oid" /> 物件，該物件包含指定之編碼 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 訊息的外部內容類型。
如果方法失敗，就會擲回例外狀況。</returns>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它作為有效引數的方法。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">進行密碼編譯作業期間發生錯誤。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.EnvelopedCms">
      <summary>表示包裹資料的 CMS/PKCS #7 結構。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor">
      <summary>使用預設值，初始化 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>使用指定的內容資訊，初始化 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 類別的新執行個體。</summary>
      <param name="contentInfo">要加密的訊息內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentInfo" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)">
      <summary>使用指定的對稱式加密演算法和內容資訊，初始化 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 類別的新執行個體。</summary>
      <param name="contentInfo">要加密的訊息內容。</param>
      <param name="encryptionAlgorithm">加密訊息內容時，要使用的對稱式加密演算法識別碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentInfo" /> 或 <paramref name="encryptionAlgorithm" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates">
      <summary>取得與包裹 CMS/PKCS#7 訊息建立關聯的憑證集合。</summary>
      <returns>與封裝 CMS/PKCS # 7 訊息相關聯的憑證集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm">
      <summary>取得與此訊息建立關聯的對稱式加密演算法識別碼。</summary>
      <returns>與此訊息相關聯之對稱式加密演算法的識別碼。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo">
      <summary>取得包裹 CMS/PKCS#7 訊息的內容資訊。</summary>
      <returns>封包 CMS/PKCS # 7 訊息的內容資訊。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])">
      <summary>將位元組陣列解碼為 CMS/PKCS#7 包裹資料訊息。</summary>
      <param name="encodedMessage">包含要解碼之位元組序列的位元組陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encodedMessage" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> 參數未成功解碼。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt">
      <summary>藉由搜尋憑證存放區以取得相符的憑證和金鑰，透過任何可用收件者將已解碼的包裹 CMS/PKCS#7 訊息內容解密。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
      <exception cref="T:System.InvalidOperationException">物件目前狀態的方法呼叫無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)">
      <summary>藉由搜尋憑證存放區以取得相符的憑證和金鑰，透過任何指定收件者資訊將已解碼的包裹 CMS/PKCS#7 訊息內容解密。</summary>
      <param name="recipientInfo">要用於解密的收件者資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipientInfo" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
      <exception cref="T:System.InvalidOperationException">物件目前狀態的方法呼叫無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>使用指定的私密金鑰，透過任何指定收件者資訊將已解碼的包裹 CMS/PKCS#7 訊息內容解密。</summary>
      <param name="recipientInfo">要用於解密的收件者資訊。</param>
      <param name="privateKey">用於解密收件者特定資訊的私密金鑰。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipientInfo" /> 或 <paramref name="privateKey" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
      <exception cref="T:System.InvalidOperationException">物件目前狀態的方法呼叫無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>藉由搜尋憑證存放區和所提供集合以取得相符的憑證和金鑰，透過指定收件者資訊將已解碼的包裹 CMS/PKCS#7 訊息內容解密。</summary>
      <param name="recipientInfo">要用於解密的收件者資訊。</param>
      <param name="extraStore">除了用來尋找收件者憑證和私密金鑰的憑證存放區以外，要使用的憑證集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipientInfo" /> 或 <paramref name="extraStore" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
      <exception cref="T:System.InvalidOperationException">物件目前狀態的方法呼叫無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>藉由搜尋憑證存放區和所提供集合以取得相符的憑證和金鑰，透過任何可用收件者資訊將已解碼的包裹 CMS/PKCS#7 訊息內容解密。</summary>
      <param name="extraStore">除了用來尋找收件者憑證和私密金鑰的憑證存放區以外，要使用的憑證集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="extraStore" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
      <exception cref="T:System.InvalidOperationException">物件目前狀態的方法呼叫無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode">
      <summary>將包裹 CMS/PKCS#7 訊息的內容進行編碼，並將其傳回為位元組陣列。</summary>
      <returns>位元組陣列，代表 CMS/PKCS#7 訊息的編碼形式。</returns>
      <exception cref="T:System.InvalidOperationException">物件目前狀態的方法呼叫無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>針對單一指定的收件者，加密 CMS/PKCS#7 訊息的內容。</summary>
      <param name="recipient">收件者資訊，描述此訊息的單一收件者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)">
      <summary>針對一或多個收件者加密 CMS/PKCS#7 訊息的內容。</summary>
      <param name="recipients">描述訊息收件者的集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipients" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos">
      <summary>取得集合，其代表已解碼訊息的收件者清單。 預設值為空集合。</summary>
      <returns>集合，代表已解碼訊息的收件者清單。 預設值為空集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes">
      <summary>取得與包裹 CMS/PKCS#7 訊息建立關聯的未受保護 (未加密) 屬性集合。</summary>
      <returns>與封裝 CMS/PKCS # 7 訊息相關聯的未受保護（未加密）屬性集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version">
      <summary>取得已解碼的包裹 CMS/PKCS#7 訊息版本。</summary>
      <returns>已解碼的封包 CMS/PKCS # 7 訊息的版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 類別會定義金鑰協議的收件者資訊。 「金鑰協議」(Key Agreement) 演算法通常都會使用 Diffie-Hellman 金鑰協議演算法，其中建立共用編譯密碼金鑰的雙方，都必須參與此金鑰的產生過程，等於雙方都認可這把金鑰。 相較之下，「金鑰傳輸」演算法只由單方面產生金鑰，然後再傳送或傳輸給另一方。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date" /> 屬性會擷取發行者開始進行金鑰協議通訊協定的日期和時間。</summary>
      <returns>發行者開始進行金鑰協議通訊協定的日期和時間。</returns>
      <exception cref="T:System.InvalidOperationException">收件者識別項型別不是主體金鑰識別項。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey" /> 屬性會擷取經過加密的收件者金鑰設定資料。</summary>
      <returns>位元組值的陣列，含有經過加密的收件者金鑰設定資料。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm" /> 屬性會擷取用來執行金鑰協議的演算法。</summary>
      <returns>用來執行金鑰協議的演算法的值。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey" /> 屬性會擷取擔保此金鑰之演算法的金鑰協議發行者相關資訊。</summary>
      <returns>含有金鑰協議發行者相關訊息的物件。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute" /> 屬性 (Property) 會擷取金鑰設定資料的屬性 (Attribute)。</summary>
      <returns>金鑰產製原料的屬性。</returns>
      <exception cref="T:System.InvalidOperationException">收件者識別項型別不是主體金鑰識別項。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier" /> 屬性會擷取收件者的識別項。</summary>
      <returns>收件者的識別項。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version" /> 屬性會擷取金鑰協議收件者的版本。 系統會針對此類別中的物件自動設定這個屬性，其設定值意味收件者有參與金鑰協議演算法的執行。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 物件的版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> 類別會定義金鑰傳輸的收件者資訊。        「金鑰傳輸」演算法通常會使用 RSA 演算法，其中建立者會產生金鑰並傳輸給收件者，以便雙方共用同一個密碼編譯金鑰。 相較之下，使用「金鑰協定」演算法時，共用同一個密碼編譯金鑰的雙方，都必須參與金鑰的產生過程，等於雙方都認可這把金鑰。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey" /> 屬性會擷取金鑰傳輸收件者的加密金鑰。</summary>
      <returns>代表加密金鑰的位元組值陣列。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm" /> 屬性會擷取要用來加密內容加密金鑰所使用的金鑰加密演算法。</summary>
      <returns>儲存金鑰加密演算法識別碼的物件。 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /></returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier" /> 屬性會擷取與加密內容關聯的主體識別項。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" />物件，其中儲存參與金鑰傳輸之收件者的識別碼。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version" /> 屬性會擷取金鑰傳輸收件者的版本。 系統會針對此類別中的物件自動設定金鑰傳輸收件者的版本，其值意味收件者有參與金鑰傳輸演算法。</summary>
      <returns>代表金鑰傳輸 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 物件版本的 int 值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Builder">
      <summary>啟用 PKCS#12 PFX 資料值的建立。 此類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" /> 類別的新值。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary>將內容新增到使用來自位元組陣列之位元組型密碼加密之套件組合中的 PFX。</summary>
      <param name="safeContents">要新增至 PFX 的內容。</param>
      <param name="passwordBytes">加密內容時要作為密碼使用的位元組陣列。</param>
      <param name="pbeParameters">加密內容時要使用的密碼型加密 (PBE) 參數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 或 <paramref name="pbeParameters" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 參數值已加密。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封 (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 是 <see langword="true" />)。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" /> 指出應該使用 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />，這需要 <see cref="T:System.Char" /> 型密碼。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>將內容新增到使用來自範圍之位元組型密碼加密之套件組合中的 PFX。</summary>
      <param name="safeContents">要新增至 PFX 的內容。</param>
      <param name="passwordBytes">加密內容時要作為密碼使用的位元組範圍。</param>
      <param name="pbeParameters">加密內容時要使用的密碼型加密 (PBE) 參數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 或 <paramref name="pbeParameters" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 參數值已加密。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封 (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 是 <see langword="true" />)。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" /> 指出應該使用 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />，這需要 <see cref="T:System.Char" /> 型密碼。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>將內容新增到使用來自範圍之字元型密碼加密之套件組合中的 PFX。</summary>
      <param name="safeContents">要新增至 PFX 的內容。</param>
      <param name="password">加密內容時要作為密碼使用的範圍。</param>
      <param name="pbeParameters">加密內容時要使用的密碼型加密 (PBE) 參數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 或 <paramref name="pbeParameters" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 參數值已加密。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封 (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 是 <see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.String,System.Security.Cryptography.PbeParameters)">
      <summary>將內容新增到使用來自字串之字元型密碼加密之套件組合中的 PFX。</summary>
      <param name="safeContents">要新增至 PFX 的內容。</param>
      <param name="password">加密內容時要作為密碼使用的字串。</param>
      <param name="pbeParameters">加密內容時要使用的密碼型加密 (PBE) 參數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 或 <paramref name="pbeParameters" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 參數值已加密。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封 (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 是 <see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsUnencrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary>將內容新增至 PFX，而不將其加密。</summary>
      <param name="safeContents">要新增至 PFX 的內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封 (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 是 <see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.Encode">
      <summary>將密封 PFX 的內容編碼，並以位元組陣列形式傳回它。</summary>
      <returns>代表 PFX 編碼形式的位元組陣列。</returns>
      <exception cref="T:System.InvalidOperationException">PFX 未密封 (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 是 <see langword="false" />)。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed">
      <summary>取得指出是否已密封 PFX 資料的值。</summary>
      <returns>值，指出 PFX 資料是否已密封。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.ReadOnlySpan{System.Char},System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary>透過將密碼型訊息驗證碼 (MAC) 套用至具有來自範圍之密碼的內容，來密封 PFX 以防止進一步變更。</summary>
      <param name="password">用來作為計算 MAC 之金鑰的密碼。</param>
      <param name="hashAlgorithm">計算 MAC 時要使用的雜湊演算法。</param>
      <param name="iterationCount">用於計算 MAC 之金鑰衍生函數 (KDF) 的反覆項目計數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="iterationCount" /> 參數小於或等於 0。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封 (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 是 <see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary>透過將密碼型訊息驗證碼 (MAC) 套用至具有來自字串之密碼的內容，來密封 PFX 以防止進一步變更。</summary>
      <param name="password">用來作為計算 MAC 之金鑰的密碼。</param>
      <param name="hashAlgorithm">計算 MAC 時要使用的雜湊演算法。</param>
      <param name="iterationCount">用於計算 MAC 之金鑰衍生函數 (KDF) 的反覆項目計數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="iterationCount" /> 參數小於或等於 0。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封 (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 是 <see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity">
      <summary>在不套用防竄改保護的情況下，密封 PFX 以防止進一步變更。</summary>
      <exception cref="T:System.InvalidOperationException">PFX 已密封 (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 是 <see langword="true" />)。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>嘗試將密封之 PFX 的內容編碼為提供的緩衝區。</summary>
      <param name="destination">要接收 PKCS#12 PFX 資料的位元組範圍。</param>
      <param name="bytesWritten">當此方法傳回時，會包含一個值，指出寫入至 <paramref name="destination" /> 的位元組數。 這個參數會被視為未初始化。</param>
      <returns>若 <see langword="true" /> 夠大可接收輸出，則為 <paramref name="destination" />；否則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">PFX 未密封 (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 是 <see langword="false" />)。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag">
      <summary>代表 PKCS#12 CertBag。 無法繼承這個類別。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.#ctor(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary>使用指定的憑證類型與編碼，初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> 類別的新執行個體。</summary>
      <param name="certificateType">憑證類型的物件識別碼 (OID)。</param>
      <param name="encodedCertificate">編碼的憑證值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificateType" /> 參數是 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedCertificate" /> 參數不代表單一 ASN.1 BER 編碼值。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.EncodedCertificate">
      <summary>取得 CertSafeBag 的未解譯憑證內容。</summary>
      <returns>CertSafeBag 的未解釋憑證內容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificate">
      <summary>取得已解譯為 X.509 公開金鑰憑證之 CertBag 的內容。</summary>
      <returns>從 CertBag 內容解碼的憑證。</returns>
      <exception cref="T:System.InvalidOperationException">內容類型不是 X.509 公開金鑰憑證內容類型。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">X.509 憑證內容類型的內容無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificateType">
      <summary>取得識別已編碼之憑證值的內容類型的物件識別碼 (OID)。</summary>
      <returns>識別已編碼之憑證值的內容類型的物件識別碼 (OID)。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.IsX509Certificate">
      <summary>取得值，指出已編碼之憑證值的內容類型是否為 X.509 公開金鑰憑證內容類型。</summary>
      <returns>
        <see langword="true" /> 內容類型是否為 x.509 公開金鑰憑證內容類型（1.2.840.113549.1.9.22.1）;否則，<see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode">
      <summary>表示與 PKCS#12 SafeContents 值建立關聯的加密類型。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None">
      <summary>未對 SafeContents 值加密。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password">
      <summary>已使用密碼對 SafeContents 值加密。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.PublicKey">
      <summary>已使用公開金鑰加密對 SafeContents 值加密。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Unknown">
      <summary>套用至 SafeContents 的加密類型未知或無法判斷。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Info">
      <summary>表示來自 PKCS#12 PFX 內容的資料。 這個類別無法被繼承。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe">
      <summary>取得 PFX AuthenticatedSafe 中所顯示 SafeContents 值的唯讀集合。</summary>
      <returns>PFX AuthenticatedSafe 中所顯示 SafeContents 值的唯讀集合。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary>以 PKCS#12 PFX 的形式讀取提供的資料，並傳回內容的物件檢視。</summary>
      <param name="encodedBytes">要解譯為 PKCS#12 PFX 的資料。</param>
      <param name="bytesConsumed">當此方法傳回時，會包含一個值，指出此方法讀取自 <paramref name="encodedBytes" /> 的位元組數。 這個參數會被視為未初始化。</param>
      <param name="skipCopy">
        <see langword="true" /> 表示儲存 <paramref name="encodedBytes" /> 而不建立防禦性複本，否則為 <see langword="false" />。 預設為 <see langword="false" />。</param>
      <returns>從輸入解碼的 PKCS#12 PFX 物件檢視。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedBytes" /> 參數的內容未成功解碼為 PKCS#12 PFX。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode">
      <summary>取得值，指出針對 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 內容提供的防篡竄改保護類型。</summary>
      <returns>其中一個列舉成員，表示為 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 內容提供的防篡改保護類型。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.ReadOnlySpan{System.Char})">
      <summary>嘗試使用 <c>System.ReadOnlySpan{System.Char}</c> 所代表的密碼來驗證 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 內容的完整性。</summary>
      <param name="password">用於嘗試驗證完整性的密碼。</param>
      <returns>若密碼成功驗證 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 內容的完整性，則為 <see langword="true" />；若密碼不正確或內容已變更，則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> 值不是 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">無法識別 PKCS#12 PFX 內容所指定的雜湊演算法選項，或此平台不支援。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.String)">
      <summary>嘗試使用 <see cref="T:System.String" /> 所代表的密碼來驗證 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 內容的完整性。</summary>
      <param name="password">用於嘗試驗證完整性的密碼。</param>
      <returns>若密碼成功驗證 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 內容的完整性，則為 <see langword="true" />；若密碼不正確或內容已變更，則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> 值不是 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">無法識別 PKCS#12 PFX 內容所指定的雜湊演算法選項，或此平台不支援。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode">
      <summary>表示套用至 PKCS#12 PFX 值的反竄改類型。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.None">
      <summary>PKCS#12 PFX 值未受防止竄改的保護。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password">
      <summary>PKCS#12 PFX 值受到需鍵入密碼的訊息驗證碼 (MAC) 保護，可防止竄改。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.PublicKey">
      <summary>PKCS#12 PFX 值受到使用公開金鑰加密的數位簽章保護，可防止竄改。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Unknown">
      <summary>套用至 PKCS#12 PFX 的反竄改類型未知或無法判斷。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag">
      <summary>代表來自 PKCS#12 的 KeyBag，其內容為 PKCS#8 PrivateKeyInfo 的容器。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>從現有的編碼 PKCS#8 PrivateKeyInfo 值，初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" /> 的新執行個體。</summary>
      <param name="pkcs8PrivateKey">BER 編碼的 PKCS#8 PrivateKeyInfo 值。</param>
      <param name="skipCopy">
        <see langword="true" /> 表示儲存 <paramref name="pkcs8PrivateKey" /> 而不建立防禦性複本，否則為 <see langword="false" />。 預設為 <see langword="false" />。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pkcs8privateKey" /> 參數不代表單一 ASN.1 BER 編碼值。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.Pkcs8PrivateKey">
      <summary>取得記憶體值，其中包含這個包所傳輸的 PKCS#8 PrivateKeyInfo 值。</summary>
      <returns>記憶體值，其中包含此包所傳輸的 PKCS # 8 PrivateKeyInfo 值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag">
      <summary>從 PKCS#12 定義 SafeBag 值的核心行為，並為衍生類別提供基底。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.#ctor(System.String,System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>從衍生類別中的建構函式呼叫，以將 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag" /> 類別初始化。</summary>
      <param name="bagIdValue">以小數點十進位形式表示此 SafeBag 資料類型的物件識別碼 (OID)。</param>
      <param name="encodedBagValue">SafeBag 內容的 ASN.1 BER 編碼值。</param>
      <param name="skipCopy">
        <see langword="true" /> 表示儲存 <paramref name="encodedBagValue" /> 而不建立防禦性複本，否則為 <see langword="false" />。 預設為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bagIdValue" /> 參數為 <see langword="null" /> 或空白字串。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedBagValue" /> 參數不代表單一 ASN.1 BER 編碼值。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Attributes">
      <summary>取得可修改的屬性集合，以使用 SafeBag 值進行編碼。</summary>
      <returns>要以 SafeBag 值編碼之屬性的可修改集合。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Encode">
      <summary>將 SafeBag 值編碼，並將其傳回作為位元組陣列。</summary>
      <returns>代表 SafeBag 編碼形式的位元組陣列。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">傳遞至此建構函式的物件識別碼值無效。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.EncodedBagValue">
      <summary>取得此 SafeBag 內容的 ASN.1 BER 編碼。</summary>
      <returns>這個 SafeBag 內容的 asn.1 BER 編碼。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.GetBagId">
      <summary>取得識別此 SafeBag 內容類型的物件識別碼 (OID)。</summary>
      <returns>識別此 SafeBag 內容類型的物件識別碼 (OID)。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>嘗試將 SafeBag 值編碼成提供的緩衝區。</summary>
      <param name="destination">要接收加密 SafeBag 值的位元組範圍。</param>
      <param name="bytesWritten">當此方法傳回時，會包含一個值，指出寫入至 <paramref name="destination" /> 的位元組數。 這個參數會被視為未初始化。</param>
      <returns>若 <see langword="true" /> 夠大可接收輸出，則為 <paramref name="destination" />；否則為 <see langword="false" />。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">傳遞至此建構函式的物件識別碼值無效。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents">
      <summary>代表 PKCS#12 SafeContents 值。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>透過新的 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> 將憑證新增至 SafeContents，並傳回新建立的包執行個體。</summary>
      <param name="certificate">要加入的憑證。</param>
      <returns>已新增至 SafeContents 的包執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此執行個體是唯讀項目。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 參數處於無效狀態。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddKeyUnencrypted(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>透過新的 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" /> 將非對稱私密金鑰新增至 SafeContents，並傳回新建立的包執行個體。</summary>
      <param name="key">要新增的非對稱私密金鑰。</param>
      <returns>已新增至 SafeContents 的包執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此執行個體是唯讀項目。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">金鑰匯入失敗。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddNestedContents(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary>透過新的 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag" /> 將巢狀內容新增至 SafeContents，並傳回新建立的包執行個體。</summary>
      <param name="safeContents">要加入至 SafeContents 的巢狀內容。</param>
      <returns>已新增至 SafeContents 的包執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 參數已加密。</exception>
      <exception cref="T:System.InvalidOperationException">此執行個體是唯讀項目。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSafeBag(System.Security.Cryptography.Pkcs.Pkcs12SafeBag)">
      <summary>將 SafeBag 加入至 SafeContents。</summary>
      <param name="safeBag">要加入的 SafeBag 值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeBag" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此執行個體是唯讀項目。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSecret(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary>透過新的 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag" /> 將具有指定之類型識別碼的 ASN.1 BER 編碼值新增至 SafeContents，並傳回新建立的包執行個體。</summary>
      <param name="secretType">識別祕密值之資料類型的物件識別碼 (OID)。</param>
      <param name="secretValue">代表要加入之密碼的 BER 編碼值。</param>
      <returns>已新增至 SafeContents 的包執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secretType" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此執行個體是唯讀項目。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="secretValue" /> 參數不代表單一 ASN.1 BER 編碼值。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary>透過陣列中的位元組型密碼的新 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />，將加密的非對稱私密金鑰新增至 SafeContents，並傳回新建立的包執行個體。</summary>
      <param name="key">要新增的非對稱私密金鑰。</param>
      <param name="passwordBytes">加密金鑰內容時要用作密碼的位元組。</param>
      <param name="pbeParameters">加密金鑰產製原料時要使用的密碼型加密 (PBE) 參數。</param>
      <returns>已新增至 SafeContents 的包執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此執行個體是唯讀項目。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">金鑰匯入失敗。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>透過範圍中以位元組為基礎之密碼的新 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />，將加密的非對稱私密金鑰新增至 SafeContents，並傳回新建立的包執行個體。</summary>
      <param name="key">要新增的非對稱私密金鑰。</param>
      <param name="passwordBytes">加密金鑰內容時要用作密碼的位元組。</param>
      <param name="pbeParameters">加密金鑰產製原料時要使用的密碼型加密 (PBE) 參數。</param>
      <returns>已新增至 SafeContents 的包執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此執行個體是唯讀項目。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">金鑰匯入失敗。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>透過範圍中的字元型密碼的新 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />，將加密的非對稱私密金鑰新增至 SafeContents，並傳回新建立的包執行個體。</summary>
      <param name="key">要新增的非對稱私密金鑰。</param>
      <param name="password">加密金鑰產製原料時要使用的密碼。</param>
      <param name="pbeParameters">加密金鑰產製原料時要使用的密碼型加密 (PBE) 參數。</param>
      <returns>已新增至 SafeContents 的包執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此執行個體是唯讀項目。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">金鑰匯入失敗。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.String,System.Security.Cryptography.PbeParameters)">
      <summary>透過字串中的字元型密碼的新 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />，將加密的非對稱私密金鑰新增至 SafeContents，並傳回新建立的包執行個體。</summary>
      <param name="key">要新增的非對稱私密金鑰。</param>
      <param name="password">加密金鑰產製原料時要使用的密碼。</param>
      <param name="pbeParameters">加密金鑰產製原料時要使用的密碼型加密 (PBE) 參數。</param>
      <returns>已新增至 SafeContents 的包執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此執行個體是唯讀項目。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">金鑰匯入失敗。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode">
      <summary>取得值，此值指出套用至內容的加密類型。</summary>
      <returns>其中一個列舉值，表示套用至內容的加密類型。 預設值為 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.Byte[])">
      <summary>使用陣列中的位元組型密碼將此 SafeContents 值的內容解密。</summary>
      <param name="passwordBytes">解密加密內容時要作為密碼使用的位元組。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 屬性不是 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼不正確。
-或-
未成功解密內容。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Byte})">
      <summary>使用範圍中的位元組型密碼將此 SafeContents 值的內容解密。</summary>
      <param name="passwordBytes">解密加密內容時要作為密碼使用的位元組。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 屬性不是 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼不正確。
-或-
未成功解密內容。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Char})">
      <summary>使用範圍中以字元為基礎的密碼，將此 SafeContents 值的內容解密。</summary>
      <param name="password">要用於解密加密內容的密碼。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 屬性不是 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼不正確。
-或-
未成功解密內容。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.String)">
      <summary>使用字串中以字元為基礎的密碼，將此 SafeContents 值的內容解密。</summary>
      <param name="password">要用於解密加密內容的密碼。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 屬性不是 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼不正確。
-或-
未成功解密內容。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.GetBags">
      <summary>取得 SafeContents 中所包含之 SafeBag 值的可列舉表示法。</summary>
      <returns>SafeContents 中所包含之 SafeBag 值的可列舉表示法。</returns>
      <exception cref="T:System.InvalidOperationException">內容已加密。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly">
      <summary>取得值，該值指出這個執行個體是否處於唯讀狀態。</summary>
      <returns>
        <see langword="true" />如果此值為唯讀狀態，則為，否則為<see langword="false" />。 預設值為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag">
      <summary>代表來自 PKCS#12 的 SafeContentsBag，其內容為 PKCS#12 SafeContents 值的容器。 這個類別無法被繼承。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag.SafeContents">
      <summary>取得此包中包含的 SafeContents 值。</summary>
      <returns>包含在此包內的 SafeContents 值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag">
      <summary>代表來自 PKCS#12 的 SecretBag，其內容為具有類型識別碼之任意資料的容器。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.GetSecretType">
      <summary>取得物件識別碼 (OID)，該識別碼識別祕密值的資料類型。</summary>
      <returns>識別祕密值之資料類型的物件識別碼 (OID)。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.SecretValue">
      <summary>取得記憶體值，其中包含包的 BER 編碼內容。</summary>
      <returns>記憶體值，其中包含包的 BER 編碼內容。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag">
      <summary>代表來自 PKCS#12 的 ShroudedKeyBag，其內容為 PKCS#8 EncryptedPrivateKeyInfo 的容器。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>從現有的編碼 PKCS#8 EncryptedPrivateKeyInfo 值，初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> 的新執行個體。</summary>
      <param name="encryptedPkcs8PrivateKey">BER 編碼的 PKCS#8 EncryptedPrivateKeyInfo 值。</param>
      <param name="skipCopy">
        <see langword="true" /> 表示儲存 <paramref name="encryptedPkcs8PrivateKey" /> 而不建立防禦性複本，否則為 <see langword="false" />。 預設為 <see langword="false" />。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encryptedPkcs8privateKey" /> 參數不代表單一 ASN.1 BER 編碼值。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.EncryptedPkcs8PrivateKey">
      <summary>取得記憶體值，其中包含這個包所傳輸的 PKCS#8 EncryptedPrivateKeyInfo 值。</summary>
      <returns>記憶體值，其中包含此包所傳輸的 PKCS # 8 EncryptedPrivateKeyInfo 值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
      <summary>啟用 PKCS # 8 PrivateKeyInfo 與 EncryptedPrivateKeyInfo 值的檢查及建立。 此類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> 類別的新執行個體。</summary>
      <param name="algorithmId">識別此金鑰所適用之非對稱演算法的物件識別碼 (OID)。</param>
      <param name="algorithmParameters">與此金鑰關聯的 BER 編碼演算法參數，或 <see langword="null" /> 表示在編碼時要省略演算法參數。</param>
      <param name="privateKey">演算法特定編碼的私密金鑰。</param>
      <param name="skipCopies">
        <see langword="true" /> 表示儲存 <paramref name="algorithmParameters" /> 與 <paramref name="privateKey" /> 而不建立防禦性複本；否則為 <see langword="false" />。 預設為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithmId" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithmParameters" /> 參數不是 <see langword="null" />、空白或單一 BER 編碼的值。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId">
      <summary>取得識別此金鑰所適用之演算法的物件識別碼 (OID) 值。</summary>
      <returns>識別此索引鍵所針對之演算法的物件識別碼（OID）值。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters">
      <summary>取得記憶體值，其中包含與此金鑰相關聯的 BER 編碼演算法參數。</summary>
      <returns>記憶體值，其中包含與此索引鍵相關聯的 BER 編碼演算法參數; 如果沒有任何參數，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes">
      <summary>取得此私密金鑰之屬性的修改集合。</summary>
      <returns>要以私密金鑰編碼之屬性的可修改集合。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>匯出指定的金鑰為 PKCS#8 PrivateKeyInfo 並傳回其解碼解譯。</summary>
      <param name="privateKey">PKCS#8 PrivateKeyInfo 中要代表的私密金鑰。</param>
      <returns>匯出之 PKCS#8 PrivateKeyInfo 的解碼解譯。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="privateKey" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary>以 PKCS#8 PrivateKeyInfo 的形式讀取提供的資料，並傳回內容的物件檢視。</summary>
      <param name="source">要解譯為 PKCS#8 PrivateKeyInfo 值的資料。</param>
      <param name="bytesRead">當此方法傳回時，會包含一個值，指出讀取自 <paramref name="source" /> 的位元組數。 這個參數會被視為未初始化。</param>
      <param name="skipCopy">
        <see langword="true" /> 表示儲存 <paramref name="source" /> 而不建立防禦性複本，否則為 <see langword="false" />。 預設為 <see langword="false" />。</param>
      <returns>解碼為 PKCS#8 PrivateKeyInfo 之內容的物件檢視。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="source" />參數的內容未成功解碼為 PKCS#8 PrivateKeyInfo。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>使用提供的位元組型密碼解密提供的資料，並將輸出解碼成 PKCS#8 PrivateKeyInfo 的物件檢視。</summary>
      <param name="passwordBytes">解密金鑰內容時要用作密碼的位元組。</param>
      <param name="source">要以 ASN.1-BER 編碼讀取為 PKCS#8 EncryptedPrivateKeyInfo 結構的資料。</param>
      <param name="bytesRead">當此方法傳回時，會包含一個值，指出讀取自 <paramref name="source" /> 的位元組數。 這個參數會被視為未初始化。</param>
      <returns>解密解碼為 PKCS#8 PrivateKeyInfo 之內容的物件檢視。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼不正確。
-或-
<paramref name="source" /> 的內容指出要套用的金鑰衍生函數 (Key Derivation Function) (KDF) 是舊版 PKCS#12 KDF，這需要 <see cref="T:System.Char" /> 型密碼。
-或-
<paramref name="source" /> 的內容不表示 ASN.1-BER 編碼的 PKCS#8 EncryptedPrivateKeyInfo 結構。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>使用提供的字元型密碼解密提供的資料，並將輸出解碼成 PKCS#8 PrivateKeyInfo 的物件檢視。</summary>
      <param name="password">解密金鑰產製原料時要使用的密碼。</param>
      <param name="source">以 ASN.1-BER 編碼的 PKCS#8 EncryptedPrivateKeyInfo 結構位元組。</param>
      <param name="bytesRead">當此方法傳回時，會包含一個值，指出讀取自 <paramref name="source" /> 的位元組數。 這個參數會被視為未初始化。</param>
      <returns>解密解碼為 PKCS#8 PrivateKeyInfo 之內容的物件檢視。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode">
      <summary>將此執行個體的屬性資料編碼為 PKCS#8 PrivateKeyInfo 並以位元組陣列的形式傳回編碼。</summary>
      <returns>位元組陣列，代表 PKCS#8 PrivateKeyInfo 的編碼形式。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>使用指定的位元組型密碼與加密參數加密之後，從這個物件的屬性內容產生 PKCS#8 EncryptedPrivateKeyInfo。</summary>
      <param name="passwordBytes">加密金鑰內容時要用作密碼的位元組。</param>
      <param name="pbeParameters">加密金鑰產製原料時要使用的密碼型加密 (PBE) 參數。</param>
      <returns>位元組陣列，其中包含 PKCS#8 EncryptedPrivateKeyInfo 的加密形式。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" /> 指出應該使用 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />，這需要 <see cref="T:System.Char" /> 型密碼。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>使用指定的字元型密碼與加密參數加密之後。從這個物件的屬性內容產生 PKCS#8 EncryptedPrivateKeyInfo。</summary>
      <param name="password">加密金鑰產製原料時要使用的密碼。</param>
      <param name="pbeParameters">加密金鑰產製原料時要使用的密碼型加密 (PBE) 參數。</param>
      <returns>位元組陣列，其中包含 PKCS#8 EncryptedPrivateKeyInfo 的加密形式。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes">
      <summary>取得代表演算法特定編碼之私密金鑰的記憶體值。</summary>
      <returns>記憶體值，表示演算法特定的編碼私密金鑰。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>嘗試將此執行個體的屬性資料編碼為 PKCS#8 PrivateKeyInfo，並將結果寫入提供的緩衝區。</summary>
      <param name="destination">要接收 PKCS#8 PrivateKeyInfo 資料的位元組範圍。</param>
      <param name="bytesWritten">當此方法傳回時，會包含一個值，指出寫入至 <paramref name="destination" /> 的位元組數。 這個參數會被視為未初始化。</param>
      <returns>若 <see langword="true" /> 夠大可接收輸出，則為 <paramref name="destination" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary>嘗試使用指定的位元組型密碼與加密參數加密之後，從這個物件的屬性內容產生 PKCS#8 EncryptedPrivateKeyInfo，並將結果寫入提供的緩衝區。</summary>
      <param name="passwordBytes">加密金鑰內容時要用作密碼的位元組。</param>
      <param name="pbeParameters">加密金鑰產製原料時要使用的密碼型加密 (PBE) 參數。</param>
      <param name="destination">要接收 PKCS#8 EncryptedPrivateKeyInfo 資料的位元組範圍。</param>
      <param name="bytesWritten">當此方法傳回時，會包含一個值，指出寫入至 <paramref name="destination" /> 的位元組數。 這個參數會被視為未初始化。</param>
      <returns>若 <see langword="true" /> 夠大可接收輸出，則為 <paramref name="destination" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary>嘗試使用指定的字元型密碼與加密參數加密之後，從這個物件的屬性內容產生 PKCS#8 EncryptedPrivateKeyInfo，並將結果寫入提供的緩衝區。</summary>
      <param name="password">加密金鑰產製原料時要使用的密碼。</param>
      <param name="pbeParameters">加密金鑰產製原料時要使用的密碼型加密 (PBE) 參數。</param>
      <param name="destination">要接收 PKCS#8 EncryptedPrivateKeyInfo 資料的位元組範圍。</param>
      <param name="bytesWritten">當此方法傳回時，會包含一個值，指出寫入至 <paramref name="destination" /> 的位元組數。 這個參數會被視為未初始化。</param>
      <returns>若 <see langword="true" /> 夠大可接收輸出，則為 <paramref name="destination" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject">
      <summary>代表用於 CMS/PKCS #7 和 PKCS #9 作業的屬性。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>使用指定的 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 物件當做它的屬性型別和值，初始化 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 類別的新執行個體。</summary>
      <param name="asnEncodedData">物件，該物件包含要使用的 PKCS #9 屬性型別和值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 的 <paramref name="Oid" /> 成員的 <paramref name="asnEncodedData" /> 成員長度為零。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Oid" /> 的 <paramref name="asnEncodedData" /> 成員為 <see langword="null" />。
-或-
<paramref name="Value" /> 之 <paramref name="Oid" /> 成員的 <paramref name="asnEncodedData" /> 成員為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>使用指定的 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 物件做為屬性型別，以及使用指定的 ASN.1 編碼資料做為屬性值時，初始化 <see cref="T:System.Security.Cryptography.Oid" /> 類別的新執行個體。</summary>
      <param name="oid">物件，表示 PKCS #9 屬性型別。</param>
      <param name="encodedData">位元組值的陣列，表示 PKCS #9 屬性值。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.String,System.Byte[])">
      <summary>使用指定的物件識別項 (OID) 之字串代表做為屬性型別，以及使用指定的 ASN.1 編碼資料做為屬性值時，初始化<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 類別的新執行個體。</summary>
      <param name="oid">代表 PKCS #9 屬性型別之物件識別項 (OID) 的字串表示。</param>
      <param name="encodedData">位元組值的陣列包含 PKCS #9 屬性值。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>從指定的 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 物件複製這個 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 的 PKCS #9 屬性型別和值。</summary>
      <param name="asnEncodedData">物件，該物件包含要使用的 PKCS #9 屬性型別和值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asnEncodeData" /> 不表示相容的屬性型別。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.Oid">
      <summary>取得<see cref="T:System.Security.Cryptography.Oid" /> 物件，其表示與這個 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 物件關聯的屬性型別。</summary>
      <returns>物件，表示與這個 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 物件相關聯的屬性型別。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> 類別會定義 CMS/PKCS #7 訊息的內容類型。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor" /> 建構函式會建立 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> 類別的執行個體。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType" /> 屬性會取得含有內容類型的 <see cref="T:System.Security.Cryptography.Oid" /> 物件。</summary>
      <returns>包含內容類型的 <see cref="T:System.Security.Cryptography.Oid" /> 物件。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>從 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 物件複製資訊。</summary>
      <param name="asnEncodedData">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 物件，資訊的複製來源。</param>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 類別定義 CMS/PKCS #7 訊息內容的描述。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor" /> 建構函式會建立 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])" /> 建構函式會使用指定的位元組值陣列做為 CMS/PKCS #7 訊息內容的編碼描述，建立 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 類別的執行個體。</summary>
      <param name="encodedDocumentDescription">位元組值陣列，指定 CMS/PKCS #7 訊息的編碼描述。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)" /> 建構函式會使用 CMS/PKCS #7 訊息內容的指定描述，建立 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 類別的執行個體。</summary>
      <param name="documentDescription">
        <see cref="T:System.String" /> 類別的執行個體，指定 CMS/PKCS #7 訊息的描述。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>從 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 物件複製資訊。</summary>
      <param name="asnEncodedData">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 物件，資訊的複製來源。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription" /> 屬性會擷取文件描述。</summary>
      <returns>
        <see cref="T:System.String" /> 物件，包含文件描述。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 類別定義 CMS/PKCS #7 訊息的名稱。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor" /> 建構函式會建立 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])" /> 建構函式會使用指定的位元組值陣列做為 CMS/PKCS #7 訊息內容的編碼名稱，建立 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 類別的執行個體。</summary>
      <param name="encodedDocumentName">位元組值陣列，指定 CMS/PKCS #7 訊息的編碼名稱。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)" /> 建構函式會使用 CMS/PKCS #7 訊息的指定名稱，建立 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 類別的執行個體。</summary>
      <param name="documentName">
        <see cref="T:System.String" /> 物件，指定 CMS/PKCS #7 訊息的名稱。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>從 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 物件複製資訊。</summary>
      <param name="asnEncodedData">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 物件，資訊的複製來源。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName" /> 屬性會擷取文件名稱。</summary>
      <returns>
        <see cref="T:System.String" /> 物件，包含文件名稱。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId">
      <summary>代表來自 PKCS#9 的 LocalKeyId 屬性。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor">
      <summary>使用空的金鑰識別碼值來初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.Byte[])">
      <summary>使用位元組陣列指定的金鑰識別碼初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> 類別的新執行個體。</summary>
      <param name="keyId">位元組陣列，包含金鑰識別碼。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary>使用位元組範圍指定的金鑰識別碼初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> 類別的新執行個體。</summary>
      <param name="keyId">位元組陣列，包含金鑰識別碼。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.KeyId">
      <summary>取得記憶體值，其中包含此屬性的金鑰識別碼。</summary>
      <returns>記憶體值，其中包含這個屬性的金鑰識別碼。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> 類別會定義 CMS/PKCS #7 訊息的訊息摘要。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor" /> 建構函式會建立 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>從 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 物件複製資訊。</summary>
      <param name="asnEncodedData">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 物件，資訊的複製來源。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest" /> 屬性會擷取訊息摘要。</summary>
      <returns>包含訊息摘要的位元組值陣列。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 類別定義簽章的簽章日期和時間。 當數位簽章附有驗證日期和時間時，<see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 物件可用為 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 物件的驗證屬性。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor" /> 建構函式會建立 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])" /> 建構函式會使用指定的位元組值陣列做為 CMS/PKCS #7 訊息內容的編碼簽章日期和時間，建立 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 類別的執行個體。</summary>
      <param name="encodedSigningTime">位元組值陣列，指定 CMS/PKCS #7 訊息的編碼簽章日期和時間。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)" /> 建構函式會使用指定的簽章日期和時間，建立 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 類別的執行個體。</summary>
      <param name="signingTime">
        <see cref="T:System.DateTime" /> 結構，表示簽章的簽署日期和時間。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>從 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 物件複製資訊。</summary>
      <param name="asnEncodedData">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 物件，資訊的複製來源。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime" /> 屬性會擷取表示訊息之簽章日期和時間的 <see cref="T:System.DateTime" /> 結構。</summary>
      <returns>
        <see cref="T:System.DateTime" /> 結構，包含文件的簽章日期和時間。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.PublicKeyInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /> 類別，表示與公開金鑰 (Public Key) 關聯的資訊。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm" /> 屬性，可擷取與公開金鑰關聯的演算法識別項。</summary>
      <returns>表示演算法的物件。 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /></returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue" /> 屬性，可擷取公開金鑰組的編碼公開元件之值。</summary>
      <returns>位元組值陣列，表示公開金鑰組的編碼公開元件。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 類別表示 CMS/PKCS #7 訊息收件者的相關資訊。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 類別是抽象類別 (Abstract Class)，由 <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 和 <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> 類別繼承。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey" /> 抽象屬性會擷取經過加密的收件者金鑰設定資料。</summary>
      <returns>位元組值的陣列，含有經過加密的收件者金鑰設定資料。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm" /> 抽象屬性會擷取用來執行金鑰建立的演算法。</summary>
      <returns>含有演算法的值的 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 物件，用來建立 CMS/PKCS #7 訊息的發信者與收件者之間的金鑰時會使用這個演算法。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier" /> 抽象屬性會擷取收件者的識別項。</summary>
      <returns>含有收件者識別項的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 物件。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type" /> 屬性會擷取收件者的類型。 建立 CMS/PKCS #7 訊息發出者與收件者之間的金鑰時，究竟要使用兩種主要通訊協定中的哪一種，由收件者的類型決定。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 列舉的其中一個值，定義收件者的類型。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version" /> 抽象屬性會擷取收件者資訊的版本。 衍生類別 (Derived Class) 會自動為它們的物件設定這個屬性，而且由這個值可以看出保護訊息所使用的是 PKCS #7 或 CMS (Cryptographic Message Syntax，密碼編譯訊息語法)。 由版本亦可推敲出 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 物件建立密碼編譯金鑰時，是採用金鑰協議演算法或金鑰傳輸演算法。</summary>
      <returns>代表 <see cref="T:System.Int32" /> 物件版本的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 類別表示 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 物件的集合。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 會實作 <see cref="T:System.Collections.ICollection" /> 介面。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)" /> 方法可複製 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合至陣列。</summary>
      <param name="array">
        <see cref="T:System.Array" /> 物件，<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合會複製到該物件。</param>
      <param name="index">
        <paramref name="array" />中以零起始的索引，其中複製 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合。</param>
      <exception cref="T:System.ArgumentException">提供給方法的其中一個引數無效。</exception>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引數值超出呼叫方法所定義值的容許範圍。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)" /> 方法可複製 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合至 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 陣列。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 物件的陣列中，<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合會複製到該陣列。</param>
      <param name="index">
        <paramref name="array" />中以零起始的索引，其中複製 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合。</param>
      <exception cref="T:System.ArgumentException">提供給方法的其中一個引數無效。</exception>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引數值超出呼叫方法所定義值的容許範圍。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count" /> 屬性擷取 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合中的項目數目。</summary>
      <returns>int 值，表示集合中的項目數目。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator" /> 方法傳回 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 集合的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 物件，可用於列舉 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized">
      <summary>不論是以同步方式或是以執行緒安全方式來存取集合，<see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized" /> 屬性都會進行擷取。 這個屬性永遠會傳回 <see langword="false" />，表示集合不具備執行緒安全。</summary>
      <returns>
        <see langword="false" /> 的 <see cref="T:System.Boolean" /> 值，表示集合不具備執行緒安全。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)" /> 屬性會擷取位於集合中指定索引的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 物件。</summary>
      <param name="index">int 值，表示集合中的索引。 索引以零起始。</param>
      <returns>在指定索引處的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 物件。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">引數值超出呼叫方法所定義值的容許範圍。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot" /> 屬性會擷取 <see cref="T:System.Object" /> 物件，其用來同步存取 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合。</summary>
      <returns>物件，用來同步處理對集合<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />的存取。 <see cref="T:System.Object" /></returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> 方法傳回 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 集合的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 物件，可用於列舉 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 類別提供 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合的列舉功能。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 會實作 <see cref="T:System.Collections.IEnumerator" /> 介面。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current" /> 屬性從 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 集合中擷取目前的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 物件。</summary>
      <returns>代表 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 集合中目前收件者資訊結構的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 物件。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext" /> 方法會將列舉前移至 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 集合中的下一個 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 物件。</summary>
      <returns>此方法會傳回 bool，指定列舉是否成功前進到下一個物件。 如果列舉成功前進到下一個 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 物件，便會傳回 <see langword="true" />。 如果列舉前進超過列舉中的最後一個項目，則會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset" /> 方法會將列舉重設為 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 集合中的第一個 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 物件。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current" /> 屬性從 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 集合中擷取目前的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 物件。</summary>
      <returns>代表 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 集合中目前收件者資訊結構的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 物件。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 列舉型別 (Enumeration)，定義收件者資訊的型別。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyAgreement">
      <summary>金鑰協定收件者資訊。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyTransport">
      <summary>金鑰傳輸收件者資訊。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.Unknown">
      <summary>收件者資訊的型別未知。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="data" />
      <param name="hashAlgorithm" />
      <param name="requestedPolicyId" />
      <param name="nonce" />
      <param name="requestSignerCertificates" />
      <param name="extensions" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="hash" />
      <param name="hashAlgorithm" />
      <param name="requestedPolicyId" />
      <param name="nonce" />
      <param name="requestSignerCertificates" />
      <param name="extensions" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>使用預先計算的雜湊值建立時間戳記要求。</summary>
      <param name="hash">要加上時間戳記的預先計算雜湊值。</param>
      <param name="hashAlgorithmId">產生 <paramref name="hash" /> 之雜湊演算法的物件識別碼 (OID)。</param>
      <param name="requestedPolicyId">時間戳記授權單位 (TSA) 應該使用之時間戳記原則的物件識別碼 (OID)，或使用 <see langword="null" /> 表示沒有偏好。</param>
      <param name="nonce">唯一識別此要求以將它與回應配對的選擇性 nonce (使用一次的數字)。 值會被解譯為不帶正負號的位元組由大到小，而且可能會被正規化為編碼格式。</param>
      <param name="requestSignerCertificates">
        <see langword="true" /> 以指出時間戳記授權單位 (TSA) 必須在簽發的時間戳記權杖包括簽署憑證；否則為 <see langword="false" />。</param>
      <param name="extensions">要搭配要求出示的 RFC3161 延伸模組。</param>
      <returns>代表所選擇值的 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="signerInfo" />
      <param name="hashAlgorithm" />
      <param name="requestedPolicyId" />
      <param name="nonce" />
      <param name="requestSignerCertificates" />
      <param name="extensions" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Encode" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetExtensions" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetMessageHash" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HasExtensions" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HashAlgorithmId" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.ProcessResponse(System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <param name="responseBytes" />
      <param name="bytesConsumed" />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestedPolicyId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestSignerCertificate" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest@,System.Int32@)">
      <param name="encodedBytes" />
      <param name="request" />
      <param name="bytesConsumed" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryEncode(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Version" />
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.AsSignedCms">
      <summary>取得 RFC3161 時間戳記權杖的已簽署密碼編譯訊息語法 (CMS) 表示法。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 的 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" /> 表示法。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TokenInfo" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampToken@,System.Int32@)">
      <param name="encodedBytes" />
      <param name="token" />
      <param name="bytesConsumed" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="data" />
      <param name="signerCertificate" />
      <param name="extraCandidates" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="hash" />
      <param name="hashAlgorithm" />
      <param name="signerCertificate" />
      <param name="extraCandidates" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="hash" />
      <param name="hashAlgorithmId" />
      <param name="signerCertificate" />
      <param name="extraCandidates" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="signerInfo" />
      <param name="signerCertificate" />
      <param name="extraCandidates" />
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.DateTimeOffset,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="policyId" />
      <param name="hashAlgorithmId" />
      <param name="messageHash" />
      <param name="serialNumber" />
      <param name="timestamp" />
      <param name="accuracyInMicroseconds" />
      <param name="isOrdering" />
      <param name="nonce" />
      <param name="timestampAuthorityName" />
      <param name="extensions" />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.AccuracyInMicroseconds" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Encode" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetExtensions" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetMessageHash" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetNonce" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetSerialNumber" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetTimestampAuthorityName" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HasExtensions" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HashAlgorithmId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.IsOrdering" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.PolicyId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Timestamp" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo@,System.Int32@)">
      <param name="encodedBytes" />
      <param name="timestampTokenInfo" />
      <param name="bytesConsumed" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Version" />
    <member name="T:System.Security.Cryptography.Pkcs.SignedCms">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 類別可以對 CMS/PKCS #7 訊息進行簽署和驗證。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" /> 建構函式會建立 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 類別的執行個體。</summary>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> 建構函式會使用指定的內容資訊做為內部內容，建立 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 類別的執行個體。</summary>
      <param name="contentInfo">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 物件，指定做為 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 訊息內部內容的內容資訊。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> 建構函式會使用指定的內容資訊做為內部內容以及使用中斷連結狀態，建立 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 類別的執行個體。</summary>
      <param name="contentInfo">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 物件，指定做為 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 訊息內部內容的內容資訊。</param>
      <param name="detached">
        <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 物件是否使用於中斷簽章。 如果 <paramref name="detached" /> 為 <see langword="true" />，則中斷簽章。 如果 <paramref name="detached" /> 為 <see langword="false" />，則不中斷簽章。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> 建構函式會藉由使用指定的主旨識別項型別做為簽署人的預設主旨識別項型別，建立 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 類別的執行個體。</summary>
      <param name="signerIdentifierType">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 成員，其指定簽署人的預設主旨識別項型別。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> 建構函式會藉由使用指定的主旨識別項型別做為簽署人的預設主旨識別項型別，以及使用內容資訊做為內部內容，建立 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 類別的執行個體。</summary>
      <param name="signerIdentifierType">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 成員，其指定簽署人的預設主旨識別項型別。</param>
      <param name="contentInfo">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 物件，指定做為 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 訊息內部內容的內容資訊。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> 建構函式會藉由使用指定的主旨識別項型別做為簽署人的預設主旨識別項型別、使用內容資訊做為內部內容，以及使用中斷連結狀態，建立 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 類別的執行個體。</summary>
      <param name="signerIdentifierType">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 成員，其指定簽署人的預設主旨識別項型別。</param>
      <param name="contentInfo">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 物件，指定做為 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 訊息內部內容的內容資訊。</param>
      <param name="detached">
        <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 物件是否使用於中斷簽章。 如果 <paramref name="detached" /> 為 <see langword="true" />，則中斷簽章。 如果 detached 為 <see langword="false" />，則不中斷簽章。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>將憑證加入至編碼 CMS/PKCS #7 訊息的憑證集合中。</summary>
      <param name="certificate">要加入至集合的憑證。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">憑證已存在於集合中。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" /> 屬性會擷取與已編碼之 CMS/PKCS #7 訊息關聯的憑證。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 集合，表示已編碼之 CMS/PKCS #7 訊息的憑證集合。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> 方法會驗證 CMS/PKCS #7 訊息的資料完整性。 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> 是用於只想檢查 CMS郵件雜湊而不想執行完整數位簽章驗證之特定安全性基礎架構應用程式的特殊方法。 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> 不會驗證訊息的作者或寄件人，因為這個方法未涉及驗證數位簽章。 如需為一般目的而檢查 CMS/PKCS #7 訊息的完整性和真實性，請使用 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 或 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法。</summary>
      <exception cref="T:System.InvalidOperationException">物件目前狀態的方法呼叫無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 方法會驗證已簽署之 CMS/PKCS #7 訊息上的數位簽章，而且可以選擇性地驗證簽署人的憑證。</summary>
      <param name="verifySignatureOnly">
        <see cref="T:System.Boolean" /> 值，指定是否只驗證數位簽章，而不驗證簽署人的憑證。
如果 <paramref name="verifySignatureOnly" /> 為 <see langword="true" />，則只驗證數位簽章。 如果為 <see langword="false" />，則會驗證數位簽章、簽署人的憑證及憑證的目的。 如果憑證沒有金鑰使用方式，或金鑰使用方式支援數位簽章或不可否認性，憑證的目的可視為有效。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
      <exception cref="T:System.InvalidOperationException">物件目前狀態的方法呼叫無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法會藉由使用指定的憑證集合，驗證已簽署之 CMS/PKCS #7 訊息上的數位簽章，而且可以選擇性地驗證簽署人的憑證。</summary>
      <param name="extraStore">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 物件，可用來驗證憑證鏈結。 如果沒有使用其他憑證來驗證憑證鏈結，請使用 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 取代 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />。</param>
      <param name="verifySignatureOnly">
        <see cref="T:System.Boolean" /> 值，指定是否只驗證數位簽章，而不驗證簽署人的憑證。
如果 <paramref name="verifySignatureOnly" /> 為 <see langword="true" />，則只驗證數位簽章。 如果為 <see langword="false" />，則會驗證數位簽章、簽署人的憑證及憑證的目的。 如果憑證沒有金鑰使用方式，或金鑰使用方式支援數位簽章或不可否認性，憑證的目的可視為有效。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
      <exception cref="T:System.InvalidOperationException">物件目前狀態的方法呼叫無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature">
      <summary>建立簽章，並將簽章新增至 CMS/PKCS #7 訊息。</summary>
      <exception cref="T:System.InvalidOperationException">.NET Framework (所有版本) 及 .NET Core 3.0 和更新版本：未指定收件者憑證。</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET Core 2.2 和較舊版本：未提供任何簽署者憑證。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> 方法會使用指定的簽署人建立簽章，並將簽章加入至 CMS/PKCS #7 訊息。</summary>
      <param name="signer">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 物件，表示簽署人。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)">
      <summary>使用指定的簽署人建立簽章，並將簽章加入至 CMS/PKCS #7 訊息。</summary>
      <param name="signer">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 物件，表示簽署人。</param>
      <param name="silent">不使用這個參數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
      <exception cref="T:System.InvalidOperationException">僅限 .NET Framework：未指定簽署憑證。</exception>
      <exception cref="T:System.PlatformNotSupportedException">僅限 .NET Core：未指定簽署憑證。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" /> 屬性會擷取已編碼之 CMS/PKCS #7 訊息的內部內容。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 物件，表示已編碼之 CMS/PKCS #7 訊息的內容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> 方法會對已編碼的 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 訊息進行解碼。 在成功解碼後，就可以從 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 物件的屬性擷取解碼資訊。</summary>
      <param name="encodedMessage">位元組值陣列，表示要解碼之已編碼的 CMS/PKCS #7 訊息。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Detached">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" /> 屬性會擷取 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 物件是否用於中斷簽章。</summary>
      <returns>
        <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 物件是否使用於中斷簽章。 如果此屬性為 <see langword="true" />，則中斷簽章。 如果此屬性為 <see langword="false" />，則不中斷簽章。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Encode">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" /> 方法會將物件中的資訊編碼為 CMS/PKCS #7 訊息。</summary>
      <returns>位元組值陣列，表示已編碼的訊息。 已編碼的訊息可以使用 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> 方法來解碼。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
      <exception cref="T:System.InvalidOperationException">物件目前狀態的方法呼叫無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>從編碼 CMS/PKCS #7 訊息的憑證集合中移除指定的憑證。</summary>
      <param name="certificate">要從集合中移除的憑證。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">找不到憑證。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)">
      <summary>移除 <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> 集合中指定索引處的簽章。</summary>
      <param name="index">要移除之簽章的以零起始索引。</param>
      <exception cref="T:System.InvalidOperationException">CMS/PKCS #7 訊息未簽署，且 <paramref name="index" /> 無效。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。
-或-
<paramref name="index" /> 大於簽章計數減 1。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">無法移除簽章。
-或-
發生內部密碼編譯錯誤。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> 方法會移除指定之 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件的簽章。</summary>
      <param name="signerInfo">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件，表示已移除副署。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引數值超出呼叫方法所定義值的容許範圍。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> 屬性會擷取與 CMS/PKCS #7 訊息關聯的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 物件，表示 CMS/PKCS #7 訊息的簽署人資訊。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" /> 屬性會擷取 CMS/PKCS #7 訊息的版本。</summary>
      <returns>int 值，表示 CMS/PKCS #7 訊息版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 類別，表示與 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 物件 (表示 CMS/PKCS #7 訊息) 關聯的簽署人。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.AddUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary>將指定的屬性加入至目前的文件。</summary>
      <param name="asnEncodedData">要加入文件的 ASN.1 編碼屬性。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">找不到原始簽署者。
-或-
ASN1 資料已損毀。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" /> 屬性 (Property) 擷取與簽署人資訊關聯的簽章憑證。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 物件，表示簽章憑證。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 方法會驗證 CMS/PKCS #7 訊息簽署人資訊的資料完整性。 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 是特定安全性基礎結構應用程式中會使用的特定方法，在這種應用程式中，主體會在設定 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 物件時使用 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 列舉的 HashOnly 成員。 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 不會驗證簽署人資訊，因為這個方法並不涉及確認數位簽章。 如需為一般目的而檢查 CMS/PKCS #7 訊息簽署人資訊和副署的完整性和驗證性 (Authenticity)，請使用 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 或 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 方法會驗證 (Verify) 訊息的數位簽章，也可以選擇性地驗證 (Validate) 憑證。</summary>
      <param name="verifySignatureOnly">bool 值，指定是否僅驗證 (Verify) 數位簽章。 如果 <paramref name="verifySignatureOnly" /> 為 <see langword="true" />，只驗證 (Verify) 簽章。 如果 <paramref name="verifySignatureOnly" /> 為 <see langword="false" />，則驗證 (Verify) 數位簽章、驗證 (Validate) 憑證鏈結和驗證 (Validate) 憑證的目的。 如果憑證沒有金鑰使用方式，或金鑰使用方式支援數位簽章或不可否認性 (Nonrepudiation)，憑證的目的可視為有效。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
      <exception cref="T:System.InvalidOperationException">物件目前狀態的方法呼叫無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法使用指定的憑證集合來驗證 (Verify) 訊息的數位簽章，也可以選擇性地驗證 (Validate) 憑證。</summary>
      <param name="extraStore">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 物件，可用來驗證 (Validate) 鏈結。 如果沒有使用其他憑證來驗證 (Validate) 鏈結，請不要使用 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 改為使用 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />。</param>
      <param name="verifySignatureOnly">bool 值，指定是否僅驗證 (Verify) 數位簽章。 如果 <paramref name="verifySignatureOnly" /> 為 <see langword="true" />，只驗證 (Verify) 簽章。 如果 <paramref name="verifySignatureOnly" /> 為 <see langword="false" />，則驗證 (Verify) 數位簽章、驗證 (Validate) 憑證鏈結和驗證 (Validate) 憑證的目的。 如果憑證沒有金鑰使用方式，或金鑰使用方式支援數位簽章或不可否認性 (Nonrepudiation)，憑證的目的可視為有效。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
      <exception cref="T:System.InvalidOperationException">物件目前狀態的方法呼叫無效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" /> 方法，提示使用者選取簽章憑證、建立副署，以及將簽章加入至 CMS/PKCS #7 訊息。 限制副屬為一個層級。</summary>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> 方法使用指定的簽署人建立副署，並將簽章加入至 CMS/PKCS #7 訊息。 限制副屬為一個層級。</summary>
      <param name="signer">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 物件，表示副簽署人。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 屬性 (Property) 擷取與簽署人資訊關聯的副簽署人組。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合，表示簽署人資訊的副簽署人。 如果沒有副簽署人，則屬性 (Property) 為空集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" /> 屬性 (Property)，擷取表示用來計算簽章之雜湊演算法的 <see cref="T:System.Security.Cryptography.Oid" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Oid" /> 物件，表示配合簽章使用的雜湊演算法。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.GetSignature">
      <summary>擷取目前 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件的簽章。</summary>
      <returns>目前 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件的簽章。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" /> 方法移除 <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 集合之指定索引的副署。</summary>
      <param name="index">要移除之副署的以零起始索引。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> 方法移除指定之 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件的副署。</summary>
      <param name="counterSignerInfo">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件，表示已移除副署。</param>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引數值超出呼叫方法所定義值的容許範圍。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密碼編譯作業無法完成。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary>從目前的文件中移除指定的屬性。</summary>
      <param name="asnEncodedData">要從文件中移除的 ASN.1 編碼屬性。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">找不到原始簽署者。
-或-
找不到屬性。
-或-
ASN1 資料已損毀。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignatureAlgorithm">
      <summary>取得目前 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件使用的簽章演算法識別碼。</summary>
      <returns>目前 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件使用的簽章演算法識別碼。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" /> 屬性 (Property) 會擷取與簽署人資訊關聯之已簽署屬性 (Attribute) 的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 已簽署的屬性 (Attribute) 是和其餘的訊息內容一起簽署。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合，表示已簽署的屬性 (Attribute)。 如果沒有已簽署屬性 (Attribute)，則屬性 (Property) 為空集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" /> 屬性 (Property)，擷取與簽署人資訊關聯的簽署人憑證識別項。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 物件，唯一識別與簽署人資訊關聯的憑證。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" /> 屬性 (Property)，擷取與 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 內容關聯的未簽署屬性 (Attribute) 的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 集合。 可在不使簽章失效的情況下修改未簽署的屬性。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合，表示未簽署的屬性 (Attribute)。 如果沒有未簽署屬性 (Attribute)，則屬性 (Property) 為空集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" /> 屬性 (Property) 擷取簽署人資訊版本。</summary>
      <returns>int 值，指定簽署人資訊版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 類別表示 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件的集合。 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 會實作 <see cref="T:System.Collections.ICollection" /> 介面。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)" /> 方法可複製 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合至陣列。</summary>
      <param name="array">
        <see cref="T:System.Array" /> 物件，<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合會複製到該物件。</param>
      <param name="index">
        <paramref name="array" />中以零起始的索引，其中複製 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合。</param>
      <exception cref="T:System.ArgumentException">提供給方法的其中一個引數無效。</exception>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引數值超出呼叫方法所定義值的容許範圍。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)" /> 方法可複製 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合至 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 陣列。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件的陣列中，<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合會複製到該陣列。</param>
      <param name="index">
        <paramref name="array" />中以零起始的索引，其中複製 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合。</param>
      <exception cref="T:System.ArgumentException">提供給方法的其中一個引數無效。</exception>
      <exception cref="T:System.ArgumentNullException">null 參考已傳遞至不接受它做為有效引數的方法。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">引數值超出呼叫方法所定義值的容許範圍。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count" /> 屬性擷取 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中的項目數目。</summary>
      <returns>int 值，表示集合中的項目數目。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator" /> 方法傳回 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 集合的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 物件，可用於列舉 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized">
      <summary>不論是以同步方式或是以執行緒安全方式來存取集合，<see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized" /> 屬性都會進行擷取。 這個屬性永遠會傳回 <see langword="false" />，表示集合不具備執行緒安全。</summary>
      <returns>
        <see langword="false" /> 的 <see cref="T:System.Boolean" /> 值，表示集合不具備執行緒安全。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)" /> 屬性會擷取位於集合中指定索引的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件。</summary>
      <param name="index">int 值，表示集合中的索引。 索引以零起始。</param>
      <returns>位於<see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />指定索引處的物件。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">引數值超出呼叫方法所定義值的容許範圍。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot" /> 屬性會擷取 <see cref="T:System.Object" /> 物件，用來同步存取 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合。</summary>
      <returns>
        <see cref="T:System.Object" /> 物件，用來同步存取 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> 方法傳回 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 集合的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 物件，可用於列舉 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 類別提供 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合的列舉功能。 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 會實作 <see cref="T:System.Collections.IEnumerator" /> 介面。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current" /> 屬性從 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 集合中擷取目前的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 集合中，代表目前簽署人資訊結構的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 物件。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext" /> 方法會將列舉前移至 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中的下一個 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件。</summary>
      <returns>此方法會傳回 bool 值，指定列舉是否成功前進到下一個物件。 如果列舉成功前進到下一個 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 物件，便會傳回 <see langword="true" />。 如果列舉前進超過列舉中的最後一個項目，則會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset" /> 方法會將列舉重設為 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 集合中的第一個 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 物件。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current" /> 屬性從 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 集合中擷取目前的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 集合中，代表目前簽署人資訊結構的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 物件。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifier">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 類別，定義主旨識別項的型別，例如 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 或 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" />。  主旨可由憑證簽發者和序號或主體金鑰識別。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SubjectIdentifier.MatchesCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>驗證指定之憑證的主體識別碼是否符合目前的主體識別碼執行個體。</summary>
      <param name="certificate">要與目前主體識別碼執行個體相符的憑證。</param>
      <returns>如果指定之憑證的識別碼符合目前的主體識別碼執行個體，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">無效的主體識別碼類型。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 屬性會擷取主旨識別項的型別。 主旨可由憑證簽發者和序號或主體金鑰識別。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />列舉的成員，識別主體的類型。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> 屬性會擷取主旨識別項的值。 使用 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 屬性，決定主旨識別項的型別，並使用 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> 屬性擷取對應值。</summary>
      <returns>
        <see cref="T:System.Object" /> 物件，表示主旨識別項的值。 這個 <see cref="T:System.Object" /> 可以是下列由 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 屬性決定的其中一個物件。
<see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 屬性 
 Object 
 IssuerAndSerialNumber 
<see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /> SubjectKeyIdentifier 
<see cref="T:System.String" /></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey" /> 類別，定義主旨識別項的型別，例如 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 或 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" />。  主旨可由憑證簽發者和序號、主旨金鑰雜湊或主旨金鑰識別。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 屬性會擷取主旨識別項或金鑰的型別。 主旨可由憑證簽發者和序號、主旨金鑰雜湊或主旨金鑰識別。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 列舉型別的成員，指定主旨識別項的型別。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> 屬性，會擷取主旨識別項或金鑰的值。 使用 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 屬性決定主旨識別項的型別，並使用 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> 屬性擷取對應值。</summary>
      <returns>
        <see cref="T:System.Object" /> 物件，表示主旨識別項或金鑰的值。 這個 <see cref="T:System.Object" /> 可以是下列由 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 屬性決定的其中一個物件。
<see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 屬性 
 Object 
 IssuerAndSerialNumber 
<see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /> SubjectKeyIdentifier 
<see cref="T:System.String" /> PublicKeyInfo 
<see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 列舉會定義識別主體的方式。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.IssuerAndSerialNumber">
      <summary>以憑證簽發者和序號識別主體。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.PublicKeyInfo">
      <summary>以公開金鑰識別主體。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.SubjectKeyIdentifier">
      <summary>以主旨金鑰的雜湊識別主體。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.Unknown">
      <summary>未知的類型。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType">
      <summary>定義主體識別項類型的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 列舉型別。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber">
      <summary>以憑證簽發者和序號識別主體。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.NoSignature">
      <summary>識別主體時，採用只運用雜湊演算法的完整性檢查作業。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.SubjectKeyIdentifier">
      <summary>以主體的公開金鑰雜湊識別主體。 應使用何種雜湊演算法，由主體憑證中的簽章演算法套件決定。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.Unknown">
      <summary>未知的主體識別項類型。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.X509IssuerSerial">
      <summary>代表 XML 簽章的 &lt;<see langword="X509IssuerSerial" />&gt; 項目。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName">
      <summary>取得或設定 X.509 憑證簽發者的辨別名稱。</summary>
      <returns>X.509 憑證簽發者的辨別名稱。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber">
      <summary>取得或設定 X.509 憑證簽發者的序號。</summary>
      <returns>X.509 憑證簽發者的序號。</returns>
    </member>
  </members>
</doc>