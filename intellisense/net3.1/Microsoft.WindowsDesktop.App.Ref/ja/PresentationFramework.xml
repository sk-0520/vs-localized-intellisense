<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.CommonDialog">
      <summary>コモン Win32 ダイアログ ボックスを表示するための抽象基本クラス。</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.#ctor">
      <summary>派生クラスのコンストラクターによって呼び出されるときに基本クラスの値を初期化します。</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog">
      <summary>ダイアログ ボックスを表示するための十分なアクセス許可が存在するかどうかを確認します。</summary>
      <exception cref="T:System.Security.SecurityException">ダイアログ ボックスを表示するための十分なアクセス許可が存在しない場合。</exception>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>コモン ダイアログ ボックスに特定の機能を追加するためにオーバーライドされる、コモン ダイアログ ボックスのフック プロシージャを定義します。</summary>
      <param name="hwnd">Win32 ダイアログ ボックスのウィンドウ ハンドル。</param>
      <param name="msg">Win32 ダイアログ ボックスで処理される Windows メッセージ。</param>
      <param name="wParam">ダイアログ ボックスでのアクションのパラメーター。</param>
      <param name="lParam">ダイアログ ボックスでのアクションのパラメーター。</param>
      <returns>常に <see cref="F:System.IntPtr.Zero" /> を返します。</returns>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.Reset">
      <summary>派生クラスでオーバーライドされるときに、コモン ダイアログ ボックスのプロパティを既定値にリセットします。</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)">
      <summary>派生クラスでオーバーライドされるときに、Win32 コモン ダイアログ ボックスの特定の種類を表示するために呼び出されます。</summary>
      <param name="hwndOwner">ダイアログ ボックスを所有するウィンドウを識別するハンドル。</param>
      <returns>表示されているダイアログ (<see cref="T:Microsoft.Win32.OpenFileDialog" /> や <see cref="T:Microsoft.Win32.SaveFileDialog" /> など) でユーザーが [OK] ボタンをクリックした場合は <see langword="true" />、それ以外の場合は <see langword="false" /> が返されます。</returns>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.ShowDialog">
      <summary>コモン ダイアログ ボックスを表示します。</summary>
      <returns>表示されているダイアログ (<see cref="T:Microsoft.Win32.OpenFileDialog" /> や <see cref="T:Microsoft.Win32.SaveFileDialog" /> など) でユーザーが [OK] ボタンをクリックした場合は <see langword="true" />、それ以外の場合は <see langword="false" /> が返されます。</returns>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)">
      <summary>コモン ダイアログ ボックスを表示します。</summary>
      <param name="owner">ダイアログ ボックスを所有するウィンドウを識別するハンドル。</param>
      <returns>表示されているダイアログ (<see cref="T:Microsoft.Win32.OpenFileDialog" /> や <see cref="T:Microsoft.Win32.SaveFileDialog" /> など) でユーザーが [OK] ボタンをクリックした場合は <see langword="true" />、それ以外の場合は <see langword="false" /> が返されます。</returns>
    </member>
    <member name="P:Microsoft.Win32.CommonDialog.Tag">
      <summary>ダイアログ ボックスに関連付けられているオブジェクトを取得または設定します。 これにより、ダイアログ ボックスに任意のオブジェクトを結びつけることができます。</summary>
      <returns>ダイアログ ボックスに結び付けられている (関連付けられている) <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:Microsoft.Win32.FileDialog">
      <summary>
        <see cref="T:Microsoft.Win32.OpenFileDialog" /> や <see cref="T:Microsoft.Win32.SaveFileDialog" /> などのファイル ダイアログに共通の機能をカプセル化した抽象基本クラスです。</summary>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.#ctor">
      <summary>
        <see cref="T:Microsoft.Win32.FileDialog" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.AddExtension">
      <summary>ユーザーが拡張子を省略した場合に、ファイル ダイアログで自動的にファイル名に拡張子を付けるかどうかを示す値を取得または設定します。</summary>
      <returns>拡張子を付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CheckFileExists">
      <summary>存在しないファイル名をユーザーが指定した場合に、ファイル ダイアログで警告を表示するかどうかを示す値を取得または設定します。</summary>
      <returns>警告を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 この基本クラスの既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CheckPathExists">
      <summary>ユーザーが無効なパスとファイル名を入力した場合に警告を表示するかどうかを指定する値を取得または設定します。</summary>
      <returns>警告を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CustomPlaces">
      <summary>ファイル ダイアログ ボックスのカスタム プレースのリストを取得または設定します。</summary>
      <returns>カスタム プレースのリスト。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.DefaultExt">
      <summary>表示されるファイル リストにフィルターを適用するための既定の拡張子文字列を指定する値を取得または設定します。</summary>
      <returns>既定の拡張子文字列。 既定値は、<see cref="F:System.String.Empty" /> です。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.DereferenceLinks">
      <summary>ファイル ダイアログが、ショートカットで参照されたファイルの場所を返すか、ショートカット ファイル (.lnk) の場所を返すかを示す値を取得または設定します。</summary>
      <returns>参照先の場所を返す場合は <see langword="true" />。ショートカットの場所を返す場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FileName">
      <summary>ファイル ダイアログで選択されたファイルの完全なパスを含む文字列を取得または設定します。</summary>
      <returns>ファイル ダイアログで選択されたファイルの完全なパスである <see cref="T:System.String" />。 既定値は、<see cref="F:System.String.Empty" /> です。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FileNames">
      <summary>選択されたファイルごとに 1 つずつファイル名を格納する配列を取得します。</summary>
      <returns>選択されたファイルごとに 1 つずつファイル名を格納する <see cref="T:System.String" /> の配列。 既定値は、値が <see cref="F:System.String.Empty" /> である 1 つの項目を持つ配列です。</returns>
    </member>
    <member name="E:Microsoft.Win32.FileDialog.FileOk">
      <summary>ユーザーが <see cref="T:Microsoft.Win32.OpenFileDialog" /> の [開く] ボタンまたは <see cref="T:Microsoft.Win32.SaveFileDialog" /> の [保存] ボタンをクリックして、ファイル名を選択したときに発生します。</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Filter">
      <summary>
        <see cref="T:Microsoft.Win32.OpenFileDialog" /> または <see cref="T:Microsoft.Win32.SaveFileDialog" /> で表示されるファイルの種類を決定するフィルター文字列を取得または設定します。</summary>
      <returns>フィルターを格納している <see cref="T:System.String" />。 既定値は <see cref="F:System.String.Empty" /> です。これは、フィルターが適用されず、すべてのファイルの種類が表示されることを意味します。</returns>
      <exception cref="T:System.ArgumentException">フィルター文字列が無効です。</exception>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FilterIndex">
      <summary>ファイル ダイアログで現在選択されているフィルターのインデックスを取得または設定します。</summary>
      <returns>選択されたフィルターのインデックスである <see cref="T:System.Int32" />。 既定値は 1 です。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>ファイル ダイアログに共通の機能を追加するためにオーバーライドされる、コモン ファイル ダイアログのフック プロシージャを定義します。</summary>
      <param name="hwnd">Win32 ダイアログのウィンドウ ハンドル。</param>
      <param name="msg">Win32 ダイアログで処理されるメッセージ。</param>
      <param name="wParam">ダイアログでのアクションのパラメーター。</param>
      <param name="lParam">ダイアログでのアクションのパラメーター。</param>
      <returns>成功した場合は <see cref="F:System.IntPtr.Zero" /> を返します。失敗した場合はゼロ以外の値を返します。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.InitialDirectory">
      <summary>ファイル ダイアログに表示される初期ディレクトリを取得または設定します。</summary>
      <returns>初期ディレクトリを格納している <see cref="T:System.String" />。 既定値は、<see cref="F:System.String.Empty" /> です。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)">
      <summary>
        <see cref="E:Microsoft.Win32.FileDialog.FileOk" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Options">
      <summary>ファイル ダイアログで初期化のために使用される Win32 コモン ファイル ダイアログ フラグを取得します。</summary>
      <returns>ファイル ダイアログで初期化のために使用される Win32 コモン ファイル ダイアログ フラグを格納する <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.Reset">
      <summary>ファイル ダイアログのすべてのプロパティを初期値に戻します。</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.RestoreDirectory">
      <summary>このプロパティは実装されていません。</summary>
      <returns>実装されていません。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)">
      <summary>
        <see cref="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)" /> は、派生クラス (<see cref="T:Microsoft.Win32.OpenFileDialog" /> や <see cref="T:Microsoft.Win32.SaveFileDialog" /> など) のファイル ダイアログを表示するために呼び出されます。</summary>
      <param name="hwndOwner">ダイアログ ボックスを所有するウィンドウを識別するハンドル。</param>
      <returns>表示されているダイアログ (<see cref="T:Microsoft.Win32.OpenFileDialog" /> や <see cref="T:Microsoft.Win32.SaveFileDialog" /> など) でユーザーが [OK] ボタンをクリックした場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.SafeFileName">
      <summary>選択されたファイルのファイル名のみを格納する文字列を取得します。</summary>
      <returns>選択されたファイルのファイル名のみを格納する <see cref="T:System.String" />。 既定値は <see cref="F:System.String.Empty" /> です。ファイルが選択されていない場合やディレクトリが選択された場合もこの値が使用されます。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.SafeFileNames">
      <summary>選択されたファイルごとに 1 つずつ安全なファイル名を格納する配列を取得します。</summary>
      <returns>選択されたファイルごとに 1 つずつ安全なファイル名を格納する <see cref="T:System.String" /> の配列。 既定値は、値が <see cref="F:System.String.Empty" /> である 1 つの項目を持つ配列です。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Title">
      <summary>ファイル ダイアログのタイトル バーに表示されるテキストを取得または設定します。</summary>
      <returns>ファイル ダイアログのタイトル バーに表示されるテキストである <see cref="T:System.String" />。 既定値は、<see cref="F:System.String.Empty" /> です。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.ToString">
      <summary>ファイル ダイアログを表す文字列を返します。</summary>
      <returns>
        <see cref="T:System.String" /> または <see cref="T:Microsoft.Win32.FileDialog" /> で選択されたファイルの完全なパス名を含む <see cref="T:Microsoft.Win32.OpenFileDialog" /> の <see cref="T:Microsoft.Win32.SaveFileDialog" /> 表現。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.ValidateNames">
      <summary>ダイアログが有効な Win32 ファイル名だけを受け入れるかどうかを示す値を取得または設定します。</summary>
      <returns>無効なファイル名が入力されたら警告を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="T:Microsoft.Win32.FileDialogCustomPlace">
      <summary>
        <see cref="T:Microsoft.Win32.FileDialog" /> カスタム プレース リストのエントリを表します。</summary>
    </member>
    <member name="M:Microsoft.Win32.FileDialogCustomPlace.#ctor(System.Guid)">
      <summary>既知のフォルダーの GUID を指定して、<see cref="T:Microsoft.Win32.FileDialogCustomPlace" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="knownFolder">既知のフォルダーの GUID。</param>
    </member>
    <member name="M:Microsoft.Win32.FileDialogCustomPlace.#ctor(System.String)">
      <summary>パスを指定して、<see cref="T:Microsoft.Win32.FileDialogCustomPlace" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">フォルダーのパス。</param>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlace.KnownFolder">
      <summary>カスタム プレースの既知のフォルダーの GUID を取得します。</summary>
      <returns>既知のフォルダーの GUID。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlace.Path">
      <summary>カスタム プレースのファイル パスを取得します。</summary>
      <returns>カスタム プレースのパス。</returns>
    </member>
    <member name="T:Microsoft.Win32.FileDialogCustomPlaces">
      <summary>ファイル ダイアログ ボックスのカスタム プレースの既知のフォルダーを定義します。</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Contacts">
      <summary>現在のユーザーの連絡先フォルダーを取得します。</summary>
      <returns>現在のユーザーの連絡先フォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Cookies">
      <summary>現在のユーザーのインターネット クッキー フォルダーを取得します。</summary>
      <returns>現在のユーザーのインターネット クッキー フォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Desktop">
      <summary>現在のユーザーのデスクトップ上にあるファイルを格納するフォルダーを取得します。</summary>
      <returns>現在のユーザーのデスクトップ上にあるファイルを格納するフォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Documents">
      <summary>現在のユーザーのドキュメント フォルダーを取得します。</summary>
      <returns>現在のユーザーのドキュメント フォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Favorites">
      <summary>現在のユーザーのお気に入りフォルダーを取得します。</summary>
      <returns>現在のユーザーのお気に入りフォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.LocalApplicationData">
      <summary>現在の非ローミング ユーザーが使用する、アプリケーション固有のデータを格納するフォルダーを取得します。</summary>
      <returns>現在の非ローミング ユーザーが使用する、アプリケーション固有のデータを格納するフォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Music">
      <summary>現在のユーザーのミュージック フォルダーを取得します。</summary>
      <returns>現在のユーザーのミュージック フォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Pictures">
      <summary>現在のユーザーのピクチャ フォルダーを取得します。</summary>
      <returns>現在のユーザーのピクチャ フォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.ProgramFiles">
      <summary>Program Files フォルダーを取得します。</summary>
      <returns>Program Files フォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.ProgramFilesCommon">
      <summary>アプリケーション間で共有されるコンポーネントを格納するフォルダーを取得します。</summary>
      <returns>アプリケーション間で共有されるコンポーネントを格納するフォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Programs">
      <summary>現在のユーザーのプログラム グループを格納するフォルダーを取得します。</summary>
      <returns>現在のユーザーのプログラム グループを格納するフォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.RoamingApplicationData">
      <summary>現在のローミング ユーザーのアプリケーション固有のデータを格納するフォルダーを取得します。</summary>
      <returns>現在のローミング ユーザーのアプリケーション固有のデータを格納するフォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.SendTo">
      <summary>現在のユーザーの [送る] メニュー項目を格納するフォルダーを取得します。</summary>
      <returns>現在のユーザーの [送る] メニュー項目を格納するフォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.StartMenu">
      <summary>現在のユーザーの [スタート] メニュー項目を格納するフォルダーを取得します。</summary>
      <returns>現在のユーザーの [スタート] メニュー項目を格納するフォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Startup">
      <summary>現在のユーザーの [スタートアップ] プログラム グループに対応するフォルダーを取得します。</summary>
      <returns>現在のユーザーの [スタートアップ] プログラム グループに対応するフォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.System">
      <summary>システム フォルダーを取得します。</summary>
      <returns>システム フォルダー。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Templates">
      <summary>現在のユーザーのドキュメント テンプレートを格納するフォルダーを取得します。</summary>
      <returns>現在のユーザーのドキュメント テンプレートを格納するフォルダー。</returns>
    </member>
    <member name="T:Microsoft.Win32.OpenFileDialog">
      <summary>1 つ以上の開くファイルの名前を指定できるコモン ダイアログ ボックスを表します。</summary>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.#ctor">
      <summary>
        <see cref="T:Microsoft.Win32.OpenFileDialog" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.Multiselect">
      <summary>
        <see cref="T:Microsoft.Win32.OpenFileDialog" /> でユーザーが複数のファイルを選択できるかどうかを示すオプションを取得または設定します。</summary>
      <returns>複数のファイルを選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.OpenFile">
      <summary>
        <see cref="T:Microsoft.Win32.OpenFileDialog" /> を使用してユーザーが選択するファイルの読み取り専用ストリームを開きます。</summary>
      <returns>選択したファイルを格納している新しい <see cref="T:System.IO.Stream" />。</returns>
      <exception cref="T:System.InvalidOperationException">ダイアログ ボックスでファイルが選択されていません。</exception>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.OpenFiles">
      <summary>
        <see cref="T:Microsoft.Win32.OpenFileDialog" /> を使用してユーザーが選択したファイルごとに 1 つの読み取り専用ストリームを含む配列を作成します。</summary>
      <returns>選択したファイルを含む複数の新しい <see cref="T:System.IO.Stream" /> オブジェクトの配列。</returns>
      <exception cref="T:System.InvalidOperationException">ダイアログ ボックスでファイルが選択されていません。</exception>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.ReadOnlyChecked">
      <summary>
        <see cref="T:Microsoft.Win32.OpenFileDialog" /> で表示される読み取り専用チェック ボックスがオンかオフかを示す値を取得または設定します。</summary>
      <returns>チェック ボックスがオンの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.Reset">
      <summary>すべての <see cref="T:Microsoft.Win32.OpenFileDialog" /> プロパティを既定値にリセットします。</summary>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.ShowReadOnly">
      <summary>
        <see cref="T:Microsoft.Win32.OpenFileDialog" /> に読み取り専用チェック ボックスが表示されているかどうかを示す値を取得または設定します。</summary>
      <returns>チェック ボックスが表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="T:Microsoft.Win32.SaveFileDialog">
      <summary>ファイルを保存する際に使用するファイル名を指定できるコモン ダイアログ ボックスを表します。 <see cref="T:Microsoft.Win32.SaveFileDialog" /> は、部分信頼で実行されているアプリケーションでは使用できません。</summary>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.#ctor">
      <summary>
        <see cref="T:Microsoft.Win32.SaveFileDialog" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:Microsoft.Win32.SaveFileDialog.CreatePrompt">
      <summary>ユーザーが存在しないファイルを指定した場合に、ファイルを作成することを確認するメッセージを <see cref="T:Microsoft.Win32.SaveFileDialog" /> で表示するかどうかを示す値を取得または設定します。</summary>
      <returns>存在しないファイル名に保存する前にダイアログでメッセージを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.OpenFile">
      <summary>
        <see cref="T:Microsoft.Win32.SaveFileDialog" /> を使用してユーザーが選択したファイル名の読み書き可能ファイル ストリームを作成します。</summary>
      <returns>選択したファイルを格納している新しい <see cref="T:System.IO.Stream" />。</returns>
      <exception cref="T:System.InvalidOperationException">ダイアログ ボックスでファイルが選択されていません。</exception>
    </member>
    <member name="P:Microsoft.Win32.SaveFileDialog.OverwritePrompt">
      <summary>ユーザーが既に存在するファイル名を指定した場合に <see cref="T:Microsoft.Win32.SaveFileDialog" /> で警告を表示するかどうかを示す値を取得または設定します。</summary>
      <returns>存在するファイル名に保存する前にダイアログ ボックスでメッセージを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.Reset">
      <summary>すべての <see cref="T:Microsoft.Win32.SaveFileDialog" /> プロパティを既定値にリセットします。</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerProperties">
      <summary>デザイナーとの通信に使用される添付プロパティを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> の <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>要素の <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> プロパティ値。</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.IsInDesignMode">
      <summary>
        <see cref="T:System.Windows.DependencyObject" /> がデザイナーのコンテキストで実行されているかどうかを取得または設定します。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty">
      <summary>
        <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した要素に <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となる要素。</param>
      <param name="value">必要な <see cref="T:System.Boolean" /> 値。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Windows.Annotations.Annotation">
      <summary>Microsoft Annotations Framework のユーザーの注釈を表します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.#ctor">
      <summary>このコンストラクターは、Windows Presentation Foundation インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.#ctor(System.Xml.XmlQualifiedName)">
      <summary>指定された型と名前空間を持つ <see cref="T:System.Windows.Annotations.Annotation" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="annotationType">注釈の型の名前。</param>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.#ctor(System.Xml.XmlQualifiedName,System.Guid,System.DateTime,System.DateTime)">
      <summary>このコンストラクターは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="annotationType">注釈の型の名前。</param>
      <param name="id">注釈の GUID。</param>
      <param name="creationTime">注釈が最初に作成された日時。</param>
      <param name="lastModificationTime">注釈が最後に変更された日時。</param>
    </member>
    <member name="E:System.Windows.Annotations.Annotation.AnchorChanged">
      <summary>注釈の <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> のリスト内でアンカーが追加、削除、または変更された場合に発生します。</summary>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Anchors">
      <summary>注釈を付けているデータ選択を定義する 0 個以上の <see cref="T:System.Windows.Annotations.AnnotationResource" /> アンカー要素のコレクションを取得します。</summary>
      <returns>0 個以上の <see cref="T:System.Windows.Annotations.AnnotationResource" /> アンカー要素のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.AnnotationType">
      <summary>注釈の種類の <see cref="T:System.Xml.XmlQualifiedName" /> を取得します。</summary>
      <returns>この種類の注釈の XML 修飾名。</returns>
    </member>
    <member name="E:System.Windows.Annotations.Annotation.AuthorChanged">
      <summary>注釈の <see cref="P:System.Windows.Annotations.Annotation.Authors" /> のリスト内で作成者が追加、削除、または変更された場合に発生します。</summary>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Authors">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> を作成したユーザーを識別する 0 個以上の作成者文字列のコレクションを取得します。</summary>
      <returns>0 個以上の作成者文字列のコレクション。</returns>
    </member>
    <member name="E:System.Windows.Annotations.Annotation.CargoChanged">
      <summary>注釈の <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> のリスト内でカーゴが追加、削除、または変更された場合に発生します。</summary>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Cargos">
      <summary>注釈のデータを含んでいる 0 個以上の <see cref="T:System.Windows.Annotations.AnnotationResource" /> カーゴ要素のコレクションを取得します。</summary>
      <returns>0 個以上の <see cref="T:System.Windows.Annotations.AnnotationResource" /> カーゴ要素のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.CreationTime">
      <summary>注釈が作成された日時を取得します。</summary>
      <returns>注釈が作成された日時。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.GetSchema">
      <summary>常に <see langword="null" /> を返します。  スキーマの詳細については、「注釈スキーマ」を参照してください。</summary>
      <returns>常に <see langword="null" />。  スキーマの詳細については、「注釈スキーマ」を参照してください。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Id">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> の GUID を取得します。</summary>
      <returns>注釈の GUID。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.LastModificationTime">
      <summary>注釈が最後に変更された日時を取得します。</summary>
      <returns>注釈が最後に変更された日時。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.ReadXml(System.Xml.XmlReader)">
      <summary>指定した <see cref="T:System.Xml.XmlReader" /> から <see cref="T:System.Windows.Annotations.Annotation" /> を逆シリアル化します。</summary>
      <param name="reader">注釈の逆シリアル化のために使用する XML リーダー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Xml.XmlException">
        <see cref="T:System.Windows.Annotations.Annotation" /> についてシリアル化した XML が無効です。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.WriteXml(System.Xml.XmlWriter)">
      <summary>指定した <see cref="T:System.Xml.XmlWriter" /> に注釈をシリアル化します。</summary>
      <param name="writer">注釈のシリアル化を行うために使用する XML ライター。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Annotations.Annotation.AnnotationType" /> が有効ではありません。</exception>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationAction">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> の作成者、アンカー、およびカーゴのリソースと共に発生するアクションを指定します。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationAction.Added">
      <summary>コンポーネントは、注釈に追加されました。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationAction.Modified">
      <summary>コンポーネントは、注釈内で変更されました。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationAction.Removed">
      <summary>コンポーネントは、注釈から削除されました。</summary>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationAuthorChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Annotations.Annotation.AuthorChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Object)">
      <summary>
        <see cref="T:System.Windows.Annotations.AnnotationAuthorChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="annotation">イベントを発生させる注釈。</param>
      <param name="action">実行された作成者の操作。<see cref="F:System.Windows.Annotations.AnnotationAction.Added" />、<see cref="F:System.Windows.Annotations.AnnotationAction.Removed" />、または <see cref="F:System.Windows.Annotations.AnnotationAction.Modified" /> です。</param>
      <param name="author">イベントによって変更されている作成者オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotation" /> または <paramref name="action" /> が null 参照 (Visual Basic の場合は Nothing) です。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> が無効な <see cref="T:System.Windows.Annotations.AnnotationAction" /> です。</exception>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Action">
      <summary>イベントに対する作成者の変更操作を取得します。</summary>
      <returns>作成者の変更操作。<see cref="F:System.Windows.Annotations.AnnotationAction.Added" />、<see cref="F:System.Windows.Annotations.AnnotationAction.Removed" />、または <see cref="F:System.Windows.Annotations.AnnotationAction.Modified" /> です。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Annotation">
      <summary>イベントを発生させた注釈を取得します。</summary>
      <returns>イベントを発生させた注釈。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Author">
      <summary>イベントのターゲットである作成者オブジェクトを取得します。</summary>
      <returns>イベントのターゲットである作成者オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationAuthorChangedEventHandler">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> クラスにより発生する <see cref="E:System.Windows.Annotations.Annotation.AuthorChanged" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationDocumentPaginator">
      <summary>関連付けられている注釈と共にドキュメントの印刷を行うために <see cref="T:System.Windows.Documents.DocumentPaginator" /> を提供します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> および注釈ストレージの <see cref="T:System.Windows.Documents.DocumentPaginator" /> に基づいて、<see cref="T:System.IO.Stream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="originalPaginator">印刷された注釈を追加するドキュメント。</param>
      <param name="annotationStore">注釈の取得元の注釈ストレージ ストリーム。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream,System.Windows.FlowDirection)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" />、注釈ストレージの <see cref="T:System.Windows.Documents.DocumentPaginator" />、およびテキストの <see cref="T:System.IO.Stream" /> に基づいて、<see cref="T:System.Windows.FlowDirection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="originalPaginator">印刷された注釈を追加するドキュメント。</param>
      <param name="annotationStore">注釈の取得元の注釈ストレージ ストリーム。</param>
      <param name="flowDirection">テキストのフロー方向。<see cref="F:System.Windows.FlowDirection.LeftToRight" /> または <see cref="F:System.Windows.FlowDirection.RightToLeft" />。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> および <see cref="T:System.Windows.Documents.DocumentPaginator" /> に基づいて、<see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="originalPaginator">印刷された注釈を追加するドキュメント。</param>
      <param name="annotationStore">注釈の取得元のストア。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore,System.Windows.FlowDirection)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" />、<see cref="T:System.Windows.Documents.DocumentPaginator" />、およびテキストの <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> に基づいて、<see cref="T:System.Windows.FlowDirection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="originalPaginator">印刷された注釈を追加するドキュメント。</param>
      <param name="annotationStore">注釈の取得元のストア。</param>
      <param name="flowDirection">テキストのフロー方向。<see cref="F:System.Windows.FlowDirection.LeftToRight" /> または <see cref="F:System.Windows.FlowDirection.RightToLeft" />。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)">
      <summary>指定された <paramref name="userState" /> オブジェクトで開始されたすべての非同期操作をキャンセルします。</summary>
      <param name="userState">非同期操作を開始するための呼び出しで渡される一意のアプリケーション定義の識別子。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount">
      <summary>コンテンツの改ページ位置の自動修正を強制し、新しい合計を使用して <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> を更新し、<see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> を <see langword="true" /> に設定します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)">
      <summary>コンテンツの非同期的な改ページ位置の自動修正を開始し、新しい合計を使用して <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> を更新し、完了したときに <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> を <see langword="true" /> に設定します。</summary>
      <param name="userState">非同期操作を識別するための、アプリケーション定義のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPage(System.Int32)">
      <summary>指定したページ番号に関連付けられているユーザーの注釈と共に <see cref="T:System.Windows.Documents.DocumentPage" /> を返します。</summary>
      <param name="pageNumber">返される <see cref="T:System.Windows.Documents.DocumentPage" /> の 0 から始まるページ番号。</param>
      <returns>指定した <paramref name="pageNumber" /> に対する <see cref="T:System.Windows.Documents.DocumentPage" />。または指定した <paramref name="pageNumber" /> が存在しない場合は、<see cref="F:System.Windows.Documents.DocumentPage.Missing" />。</returns>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)">
      <summary>指定したページ番号に関連付けられているユーザーの注釈とともに非同期に <see cref="T:System.Windows.Documents.DocumentPage" /> を返します。</summary>
      <param name="pageNumber">取得する <see cref="T:System.Windows.Documents.DocumentPage" /> の 0 から始まるページ番号。</param>
      <param name="userState">非同期操作を識別するために使用される、アプリケーション定義のオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid">
      <summary>
        <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> がページの合計数であるかどうかを示す値を取得します。</summary>
      <returns>改ページ位置の自動修正が完了しており、<see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> がページの合計数を表している場合は <see langword="true" />。改ページ位置の自動修正が処理中であり、<see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> が書式設定中のページ数を表している場合は、<see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount">
      <summary>現在書式設定されているページ数を示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> が <see langword="true" /> の場合は、注釈ページの合計数。<see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> が <see langword="false" /> の場合は、書式設定中のページ数 (改ページ位置の自動修正は処理中)。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize">
      <summary>各ページの推奨される幅と高さを取得または設定します。</summary>
      <returns>ページを書式設定するために推奨されている幅と高さ。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.Source">
      <summary>改ページ位置が自動修正されているソース ドキュメントを取得します。</summary>
      <returns>改ページ位置が自動修正されているソース ドキュメント。</returns>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationHelper">
      <summary>強調表示、インク付箋、およびテキスト付箋の注釈を作成および削除するユーティリティ メソッドとコマンドを提供します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.ClearHighlightsForSelection(System.Windows.Annotations.AnnotationService)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationService" /> に関連付けられているビューアー コントロールの現在の選択から、すべての強調表示の注釈を削除します。</summary>
      <param name="service">強調表示の注釈の削除元である注釈サービス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> が有効ではありません。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.CreateHighlightForSelection(System.Windows.Annotations.AnnotationService,System.String,System.Windows.Media.Brush)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationService" /> に関連付けられているビューアー コントロールの、現在の選択に関する強調表示の注釈を作成します。</summary>
      <param name="service">強調表示の注釈を作成するために使用する注釈サービス。</param>
      <param name="author">注釈の作成者。</param>
      <param name="highlightBrush">選択されたコンテンツに対する強調表示を描画するために使用するブラシ。</param>
      <returns>強調表示の注釈。強調表示するために選択したコンテンツがない場合は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> が有効ではありません。

または -
<paramref name="highlightBrush" /> が <see cref="T:System.Windows.Media.SolidColorBrush" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">ビューアー コントロールにコンテンツの選択が含まれていません。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.CreateInkStickyNoteForSelection(System.Windows.Annotations.AnnotationService,System.String)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationService" /> に関連付けられているビューアー コントロールの現在の選択に関するインク付箋の注釈を作成します。</summary>
      <param name="service">インク付箋の注釈を作成するために使用する注釈サービス。</param>
      <param name="author">注釈の作成者。</param>
      <returns>インク付箋の注釈。注釈を付けるために選択したコンテンツがない場合は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> が有効ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">ビューアー コントロールにコンテンツの選択が含まれていません。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.CreateTextStickyNoteForSelection(System.Windows.Annotations.AnnotationService,System.String)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationService" /> に関連付けられているビューアー コントロールの、現在の選択に関するテキスト付箋の注釈を作成します。</summary>
      <param name="service">テキスト付箋の注釈を作成するために使用する注釈サービス。</param>
      <param name="author">注釈の作成者。</param>
      <returns>テキスト付箋の注釈。注釈を付けるために選択したコンテンツがない場合は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> が有効ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">ビューアー コントロールにコンテンツの選択が含まれていません。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.DeleteInkStickyNotesForSelection(System.Windows.Annotations.AnnotationService)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationService" /> に関連付けられているビューアー コントロールの、現在の選択内に全体が含まれているインク付箋の注釈を削除します。</summary>
      <param name="service">インク付箋の注釈の削除元である注釈サービス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> が有効ではありません。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.DeleteTextStickyNotesForSelection(System.Windows.Annotations.AnnotationService)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationService" /> に関連付けられているビューアー コントロールの現在の選択内に、全体が含まれているテキスト付箋の注釈を削除します。</summary>
      <param name="service">テキスト付箋の注釈の削除元である注釈サービス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> が有効ではありません。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.GetAnchorInfo(System.Windows.Annotations.AnnotationService,System.Windows.Annotations.Annotation)">
      <summary>指定された注釈に関するアンカーの位置などのアンカー情報を提供する <see cref="T:System.Windows.Annotations.IAnchorInfo" /> オブジェクトを返します。</summary>
      <param name="service">この操作で使用する注釈サービス。</param>
      <param name="annotation">アンカー情報を取得する注釈。</param>
      <returns>指定された注釈に関するアンカー情報を提供する <see cref="T:System.Windows.Annotations.IAnchorInfo" /> オブジェクト。または、解決できない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationResource">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> のコンテンツのアンカーまたはカーゴのリソースを表します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.#ctor">
      <summary>このコンストラクターは、Windows Presentation Foundation インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.#ctor(System.Guid)">
      <summary>このコンストラクターは、Windows Presentation Foundation インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="id">このリソースを示すグローバル一意識別子 (GUID)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> は Guid.Empty と同じです。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.#ctor(System.String)">
      <summary>指定した名前を使用して、<see cref="T:System.Windows.Annotations.AnnotationResource" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">同じ注釈で定義されている他の <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> および <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> からこのリソースを識別する名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.ContentLocators">
      <summary>このリソースに含まれている <see cref="T:System.Windows.Annotations.ContentLocatorBase" /> 要素のコレクションを取得します。</summary>
      <returns>このリソースに含まれているコンテンツ ロケーターのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.Contents">
      <summary>このリソースのコンテンツを定義する <see cref="T:System.Xml.XmlElement" /> オブジェクトのコレクションを取得します。</summary>
      <returns>このリソースのコンテンツを定義する <see cref="T:System.Xml.XmlElement" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.GetSchema">
      <summary>常に <see langword="null" /> を返します。  スキーマの詳細については、「注釈スキーマ」を参照してください。</summary>
      <returns>常に <see langword="null" />。  スキーマの詳細については、「注釈スキーマ」を参照してください。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.Id">
      <summary>このリソースの GUID を取得します。</summary>
      <returns>このリソースを識別する GUID。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.Name">
      <summary>この <see cref="T:System.Windows.Annotations.AnnotationResource" /> の名前を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Annotations.AnnotationResource" /> に割り当てられている名前によって、この要素が注釈の他の <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> または <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> と区別されます。</returns>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.ReadXml(System.Xml.XmlReader)">
      <summary>指定した <see cref="T:System.Xml.XmlReader" /> から <see cref="T:System.Windows.Annotations.AnnotationResource" /> を逆シリアル化します。</summary>
      <param name="reader">
        <see cref="T:System.Windows.Annotations.AnnotationResource" /> を逆シリアル化する XML リーダー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Xml.XmlException">
        <see cref="T:System.Windows.Annotations.AnnotationResource" /> についてシリアル化した XML が無効です。</exception>
    </member>
    <member name="E:System.Windows.Annotations.AnnotationResource.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.WriteXml(System.Xml.XmlWriter)">
      <summary>
        <see cref="T:System.Windows.Annotations.AnnotationResource" /> を、指定された <see cref="T:System.Xml.XmlWriter" /> にシリアル化します。</summary>
      <param name="writer">
        <see cref="T:System.Windows.Annotations.AnnotationResource" /> をシリアル化する XML ライター。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Annotations.Annotation.AnnotationType" /> が有効ではありません。</exception>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationResourceChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Annotations.Annotation.AnchorChanged" /> イベントおよび <see cref="E:System.Windows.Annotations.Annotation.CargoChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResourceChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Windows.Annotations.AnnotationResource)">
      <summary>
        <see cref="M:System.Windows.Annotations.AnnotationResourceChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Windows.Annotations.AnnotationResource)" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="annotation">イベントを発生させた注釈。</param>
      <param name="action">イベントのアクション。</param>
      <param name="resource">イベントの <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> または <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> リソース。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotation" /> または <paramref name="action" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> は有効な <see cref="T:System.Windows.Annotations.AnnotationAction" /> 値ではありません。</exception>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Action">
      <summary>注釈 <see cref="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource" /> のアクションを取得します。</summary>
      <returns>注釈 <see cref="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource" /> のアクション。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Annotation">
      <summary>イベントを発生させた <see cref="T:System.Windows.Annotations.Annotation" /> を取得します。</summary>
      <returns>イベントの発生元の <see cref="T:System.Windows.Annotations.Annotation" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource">
      <summary>イベントに関連付けられている <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> または <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> リソースを取得します。</summary>
      <returns>
        <see cref="F:System.Windows.Annotations.AnnotationAction.Added" />、<see cref="F:System.Windows.Annotations.AnnotationAction.Removed" />、または <see cref="F:System.Windows.Annotations.AnnotationAction.Modified" /> だった注釈のアンカーまたはカーゴのリソース。</returns>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationResourceChangedEventHandler">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> クラスにより発生する <see cref="E:System.Windows.Annotations.Annotation.AnchorChanged" /> イベントまたは <see cref="E:System.Windows.Annotations.Annotation.CargoChanged" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationService">
      <summary>ユーザーの注釈を管理および表示する Microsoft Annotations Framework のコア サービスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.FlowDocumentReader)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationService" /> コントロールで使用する <see cref="T:System.Windows.Controls.FlowDocumentReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="viewer">
        <see cref="T:System.Windows.Annotations.AnnotationService" /> に関連付けられたドキュメント読み取りコントロール。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.FlowDocumentScrollViewer)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationService" /> コントロールで使用する <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="viewer">
        <see cref="T:System.Windows.Annotations.AnnotationService" /> に関連付けられたドキュメント表示コントロール。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.Primitives.DocumentViewerBase)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationService" /> コントロールまたは <see cref="T:System.Windows.Controls.DocumentViewer" /> コントロールで使用する <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="viewer">
        <see cref="T:System.Windows.Annotations.AnnotationService" /> に関連付けられたドキュメント表示コントロール。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.ClearHighlightsCommand">
      <summary>現在の選択から強調表示の注釈を削除するコマンドを表します。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.CreateHighlightCommand">
      <summary>現在の選択で強調表示の注釈を作成するコマンドを表します。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.CreateInkStickyNoteCommand">
      <summary>現在の選択でインク注釈を作成するコマンドを表します。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.CreateTextStickyNoteCommand">
      <summary>現在の選択でテキスト注釈を作成するコマンドを表します。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.DeleteAnnotationsCommand">
      <summary>現在の選択で、インク注釈、テキスト注釈、および強調表示の注釈をすべて削除するコマンドを表します。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.DeleteStickyNotesCommand">
      <summary>現在の選択で、インク注釈とテキスト注釈をすべて削除するコマンドを表します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.Disable">
      <summary>注釈処理を無効にし、表示可能な注釈をすべて非表示にします。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.Enable(System.Windows.Annotations.Storage.AnnotationStore)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationService" /> で使用する <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> を有効にし、表示可能な注釈をすべて表示します。</summary>
      <param name="annotationStore">注釈の読み取り、書き込み、および表示に使用する注釈ストア。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotationStore" /> は <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.FlowDocumentReader)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationService" /> に関連付けられている <see cref="T:System.Windows.Controls.FlowDocumentReader" /> を返します。</summary>
      <param name="reader">
        <see cref="T:System.Windows.Annotations.AnnotationService" /> インスタンスを返す対象となるドキュメント リーダー コントロール。</param>
      <returns>指定したドキュメント リーダー コントロールに関連付けられた <see cref="T:System.Windows.Annotations.AnnotationService" />。指定したドキュメント リーダーが <see cref="T:System.Windows.Annotations.AnnotationService" /> を持たない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.FlowDocumentScrollViewer)">
      <summary>指定した <see cref="T:System.Windows.Annotations.AnnotationService" /> に関連付けられている <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> を返します。</summary>
      <param name="viewer">
        <see cref="T:System.Windows.Annotations.AnnotationService" /> インスタンスを返す対象となるドキュメント ビューアー コントロール。</param>
      <returns>指定したドキュメント ビューアー コントロールに関連付けられた <see cref="T:System.Windows.Annotations.AnnotationService" />。指定したビューアー コントロールが <see cref="T:System.Windows.Annotations.AnnotationService" /> を持たない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.Primitives.DocumentViewerBase)">
      <summary>指定したドキュメント表示コントロールに関連付けられた <see cref="T:System.Windows.Annotations.AnnotationService" /> インスタンスを返します。</summary>
      <param name="viewer">
        <see cref="T:System.Windows.Annotations.AnnotationService" /> インスタンスを返す対象となるドキュメント表示コントロール。</param>
      <returns>指定したドキュメント表示コントロールに関連付けられた <see cref="T:System.Windows.Annotations.AnnotationService" />。指定したドキュメント表示コントロールが <see cref="T:System.Windows.Annotations.AnnotationService" /> を持たない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationService.IsEnabled">
      <summary>
        <see cref="T:System.Windows.Annotations.AnnotationService" /> が有効かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Annotations.AnnotationService" /> が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationService.Store">
      <summary>この <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> によって使用される <see cref="T:System.Windows.Annotations.AnnotationService" /> を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> によって使用される <see cref="T:System.Windows.Annotations.AnnotationService" />。</returns>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocator">
      <summary>コンテンツの項目を識別する並べ替えられた <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 要素の集合を表します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.#ctor">
      <summary>
        <see cref="T:System.Windows.Annotations.ContentLocator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.Clone">
      <summary>この <see cref="T:System.Windows.Annotations.ContentLocator" /> の変更可能な詳細コピーの複製を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Annotations.ContentLocator" /> の変更可能な詳細コピーの複製。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.GetSchema">
      <summary>常に <see langword="null" /> を返します。  スキーマの詳細については、「注釈スキーマ」を参照してください。</summary>
      <returns>常に <see langword="null" />。  スキーマの詳細については、「注釈スキーマ」を参照してください。</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocator.Parts">
      <summary>この <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> を構成する <see cref="T:System.Windows.Annotations.ContentLocator" /> 要素のコレクションを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> を構成する <see cref="T:System.Windows.Annotations.ContentLocator" /> 要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.ReadXml(System.Xml.XmlReader)">
      <summary>指定した <see cref="T:System.Xml.XmlReader" /> から <see cref="T:System.Windows.Annotations.ContentLocator" /> を逆シリアル化します。</summary>
      <param name="reader">
        <see cref="T:System.Windows.Annotations.ContentLocator" /> の逆シリアル化に使用する XML リーダー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Xml.XmlException">
        <see cref="T:System.Windows.Annotations.ContentLocator" /> についてシリアル化した XML が無効です。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.StartsWith(System.Windows.Annotations.ContentLocator)">
      <summary>指定した <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> の <see cref="T:System.Windows.Annotations.ContentLocator" /> 要素の開始シーケンスが、この <see cref="T:System.Windows.Annotations.ContentLocator" /> の要素と同じであるかどうかを示す値を返します。</summary>
      <param name="locator">この <see cref="T:System.Windows.Annotations.ContentLocator" /> と比較する <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 要素の一覧を持つ <see cref="T:System.Windows.Annotations.ContentLocator" />。</param>
      <returns>この <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 内の <see cref="T:System.Windows.Annotations.ContentLocator" /> 要素の開始シーケンスが指定した <paramref name="locator" /> の要素と一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="locator" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.WriteXml(System.Xml.XmlWriter)">
      <summary>
        <see cref="T:System.Windows.Annotations.ContentLocator" /> を、指定された <see cref="T:System.Xml.XmlWriter" /> にシリアル化します。</summary>
      <param name="writer">
        <see cref="T:System.Windows.Annotations.ContentLocator" /> のシリアル化に使用する XML ライター。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocatorBase">
      <summary>コンテンツの項目を識別するオブジェクトを表します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorBase.Clone">
      <summary>この <see cref="T:System.Windows.Annotations.ContentLocatorBase" /> の変更可能な詳細コピーの複製を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Annotations.ContentLocatorBase" /> の変更可能な詳細コピーの複製。</returns>
    </member>
    <member name="E:System.Windows.Annotations.ContentLocatorBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>このメンバーの詳細については、「<see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />」をご覧ください。</summary>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocatorGroup">
      <summary>コンテンツの項目を識別する <see cref="T:System.Windows.Annotations.ContentLocator" /> 要素の順序付きセットを表します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.#ctor">
      <summary>
        <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.Clone">
      <summary>この <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> の変更可能な詳細コピーの複製を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> の変更可能な詳細コピーの複製。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.GetSchema">
      <summary>常に <see langword="null" /> を返します。  スキーマの詳細については、「注釈スキーマ」を参照してください。</summary>
      <returns>常に <see langword="null" />。  スキーマの詳細については、「注釈スキーマ」を参照してください。</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocatorGroup.Locators">
      <summary>この <see cref="T:System.Windows.Annotations.ContentLocator" /> を構成する <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 要素のコレクションを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Annotations.ContentLocator" /> を構成する <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.ReadXml(System.Xml.XmlReader)">
      <summary>指定した <see cref="T:System.Xml.XmlReader" /> から <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> を逆シリアル化します。</summary>
      <param name="reader">
        <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> の逆シリアル化に使用する XML リーダー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Xml.XmlException">
        <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> についてシリアル化した XML が無効です。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.WriteXml(System.Xml.XmlWriter)">
      <summary>
        <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> を、指定された <see cref="T:System.Xml.XmlWriter" /> にシリアル化します。</summary>
      <param name="writer">
        <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> のシリアル化に使用する XML ライター。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocatorPart">
      <summary>コンテンツの項目を識別する名前と値のペアのセットを表します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.#ctor(System.Xml.XmlQualifiedName)">
      <summary>指定した型名と名前空間を使用して、<see cref="T:System.Windows.Annotations.ContentLocatorPart" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="partType">
        <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> の型名と名前空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partType" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">文字列 <paramref name="partType" />.<see cref="P:System.Xml.XmlQualifiedName.Name" /> または <paramref name="partType" />.<see cref="P:System.Xml.XmlQualifiedName.Namespace" /> (またはこれらの両方) は <see langword="null" /> または空です。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.Clone">
      <summary>この <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> の変更可能な詳細コピーの複製を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> の変更可能な詳細コピーの複製。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> が、この <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> と同じであるかどうかを示す値を返します。</summary>
      <param name="obj">等しいかどうかを比較するパーツ。</param>
      <returns>両方のパーツ内の <see cref="P:System.Windows.Annotations.ContentLocatorPart.NameValuePairs" /> が同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.GetHashCode">
      <summary>この部分のハッシュ コードを返します。</summary>
      <returns>この部分のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocatorPart.NameValuePairs">
      <summary>このパーツを定義する名前/値ペアのコレクションを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> を定義する名前/値ペアのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocatorPart.PartType">
      <summary>パーツの型名と名前空間を取得します。</summary>
      <returns>パーツの型名と名前空間。</returns>
    </member>
    <member name="E:System.Windows.Annotations.ContentLocatorPart.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>このイベントは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Windows.Annotations.IAnchorInfo">
      <summary>注釈を、対応する注釈付きオブジェクトに合致させる機能を提供します。</summary>
    </member>
    <member name="P:System.Windows.Annotations.IAnchorInfo.Anchor">
      <summary>注釈のアンカーを取得します。</summary>
      <returns>解決されるアンカー。</returns>
    </member>
    <member name="P:System.Windows.Annotations.IAnchorInfo.Annotation">
      <summary>注釈オブジェクトを取得します。</summary>
      <returns>注釈オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Annotations.IAnchorInfo.ResolvedAnchor">
      <summary>ツリー上で <see cref="P:System.Windows.Annotations.IAnchorInfo.Anchor" /> が解決される位置を表すオブジェクトを取得します。</summary>
      <returns>ツリー上で <see cref="P:System.Windows.Annotations.IAnchorInfo.Anchor" /> が解決される位置を表すオブジェクト。 型は、注釈付きオブジェクトの型によって指定されます。 フロー ドキュメントまたは固定ドキュメントの付箋と強調表示は、常に <see cref="T:System.Windows.Annotations.TextAnchor" /> に解決されます。</returns>
    </member>
    <member name="T:System.Windows.Annotations.Storage.AnnotationStore">
      <summary>派生クラスでオーバーライドされる場合、ユーザーの注釈を読み書きするためのデータ ストアを表します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.#ctor">
      <summary>
        <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(System.Windows.Annotations.Annotation)">
      <summary>新しい <see cref="T:System.Windows.Annotations.Annotation" /> をストアに追加します。</summary>
      <param name="newAnnotation">ストアに追加する注釈。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newAnnotation" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">同じ <see cref="T:System.Windows.Annotations.Annotation" /> プロパティの値を持つ <see cref="P:System.Windows.Annotations.Annotation.Id" /> はストア内に既に存在します。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> はストアに呼び出されました。</exception>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged">
      <summary>ストアの <see cref="T:System.Windows.Annotations.Annotation" /> でアンカーが変更される場合に発生します。</summary>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged">
      <summary>ストアの <see cref="T:System.Windows.Annotations.Annotation" /> で作成者が変更される場合に発生します。</summary>
    </member>
    <member name="P:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush">
      <summary>注釈バッファー内のデータが物理データ ストアにすぐに書き込まれるかどうかを示す値を取得または設定します。</summary>
      <returns>注釈バッファー内のデータを操作のたびに、すぐに物理データ ストアに書き込む場合は <see langword="true" />。アプリケーションが明示的に <see langword="false" /> を呼び出したときに注釈バッファー内のデータを書き込む場合は <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Flush" />。</returns>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged">
      <summary>ストアの <see cref="T:System.Windows.Annotations.Annotation" /> でカーゴが変更される場合に発生します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)">
      <summary>指定された <see cref="P:System.Windows.Annotations.Annotation.Id" /> を持つ注釈をストアから削除します。</summary>
      <param name="annotationId">削除する注釈の GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> プロパティ。</param>
      <returns>削除された注釈。指定した <see langword="null" /> を持つ注釈がストア内で見つからなかった場合は <paramref name="annotationId" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> はストアに呼び出されました。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose">
      <summary>ストアによって使用されているマネージド リソースおよびアンマネージド リソースのすべてを解放します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)">
      <summary>ストアによって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Finalize">
      <summary>最終的には、このストアに対して <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" /> が呼び出されることを保証します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Flush">
      <summary>内部バッファーで保持されている注釈データが、強制的に基になるストレージ デバイスに書き込まれるようにします。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> はストアに呼び出されました。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)">
      <summary>指定された <see cref="P:System.Windows.Annotations.Annotation.Id" /> を持つ注釈をストアから返します。</summary>
      <param name="annotationId">返される注釈の GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> プロパティ。</param>
      <returns>指定した <paramref name="annotationId" /> を持つ注釈。指定した <see langword="null" /> を持つ注釈がストア内で見つからなかった場合は <paramref name="annotationId" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> はストアに呼び出されました。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations">
      <summary>ストア内のすべての注釈の一覧を返します。</summary>
      <returns>ストア内に現在格納されているすべての注釈の一覧。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> はストアに呼び出されました。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(System.Windows.Annotations.ContentLocator)">
      <summary>一致する <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> シーケンスで開始するロケーターを含む <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> を持つ注釈の一覧を返します。</summary>
      <param name="anchorLocator">一致する注釈を返す、先頭の <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> のシーケンス。</param>
      <returns>指定した <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> で始まり、かつ一致するロケーターを含む <paramref name="anchorLocator" /> を持つ注釈の一覧。一致する注釈が見つからなかった場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.AnnotationStore.IsDisposed">
      <summary>
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> が呼び出されているかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" /> が呼び出されている場合は <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />。それ以外の場合は <see langword="false" />。  既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" /> イベントを発生させます。</summary>
      <param name="args">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" /> イベントを発生させます。</summary>
      <param name="args">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" /> イベントを発生させます。</summary>
      <param name="args">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged">
      <summary>ストアで <see cref="T:System.Windows.Annotations.Annotation" /> が追加または削除される場合に発生します。</summary>
    </member>
    <member name="P:System.Windows.Annotations.Storage.AnnotationStore.SyncRoot">
      <summary>
        <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> の重要なセクションの同期ロックとして使用するオブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> の重要なセクションの同期ロックとして使用するオブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Annotations.Storage.StoreContentAction">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> で <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> に対して実行されるアクションを指定します。</summary>
    </member>
    <member name="F:System.Windows.Annotations.Storage.StoreContentAction.Added">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> がストアに追加されました。</summary>
    </member>
    <member name="F:System.Windows.Annotations.Storage.StoreContentAction.Deleted">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> がストアから削除されました。</summary>
    </member>
    <member name="T:System.Windows.Annotations.Storage.StoreContentChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.#ctor(System.Windows.Annotations.Storage.StoreContentAction,System.Windows.Annotations.Annotation)">
      <summary>
        <see cref="M:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.#ctor(System.Windows.Annotations.Storage.StoreContentAction,System.Windows.Annotations.Annotation)" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">イベントのアクション。</param>
      <param name="annotation">追加または削除された注釈。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotation" /> または <paramref name="action" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.Action">
      <summary>実行されたアクションを取得します。</summary>
      <returns>実行された操作を識別するアクション <see cref="F:System.Windows.Annotations.Storage.StoreContentAction.Added" /> または <see cref="F:System.Windows.Annotations.Storage.StoreContentAction.Deleted" /> 値。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.Annotation">
      <summary>ストアで変更した <see cref="T:System.Windows.Annotations.Annotation" /> を取得します。</summary>
      <returns>ストアで変更した <see cref="T:System.Windows.Annotations.Annotation" />。</returns>
    </member>
    <member name="T:System.Windows.Annotations.Storage.StoreContentChangedEventHandler">
      <summary>
        <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> クラスにより発生する <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Annotations.Storage.XmlStreamStore">
      <summary>ユーザーの注釈を読み書きするための XML データ ストアを表します。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)">
      <summary>指定した I/O <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> を使用して、<see cref="T:System.IO.Stream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">ユーザーの注釈を読み書きするための I/O ストリーム。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})">
      <summary>指定した I/O <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> と既知の互換性がある名前空間のディクショナリを使用して、<see cref="T:System.IO.Stream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">ユーザーの注釈を読み書きするための I/O ストリーム。</param>
      <param name="knownNamespaces">既知の互換性がある名前空間の一覧を含むディクショナリ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="stream" /> に無効な XML が含まれています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="knownNamespaces" /> ディクショナリに重複した名前空間が含まれています。

または -
<paramref name="knownNamespaces" /> ディクショナリに <see langword="null" /> キーを持つ要素が含まれています。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)">
      <summary>新しい <see cref="T:System.Windows.Annotations.Annotation" /> をストアに追加します。</summary>
      <param name="newAnnotation">ストアに追加する注釈。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newAnnotation" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">同じ <see cref="T:System.Windows.Annotations.Annotation" /> を持つ <see cref="P:System.Windows.Annotations.Annotation.Id" /> が、既にストアに存在します。</exception>
      <exception cref="T:System.InvalidOperationException">ストアに対して I/O <see cref="T:System.IO.Stream" /> が設定されていません。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> はストアに呼び出されました。</exception>
    </member>
    <member name="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush">
      <summary>注釈バッファー内のデータが物理データ ストアにすぐに書き込まれるかどうかを示す値を取得または設定します。</summary>
      <returns>注釈バッファー内のデータを操作のたびに、すぐに物理データ ストアに書き込む場合は <see langword="true" />。アプリケーションが明示的に <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" /> を呼び出したときに注釈バッファー内のデータを書き込む場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)">
      <summary>指定された <see cref="P:System.Windows.Annotations.Annotation.Id" /> を持つ注釈をストアから削除します。</summary>
      <param name="annotationId">削除される注釈のグローバル一意識別子 (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> プロパティ。</param>
      <returns>削除された注釈。指定した <see langword="null" /> を持つ注釈がストア内で見つからなかった場合は <paramref name="annotationId" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> はストアに呼び出されました。</exception>
      <exception cref="T:System.InvalidOperationException">ストアに対して I/O <see cref="T:System.IO.Stream" /> が設定されていません。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush">
      <summary>内部バッファーで保持されている注釈データが、強制的に基になるストレージ デバイスに書き込まれるようにします。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> はストアに呼び出されました。</exception>
      <exception cref="T:System.InvalidOperationException">ストアに対して I/O <see cref="T:System.IO.Stream" /> が設定されていません。</exception>
      <exception cref="T:System.UnauthorizedAccessException">ストア I/O <see cref="T:System.IO.Stream" /> は読み取り専用であるため、出力のためにアクセスすることはできません。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)">
      <summary>指定された <see cref="P:System.Windows.Annotations.Annotation.Id" /> を持つ注釈をストアから返します。</summary>
      <param name="annotationId">返される注釈の GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> プロパティ。</param>
      <returns>指定した <paramref name="annotationId" /> を持つ注釈。指定した <paramref name="annotationId" /> を持つ注釈がストア内で見つからなかった場合は <see langword="null" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> はストアに呼び出されました。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations">
      <summary>ストア内のすべての注釈の一覧を返します。</summary>
      <returns>ストア内に現在格納されているすべての注釈の一覧。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> はストアに呼び出されました。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)">
      <summary>一致する <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> シーケンスで開始するロケーターを含む <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> を持つ注釈の一覧を返します。</summary>
      <param name="anchorLocator">一致する注釈を返す、先頭の <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> のシーケンス。</param>
      <returns>指定した <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> で始まり、かつ一致するロケーターを含む <paramref name="anchorLocator" /> を持つ注釈の一覧。一致する注釈が見つからなかった場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)">
      <summary>入力名前空間として互換性がある名前空間の一覧を返します。</summary>
      <param name="name">名前空間の一覧が返される開始 URI シーケンス。</param>
      <returns>
        <paramref name="name" /> に一致する互換性がある名前空間の一覧。互換性がある名前空間が見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces">
      <summary>XML ストリームの読み込み時に無視された名前空間の一覧を取得します。</summary>
      <returns>XML ストリームの読み込み時に無視された名前空間の一覧。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces">
      <summary>Annotations Framework で定義済みのすべての名前空間の一覧を取得します。</summary>
      <returns>Microsoft Annotations Framework で定義済みの名前空間の一覧。</returns>
    </member>
    <member name="T:System.Windows.Annotations.TextAnchor">
      <summary>注釈の固定先コンテンツの選択範囲を表します。</summary>
    </member>
    <member name="P:System.Windows.Annotations.TextAnchor.BoundingEnd">
      <summary>テキスト アンカーの末尾位置を取得します。</summary>
      <returns>テキスト アンカーの末尾位置。</returns>
    </member>
    <member name="P:System.Windows.Annotations.TextAnchor.BoundingStart">
      <summary>テキスト アンカーの先頭位置を取得します。</summary>
      <returns>テキスト アンカーの先頭位置。</returns>
    </member>
    <member name="M:System.Windows.Annotations.TextAnchor.Equals(System.Object)">
      <summary>テキスト アンカーが、指定されたオブジェクトと等しいかどうかを示す値を返します。</summary>
      <param name="obj">比較対象のオブジェクト。</param>
      <returns>2 つのインスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Annotations.TextAnchor.GetHashCode">
      <summary>テキスト アンカー インスタンスのハッシュ コードを返します。</summary>
      <returns>テキスト アンカー インスタンスのハッシュ コード。</returns>
    </member>
    <member name="T:System.Windows.Application">
      <summary>Windows Presentation Foundation アプリケーションをカプセル化します。</summary>
    </member>
    <member name="M:System.Windows.Application.#ctor">
      <summary>
        <see cref="T:System.Windows.Application" /> クラスの新しいインスタンスを初期化します。</summary>
      <exception cref="T:System.InvalidOperationException">1 つの <see cref="T:System.Windows.Application" /> に対して、<see cref="T:System.AppDomain" /> クラスのインスタンスが複数作成されています。</exception>
    </member>
    <member name="E:System.Windows.Application.Activated">
      <summary>アプリケーションが前面のアプリケーションになったときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Application.Current">
      <summary>現在の <see cref="T:System.Windows.Application" /> の <see cref="T:System.AppDomain" /> オブジェクトを取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.Application" /> の <see cref="T:System.AppDomain" /> オブジェクト。</returns>
    </member>
    <member name="E:System.Windows.Application.Deactivated">
      <summary>アプリケーションが前面のアプリケーションではなくなったときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Application.DispatcherUnhandledException">
      <summary>アプリケーションによってスローされた例外が処理されないときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Application.Exit">
      <summary>アプリケーションがシャットダウンする直前に発生し、キャンセルできません。</summary>
    </member>
    <member name="M:System.Windows.Application.FindResource(System.Object)">
      <summary>指定したキーを持つ ユーザー インターフェイス (UI) リソース (<see cref="T:System.Windows.Style" /> や <see cref="T:System.Windows.Media.Brush" /> など) を検索します。要求したリソースが見つからない場合は例外がスローされます (「XAML Resources (XAML リソース)」を参照)。</summary>
      <param name="resourceKey">検索するリソースの名前。</param>
      <returns>要求されたリソース オブジェクト。 要求したリソースが見つからない場合は、<see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> がスローされます。</returns>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">リソースが見つかりません。</exception>
    </member>
    <member name="E:System.Windows.Application.FragmentNavigation">
      <summary>アプリケーションのナビゲーターがコンテンツ フラグメントへのナビゲーションを開始すると発生します。ナビゲーションは、目的のフラグメントが現在のコンテンツにある場合はすぐに発生し、目的のフラグメントが別のコンテンツにある場合は、ソース XAML コンテンツが読み込まれた後に発生します。</summary>
    </member>
    <member name="M:System.Windows.Application.GetContentStream(System.Uri)">
      <summary>指定した <see cref="T:System.Uri" /> にあるコンテンツ データ ファイル (「WPF Application Resource, Content, and Data Files (WPF アプリケーション リソース、コンテンツおよびデータ ファイル)」を参照) のリソース ストリームを返します。</summary>
      <param name="uriContent">Loose リソースにマッピングする相対 <see cref="T:System.Uri" />。</param>
      <returns>指定した <see cref="T:System.Windows.Resources.StreamResourceInfo" /> にあるコンテンツ データ ファイルを格納している <see cref="T:System.Uri" />。 Loose リソースが見つからない場合は null が返されます。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Uri" /> に渡される <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> は null です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Uri" /> に渡される <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> は、絶対 <see cref="T:System.Uri" /> です。</exception>
    </member>
    <member name="M:System.Windows.Application.GetCookie(System.Uri)">
      <summary>
        <see cref="T:System.Uri" /> で指定した場所のクッキーを取得します。</summary>
      <param name="uri">クッキーが作成された場所を指定する <see cref="T:System.Uri" />。</param>
      <returns>クッキーが存在する場合は <see cref="T:System.String" /> 値が返されます。それ以外の場合は <see cref="T:System.ComponentModel.Win32Exception" /> がスローされます。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">指定したクッキーを取得しようとして問題が起きると、(<see cref="M:System.Windows.Application.GetCookie(System.Uri)" /> から呼び出された) <see langword="InternetGetCookie" /> 関数により Win32 エラーが発生します。</exception>
    </member>
    <member name="M:System.Windows.Application.GetRemoteStream(System.Uri)">
      <summary>指定した <see cref="T:System.Uri" /> にある元のサイトに対するデータ ファイル (「WPF Application Resource, Content, and Data Files (WPF アプリケーション リソース、コンテンツおよびデータ ファイル)」を参照) のリソース ストリームを返します。</summary>
      <param name="uriRemote">起点サイトの Loose リソースにマッピングする <see cref="T:System.Uri" />。</param>
      <returns>指定した <see cref="T:System.Windows.Resources.StreamResourceInfo" /> にある起点サイト データ ファイルのリソース ストリームを格納している <see cref="T:System.Uri" />。 Loose リソースが見つからない場合は <see langword="null" /> が返されます。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Uri" /> に渡される <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> は null です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> に渡される <see cref="T:System.Uri" /> は相対参照ではなく絶対参照の形式ですが、<c>pack://siteoforigin:,,,/</c> の形式ではありません。</exception>
    </member>
    <member name="M:System.Windows.Application.GetResourceStream(System.Uri)">
      <summary>指定した <see cref="T:System.Uri" /> にあるリソース データ ファイル (「WPF Application Resource, Content, and Data Files (WPF アプリケーション リソース、コンテンツおよびデータ ファイル)」を参照) のリソース ストリームを返します。</summary>
      <param name="uriResource">埋め込みリソースにマッピングする <see cref="T:System.Uri" />。</param>
      <returns>指定した <see cref="T:System.Windows.Resources.StreamResourceInfo" /> にあるリソース データ ファイルのリソース ストリームを格納している <see cref="T:System.Uri" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Uri" /> に渡される <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> は null です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> に渡される <see cref="T:System.Uri" /> は相対参照ではなく絶対参照の形式ですが、<c>pack://application:,,,/</c> の形式ではありません。</exception>
      <exception cref="T:System.IO.IOException">
        <see cref="T:System.Uri" /> に渡される <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> が見つかりません。</exception>
    </member>
    <member name="E:System.Windows.Application.LoadCompleted">
      <summary>アプリケーションのナビゲーターによる移動先のコンテンツが読み込まれ、解析されて、レンダリングが開始されると発生します。</summary>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
      <summary>指定した Uniform Resource Identifier (URI) にある XAML ファイルを読み込んで、XAML ファイルのルート要素で指定したオブジェクトのインスタンスに変換します。</summary>
      <param name="component">XAML ファイルのルート要素と同じ型のオブジェクト。</param>
      <param name="resourceLocator">相対 XAML ファイルにマップする <see cref="T:System.Uri" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceLocator" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceLocator" /> が絶対 URI です。</exception>
      <exception cref="T:System.Exception">
        <paramref name="component" /> は、XAML ファイルのルート要素に一致しない型です。</exception>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Uri)">
      <summary>指定した Uniform Resource Identifier (URI) にある XAML ファイルを読み込んで、XAML ファイルのルート要素で指定したオブジェクトのインスタンスに変換します。</summary>
      <param name="resourceLocator">相対 XAML ファイルにマップする <see cref="T:System.Uri" />。</param>
      <returns>読み込まれた XAML ファイルに指定されているルート要素のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceLocator" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceLocator" /> が絶対 URI です。</exception>
      <exception cref="T:System.Exception">ファイルが XAML ファイルではありません。</exception>
    </member>
    <member name="P:System.Windows.Application.MainWindow">
      <summary>アプリケーションのメイン ウィンドウを取得または設定します。</summary>
      <returns>メイン アプリケーション ウィンドウとして指定される <see cref="T:System.Windows.Window" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Application.MainWindow" /> は、ブラウザーでホストされるアプリケーション (XAML ブラウザー アプリケーション (XBAP) など) から設定されます。</exception>
    </member>
    <member name="E:System.Windows.Application.Navigated">
      <summary>アプリケーションのナビゲーターによる移動先のコンテンツが見つかったときに発生します。ただし、読み込みはまだ完了していない可能性があります。</summary>
    </member>
    <member name="E:System.Windows.Application.Navigating">
      <summary>アプリケーションのナビゲーターによって新しいナビゲーションが要求されたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationFailed">
      <summary>アプリケーションのナビゲーターが要求されたコンテンツに移動する際にエラーが発生したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationProgress">
      <summary>アプリケーションのナビゲーターによって管理されているダウンロード中に定期的に発生して、ナビゲーションの進行状況に関する情報を提供します。</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationStopped">
      <summary>アプリケーションのナビゲーターの <see langword="StopLoading" /> メソッドが呼び出されたとき、または現在のナビゲーションの進行中にナビゲーターによって新しいナビゲーションが要求されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Application.OnActivated(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Application.Activated" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnDeactivated(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Application.Deactivated" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)">
      <summary>
        <see cref="E:System.Windows.Application.Exit" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.ExitEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
      <summary>
        <see cref="E:System.Windows.Application.FragmentNavigation" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Navigation.FragmentNavigationEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)">
      <summary>
        <see cref="E:System.Windows.Application.LoadCompleted" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Navigation.NavigationEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)">
      <summary>
        <see cref="E:System.Windows.Application.Navigated" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Navigation.NavigationEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)">
      <summary>
        <see cref="E:System.Windows.Application.Navigating" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Application.NavigationFailed" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Navigation.NavigationFailedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)">
      <summary>
        <see cref="E:System.Windows.Application.NavigationProgress" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Navigation.NavigationProgressEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)">
      <summary>
        <see cref="E:System.Windows.Application.NavigationStopped" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Navigation.NavigationEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)">
      <summary>
        <see cref="E:System.Windows.Application.SessionEnding" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.SessionEndingCancelEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)">
      <summary>
        <see cref="E:System.Windows.Application.Startup" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.StartupEventArgs" />。</param>
    </member>
    <member name="P:System.Windows.Application.Properties">
      <summary>アプリケーション スコープのプロパティのコレクションを取得します。</summary>
      <returns>アプリケーション スコープのプロパティを格納している <see cref="T:System.Collections.IDictionary" />。</returns>
    </member>
    <member name="P:System.Windows.Application.ResourceAssembly">
      <summary>WPF アプリケーションのリソース用のパッケージの Uniform Resource Identifier (URI) を提供する <see cref="T:System.Reflection.Assembly" /> を取得または設定します。</summary>
      <returns>WPF アプリケーション内のリソースのパッケージ Uri (uniform resource identifier) を提供する <see cref="T:System.Reflection.Assembly" /> への参照。</returns>
      <exception cref="T:System.InvalidOperationException">WPF アプリケーションに入力アセンブリがあるか、<see cref="P:System.Windows.Application.ResourceAssembly" /> が既に設定されています。</exception>
    </member>
    <member name="P:System.Windows.Application.Resources">
      <summary>スタイルやブラシなど、アプリケーション スコープ リソースのコレクションを取得または設定します。</summary>
      <returns>0 個以上のアプリケーション スコープ リソースが格納された <see cref="T:System.Windows.ResourceDictionary" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Application.Run">
      <summary>Windows Presentation Foundation アプリケーションを開始します。</summary>
      <returns>アプリケーションのシャットダウン時にオペレーティング システムに返される <see cref="T:System.Int32" /> アプリケーション終了コード。 終了コードの既定値は 0 です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Application.Run" /> は、ブラウザーによってホストされるアプリケーション (XAML ブラウザー アプリケーション (XBAP) など) から呼び出されます。</exception>
    </member>
    <member name="M:System.Windows.Application.Run(System.Windows.Window)">
      <summary>Windows Presentation Foundation アプリケーションを開始し、指定したウィンドウを開きます。</summary>
      <param name="window">アプリケーションの起動時に自動的に開く <see cref="T:System.Windows.Window" />。</param>
      <returns>アプリケーションのシャットダウン時にオペレーティング システムに返される <see cref="T:System.Int32" /> アプリケーション終了コード。 終了コードの既定値は 0 です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Application.Run" /> は、ブラウザーによってホストされるアプリケーション (XAML ブラウザー アプリケーション (XBAP) など) から呼び出されます。</exception>
    </member>
    <member name="E:System.Windows.Application.SessionEnding">
      <summary>ユーザーがログオフするかオペレーティング システムをシャットダウンして、Windows セッションを終了するときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
      <summary>
        <see cref="T:System.Uri" /> で指定した場所にクッキーを作成します。</summary>
      <param name="uri">クッキーを作成する場所を指定する <see cref="T:System.Uri" />。</param>
      <param name="value">クッキー データを格納している <see cref="T:System.String" />。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">指定したクッキー作成の試行中に問題が起きると、(<see cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)" /> から呼び出された) <see langword="InternetSetCookie" /> 関数により Win32 エラーが発生します。</exception>
    </member>
    <member name="M:System.Windows.Application.Shutdown">
      <summary>アプリケーションをシャットダウンします。</summary>
    </member>
    <member name="M:System.Windows.Application.Shutdown(System.Int32)">
      <summary>アプリケーションをシャットダウンして、指定した終了コードをオペレーティング システムに返します。</summary>
      <param name="exitCode">アプリケーションの整数型終了コード。 既定の終了コードは 0 です。</param>
    </member>
    <member name="P:System.Windows.Application.ShutdownMode">
      <summary>
        <see cref="M:System.Windows.Application.Shutdown" /> メソッドが呼び出される条件を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.ShutdownMode" /> 列挙値。 既定値は <see cref="F:System.Windows.ShutdownMode.OnLastWindowClose" /> です。</returns>
    </member>
    <member name="E:System.Windows.Application.Startup">
      <summary>
        <see cref="M:System.Windows.Application.Run" /> オブジェクトの <see cref="T:System.Windows.Application" /> メソッドが呼び出されると発生します。</summary>
    </member>
    <member name="P:System.Windows.Application.StartupUri">
      <summary>アプリケーションの起動時に自動的に表示される UI を取得または設定します。</summary>
      <returns>アプリケーションの起動時に自動的に開く UI を参照する <see cref="T:System.Uri" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Application.StartupUri" /> に null の値が設定されています。</exception>
    </member>
    <member name="M:System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>指定されたアンビエント プロパティを現在のスコープで使用できるかどうかを照会します。</summary>
      <param name="propertyName">要求されたアンビエント プロパティの名前。</param>
      <returns>要求されたアンビエント プロパティを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Application.TryFindResource(System.Object)">
      <summary>指定したリソースを検索します。</summary>
      <param name="resourceKey">検索するリソースの名前。</param>
      <returns>要求されたリソース オブジェクト。 要求したリソースが見つからない場合は、null 参照が返されます。</returns>
    </member>
    <member name="P:System.Windows.Application.Windows">
      <summary>アプリケーションでインスタンス化されたウィンドウを取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.WindowCollection" /> のすべてのウィンドウ オブジェクトへの参照を格納している <see cref="T:System.AppDomain" />。</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
      <summary>添付プロパティが、論理ツリー内の子要素を拡張するブラウズ可能なスコープを持つことを指定します。</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor">
      <summary>
        <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)">
      <summary>現在の <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> .NET Framework 属性 が、指定したオブジェクトと等しいかどうかを判断します。</summary>
      <param name="obj">現在の <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> と比較する <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />。</param>
      <returns>指定した <see langword="true" /> が現在の <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> と等しい場合は <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode">
      <summary>この <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> .NET Framework 属性のハッシュ コードを返します。</summary>
      <returns>32 ビットの符号なし整数値。</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants">
      <summary>この .NET Framework 属性 が適用される添付プロパティで親要素の検出に詳細モードを使用するかどうかを示す値を取得または設定します。</summary>
      <returns>添付プロパティを所有する親要素の論理ツリーにあるすべての子要素で添付プロパティを参照できる場合は、<see langword="true" />。 添付プロパティを所有する親要素の直接の子要素だけが添付プロパティを参照できる場合は、<see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Button" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.#ctor(System.Windows.Controls.Button)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオートメーション ピアに関連付けられている要素です。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>UI オートメーション ピアに関連付けられている要素のコントロール型を取得します。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetClassNameCore">
      <summary>この UI オートメーション ピアと関連付けられたコントロールの名前を取得します。</summary>
      <returns>"Button" を格納している文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この Automation Peer に関連付けられている要素の指定されたコントロール パターンをサポートするオブジェクトを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" /> の場合、このメソッドは <see langword="this" /> ポインターを返します。それ以外の場合、このメソッドは <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> から UI オートメーションに派生した要素を公開する基本クラスを表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.ButtonBase)">
      <summary>派生クラスのコンストラクターによって呼び出されるときに基本クラスの値を初期化します。</summary>
      <param name="owner">このピアに関連付けられる <see cref="T:System.Windows.Controls.Primitives.ButtonBase" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetAcceleratorKeyCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" /> に関連付けられている要素のアクセラレータ キーを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" /> によって呼び出されます。</summary>
      <returns>アクセラレータ キーを含む文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetAutomationIdCore">
      <summary>この <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> に関連付けられている要素の <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" /> を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> によって呼び出されます。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" /> に関連付けられている要素のクラスの名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>アクセラレータ キーを除くクラス名を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Calendar" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.#ctor(System.Windows.Controls.Calendar)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオートメーション ピアに関連付けられている要素です。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この Automation Peer に関連付けられている要素の指定されたコントロール パターンをサポートするオブジェクトを取得します。</summary>
      <param name="patternInterface">コントロール パターンを指定する列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" />、<see cref="F:System.Windows.Automation.Peers.PatternInterface.Table" />、<see cref="F:System.Windows.Automation.Peers.PatternInterface.MultipleView" />、または <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" /> の場合、このメソッドは <see langword="this" /> ポインターを返します。それ以外の場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>グリッド内の列の合計数を取得します。</summary>
      <returns>グリッド内の列の合計数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>指定したセルの UI オートメーション プロバイダーを取得します。</summary>
      <param name="row">目的の行の序数。</param>
      <param name="column">目的の列の序数。</param>
      <returns>指定したセルの UI オートメーション プロバイダー。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>グリッド内の行の合計数を取得します。</summary>
      <returns>グリッド内の行の合計数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>指定したプロパティ値を持つ要素を取得します。</summary>
      <param name="startAfterProvider">検索の開始位置となるコンテナー内の項目。</param>
      <param name="propertyId">取得する値を格納するプロパティ。</param>
      <param name="value">取得する値。</param>
      <returns>検索条件に一致する最初の項目。一致する項目がない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
      <summary>現在のコントロールに固有のビューを取得します。</summary>
      <returns>UI オートメーション要素の現在のビューに対する値です。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
      <summary>コントロール固有のビュー識別子のコレクションを取得します。</summary>
      <returns>UI オートメーション要素に使用できるビューを識別する値のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
      <summary>コントロール固有のビューの名前を取得します。</summary>
      <param name="viewId">ビュー識別子。</param>
      <returns>ローカライズされたビューの名前。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
      <summary>現在のコントロールに固有のビューを設定します。</summary>
      <param name="viewId">ビュー識別子。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> は、サポートされているビュー コレクションのメンバーではありません。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>UI オートメーション プロバイダーが複数の子要素の同時選択を許可するかどうかを示す値を取得します。</summary>
      <returns>複数を選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>選択されている各子要素の UI オートメーション プロバイダーを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>UI オートメーション プロバイダーが少なくとも 1 つの子要素の選択を必要とするかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>テーブル内のすべての列ヘッダーを表す UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>テーブル内のすべての行ヘッダーを表す UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>テーブルの主要な移動方向を取得します。</summary>
      <returns>主要な移動方向。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.#ctor(System.Windows.Controls.Button)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオートメーション ピアに関連付けられている要素です。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.CheckBox" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.#ctor(System.Windows.Controls.CheckBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.CheckBox" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> に関連付けられている要素の <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.CheckBox" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> に関連付けられている要素の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"CheckBox" を格納している文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.ComboBox" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.#ctor(System.Windows.Controls.ComboBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ComboBox" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="item">この <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ComboBoxItem" />。</param>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> クラスの新しいインスタンス。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ComboBox" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetChildrenCore">
      <summary>子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> に関連付けられている型を定義するクラスの名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"ComboBox" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> のコントロール パターンを取得します。</summary>
      <param name="pattern">列挙値の 1 つ。</param>
      <returns>
        <paramref name="pattern" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value" /> または <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" /> である場合、このメソッドは <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> の現在のインスタンスへの参照を返します。それ以外の場合は、<see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> の基本実装を呼び出します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.SetFocusCore">
      <summary>この <see cref="T:System.Windows.Controls.ComboBox" /> オブジェクトに関連付けられている <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> コントロールにキーボード入力フォーカスを設定します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /> によって呼び出されます。</summary>
      <exception cref="T:System.InvalidOperationException">この <see cref="T:System.Windows.Controls.ComboBox" /> オブジェクトに関連付けられている <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> コントロールは、フォーカスを取得できません。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>現在の要素の <see cref="T:System.Windows.Automation.ExpandCollapseState" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>値が読み取り専用の場合は <see langword="true" />。変更可能な場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="val">コントロールの文字列値。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールの文字列値。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ContentTextAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.TextPattern" /> 型を UI オートメーションに公開するための基本クラスを表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContentTextAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
      <summary>派生クラスのコンストラクターによって呼び出されるときに基本クラスの値を初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ContentTextAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Automation.TextPattern" />。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.ContextMenu" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.#ctor(System.Windows.Controls.ContextMenu)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ContextMenu" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.ContextMenu" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.ContextMenu" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"ContextMenu" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.IsContentElementCore">
      <summary>この Automation Peer に関連付けられている要素が、ユーザーに提示されるデータを含むかどうかを示す値を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> によって呼び出されます。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.DataGrid" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.#ctor(System.Windows.Controls.DataGrid)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオートメーション ピアに関連付けられている要素です。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>このオートメーション ピアに関連付けられている要素について、指定されたコントロール パターンをサポートするオブジェクトを返します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" />、<see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />、または <see cref="F:System.Windows.Automation.Peers.PatternInterface.Table" /> である場合、このメソッドは <see langword="this" /> ポインターを返します。それ以外の場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>グリッド内の列の合計数を取得します。</summary>
      <returns>グリッド内の列の合計数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>指定したセルの UI オートメーション プロバイダーを取得します。</summary>
      <param name="row">目的の行の序数。</param>
      <param name="column">目的の列の序数。</param>
      <returns>指定したセルの UI オートメーション プロバイダー。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>グリッド内の行の合計数を取得します。</summary>
      <returns>グリッド内の行の合計数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>UI オートメーション プロバイダーが複数の子要素の同時選択を許可するかどうかを示す値を取得します。</summary>
      <returns>複数を選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>選択されている各子要素の UI オートメーション プロバイダーを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>UI オートメーション プロバイダーが少なくとも 1 つの子要素の選択を必要とするかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>テーブル内のすべての列ヘッダーを表す UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>テーブル内のすべての行ヘッダーを表す UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>テーブルの主要な移動方向を取得します。</summary>
      <returns>主要な移動方向。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.DataGridCell" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.#ctor(System.Windows.Controls.DataGridCell)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">コントロール パターンを指定する列挙値。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.DataGridCell" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.#ctor(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="item">このオートメーション ピアに関連付けられる要素。</param>
      <param name="dataGridColumn">
        <paramref name="item" /> が含まれている <see cref="T:System.Windows.Controls.DataGrid" /> 列。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>このオートメーション ピアに関連付けられている要素について、指定されたコントロール パターンをサポートするオブジェクトを返します。</summary>
      <param name="patternInterface">コントロール パターンを指定する列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> の値がサポートされている場合は、現在の <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> オブジェクト。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>セルまたは項目を格納する列の序数を取得します。</summary>
      <returns>セルまたは項目を格納する列を識別する、0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>セルまたは項目がまたがる列の数を取得します。</summary>
      <returns>またがる列の数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> を実装し、セルまたは項目のコンテナーを表す UI オートメーション プロバイダーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.GridPattern" /> を実装し、セルまたは項目のコンテナーを表す UI オートメーション プロバイダー。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>セルまたは項目を格納する行の序数を取得します。</summary>
      <returns>セルまたは項目を格納する行を識別する、0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>セルまたは項目がまたがる行の数を取得します。</summary>
      <returns>またがる行の数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>要求を送信してコントロールをアクティブ化し、その 1 つの明確なアクションを開始します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>コンテナーの可視領域 (ビューポート) 内のコントロールを表示するために、コンテナー オブジェクトのコンテンツ エリアをスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>選択した項目のコレクションに現在の要素を追加します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>項目が選択されているかどうかを示す値を取得します。</summary>
      <returns>要素が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>選択した項目のコレクションから現在の要素を削除します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>任意の選択された項目の選択を解除し、現在の要素を選択します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> を実装し、呼び出し元オブジェクトのコンテナーとして機能する UI オートメーション プロバイダーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> をサポートするプロバイダー。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>テーブルのアイテムやセルに関連付けられているすべての列ヘッダーを表す UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>テーブルの項目またはセルに関連付けられているすべての行ヘッダーを表す、UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>コントロールの値が読み取り専用かどうかを示す値を取得します。</summary>
      <returns>値が読み取り専用の場合は <see langword="true" />。変更可能な場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>コントロールの値を設定します。</summary>
      <param name="value">設定する値。 プロバイダーは、値を適切なデータ型に変換します。</param>
      <exception cref="T:System.InvalidOperationException">この <see cref="T:System.Windows.Controls.DataGridCell" /> オブジェクトに関連付けられている <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> オブジェクトが読み取り専用です。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>コントロールの値を取得します。</summary>
      <returns>文字列としてのコントロールの値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>仮想項目に UI オートメーション要素として全面的にアクセスできるようにします。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeader)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオートメーション ピアに関連付けられている要素です。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> にある <see cref="T:System.Windows.Controls.DataGridColumn" /> の <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="item">この <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> に関連付ける <see cref="T:System.Windows.Controls.DataGridColumn" /> の <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />。</param>
      <param name="column">
        <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> に関連付けられている列。</param>
      <param name="peer">
        <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> に関連付けられている <see cref="T:System.Windows.Controls.DataGrid" /> のオートメーション ピア。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> に関連付けられているヘッダーのコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.HeaderItem" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> で表されるヘッダーを識別する名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>この <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> プロパティの型名を取得します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>このオートメーション ピアに関連付けられている要素について、指定されたコントロール パターンをサポートするオブジェクトを返します。</summary>
      <param name="patternInterface">コントロール パターンを指定する列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> の値がサポートされている場合は、現在の <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> オブジェクト。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.IsContentElementCore">
      <summary>この Automation Peer に関連付けられている要素が、ユーザーに提示されるデータを含むかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>要求を送信してコントロールをアクティブ化し、その 1 つの明確なアクションを開始します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> に関連付けられているヘッダーおよび列をスクロールして表示します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>列を移動できるかどうかを指定する値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>列のサイズを変更できるかどうかを指定する値を取得します。</summary>
      <returns>要素のサイズを変更できる場合は <see langword="true" />。変更できない場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>コントロールが回転可能かどうかを指定する値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>常に例外をスローします。</summary>
      <param name="x">このパラメーターは使用されません。</param>
      <param name="y">このパラメーターは使用されません。</param>
      <exception cref="T:System.InvalidOperationException">すべての場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> に関連付けられている列の幅を変更します。</summary>
      <param name="width">列の新しい幅 (ピクセル単位)。</param>
      <param name="height">このパラメーターは使用されません。</param>
      <exception cref="T:System.InvalidOperationException">この <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> に関連付けられている列はサイズを変更できません。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>常に例外をスローします。</summary>
      <param name="degrees">このパラメーターは使用されません。</param>
      <exception cref="T:System.InvalidOperationException">すべての場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>仮想列に UI オートメーション要素として全面的にアクセスできるようにします。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオートメーション ピアに関連付けられている要素です。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>指定したプロパティ値を持つ要素を取得します。</summary>
      <param name="startAfter">検索の開始位置となるコンテナー内の項目。</param>
      <param name="propertyId">取得する値を格納するプロパティ。</param>
      <param name="value">取得する値。</param>
      <returns>検索条件に一致する最初の項目。一致する項目がない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridDetailsPresenter)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオートメーション ピアに関連付けられている要素です。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.DataGridRow" /> 型を公開します。 <see cref="T:System.Windows.Controls.DataGridRow" /> は、実際にメモリに存在する場合もあれば、存在しない場合もあります。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.DataGridAutomationPeer)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="item">この <see cref="P:System.Windows.Controls.ItemsControl.Items" /> に関連付けられた <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" /> コレクション内のデータ項目。</param>
      <param name="dataGridPeer">
        <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" /> コレクションを保持する <see cref="T:System.Windows.Controls.DataGrid" /> に関連付けられた <see cref="P:System.Windows.Controls.ItemsControl.Items" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>このオートメーション ピアに関連付けられている要素について、指定されたコントロール パターンをサポートするオブジェクトを返します。</summary>
      <param name="patternInterface">コントロール パターンを指定する列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> の値がサポートされている場合は、現在の <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> オブジェクト。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>要求を送信してコントロールをアクティブ化し、その 1 つの明確なアクションを開始します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>指定したプロパティ値を持つ要素を取得します。</summary>
      <param name="startAfter">検索の開始位置となるコンテナー内の項目。</param>
      <param name="propertyId">取得する値を格納するプロパティ。</param>
      <param name="value">取得する値。</param>
      <returns>検索条件に一致する最初の項目。一致する項目がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>コンテナー オブジェクトのコンテンツ エリアをスクロールして、コンテナーの可視領域 (ビューポート) 内にコントロールを表示します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>選択した項目のコレクションに現在の要素を追加します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>項目が選択されているかどうかを示す値を取得します。</summary>
      <returns>要素が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>選択した項目のコレクションから現在の要素を削除します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>選択されている項目をクリアし、現在の要素を選択します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> を実装し、呼び出し元オブジェクトのコンテナーとして機能する UI オートメーション プロバイダーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> コントロールのプロバイダー。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>UI オートメーション プロバイダーが、複数の子要素の同時選択を許可しているかどうかを示す値を取得します。</summary>
      <returns>複数を選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>選択されている各子要素の UI オートメーション プロバイダーを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>UI オートメーション プロバイダーが少なくとも 1 つの子要素の選択を必要とするかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.DataGridRow" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowAutomationPeer.#ctor(System.Windows.Controls.DataGridRow)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオートメーション ピアに関連付けられている要素です。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridRowHeader)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオートメーション ピアに関連付けられている要素です。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DatePickerAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.DatePicker" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.#ctor(System.Windows.Controls.DatePicker)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオートメーション ピアに関連付けられている要素です。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>このオートメーション ピアに関連付けられている要素について、指定されたコントロール パターンをサポートするオブジェクトを返します。</summary>
      <param name="patternInterface">コントロール パターンを指定する列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" /> または <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value" /> である場合、このメソッドは <see langword="this" /> ポインターを返します。それ以外の場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>コントロールの子孫であるすべてのノード、コントロール、またはコンテンツを非表示にします。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>すべての子ノード、コントロール、またはコントロールのコンテンツを表示します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>コントロールの状態 (展開されているか、または折りたたまれているかのいずれか) を取得します。</summary>
      <returns>コントロールの状態 (展開されているか、または折りたたまれているかのいずれか)。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>コントロールの値が読み取り専用かどうかを示す値を取得します。</summary>
      <returns>値が読み取り専用の場合は <see langword="true" />。変更可能な場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>コントロールの値を設定します。</summary>
      <param name="value">設定する値。 プロバイダーは、値を適切なデータ型に変換します。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>コントロールの値を取得します。</summary>
      <returns>コントロールの値を表す文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DateTimeAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> 型および <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.DateTimeAutomationPeer" /> のコントロール パターンの実装を取得します。</summary>
      <param name="patternInterface">取得対象の要素が実装するパターンの種類。</param>
      <returns>パターン インターフェイスを実装するオブジェクト。このピアが指定されたパターン インターフェイスを実装していない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>セルまたは項目を格納する列の序数を取得します。</summary>
      <returns>セルまたは項目を格納する列を識別する、0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>セルまたは項目がまたがる列の数を取得します。</summary>
      <returns>またがる列の数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> を実装する UI オートメーション プロバイダーを取得し、セルまたは項目のコンテナーを表します。</summary>
      <returns>セルまたは項目のコンテナーを表す UI オートメーション プロバイダー。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>セルまたは項目を格納する行の序数を取得します。</summary>
      <returns>セルまたは項目を格納する行を識別する、0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>セルまたは項目がまたがる行の数を取得します。</summary>
      <returns>またがる行の数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>要求を送信してコントロールをアクティブ化し、その 1 つの明確なアクションを開始します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>選択した項目のコレクションに現在の要素を追加します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>項目が選択されているかどうかを示す値を取得します。</summary>
      <returns>要素が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>選択した項目のコレクションから現在の要素を削除します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>選択されている項目をクリアし、現在の要素を選択します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> を実装し、呼び出し元オブジェクトのコンテナーとして機能する UI オートメーション プロバイダーを取得します。</summary>
      <returns>呼び出し元オブジェクトのコンテナーの役割を果たすプロバイダー。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>テーブルの項目またはセルに関連付けられたすべての列ヘッダーを表す、UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>テーブルの項目またはセルに関連付けられたすべての行ヘッダーを表す、UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>仮想項目に UI オートメーション要素として全面的にアクセスできるようにします。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentAutomationPeer">
      <summary>UI オートメーションに <see cref="F:System.Windows.Automation.ControlType.Document" /> コントロール型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.FrameworkContentElement" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> に関連付けられたコントロールのコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>常に <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetBoundingRectangleCore">
      <summary>この <see cref="T:System.Windows.Rect" /> に関連付けられている要素の画面座標を表す <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /> によって呼び出されます。</summary>
      <returns>外接する四角形。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.FrameworkContentElement" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> の子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> は、<see cref="T:System.Windows.Automation.TextPattern" /> を使用してそのコンテンツへのアクセス権を付与するので、このメソッドは常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.FrameworkContentElement" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Document" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetClickablePointCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.FrameworkContentElement" /> 上にあるクリック可能なスペースを表す <see cref="T:System.Windows.Point" /> を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> によって呼び出されます。</summary>
      <returns>要素上のクリック可能な領域を表すポイント。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.FrameworkContentElement" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text" /> の場合、このメソッドは <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.IsControlElementCore">
      <summary>この <see cref="T:System.Windows.FrameworkContentElement" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> を対話的なものとしてエンド ユーザーが認識するかどうか、または <see cref="T:System.Windows.FrameworkContentElement" /> を GUI に含まれるコントロールの論理構造に利用できるものとしてユーザーが認識するかどうかを示す値を取得または設定します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> によって呼び出されます。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.IsOffscreenCore">
      <summary>この <see cref="T:System.Windows.FrameworkContentElement" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> が画面から外れているかどうかを示す値を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /> によって呼び出されます。</summary>
      <returns>要素が画面上にない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.#ctor(System.Windows.Controls.Primitives.DocumentPageView)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.GetAutomationIdCore">
      <summary>この <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" /> を一意に識別する文字列を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> によって呼び出されます。</summary>
      <returns>オートメーション識別子を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> の子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>この <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" /> の子要素のコレクション。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.DocumentViewer" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.#ctor(System.Windows.Controls.DocumentViewer)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.DocumentViewer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.DocumentViewer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"DocumentViewer" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.DocumentViewer" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem" /> である場合、このメソッドは、この <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> の <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> を返します。 また、このメソッドは、<see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> を <see cref="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource" /> として設定します。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.DocumentViewerBase)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> の子要素のコレクションを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"DocumentViewer" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text" /> である場合、このメソッドは <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> 参照を返します。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ExpanderAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Expander" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.#ctor(System.Windows.Controls.Expander)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Expander" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Expander" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" /> 列挙値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> と関連付けられている <see cref="T:System.Windows.Controls.Expander" /> コントロールの子要素のコレクションを取得して、テンプレート化されたトグル ボタンのイベント ソースをこの <see cref="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetChildrenCore" /> インスタンスに設定します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.Expander" /> コントロールの子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.Expander" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Expander" を含む文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Expander" /> のコントロール パターンを取得します。</summary>
      <param name="pattern">列挙値の 1 つ。</param>
      <returns>
        <paramref name="pattern" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" /> である場合、このメソッドは <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> の現在のインスタンスへの参照を返します。それ以外の場合は、<see langword="null" /> を返す <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer" /> の基本実装を呼び出します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.HasKeyboardFocusCore">
      <summary>展開コントロールにオートメーション キーボード フォーカスがあるかどうかを示します。</summary>
      <returns>展開コントロールにオートメーション キーボード フォーカスがある場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールの状態 (展開されているか、または折りたたまれているかのいずれか)。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FixedPageAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Documents.FixedPage" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.#ctor(System.Windows.Documents.FixedPage)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Documents.FixedPage" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Documents.FixedPage" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane" /> 列挙値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Documents.FixedPage" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"FixedPage" を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentPageViewer)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" /> の子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"FlowDocumentPageViewer" を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentReader)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.FlowDocumentReader" /> の子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.FlowDocumentReader" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>この <see cref="T:System.Windows.Controls.FlowDocumentReader" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /> の名前。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.FlowDocumentReader" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.MultipleView" /> の場合、このメソッドは <see langword="this" /> ポインターを返します。 それ以外の場合、このメソッドは <see langword="null" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
      <summary>現在のコントロールに固有のビューを取得します。</summary>
      <returns>UI オートメーション要素の現在のビューに対する値です。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
      <summary>コントロール固有のビュー識別子のコレクションを返します。</summary>
      <returns>UI オートメーション要素に使用できるビューを識別する値のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
      <summary>コントロール固有のビューの名前を返します。</summary>
      <param name="viewId">ビューの ID。</param>
      <returns>コントロール固有のビューの名前。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
      <summary>現在のコントロールに固有のビューを設定します。</summary>
      <param name="viewId">ビューの ID。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentScrollViewer)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /> の子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"FlowDocumentScrollViewer" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>
        <paramref name="patternInterface" /> がサポートされている値の場合は、コントロール パターンをサポートするオブジェクト。それ以外の場合は、<see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Frame" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.#ctor(System.Windows.Controls.Frame)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Frame" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.Frame" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.Frame" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Frame" を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.FrameworkContentElement" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.FrameworkContentElement" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetAutomationIdCore">
      <summary>この <see cref="T:System.Windows.FrameworkContentElement" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> を一意に識別する文字列を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.FrameworkContentElement" /> を一意に識別する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetHelpTextCore">
      <summary>この <see cref="T:System.Windows.FrameworkContentElement" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> の機能を説明する文字列を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /> によって呼び出されます。</summary>
      <returns>要素の機能を説明する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetLabeledByCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.Label" /> を対象としている <see cref="T:System.Windows.FrameworkContentElement" /> の <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer" /> を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Label" /> によりターゲットとされる要素の <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.FrameworkElement" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.#ctor(System.Windows.FrameworkElement)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.FrameworkElement" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAutomationIdCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.FrameworkElement" /> を一意に識別する文字列を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている要素のオートメーション識別子。オートメーション識別子が存在しない場合は <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetHelpTextCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.ContentElement" /> の機能について記述する文字列を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /> によって呼び出されます。</summary>
      <returns>ヘルプ テキスト (通常は <see cref="T:System.Windows.Controls.ToolTip" /> から取得されます)。ヘルプ テキストが存在しない場合は <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.ContentElement" /> のテキスト ラベルを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>このオートメーション ピアに関連付けられている要素のテキスト ラベル。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.GridSplitter" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.#ctor(System.Windows.Controls.GridSplitter)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.GridSplitter" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.GridSplitter" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"GridSplitter" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> のコントロール パターンを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Transform" /> である場合、このメソッドは <see langword="this" /> ポインターを返します。それ以外の場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>要素を移動できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>要素のサイズを変更できる場合は <see langword="true" />。変更できない場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>要素を回転できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="x">コントロールの左側の絶対画面座標。</param>
      <param name="y">コントロールの上部の絶対画面座標。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="width">ウィンドウの新しい幅 (ピクセル単位)。</param>
      <param name="height">ウィンドウの新しい高さ (ピクセル単位)。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="degrees">コントロールを回転する角度の数値。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.GridView" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.#ctor(System.Windows.Controls.GridView,System.Windows.Controls.ListView)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Controls.GridView" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" />。</param>
      <param name="listview">
        <see cref="T:System.Windows.Controls.ListView" /> が表示モードとして使用している <see cref="T:System.Windows.Controls.GridView" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#CreateItemAutomationPeer(System.Object)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="item">作成する項目。</param>
      <returns>作成された項目。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#GetAutomationControlType">
      <summary>この <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。</summary>
      <returns>列挙値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#GetChildren(System.Collections.Generic.List{System.Windows.Automation.Peers.AutomationPeer})">
      <summary>指定した UI オートメーション ピアの直接の子要素のコレクションを取得します。</summary>
      <param name="children">取得する子オブジェクトのコレクション。</param>
      <returns>子オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>指定した <paramref name="patternInterface" /> に関連付けられているコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" /> または <see cref="F:System.Windows.Automation.Peers.PatternInterface.Table" /> の場合、このメソッドはコントロール パターンを実装するオブジェクトを返します。それ以外の場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#ItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>項目のコレクションが変更されると呼び出されます。</summary>
      <param name="e">イベントに関連付けられているデータ。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#ViewDetached">
      <summary>カスタム ビューがコントロールに適用されなくなると呼び出されます。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>グリッド内の列の合計数を取得します。</summary>
      <returns>グリッド内の列の合計数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>指定したセルの UI オートメーション プロバイダーを返します。</summary>
      <param name="row">目的の行の序数。</param>
      <param name="column">目的の列の序数。</param>
      <returns>指定したセルの UI オートメーション プロバイダー。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>グリッド内の行の合計数を取得します。</summary>
      <returns>グリッド内の行の合計数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>テーブルのすべての列ヘッダーを表す UI オートメーション プロバイダーのコレクションを返します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>テーブルのすべての行ヘッダーを表す UI オートメーション プロバイダーのコレクションを返します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>テーブルの主要な移動方向を取得します。</summary>
      <returns>主要な移動方向。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.GridView" /> 内のセルを UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> が <see cref="T:System.Windows.Controls.TextBlock" /> 要素に関連付けられている場合、このメソッドは <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> を返します。それ以外の場合、このメソッドは <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> に関連付けられている要素の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>要素の名前。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> に関連付けられている要素のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.GridItem" /> または <see cref="F:System.Windows.Automation.Peers.PatternInterface.TableItem" /> の場合、このメソッドは現在の <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.IsControlElementCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> に関連付けられている要素を対話的なものとしてエンド ユーザーが認識するかどうか、またはこの要素を GUI に含まれるコントロールの論理構造に利用できるものとしてユーザーが認識するかどうかを示す値を取得または設定します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> によって呼び出されます。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> が <see cref="T:System.Windows.Controls.TextBlock" /> 要素に関連付けられている場合、このメソッドは <see langword="true" /> を返します。それ以外の場合は、子要素のリストを返します。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>セルまたは項目を格納する列の序数を取得します。</summary>
      <returns>セルまたは項目を格納する列を識別する、0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>セルまたは項目がまたがる列の数を取得します。</summary>
      <returns>またがる列の数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>
        <see cref="T:System.Windows.Automation.GridPattern" /> を実装し、セルまたは項目のコンテナーを表す UI オートメーション プロバイダーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.GridPattern" /> を実装し、セルまたは項目のコンテナーを表す UI オートメーション プロバイダー。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>セルまたは項目を格納する行の序数を取得します。</summary>
      <returns>セルまたは項目を格納する行を識別する、0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>セルまたは項目がまたがる行の数を取得します。</summary>
      <returns>またがる行の数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>テーブルの項目またはセルに関連付けられたすべての列ヘッダーを表す、UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>テーブルの項目またはセルに関連付けられたすべての行ヘッダーを表す、UI オートメーション プロバイダーのコレクションを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.#ctor(System.Windows.Controls.GridViewColumnHeader)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.HeaderItem" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"GridViewColumnHeader" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Transform" /> または <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" /> である場合、このメソッドは <see langword="this" /> ポインターを返します。それ以外の場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.IsContentElementCore">
      <summary>この Automation Peer に関連付けられている要素が、ユーザーに提示されるデータを含むかどうかを示す値を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> によって呼び出されます。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>要素を移動できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>要素のサイズを変更できる場合は <see langword="true" />。変更できない場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>要素を回転できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="x">コントロールの左側の絶対画面座標。</param>
      <param name="y">コントロールの上部の絶対画面座標。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="width">ウィンドウの新しい幅 (ピクセル単位)。</param>
      <param name="height">ウィンドウの新しい高さ (ピクセル単位)。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="degrees">コントロールを回転する角度の数値。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.#ctor(System.Windows.Controls.GridViewHeaderRowPresenter)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Header" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> の子要素のコレクションを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"GridViewHeaderRowPresenter" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.IsContentElementCore">
      <summary>この Automation Peer に関連付けられている要素が、ユーザーに提示されるデータを含むかどうかを示す値を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> によって呼び出されます。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.GridView" /> 型の <see cref="P:System.Windows.Controls.ItemsControl.Items" /> のコレクション内のデータ項目を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ListViewAutomationPeer)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> に関連付けられているデータ項目。</param>
      <param name="listviewAP">この <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> の親である <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> に関連付けられた <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションのコントロール型を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.DataItem" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetChildrenCore">
      <summary>この <see cref="P:System.Windows.Controls.ItemsControl.Items" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> コレクションの子要素のコレクションを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetClassNameCore">
      <summary>この <see cref="P:System.Windows.Controls.ItemsControl.Items" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> コレクションの名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"ListViewItem" を格納している文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.GroupBox" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.#ctor(System.Windows.Controls.GroupBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.GroupBox" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.GroupBox" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.GroupBox" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"GroupBox" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.ContentElement" /> のテキスト ラベルを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>ラベルを含む文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GroupItemAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.GroupItem" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.#ctor(System.Windows.Controls.GroupItem)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.GroupItem" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.GroupItem" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Controls.GroupItem" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> の子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.GroupItem" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"GroupItem" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.GroupItem" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>
        <paramref name="pattern" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" /> で、この <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.GroupItem" /> に <see cref="T:System.Windows.Controls.Expander" /> が含まれている場合、このメソッドは <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> の現在のインスタンスへの参照を返します。  それ以外の場合、このメソッドは基本実装である <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer" /> を呼び出して <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetPositionInSetCore">
      <summary>セット内でのこの <see cref="T:System.Windows.Controls.GroupItem" /> の位置を取得します。</summary>
      <returns>セット内でのこの <see cref="T:System.Windows.Controls.GroupItem" /> の位置。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetSizeOfSetCore">
      <summary>この <see cref="T:System.Windows.Controls.GroupItem" /> を含むセットのサイズを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.GroupItem" /> を含むセットのサイズ。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.HasKeyboardFocusCore">
      <summary>このオートメーション ピアに関連付けられている要素に現在キーボード フォーカスがあるかどうかを示す目的で <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" /> メソッドによって呼び出されるメソッドを指定します。</summary>
      <returns>要素にキーボード フォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>要素がキーボード フォーカスを受け入れることができるかどうかを示す目的で <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" /> メソッドによって呼び出されるメソッドを指定します。</summary>
      <returns>要素がキーボード フォーカスを受け入れることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.SetFocusCore">
      <summary>このオートメーション ピアに関連付けられている要素にキーボード フォーカスを設定する目的で <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /> によって呼び出されるメソッドを指定します。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Documents.Hyperlink" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.#ctor(System.Windows.Documents.Hyperlink)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Documents.Hyperlink" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Documents.Hyperlink" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Hyperlink" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Documents.Hyperlink" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Hyperlink" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Documents.Hyperlink" /> のテキスト ラベルを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>ラベルを含む文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Documents.Hyperlink" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" /> である場合、このメソッドは <see langword="this" /> ポインターを返します。それ以外の場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.IsControlElementCore">
      <summary>この <see cref="T:System.Windows.Documents.Hyperlink" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> が対話的なものとしてエンド ユーザーが認識するかどうか、または <see cref="T:System.Windows.Documents.Hyperlink" /> を GUI に含まれるコントロールの論理構造に利用できるものとしてユーザーが認識するかどうかを示す値を取得または設定します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> によって呼び出されます。</summary>
      <returns>
        <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ImageAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Image" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.#ctor(System.Windows.Controls.Image)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Image" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.Image" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Image" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.Image" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Image" を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.InkCanvas" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.#ctor(System.Windows.Controls.InkCanvas)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.InkCanvas" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.InkCanvas" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.InkCanvas" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"InkCanvas" を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.InkPresenter" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.#ctor(System.Windows.Controls.InkPresenter)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.InkPresenter" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.InkPresenter" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.InkPresenter" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"InkPresenter" を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemAutomationPeer">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内のデータ項目を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer)">
      <summary>派生クラスのコンストラクターによって呼び出されるときに基本クラスの値を初期化します。</summary>
      <param name="item">この <see cref="P:System.Windows.Controls.ItemsControl.Items" /> に関連付けられた <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> コレクション内のデータ項目。</param>
      <param name="itemsControlAutomationPeer">
        <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> コレクションを保持する <see cref="T:System.Windows.Controls.ItemsControl" /> に関連付けられた <see cref="P:System.Windows.Controls.ItemsControl.Items" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAcceleratorKeyCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションにあるデータ項目に対応する <see cref="T:System.Windows.UIElement" /> のアクセラレータ キーを取得します。</summary>
      <returns>アクセラレータ キー。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAccessKeyCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションにあるデータ項目に対応する <see cref="T:System.Windows.UIElement" /> のアクセス キーを取得します。</summary>
      <returns>アクセス キー。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAutomationIdCore">
      <summary>この <see cref="T:System.Windows.UIElement" /> に関連付けられている <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内のデータ項目に対応する <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> を一意に識別する文字列を取得します。</summary>
      <returns>UI オートメーション 識別子を含む文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetBoundingRectangleCore">
      <summary>指定した <see cref="T:System.Windows.Rect" /> の外接する四角形を表す <see cref="T:System.Windows.UIElement" /> を取得します。</summary>
      <returns>外接する四角形。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.UIElement" /> に関連付けられている <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内のデータ項目に対応する <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> の子要素のコレクションを取得します。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetClickablePointCore">
      <summary>指定した <see cref="T:System.Windows.Point" /> 上のクリック可能な領域を表す <see cref="T:System.Windows.UIElement" /> を取得します。</summary>
      <returns>指定した <see cref="T:System.Windows.UIElement" /> 上のクリック可能な領域を表すポイント。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetHelpTextCore">
      <summary>この <see cref="T:System.Windows.UIElement" /> に関連付けられている <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内のデータ要素に対応する、<see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> の機能を説明する文字列を取得します。</summary>
      <returns>ヘルプ テキスト。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemStatusCore">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> の表示ステータスを伝える文字列を取得します。</summary>
      <returns>ステータス。 例として、"取り込み中" や "オンライン" があります。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemTypeCore">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> が表す項目の種類を格納する文字列を、ユーザーが判読できる形で取得します。</summary>
      <returns>項目の種類。 例として、"メール メッセージ" や "連絡先" があります。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLabeledByCore">
      <summary>指定した <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を対象としている <see cref="T:System.Windows.Controls.Label" /> の <see cref="T:System.Windows.UIElement" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Label" /> によりターゲットとされる要素の <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLiveSettingCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> オブジェクトに関連付けられている <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションにあるデータ項目に対応する <see cref="T:System.Windows.UIElement" /> のライブ領域の通知特性を取得します。</summary>
      <returns>ライブ領域の通知特性。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.UIElement" /> に関連付けられた <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内のデータ項目に対応する <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> のテキスト ラベルを取得します。</summary>
      <returns>テキスト ラベル。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetOrientationCore">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> が特定の方向に配置されているかどうかを示す値を取得します。</summary>
      <returns>指定した <see cref="T:System.Windows.UIElement" /> の方向。 <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.None" /> が特定の方向に配置されていない場合、このメソッドは、オプションで <see cref="T:System.Windows.UIElement" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>このオートメーション ピアに関連付けられている要素について、指定されたコントロール パターンをサポートするオブジェクトを返します。</summary>
      <param name="patternInterface">コントロール パターンを指定する列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> がサポートされている値の場合は、コントロール パターンをサポートするオブジェクト。それ以外の場合は、<see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetPositionInSetCore">
      <summary>セット内でのこの項目の位置を取得します。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.AutomationProperties.PositionInSetProperty" /> が設定されている場合はその値、あるいは親の <see cref="T:System.Windows.Controls.ItemsControl" /> または <see cref="T:System.Windows.Controls.GroupItem" /> コントロールに関連するそれの位置。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetSizeOfSetCore">
      <summary>この項目を含むセットのサイズを取得します。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.AutomationProperties.SizeOfSetProperty" /> の値が設定されている場合はその値、あるいは親の <see cref="T:System.Windows.Controls.ItemsControl" /> または <see cref="T:System.Windows.Controls.GroupItem" /> コントロールのサイズ。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.HasKeyboardFocusCore">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> に現在キーボード入力フォーカスがあるかどうかを示す値を取得します。</summary>
      <returns>指定した <see cref="T:System.Windows.UIElement" /> にキーボード入力フォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsContentElementCore">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> がユーザーに提示するデータを含んでいるかどうかを示す値を取得します。</summary>
      <returns>要素がコンテンツ要素である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsControlElementCore">
      <summary>この <see cref="T:System.Windows.UIElement" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> を、対話的なものとしてエンド ユーザーが認識するかどうかを示す値を取得します。</summary>
      <returns>要素がコントロールである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsEnabledCore">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> がイベントを送受信できるかどうかを示す値を取得します。</summary>
      <returns>UI オートメーション ピアがイベントを送受信できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> がキーボード フォーカスを受け入れることができるかどうかを示す値を取得します。</summary>
      <returns>要素がキーボード フォーカスを受け入れることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsOffscreenCore">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> が画面から外れているかどうかを示す値を取得します。</summary>
      <returns>指定した <see cref="T:System.Windows.UIElement" /> が画面上にない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsPasswordCore">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> に保護されたコンテンツが格納されているかどうかを示す値を取得します。</summary>
      <returns>指定した <see cref="T:System.Windows.UIElement" /> に保護されたコンテンツが含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsRequiredForFormCore">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> がフォームの必須要素かどうかを示す値を取得します。</summary>
      <returns>指定した <see cref="T:System.Windows.UIElement" /> が必須要素の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.Item">
      <summary>この <see cref="P:System.Windows.Controls.ItemsControl.Items" /> に関連付けられた <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> コレクション内のデータ項目を取得します。</summary>
      <returns>データ項目。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> コレクションを保持する <see cref="T:System.Windows.Controls.ItemsControl" /> に関連付けられた <see cref="P:System.Windows.Controls.ItemsControl.Items" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> オブジェクトに関連付けられている <see cref="T:System.Windows.Controls.ItemsControl" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.SetFocusCore">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> にキーボード入力フォーカスを設定します。 <see cref="T:System.Windows.UIElement" /> は、この <see cref="P:System.Windows.Controls.ItemsControl.Items" /> に関連付けられた <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> コレクション内のデータ項目に対応します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>仮想項目に UI オートメーション要素として全面的にアクセスできるようにします。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.ItemsControl" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.#ctor(System.Windows.Controls.ItemsControl)">
      <summary>派生クラスのコンストラクターによって呼び出されるときに基本クラスの値を初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ItemsControl" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>派生クラスでオーバーライドされると、この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> の <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内のデータ項目に対して <see cref="T:System.Windows.Controls.ItemsControl" /> の新しいインスタンスを作成します。</summary>
      <param name="item">この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているデータ項目。</param>
      <returns>新しく作成した <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.FindOrCreateItemAutomationPeer(System.Object)">
      <summary>指定されたオブジェクトの <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> を返します。</summary>
      <param name="item">
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> を入手する対象のアイテム。</param>
      <returns>指定したオブジェクトの <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.ItemsControl" /> の子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ItemsControl" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>この <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemsControlAutomationPeer.IsVirtualized">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> が仮想化されていない子項目の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクトを返す必要があるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> が仮想化されていない子項目の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクトを返す必要がある場合は <see langword="true" />。<see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> がすべての子項目の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクトを返す必要がある場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>指定したプロパティ値を持つ要素を取得します。</summary>
      <param name="startAfter">検索の開始位置となるコンテナー内の項目。</param>
      <param name="propertyId">取得する値を格納するプロパティ。</param>
      <param name="value">取得する値。</param>
      <returns>検索条件に一致する最初の項目。一致する項目がない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.IViewAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.ListView" /> から派生する <see cref="T:System.Windows.Controls.ViewBase" /> のカスタマイズされたビューを、そのカスタム ビューに固有のオートメーション ピア機能の実装のために許可します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="item">この <see cref="T:System.Windows.Controls.ListViewItem" /> によって使用される <see cref="T:System.Windows.Controls.ListView" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" />。</param>
      <returns>新しい <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> インスタンス。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetAutomationControlType">
      <summary>この <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> 列挙値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetChildren(System.Collections.Generic.List{System.Windows.Automation.Peers.AutomationPeer})">
      <summary>指定した UI オートメーション ピアの直接の子要素のコレクションを取得します。</summary>
      <param name="children">リスト項目のオートメーション ピア。</param>
      <returns>コントロール内のすべての項目のオートメーション ピア。 リスト項目に加え、ビューに対話形式の要素または情報提供要素が含まれる場合、これらの要素のオートメーション ピアをリストに追加する必要があります。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>指定した <paramref name="patternInterface" /> に関連付けられているコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>コントロール パターンを実装するオブジェクトを返します。 このメソッドが null を返す場合、<see cref="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)" /> からの戻り値が使用されます。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.ItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>項目のコレクションが変更されるときに、<see cref="T:System.Windows.Controls.ListView" /> によって呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.ViewDetached">
      <summary>カスタム ビューが <see cref="T:System.Windows.Controls.ListView" /> に適用されなくなったときに呼び出されます。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.LabelAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Label" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.#ctor(System.Windows.Controls.Label)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Label" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.Label" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.Label" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Label" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.Label" /> のテキスト ラベルを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>ラベルを含む文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.ListBox" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.#ctor(System.Windows.Controls.ListBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ListBox" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="item">この <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ListBoxItem" />。</param>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> クラスの新しいインスタンス。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.ListBox" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"ListBox" を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> の <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内の項目を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ListBoxItem" />。</param>
      <param name="selectorAutomationPeer">この <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> の親である <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.ListBoxItem" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ListItem" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.ListBoxItem" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"ListBoxItem" を格納している文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ListBoxItem" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>このメソッドは、<paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem" /> である場合、この <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> の現在のインスタンスを返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> のデータ項目の <see cref="T:System.Windows.UIElement" /> サブツリーを UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.#ctor(System.Windows.Controls.ListBoxItem)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ListBoxItem" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ListBoxItem" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ListItem" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.ListBoxItem" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"ListBoxItem" を格納している文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListViewAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.ListView" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.#ctor(System.Windows.Controls.ListView)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ListView" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="item">この <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ListViewItem" />。</param>
      <returns>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> インスタンス。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ListView" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.List" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Controls.ListView" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> の子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.ListView" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"ListView" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ListView" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> が使用しているビューの <see cref="T:System.Windows.Controls.ListView" />。 既定の <see cref="T:System.Windows.Controls.ListView" /> 実装では <see cref="T:System.Windows.Controls.GridView" /> が使用され、このメソッドは <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ListViewAutomationPeer.ViewAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" /> の <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> に関連付けられているインターフェイス インスタンス。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.MediaElementAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.MediaElement" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.#ctor(System.Windows.Controls.MediaElement)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.MediaElement" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.MediaElement" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.MediaElement" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"MediaElement" を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.MenuAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Menu" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.#ctor(System.Windows.Controls.Menu)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Menu" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.Menu" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.Menu" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Menu" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.IsContentElementCore">
      <summary>この Automation Peer に関連付けられている要素が、ユーザーに提示されるデータを含むかどうかを示す値を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> によって呼び出されます。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.MenuItemAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.MenuItem" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.#ctor(System.Windows.Controls.MenuItem)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.MenuItem" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetAccessKeyCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.MenuItem" /> のアクセス キーを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> のアクセス キー。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.MenuItem" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.MenuItem" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.MenuItem" /> の子要素のコレクションを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.MenuItem" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"MenuItem" を格納している文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.MenuItem" /> のテキスト ラベルを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>ラベルを含む文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.MenuItem" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>
        <paramref name="patternInterface" /> がサポートされている値の場合は、コントロール パターンをサポートするオブジェクト。それ以外の場合は、<see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetPositionInSetCore">
      <summary>セット内に含まれている <see cref="T:System.Windows.Controls.MenuItem" /> の位置を取得します。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.AutomationProperties.PositionInSetProperty" /> が設定されている場合はその値、あるいは親の <see cref="T:System.Windows.Controls.ItemsControl" /> または <see cref="T:System.Windows.Controls.GroupItem" /> コントロールに関連するそれの位置。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetSizeOfSetCore">
      <summary>この <see cref="T:System.Windows.Controls.MenuItem" /> を含むセットのサイズを取得します。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.AutomationProperties.PositionInSetProperty" /> が設定されている場合はその値、あるいは親の <see cref="T:System.Windows.Controls.ItemsControl" /> または <see cref="T:System.Windows.Controls.GroupItem" /> コントロールに関連するそれの位置。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールの状態 (展開されているか、または折りたたまれているかのいずれか)。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールのトグル状態。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Navigation.NavigationWindow" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.NavigationWindowAutomationPeer.#ctor(System.Windows.Navigation.NavigationWindow)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Navigation.NavigationWindow" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.NavigationWindowAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.ContentElement" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"NavigationWindow" を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.PasswordBox" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.#ctor(System.Windows.Controls.PasswordBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.PasswordBox" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.PasswordBox" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Edit" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.PasswordBox" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"PasswordBox" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.PasswordBox" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.IsPasswordCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> と関連付けられている <see cref="T:System.Windows.Controls.PasswordBox" /> に保護されたコンテンツがあるかどうかを示す値を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" /> によって呼び出されます。</summary>
      <returns>
        <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>値が読み取り専用の場合は <see langword="true" />。変更可能な場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="value">コントロールの値。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールの文字列値。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.ProgressBar" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.#ctor(System.Windows.Controls.ProgressBar)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ProgressBar" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ProgressBar" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ProgressBar" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.ProgressBar" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"ProgressBar" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ProgressBar" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue" /> であり、<see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> が <see langword="true" /> である場合、このメソッドは <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> の現在のインスタンスを返します。それ以外の場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>値が読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>大きな変更値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="val">設定する値。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>この型またはメンバーは Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>小さな変更値。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.RadioButton" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.#ctor(System.Windows.Controls.RadioButton)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.RadioButton" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.RadioButton" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RadioButton" /> オブジェクトのコントロール型。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.ContentElement" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"RadioButton" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.RadioButton" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> がサポートされている値の場合は、コントロール パターンをサポートするオブジェクト。それ以外の場合は、<see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>要素が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>選択コンテナー。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.RangeBase)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.RangeBase" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue" /> の場合、このメソッドは <see langword="this" /> ポインターを返します。それ以外の場合、このメソッドは <see langword="null" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>範囲値が読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>大きな変更値。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Maximum">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールでサポートされる範囲の最大値。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Minimum">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールでサポートされる範囲の最小値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="val">設定する値。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>この型またはメンバーは Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>小さな変更値。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Value">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールの値。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.RepeatButton)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.RepeatButton" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.ContentElement" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"RepeatButton" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.ContentElement" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" /> の場合は、このメソッドは <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> の現在のインスタンスへの参照を返します。それ以外の場合は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.RichTextBox" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.#ctor(System.Windows.Controls.RichTextBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.RichTextBox" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.RichTextBox" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Controls.RichTextBox" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> の子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.RichTextBox" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"RichTextBox" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.RichTextBox" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text" /> の場合、このメソッドは <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> 参照を返します。 <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Scroll" /> の場合、このメソッドは新しい <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> を返します。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.ScrollBar)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ScrollBar" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"ScrollBar" という単語を含む文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClickablePointCore">
      <summary>
        <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NaN" /> の値を持つ <see cref="T:System.Windows.Point" />。<see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> でクリック可能なポイントは子要素だけです。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetOrientationCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> が、特定の方向にレイアウトされているかどうかを示す値を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.Horizontal" /> または <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.Vertical" /> (<see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の向きに応じて異なります)。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.IsContentElementCore">
      <summary>このオートメーション ピアに関連付けられている要素に、ユーザーに提示するデータが格納されているかどうかを示す値を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> によって呼び出されます。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.ScrollViewer" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.#ctor(System.Windows.Controls.ScrollViewer)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ScrollViewer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.ScrollViewer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.ScrollViewer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"ScrollViewer" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ScrollViewer" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Scroll" /> の場合、このメソッドは <see langword="this" /> ポインターを返します。それ以外の場合、このメソッドは <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.IsControlElementCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.ScrollViewer" /> がエンド ユーザーに対話的なものとして認識されるか、GUI に含まれるコントロールの論理構造に利用できるものとして認識されるかを示す値を取得または設定します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> によって呼び出されます。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.TemplatedParent" /> が <see langword="null" /> の場合、このメソッドは <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontallyScrollable">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールを水平方向にスクロールできるかどうかを示す値。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalScrollPercent">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロール内のコンテンツ エリア全体のパーセンテージで示した水平スクロール位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalViewSize">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>処理が正常に行われた場合は、<see langword="S_OK" /> を返します。それ以外の場合は、エラー値を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="horizontalAmount">コントロール固有の水平方向インクリメント。</param>
      <param name="verticalAmount">コントロール固有の垂直方向インクリメント。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#SetScrollPercent(System.Double,System.Double)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="horizontalPercent">水平にスクロールする割合。</param>
      <param name="verticalPercent">垂直にスクロールする割合。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticallyScrollable">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールを垂直方向にスクロールできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalScrollPercent">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロール内のコンテンツ エリア全体のパーセンテージで示した垂直スクロール位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalViewSize">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>処理が正常に行われた場合は、<see langword="S_OK" /> を返します。それ以外の場合は、エラー値を返します。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.Selector" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.#ctor(System.Windows.Controls.Primitives.Selector)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.Selector" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.Selector" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.List" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.Selector" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙体の値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" /> の場合、このメソッドは現在のインスタンスを指すポインターを返します。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>複数を選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。 複数を選択できる場合は true、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>処理が正常に行われた場合は、<see langword="S_OK" /> を返します。それ以外の場合は、エラー値を返します。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Selector" /> の <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内の項目を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
      <summary>派生クラスのコンストラクターによって呼び出されるときに、基本クラスの値を初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" /> に関連付けられている項目オブジェクト。</param>
      <param name="selectorAutomationPeer">
        <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> コレクションを保持する <see cref="T:System.Windows.Controls.Primitives.Selector" /> に関連付けられた <see cref="P:System.Windows.Controls.ItemsControl.Items" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>指定した <see cref="T:System.Windows.Automation.Peers.PatternInterface" /> に関連付けられているコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" /> の場合、このメソッドは、この <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" /> の現在のインスタンスを返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>要素が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>選択コンテナー。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SeparatorAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Separator" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.#ctor(System.Windows.Controls.Separator)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Separator" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Separator" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Separator" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.Separator" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Separator" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.IsContentElementCore">
      <summary>このオートメーション ピアに関連付けられている要素に、ユーザーに提示するデータが格納されているかどうかを示す値を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> によって呼び出されます。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SliderAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Slider" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.#ctor(System.Windows.Controls.Slider)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Slider" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Slider" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Slider" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.Slider" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Slider" を格納している文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClickablePointCore">
      <summary>
        <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NaN" /> を含む <see cref="T:System.Windows.Point" />。<see cref="T:System.Windows.Controls.TabControl" /> で唯一クリックできるポイントは <see cref="T:System.Windows.Controls.TabItem" /> 子要素です。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.StatusBarAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.StatusBar)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.StatusBar" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.StatusBar" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> の子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のリスト。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"StatusBar" を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.#ctor(System.Windows.Controls.Primitives.StatusBarItem)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"StatusBarItem" を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabControlAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.TabControl" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.#ctor(System.Windows.Controls.TabControl)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TabControl" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>新しい <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> を作成します。</summary>
      <param name="item">新しい <see cref="T:System.Windows.Controls.TabItem" /> に関連付けられた <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />。</param>
      <returns>作成された <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetAutomationControlTypeCore">
      <summary>新しい <see cref="T:System.Windows.Controls.TabItem" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> の子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tab" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClassNameCore">
      <summary>新しい <see cref="T:System.Windows.Controls.TabItem" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"TabControl" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClickablePointCore">
      <summary>このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Point" />、<see cref="F:System.Double.NaN" /> を格納する <see cref="F:System.Double.NaN" />。<see cref="T:System.Windows.Controls.TabControl" /> 内のクリック可能なポイントだけが、子の <see cref="T:System.Windows.Controls.TabItem" /> 要素です。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>処理が正常に行われた場合は、<see langword="S_OK" /> を返します。それ以外の場合は、エラー値を返します。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabItemAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.TabItem" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.TabControlAutomationPeer)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TabItem" />。</param>
      <param name="tabControlAutomationPeer">この <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> の親である <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TabItem" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TabItem" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.TabItem" /> の子要素のコレクションを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.TabItem" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"TabItem" を含む文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.TabItem" /> のテキスト ラベルを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>ラベルを含む文字列。 設定すると、このメソッドは <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> プロパティの値を返します。それ以外の場合、このメソッドは <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> プロパティの値を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.TabControl" /> のデータ項目の <see cref="T:System.Windows.UIElement" /> サブツリーを UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer.#ctor(System.Windows.Controls.TabItem)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TabItem" />。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.TableAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Documents.Table" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.#ctor(System.Windows.Documents.Table)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Documents.Table" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Documents.Table" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Table" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Documents.Table" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Table" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Documents.Table" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙体からの値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" /> の場合、このメソッドは <see langword="this" /> ポインターを返します。それ以外の場合、このメソッドは <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.IsControlElementCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Documents.Table" /> がエンド ユーザーに対話的なものとして認識されるか、GUI に含まれるコントロールの論理構造に利用できるものとして認識されるかを示す値を取得または設定します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> によって呼び出されます。</summary>
      <returns>
        <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>グリッド内の列の合計数を取得します。</summary>
      <returns>グリッド内の列の合計数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>指定したセルの UI オートメーション プロバイダーを取得します。</summary>
      <param name="row">目的の行の序数。</param>
      <param name="column">目的の列の序数。</param>
      <returns>指定したセルの UI オートメーション プロバイダー。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>グリッド内の行の合計数を取得します。</summary>
      <returns>グリッド内の行の合計数。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TableCellAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Documents.TableCell" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.#ctor(System.Windows.Documents.TableCell)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Documents.TableCell" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Documents.TableCell" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Documents.TableCell" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"TableCell" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetLocalizedControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Documents.TableCell" /> のコントロール型のローカライズされたバージョンを取得します。</summary>
      <returns>"cell" を格納している文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Documents.TableCell" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙体からの値。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.GridItem" /> の場合、このメソッドは <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> の現在のインスタンスを返します。それ以外の場合、このメソッドは <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.IsControlElementCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Documents.TableCell" /> がエンド ユーザーに対話的なものとして認識されるか、GUI に含まれるコントロールの論理構造に利用できるものとして認識されるかを示す値を取得または設定します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> によって呼び出されます。</summary>
      <returns>
        <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>セルまたは項目を格納する列の序数を取得します。</summary>
      <returns>セルまたは項目を格納する列を識別する、0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>セルまたは項目がまたがる列の数を取得します。</summary>
      <returns>またがる列の数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>
        <see cref="T:System.Windows.Automation.GridPattern" /> を実装し、セルまたは項目のコンテナーを表す UI オートメーション プロバイダーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.GridPattern" /> を実装し、セルまたは項目のコンテナーを表す UI オートメーション プロバイダー。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>セルまたは項目を格納する行の序数を取得します。</summary>
      <returns>セルまたは項目を格納する行を識別する、0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>セルまたは項目がまたがる行の数を取得します。</summary>
      <returns>またがる行の数。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Automation.TextPattern" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextAutomationPeer.#ctor(System.Windows.FrameworkElement)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Automation.TextPattern" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" /> に関連付けられている要素のテキスト ラベルを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> または <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> のいずれかの値が設定されている場合は、その値。それ以外の場合は空の文字列を返します。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBlockAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.TextBlock" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.#ctor(System.Windows.Controls.TextBlock)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TextBlock" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TextBlock" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.TextBlock" /> の子要素のコレクションを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション、または <see cref="T:System.Windows.Controls.TextBlock" /> が空の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.TextBlock" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"TextBlock" という単語を含む文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.IsControlElementCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.TextBlock" /> をエンドユーザーが対話型と理解するか、それとも GUI 内のコントロールの論理構造関連と理解するかを示す値を取得または設定します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> によって呼び出されます。</summary>
      <returns>要素がテンプレートの一部である場合は <see langword="false" />。それ以外の場合は <see langword="true" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBoxAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.TextBox" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.#ctor(System.Windows.Controls.TextBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TextBox" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TextBox" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Edit" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.TextBox" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"TextBox" を含む文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TextBox" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙体からの値。</param>
      <returns>
        <paramref name="patternInterface" /> がサポートされている値の場合は、コントロール パターンをサポートするオブジェクト。それ以外の場合は、<see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>値が読み取り専用の場合は <see langword="true" />。変更可能な場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="value">コントロールの値。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールの文字列値。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextElementAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Documents.TextElement" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.#ctor(System.Windows.Documents.TextElement)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Documents.TextElement" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetBoundingRectangleCore">
      <summary>この <see cref="T:System.Windows.Rect" /> に関連付けられている <see cref="T:System.Windows.Documents.TextElement" /> の外接する四角形を表す <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /> によって呼び出されます。</summary>
      <returns>要素の座標を含む <see cref="T:System.Windows.Rect" />。要素が <see cref="P:System.Windows.Rect.Empty" /> および <see cref="T:System.Windows.Interop.HwndSource" /> でない場合は <see cref="T:System.Windows.PresentationSource" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Documents.TextElement" /> の子要素のコレクションを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>
        <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetClickablePointCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Documents.TextElement" /> 上にあるクリック可能なスペースを表す <see cref="T:System.Windows.Point" /> を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> によって呼び出されます。</summary>
      <returns>クリック可能な要素上の <see cref="T:System.Windows.Point" />。 要素が <see cref="F:System.Double.NaN" /> および <see cref="F:System.Double.NaN" /> でない場合、点の値は (<see cref="T:System.Windows.Interop.HwndSource" />、<see cref="T:System.Windows.PresentationSource" />) です。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.IsOffscreenCore">
      <summary>この <see cref="T:System.Windows.Documents.TextElement" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> が画面から外れているかどうかを示す値を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /> によって呼び出されます。</summary>
      <returns>要素が画面上にない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ThumbAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.#ctor(System.Windows.Controls.Primitives.Thumb)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.Thumb" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Thumb" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>「Thumb」を内容とする文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.IsContentElementCore">
      <summary>この Automation Peer に関連付けられている要素が、ユーザーに提示されるデータを含むかどうかを示す値を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> によって呼び出されます。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.ToggleButton)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.ToggleButton" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> のコントロール型。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Button" を格納している文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle" /> の場合は、このメソッドは <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> の現在のインスタンスを返します。それ以外の場合は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールのトグル状態。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToolBarAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.ToolBar" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.#ctor(System.Windows.Controls.ToolBar)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ToolBar" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ToolBar" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ToolBar" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.ToolBar" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"ToolBar" という単語を含む文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToolTipAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.ToolTip" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.#ctor(System.Windows.Controls.ToolTip)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" />の新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ToolTip" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.ToolTip" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ToolTip" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.ToolTip" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"ToolTip" を格納する文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.TreeView" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.#ctor(System.Windows.Controls.TreeView)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TreeView" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>この <see cref="T:System.Windows.Controls.TreeView" /> の <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内のデータ項目の <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> の新しいインスタンスを作成します。</summary>
      <param name="item">
        <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> に関連付けられたデータ項目。</param>
      <returns>
        <paramref name="item" /> の <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.ContentElement" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tree" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.ContentElement" /> の子要素のコレクションを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> 要素のコレクション。この <see cref="T:System.Windows.Controls.TreeView" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> が空の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.ContentElement" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"TreeView" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.ContentElement" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> の現在のインスタンス、または <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>UI オートメーション プロバイダーが複数の子要素の同時選択を許可するかどうかを示す値を取得します。</summary>
      <returns>複数を選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>選択されている各子要素の UI オートメーション プロバイダーを取得します。</summary>
      <returns>UI オートメーション プロバイダーのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>UI オートメーション プロバイダーが少なくとも 1 つの子要素の選択を必要とするかどうかを示す値を取得します。</summary>
      <returns>選択が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer">
      <summary>データ項目を格納する <see cref="T:System.Windows.Controls.TreeViewItem" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer,System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="item">この <see cref="P:System.Windows.Controls.ItemsControl.Items" /> に関連付けられた <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> コレクション内のデータ項目。</param>
      <param name="itemsControlAutomationPeer">
        <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> コレクションを保持する <see cref="T:System.Windows.Controls.ItemsControl" /> に関連付けられた <see cref="P:System.Windows.Controls.ItemsControl.Items" />。</param>
      <param name="parentDataItemAutomationPeer">この <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> の親である <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TreeViewItem" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>常に <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.TreeViewItem" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>
        <see langword="TreeViewItem" /> 値を含んでいる文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> に関連付けられている要素のコントロール パターンを取得します。</summary>
      <param name="patternInterface">取得対象の要素が実装するパターンの種類。</param>
      <returns>パターン インターフェイスを実装するオブジェクト。このピアが指定されたパターン インターフェイスを実装していない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.ParentDataItemAutomationPeer">
      <summary>このオートメーション ピアの親である <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> を取得します。</summary>
      <returns>親オートメーション ピア。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>コントロールの子孫であるすべてのノード、コントロール、またはコンテンツを非表示にします。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>すべての子ノード、コントロール、またはコントロールのコンテンツを表示します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>コントロールの状態 (展開されているか、または折りたたまれているかのいずれか) を取得します。</summary>
      <returns>コントロールの状態 (展開されているか、または折りたたまれているかのいずれか)。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>コンテナーの可視領域 (ビューポート) 内のコントロールを表示するために、コンテナー オブジェクトのコンテンツ エリアをスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>選択した項目のコレクションに現在の要素を追加します。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI オートメーション要素が使用できない。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>項目が選択されているかどうかを示す値を取得します。</summary>
      <returns>項目が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>選択した項目のコレクションから現在の要素を削除します。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI オートメーション要素が使用できない。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>選択項目をクリアし、現在の要素を選択します。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI オートメーション要素が使用できない。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> を実装し、呼び出し元オブジェクトのコンテナーの役割を果たす UI オートメーション プロバイダーを取得します。</summary>
      <returns>UI オートメーション プロバイダー。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.TreeViewItem" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.#ctor(System.Windows.Controls.TreeViewItem)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TreeViewItem" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>この <see cref="T:System.Windows.Controls.TreeView" /> の <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内のデータ項目の <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> の新しいインスタンスを作成します。</summary>
      <param name="item">
        <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> に関連付けられたデータ項目。</param>
      <returns>
        <paramref name="item" /> の <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.FindOrCreateItemAutomationPeer(System.Object)">
      <summary>指定されたオブジェクトの <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> を返します。</summary>
      <param name="item">
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> を入手する対象のアイテム。</param>
      <returns>指定したオブジェクトの <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TreeViewItem" /> のコントロールの種類を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.TreeViewItem" /> の子要素のコレクションを取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.TreeViewItem" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"TreeViewItem" を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.TreeViewItem" /> のコントロール パターンを取得します。</summary>
      <param name="patternInterface">列挙値の 1 つ。</param>
      <returns>
        <paramref name="patternInterface" /> が <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem" />、<see cref="F:System.Windows.Automation.Peers.PatternInterface.SelectionItem" />、または <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" /> である場合、このメソッドは <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> の現在のインスタンスを返します。それ以外の場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コントロールの状態 (展開されているか、または折りたたまれているかのいずれか)。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>要素が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>選択コンテナー。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.UserControlAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.UserControl" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.#ctor(System.Windows.Controls.UserControl)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.UserControl" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Controls.UserControl" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> のコントロール型を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 列挙値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Controls.UserControl" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> の名前を取得します。 このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>コントロールの名前を含む文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Controls.Viewport3D" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.#ctor(System.Windows.Controls.Viewport3D)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Viewport3D" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Controls.Viewport3D" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Controls.Viewport3D" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Viewport3D" を格納している文字列。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.WindowAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Window" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.#ctor(System.Windows.Window)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Window" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Window" /> のコントロールの種類を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Window" /> 列挙型値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetBoundingRectangleCore">
      <summary>この <see cref="T:System.Windows.Rect" /> に関連付けられている <see cref="T:System.Windows.Window" /> の外接する四角形を表す <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> の画面座標を表す <see cref="T:System.Windows.Window" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Window" /> の名前を取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>"Window" という語を含む文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> と関連付けられた <see cref="T:System.Windows.Window" /> のテキスト ラベルを取得します。 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> の <see cref="P:System.Windows.FrameworkElement.Name" /> または <see cref="T:System.Windows.Window" /> を格納する文字列。名前が <see langword="null" /> の場合は <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="T:System.Windows.Baml2006.Baml2006Reader">
      <summary>最適化された BAML 形式で XAML を処理し、XAML ノード ストリームを生成します。</summary>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.#ctor(System.IO.Stream)">
      <summary>入力ストリームに基づいて、<see cref="T:System.Windows.Baml2006.Baml2006Reader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">ソース BAML の入力ストリーム。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.#ctor(System.IO.Stream,System.Xaml.XamlReaderSettings)">
      <summary>入力ストリームおよびリーダー設定に基づいて、<see cref="T:System.Windows.Baml2006.Baml2006Reader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">ソース BAML の入力ストリーム。</param>
      <param name="xamlReaderSettings">リーダー設定。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> または <paramref name="xamlReaderSettings" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.#ctor(System.String)">
      <summary>読み取り対象のローカル ファイルの名前に基づいて、<see cref="T:System.Windows.Baml2006.Baml2006Reader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">読み取り対象の BAML を含むファイルへのファイル パスを表す文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースを解放するには <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.IsEof">
      <summary>リーダーがファイルの末尾に配置されているかどうかを示す値を取得します。</summary>
      <returns>ファイルの末尾にリーダーが配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Member">
      <summary>リーダーが <see cref="F:System.Xaml.XamlNodeType.StartMember" /> 上に配置されている場合に、リーダーが現在配置されているメンバーを取得します。</summary>
      <returns>現在のメンバー。リーダーがメンバー上に配置されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Namespace">
      <summary>現在のノードから XAML 名前空間を取得します。</summary>
      <returns>XAML 名前空間がある場合はその名前空間。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.NodeType">
      <summary>現在のノードの種類を取得します。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.Read">
      <summary>ソース BAML から次の XAML ノードを読み取ります (ノードがある場合)。</summary>
      <returns>ノードがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ObjectDisposedException">リーダーは、検査中に廃棄されました。</exception>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.SchemaContext">
      <summary>情報セットにスキーマ コンテキスト情報を提供するオブジェクトを取得します。</summary>
      <returns>情報セットにスキーマ コンテキスト情報を提供するオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.System#Xaml#IXamlLineInfo#HasLineInfo">
      <summary>以下を参照してください。<see cref="P:System.Xaml.IXamlLineInfo.HasLineInfo" /></summary>
      <returns>行情報が使用可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.System#Xaml#IXamlLineInfo#LineNumber">
      <summary>以下を参照してください。<see cref="P:System.Xaml.IXamlLineInfo.LineNumber" /></summary>
      <returns>報告する行番号。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.System#Xaml#IXamlLineInfo#LinePosition">
      <summary>以下を参照してください。<see cref="P:System.Xaml.IXamlLineInfo.LinePosition" /></summary>
      <returns>報告する行の位置。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Type">
      <summary>現在のノードの <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
      <returns>現在のノードの <see cref="T:System.Xaml.XamlType" />。リーダーがオブジェクト上に配置されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Value">
      <summary>現在のノードの値を取得します。</summary>
      <returns>現在のノードの値。リーダーが <see cref="F:System.Xaml.XamlNodeType.Value" /> ノード型に配置されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.BaseValueSource">
      <summary>特定の依存関係プロパティの値のプロパティのシステムのソースを識別します。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Default">
      <summary>ソースは、プロパティのメタデータで定義されている既定値です。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.DefaultStyle">
      <summary>ソースは、既定のスタイルのセッターからのものです。 既定のスタイルは、現在のテーマに由来します。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.DefaultStyleTrigger">
      <summary>ソースは、既定のスタイルのトリガーからのものです。 既定のスタイルは、現在のテーマに由来します。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.ImplicitStyleReference">
      <summary>ソースは、暗黙的なスタイルの参照です (スタイルは検出された型またはベースの型に基づいています)。 この値は Style プロパティ自体に関して返されるに過ぎず、そのようなスタイルのセッターやトリガーを通して設定されるプロパティに関して返されることはありません。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Inherited">
      <summary>ソースは、プロパティ値の継承による値です。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Local">
      <summary>ソースはローカルで設定された値です。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.ParentTemplate">
      <summary>ソースは、要素によって使用されている親テンプレートに基づきます。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.ParentTemplateTrigger">
      <summary>ソースは、要素を作成した親テンプレートからのトリガーに基づく値です。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Style">
      <summary>ソースは、テーマ以外のスタイルのスタイル セッターからのものです。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.StyleTrigger">
      <summary>ソースは、テーマ以外のスタイルのトリガーに基づく値です。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.TemplateTrigger">
      <summary>ソースは、テーマ以外のスタイルからのテンプレートのトリガーに基づく値です。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Unknown">
      <summary>ソースが不明です。 これが既定値です。</summary>
    </member>
    <member name="T:System.Windows.ColorConvertedBitmapExtension">
      <summary>
        <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> を作成できるようにするマークアップ拡張機能を実装します。 <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> には、埋め込まれたプロファイルはありません。その代わりに、変換元および変換先の値に基づくプロファイルが使用されます。</summary>
    </member>
    <member name="M:System.Windows.ColorConvertedBitmapExtension.#ctor">
      <summary>
        <see cref="T:System.Windows.ColorConvertedBitmapExtension" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.ColorConvertedBitmapExtension.#ctor(System.Object)">
      <summary>
        <see cref="T:System.Windows.ColorConvertedBitmapExtension" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="image">イメージ ソース、変換元のカラー コンテキスト、および変換先のカラー コンテキストの 3 つの URI を判別するために解析される文字列。</param>
    </member>
    <member name="M:System.Windows.ColorConvertedBitmapExtension.ProvideValue(System.IServiceProvider)">
      <summary>この拡張機能を適用するプロパティで設定するオブジェクトを返します。 <see cref="T:System.Windows.ColorConvertedBitmapExtension" /> の場合、これは完了した <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> です。</summary>
      <param name="serviceProvider">マークアップ拡張機能のサービスを提供できるオブジェクト。 このサービスには、<see cref="T:System.Windows.Markup.IUriContext" /> の結果を提供することが求められます。</param>
      <returns>コンストラクターに渡された値に基づく <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" />。</returns>
    </member>
    <member name="T:System.Windows.ColumnSpaceDistribution">
      <summary>列を持ったフロー コンテンツにスペースを分配する方法について説明します。</summary>
    </member>
    <member name="F:System.Windows.ColumnSpaceDistribution.Between">
      <summary>スペースは、すべての列の間に均等に配分されます。</summary>
    </member>
    <member name="F:System.Windows.ColumnSpaceDistribution.Left">
      <summary>スペースは、最初の列の前に配分されます。</summary>
    </member>
    <member name="F:System.Windows.ColumnSpaceDistribution.Right">
      <summary>スペースは、最後の列の後に配分されます。</summary>
    </member>
    <member name="T:System.Windows.ComponentResourceKey">
      <summary>外部アセンブリ内のクラス名、および追加識別子に基づいてリソース キーを定義または参照します。</summary>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.#ctor">
      <summary>
        <see cref="T:System.Windows.ComponentResourceKey" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
      <summary>キーを定義する <see cref="T:System.Windows.ComponentResourceKey" /> と、追加のリソース識別子として使用するオブジェクトを指定して、<see cref="T:System.Type" /> の新しいインスタンスを初期化します。</summary>
      <param name="typeInTargetAssembly">リソース キーを定義する型。</param>
      <param name="resourceId">この <see cref="T:System.Windows.ComponentResourceKey" /> を <paramref name="typeInTargetAssembly" /> 型に関連付けられている他のキーと区別する一意の識別子。</param>
    </member>
    <member name="P:System.Windows.ComponentResourceKey.Assembly">
      <summary>このキーに関連付けられている値を検索するアセンブリのディクショナリを示すアセンブリ オブジェクトを取得します。</summary>
      <returns>リフレクション クラスとして取得されたアセンブリ。</returns>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.Equals(System.Object)">
      <summary>指定されたオブジェクトが現在の <see cref="T:System.Windows.ComponentResourceKey" /> と等しいかどうかを判断します。</summary>
      <param name="o">現在の <see cref="T:System.Windows.ComponentResourceKey" /> と比較するオブジェクト。</param>
      <returns>オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.GetHashCode">
      <summary>この <see cref="T:System.Windows.ComponentResourceKey" /> のハッシュ コードを返します。</summary>
      <returns>符号付き 32 ビット整数値。</returns>
    </member>
    <member name="P:System.Windows.ComponentResourceKey.ResourceId">
      <summary>このキーをこの型に関連付けられている他のキーと区別する、一意の識別子を取得または設定します。</summary>
      <returns>一意の識別子。 通常、これは文字列です。</returns>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.ToString">
      <summary>
        <see cref="T:System.Windows.ComponentResourceKey" /> の文字列表現を取得します。</summary>
      <returns>文字列表現。</returns>
    </member>
    <member name="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
      <summary>リソース キーを定義する <see cref="T:System.Type" /> を取得または設定します。</summary>
      <returns>リソース キーを定義する型。</returns>
    </member>
    <member name="T:System.Windows.Condition">
      <summary>一連の条件に基づいてプロパティ値に変更を適用する、<see cref="T:System.Windows.MultiTrigger" /> および <see cref="T:System.Windows.MultiDataTrigger" /> の条件を表します。</summary>
    </member>
    <member name="M:System.Windows.Condition.#ctor">
      <summary>
        <see cref="T:System.Windows.Condition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Condition.#ctor(System.Windows.Data.BindingBase,System.Object)">
      <summary>
        <see cref="T:System.Windows.Condition" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="binding">条件のプロパティを指定するバインディング。</param>
      <param name="conditionValue">条件の値。</param>
    </member>
    <member name="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object)">
      <summary>指定したプロパティと値を使用して、<see cref="T:System.Windows.Condition" /> クラスの新しいインスタンスを初期化します。 このコンストラクターは、パラメーターの検証を実行します。</summary>
      <param name="conditionProperty">条件のプロパティ。</param>
      <param name="conditionValue">条件の値。</param>
    </member>
    <member name="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object,System.String)">
      <summary>指定したプロパティ、値、およびソース オブジェクト名を使用して、<see cref="T:System.Windows.Condition" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="conditionProperty">条件のプロパティ。</param>
      <param name="conditionValue">条件の値。</param>
      <param name="sourceName">
        <paramref name="conditionProperty" /> を含むオブジェクトの <c>x:Name</c>。</param>
    </member>
    <member name="P:System.Windows.Condition.Binding">
      <summary>条件のプロパティを指定するバインディングを取得または設定します。 これは <see cref="T:System.Windows.MultiDataTrigger" /> オブジェクトにのみ適用されます。</summary>
      <returns>既定値は NULL です。</returns>
    </member>
    <member name="P:System.Windows.Condition.Property">
      <summary>条件のプロパティを取得または設定します。 これは、<see cref="T:System.Windows.MultiTrigger" /> オブジェクトにのみ適用できます。</summary>
      <returns>条件のプロパティを指定する <see cref="T:System.Windows.DependencyProperty" />。 既定値は NULL です。</returns>
    </member>
    <member name="M:System.Windows.Condition.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
      <summary>マークアップ拡張機能によって <see cref="T:System.Windows.Condition" /> オブジェクトのプロパティの値が設定された場合の処理を行います。</summary>
      <param name="targetObject">マークアップ拡張機能によって値が設定されるオブジェクト。</param>
      <param name="eventArgs">マークアップ拡張機能の処理に関連したデータ。</param>
    </member>
    <member name="M:System.Windows.Condition.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)">
      <summary>型コンバーターによって <see cref="T:System.Windows.Condition" /> オブジェクトのプロパティの値が設定された場合の処理を行います。</summary>
      <param name="targetObject">型コンバーターによって値が設定されるオブジェクト。</param>
      <param name="eventArgs">型コンバーターの処理に関連したデータ。</param>
    </member>
    <member name="P:System.Windows.Condition.SourceName">
      <summary>関連付けられている setter を適用するプロパティを含むオブジェクトの名前を取得または設定します。 これは <see cref="T:System.Windows.MultiTrigger" /> オブジェクトにのみ適用されます。</summary>
      <returns>既定のプロパティは <see langword="null" /> です。 このプロパティが <see langword="null" /> の場合、スタイル設定されているオブジェクトのプロパティによって、関連付けられている setter が適用されます。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Condition" /> は、使用中には変更できません。</exception>
    </member>
    <member name="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>初期化の開始を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>初期化の完了を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="P:System.Windows.Condition.Value">
      <summary>条件の値を取得または設定します。</summary>
      <returns>指定された <see cref="P:System.Windows.Condition.Value" /> に対して <see cref="T:System.Windows.Condition" /> プロパティを null にすることはできません。
「例外」も参照してください。 既定値は NULL です。</returns>
      <exception cref="T:System.ArgumentException">式はサポートされていません。</exception>
    </member>
    <member name="T:System.Windows.ConditionCollection">
      <summary>
        <see cref="T:System.Windows.Condition" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.ConditionCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.ConditionCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.ConditionCollection.IsSealed">
      <summary>このトリガーが読み取り専用で変更できないかどうかを示す値を取得します。</summary>
      <returns>トリガーが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.AccessText">
      <summary>アクセス キーとして使用する文字をアンダースコアで指定します。</summary>
    </member>
    <member name="M:System.Windows.Controls.AccessText.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.AccessKey">
      <summary>最初の下線文字の次の文字への読み取り専用のアクセスを提供します。</summary>
      <returns>返される文字。</returns>
    </member>
    <member name="M:System.Windows.Controls.AccessText.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> オブジェクトのコンテンツを配置し、そのサイズを設定します。</summary>
      <param name="arrangeSize">コンテンツの配置に使用する計算されたサイズ。</param>
      <returns>コンテンツのサイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.Background">
      <summary>コンテンツ エリアを塗りつぶす <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>コンテンツ エリアを塗りつぶす <see cref="T:System.Windows.Media.Brush" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.BaselineOffset">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> 要素のテキストのベースライン オフセット位置を調整する値を取得または設定します。</summary>
      <returns>ベースライン オフセット位置を調整する量。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.BaselineOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.BaselineOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontFamily">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> 要素と共に使用するフォント ファミリを取得または設定します。</summary>
      <returns>使用するフォント ファミリ。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> メトリックで決定されたフォントです。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.FontFamily" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontSize">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> 要素と共に使用するフォント サイズを取得または設定します。</summary>
      <returns>使用するフォント サイズ。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontSize" /> メトリックで決定されたフォント サイズです。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.FontSize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontStretch">
      <summary>
        <see cref="T:System.Windows.FontStretch" /> から標準フォント、縮小フォント、または拡大フォントを選択する <see cref="T:System.Windows.Media.FontFamily" /> プロパティを取得または設定します。</summary>
      <returns>フォントが伸縮される相対的な度合い。 既定値は、<see cref="P:System.Windows.FontStretches.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontStretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.FontStretch" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontStyle">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> 要素と共に使用するフォント スタイルを取得または設定します。</summary>
      <returns>標準や斜体などの使用するフォント スタイル。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> メトリックにより決定されます。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.FontStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontWeight">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> 要素と共に使用するフォントの太さを取得または設定します。</summary>
      <returns>使用するフォントの太さ。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> メトリックにより決定されます。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.FontWeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.Foreground">
      <summary>要素のテキスト コンテンツを描画する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>テキストを描画する <see cref="T:System.Windows.Media.Brush" />。 既定値は、<see cref="P:System.Windows.Media.Brushes.Black" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.Foreground" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.AccessText.GetVisualChild(System.Int32)">
      <summary>子ビジュアル要素のインデックスを取得します。</summary>
      <param name="index">返す子ビジュアル要素のインデックス。</param>
      <returns>子ビジュアル要素のインデックスを表す整数を返します。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.LineHeight">
      <summary>各行ボックスの高さを取得または設定します。</summary>
      <returns>各行ボックスの高さを指定する double 型の値。 この値は、 <c>0.0034</c>以上かつ<c>16万</c>以下である必要があります。 値 ( <see cref="F:System.Double.NaN" /><c>Auto</c>の属性値に相当) を指定すると、現在のフォント特性を基に行の高さが自動的に決定されます。 既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.LineHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.LineStackingStrategy">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> プロパティがどのように適用されるかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.LineStackingStrategy" /> プロパティの動作を決定する <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> 値。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.LineStackingStrategyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> 要素の論理上の子要素を反復処理する列挙子を取得します。</summary>
      <returns>この要素の論理上の子要素を反復処理する列挙子。</returns>
    </member>
    <member name="M:System.Windows.Controls.AccessText.MeasureOverride(System.Windows.Size)">
      <summary>コントロールを再測定します。</summary>
      <param name="constraint">コントロールの最大サイズの制限。 戻り値はこのサイズを超えることはできません。</param>
      <returns>コントロールのサイズです。 コントロールの最大サイズの制限を超えることはできません。</returns>
    </member>
    <member name="M:System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Windows.Controls.AccessText" /> に追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />」をご覧ください。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Controls.AccessText.Text">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> 要素によって表示されるテキストを取得または設定します。</summary>
      <returns>最初のアンダースコア文字以外のテキスト。 既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextAlignment">
      <summary>コンテンツの水平方向の配置を取得または設定します。</summary>
      <returns>テキストの水平方向の配置。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.TextAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextDecorations">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> 要素のテキストに追加される装飾を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.TextDecorations" /> のテキストに適用される <see cref="T:System.Windows.Controls.AccessText" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextDecorationsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.TextDecorations" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextEffects">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> 要素のテキストに追加される効果を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.TextEffectCollection" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextEffectsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.TextEffects" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.Text" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextTrimming">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> 要素のテキスト コンテンツが行ボックスをオーバーフローした場合に、それがどのようにクリッピングされるかを取得または設定します。</summary>
      <returns>使用するトリミング動作。 既定値は、<see cref="F:System.Windows.TextTrimming.None" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextTrimmingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.TextTrimming" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextWrapping">
      <summary>
        <see cref="T:System.Windows.Controls.AccessText" /> 要素のテキスト コンテンツが行ボックスをオーバーフローした場合に、それが折り返されるかどうかを取得または設定します。</summary>
      <returns>使用する折り返し動作。 既定値は、<see cref="F:System.Windows.TextWrapping.NoWrap" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextWrappingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.TextWrapping" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.VisualChildrenCount">
      <summary>表示される子要素の数を取得します。</summary>
      <returns>表示される子要素の数を表す整数を返します。</returns>
    </member>
    <member name="T:System.Windows.Controls.AddingNewItemEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.AddingNewItem" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.AddingNewItemEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.AddingNewItemEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AddingNewItemEventArgs.NewItem">
      <summary>追加される項目を取得または設定します。</summary>
      <returns>追加されるアイテム。</returns>
    </member>
    <member name="T:System.Windows.Controls.AdornedElementPlaceholder">
      <summary>
        <see cref="T:System.Windows.Controls.ControlTemplate" /> 内の他の要素に対する、装飾付きコントロールの相対位置を指定するために <see cref="T:System.Windows.Controls.ControlTemplate" /> で使用される要素を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.AdornedElement">
      <summary>この <see cref="T:System.Windows.UIElement" /> オブジェクトによってスペースが予約されている <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> を取得します。</summary>
      <returns>この <see cref="T:System.Windows.UIElement" /> オブジェクトによってスペースが予約されている <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.ArrangeOverride(System.Windows.Size)">
      <summary>最初のビジュアル子オブジェクトを配置し、この <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> オブジェクトで必要なレイアウトのサイズを返します。</summary>
      <param name="arrangeBounds">この <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> オブジェクトが子要素の整列のために使用する必要があるサイズ。</param>
      <returns>要素に必要な実際のサイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.Child">
      <summary>この <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> オブジェクトの単一の子オブジェクトを取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> オブジェクトの単一の子オブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.GetVisualChild(System.Int32)">
      <summary>指定されたインデックス位置にある <see cref="T:System.Windows.Media.Visual" /> の子オブジェクトを取得します。</summary>
      <param name="index">取得する子オブジェクトを指定するインデックス。</param>
      <returns>指定されたインデックス位置にあるビジュアル子オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.LogicalChildren">
      <summary>この <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> オブジェクトの論理上の子要素に対する列挙子を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> オブジェクトの論理上の子要素に対する列挙子。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> オブジェクトのサイズを決定します。</summary>
      <param name="constraint">戻り値が超えることができない上限値。</param>
      <returns>この <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> オブジェクトの必要なサイズ。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> オブジェクトは、テンプレートの一部ではありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.OnInitialized(System.EventArgs)">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> イベントを発生させます。 このメソッドは、<see cref="P:System.Windows.FrameworkElement.IsInitialized" /> が <see langword="true" /> に内部で設定されると呼び出されます。</summary>
      <param name="e">イベントの引数。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> オブジェクトは、テンプレートの一部ではありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.VisualChildrenCount">
      <summary>ビジュアル子オブジェクトの数を取得します。</summary>
      <returns>0 または 1 です。 既定値は 0 です。</returns>
    </member>
    <member name="T:System.Windows.Controls.AlternationConverter">
      <summary>整数をオブジェクトのリストへのインデックスとして適用することにより、整数とオブジェクトの間で変換を行います。</summary>
    </member>
    <member name="M:System.Windows.Controls.AlternationConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.AlternationConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>整数を <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> リスト内のオブジェクトに変換します。</summary>
      <param name="o">
        <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> プロパティのオブジェクトの検索に使用する整数。</param>
      <param name="targetType">バインディング ターゲット プロパティの型。</param>
      <param name="parameter">使用するコンバーター パラメーター。</param>
      <param name="culture">コンバーターで使用するカルチャ。</param>
      <returns>
        <paramref name="o" /> を <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> の項目数で除算した剰余の位置にあるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> リスト内のオブジェクトを整数に変換します。</summary>
      <param name="o">
        <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> プロパティ内で検索するオブジェクト。</param>
      <param name="targetType">バインディング ターゲット プロパティの型。</param>
      <param name="parameter">使用するコンバーター パラメーター。</param>
      <param name="culture">コンバーターで使用するカルチャ。</param>
      <returns>
        <paramref name="o" /> が <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> にある場合はそのインデックス、または o が <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> に存在しない場合は -1。</returns>
    </member>
    <member name="P:System.Windows.Controls.AlternationConverter.Values">
      <summary>整数が <see cref="T:System.Windows.Controls.AlternationConverter" /> メソッドに渡されたときに <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> が返すオブジェクトのリストを取得します。</summary>
      <returns>整数が <see cref="T:System.Windows.Controls.AlternationConverter" /> メソッドに渡されたときに <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> が返すオブジェクトのリスト。</returns>
    </member>
    <member name="T:System.Windows.Controls.BooleanToVisibilityConverter">
      <summary>ブール値から <see cref="T:System.Windows.Visibility" /> 列挙値への変換や、その逆の変換を行うコンバーターを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.BooleanToVisibilityConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.BooleanToVisibilityConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>ブール値を <see cref="T:System.Windows.Visibility" /> 列挙値に変換します。</summary>
      <param name="value">変換するブール値。 標準ブール値または null 許容のブール値を指定できます。</param>
      <param name="targetType">このパラメーターは使用されません。</param>
      <param name="parameter">このパラメーターは使用されません。</param>
      <param name="culture">このパラメーターは使用されません。</param>
      <returns>
        <see cref="F:System.Windows.Visibility.Visible" /> が <paramref name="value" /> の場合は <see langword="true" />。それ以外の場合は <see cref="F:System.Windows.Visibility.Collapsed" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <see cref="T:System.Windows.Visibility" /> 列挙値をブール値に変換します。</summary>
      <param name="value">
        <see cref="T:System.Windows.Visibility" /> 列挙値。</param>
      <param name="targetType">このパラメーターは使用されません。</param>
      <param name="parameter">このパラメーターは使用されません。</param>
      <param name="culture">このパラメーターは使用されません。</param>
      <returns>
        <see langword="true" /> が <paramref name="value" /> の場合は <see cref="F:System.Windows.Visibility.Visible" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.Border">
      <summary>要素の周囲に罫線、背景、またはその両方を描きます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Border.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Border" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Border.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Border" /> 要素のコンテンツを配置します。</summary>
      <param name="finalSize">この要素が子要素を配置するために使用する <see cref="T:System.Windows.Size" />。</param>
      <returns>この <see cref="T:System.Windows.Size" /> 要素およびその子要素の配置後のサイズを表す <see cref="T:System.Windows.Controls.Border" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.Background">
      <summary>
        <see cref="T:System.Windows.Controls.Border" /> の境界の間の領域を塗りつぶす <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>背景を描画する <see cref="T:System.Windows.Media.Brush" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Border.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderBrush">
      <summary>外側の境界線の色を描画する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>外側の境界線の色を描画する <see cref="T:System.Windows.Media.Brush" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Border.BorderBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderThickness">
      <summary>
        <see cref="T:System.Windows.Controls.Border" /> の相対 <see cref="T:System.Windows.Thickness" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Border" /> の境界線の幅を表す <see cref="T:System.Windows.Thickness" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderThicknessProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Border.BorderThickness" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Border.CornerRadius">
      <summary>
        <see cref="T:System.Windows.Controls.Border" /> の角の丸みの程度を表す値を取得または設定します。</summary>
      <returns>角の丸みの程度を表す <see cref="T:System.Windows.CornerRadius" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.CornerRadiusProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Border.CornerRadius" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Border.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Border" /> パスにおいて、配置の前に <see cref="M:System.Windows.Controls.Border.ArrangeOverride(System.Windows.Size)" /> の子要素を測定します。</summary>
      <param name="constraint">
        <see cref="T:System.Windows.Size" /> の上限。この値を超えることはできません。</param>
      <returns>要素のサイズの上限値を表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Border.OnRender(System.Windows.Media.DrawingContext)">
      <summary>
        <see cref="T:System.Windows.Controls.Border" /> のレンダリング パス中に、<see cref="T:System.Windows.Media.DrawingContext" /> オブジェクトの内容を描画します。</summary>
      <param name="dc">描画するオブジェクトを定義する <see cref="T:System.Windows.Media.DrawingContext" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Border.Padding">
      <summary>
        <see cref="T:System.Windows.Thickness" /> とその子要素間の間隔を記述する <see cref="T:System.Windows.Controls.Border" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Thickness" /> とその子要素の間の間隔を記述する <see cref="T:System.Windows.Controls.Border" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.PaddingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Border.Padding" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.BorderGapMaskConverter">
      <summary>
        <see cref="T:System.Windows.Controls.GroupBox" /> コントロールのサイズを <see cref="T:System.Windows.Media.VisualBrush" /> に変換するコンバーターを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.BorderGapMaskConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.BorderGapMaskConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.BorderGapMaskConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <see cref="T:System.Windows.Media.VisualBrush" /> コントロールの境界線を描画する <see cref="T:System.Windows.Controls.GroupBox" /> を作成します。</summary>
      <param name="values">
        <see cref="T:System.Windows.Controls.GroupBox" /> コントロールのパラメーターを表す 3 つの数値の配列。</param>
      <param name="targetType">このパラメーターは使用されません。</param>
      <param name="parameter">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> で、<see cref="T:System.Windows.Controls.GroupBox" /> の左側に表示される行の幅。</param>
      <param name="culture">このパラメーターは使用されません。</param>
      <returns>
        <see cref="T:System.Windows.Media.VisualBrush" /> コンテンツのすき間を含めて、<see cref="T:System.Windows.Controls.GroupBox" /> コントロールの周囲に境界線を描画する <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.BorderGapMaskConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>実装されていません。</summary>
      <param name="value">このパラメーターは使用されません。</param>
      <param name="targetTypes">このパラメーターは使用されません。</param>
      <param name="parameter">このパラメーターは使用されません。</param>
      <param name="culture">このパラメーターは使用されません。</param>
      <returns>常に <see cref="F:System.Windows.Data.Binding.DoNothing" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.Button">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントに反応する Windows ボタン コントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Button" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Button.IsCancel">
      <summary>
        <see cref="T:System.Windows.Controls.Button" /> が [キャンセル] ボタンかどうかを示す値を取得または設定します。 Esc キーを押すと、[キャンセル] ボタンを有効化することができます。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Button" /> が [キャンセル] ボタンである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Button.IsCancelProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Button.IsCancel" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Button.IsDefault">
      <summary>
        <see cref="T:System.Windows.Controls.Button" /> が既定のボタンかどうかを示す値を取得または設定します。 ユーザーが Enter キーを押すと既定のボタンが呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Button" /> が既定のボタンである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Button.IsDefaulted">
      <summary>
        <see cref="T:System.Windows.Controls.Button" /> が、ユーザーが Enter を押すとアクティブ化されるボタンかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが Enter を押すとボタンがアクティブ化される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Button.IsDefaultedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Button.IsDefaultProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Button.IsDefault" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnClick">
      <summary>
        <see cref="T:System.Windows.Controls.Button" /> がクリックされたときに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnCreateAutomationPeer">
      <summary>WPF インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> を作成します。</summary>
      <returns>このコントロールの <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.Calendar">
      <summary>視覚的な予定表の表示を使用して、ユーザーが日付を選択できるようにするコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.BlackoutDates">
      <summary>選択不可としてマークされている日付のコレクションを取得します。</summary>
      <returns>選択できない日付のコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarButtonStyle">
      <summary>コントロールの <see cref="T:System.Windows.Style" /> 内部オブジェクトに関連付けられている <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> オブジェクトの現在のスタイル。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarButtonStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle">
      <summary>コントロールの <see cref="T:System.Windows.Style" /> 内部オブジェクトに関連付けられている <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> オブジェクトの現在のスタイル。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarItemStyle">
      <summary>コントロールの <see cref="T:System.Windows.Style" /> 内部オブジェクトに関連付けられている <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> オブジェクトの現在のスタイル。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarItemStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDate">
      <summary>表示する日付を取得または設定します。</summary>
      <returns>表示する日付。 既定値は、<see cref="P:System.DateTime.Today" /> です。</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.DisplayDateChanged">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> プロパティが変更されると発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDateEnd">
      <summary>予定表で使用できる日付範囲の最後の日付を取得または設定します。</summary>
      <returns>予定表で使用できる最後の日付。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateEndProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDateStart">
      <summary>予定表で使用できる最初の日付を取得または設定します。</summary>
      <returns>予定表で使用できる最初の日付。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateStartProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayMode">
      <summary>予定表で月、年、10 年のいずれを表示するかを指定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Calendar" /> で表示する期間の長さを示す値。</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.DisplayModeChanged">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> プロパティが変更されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.FirstDayOfWeek">
      <summary>週の始まりと見なされる曜日を取得または設定します。</summary>
      <returns>週の始まりを表す <see cref="T:System.DayOfWeek" />。 既定値は、現在のカルチャで決定された <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.FirstDayOfWeekProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.IsTodayHighlighted">
      <summary>現在の日付が強調表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>現在の日付が強調表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.IsTodayHighlightedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Calendar" /> コントロールのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnCreateAutomationPeer">
      <summary>Silverlight オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> オブジェクトの <see cref="T:System.Windows.Controls.Calendar" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>このコントロールにフォーカスがある状態でユーザーがキーを押したときに発生する <see cref="E:System.Windows.UIElement.KeyDown" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>このコントロールにフォーカスがある状態でユーザーがキーを離したときに発生する <see cref="E:System.Windows.UIElement.KeyUp" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> ルーティング イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.Calendar.SelectionModeChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectedDate">
      <summary>現在選択されている日付を取得または設定します。</summary>
      <returns>現在選択されている日付。 既定値は、<see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定された日付が <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> および <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> で指定された範囲内にありません。

または -
指定した日付は <see cref="P:System.Windows.Controls.Calendar.BlackoutDates" /> コレクションにあります。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> が <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" /> に設定されているときに、<see langword="null" /> 以外に設定する場合。</exception>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectedDateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectedDates">
      <summary>選択された日付のコレクションを設定します。</summary>
      <returns>現在選択されている日付を含む <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> オブジェクト。 既定値は空のコレクションです。</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.SelectedDatesChanged">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> プロパティが返すコレクションが変更されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectedDatesChangedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectionMode">
      <summary>許可されている選択の種類を示す値を取得または設定します。</summary>
      <returns>現在の選択モードを示す値。 既定値は、<see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" /> です。</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.SelectionModeChanged">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> が変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectionModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.ToString">
      <summary>選択された日付のテキスト表現を提供します。</summary>
      <returns>選択された日付のテキスト表現、または <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> が <see langword="null" /> の場合は空の文字列。</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarBlackoutDatesCollection">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> 内の選択できない日付のコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.#ctor(System.Windows.Controls.Calendar)">
      <summary>
        <see cref="T:System.Windows.Controls.CalendarBlackoutDatesCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオブジェクトが表す日付を含む <see cref="T:System.Windows.Controls.Calendar" />。</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast">
      <summary>
        <see cref="P:System.DateTime.Today" /> より前のすべての日付をコレクションに追加します。</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime)">
      <summary>指定した日付がこのコレクションに含まれるかどうかを示す値を返します。</summary>
      <param name="date">検索する日付。</param>
      <returns>指定した日付がコレクションに含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime,System.DateTime)">
      <summary>指定した日付範囲がこのコレクションに含まれるかどうかを示す値を返します。</summary>
      <param name="start">日付範囲の開始日。</param>
      <param name="end">日付範囲の終了日。</param>
      <returns>指定した範囲内のすべての日付がコレクションに含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.ContainsAny(System.Windows.Controls.CalendarDateRange)">
      <summary>指定した日付範囲内の日付が 1 つでもこのコレクションに含まれるかどうかを示す値を返します。</summary>
      <param name="range">検索する日付範囲。</param>
      <returns>指定した範囲内の日付が 1 つでもコレクションに含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarDateChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.AddedDate">
      <summary>新たに表示する日付を取得または設定します。</summary>
      <returns>新しく表示する日付。</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.RemovedDate">
      <summary>前に表示されていた日付を取得または設定します。</summary>
      <returns>前に表示されていた日付。</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarDateRange">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> 内の日付の範囲を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.CalendarDateRange" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime)">
      <summary>単一の日付を使用して、<see cref="T:System.Windows.Controls.CalendarDateRange" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="day">追加する日付。</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime,System.DateTime)">
      <summary>日付の範囲を使用して、<see cref="T:System.Windows.Controls.CalendarDateRange" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="start">表される範囲の先頭。</param>
      <param name="end">表される範囲の末尾。</param>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateRange.End">
      <summary>表される範囲の最後の日付を取得します。</summary>
      <returns>表される範囲の最後の日付。</returns>
    </member>
    <member name="E:System.Windows.Controls.CalendarDateRange.PropertyChanged">
      <summary>プロパティ値が変更するときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateRange.Start">
      <summary>表される範囲の最初の日付を取得します。</summary>
      <returns>表される範囲の最初の日付。</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarMode">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> で月、年、10 年のいずれを表示するかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Decade">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> は一度に 10 年単位で表示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Month">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> は一度に 1 月ずつ表示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Year">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> は一度に 1 年ずつ表示します。</summary>
    </member>
    <member name="T:System.Windows.Controls.CalendarModeChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarModeChangedEventArgs.#ctor(System.Windows.Controls.CalendarMode,System.Windows.Controls.CalendarMode)">
      <summary>
        <see cref="T:System.Windows.Controls.CalendarModeChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oldMode">前のモード。</param>
      <param name="newMode">新しいモード。</param>
    </member>
    <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.NewMode">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> の新しいモードを取得します。</summary>
      <returns>新しいモードを表す <see cref="T:System.Windows.Controls.CalendarMode" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.OldMode">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> の前のモードを取得します。</summary>
      <returns>古いモードを表す <see cref="T:System.Windows.Controls.CalendarMode" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarSelectionMode">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> で単一と複数のどちらの日付を選択できるかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.MultipleRange">
      <summary>隣接していない複数の日付範囲を選択できます。 <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> プロパティを使用すると、選択した日付を取得できます。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.None">
      <summary>選択は許可されません。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleDate">
      <summary>1 つの日付を選択できます。 <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> プロパティを使用すると、選択した日付を取得できます。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleRange">
      <summary>1 つ日付範囲を選択できます。 <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> プロパティを使用すると、選択した日付を取得できます。</summary>
    </member>
    <member name="T:System.Windows.Controls.Canvas">
      <summary>
        <see cref="T:System.Windows.Controls.Canvas" /> 領域に対する相対座標を使用して子要素を明示的に配置する領域を定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Canvas" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Canvas" /> 要素のコンテンツを配置します。</summary>
      <param name="arrangeSize">この <see cref="T:System.Windows.Controls.Canvas" /> 要素が子要素を配置するために使用する必要があるサイズ。</param>
      <returns>この <see cref="T:System.Windows.Size" /> 要素およびその子孫の配置後のサイズを表す <see cref="T:System.Windows.Controls.Canvas" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Bottom">
      <summary>要素の下端と親 <see cref="T:System.Windows.Controls.Canvas" /> の下端との距離を表す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Canvas.BottomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetBottom(System.Windows.UIElement)">
      <summary>所定の依存関係オブジェクトの <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 添付プロパティの値を返します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>指定した要素の <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 座標。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetLayoutClip(System.Windows.Size)">
      <summary>
        <see cref="P:System.Windows.UIElement.ClipToBounds" /> プロパティが <see langword="true" /> に設定されている場合にクリップされる領域を示すクリッピング ジオメトリを返します。</summary>
      <param name="layoutSlotSize">要素の利用可能なサイズ。</param>
      <returns>
        <see cref="T:System.Windows.Media.Geometry" /> が <see langword="true" /> である場合にクリップされる領域を表す <see cref="P:System.Windows.UIElement.ClipToBounds" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetLeft(System.Windows.UIElement)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Controls.Canvas.Left" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>指定した要素の <see cref="P:System.Windows.Controls.Canvas.Left" /> 座標。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetRight(System.Windows.UIElement)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Controls.Canvas.Right" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>指定した要素の <see cref="P:System.Windows.Controls.Canvas.Right" /> 座標。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetTop(System.Windows.UIElement)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Controls.Canvas.Top" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>指定した要素の <see cref="P:System.Windows.Controls.Canvas.Top" /> 座標。</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Left">
      <summary>要素の左端と親 <see cref="T:System.Windows.Controls.Canvas" /> の左端との距離を表す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Canvas.LeftProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Canvas.Left" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Canvas" /> が渡される間、配置を予測して <see cref="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)" /> の子要素を測定します。</summary>
      <param name="constraint">超えることができない上限の <see cref="T:System.Windows.Size" />。</param>
      <returns>子コンテンツを配置するのに必要なサイズを表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Right">
      <summary>要素の右端と親 <see cref="T:System.Windows.Controls.Canvas" /> の右端との距離を表す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Canvas.RightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Canvas.Right" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>所定の依存関係オブジェクトの <see cref="P:System.Windows.Controls.Canvas.Bottom" /> アタッチされるプロパティの値を設定します。</summary>
      <param name="element">プロパティ値の書き込み対象の要素。</param>
      <param name="length">指定した要素の <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 属性を設定します。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>所定の依存関係オブジェクトの <see cref="P:System.Windows.Controls.Canvas.Left" /> アタッチされるプロパティの値を設定します。</summary>
      <param name="element">プロパティ値の書き込み対象の要素。</param>
      <param name="length">指定した要素の <see cref="P:System.Windows.Controls.Canvas.Left" /> 属性を設定します。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetRight(System.Windows.UIElement,System.Double)">
      <summary>所定の依存関係オブジェクトの <see cref="P:System.Windows.Controls.Canvas.Right" /> アタッチされるプロパティの値を設定します。</summary>
      <param name="element">プロパティ値の書き込み対象の要素。</param>
      <param name="length">指定した要素の <see cref="P:System.Windows.Controls.Canvas.Right" /> 属性を設定します。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetTop(System.Windows.UIElement,System.Double)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Controls.Canvas.Top" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティ値の書き込み対象の要素。</param>
      <param name="length">指定した要素の <see cref="P:System.Windows.Controls.Canvas.Top" /> 属性を設定します。</param>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Top">
      <summary>要素の上端と親 <see cref="T:System.Windows.Controls.Canvas" /> の上端との距離を表す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Canvas.TopProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Canvas.Top" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.CharacterCasing">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> コントロール内に手動で入力した文字を、大文字と小文字のどちらで表示するかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.CharacterCasing.Lower">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> に入力した文字は、小文字に変換されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.CharacterCasing.Normal">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> に入力した文字は、変換されません。</summary>
    </member>
    <member name="F:System.Windows.Controls.CharacterCasing.Upper">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> に入力した文字は、大文字に変換されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.CheckBox">
      <summary>ユーザーがオンまたはオフにできるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.CheckBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.CheckBox" /> のアクセス キーの使用時に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.AccessKeyEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.CheckBox" /> を作成します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.CheckBox" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.CheckBox" />
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントに応答します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.KeyEventArgs" />。</param>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.#ctor(System.Object,System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">元のデータ値を表す <see cref="T:System.Object" />。</param>
      <param name="element">データ値を表す <see cref="T:System.Windows.UIElement" />。</param>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Cancel">
      <summary>この項目の再仮想化を回避するかどうかを示す値を取得または設定します。</summary>
      <returns>この項目の再仮想化を行わないようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement">
      <summary>データ値を表す視覚的要素のインスタンスを取得します。</summary>
      <returns>データ値を表す <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value">
      <summary>元のデータ値を表す <see cref="T:System.Object" /> を取得します。</summary>
      <returns>元のデータ値を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 添付イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.ClickMode">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させるタイミングを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Hover">
      <summary>マウスをコントロールの上に置いたときに <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させるように指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Press">
      <summary>ボタンを押すとすぐに <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させるように指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Release">
      <summary>ボタンを押して離したときに <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させるように指定します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinition">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 要素に適用される列固有のプロパティを定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinition.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.ActualWidth">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" />の実際に計算された幅を表す値を取得します。</summary>
      <returns>実際に計算された幅をデバイス非依存ピクセルで表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MaxWidth">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> の最大の幅を表す値を取得または設定します。</summary>
      <returns>最大の幅を表す <see cref="T:System.Double" />。 既定値は <see cref="F:System.Double.PositiveInfinity" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MaxWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MinWidth">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> の最小の幅を表す値を取得または設定します。</summary>
      <returns>最小の幅を表す <see cref="T:System.Double" />。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MinWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.Offset">
      <summary>この <see cref="T:System.Windows.Controls.ColumnDefinition" /> のオフセット値を表す値を取得します。</summary>
      <returns>列のオフセットを表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.Width">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> 要素の計算された幅を取得するか、 <see cref="T:System.Windows.GridLength" /> で定義されている列の <see cref="T:System.Windows.Controls.ColumnDefinition" />値を設定します。</summary>
      <returns>列の幅を表す <see cref="T:System.Windows.GridLength" />。 既定値は 1.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.WidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ColumnDefinition.Width" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinitionCollection">
      <summary>順序付けられ、厳密に型指定された <see cref="T:System.Windows.Controls.ColumnDefinition" /> オブジェクトのコレクションへのアクセスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Add(System.Windows.Controls.ColumnDefinition)">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> 要素を <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> に追加します。</summary>
      <param name="value">コレクションに追加する <see cref="T:System.Windows.Controls.ColumnDefinition" /> を識別します。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Clear">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> の内容を消去します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Contains(System.Windows.Controls.ColumnDefinition)">
      <summary>指定された <see cref="T:System.Windows.Controls.ColumnDefinition" /> が <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 内に存在するかどうかを確認します。</summary>
      <param name="value">テスト中の <see cref="T:System.Windows.Controls.ColumnDefinition" /> を識別します。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> がコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.CopyTo(System.Windows.Controls.ColumnDefinition[],System.Int32)">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> 内の指定されたインデックス位置に、<see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> オブジェクトの配列をコピーします。</summary>
      <param name="array">
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> オブジェクトの配列。</param>
      <param name="index">
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> オブジェクトのコピー先となる <paramref name="array" /> 内のインデックス位置を識別します。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> が多次元です。

または -
コピー元の <see cref="T:System.Collections.ICollection" /> の要素数が、コピー先の配列の <paramref name="index" /> から最後までの領域を超えています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満です。</exception>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.Count">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> のこのインスタンス内にある項目の合計数を取得します。</summary>
      <returns>コレクション内の項目の合計数。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.IndexOf(System.Windows.Controls.ColumnDefinition)">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> 内の指定された <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> のインデックス位置を返します。</summary>
      <param name="value">目的のインデックス位置を持つ <see cref="T:System.Windows.Controls.ColumnDefinition" />。</param>
      <returns>コレクションに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Insert(System.Int32,System.Windows.Controls.ColumnDefinition)">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> 内の指定されたインデックス位置に、<see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> を挿入します。</summary>
      <param name="index">コレクション内での項目の挿入位置。</param>
      <param name="value">挿入する <see cref="T:System.Windows.Controls.ColumnDefinition" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が <see cref="T:System.Collections.IList" /> の有効なインデックスではありません。</exception>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.IsReadOnly">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> が読み取り専用かどうかを示す値を取得します。</summary>
      <returns>コレクションが読み取り専用の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.IsSynchronized">
      <summary>この <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> へのアクセスが同期される (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>このコレクションへのアクセスが同期されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.Item(System.Int32)">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 内の現在の項目を表す値を取得します。</summary>
      <param name="index">コレクション内の現在の項目。</param>
      <returns>指定したインデックス位置にある要素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> は、コレクション内での有効なインデックス位置ではありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Remove(System.Windows.Controls.ColumnDefinition)">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> から <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> を削除します。</summary>
      <param name="value">コレクションから削除する <see cref="T:System.Windows.Controls.ColumnDefinition" />。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> がコレクション内で見つかり、削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックス位置にある <see cref="T:System.Windows.Controls.ColumnDefinition" /> を <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> から削除します。</summary>
      <param name="index">コレクション内での <see cref="T:System.Windows.Controls.ColumnDefinition" /> の削除位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> から <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> オブジェクトの範囲を削除します。</summary>
      <param name="index">最初の <see cref="T:System.Windows.Controls.ColumnDefinition" /> を削除する、コレクション内での位置。</param>
      <param name="count">コレクションから削除する <see cref="T:System.Windows.Controls.ColumnDefinition" /> オブジェクトの合計数。</param>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.SyncRoot">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#Generic#IEnumerable{System#Windows#Controls#ColumnDefinition}#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />」をご覧ください。</summary>
      <param name="array">
        <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> からコピーされた項目を受け取る、0 から始まる <see cref="T:System.Array" />。</param>
      <param name="index">指定した <see cref="T:System.Array" /> 内の、内容のコピー開始位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Add(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Add(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Object" /> に追加する <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</param>
      <returns>新しい要素が挿入された位置。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IList.Contains(System.Object)" /> のトピックを参照してください。</summary>
      <param name="value">
        <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>
        <see cref="T:System.Object" /> が <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.IndexOf(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> のトピックを参照してください。</summary>
      <param name="index">
        <see cref="T:System.Object" /> を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">
        <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> に挿入する <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#IsFixedSize">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsFixedSize" />」をご覧ください。</summary>
      <returns>
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.IList.Item(System.Int32)" /> のトピックを参照してください。</summary>
      <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns>指定したインデックス位置にある要素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> がリスト内での有効なインデックス位置ではありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Remove(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Object" /> から削除する <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</param>
    </member>
    <member name="T:System.Windows.Controls.ComboBox">
      <summary>コントロールの矢印をクリックして表示または非表示にすることができるドロップダウン リストが付いた選択コントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownClosed">
      <summary>コンボ ボックスのドロップダウン リストが閉じたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownOpened">
      <summary>コンボ ボックスのドロップダウン リストが開いたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride">
      <summary>指定された項目の表示に使用する要素を作成または識別します。</summary>
      <returns>指定された項目を表示するために使用する要素。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.HandlesScrolling">
      <summary>コンボ ボックスがスクロールをサポートしているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ComboBox" /> がスクロールをサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBox" /> にフォーカスがあるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ComboBox" /> にフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsDropDownOpen">
      <summary>コンボ ボックスのドロップダウンが現在開かれているかどうかを示す値を、取得または設定します。</summary>
      <returns>ドロップダウン部分が開いている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsEditable">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBox" /> のテキスト ボックス内のテキストの編集を有効または無効にする値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ComboBox" /> が編集可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsEditableProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が独自の <c>ItemContainer</c> であるか (または独自のコンテナーとすることが可能か) どうかを判断します。</summary>
      <param name="item">指定された項目。</param>
      <returns>項目が自身の <c>ItemContainer</c> である場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsReadOnly">
      <summary>選択専用モードを有効にする値を取得または設定します。選択専用モードでは、コンボ ボックスの内容は選択可能ですが、編集することはできません。</summary>
      <returns>
        <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Windows.Controls.ComboBox" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> が強調表示されるかどうかを取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> が強調表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.MaxDropDownHeight">
      <summary>コンボ ボックス ドロップダウンの最大の高さを取得または設定します。</summary>
      <returns>取得または設定する高さを表す倍精度浮動小数点数。 このプロパティ システムに対して定義されている既定値は、画面の最大の高さのパラメーターの 3 分の 1 を基に計算された値です。ただし、この既定値は、さまざまなコントロール テンプレートによってオーバーライドされる可能性があります。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnApplyTemplate">
      <summary>
        <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> の呼び出し時に呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer">
      <summary>WPF インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)">
      <summary>コンボ ボックスのポップアップが閉じたときに報告します。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)">
      <summary>コンボ ボックスのポップアップが開いたときに報告します。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> プロパティが変更されたことを報告します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 添付ルーティング イベントが発生すると呼び出されます。</summary>
      <param name="e">イベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウスの左ボタンが離されたことを報告するために呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 添付ルーティング イベントが発生すると呼び出されます。</summary>
      <param name="e">イベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBox" /> イベントを発生させることにより、<see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> の選択項目の変更に応答します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定された項目を表示するために、指定された要素を準備します。</summary>
      <param name="element">指定された項目を表示するために使用する要素。</param>
      <param name="item">指定された項目。</param>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItem">
      <summary>選択ボックスに表示される項目を取得します。</summary>
      <returns>選択された項目。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat">
      <summary>選択ボックス内の選択した項目が文字列として表示される場合に、その書式を指定する複合文字列を取得します。</summary>
      <returns>選択ボックス内の選択した項目が文字列として表示される場合に、その書式を指定する複合文字列。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate">
      <summary>選択ボックスの内容の項目テンプレートを取得します。</summary>
      <returns>項目テンプレート。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBox" /> がユーザー入力を保持するか、または一致する項目で入力を置き換えるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ComboBox" /> がユーザーの入力を保持する場合は <see langword="true" />。<see cref="T:System.Windows.Controls.ComboBox" /> が入力を対応する項目で置き換える場合は <see langword="false" />。登録されている既定は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit">
      <summary>開いている <see cref="T:System.Windows.Controls.ComboBox" /> にドロップダウン コントロールが表示されている場合、ユーザーが <see cref="T:System.Windows.Controls.TextBox" /> をクリックしたときに、このコンボ ボックスが開いたままになるかどうかを取得または設定します。</summary>
      <returns>ユーザーがテキスト領域をクリックして編集を開始したときに、ドロップダウン コントロールを開いたままにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.Text">
      <summary>現在選択されている項目のテキストを取得または設定します。</summary>
      <returns>現在選択されている項目の文字列。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.TextProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.Text" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ComboBoxItem">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBox" /> 内に選択可能アイテムを実装します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBoxItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBoxItem.IsHighlighted">
      <summary>項目が強調表示されているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ComboBoxItem" /> が強調表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBoxItem.IsHighlightedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnContentChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldContent">古いコンテンツ。</param>
      <param name="newContent">新しいコンテンツ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>この要素にキーボード フォーカスがあることを通知します。</summary>
      <param name="e">キーボード入力イベントの引数。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseEnter" /> イベントに応答します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.MouseEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントに応答します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントに応答します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="T:System.Windows.Controls.ContentControl">
      <summary>任意の種類のコンテンツが 1 つあるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ContentControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
      <summary>指定されたオブジェクトを <see cref="T:System.Windows.Controls.ContentControl" /> の子として追加します。</summary>
      <param name="value">追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.AddText(System.String)">
      <summary>指定された文字列を <see cref="T:System.Windows.Controls.ContentControl" /> に追加します。</summary>
      <param name="text">追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.Content">
      <summary>
        <see cref="T:System.Windows.Controls.ContentControl" /> のコンテンツを取得または設定します。</summary>
      <returns>コントロールのコンテンツを格納するオブジェクト。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentStringFormat">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティが文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティが文字列として表示される場合に、その書式を指定する複合文字列。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentStringFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentTemplate">
      <summary>
        <see cref="T:System.Windows.Controls.ContentControl" /> のコンテンツを表示するために使用するデータ テンプレートを取得または設定します。</summary>
      <returns>データ テンプレート。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentTemplateSelector">
      <summary>アプリケーション作成者がテンプレートを選択するためのカスタム ロジックを提供できるようにするテンプレート セレクターを取得または設定します。</summary>
      <returns>データ テンプレート セレクター。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.HasContent">
      <summary>
        <see cref="T:System.Windows.Controls.ContentControl" /> にコンテンツが含まれているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ContentControl" /> にコンテンツが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.HasContentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.HasContent" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.LogicalChildren">
      <summary>コンテンツ コントロールの論理上の子要素に対する列挙子を取得します。</summary>
      <returns>列挙子。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティの古い値。</param>
      <param name="newContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> プロパティが変更されたときに発生します。</summary>
      <param name="oldContentStringFormat">
        <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> の元の値。</param>
      <param name="newContentStringFormat">
        <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> の新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldContentTemplate">
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> プロパティの古い値。</param>
      <param name="newContentTemplate">
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldContentTemplateSelector">
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> プロパティの古い値。</param>
      <param name="newContentTemplateSelector">
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.ShouldSerializeContent">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティを永続化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="T:System.Windows.Controls.ContentPresenter">
      <summary>
        <see cref="T:System.Windows.Controls.ContentControl" /> のコンテンツを表示します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ContentPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>1 つの子要素を配置し、<see cref="T:System.Windows.Controls.ContentPresenter" /> オブジェクトのコンテンツを決定します。</summary>
      <param name="arrangeSize">この <see cref="T:System.Windows.Controls.ContentPresenter" /> オブジェクトが子要素の整列のために使用する必要があるサイズ。</param>
      <returns>要素に必要な実際のサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.ChooseTemplate">
      <summary>使用するテンプレートを返します。 これは、コンテンツまたはその他のプロパティによって異なる場合があります。</summary>
      <returns>使用する <see cref="T:System.Windows.DataTemplate" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.Content">
      <summary>
        <see cref="T:System.Windows.Controls.ContentPresenter" /> の子要素を生成するために使用するデータを取得または設定します。</summary>
      <returns>子要素を生成するために使用するデータ。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentSource">
      <summary>エイリアス自動作成時に使用する基本名を取得または設定します。</summary>
      <returns>エイリアス自動作成時に使用する基本名。 既定値は "Content" です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentSourceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentSource" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentStringFormat">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> プロパティが文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> プロパティが文字列として表示される場合に、その書式を指定する複合文字列。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentStringFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentTemplate">
      <summary>コントロールのコンテンツを表示するために使用するテンプレートを取得または設定します。</summary>
      <returns>コンテンツの視覚化を定義する <see cref="T:System.Windows.DataTemplate" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector">
      <summary>
        <see cref="T:System.Windows.Controls.DataTemplateSelector" /> を取得または設定します。これにより、アプリケーション作成者は、コントロールのコンテンツの表示に使用するテンプレートを選択するためのカスタム ロジックを提供できるようになります。</summary>
      <returns>ロジックを提供し、適用する <see cref="T:System.Windows.Controls.DataTemplateSelector" /> を返す <see cref="T:System.Windows.DataTemplate" /> オブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.MeasureOverride(System.Windows.Size)">
      <summary>サイズ変更プロパティ、余白、子コンテンツの必要なサイズなどに基づいて、<see cref="T:System.Windows.Controls.ContentPresenter" /> オブジェクトのサイズを決定します。</summary>
      <param name="constraint">戻り値が超えることができない上限値。</param>
      <returns>子コンテンツを配置するために必要なサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnContentStringFormatChanged(System.String,System.String)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> プロパティが変更された時点で呼び出されます。</summary>
      <param name="oldContentStringFormat">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> プロパティの古い値。</param>
      <param name="newContentStringFormat">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> が変更されると呼び出されます。</summary>
      <param name="oldContentTemplate">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> プロパティの古い値。</param>
      <param name="newContentTemplate">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> プロパティが変更されたときに発生します。</summary>
      <param name="oldContentTemplateSelector">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> プロパティの古い値。</param>
      <param name="newContentTemplateSelector">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> が変更されると呼び出されます。</summary>
      <param name="oldTemplate">変更前の <see cref="T:System.Windows.DataTemplate" /> オブジェクト値。</param>
      <param name="newTemplate">変更後の <see cref="T:System.Windows.DataTemplate" /> オブジェクト値。</param>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey">
      <summary>
        <see cref="T:System.Windows.Controls.ContentPresenter" /> がそのスタイルで <see cref="T:System.Windows.Controls.AccessText" /> を使用するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ContentPresenter" /> がそのスタイルで <see cref="T:System.Windows.Controls.AccessText" /> を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.ShouldSerializeContentTemplateSelector">
      <summary>シリアル化プロセスが、このクラスのインスタンスの <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.ContextMenu">
      <summary>コントロールのコンテキストに固有の機能をそのコントロールで公開するためのポップアップ メニューを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ContextMenu.Closed">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> の特定のインスタンスが閉じたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.ClosedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
      <summary>画面上で <see cref="T:System.Windows.Controls.ContextMenu" /> を配置する場所を示すコールバックを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ContextMenu" /> の位置を示すコールバック。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.HandlesScrolling">
      <summary>コントロールがスクロールをサポートしているかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.HasDropShadow">
      <summary>コンテキスト メニューがドロップ シャドウを伴って表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>コンテキスト メニューがドロップ シャドウを伴って表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
      <summary>対象の左開始位置からポップアップの配置ポイントまでの横方向の距離を取得または指定します。</summary>
      <returns>対象の左開始位置からポップアップの配置ポイントまでの横方向の距離。 ターゲットの始点とポップアップの配置ポイントの詳細については、「ポップアップ配置の動作」を参照してください。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.IsOpen">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> が表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ContextMenu" /> が可視の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.IsOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> イベントが発生すると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> に対応する <see cref="T:System.Windows.Controls.ContextMenu" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> に対応する <see cref="T:System.Windows.Controls.ContextMenu" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> プロパティが変更されたことを報告します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.KeyDown" /> イベントが <see cref="T:System.Windows.Controls.ContextMenu" /> 内のオブジェクトによって起動されると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.KeyUp" /> イベントに応答します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyUp" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> イベントが発生すると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>コンテキスト メニューのビジュアル親が変更されるときに呼び出されます。</summary>
      <param name="oldParent">前にコンテキスト メニューが関連付けられていたオブジェクト。</param>
    </member>
    <member name="E:System.Windows.Controls.ContextMenu.Opened">
      <summary>ショートカット メニューの特定のインスタンスが開いたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.OpenedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.Placement">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> の <see cref="T:System.Windows.Controls.ContextMenu" /> プロパティを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 列挙体のいずれか。 既定値は、<see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.PlacementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
      <summary>コンテキスト メニューが開くときに配置の基準となる領域を取得または設定します。</summary>
      <returns>コンテキスト メニューの配置に使用される四角形を定義する領域。 既定値は、<see cref="P:System.Windows.Rect.Empty" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.PlacementTarget">
      <summary>
        <see cref="T:System.Windows.UIElement" /> が開くときに配置の基準となる <see cref="T:System.Windows.Controls.ContextMenu" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ContextMenu" /> が開くときに配置の基準となる要素。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定された項目を表示するために、指定された要素を準備します。</summary>
      <param name="element">指定された項目を表示するために使用する要素。</param>
      <param name="item">指定された項目。</param>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.StaysOpen">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> が自動的に閉じるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> プロパティが <see langword="true" /> に変更されるまでメニューを開いたままにする場合は <see langword="false" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.StaysOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.VerticalOffset">
      <summary>対象の左開始位置からポップアップの配置ポイントまでの縦方向の距離を取得または指定します。</summary>
      <returns>対象の左開始位置からポップアップの配置ポイントまでの縦方向の距離。 ターゲットの始点とポップアップの配置ポイントの詳細については、「ポップアップ配置の動作」を参照してください。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ContextMenuEventArgs">
      <summary>コンテキスト メニュー イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuEventArgs.CursorLeft">
      <summary>マウスの水平位置を取得します。</summary>
      <returns>マウスの水平位置。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuEventArgs.CursorTop">
      <summary>マウスの垂直位置を取得します。</summary>
      <returns>マウスの垂直位置。</returns>
    </member>
    <member name="T:System.Windows.Controls.ContextMenuEventHandler">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> と <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> のルーティング イベント、および同等の <see cref="T:System.Windows.ContentElement" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.ContextMenuService">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> を表示するためのシステム実装を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.AddContextMenuClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> 添付イベントのハンドラーを追加します。</summary>
      <param name="element">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">追加するイベント ハンドラー。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.AddContextMenuOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> 添付イベントのハンドラーを追加します。</summary>
      <param name="element">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</param>
      <param name="handler">追加するイベント ハンドラー。</param>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.ContextMenu">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> のコンテンツを取得または設定します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> が閉じた場合に発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ContextMenuClosingEvent">
      <summary>
        <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> が開くときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ContextMenuOpeningEvent">
      <summary>
        <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> 添付イベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ContextMenuProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetContextMenu(System.Windows.DependencyObject)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> プロパティに関して照会するオブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetHasDropShadow(System.Windows.DependencyObject)">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> にドロップ シャドウがあるかどうかを示す値を取得します。</summary>
      <param name="element">ドロップ シャドウがあるかどうかに関して照会するオブジェクト。</param>
      <returns>ブール値。<see cref="T:System.Windows.Controls.ContextMenu" /> にドロップ シャドウがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetHorizontalOffset(System.Windows.DependencyObject)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> プロパティに関して照会するオブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetIsEnabled(System.Windows.DependencyObject)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> プロパティに関して照会するオブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetPlacement(System.Windows.DependencyObject)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> プロパティに関して照会するオブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetPlacementRectangle(System.Windows.DependencyObject)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> プロパティに関して照会するオブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetPlacementTarget(System.Windows.DependencyObject)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> プロパティに関して照会するオブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetShowOnDisabled(System.Windows.DependencyObject)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> プロパティに関して照会するオブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetVerticalOffset(System.Windows.DependencyObject)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> プロパティに関して照会するオブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> プロパティの値。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.HasDropShadow">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> に有効なドロップ シャドウ効果があるかどうか示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.HasDropShadowProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenuService.HasDropShadow" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.HorizontalOffset">
      <summary>x 方向に沿って親コントロールを基準として <see cref="T:System.Windows.Controls.ContextMenu" /> を配置する場所を示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.HorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.IsEnabled">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> を表示できるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.IsEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.Placement">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> または <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> に対して相対的な <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> の配置を指定する値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.PlacementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.PlacementRectangle">
      <summary>コンテキスト メニューが開くときに配置の基準となる領域を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.PlacementRectangleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.PlacementTarget">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> の親コントロールを取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.PlacementTargetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.RemoveContextMenuClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> 添付イベントのハンドラーを削除します。</summary>
      <param name="element">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">削除するイベント ハンドラー。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.RemoveContextMenuOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> 添付イベントのハンドラーを削除します。</summary>
      <param name="element">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">削除するイベント ハンドラー。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetContextMenu(System.Windows.DependencyObject,System.Windows.Controls.ContextMenu)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> プロパティの値を設定します。</summary>
      <param name="element">プロパティを設定するオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetHasDropShadow(System.Windows.DependencyObject,System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> にドロップ シャドウがあるかどうかを示す値を設定します。</summary>
      <param name="element">プロパティを設定するオブジェクト。</param>
      <param name="value">設定するブール値。<see cref="T:System.Windows.Controls.ContextMenu" /> にドロップ シャドウがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> プロパティの値を設定します。</summary>
      <param name="element">値を設定するオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> プロパティの値を設定します。</summary>
      <param name="element">値を設定するオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> プロパティの値を設定します。</summary>
      <param name="element">値を設定するオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetPlacementRectangle(System.Windows.DependencyObject,System.Windows.Rect)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> プロパティの値を設定します。</summary>
      <param name="element">値を設定するオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> プロパティの値を設定します。</summary>
      <param name="element">値を設定するオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetShowOnDisabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> プロパティの値を設定します。</summary>
      <param name="element">値を設定するオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> プロパティの値を設定します。</summary>
      <param name="element">値を設定するオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled">
      <summary>親が灰色表示されている場合に <see cref="T:System.Windows.Controls.ContextMenu" /> を表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ShowOnDisabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.VerticalOffset">
      <summary>y 方向に沿って親コントロールを基準として <see cref="T:System.Windows.Controls.ContextMenu" /> を配置する場所を示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.VerticalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Control">
      <summary>
        <see cref="T:System.Windows.Controls.ControlTemplate" /> を使用して外観を定義するユーザー インターフェイス (UI) 要素の基本クラスを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Control" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Control" /> オブジェクトのコンテンツを配置し、そのサイズを設定するために呼び出されます。</summary>
      <param name="arrangeBounds">コンテンツの配置に使用する計算されたサイズ。</param>
      <returns>コントロールのサイズです。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Background">
      <summary>コントロールの背景を表すブラシを取得または設定します。</summary>
      <returns>コントロールの背景の塗りつぶしに使用するブラシ。 既定値は、<see cref="P:System.Windows.Media.Brushes.Transparent" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderBrush">
      <summary>コントロールの境界線の背景を表すブラシを取得または設定します。</summary>
      <returns>コントロールの境界線の塗りつぶしに使用するブラシ。既定値は <see cref="P:System.Windows.Media.Brushes.Transparent" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.BorderBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderThickness">
      <summary>コントロールの境界線の太さを取得または設定します。</summary>
      <returns>太さの値。既定値は、4 辺すべてにつき 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderThicknessProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.BorderThickness" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.FontFamily">
      <summary>コントロールのフォント ファミリを取得または設定します。</summary>
      <returns>フォント ファミリ。 既定値は、システム ダイアログのフォントです。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.FontFamily" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.FontSize">
      <summary>フォント サイズを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Control" /> 内のテキストのサイズ。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontSize" /> です。 フォント サイズは、正の数であることが必要です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.FontSize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStretch">
      <summary>画面上でのフォントの縮小率または拡大率を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontStretch" /> 値。 既定値は、<see cref="P:System.Windows.FontStretches.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.FontStretch" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStyle">
      <summary>フォント スタイルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontStyle" /> 値。 既定値は、<see cref="P:System.Windows.FontStyles.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.FontStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.FontWeight">
      <summary>指定したフォントの太さを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontWeight" /> 値。 既定値は、<see cref="P:System.Windows.FontWeights.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.FontWeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.Foreground">
      <summary>前景色を表すブラシを取得または設定します。</summary>
      <returns>コントロールの前景を描画するブラシ。 既定値は、システム ダイアログのフォントの色です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.Foreground" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.HandlesScrolling">
      <summary>コントロールがスクロールをサポートしているかどうかを示す値を取得します。</summary>
      <returns>コントロールがそのスタイルに <see cref="T:System.Windows.Controls.ScrollViewer" /> を持ち、カスタムのキーボード スクロール動作を行う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.HorizontalContentAlignment">
      <summary>コントロールのコンテンツの水平方向の配置を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.HorizontalAlignment" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.HorizontalAlignment.Left" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.HorizontalContentAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.IsTabStop">
      <summary>コントロールがタブ ナビゲーションに含まれるかどうかを示す値を取得または設定します。</summary>
      <returns>コントロールがタブ ナビゲーションに含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.IsTabStopProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.IsTabStop" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)">
      <summary>コントロールを再測定するために呼び出されます。</summary>
      <param name="constraint">メソッドが返すことができる最大サイズ。</param>
      <returns>コントロールのサイズ。最大値は <paramref name="constraint" /> によって指定されます。</returns>
    </member>
    <member name="E:System.Windows.Controls.Control.MouseDoubleClick">
      <summary>マウス ボタンが複数回クリックされると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Control.MouseDoubleClickEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> ルーティング イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> ルーティング イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>コントロールのテンプレートが変更されるたびに呼び出されます。</summary>
      <param name="oldTemplate">古いテンプレート。</param>
      <param name="newTemplate">新しいテンプレート。</param>
    </member>
    <member name="P:System.Windows.Controls.Control.Padding">
      <summary>コントロールのパディングを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Control" /> のコンテンツとその <see cref="P:System.Windows.FrameworkElement.Margin" /> または <see cref="T:System.Windows.Controls.Border" /> との間のスペースの量。  既定値は、4 辺すべてにつき 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.PaddingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.Padding" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Control.PreviewMouseDoubleClick">
      <summary>ユーザーがマウス ボタンを 2 回以上クリックしたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Control.PreviewMouseDoubleClickEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.TabIndex">
      <summary>ユーザーが Tab キーを使用してコントロール間を移動するときに、要素がフォーカスを受け取る順序を決定する値を取得または設定します</summary>
      <returns>デバイスの論理ナビゲーションの順序を決定する値。 既定値は <see cref="F:System.Int32.MaxValue" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TabIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.TabIndex" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Control.Template">
      <summary>コントロール テンプレートを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Control" /> の外観を定義するテンプレート。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.Template" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.Control" /> オブジェクトの文字列表現を返します。</summary>
      <returns>コントロールを表す文字列。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.VerticalContentAlignment">
      <summary>コントロールのコンテンツの垂直方向の配置を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.VerticalAlignment" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.VerticalAlignment.Top" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.VerticalContentAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ControlTemplate">
      <summary>コントロールの複数のインスタンスで共有できる、<see cref="T:System.Windows.Controls.Control" /> のビジュアル構造と動作特性を指定します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ControlTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.#ctor(System.Type)">
      <summary>指定された対象の型を使用して <see cref="T:System.Windows.Controls.ControlTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="targetType">このテンプレートの対象の型。</param>
    </member>
    <member name="P:System.Windows.Controls.ControlTemplate.TargetType">
      <summary>この <see cref="T:System.Windows.Controls.ControlTemplate" /> が対象としている型を取得または設定します。</summary>
      <returns>既定値は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentNullException">テンプレートの定義に <see cref="P:System.Windows.Controls.ControlTemplate.TargetType" /> が含まれている場合、<see cref="T:System.Windows.Controls.ContentPresenter" /> プロパティは <see langword="null" /> にすることができません。</exception>
      <exception cref="T:System.ArgumentException">指定された型が無効です。 <see cref="P:System.Windows.Controls.ControlTemplate.TargetType" /> の <see cref="T:System.Windows.Controls.ControlTemplate" /> は、<see cref="T:System.Windows.Controls.Control" />、<see cref="T:System.Windows.Controls.Page" />、または <see cref="T:System.Windows.Navigation.PageFunctionBase" /> であるか、これらからの継承である必要があります。</exception>
    </member>
    <member name="P:System.Windows.Controls.ControlTemplate.Triggers">
      <summary>プロパティの変更を適用する、または指定した条件に基づいてアクションを実行する <see cref="T:System.Windows.TriggerBase" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.TriggerBase" /> オブジェクトのコレクション。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>規則のセットに対してテンプレートが適用される親をチェックします。</summary>
      <param name="templatedParent">このテンプレートが適用される要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="templatedParent" /> は <see langword="null" /> にできません。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Windows.Controls.ControlTemplate" /> に対して <see cref="T:System.Windows.Controls.Control" /> を使用する前には、<see cref="P:System.Windows.Controls.Control.Template" /> プロパティを設定することによって、<see cref="T:System.Windows.Controls.ControlTemplate" /> を <see cref="T:System.Windows.Controls.Control" /> に関連付けておく必要があります。</exception>
    </member>
    <member name="T:System.Windows.Controls.DataErrorValidationRule">
      <summary>ソース オブジェクトの <see cref="T:System.ComponentModel.IDataErrorInfo" /> 実装によって発生する、エラーをチェックする規則を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataErrorValidationRule.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataErrorValidationRule" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataErrorValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>値の検証チェックを実行します。</summary>
      <param name="value">チェックする値。</param>
      <param name="cultureInfo">このルールで使用するカルチャ。</param>
      <returns>検証の結果。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGrid">
      <summary>カスタマイズできるグリッドにデータを表示するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AddingNewItem">
      <summary>新しい項目が <see cref="T:System.Windows.Controls.DataGrid" /> リストに追加される前に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AlternatingRowBackground">
      <summary>交互の行で使用される背景ブラシを取得または設定します。</summary>
      <returns>n 番目の行ごとの背景を描画する <see cref="T:System.Windows.Media.Brush" />。n は <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> プロパティによって定義されます。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AlternatingRowBackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.AlternatingRowBackground" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen">
      <summary>行の詳細を水平方向にスクロールできるかどうかを示す値を取得または設定します。</summary>
      <returns>行の詳細をスクロールできない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AreRowDetailsFrozenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AutoGenerateColumns">
      <summary>列が自動的に作成されるかどうかを示す値を取得または設定します。</summary>
      <returns>列が自動的に作成される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="true" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AutoGenerateColumnsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.AutoGenerateColumns" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AutoGeneratedColumns">
      <summary>すべての列の自動生成が完了したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn">
      <summary>個々の列が自動生成されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.BeginEdit">
      <summary>
        <see cref="M:System.Windows.Controls.DataGrid.BeginEdit" /> コマンドを呼び出します。これにより、現在のセルまたは行が編集モードになります。</summary>
      <returns>現在のセルまたは行が編集モードに移行した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.BeginEdit(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="M:System.Windows.Controls.DataGrid.BeginEdit" /> コマンドを呼び出します。これにより、現在のセルまたは行が編集モードになります。</summary>
      <param name="editingEventArgs">イベント ハンドラーから呼び出された場合は、イベントの引数。 <see langword="null" /> でもかまいません。</param>
      <returns>現在のセルまたは行が編集モードに移行した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.BeginEditCommand">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> の現在のセルまたは行の編集を開始するという意図を示すコマンドを表します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.BeginningEdit">
      <summary>行またセルはが編集モードに切り替わる前に発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CancelEdit">
      <summary>現在編集モードになっているセルまたは行の <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> コマンドを呼び出します。</summary>
      <returns>現在のセルまたは行が編集モードを終了する場合、またはセルまたは行が編集モードになっていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CancelEdit(System.Windows.Controls.DataGridEditingUnit)">
      <summary>編集モードになっている指定されたセルまたは行の <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> コマンドを呼び出します。</summary>
      <param name="editingUnit">行とセルのどちらの編集を取り消すかを指定する列挙値の 1 つ。</param>
      <returns>現在のセルまたは行が編集モードを終了する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CancelEditCommand">
      <summary>現在のセルまたは行に対する保留中の変更を取り消し、<see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> コマンドが実行される前の状態に戻るという意図を示すコマンドを表します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserAddRows">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.DataGrid" /> に新しい行を追加できるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが新しい行を追加できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="true" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserAddRowsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserAddRows" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserDeleteRows">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.DataGrid" /> から行を削除できるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが行を削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="true" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserDeleteRowsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserDeleteRows" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserReorderColumns">
      <summary>ユーザーが列見出しをマウスでドラッグして列の表示順を変更できるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが列の順序を変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="true" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserReorderColumnsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserReorderColumns" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserResizeColumns">
      <summary>ユーザーがマウスを使用して列幅を調整できるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが列幅を調整できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="true" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserResizeColumnsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeColumns" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserResizeRows">
      <summary>ユーザーがマウスを使用して行の高さを調整できるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが行の高さを変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="true" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserResizeRowsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeRows" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserSortColumns">
      <summary>ユーザーが列見出しをクリックして、項目を並べ替えられるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが列を並べ替えることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="true" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserSortColumnsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserSortColumns" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CellEditEnding">
      <summary>セルの編集がコミットされるか、または取り消される前に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffset">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridCellsPanel" /> の水平オフセットを取得します。</summary>
      <returns>セル パネルの水平オフセット。 登録済みの既定値は 0.0 です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CellStyle">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> のすべてのセルに適用されるスタイルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> のセルに適用されるスタイル。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CellStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.CellStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定した項目の行をアンロードします。</summary>
      <param name="element">消去する <see cref="T:System.Windows.Controls.DataGridRow" />。</param>
      <param name="item">行に格納されているデータ項目。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ClearDetailsVisibilityForItem(System.Object)">
      <summary>指定されたデータ項目を表す <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> の <see cref="T:System.Windows.Controls.DataGridRow" /> プロパティをクリアします。</summary>
      <param name="item">
        <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> がクリアされた行内のデータ項目。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ClipboardCopyMode">
      <summary>クリップボードへのコンテンツのコピー方法を示す値を取得または設定します。</summary>
      <returns>クリップボードへのコンテンツのコピー方法を示す列挙値の 1 つ。 登録済みの既定値は <see cref="F:System.Windows.Controls.DataGridClipboardCopyMode.ExcludeHeader" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ClipboardCopyModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged">
      <summary>列の 1 つで <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ColumnFromDisplayIndex(System.Int32)">
      <summary>指定されたインデックス位置にある <see cref="T:System.Windows.Controls.DataGridColumn" /> を取得します。</summary>
      <param name="displayIndex">取得する列の、0 から始まるインデックス。</param>
      <returns>指定した <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> にある <see cref="T:System.Windows.Controls.DataGridColumn" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="displayIndex" /> の値が 0 未満か、列数以上です。</exception>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragCompleted">
      <summary>ユーザーがマウスを使用して列ヘッダーをドラッグした後に離すと発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragDelta">
      <summary>ユーザーがマウスで列ヘッダーをドラッグして位置を変更するたびに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragStarted">
      <summary>ユーザーがマウスを使用して列ヘッダーのドラッグを開始すると発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight">
      <summary>列ヘッダー行の高さを取得または設定します。</summary>
      <returns>列ヘッダーの行の高さ (デバイスに依存しない単位 (1 単位は 1/96 インチ)) です。 登録済みの既定値は <see cref="F:System.Double.NaN" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnHeaderHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> のすべての列ヘッダーに適用するスタイルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> のすべての列ヘッダーに適用されるスタイル。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnHeaderStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnReordered">
      <summary>列が表示順の新しい位置に移動されると発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnReordering">
      <summary>列が表示順の新しい位置に移動される前に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.Columns">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> のすべての列を格納しているコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> の列のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnWidth">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> に含まれる列およびヘッダーの標準の幅とサイズ変更モードを取得または設定します。</summary>
      <returns>列とヘッダーの幅とサイズ変更モード (デバイスに依存しない単位 (1 単位は 1/96 インチ))。 登録済みの既定値は <see cref="P:System.Windows.Controls.DataGridLength.SizeToHeader" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.ColumnWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CommitEdit">
      <summary>現在編集モードになっているセルまたは行の <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> コマンドを呼び出します。</summary>
      <returns>現在のセルまたは行が編集モードを終了する場合、またはセルまたは行が編集モードになっていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CommitEdit(System.Windows.Controls.DataGridEditingUnit,System.Boolean)">
      <summary>現在編集モードになっている、指定されたセルまたは行の <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> コマンドを呼び出します。</summary>
      <param name="editingUnit">行とセルのどちらの編集をコミットするかを指定する列挙値の 1 つ。</param>
      <param name="exitEditingMode">編集モードを終了する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>現在のセルまたは行が編集モードを終了する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CommitEditCommand">
      <summary>保留中の変更を現在のセルまたは行にコミットし、編集モードを終了するという意図を示すコマンドを表します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent">
      <summary>既定の行の内容が準備された後に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentCell">
      <summary>フォーカスがあるセルを取得または設定します。</summary>
      <returns>フォーカスを保持するセルに関する情報。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CurrentCellChanged">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.CurrentCell" /> プロパティの値が変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CurrentCellProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.CurrentCell" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentColumn">
      <summary>現在のセルが含まれる列を取得または設定します。</summary>
      <returns>現在のセルが含まれる列。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CurrentColumnProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.CurrentColumn" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentItem">
      <summary>現在のセルが含まれる行にバインドされているデータ項目を取得します。</summary>
      <returns>現在のセルが含まれる行にバインドされているデータ項目。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CurrentItemProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.CurrentItem" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DeleteCommand">
      <summary>現在の行を削除するという意図を示すコマンドを表します。</summary>
      <returns>現在の行を削除するという意図を示す <see cref="P:System.Windows.Input.ApplicationCommands.Delete" /> コマンド。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DragIndicatorStyle">
      <summary>列ヘッダーをドラッグしているときに表示されるドラッグ インジケーターのレンダリングに使用するスタイルを取得または設定します。</summary>
      <returns>ドラッグしているときに列ヘッダーに適用されるスタイル。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.DragIndicatorStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.DragIndicatorStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle">
      <summary>列ヘッダーをドラッグしているときにドロップ位置を示すために適用されるスタイルを取得または設定します。</summary>
      <returns>列ヘッダーに適用されるスタイル。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.DropLocationIndicatorStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.EnableColumnVirtualization">
      <summary>列の仮想化が有効かどうかを示す値を取得または設定します。</summary>
      <returns>列の仮想化が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.EnableColumnVirtualizationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.EnableColumnVirtualization" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.EnableRowVirtualization">
      <summary>行の仮想化が有効かどうかを示す値を取得または設定します。</summary>
      <returns>行の仮想化が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="true" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.EnableRowVirtualizationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.EnableRowVirtualization" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.FocusBorderBrushKey">
      <summary>フォーカスがあるセルの既定の境界ブラシを参照するキーを取得します。</summary>
      <returns>フォーカスがあるセルの既定のブラシを参照するキー。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.FrozenColumnCount">
      <summary>スクロールしない列の数を取得または設定します。</summary>
      <returns>非スクロール列の数。 登録済みの既定値は0です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.FrozenColumnCountProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.FrozenColumnCount" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GenerateColumns(System.ComponentModel.IItemProperties)">
      <summary>オブジェクトの指定されたプロパティの列を生成します。</summary>
      <param name="itemProperties">列に含められるオブジェクトのプロパティ。</param>
      <returns>オブジェクトのプロパティの列のコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemProperties" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GetContainerForItemOverride">
      <summary>新しい <see cref="T:System.Windows.Controls.DataGridRow" /> をインスタンス化します。</summary>
      <returns>コンテナーである行。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GetDetailsVisibilityForItem(System.Object)">
      <summary>指定されたデータ項目を表す <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> の <see cref="T:System.Windows.Controls.DataGridRow" /> プロパティを取得します。</summary>
      <param name="item">
        <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> が返された行内のデータ項目。</param>
      <returns>
        <paramref name="item" /> を格納している行の可視性。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.GridLinesVisibility">
      <summary>表示するグリッド線を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> で表示するグリッド線を指定する列挙値のいずれか。 登録済みの既定値は <see cref="F:System.Windows.Controls.DataGridGridLinesVisibility.All" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.GridLinesVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.GridLinesVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HandlesScrolling">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> がカスタムのキーボード スクロールをサポートするかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HeadersVisibility">
      <summary>行ヘッダーと列ヘッダーの可視性を指定する値を取得または設定します。</summary>
      <returns>行ヘッダーと列ヘッダーの可視性を示す列挙値の 1 つ。 登録済みの既定値は <see cref="F:System.Windows.Controls.DataGridHeadersVisibility.All" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HeadersVisibilityConverter">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridHeadersVisibility" /> を <see cref="T:System.Windows.Visibility" /> に変換するコンバーターを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGridHeadersVisibility" /> を <see cref="T:System.Windows.Visibility" /> に変換するコンバーター。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HeadersVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.HeadersVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush">
      <summary>水平グリッド線の描画に使用されるブラシを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> の水平グリッド線の描画に使用するブラシ。 登録済みの既定値は黒の <see cref="T:System.Windows.Media.SolidColorBrush" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HorizontalGridLinesBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> での水平スクロール バーの表示方法を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> での水平スクロール バーの表示方法を指定する列挙値のいずれか。 登録済みの既定値は <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.InitializingNewItem">
      <summary>新規項目が作成されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.IsItemItsOwnContainerOverride(System.Object)">
      <summary>項目が <see cref="T:System.Windows.Controls.DataGridRow" /> であるかどうかを判断します。</summary>
      <param name="item">テストする項目。</param>
      <returns>項目が <see cref="T:System.Windows.Controls.DataGridRow" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.IsReadOnly">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.DataGrid" /> 内の値を編集できるかどうかを示す値を取得または設定します。</summary>
      <returns>行とセルが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.IsReadOnly" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.LoadingRow">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridRow" /> がインスタンス化された後で発生します。使用する前にカスタマイズできます。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.LoadingRowDetails">
      <summary>新しい行詳細テンプレートが行に適用されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MaxColumnWidth">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内の列およびヘッダーの幅の上限を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> の列とヘッダーの最大幅 (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 登録済みの既定値は <see cref="F:System.Double.PositiveInfinity" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MaxColumnWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.MaxColumnWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> の必要なサイズを決定します。</summary>
      <param name="availableSize">
        <see cref="T:System.Windows.Controls.DataGrid" /> が占めることができる最大サイズ。</param>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> の必要なサイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MinColumnWidth">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内の列およびヘッダーの幅の下限を取得または設定します。</summary>
      <returns>列とヘッダーの最小幅 (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 登録済みの既定値は20です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MinColumnWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.MinColumnWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MinRowHeight">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内の行およびヘッダーの高さの下限を取得または設定します。</summary>
      <returns>行の高さ制約の下限 (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 登録済みの既定値は 0.0 です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MinRowHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.MinRowHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.NewItemMargin">
      <summary>新しい項目行の余白を取得または設定します。</summary>
      <returns>新しいアイテムの行のためのマージン。
登録済みの既定値は0です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.NewItemMarginProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.NewItemMargin" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffset">
      <summary>ビューポート内のスクロール可能な列の水平オフセットを取得します。</summary>
      <returns>スクロール可能な列の水平オフセット。 登録済みの既定値は 0.0 です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnAddingNewItem(System.Windows.Controls.AddingNewItemEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.AddingNewItem" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnApplyTemplate">
      <summary>アプリケーション コードまたは内部プロセスが <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> を呼び出すたびに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnAutoGeneratedColumns(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratedColumns" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnAutoGeneratingColumn(System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnBeginningEdit(System.Windows.Controls.DataGridBeginningEditEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.BeginningEdit" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteBeginEdit(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> コマンドに関連付けられた <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> イベントの処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteCancelEdit(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> コマンドに関連付けられた <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> イベントの処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteCommitEdit(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> コマンドに関連付けられた <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> イベントの処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteCopy(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> コマンドに関連付けられた <see cref="P:System.Windows.Input.ApplicationCommands.Copy" /> イベントの処理を提供します。</summary>
      <param name="args">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteDelete(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> コマンドに関連付けられた <see cref="P:System.Windows.Controls.DataGrid.DeleteCommand" /> イベントの処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCellEditEnding(System.Windows.Controls.DataGridCellEditEndingEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.CellEditEnding" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnDisplayIndexChanged(System.Windows.Controls.DataGridColumnEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragCompleted" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragDelta" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragStarted" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnReordered(System.Windows.Controls.DataGridColumnEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.ColumnReordered" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnReordering(System.Windows.Controls.DataGridColumnReorderingEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.ColumnReordering" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>コンテキスト メニューが開いている場合、セルを選択します。</summary>
      <param name="e">コンテキスト メニューが開いている項目。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCopyingRowClipboardContent(System.Windows.Controls.DataGridRowClipboardEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent" /> イベントを発生させます。</summary>
      <param name="args">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Controls.DataGrid" /> のオートメーション ピアを返します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.DataGrid" /> のオートメーション ピア。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCurrentCellChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.CurrentCellChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedBeginEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Input.CommandBinding.Executed" /> コマンドに関連付けられた <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> イベントの処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedCancelEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Input.CommandBinding.Executed" /> コマンドに関連付けられた <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> イベントの処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedCommitEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Input.CommandBinding.Executed" /> コマンドに関連付けられた <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> イベントの処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedCopy(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Input.CommandBinding.Executed" /> コマンドに関連付けられた <see cref="P:System.Windows.Input.ApplicationCommands.Copy" /> イベントの処理を提供します。</summary>
      <param name="args">イベントのデータ。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> が <see cref="F:System.Windows.Controls.DataGridClipboardCopyMode.None" /> に設定されます。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedDelete(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Input.CommandBinding.Executed" /> コマンドに関連付けられた <see cref="P:System.Windows.Controls.DataGrid.DeleteCommand" /> イベントの処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnInitializingNewItem(System.Windows.Controls.InitializingNewItemEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この要素の <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>項目が変化すると、列の自動生成を行い、検証フラグを更新します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> プロパティが変更された時点で呼び出されます。</summary>
      <param name="oldValue">古いソース。</param>
      <param name="newValue">新しいソース。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントを受信すると、呼び出されます。</summary>
      <param name="e">イベントに関する情報。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnLoadingRow(System.Windows.Controls.DataGridRowEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.LoadingRow" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnLoadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.LoadingRowDetails" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.DataGrid" /> 内でマウスをドラッグして選択した項目のコレクションを更新します。</summary>
      <param name="e">マウス データ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnPreparingCellForEdit(System.Windows.Controls.DataGridPreparingCellForEditEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnRowDetailsVisibilityChanged(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnRowEditEnding(System.Windows.Controls.DataGridRowEditEndingEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.RowEditEnding" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSelectedCellsChanged(System.Windows.Controls.SelectedCellsChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>選択項目が変更されたときに呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSorting(System.Windows.Controls.DataGridSortingEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.Sorting" /> イベントを発生させます。</summary>
      <param name="eventArgs">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> のテンプレートが変更されるたびに呼び出されます。</summary>
      <param name="oldTemplate">古いテンプレート。</param>
      <param name="newTemplate">新しいテンプレート。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInput" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRow(System.Windows.Controls.DataGridRowEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.UnloadingRow" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定した項目の新しい行を準備します。</summary>
      <param name="element">新しい <see cref="T:System.Windows.Controls.DataGridRow" />。</param>
      <param name="item">行に格納されているデータ項目。</param>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.PreparingCellForEdit">
      <summary>セルが編集モードに移行したときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowBackground">
      <summary>行の背景の既定のブラシを取得または設定します。</summary>
      <returns>行の背景を描画するブラシ。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowBackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowBackground" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsScrollingConverter">
      <summary>ブール値を <see cref="T:System.Windows.Controls.SelectiveScrollingOrientation" /> に変換するコンバーターを取得します。</summary>
      <returns>ブール値を <see cref="T:System.Windows.Controls.SelectiveScrollingOrientation" /> に変換するコンバーター。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsTemplate">
      <summary>行の詳細を表示するために使用されるテンプレートを取得または設定します。</summary>
      <returns>行の詳細を表示するために使用するテンプレート。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsTemplateSelector">
      <summary>行の詳細に使用されるテンプレート セレクターを取得または設定します。</summary>
      <returns>行の詳細に使用するテンプレート セレクター。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged">
      <summary>行の詳細の可視性が変更されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode">
      <summary>行の詳細セクションを表示するかどうかを示す値を取得または設定します。</summary>
      <returns>行の詳細の可視性を指定する列挙値のいずれか。 登録済みの既定値は <see cref="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsVisibilityModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.RowEditEnding">
      <summary>行の編集がコミットされるか、または取り消される前に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderActualWidth">
      <summary>行ヘッダー列の描画時の幅を取得します。</summary>
      <returns>行ヘッダーを描画する幅 (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 登録済みの既定値は 0.0 です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderActualWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderActualWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderStyle">
      <summary>すべての行ヘッダーに適用されるスタイルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> のすべての行ヘッダーに適用されるスタイル。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderTemplate">
      <summary>行ヘッダーのテンプレートを取得または設定します。</summary>
      <returns>行ヘッダーのテンプレート。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderTemplateSelector">
      <summary>行ヘッダーのテンプレート セレクターを取得または設定します。</summary>
      <returns>行ヘッダーのテンプレート セレクター。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderWidth">
      <summary>行見出しの列の幅を取得または設定します。</summary>
      <returns>行ヘッダー列の幅 (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 登録済みの既定値は <see cref="F:System.Double.NaN" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeight">
      <summary>すべての行の高さの推奨値を取得または設定します。</summary>
      <returns>行の高さ (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 登録済みの既定値は <see cref="F:System.Double.NaN" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowStyle">
      <summary>すべての行に適用されるスタイルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内のすべての行に適用されるスタイル。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowStyleSelector">
      <summary>行のスタイル セレクターを取得または設定します。</summary>
      <returns>行のスタイル セレクター。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowStyleSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowStyleSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate">
      <summary>行の検証のエラーを視覚的に示すテンプレートを取得または設定します。</summary>
      <returns>行の検証で発生したエラーを視覚的に示すために使用するテンプレート。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowValidationErrorTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowValidationRules">
      <summary>各行のデータを検証するために使用される規則を取得します。</summary>
      <returns>各行のデータを検証するために使用される規則。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ScrollIntoView(System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> を垂直方向にスクロールして、指定されたデータ項目の行を表示します。</summary>
      <param name="item">表示するデータ項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ScrollIntoView(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> を垂直方向および水平方向にスクロールして、指定されたデータ項目および列のセルを表示します。</summary>
      <param name="item">表示するデータ項目。</param>
      <param name="column">表示する列。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.SelectAllCells">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内のすべてのセルを選択します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectAllCommand">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内のすべてのセルを選択するという意図を示すコマンドを表します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.ApplicationCommands.SelectAll" /> 内のすべてのセルを選択するという意図を示す <see cref="T:System.Windows.Controls.DataGrid" /> コマンド。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectedCells">
      <summary>現在選択されているセルの一覧を取得します。</summary>
      <returns>現在選択されているセルの一覧。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.SelectedCellsChanged">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.SelectedCells" /> コレクションが変更された場合に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectionMode">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> で行およびセルを選択する方法を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> での行とセルの選択方法を指定する列挙値のいずれか。 登録済みの既定値は <see cref="F:System.Windows.Controls.DataGridSelectionMode.Extended" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.SelectionModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.SelectionMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectionUnit">
      <summary>行、セル、およびその両方を <see cref="T:System.Windows.Controls.DataGrid" /> で選択できるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> で、行、セル、またはそれら両方が選択可能かどうかを指定する列挙値のいずれか。 登録済みの既定値は <see cref="F:System.Windows.Controls.DataGridSelectionUnit.FullRow" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.SelectionUnitProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.SelectionUnit" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.SetDetailsVisibilityForItem(System.Object,System.Windows.Visibility)">
      <summary>指定したオブジェクトを格納している <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> の <see cref="T:System.Windows.Controls.DataGridRow" /> プロパティの値を設定します。</summary>
      <param name="item">
        <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> の設定対象となる行内のオブジェクト。</param>
      <param name="detailsVisibility">項目を格納している行に設定する <see cref="T:System.Windows.Visibility" />。</param>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.Sorting">
      <summary>列が並べ替えられているときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.UnloadingRow">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridRow" /> オブジェクトが再利用可能になると発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.UnloadingRowDetails">
      <summary>行詳細要素が再利用可能になると発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.UnselectAllCells">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内のすべてのセルの選択を解除します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush">
      <summary>縦グリッド線の描画に使用されるブラシを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> の垂直グリッド線の描画に使用するブラシ。 登録済みの既定値は黒の <see cref="T:System.Windows.Media.SolidColorBrush" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.VerticalGridLinesBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> での垂直スクロール バーの表示方法を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> での垂直スクロール バーの表示方法を指定する列挙値のいずれか。 登録済みの既定値は <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.VerticalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.#ctor(System.String,System.Type,System.Windows.Controls.DataGridColumn)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyName">生成された列にバインドされるプロパティの名前。</param>
      <param name="propertyType">生成された列にバインドされるプロパティの型。</param>
      <param name="column">生成された列。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.Cancel">
      <summary>イベントを取り消すかどうかを示す値を取得または設定します。</summary>
      <returns>イベントを取り消す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.Column">
      <summary>生成された列を取得または設定します。</summary>
      <returns>生成された列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyDescriptor">
      <summary>生成された列にバインドされるプロパティの記述子を取得します。</summary>
      <returns>プロパティのメタデータ値を格納しているオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyName">
      <summary>生成された列にバインドされるプロパティの名前を取得します。</summary>
      <returns>生成された列にバインドされるプロパティの名前。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyType">
      <summary>生成された列にバインドされるプロパティの型を取得します。</summary>
      <returns>生成された列にバインドされるプロパティの型。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridBeginningEditEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.BeginningEdit" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridBeginningEditEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridBeginningEditEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="column">編集するセルが含まれる列。</param>
      <param name="row">編集するセルが含まれる行。</param>
      <param name="editingEventArgs">セルを編集モードにしたユーザー ジェスチャに関する情報。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Cancel">
      <summary>イベントを取り消すかどうかを示す値を取得または設定します。</summary>
      <returns>イベントを取り消す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Column">
      <summary>編集するセルが含まれる列を取得します。</summary>
      <returns>編集するセルが含まれる列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.EditingEventArgs">
      <summary>セルを編集モードにしたユーザー ジェスチャに関する情報を取得します。</summary>
      <returns>セルを編集モードにしたユーザー ジェスチャに関する情報。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Row">
      <summary>編集するセルが含まれる行を取得します。</summary>
      <returns>編集するセルが含まれる行。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridBoundColumn">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> のデータ ソース内のプロパティにバインドできる列の基本クラスとして機能します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridBoundColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.Binding">
      <summary>列とデータソースのプロパティを関連付けるバインドを取得または設定します。</summary>
      <returns>列のデータ バインディングを表すオブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.ClipboardContentBinding">
      <summary>クリップボードのセルの内容を取得または設定するときに使用するバインディング オブジェクトを取得または設定します。</summary>
      <returns>バインディングを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle">
      <summary>編集モードのセルに列で表示される要素のレンダリングに使用するスタイルを取得または設定します。</summary>
      <returns>編集する要素のレンダリングに使用するスタイル。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridBoundColumn.EditingElementStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle">
      <summary>編集モードではないセルに列で表示される要素のレンダリングに使用するスタイルを取得または設定します。</summary>
      <returns>表示するだけの要素のレンダリングに使用するスタイル。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridBoundColumn.ElementStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.OnBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> プロパティの値が変更された場合に、<see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> に通知します。</summary>
      <param name="oldBinding">前のバインディング。</param>
      <param name="newBinding">列が変更された後のバインディング。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.OnCoerceIsReadOnly(System.Boolean)">
      <summary>この列を格納するデータ グリッドのプロパティ規則に基づいて <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> プロパティの値を決定します。</summary>
      <param name="baseValue">デリゲートに渡された値。</param>
      <returns>データ グリッドの規則に基づいて列に含まれるセルを編集できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>バインディングの変更に応じて、列内のセルのコンテンツを再構築します。</summary>
      <param name="element">更新するセル。</param>
      <param name="propertyName">変更された列プロパティの名前。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridCell">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> コントロールのセルを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridCell" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.ArrangeOverride(System.Windows.Size)">
      <summary>セルの内容の最終サイズと配置を決定します。</summary>
      <param name="arrangeSize">セルが占めることができる最大サイズ。</param>
      <returns>コントロールの最終サイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.Column">
      <summary>セルが含まれている列を取得または設定します。</summary>
      <returns>セルが含まれている列。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.ColumnProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridCell.Column" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsEditing">
      <summary>セルが編集モードであるかどうかを示す値を取得または設定します。</summary>
      <returns>セルが編集モードである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsEditingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsReadOnly">
      <summary>セルを編集モードにすることができるかどうかを示す値を取得または設定します。</summary>
      <returns>セルを編集モードにすることができない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridCell.IsReadOnly" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsSelected">
      <summary>セルが選択されているかどうかを示す値を取得または設定します。</summary>
      <returns>セルが選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値が何に影響されるかの詳細については、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsSelectedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridCell.IsSelected" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridCell" /> の必要なサイズを決定します。</summary>
      <param name="constraint">セルが占めることができる最大サイズ。</param>
      <returns>
        <see cref="T:System.Windows.Controls.DataGridCell" /> の必要なサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnColumnChanged(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridColumn)">
      <summary>セルの <see cref="P:System.Windows.Controls.DataGridCell.Column" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldColumn">古い列定義。</param>
      <param name="newColumn">新しい列定義。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Controls.DataGridCell" /> のオートメーション ピアを返します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.DataGridCell" /> のオートメーション ピア。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnIsEditingChanged(System.Boolean)">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="isEditing">
        <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>キーが押されたことを報告します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>キーが押されたことを報告します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnRender(System.Windows.Media.DrawingContext)">
      <summary>セルと右側のグリッド線を描画します。</summary>
      <param name="drawingContext">セルの描画命令。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGridCell.Selected" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>テキスト構成を報告します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGridCell.Unselected" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="E:System.Windows.Controls.DataGridCell.Selected">
      <summary>セルが選択されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.SelectedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.DataGridCell.Selected" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGridCell.Unselected">
      <summary>セルの選択が解除されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.UnselectedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.DataGridCell.Unselected" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellClipboardEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent" /> イベントおよび <see cref="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellClipboardEventArgs.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridCellClipboardEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="item">イベントが発生したセルを含む行のデータ項目。</param>
      <param name="column">イベントが発生したセルの列。</param>
      <param name="content">イベントが発生したセルのテキスト値。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellClipboardEventArgs.Column">
      <summary>イベントが発生したセルの列を取得します。</summary>
      <returns>イベントが発生したセルの列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellClipboardEventArgs.Content">
      <summary>イベントが発生したセルのテキスト値を取得または設定します。</summary>
      <returns>イベントが発生したセルのテキスト値。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellClipboardEventArgs.Item">
      <summary>イベントが発生したセルを含む行のデータ項目を取得します。</summary>
      <returns>イベントが発生したセルを含む行のデータ項目。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellEditEndingEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.CellEditEnding" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellEditEndingEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.FrameworkElement,System.Windows.Controls.DataGridEditAction)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridCellEditEndingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="column">イベントが発生したセルの列。</param>
      <param name="row">イベントが発生したセルの行。</param>
      <param name="editingElement">編集モードのセルに表示される要素。</param>
      <param name="editAction">編集が取り消されたかコミットされたかを示す値。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Cancel">
      <summary>イベントを取り消すかどうかを示す値を取得または設定します。</summary>
      <returns>イベントを取り消す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Column">
      <summary>イベントが発生したセルの列を取得します。</summary>
      <returns>イベントが発生したセルの列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditAction">
      <summary>編集が取り消されたかコミットされたかを示す値を取得します。</summary>
      <returns>編集が取り消されたかコミットされたかを示す値。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditingElement">
      <summary>編集モードのセルに表示される要素を取得します。</summary>
      <returns>編集モードのセルに表示される要素。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Row">
      <summary>イベントが発生したセルの行を取得します。</summary>
      <returns>イベントが発生したセルの行。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellInfo">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内の特定のセルに関する情報を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.#ctor(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>指定したデータ項目および列を使用して、<see cref="T:System.Windows.Controls.DataGridCellInfo" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="item">セルを含む行のデータ項目。</param>
      <param name="column">セルが含まれる列。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.#ctor(System.Windows.Controls.DataGridCell)">
      <summary>指定したセルの <see cref="T:System.Windows.Controls.DataGridCellInfo" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="cell">情報の生成対象となるセル。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellInfo.Column">
      <summary>セルを格納している列を取得します。</summary>
      <returns>セルが含まれる列。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.Equals(System.Object)">
      <summary>指定したオブジェクトが現在のインスタンスと等しいかどうかを示します。</summary>
      <param name="obj">現在のインスタンスと比較する対象のオブジェクト。</param>
      <returns>比較対象のオブジェクトが同じセルを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.GetHashCode">
      <summary>現在の <see cref="T:System.Windows.Controls.DataGridCellInfo" /> 構造体のハッシュ コードを返します。</summary>
      <returns>構造体のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellInfo.IsValid">
      <summary>構造体が有効な情報を保持しているかどうかを示す値を取得します。</summary>
      <returns>構造体が有効な情報を保持している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellInfo.Item">
      <summary>セルを含む行のデータ項目を取得します。</summary>
      <returns>セルを含む行のデータ項目。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.op_Equality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)">
      <summary>2 つの <see cref="T:System.Windows.Controls.DataGridCellInfo" /> インスタンスが等しいかどうかを示します。</summary>
      <param name="cell1">比較する最初の構造体。</param>
      <param name="cell2">2 番目に比較する構造体。</param>
      <returns>2 つの構造体が同じセルを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.op_Inequality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridCellInfo" /> の 2 つのインスタンスが等しくないかどうかを示します。</summary>
      <param name="cell1">比較する最初の構造体。</param>
      <param name="cell2">2 番目に比較する構造体。</param>
      <returns>2 つの構造体が同じセルを表していない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellsPanel">
      <summary>データ グリッド内にセルと列ヘッダーを配置するパネルを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridCellsPanel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride(System.Windows.Size)">
      <summary>パネルの最終サイズと配置を決定します。</summary>
      <param name="arrangeSize">パネルが占めることができる最大サイズ。</param>
      <returns>パネルの最終サイズと配置。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)">
      <summary>ビューポートを、指定したインデックスの位置にある項目までスクロールします。</summary>
      <param name="index">表示する項目のインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">インデックスが範囲外です。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.MeasureOverride(System.Windows.Size)">
      <summary>パネルの必要なサイズを決定します。</summary>
      <param name="constraint">パネルが占めることができる最大サイズ。</param>
      <returns>パネルの必要サイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内の子のコレクションが消去されると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <summary>
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> プロパティ値が変更されたことを示します。</summary>
      <param name="oldIsItemsHost">
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> プロパティの古い値。</param>
      <param name="newIsItemsHost">
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内の項目が変更されたときに、表示可能なセルを更新します。</summary>
      <param name="sender">
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントを発生させたオブジェクト。</param>
      <param name="args">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridCheckBoxColumn">
      <summary>セルの <see cref="T:System.Windows.Controls.DataGrid" /> コントロールをホストする <see cref="T:System.Windows.Controls.CheckBox" /> 列を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridCheckBoxColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.DefaultEditingElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> プロパティの既定値を取得します。</summary>
      <returns>スタイルを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.DefaultElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> プロパティの既定値を取得します。</summary>
      <returns>スタイルを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>列の <see cref="T:System.Windows.Controls.CheckBox" /> プロパティ値にバインドされた <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> コントロールを取得します。</summary>
      <param name="cell">生成された要素を格納するセル。</param>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>列の <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> プロパティ値にバインドされた新しいチェック ボックス コントロール。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>列の <see cref="T:System.Windows.Controls.CheckBox" /> プロパティ値にバインドされた読み取り専用の <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> コントロールを取得します。</summary>
      <param name="cell">生成された要素を格納するセル。</param>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>列の <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> プロパティ値にバインドされた新しい読み取り専用のチェック ボックス コントロール。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeState">
      <summary>ホストされる <see cref="T:System.Windows.Controls.CheckBox" /> コントロールで 3 つまたは 2 つの状態を表示できるかどうかを示す値を取得または設定します。</summary>
      <returns>ホストされるコントロールで 3 種類の状態がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeStateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeState" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>列内のセルが編集モードになるとき呼び出されます。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <param name="editingEventArgs">セルを編集モードにするユーザー ジェスチャに関する情報。</param>
      <returns>編集されていない値。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>列のプロパティ値の変更に応じて、列内のセルのコンテンツを更新します。</summary>
      <param name="element">更新するセル。</param>
      <param name="propertyName">変更された列プロパティの名前。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridClipboardCellContent">
      <summary>コンテンツをクリップボードへコピーするときに使用するために、<see cref="T:System.Windows.Controls.DataGrid" /> セルの値と場所をカプセル化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="item">コピーするセルを含む行のデータ項目。</param>
      <param name="column">コピーするセルが含まれる列。</param>
      <param name="content">コピーするセルのテキスト値。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Column">
      <summary>コピーするセルが含まれる列を取得します。</summary>
      <returns>コピーするセルが含まれる列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Content">
      <summary>コピーするセルのテキスト値を取得します。</summary>
      <returns>コピーするセルのテキスト値。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.Equals(System.Object)">
      <summary>現在の <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンスと指定したインスタンスが等しいかどうかを示します。</summary>
      <param name="data">現在の <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンスと比較する <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンス。</param>
      <returns>現在の <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンスと指定したインスタンスの <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Item" />、<see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Column" />、<see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Content" /> の各プロパティ値が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.GetHashCode">
      <summary>この <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンスのハッシュ コードを返します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンスのハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Item">
      <summary>コピーするセルを含む行のデータ項目を取得します。</summary>
      <returns>コピーするセルを含む行のデータ項目。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.op_Equality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)">
      <summary>指定した <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンスどうしが等しいかどうかを示します。</summary>
      <param name="clipboardCellContent1">比較される最初の <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンス。</param>
      <param name="clipboardCellContent2">比較される 2 番目の <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンス。</param>
      <returns>指定した各 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンスの <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Item" />、<see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Column" />、<see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Content" /> の各プロパティ値が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.op_Inequality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)">
      <summary>指定した <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンスどうしが等しくないかどうかを示します。</summary>
      <param name="clipboardCellContent1">比較される最初の <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンス。</param>
      <param name="clipboardCellContent2">比較される 2 番目の <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンス。</param>
      <returns>現在の <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> インスタンスと指定したインスタンスの <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Item" />、<see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Column" />、<see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Content" /> の各プロパティ値が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridClipboardCopyMode">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.DataGrid" /> コントロールのデータをクリップボードにコピーできるかどうか、およびコピー時に列ヘッダー値が含まれるかどうかを指定する定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.ExcludeHeader">
      <summary>ユーザーは選択したセルのテキスト値をクリップボードへコピーできます。列ヘッダー値は含まれません。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.IncludeHeader">
      <summary>ユーザーは選択したセルのテキスト値をクリップボードへコピーできます。列ヘッダー値も含まれます。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.None">
      <summary>クリップボードのサポートは無効になります。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumn">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 列を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.ActualWidth">
      <summary>列の現在の幅を デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位で取得します。</summary>
      <returns>列の幅 (デバイスに依存しない単位 (1 単位は 1/96 インチ))。 登録済みの既定値は0です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.ActualWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.ActualWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>編集中のセルの値を、元 (編集前) の値に戻します。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <param name="uneditedValue">編集中のセルの編集前の値。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserReorder">
      <summary>ユーザーが列見出しをドラッグして列の表示位置を変更できるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが列ヘッダーを別の位置にドラッグできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="true" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CanUserReorderProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.CanUserReorder" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserResize">
      <summary>ユーザーがマウスを使用して列幅を調整できるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが列のサイズを変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="true" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CanUserResizeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.CanUserResize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserSort">
      <summary>ユーザーが列見出しをクリックして項目を並べ替えられるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが列を並べ替えることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="true" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CanUserSortProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.CanUserSort" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CellStyle">
      <summary>列に含まれるセルを表示するときに使用するスタイルを取得または設定します。</summary>
      <returns>列に含まれるセルを表示するために使用するスタイル。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CellStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.CellStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.ClipboardContentBinding">
      <summary>クリップボードのセルの内容を取得または設定するときに使用するバインディング オブジェクトを取得または設定します。</summary>
      <returns>バインディングを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>セル編集モードを終了する前に、必要な検証を実行します。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <returns>検証エラーが検出される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent">
      <summary>セルのクリップボードの内容が準備された後に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DataGridOwner">
      <summary>この列を格納している <see cref="T:System.Windows.Controls.DataGrid" /> コントロールを取得します。</summary>
      <returns>この列を格納している <see cref="T:System.Windows.Controls.DataGrid" /> コントロール。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DisplayIndex">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内の他の列を基準とした列の表示位置を設定または取得します。</summary>
      <returns>列が、関連付けられた <see cref="T:System.Windows.Controls.DataGrid" /> に表示されるときの 0 から始まる位置。 登録済みの既定値は-1 です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.DisplayIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DragIndicatorStyle">
      <summary>ドラッグ操作中に列ヘッダーに適用するスタイル オブジェクトを取得または設定します。</summary>
      <returns>ドラッグ操作中に列ヘッダーに適用するスタイル オブジェクト。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.DragIndicatorStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.DragIndicatorStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>派生クラスでオーバーライドされた場合、列の <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> プロパティの値にバインドされる編集要素を取得します。</summary>
      <param name="cell">生成された要素を格納するセル。</param>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>列の <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> プロパティ値にバインドされた新しい編集要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>派生クラスでオーバーライドされた場合、列の <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> プロパティの値にバインドされる読み取り専用要素を取得します。</summary>
      <param name="cell">生成された要素を格納するセル。</param>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>列の <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> プロパティ値にバインドされた新しい読み取り専用要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GetCellContent(System.Object)">
      <summary>この列と指定されたデータ項目を表す行の交差位置にあるセルの <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティ値を取得します。</summary>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>セルの内容。セルが見つからない場合は <see langword="null" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataItem" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GetCellContent(System.Windows.Controls.DataGridRow)">
      <summary>この列と指定された行の交差位置にあるセルの <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティ値を取得します。</summary>
      <param name="dataGridRow">目的のセルを格納している行。</param>
      <returns>セルの内容。セルが見つからない場合は <see langword="null" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataGridRow" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Header">
      <summary>列見出しのコンテンツを取得または設定します。</summary>
      <returns>列ヘッダーの内容。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderStringFormat">
      <summary>列ヘッダーの内容に適用される書式パターンを取得または設定します。</summary>
      <returns>書式指定パターンを表す文字列値。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderStringFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.HeaderStringFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderStyle">
      <summary>列ヘッダーの描画に使用されるスタイルを取得または設定します。</summary>
      <returns>列ヘッダーを表示するときに使用するスタイル。<see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> 設定を使用する場合は <see langword="null" />。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.HeaderStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderTemplate">
      <summary>列ヘッダーの視覚表示を定義するテンプレートを取得または設定します。</summary>
      <returns>列ヘッダーの視覚的表現を定義するオブジェクト。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.HeaderTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderTemplateSelector">
      <summary>列ヘッダーに使用するテンプレートを選択するオブジェクトを取得または設定します。</summary>
      <returns>テンプレートを選択するオブジェクト。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.HeaderTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsAutoGenerated">
      <summary>列が自動生成されるかどうかを示す値を取得します。</summary>
      <returns>列が自動生成される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.IsAutoGeneratedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.IsAutoGenerated" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsFrozen">
      <summary>列の水平方向のスクロールが禁止されているかどうかを示す値を取得します。</summary>
      <returns>列を水平方向にスクロールできない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.IsFrozenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.IsFrozen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsReadOnly">
      <summary>列のセルが編集可能かどうかを示す値を取得または設定します。</summary>
      <returns>列内のセルを編集できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.MaxWidth">
      <summary>列の幅の上限を取得または設定します。</summary>
      <returns>最大列幅 (デバイスに依存しない単位 (1 単位は 1/96 インチ)単位)。 登録済みの既定値は <see cref="F:System.Double.PositiveInfinity" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.MaxWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.MaxWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.MinWidth">
      <summary>列の幅の下限を取得または設定します。</summary>
      <returns>最小列幅 (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 登録済みの既定値は20です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.MinWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.MinWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.NotifyPropertyChanged(System.String)">
      <summary>この列を含んでいる <see cref="T:System.Windows.Controls.DataGrid" /> に、列プロパティが変更されたことを通知します。</summary>
      <param name="propertyName">変更された列プロパティの名前。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.OnCoerceIsReadOnly(System.Boolean)">
      <summary>この列を格納する <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> のプロパティ規則に基づいて <see cref="T:System.Windows.Controls.DataGrid" /> プロパティの値を決定します。</summary>
      <param name="baseValue">デリゲートに渡された値。</param>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> の規則に基づいて列に含まれるセルを編集できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.OnCopyingCellClipboardContent(System.Object)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent" /> イベントを発生させます。</summary>
      <param name="item">選択されている要素のデータ コンテキスト。</param>
      <returns>セルの内容を表すオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.OnPastingCellClipboardContent(System.Object,System.Object)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent" /> イベントを発生させます。</summary>
      <param name="item">選択されている要素のデータ コンテキスト。</param>
      <param name="cellContent">セルに貼り付ける内容。</param>
    </member>
    <member name="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent">
      <summary>クリップボードの内容がセルに移動される前に発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>派生クラスでオーバーライドされた場合、編集の必要に応じてセルの内容を設定します。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <param name="editingEventArgs">セルを編集モードにするユーザー ジェスチャに関する情報。</param>
      <returns>派生クラスから返されるときは、編集前のセルの値。 この実装は常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>派生クラスでオーバーライドされた場合、列のプロパティ値の変更に応じて、列内のセルの内容を更新します。</summary>
      <param name="element">更新するセル。</param>
      <param name="propertyName">変更された列プロパティの名前。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.SortDirection">
      <summary>列の並べ替え方向 (昇順または降順) を取得または設定します。</summary>
      <returns>並べ替えの方向を表す値。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.SortDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.SortDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.SortMemberPath">
      <summary>メンバーの並べ替えの基準にするプロパティ名、または階層をピリオドで区切ったプロパティ名を取得または設定します。</summary>
      <returns>並べ替えるデータ項目メンバーのパス。 登録済みの既定値は空の文字列 ("") です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.SortMemberPathProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.SortMemberPath" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Visibility">
      <summary>列の可視性を取得または設定します。</summary>
      <returns>列の可視性を指定する列挙値。 登録済みの既定値は <see cref="F:System.Windows.Visibility.Visible" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.VisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.Visibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Width">
      <summary>列の幅または自動サイズ調整モードを取得または設定します。</summary>
      <returns>列幅または自動サイズ変更モードを表す構造体。 登録済みの既定値は <see cref="P:System.Windows.Controls.DataGridLength.Auto" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.WidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridColumn.Width" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumnEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" /> イベントおよび <see cref="E:System.Windows.Controls.DataGrid.ColumnReordered" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumnEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridColumnEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="column">イベントに関連する列。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnEventArgs.Column">
      <summary>イベントに関連する列を取得します。</summary>
      <returns>イベントに関連する列を表すオブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumnReorderingEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.ColumnReordering" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumnReorderingEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridColumnReorderingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataGridColumn">移動中の列。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.Cancel">
      <summary>並べ替え操作が完了前に停止されたかどうかを示す値を取得または設定します。</summary>
      <returns>並べ替え操作が完了前に停止された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.DragIndicator">
      <summary>ドラッグ中の列ヘッダーのビジュアル インジケーターを表示するために使用するコントロールを取得または設定します。</summary>
      <returns>ドラッグ中の列ヘッダーを表示するために使用するコントロール。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.DropLocationIndicator">
      <summary>列のドラッグ操作中に現在のドロップ位置のビジュアル インジケーターを表示するために使用するコントロールを取得または設定します。</summary>
      <returns>列のドラッグ操作中にドロップ位置のインジケーターを表示するために使用するコントロール。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridComboBoxColumn">
      <summary>セルの <see cref="T:System.Windows.Controls.DataGrid" /> コントロールをホストする <see cref="T:System.Windows.Controls.ComboBox" /> 列を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridComboBoxColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>列の編集中のセルの値を、指定した値に戻します。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <param name="uneditedValue">編集中のセルの編集前の値。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.ClipboardContentBinding">
      <summary>クリップボードのセルの内容を取得または設定するときに使用するバインディング オブジェクトを取得または設定します。</summary>
      <returns>バインディングを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>編集モードを終了する前に、必要な検証を実行します。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <returns>検証が失敗した場合は <see langword="false" />。それ以外の場合は <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.DefaultEditingElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" /> プロパティの既定値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" /> の既定値。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.DefaultElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" /> の既定値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" /> の既定値。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPath">
      <summary>オブジェクトを視覚的に表現するために使用される、ソース オブジェクト上の値へのパスを取得または設定します。</summary>
      <returns>ソース オブジェクトの値へのパス。 登録済みの既定値は空の文字列 ("") です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPathProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPath" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle">
      <summary>編集モードのセルに列で表示される要素のレンダリングに使用するスタイルを取得または設定します。</summary>
      <returns>編集する要素のレンダリングに使用するスタイル。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle">
      <summary>編集モードではないセルに列で表示される要素のレンダリングに使用するスタイルを取得または設定します。</summary>
      <returns>表示するだけの要素のレンダリングに使用するスタイル。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.ElementStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>列の <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />、<see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />、および <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> の各値にバインドされたコンボ ボックス コントロールを取得します。</summary>
      <param name="cell">生成された要素を格納するセル。</param>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>列の <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />、<see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />、および <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> の各値にバインドされた新しいコンボ ボックス コントロール。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>列の <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />、<see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />、および <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> の各値にバインドされた読み取り専用のコンボ ボックス コントロールを取得します。</summary>
      <param name="cell">生成された要素を格納するセル。</param>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>列の <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />、<see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />、および <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> の各値にバインドされた新しい読み取り専用のコンボ ボックス コントロール。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.ItemsSource">
      <summary>コンボ ボックス コントロールのコンテンツの生成に使用するコレクションを取得または設定します。</summary>
      <returns>コンボ ボックス コントロールのコンテンツの生成に使用されるコレクション。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.ItemsSourceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ItemsSource" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnCoerceIsReadOnly(System.Boolean)">
      <summary>この列を格納する <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> のプロパティ規則に基づいて <see cref="T:System.Windows.Controls.DataGrid" /> プロパティの値を決定します。</summary>
      <param name="baseValue">デリゲートに渡された値。</param>
      <returns>列内のコンボ ボックスを編集できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnSelectedItemBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> プロパティが変更されたときに <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" /> に通知します。</summary>
      <param name="oldBinding">前のバインディング。</param>
      <param name="newBinding">列が変更された後のバインディング。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnSelectedValueBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> プロパティが変更されたときに <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" /> に通知します。</summary>
      <param name="oldBinding">前のバインディング。</param>
      <param name="newBinding">列が変更された後のバインディング。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnTextBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> プロパティが変更されたときに <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> に通知します。</summary>
      <param name="oldBinding">前のバインディング。</param>
      <param name="newBinding">列が変更された後のバインディング。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>列内のセルが編集モードになるとき呼び出されます。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <param name="editingEventArgs">セルを編集モードにするユーザー ジェスチャに関する情報。</param>
      <returns>編集されていない値。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>バインディングの変更に応じて、列内のセルのコンテンツを更新します。</summary>
      <param name="element">更新するセル。</param>
      <param name="propertyName">変更された列プロパティの名前。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding">
      <summary>選択中の項目のバインディングを取得または設定します。</summary>
      <returns>選択されている項目のバインディング。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath" /> を使用して取得される、選択されている項目の値を取得または設定します。</summary>
      <returns>選択されている値のバインディング。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> から <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> を取得するために使用するパスを取得または設定します。</summary>
      <returns>選択されている値を取得するためのパス。 登録済みの既定値は空の文字列 ("") です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePathProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBox" /> コントロールのテキスト ボックス部分のテキストのバインディングを取得または設定します。</summary>
      <returns>現在選択されている項目のテキストのバインディング。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.TextBlockComboBoxStyleKey">
      <summary>読み取り専用のコンボ ボックスに適用するスタイルのリソース キーを取得します。</summary>
      <returns>スタイルのキー。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridEditAction">
      <summary>編集が取り消されるかコミットされるかを指定する定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditAction.Cancel">
      <summary>編集が取り消されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditAction.Commit">
      <summary>編集がコミットされます。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridEditingUnit">
      <summary>編集をセル レベルと行レベルのどちらで有効にするかを指定する定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditingUnit.Cell">
      <summary>セルの編集が有効になります。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditingUnit.Row">
      <summary>行の編集が有効になります。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridGridLinesVisibility">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> のグリッド線の可視性を指定する定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.All">
      <summary>水平グリッド線と垂直グリッド線の両方が表示されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.Horizontal">
      <summary>水平グリッド線だけが表示されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.None">
      <summary>グリッド線は表示されません。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.Vertical">
      <summary>垂直グリッド線だけが表示されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridHeadersVisibility">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> の行ヘッダーと列ヘッダーの可視性を指定する定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.All">
      <summary>行ヘッダーと列ヘッダーの両方が表示されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.Column">
      <summary>列ヘッダーのみが表示されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.None">
      <summary>ヘッダーは表示されません。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.Row">
      <summary>行ヘッダーのみが表示されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridHyperlinkColumn">
      <summary>セルの <see cref="T:System.Windows.Controls.DataGrid" /> 要素をホストする <see cref="T:System.Uri" /> 列を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridHyperlinkColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>列の編集中のセルの値を、指定した値に戻します。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <param name="uneditedValue">編集中のセルの編集前の値。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>編集モードを終了する前に、必要な検証を実行します。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <returns>検証が失敗した場合は <see langword="false" />。それ以外の場合は <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding">
      <summary>ハイパーリンクのテキストへのバインディングを取得または設定します。</summary>
      <returns>ハイパーリンクのテキストへのバインディング。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.DefaultEditingElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> プロパティの既定値。</summary>
      <returns>スタイルを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.DefaultElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> プロパティの既定値。</summary>
      <returns>スタイルを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>列の <see cref="T:System.Windows.Controls.TextBox" /> プロパティ値にバインドされた編集可能な <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> 要素を取得します。</summary>
      <param name="cell">生成された要素を格納するセル。</param>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>列の <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> プロパティ値にバインドされた新しいテキスト ボックス コントロール。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>列の <see cref="T:System.Windows.Documents.Hyperlink" /> プロパティ値にバインドされた読み取り専用の <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> 要素を取得します。</summary>
      <param name="cell">生成された要素を格納するセル。</param>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>列の <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> プロパティ値にバインドされた新しい読み取り専用のハイパーリンク要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.OnContentBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> プロパティが変更されたときに <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> に通知します。</summary>
      <param name="oldBinding">前のバインディング。</param>
      <param name="newBinding">列が変更された後のバインディング。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>列内のセルが編集モードになるとき呼び出されます。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <param name="editingEventArgs">セルを編集モードにするユーザー ジェスチャに関する情報。</param>
      <returns>セルの編集前の値。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>列のプロパティ値の変更に応じて、列内のセルのコンテンツを更新します。</summary>
      <param name="element">更新するセル。</param>
      <param name="propertyName">変更された列プロパティの名前。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.TargetName">
      <summary>ハイパーリンクの対象となるウィンドウまたはフレームの名前を取得または設定します。</summary>
      <returns>対象となるウィンドウまたはフレームの名前。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridHyperlinkColumn.TargetNameProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.TargetName" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridLength">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> コントロール内の要素の長さを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double)">
      <summary>ピクセル単位の絶対値を使用して、<see cref="T:System.Windows.Controls.DataGridLength" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pixels">初期化する長さを示す絶対ピクセル値 (96 ピクセル/インチ)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pixels" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、または <see cref="F:System.Double.PositiveInfinity" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType)">
      <summary>指定した値と単位を使用して、<see cref="T:System.Windows.Controls.DataGridLength" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">要求した要素のサイズ。</param>
      <param name="type">要素のサイズの計算方法を決定するために使用する型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、または <see cref="F:System.Double.PositiveInfinity" /> です。
または
<paramref name="type" /> が <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />、<see cref="F:System.Windows.Controls.DataGridLengthUnitType.Pixel" />、<see cref="F:System.Windows.Controls.DataGridLengthUnitType.Star" />、<see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells" />、または <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader" /> ではありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType,System.Double,System.Double)">
      <summary>値、単位、必要な値、および表示値を指定して、<see cref="T:System.Windows.Controls.DataGridLength" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">要求した要素のサイズ。</param>
      <param name="type">要素のサイズの計算方法を決定するために使用する型。</param>
      <param name="desiredValue">要素に必要な計算されたサイズ。</param>
      <param name="displayValue">要素の割り当てられたサイズ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、または <see cref="F:System.Double.PositiveInfinity" /> です。

または -
<paramref name="type" /> が <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />、<see cref="F:System.Windows.Controls.DataGridLengthUnitType.Pixel" />、<see cref="F:System.Windows.Controls.DataGridLengthUnitType.Star" />、<see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells" />、または <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader" /> ではありません。

または -
<paramref name="desiredValue" /> が <see cref="F:System.Double.NegativeInfinity" /> または <see cref="F:System.Double.PositiveInfinity" /> です。

または -
<paramref name="displayValue" /> が <see cref="F:System.Double.NegativeInfinity" /> または <see cref="F:System.Double.PositiveInfinity" /> です。</exception>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.Auto">
      <summary>標準の自動サイズ変更モードを表す <see cref="T:System.Windows.Controls.DataGridLength" /> 構造体を取得します。</summary>
      <returns>標準の自動サイズ変更モードを表す <see cref="T:System.Windows.Controls.DataGridLength" /> 構造体。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.DesiredValue">
      <summary>要素に必要な計算されたピクセル値を取得します。</summary>
      <returns>要素のサイズに対して計算されたピクセル数。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.DisplayValue">
      <summary>要素のサイズに割り当てられたピクセル値を取得します。</summary>
      <returns>要素に割り当てられたピクセル数。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.Equals(System.Object)">
      <summary>指定したオブジェクトが、現在の <see cref="T:System.Windows.Controls.DataGridLength" /> と等しいかどうかを判断します。</summary>
      <param name="obj">現在のインスタンスと比較する対象のオブジェクト。</param>
      <returns>指定したオブジェクトが、現在の <see cref="T:System.Windows.Controls.DataGridLength" /> と同じ値を持つ、またはサイズ変更モードの <see cref="T:System.Windows.Controls.DataGridLength" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.Equals(System.Windows.Controls.DataGridLength)">
      <summary>指定した <see cref="T:System.Windows.Controls.DataGridLength" /> が現在の <see cref="T:System.Windows.Controls.DataGridLength" /> と等しいかどうかを示します。</summary>
      <param name="other">現在のインスタンスと比較する対象の <see cref="T:System.Windows.Controls.DataGridLength" />。</param>
      <returns>指定したオブジェクトが、現在の <see cref="T:System.Windows.Controls.DataGridLength" /> と同じ値を持つ、またはサイズ変更モードの <see cref="T:System.Windows.Controls.DataGridLength" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.GetHashCode">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridLength" /> のハッシュ コードを取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.Controls.DataGridLength" /> のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsAbsolute">
      <summary>このインスタンスが固定ピクセル値に基づいて要素のサイズを設定するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> プロパティが <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Pixel" /> に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsAuto">
      <summary>このインスタンスが、セルの内容と列ヘッダーの両方に基づいて要素のサイズを自動的に設定するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> プロパティが <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" /> に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsSizeToCells">
      <summary>このインスタンスが、セルの内容に基づいて要素のサイズを自動的に設定するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> プロパティが <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells" /> に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsSizeToHeader">
      <summary>このインスタンスが、ヘッダーに基づいて要素のサイズを自動的に設定するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> プロパティが <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader" /> に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsStar">
      <summary>このインスタンスが、使用可能なスペースの加重比率に基づいて要素のサイズを自動的に設定するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> プロパティが <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Star" /> に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Equality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)">
      <summary>2 つの <see cref="T:System.Windows.Controls.DataGridLength" /> 構造体を比較して、等しいかどうかを確認します。</summary>
      <param name="gl1">比較する一方の <see cref="T:System.Windows.Controls.DataGridLength" /> インスタンス。</param>
      <param name="gl2">比較するもう一方の <see cref="T:System.Windows.Controls.DataGridLength" /> インスタンス。</param>
      <returns>2 つの <see cref="T:System.Windows.Controls.DataGridLength" /> インスタンスが同じ値または同じサイズ変更モードである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Implicit(System.Double)~System.Windows.Controls.DataGridLength">
      <summary>
        <see cref="T:System.Double" /> を <see cref="T:System.Windows.Controls.DataGridLength" /> クラスのインスタンスに変換します。</summary>
      <param name="value">初期化する長さを示す絶対ピクセル値 (96 ピクセル/インチ)。</param>
      <returns>指定した長さを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Inequality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)">
      <summary>2 つの <see cref="T:System.Windows.Controls.DataGridLength" /> 構造体を比較し、それらの構造体が等しくないかどうかを判断します。</summary>
      <param name="gl1">比較する一方の <see cref="T:System.Windows.Controls.DataGridLength" /> インスタンス。</param>
      <param name="gl2">比較するもう一方の <see cref="T:System.Windows.Controls.DataGridLength" /> インスタンス。</param>
      <returns>2 つの <see cref="T:System.Windows.Controls.DataGridLength" /> インスタンスが同じ値でもサイズ変更モードでもない場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.SizeToCells">
      <summary>セル ベースの自動サイズ変更モードを表す <see cref="T:System.Windows.Controls.DataGridLength" /> 構造体を取得します。</summary>
      <returns>セル ベースの自動サイズ変更モードを表す <see cref="T:System.Windows.Controls.DataGridLength" /> 構造体。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.SizeToHeader">
      <summary>ヘッダー ベースの自動サイズ変更モードを表す <see cref="T:System.Windows.Controls.DataGridLength" /> 構造体を取得します。</summary>
      <returns>ヘッダー ベースの自動サイズ変更モードを表す <see cref="T:System.Windows.Controls.DataGridLength" /> 構造体。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.ToString">
      <summary>現在のオブジェクトを表す文字列を返します。</summary>
      <returns>現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.UnitType">
      <summary>要素のサイズの計算方法を決定するために使用する型を取得します。</summary>
      <returns>サイズの決定方法を表す型。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.Value">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridLength" /> のピクセル単位の絶対値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGridLength" /> のピクセル単位の絶対値。<see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> プロパティが <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" /> に設定されている場合は 1.0。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridLengthConverter">
      <summary>さまざまな型のインスタンスと <see cref="T:System.Windows.Controls.DataGridLength" /> クラスのインスタンスの間で変換を行います。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridLengthConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定した型のインスタンスを <see cref="T:System.Windows.Controls.DataGridLength" /> クラスのインスタンスに変換できるかどうかを判断します。</summary>
      <param name="context">書式指定コンテキストを提供するオブジェクト。</param>
      <param name="sourceType">変換前の型。</param>
      <returns>コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridLength" /> クラスのインスタンスを、指定した型のインスタンスに変換できるかどうかを判断します。</summary>
      <param name="context">書式指定コンテキストを提供するオブジェクト。</param>
      <param name="destinationType">変換後の型。</param>
      <returns>コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したオブジェクトを <see cref="T:System.Windows.Controls.DataGridLength" /> クラスのインスタンスに変換します。</summary>
      <param name="context">書式指定コンテキストを提供するオブジェクト。</param>
      <param name="culture">現在のカルチャとして使用するオブジェクト。</param>
      <param name="value">変換する値。</param>
      <returns>変換された値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> は、<see cref="T:System.Windows.Controls.DataGridLength" /> 型に変換できる有効な型ではありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridLength" /> クラスのインスタンスを、指定した型のインスタンスに変換します。</summary>
      <param name="context">書式指定コンテキストを提供するオブジェクト。</param>
      <param name="culture">現在のカルチャとして使用するオブジェクト。</param>
      <param name="value">変換対象の <see cref="T:System.Windows.Controls.DataGridLength" />。</param>
      <param name="destinationType">値を変換した後の型。</param>
      <returns>変換された値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が <see cref="T:System.Windows.Controls.DataGridLength" /> でないか、<paramref name="destinationType" /> が有効な変換型ではありません。</exception>
    </member>
    <member name="T:System.Windows.Controls.DataGridLengthUnitType">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内の要素のサイズを設定する方法を指定する定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Auto">
      <summary>サイズは、セルと列ヘッダーの両方の内容に基づきます。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Pixel">
      <summary>サイズは、ピクセルで表される固定値です。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells">
      <summary>サイズは、セルの内容に基づきます。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader">
      <summary>サイズは、列ヘッダーの内容に基づきます。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Star">
      <summary>サイズは、使用可能なスペースの加重比率です。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridPreparingCellForEditEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.RoutedEventArgs,System.Windows.FrameworkElement)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridPreparingCellForEditEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="column">編集するセルが含まれる列。</param>
      <param name="row">編集するセルが含まれる行。</param>
      <param name="editingEventArgs">セルを編集モードにしたユーザー ジェスチャに関する情報。</param>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.Column">
      <summary>編集するセルが含まれる列を取得します。</summary>
      <returns>編集するセルが含まれる列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.EditingElement">
      <summary>編集モードのセルに列で表示される要素を取得します。</summary>
      <returns>編集モードのセルに列で表示される要素。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.EditingEventArgs">
      <summary>セルを編集モードにしたユーザー ジェスチャに関する情報を取得します。</summary>
      <returns>セルを編集モードにしたユーザー ジェスチャに関する情報。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.Row">
      <summary>編集するセルが含まれる行を取得します。</summary>
      <returns>編集するセルが含まれる行。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRow">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 行を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridRow" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.AlternationIndex">
      <summary>交互の行のセット内での行のインデックスを取得します。</summary>
      <returns>交互の行のセット内での行のインデックス。 登録済みの既定値は0です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.AlternationIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.AlternationIndex" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.ArrangeOverride(System.Windows.Size)">
      <summary>行のコンテンツを配置します。</summary>
      <param name="arrangeBounds">行で使用できる領域。</param>
      <returns>行が使用する実際の領域。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsTemplate">
      <summary>行の詳細セクションを表示するために使用するテンプレートを取得または設定します。</summary>
      <returns>行の詳細セクションを表示するために使用するテンプレート。<see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> 設定を使用する場合は <see langword="null" />。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsTemplateSelector">
      <summary>行の詳細のテンプレートを選択するためのカスタム ロジックを提供する、テンプレート セレクターを取得または設定します。</summary>
      <returns>行の詳細のテンプレートを選択するためのテンプレート セレクター。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsVisibility">
      <summary>行の詳細セクションを表示するかどうかを示す値を取得または設定します。</summary>
      <returns>行の詳細を表示するかどうかを指定する値。 登録済みの既定値は <see cref="F:System.Windows.Visibility.Collapsed" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.GetIndex">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.Items" /> の <see cref="T:System.Windows.Controls.DataGrid" /> コレクション内の行のデータ項目のインデックスを返します。</summary>
      <returns>行のデータ項目のインデックス。項目が見つからない場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.GetRowContainingElement(System.Windows.FrameworkElement)">
      <summary>指定された要素を格納する <see cref="T:System.Windows.Controls.DataGridRow" /> を返します。</summary>
      <param name="element">検索対象の行に格納されている要素。</param>
      <returns>指定された要素を格納する <see cref="T:System.Windows.Controls.DataGridRow" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.Header">
      <summary>行ヘッダーのコンテンツを表すオブジェクトを取得または設定します。</summary>
      <returns>行ヘッダーのコンテンツ。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.Header" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderStyle">
      <summary>行ヘッダーを表示するときに使用するスタイルを取得または設定します。</summary>
      <returns>行ヘッダーを表示するときに使用するスタイル。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.HeaderStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderTemplate">
      <summary>行ヘッダーを表示するために使用するテンプレートを取得または設定します。</summary>
      <returns>行ヘッダーを表示するために使用するテンプレート。<see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplate" /> 設定を使用する場合は <see langword="null" />。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.HeaderTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderTemplateSelector">
      <summary>行ヘッダーのテンプレートを選択するためのカスタム ロジックを提供する、テンプレート セレクターを取得または設定します。</summary>
      <returns>行ヘッダーのテンプレートを選択するためのテンプレート セレクター。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.HeaderTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsEditing">
      <summary>行が編集モードであるかどうかを示す値を取得します。</summary>
      <returns>行が編集モードである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsEditingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.IsEditing" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsNewItem">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridRow" /> が新しい項目またはまだコミットされていない項目のプレースホルダーかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGridRow" /> が新しい項目またはまだコミットされていない項目のプレースホルダーの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsNewItemProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.IsNewItem" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsSelected">
      <summary>行が選択されているかどうかを示す値を取得または設定します。</summary>
      <returns>行が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsSelectedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.Item">
      <summary>行が表すデータ項目を取得または設定します。</summary>
      <returns>行が表すデータ項目。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.ItemProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.Item" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.ItemsPanel">
      <summary>行のセルのレイアウトを制御するパネルを定義するテンプレートを取得または設定します。</summary>
      <returns>行のセルのレイアウトに使用するパネルを定義するテンプレート。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.ItemsPanelProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.ItemsPanel" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnColumnsChanged(System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.DataGridColumn},System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.Columns" /> コレクションが変更されたときに、表示されているセルを更新するために呼び出されます。</summary>
      <param name="columns">
        <see cref="P:System.Windows.Controls.DataGrid.Columns" /> のコレクション。</param>
      <param name="e">
        <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> コレクションの <see cref="P:System.Windows.Controls.DataGrid.Columns" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnCreateAutomationPeer">
      <summary>この行の新しい <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" /> を返します。</summary>
      <returns>この行の新しいオートメーション ピア。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnHeaderChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.Header" /> プロパティの値が変更されたときに呼び出されます。</summary>
      <param name="oldHeader">
        <see cref="P:System.Windows.Controls.DataGridRow.Header" /> プロパティの以前の値。</param>
      <param name="newHeader">
        <see cref="P:System.Windows.Controls.DataGridRow.Header" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnItemChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.Item" /> プロパティ値が変更されたときに、表示されているセルを更新します。</summary>
      <param name="oldItem">
        <see cref="P:System.Windows.Controls.DataGridRow.Item" /> プロパティの以前の値。</param>
      <param name="newItem">
        <see cref="P:System.Windows.Controls.DataGridRow.Item" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.Controls.DataGridRow" /> の依存関係プロパティの有効値が更新された場合に必ず呼び出されます。</summary>
      <param name="e">変更されたプロパティと、新旧の値を記述するイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGridRow.Selected" /> プロパティの値が <see langword="true" /> に変更された場合に <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> イベントを発生させます。</summary>
      <param name="e">イベント データ。このメソッドが <see cref="T:System.Windows.Controls.DataGridRow" /> によって呼び出された場合は空になります。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>コントロールのテンプレートが変更されるたびに呼び出されます。</summary>
      <param name="oldTemplate">古いテンプレート。</param>
      <param name="newTemplate">新しいテンプレート。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DataGridRow.Unselected" /> プロパティの値が <see langword="false" /> に変更された場合に <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> イベントを発生させます。</summary>
      <param name="e">イベント データ。このメソッドが <see cref="T:System.Windows.Controls.DataGridRow" /> によって呼び出された場合は空になります。</param>
    </member>
    <member name="E:System.Windows.Controls.DataGridRow.Selected">
      <summary>行が選択されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.SelectedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.DataGridRow.Selected" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGridRow.Unselected">
      <summary>行の選択が解除されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.UnselectedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.DataGridRow.Unselected" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.ValidationErrorTemplate">
      <summary>行の検証のエラーを視覚的に示すテンプレートを取得または設定します。</summary>
      <returns>行の検証で発生したエラーを視覚的に示すために使用するテンプレート。<see cref="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate" /> 設定を使用する場合は <see langword="null" />。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.ValidationErrorTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridRow.ValidationErrorTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowClipboardEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowClipboardEventArgs.#ctor(System.Object,System.Int32,System.Int32,System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridRowClipboardEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="item">イベントが発生した行のデータ項目。</param>
      <param name="startColumnDisplayIndex">行で選択されている最初のセルを含む列の <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 値。</param>
      <param name="endColumnDisplayIndex">行で選択されている最後のセルを含む列の <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 値。</param>
      <param name="isColumnHeadersRow">イベントが発生した行が列ヘッダーを表すかどうかを示す値。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent">
      <summary>コピーされるセルのテキスト値を表す <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 値のリストを取得します。</summary>
      <returns>コピーされるセルのテキスト値を表す <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 値のリスト。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.EndColumnDisplayIndex">
      <summary>行で選択されている最後のセルを含む列の <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 値を取得します。</summary>
      <returns>行で選択されている最後のセルを含む列の <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 値。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowClipboardEventArgs.FormatClipboardCellValues(System.String)">
      <summary>指定された形式の文字列で <see cref="P:System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent" /> 値を返します。</summary>
      <param name="format">セルの値をシリアル化するデータ形式。</param>
      <returns>書式設定された文字列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow">
      <summary>イベントが発生した行が列ヘッダーを表すかどうかを示す値を取得します。</summary>
      <returns>行が列ヘッダーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.Item">
      <summary>イベントが発生した行のデータ項目を取得します。</summary>
      <returns>イベントが発生した行のデータ項目。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.StartColumnDisplayIndex">
      <summary>行で選択されている最初のセルを含む列の <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 値を取得します。</summary>
      <returns>行で選択されている最初のセルを含む列の <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 値。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowDetailsEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.LoadingRowDetails" />、<see cref="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" />、<see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> の各イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowDetailsEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.FrameworkElement)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridRowDetailsEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="row">イベントが発生した行。</param>
      <param name="detailsElement">フレームワーク要素としての行の詳細セクション。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowDetailsEventArgs.DetailsElement">
      <summary>フレームワーク要素としての行の詳細セクションを取得します。</summary>
      <returns>フレームワーク要素としての行の詳細セクション。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowDetailsEventArgs.Row">
      <summary>イベントが発生した行を取得します。</summary>
      <returns>イベントが発生した行。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowDetailsVisibilityMode">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> の行の詳細を表示するかどうかを指定する定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.Collapsed">
      <summary>すべての行の詳細セクションを非表示にします。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.Visible">
      <summary>すべての行の詳細セクションを表示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected">
      <summary>選択されている行の詳細セクションだけを表示します。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowEditEndingEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.RowEditEnding" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowEditEndingEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.Controls.DataGridEditAction)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridRowEditEndingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="row">イベントが発生した行。</param>
      <param name="editAction">編集が取り消されたかコミットされたかを示す値。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.Cancel">
      <summary>イベントを取り消すかどうかを示す値を取得または設定します。</summary>
      <returns>イベントを取り消す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.EditAction">
      <summary>編集が取り消されたかコミットされたかを示す値を取得します。</summary>
      <returns>編集が取り消されたかコミットされたかを示す値。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.Row">
      <summary>イベントが発生した行を取得します。</summary>
      <returns>イベントが発生した行。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.LoadingRow" /> イベントおよび <see cref="E:System.Windows.Controls.DataGrid.UnloadingRow" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowEventArgs.#ctor(System.Windows.Controls.DataGridRow)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridRowEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="row">イベントが発生した行。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEventArgs.Row">
      <summary>イベントが発生した行を取得します。</summary>
      <returns>イベントが発生した行。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridSelectionMode">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> コントロールで単一と複数のどちらの項目選択がサポートされているかを指定する定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionMode.Extended">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内の複数の項目を同時に選択できます。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionMode.Single">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内の項目を一度に 1 つだけ選択できます。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridSelectionUnit">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> コントロールでの選択にセル、行、またはその両方のどれを使用するかを指定する定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionUnit.Cell">
      <summary>セルのみ選択できます。 セルをクリックすると、そのセルが選択されます。 行ヘッダーまたは列ヘッダーをクリックしても、何も実行されません。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionUnit.CellOrRowHeader">
      <summary>セルと行を選択できます。 セルをクリックすると、そのセルのみが選択されます。 行ヘッダーをクリックすると、その行全体が選択されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionUnit.FullRow">
      <summary>行全体のみ選択できます。 セルまたは行ヘッダーをクリックすると、その行全体が選択されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridSortingEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.Sorting" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridSortingEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridSortingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="column">並べ替えられている列。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridSortingEventArgs.Handled">
      <summary>ルーティング イベントを処理するかどうかを指定する値を取得または設定します。</summary>
      <returns>イベントが処理済みである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridSortingEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.Sorting" /> の <see cref="T:System.Windows.Controls.DataGrid" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridTemplateColumn">
      <summary>テンプレートで指定されるセルの内容をホストする <see cref="T:System.Windows.Controls.DataGrid" /> 列を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridTemplateColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate">
      <summary>編集モードのセルの内容を表示するために使用するテンプレートを取得または設定します。</summary>
      <returns>編集モードのセルの内容を表示するときに使用するテンプレート。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector">
      <summary>編集モードのセルの内容を表示するために、どのテンプレートを使用するかを決定するオブジェクトを取得または設定します。</summary>
      <returns>編集モードのセルの内容を表示するために使用するテンプレートを決定するオブジェクト。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate">
      <summary>編集モードではないセルの内容を表示するために使用されるテンプレートを取得または設定します。</summary>
      <returns>編集モードではないセルの内容を表示するために使用するテンプレート。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplateSelector">
      <summary>編集モードではないセルの内容を表示するために、どのテンプレートを使用するかを決定するオブジェクトを取得または設定します。</summary>
      <returns>使用するテンプレートを決定するオブジェクト。 登録済みの既定値は <see langword="null" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>列の <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> プロパティ値にバインドされた <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> によって定義される要素を取得します。</summary>
      <param name="cell">生成された要素を格納するセル。</param>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>列の <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> プロパティの値にバインドされる新しい編集要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>列の <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> プロパティ値にバインドされた <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> によって定義される要素を取得します。</summary>
      <param name="cell">生成された要素を格納するセル。</param>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>列の <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> プロパティの値にバインドされる新しい読み取り専用要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>テンプレートのプロパティ値の変更に応じて、列内のセルのコンテンツを更新します。</summary>
      <param name="element">更新するセル。</param>
      <param name="propertyName">変更された列プロパティの名前。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridTextColumn">
      <summary>セルのテキスト コンテンツをホストする <see cref="T:System.Windows.Controls.DataGrid" /> 列を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataGridTextColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>列の編集中のセルの値を、指定した値に戻します。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <param name="uneditedValue">編集中のセルの編集前の値。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>編集モードを終了する前に、必要な検証を実行します。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <returns>検証が失敗した場合は <see langword="false" />。それ以外の場合は <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.DefaultEditingElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> プロパティの既定値。</summary>
      <returns>スタイルを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.DefaultElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> プロパティの既定値。</summary>
      <returns>スタイルを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontFamily">
      <summary>列内のセルのコンテンツのフォント ファミリを取得または設定します。</summary>
      <returns>列内のセルのコンテンツのフォント ファミリ。 登録済みの既定値は <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.FontFamily" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontSize">
      <summary>列内のセルのコンテンツのフォント サイズを取得または設定します。</summary>
      <returns>列内のセルのコンテンツのフォント サイズ。 登録済みの既定値は <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.FontSize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontStyle">
      <summary>列内のセルのコンテンツのフォント スタイルを取得または設定します。</summary>
      <returns>列内のセルのコンテンツのフォント スタイル。 登録済みの既定値は <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.FontStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontWeight">
      <summary>列内のセルのコンテンツのフォントの太さを取得または設定します。</summary>
      <returns>列内のセルのコンテンツのフォントの太さ。 登録済みの既定値は <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.FontWeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.Foreground">
      <summary>列内のセルのテキスト コンテンツの描画に使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>列内のセルのコンテンツの描画に使用するブラシ。 登録済みの既定値は <see cref="P:System.Windows.SystemColors.ControlTextBrush" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.Foreground" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>列の <see cref="T:System.Windows.Controls.TextBox" /> プロパティ値にバインドされた <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> コントロールを取得します。</summary>
      <param name="cell">生成された要素を格納するセル。</param>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>列の <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> プロパティ値にバインドされた新しいテキスト ボックス コントロール。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>列の <see cref="T:System.Windows.Controls.TextBlock" /> プロパティ値にバインドされた読み取り専用の <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> コントロールを取得します。</summary>
      <param name="cell">生成された要素を格納するセル。</param>
      <param name="dataItem">目的のセルを格納している行によって表されるデータ項目。</param>
      <returns>列の <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> プロパティ値にバインドされた新しい読み取り専用のテキスト ブロック コントロール。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>列内のセルが編集モードになるとき呼び出されます。</summary>
      <param name="editingElement">編集モードのセルに列で表示される要素。</param>
      <param name="editingEventArgs">セルを編集モードにするユーザー ジェスチャに関する情報。</param>
      <returns>セルの編集前の値。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>列のプロパティ値の変更に応じて、列内のセルのコンテンツを更新します。</summary>
      <param name="element">更新するセル。</param>
      <param name="propertyName">変更された列プロパティの名前。</param>
    </member>
    <member name="T:System.Windows.Controls.DataTemplateSelector">
      <summary>データ オブジェクトとデータ バインド要素に基づいて <see cref="T:System.Windows.DataTemplate" /> を選択する方法を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataTemplateSelector.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DataTemplateSelector" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
      <summary>派生クラスでオーバーライドされた場合、カスタム ロジックに基づいた <see cref="T:System.Windows.DataTemplate" /> を返します。</summary>
      <param name="item">テンプレートを選択する対象となるデータ オブジェクト。</param>
      <param name="container">データ バインドされたオブジェクト。</param>
      <returns>
        <see cref="T:System.Windows.DataTemplate" /> または <see langword="null" /> を返します。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="T:System.Windows.Controls.DatePicker">
      <summary>ユーザーが日付を選択できるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DatePicker" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.BlackoutDates">
      <summary>選択不可としてマークされている日付のコレクションを取得または設定します。</summary>
      <returns>選択できない日付のコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.CalendarClosed">
      <summary>ドロップダウン <see cref="T:System.Windows.Controls.Calendar" /> が閉じたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.CalendarOpened">
      <summary>ドロップダウン <see cref="T:System.Windows.Controls.Calendar" /> が開いたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.CalendarStyle">
      <summary>カレンダーを表示するときに使用するスタイルを取得または設定します。</summary>
      <returns>カレンダーを表示するときに使用するスタイル。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.CalendarStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.DateValidationError">
      <summary>
        <see cref="P:System.Windows.Controls.DatePicker.Text" /> が日付として解釈できない値に設定されている場合、または日付を選択できない場合に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDate">
      <summary>表示する日付を取得または設定します。</summary>
      <returns>表示する日付。 既定値は、<see cref="P:System.DateTime.Today" /> です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定された日付が、<see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> で定義された範囲内にありません。 および <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> を参照してください。</exception>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDateEnd">
      <summary>表示する最後の日付を取得または設定します。</summary>
      <returns>表示する最後の日付。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateEndProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDateStart">
      <summary>表示する最初の日付を取得または設定します。</summary>
      <returns>表示する最初の日付。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateStartProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.FirstDayOfWeek">
      <summary>週の始まりと見なされる曜日を取得または設定します。</summary>
      <returns>週の始まりを表す <see cref="T:System.DayOfWeek" />。 既定値は、現在のカルチャで決定された <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.HasEffectiveKeyboardFocus">
      <summary>
        <see cref="T:System.Windows.Controls.DatePicker" /> にフォーカスがあるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DatePicker" /> にフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.IsDropDownOpen">
      <summary>ドロップダウン <see cref="T:System.Windows.Controls.Calendar" /> が開いているか閉じているかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Calendar" /> が開いている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.IsDropDownOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.IsTodayHighlighted">
      <summary>現在の日付が強調表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>現在の日付が強調表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.DatePicker" /> コントロールのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DatePicker.CalendarClosed" /> ルーティング イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DatePicker.CalendarOpened" /> ルーティング イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCreateAutomationPeer">
      <summary>オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> オブジェクトの <see cref="T:System.Windows.Controls.DatePicker" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> ルーティング イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectedDate">
      <summary>現在選択されている日付を取得または設定します。</summary>
      <returns>現在選択されている日付。 既定値は、<see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定された日付が <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> および <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> で定義した範囲内にないか、または指定された日付が <see cref="P:System.Windows.Controls.DatePicker.BlackoutDates" /> コレクション内にあります。</exception>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.SelectedDateChanged">
      <summary>
        <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> プロパティが変更されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateChangedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectedDateFormat">
      <summary>選択した日付を表示するために使用される形式を取得または設定します。</summary>
      <returns>選択した日付を表示するために使用される形式。 既定値は、<see cref="F:System.Windows.Controls.DatePickerFormat.Long" /> です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定された形式は無効です。</exception>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.Text">
      <summary>
        <see cref="T:System.Windows.Controls.DatePicker" /> によって表示されるテキストを取得するか、選択した日付を設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DatePicker" /> によって表示されるテキスト。 既定値は空の文字列です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.TextProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DatePicker.Text" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.ToString">
      <summary>選択された日付のテキスト表現を提供します。</summary>
      <returns>選択された日付のテキスト表現、または <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> が <see langword="null" /> の場合は空の文字列。</returns>
    </member>
    <member name="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.#ctor(System.Exception,System.String)">
      <summary>
        <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="exception">
        <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントからの最初の例外。</param>
      <param name="text">
        <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントの原因となったテキスト。</param>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception">
      <summary>
        <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントに関連付けられた最初の例外を取得します。</summary>
      <returns>検証エラーに関連付けられた例外。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Text">
      <summary>
        <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントの原因となったテキストを取得または設定します。</summary>
      <returns>検証エラーの原因となったテキスト。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException">
      <summary>
        <see cref="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" /> をスローするかどうかを示す値を取得または設定します。</summary>
      <returns>例外をスローする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.DatePickerFormat">
      <summary>
        <see cref="T:System.Windows.Controls.DatePicker" /> の日付形式を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePickerFormat.Long">
      <summary>曜日と月の名前を省略しない形式で日付を表示することを指定します。 この値は、<see cref="M:System.DateTime.ToLongDateString" /> メソッドから返される文字列に等しい文字列を表示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePickerFormat.Short">
      <summary>曜日と月の名前を省略した形式で日付を表示することを指定します。 この値は、<see cref="M:System.DateTime.ToShortDateString" /> メソッドから返される文字列に等しい文字列を表示します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Decorator">
      <summary>
        <see cref="T:System.Windows.Controls.Border" /> や <see cref="T:System.Windows.Controls.Viewbox" /> など、1 つの子要素またはその周囲に効果を適用する要素の基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Decorator.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Decorator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Decorator" /> 要素のコンテンツを配置します。</summary>
      <param name="arrangeSize">子コンテンツを配置するためにこの要素が使用する <see cref="T:System.Windows.Size" />。</param>
      <returns>この <see cref="T:System.Windows.Controls.Decorator" /> 要素とその子の配置のサイズを表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Decorator.Child">
      <summary>
        <see cref="T:System.Windows.Controls.Decorator" /> の単一の子要素を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Decorator" /> の単一の子要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Decorator.GetVisualChild(System.Int32)">
      <summary>指定した <paramref name="index" /> の位置にある子 <see cref="T:System.Windows.Media.Visual" /> 要素を取得します。</summary>
      <param name="index">子要素のインデックス位置。</param>
      <returns>指定した <paramref name="index" /> の位置にある子要素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が、子ビジュアル要素の数を超えています。</exception>
    </member>
    <member name="P:System.Windows.Controls.Decorator.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.Decorator" /> の論理上の子要素の反復処理に使用できる列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Decorator" /> の論理上の子要素の反復処理に使用できる列挙子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Decorator.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)" /> が渡される間に、配置を準備するために <see cref="T:System.Windows.Controls.Decorator" /> の子要素を測定します。</summary>
      <param name="constraint">超えることができない上限の <see cref="T:System.Windows.Size" />。</param>
      <returns>要素のターゲット <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Decorator.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.Decorator.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.Decorator.VisualChildrenCount">
      <summary>この <see cref="T:System.Windows.Controls.Decorator" /> のインスタンスのビジュアルな子要素の数に相当する値を取得します。</summary>
      <returns>ビジュアル子要素の数。</returns>
    </member>
    <member name="T:System.Windows.Controls.DefinitionBase">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> および <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> クラスによって使用される共有サイズのグループをサポートするために必要な機能を定義します。 これは抽象クラスです。</summary>
    </member>
    <member name="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup">
      <summary>サイズ変更プロパティを共有する定義済みのグループのメンバーとして <see cref="T:System.Windows.Controls.ColumnDefinition" /> または <see cref="T:System.Windows.Controls.RowDefinition" /> を識別する値を取得または設定します。</summary>
      <returns>サイズを共有するグループを識別する <see cref="T:System.String" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DefinitionBase.SharedSizeGroupProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Dock">
      <summary>
        <see cref="T:System.Windows.Controls.Dock" /> 内にある子要素の <see cref="T:System.Windows.Controls.DockPanel" /> 位置を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Bottom">
      <summary>
        <see cref="T:System.Windows.Controls.DockPanel" /> の下部に配置される子要素。</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Left">
      <summary>
        <see cref="T:System.Windows.Controls.DockPanel" /> の左側に配置される子要素。</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Right">
      <summary>
        <see cref="T:System.Windows.Controls.DockPanel" /> の右側に配置される子要素。</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Top">
      <summary>
        <see cref="T:System.Windows.Controls.DockPanel" /> の上部に配置される子要素。</summary>
    </member>
    <member name="T:System.Windows.Controls.DockPanel">
      <summary>子要素を互いに水平方向または垂直方向に整列する領域を定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DockPanel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.DockPanel" /> 要素のコンテンツ (子要素) を配置します。</summary>
      <param name="arrangeSize">この要素が子要素を配置するために使用する <see cref="T:System.Windows.Size" />。</param>
      <returns>この <see cref="T:System.Windows.Size" /> 要素の配置後のサイズを表す <see cref="T:System.Windows.Controls.DockPanel" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DockPanel.Dock">
      <summary>親の <see cref="T:System.Windows.Controls.DockPanel" /> 内での子要素の位置を示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.DockPanel.DockProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DockPanel.Dock" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.GetDock(System.Windows.UIElement)">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> の <see cref="P:System.Windows.Controls.DockPanel.Dock" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>要素の <see cref="P:System.Windows.Controls.DockPanel.Dock" /> プロパティ値。</returns>
    </member>
    <member name="P:System.Windows.Controls.DockPanel.LastChildFill">
      <summary>
        <see cref="T:System.Windows.Controls.DockPanel" /> 枠内の最後の子要素が、残りの利用可能なスペースを埋めるかどうかを示す値を取得または設定します。</summary>
      <returns>最後の子要素を残りの領域全体に引き伸ばす場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DockPanel.LastChildFillProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DockPanel.LastChildFill" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.DockPanel" /> パスにおいて、配置の前に <see cref="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)" /> の子要素を測定します。</summary>
      <param name="constraint">上限にする最大 <see cref="T:System.Windows.Size" />。</param>
      <returns>要素の必要サイズを表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.SetDock(System.Windows.UIElement,System.Windows.Controls.Dock)">
      <summary>指定した要素に <see cref="P:System.Windows.Controls.DockPanel.Dock" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となる要素。</param>
      <param name="dock">必要な <see cref="T:System.Windows.Controls.Dock" /> 値。</param>
    </member>
    <member name="T:System.Windows.Controls.DocumentViewer">
      <summary>
        <see cref="T:System.Windows.Documents.FixedDocument" /> など、改ページ位置が自動修正された <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> のコンテンツをホストできるドキュメント表示コントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DocumentViewer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom">
      <summary>
        <see cref="T:System.Windows.Controls.DocumentViewer" /> をさらに縮小表示できるかどうかを示す値を取得します。</summary>
      <returns>コントロールをさらに縮小表示できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanDecreaseZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom">
      <summary>
        <see cref="T:System.Windows.Controls.DocumentViewer" /> をさらに拡大表示できるかどうかを示す値を取得します。</summary>
      <returns>コントロールをさらに拡大表示できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanIncreaseZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveDown">
      <summary>
        <see cref="T:System.Windows.Controls.DocumentViewer" /> をドキュメントのさらに下に移動できるかどうかを示す値を取得します。</summary>
      <returns>コントロールをドキュメントのさらに下に移動できる場合は <see langword="true" />。それ以外の場合、ドキュメントの下端まで達した場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveDownProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveDown" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveLeft">
      <summary>
        <see cref="T:System.Windows.Controls.DocumentViewer" /> をドキュメントのをさらに左に移動できるかどうかを示す値を取得します。</summary>
      <returns>コントロールをドキュメントのさらに左に移動できる場合は <see langword="true" />。それ以外の場合、ドキュメントの左端まで達した場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveLeftProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveLeft" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveRight">
      <summary>
        <see cref="T:System.Windows.Controls.DocumentViewer" /> をドキュメントのさらに右に移動できるかどうかを示す値を取得します。</summary>
      <returns>コントロールをドキュメントのさらに右に移動できる場合は <see langword="true" />。それ以外の場合、ドキュメントの右端まで達した場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveRightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveRight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveUp">
      <summary>
        <see cref="T:System.Windows.Controls.DocumentViewer" /> をドキュメントのさらに上に移動できるかどうかを示す値を取得します。</summary>
      <returns>コントロールをドキュメントのさらに上に移動できる場合は <see langword="true" />。それ以外の場合、ドキュメントの上端に達した場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveUpProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveUp" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.DecreaseZoom">
      <summary>ドキュメントのコンテンツを 1 ズーム ステップ分縮小表示します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ExtentHeight">
      <summary>改ページ調整されたドキュメントの全体的な縦の高さを取得します。</summary>
      <returns>デバイス非依存ピクセル単位で指定される、改ページ調整されたコンテンツの全体的な縦の高さ。  既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ExtentHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.ExtentHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ExtentWidth">
      <summary>改ページ位置が自動修正されたドキュメントの、全体的な横幅を取得します。</summary>
      <returns>コンテンツのレイアウト領域の現在の横幅。デバイス非依存ピクセル単位で指定されます。  既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ExtentWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.Find">
      <summary>フォーカスを検索ツール バーに移動して、ドキュメントのコンテンツを検索します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToHeight">
      <summary>単一のページを現在のビューポートの高さに収めます。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.FitToHeightCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight" /> 操作を実行する <see cref="T:System.Windows.Input.RoutedUICommand" /> を取得します。</summary>
      <returns>
        <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight" /> 操作を実行するルーティング コマンド。</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross">
      <summary>ドキュメントを <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> プロパティの現在の設定に収めます。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross(System.Int32)">
      <summary>指定した最大数のページ幅にドキュメントを収めます。</summary>
      <param name="pagesAcross">現在の <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth" /> に収めるページの最大数。</param>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcrossCommand">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 操作を実行する <see cref="T:System.Windows.Input.RoutedUICommand" /> を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 操作を実行するルーティング コマンド。</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToWidth">
      <summary>単一のページを現在のビューポートの幅に収めます。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.FitToWidthCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth" /> 操作を実行する <see cref="T:System.Windows.Input.RoutedUICommand" /> を取得します。</summary>
      <returns>
        <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth" /> 操作を実行するルーティング コマンド。</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.GetPageViewsCollection(System.Boolean@)">
      <summary>現在表示されている <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 要素のコレクションを返します。</summary>
      <param name="changed">このメソッドから戻ったときに、<see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> の最後の呼び出しの後に <see cref="M:System.Windows.Controls.DocumentViewer.GetPageViewsCollection(System.Boolean@)" /> 要素のコレクションが変更された場合は、<see langword="true" /> が格納されています。それ以外の場合は <see langword="false" /> が格納されています。</param>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> コントロール内で現在表示されている <see cref="T:System.Windows.Controls.DocumentViewer" /> 要素のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.HorizontalOffset">
      <summary>水平方向のスクロール位置を取得または設定します。</summary>
      <returns>デバイスに依存しないピクセル単位で指定された、現在の水平方向のスクロール位置。  初期の既定値は 0.0 です。</returns>
      <exception cref="T:System.ArgumentException">指定された設定値が負の値です。</exception>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.HorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing">
      <summary>ページ間の左右の間隔を取得または設定します。</summary>
      <returns>デバイス非依存のピクセル単位で指定された、表示されたページ間の左右の間隔。  既定値は、10.0 です。</returns>
      <exception cref="T:System.ArgumentException">指定された設定値が負の値です。</exception>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.HorizontalPageSpacingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.IncreaseZoom">
      <summary>ドキュメントのコンテンツを 1 ズーム ステップ分拡大表示します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross">
      <summary>表示するページ列の最大数を定義する値を取得または設定します。</summary>
      <returns>表示されるページ列の最大数。  既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.MaxPagesAcrossProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveDown">
      <summary>デバイス非依存の 16 ピクセル分、ドキュメントのコンテンツを下へスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveLeft">
      <summary>デバイス非依存の 16 ピクセル分、ドキュメントのコンテンツを左へスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveRight">
      <summary>ドキュメントのコンテンツを右にスクロールします (デバイスに依存しないピクセルで 16 ピクセル分)。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveUp">
      <summary>ドキュメントのコンテンツを上にスクロールします (デバイスに依存しないピクセルで 16 ピクセル分)。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnApplyTemplate">
      <summary>
        <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)">
      <summary>
        <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)" /> の実装の <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> メソッドに応答します。</summary>
      <param name="element">表示するオブジェクト。</param>
      <param name="rect">表示する <paramref name="element" /> の四角形の領域。</param>
      <param name="pageNumber">表示されるページの番号。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> コントロールの <see cref="T:System.Windows.Controls.DocumentViewer" /> を作成して返します。</summary>
      <returns>新しい <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnDecreaseZoomCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.DecreaseZoom" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnDocumentChanged">
      <summary>表示するドキュメントが変わると、呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFindCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.Find" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFirstPageCommand">
      <summary>
        <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.FirstPage" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToHeightCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToMaxPagesAcrossCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToMaxPagesAcrossCommand(System.Int32)">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross(System.Int32)" /> メソッドの呼び出しに応答します。</summary>
      <param name="pagesAcross">コンテンツ エリアにわたって収めるページ数。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToWidthCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnGoToPageCommand(System.Int32)">
      <summary>
        <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GoToPage(System.Int32)" /> メソッドの呼び出しに応答します。</summary>
      <param name="pageNumber">配置先のページ番号。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnIncreaseZoomCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.IncreaseZoom" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントに応答します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnLastPageCommand">
      <summary>
        <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.LastPage" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントに応答します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveDownCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.MoveDown" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveLeftCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.MoveLeft" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveRightCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.MoveRight" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveUpCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.MoveUp" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnNextPageCommand">
      <summary>
        <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.NextPage" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> イベントに応答します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnPreviousPageCommand">
      <summary>
        <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.PreviousPage" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageDownCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageDown" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageLeftCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageLeft" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageRightCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageRight" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageUpCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageUp" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnViewThumbnailsCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails" /> メソッドの呼び出しに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageDown">
      <summary>ビューポートを下に 1 つスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageLeft">
      <summary>ビューポートを左に 1 つスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageRight">
      <summary>ビューポートを右に 1 つスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageUp">
      <summary>ビューポートを上に 1 つスクロールします。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ShowPageBorders">
      <summary>ドロップ シャドウによるページ境界線を表示するかどうかを示す値を取得または設定します。</summary>
      <returns>ドロップ シャドウによる境界線を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。  既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ShowPageBordersProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.ShowPageBorders" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.VerticalOffset">
      <summary>垂直方向のスクロール位置を取得または設定します。</summary>
      <returns>デバイスに依存しないピクセル数で示される、現在の垂直方向のスクロール位置のオフセット。  既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.VerticalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.VerticalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing">
      <summary>表示されるページ間の上下の間隔を取得または設定します。</summary>
      <returns>デバイス非依存のピクセル単位で表示されるページ間の上下の間隔。  既定値は、10.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.VerticalPageSpacingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ViewportHeight">
      <summary>スクロール可能なコンテンツ エリアの縦のサイズを取得します。</summary>
      <returns>スクロール可能なコンテンツ エリアの縦のサイズ (デバイスに依存しないピクセル単位)。  既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ViewportHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.ViewportHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ViewportWidth">
      <summary>スクロール可能なコンテンツ エリアの横幅を取得します。</summary>
      <returns>スクロール可能なコンテンツ エリアの横幅 (デバイスに依存しないピクセル単位)。  既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ViewportWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.ViewportWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ViewThumbnails">
      <summary>ページのサムネイル表現を表示します。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ViewThumbnailsCommand">
      <summary>
        <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails" /> 操作を実行する <see cref="T:System.Windows.Input.RoutedUICommand" /> を取得します。</summary>
      <returns>
        <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails" /> 操作を実行するルーティング コマンド。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.Zoom">
      <summary>ドキュメントのズーム倍率を取得または設定します。</summary>
      <returns>5.0 ～ 5000.0 の範囲の値で表されるズーム倍率。  既定値は 100.0% を示す 100.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ExceptionValidationRule">
      <summary>バインディング ソースのプロパティの更新中にスローされる例外をチェックする規則を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ExceptionValidationRule.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>値の検証チェックを実行します。</summary>
      <param name="value">チェックするバインディング ターゲットの値。</param>
      <param name="cultureInfo">この規則で使用するカルチャ。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Controls.ExpandDirection">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> コントロールが開く方向を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Down">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> コントロールは下に開きます。</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Left">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> コントロールは左に開きます。</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Right">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> コントロールは右に開きます。</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Up">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> コントロールは上に開きます。</summary>
    </member>
    <member name="T:System.Windows.Controls.Expander">
      <summary>コンテンツを表示する折りたたみ可能なウィンドウのヘッダーを表示するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Expander.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Expander.Collapsed">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> コントロールのコンテンツ ウィンドウが閉じ、<see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> のみが表示されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Expander.CollapsedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Expander.Collapsed" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Expander.ExpandDirection">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> コンテンツ ウィンドウの表示方向を取得または設定します。</summary>
      <returns>コンテンツ ウィンドウの表示方向を定義する <see cref="T:System.Windows.Controls.ExpandDirection" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Controls.ExpandDirection.Down" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Expander.ExpandDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Expander.ExpandDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Expander.Expanded">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> コントロールのコンテンツ ウィンドウが開き、そのヘッダーとコンテンツの両方が表示されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Expander.ExpandedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Expander.Expanded" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Expander.IsExpanded">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> コンテンツ ウィンドウが表示されているかどうかを取得または設定します。</summary>
      <returns>コンテンツ ウィンドウが展開されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Expander.IsExpandedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnApplyTemplate">
      <summary>アプリケーション コードまたは内部プロセスが <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> メソッドを呼び出すたびに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnCollapsed">
      <summary>
        <see cref="E:System.Windows.Controls.Expander.Collapsed" /> プロパティの値が <see langword="true" /> から <see langword="false" /> に変更された場合に <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> イベントを発生させます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> コントロールの <see cref="T:System.Windows.Controls.Expander" /> の実装を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> コントロールの新しい <see cref="T:System.Windows.Controls.Expander" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnExpanded">
      <summary>
        <see cref="E:System.Windows.Controls.Expander.Expanded" /> プロパティの値が <see langword="false" /> から <see langword="true" /> に変更された場合に <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> イベントを発生させます。</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentPageViewer">
      <summary>一度に 1 ページを表示する固定表示モードで、フロー コンテンツを表示するためのコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> レベルを下げることができるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> レベルを下げることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoomPropertyKey">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> レベルを上げることができるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> レベルを上げることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoomPropertyKey">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.DecreaseZoom">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> ルーティング コマンドを実行します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.Find">
      <summary>[検索] ダイアログ ボックスを切り替えます。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.IncreaseZoom">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> ルーティング コマンドを実行します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabled">
      <summary>コントロールにフォーカスがない場合に <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> が選択されたテキストを表示するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> にフォーカスがないときに <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> が選択されたテキストを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActive">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> にフォーカスがあり、選択されたテキストがあるかどうかを示す値を取得します。</summary>
      <returns>テキスト ボックスにフォーカスがないときに <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> が選択されたテキストを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActiveProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> に使用できる最大の <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> レベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> に使用できる最大ズーム レベル。パーセンテージとして解釈されます。 既定値は 200.0 (最大ズーム レベルである 200%) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.MaxZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> に使用できる最小の <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> レベルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> に使用できる最小ズーム レベル。パーセンテージとして解釈されます。 既定値は 80.0 (最小ズーム レベルである 80%) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.MinZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnApplyTemplate">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnCancelPrintCommand">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> ルーティング イベントが、その経路上でこのクラスに到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントの引数。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnCreateAutomationPeer">
      <summary>WPF オートメーション インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を実装します。</summary>
      <returns>このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnDecreaseZoomCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnDocumentChanged">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> プロパティが変化すると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnFindCommand">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnFirstPageCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.FirstPage" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnGoToPageCommand(System.Int32)">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.GoToPage" /> ルーティング コマンドを処理します。</summary>
      <param name="pageNumber">移動先のページ番号。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnIncreaseZoomCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> ルーティング イベントを処理します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.KeyEventArgs" /> ルーティング イベントに関連付けられた引数を格納する <see cref="E:System.Windows.UIElement.KeyDown" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnLastPageCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.LastPage" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseWheel" /> ルーティング イベントを処理します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> ルーティング イベントに関連付けられた引数を格納する <see cref="E:System.Windows.UIElement.MouseWheel" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnNextPageCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPageViewsChanged">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.DocumentViewerBase.PageViewsChanged" /> ルーティング イベントを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPreviousPageCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPrintCommand">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPrintCompleted">
      <summary>印刷ジョブが完了すると呼び出されます。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.Selection">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> の選択されたコンテンツを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> の選択されたコンテンツ。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush">
      <summary>選択されているテキストを強調表示するブラシを取得または設定します。</summary>
      <returns>選択されているテキストを強調表示するブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacity">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" /> の不透明度を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" /> の不透明度。 既定値は0.4 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacity" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> の現在のズーム レベルを取得または設定します。</summary>
      <returns>現在のズーム レベルはパーセンテージとして解釈されます 既定値は 100.0 (ズーム レベルは 100%) です。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement">
      <summary>ズーム インクリメントを取得または設定します。</summary>
      <returns>現在のズーム インクリメントはパーセンテージとして解釈されます 既定値は 10.0 です (ズームは 10% ずつインクリメントされます)。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.ZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentReader">
      <summary>複数の表示モードに対応したビルトイン サポートを備えた状態で、フロー コンテンツを表示するためのコントロールを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.CancelPrint">
      <summary>現在印刷中のジョブがあればキャンセルします。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> レベルを下げることができるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> レベルを下げることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> が <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> ルーティング コマンドを実行して、コンテンツの次のページにジャンプできるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> がコンテンツの次のページにジャンプできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanGoToNextPageProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.CanGoToPage(System.Int32)">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> が、指定したページ番号にジャンプできるかどうかを示す値を返します。</summary>
      <param name="pageNumber">有効なジャンプ先としてチェックするページ番号。</param>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> が、指定したページ番号にジャンプできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> が <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> ルーティング コマンドを実行して、コンテンツの前のページにジャンプできるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> がコンテンツの前のページにジャンプできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPageProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> レベルを上げることができるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> レベルを上げることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.DecreaseZoom">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> ルーティング コマンドを実行します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.Document">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> で表示するコンテンツをホストする <see cref="T:System.Windows.Controls.FlowDocumentReader" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> で表示するコンテンツをホストする <see cref="T:System.Windows.Controls.FlowDocumentReader" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.DocumentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Document" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.Find">
      <summary>[検索] ダイアログ ボックスを切り替えます。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.IncreaseZoom">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> ルーティング コマンドを実行します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> ルーティング コマンドが有効かどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> ルーティング コマンドを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsFindEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabled">
      <summary>コントロールにフォーカスがない場合に <see cref="T:System.Windows.Controls.FlowDocumentReader" /> が選択されたテキストを表示するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> にフォーカスがないときに <see cref="T:System.Windows.Controls.FlowDocumentReader" /> が選択されたテキストを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled">
      <summary>表示モードとして <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page" /> を使用できるかどうかを示す値を取得または設定します。</summary>
      <returns>単一ページ表示モードを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> と <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> が <see langword="false" /> であるときに、このプロパティも <see langword="false" /> になっています。</exception>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> ルーティング コマンドが有効かどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> ルーティング コマンドを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsPrintEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled">
      <summary>表示モードとして <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll" /> を使用できるかどうかを示す値を取得または設定します。</summary>
      <returns>表示モードとして <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll" /> を使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> と <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> が <see langword="false" /> であるときに、このプロパティも <see langword="false" /> になっています。</exception>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsSelectionActive">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> にフォーカスがあり、選択されたテキストがあるかどうかを示す値を取得します。</summary>
      <returns>テキスト ボックスにフォーカスがないときに <see cref="T:System.Windows.Controls.FlowDocumentReader" /> が選択されたテキストを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsSelectionActiveProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsSelectionActive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled">
      <summary>表示モードとして <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage" /> を使用できるかどうかを示す値を取得または設定します。</summary>
      <returns>表示モードとして <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage" /> を使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> と <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> が <see langword="false" /> であるときに、このプロパティも <see langword="false" /> になっています。</exception>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> の論理的な子を反復処理できる列挙子を取得します。</summary>
      <returns>論理的な子の列挙子。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.MaxZoom">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> に使用できる最大の <see cref="T:System.Windows.Controls.FlowDocumentReader" /> レベルを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> に使用できる最大の <see cref="T:System.Windows.Controls.FlowDocumentReader" /> レベル。パーセントとして解釈されます。 既定値は 200.0 (つまり、最大ズーム レベルは 200%) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.MaxZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.MaxZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.MinZoom">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> に使用できる最小の <see cref="T:System.Windows.Controls.FlowDocumentReader" /> レベルを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> に使用できる最小の <see cref="T:System.Windows.Controls.FlowDocumentReader" /> レベル。パーセントとして解釈されます。 既定値は 80.0 (つまり、最小ズーム レベルは 80%) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.MinZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.MinZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnApplyTemplate">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnCancelPrintCommand">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.FlowDocumentReader" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.FlowDocumentReader" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnDecreaseZoomCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>このフロー ドキュメント リーダーが表示される DPI が変更されるときに呼び出されます。</summary>
      <param name="oldDpiScaleInfo">以前の DPI スケール設定。</param>
      <param name="newDpiScaleInfo">新規の DPI スケール設定。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnFindCommand">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnIncreaseZoomCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnInitialized(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.Initialized" /> ルーティング イベントを処理します。</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> ルーティング イベントに関連付けられた引数を含む <see cref="E:System.Windows.FrameworkElement.Initialized" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> ルーティング イベントを処理します。</summary>
      <param name="e">
        <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> ルーティング イベントに関連付けられた引数を含む <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnPrintCommand">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnPrintCompleted">
      <summary>印刷ジョブが完了すると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnSwitchViewingModeCommand(System.Windows.Controls.FlowDocumentReaderViewingMode)">
      <summary>
        <see cref="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)" /> ルーティング コマンドを処理します。</summary>
      <param name="viewingMode">切り替える表示モードを指定する、いずれかの <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> 値。</param>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.PageCount">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> によってホストされているコンテンツの現在の表示ページ数を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> によってホストされているコンテンツの現在の表示ページ数。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.PageCountProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.PageCount" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.PageNumber">
      <summary>現在表示されているページのページ番号を取得します。</summary>
      <returns>現在表示されているページのページ番号。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.PageNumberProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.PageNumber" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.Print">
      <summary>標準の [印刷] ダイアログ ボックスを呼び出します。このダイアログ ボックスを使用して、<see cref="T:System.Windows.Controls.FlowDocumentReader" /> のコンテンツの印刷や印刷設定を行うことができます。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.Selection">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> の選択されたコンテンツを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> の選択されたコンテンツ。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush">
      <summary>選択されているテキストを強調表示するブラシを取得または設定します。</summary>
      <returns>選択されているテキストを強調表示するブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.SelectionBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.SelectionOpacity">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" /> の不透明度を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" /> の不透明度。 既定値は0.4 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.SelectionOpacityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionOpacity" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)">
      <summary>
        <see cref="F:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCommand" /> コマンドを実行します。</summary>
      <param name="viewingMode">目的の表示モードを指定する、いずれかの <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> 値。</param>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCommand">
      <summary>[表示モードの切り替え] コマンドを表す値を取得します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCore(System.Windows.Controls.FlowDocumentReaderViewingMode)">
      <summary>
        <see cref="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)" /> コマンドを処理します。</summary>
      <param name="viewingMode">目的の表示モードを指定する、いずれかの <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> 値。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。 <see cref="P:System.Windows.Controls.FlowDocumentReader.Document" /> プロパティを使用して、<see cref="T:System.Windows.Documents.FlowDocument" /> を <see cref="T:System.Windows.Controls.FlowDocumentReader" /> の子コンテンツとして追加します。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.ViewingMode">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> の表示モードを取得または設定します。</summary>
      <returns>表示モードを指定する、いずれかの <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> 値。 既定値は、<see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.ViewingModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.ViewingMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.Zoom">
      <summary>現在のズーム レベルを取得または設定します。</summary>
      <returns>現在のズーム レベルはパーセンテージとして解釈されます 既定値は 100.0 (つまり、ズーム レベルは 100%) です。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement">
      <summary>ズーム インクリメントを取得または設定します。</summary>
      <returns>現在のズーム インクリメントはパーセンテージとして解釈されます 既定値は 10.0 (つまり、ズーム インクリメントは 10%) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.ZoomIncrementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.ZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentReaderViewingMode">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> コントロールの表示モードの名前を表します。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> で、コンテンツを 1 ページずつ表示することを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> で、連続したスクロール モードでコンテンツを表示することを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" /> で、開いた本のようにコンテンツを 2 ページずつ表示することを示します。</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentScrollViewer">
      <summary>連続スクロール モードでフロー コンテンツを表示するためのコントロールを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.CancelPrint">
      <summary>現在印刷中のジョブがあればキャンセルします。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> レベルを下げることができるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> レベルを下げることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoom">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> レベルを上げることができるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> レベルを上げることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoomProperty">
      <summary>
        <see cref="F:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoomProperty" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.DecreaseZoom">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> ルーティング コマンドを実行します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Document">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> で表示するコンテンツをホストする <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> で表示するコンテンツをホストする <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.DocumentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.Find">
      <summary>[検索] ダイアログ ボックスを切り替えます。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility">
      <summary>水平スクロール バーが表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 値のいずれか 1 つ。 既定値は、 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.IncreaseZoom">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> ルーティング コマンドを実行します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabled">
      <summary>コントロールにフォーカスがない場合に <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> が選択されたテキストを表示するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> にフォーカスがないときに <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> が選択されたテキストを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActive">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> にフォーカスがあり、選択されたテキストがあるかどうかを示す値を取得します。</summary>
      <returns>テキスト ボックスにフォーカスがないときに <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> が選択されたテキストを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActiveProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 内のコンテンツの選択が有効かどうかを示す値を取得または設定します。</summary>
      <returns>選択が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> ツール バーが表示されているかどうかを示す値を取得または設定します。</summary>
      <returns>ツール バーが表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisibleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> の論理的な子を反復処理できる列挙子を取得します。</summary>
      <returns>論理的な子の列挙子。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> に使用できる最大の <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> レベルを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> に使用できる最大の <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> レベル。パーセントとして解釈されます。 既定値は 200.0 (最大ズーム レベルである 200%) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> に使用できる最小の <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> レベルを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> に使用できる最小の <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> レベル。パーセントとして解釈されます。 既定値は 80.0 (最小ズーム レベルである 80%) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.MinZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnApplyTemplate">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnCancelPrintCommand">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> ルーティング イベントが、その経路上でこのクラスに到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントの引数。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnDecreaseZoomCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnFindCommand">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnIncreaseZoomCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> ルーティング イベントを処理します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.KeyEventArgs" /> ルーティング イベントに関連付けられた引数を含む <see cref="E:System.Windows.UIElement.KeyDown" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseWheel" /> ルーティング イベントを処理します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> ルーティング イベントに関連付けられた引数を格納する <see cref="E:System.Windows.UIElement.MouseWheel" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnPrintCommand">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnPrintCompleted">
      <summary>印刷ジョブが完了すると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.Print">
      <summary>標準の [印刷] ダイアログ ボックスを呼び出します。このダイアログ ボックスでは、<see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> のコンテンツの印刷や印刷設定ができます。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Selection">
      <summary>
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> の選択されたコンテンツを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> の選択されたコンテンツ。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush">
      <summary>選択されているテキストを強調表示するブラシを取得または設定します。</summary>
      <returns>選択されているテキストを強調表示するブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacity">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" /> の不透明度を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" /> の不透明度。 既定値は0.4 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacity" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System#IServiceProvider#GetService(System.Type)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="serviceType">取得対象となるサービスの型を指定するオブジェクト。</param>
      <returns>
        <paramref name="serviceType" /> 型のサービス オブジェクト。<paramref name="serviceType" /> 型のサービス オブジェクトがない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document" /> プロパティを使用して、<see cref="T:System.Windows.Documents.FlowDocument" /> を <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> の子コンテンツとして追加します。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility">
      <summary>垂直スクロール バーが表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom">
      <summary>現在のズーム レベルを取得または設定します。</summary>
      <returns>現在のズーム レベルはパーセンテージとして解釈されます 既定値は 100.0 (ズーム レベルは 100%) です。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement">
      <summary>ズーム インクリメントを取得または設定します。</summary>
      <returns>現在のズーム インクリメントはパーセンテージとして解釈されます 既定値は 10.0 です (ズームは 10% ずつインクリメントされます)。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.ZoomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Frame">
      <summary>フレームは、ナビゲーションをサポートするコンテンツ コントロールです。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>
        <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクトを格納しているエントリを "戻る" ナビゲーション履歴に追加します。</summary>
      <param name="state">特定のコンテンツ フラグメントに関連付けられたアプリケーション定義の状態を表す <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクト。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> が <see langword="null" /> です。<see cref="T:System.Windows.Navigation.CustomContentState" /> から <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" /> オブジェクトが返されませんでした。</exception>
    </member>
    <member name="M:System.Windows.Controls.Frame.AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Controls.Frame.BackStack">
      <summary>
        <see cref="T:System.Collections.IEnumerable" /> の "戻る" ナビゲーション履歴のエントリを列挙するために使用される <see cref="T:System.Windows.Controls.Frame" /> を返します。</summary>
      <returns>1 つ以上のエントリが "戻る" ナビゲーション履歴に追加されている場合は <see cref="T:System.Collections.IEnumerable" />。 エントリがない場合や、<see cref="T:System.Windows.Controls.Frame" /> に独自のナビゲーション履歴がない場合、<see cref="P:System.Windows.Controls.Frame.BackStack" /> は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.BackStackProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Frame.BackStack" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.BaseUri">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" />の基本 Uniform Resource Identifier (URI) を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Frame" /> コントロールのベース URI (uniform resource identifier)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.CanGoBack">
      <summary>"戻る" ナビゲーション履歴にエントリが 1 つ以上あるかどうかを示す値を取得します。</summary>
      <returns>"戻る" ナビゲーション履歴にエントリが 1 つ以上ある場合は <see langword="true" />。"戻る" ナビゲーション履歴にエントリがない場合、または <see cref="T:System.Windows.Controls.Frame" /> に独自のナビゲーション履歴がない場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.CanGoBackProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Frame.CanGoBack" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.CanGoForward">
      <summary>"進む" ナビゲーション履歴にエントリが 1 つ以上あるかどうかを示す値を取得します。</summary>
      <returns>"進む" ナビゲーション履歴にエントリが 1 つ以上ある場合は <see langword="true" />。"進む" ナビゲーション履歴にエントリがない場合、または <see cref="T:System.Windows.Controls.Frame" /> に独自のナビゲーション履歴がない場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.CanGoForwardProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Frame.CanGoForward" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.ContentRendered">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> のコンテンツが描画された後に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.CurrentSource">
      <summary>最後に移動した先のコンテンツの Uniform Resource Identifier (URI) を取得します。</summary>
      <returns>URI を使用して移動した場合は、最後に移動したコンテンツの <see cref="T:System.Uri" />。それ以外の場合は、<see langword="null" />ます。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.ForwardStack">
      <summary>
        <see cref="T:System.Collections.IEnumerable" /> の "進む" ナビゲーション履歴のエントリを列挙するために使用される <see cref="T:System.Windows.Controls.Frame" /> を取得します。</summary>
      <returns>"進む" ナビゲーション履歴に 1 つ以上のエントリが追加されている場合は <see cref="T:System.Collections.IEnumerable" /> オブジェクト。"進む" ナビゲーション履歴にエントリがない場合、または <see cref="T:System.Windows.Controls.Frame" /> に独自のナビゲーション履歴がない場合は <see langword="null" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.ForwardStackProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Frame.ForwardStack" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.FragmentNavigation">
      <summary>コンテンツ フラグメントへのナビゲーションが開始されると発生します。目的のフラグメントが現在のコンテンツにある場合は直ちに発生し、目的のフラグメントが別のコンテンツにある場合はソース XAML コンテンツが読み込まれた後に発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.GoBack">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> で独自のナビゲーション履歴を管理している場合に、"戻る" ナビゲーション履歴の最新の項目に移動します。</summary>
      <exception cref="T:System.InvalidOperationException">"戻る" ナビゲーション履歴にエントリがないときに <see cref="M:System.Windows.Controls.Frame.GoBack" /> が呼び出されました。</exception>
    </member>
    <member name="M:System.Windows.Controls.Frame.GoForward">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> で独自のナビゲーション履歴を管理している場合に、"進む" ナビゲーション履歴の最新の項目に移動します。</summary>
      <exception cref="T:System.InvalidOperationException">"戻る" ナビゲーション履歴にエントリがないときに <see cref="M:System.Windows.Controls.Frame.GoForward" /> が呼び出されました。</exception>
    </member>
    <member name="P:System.Windows.Controls.Frame.JournalOwnership">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> が独自のナビゲーション履歴を管理するか、ナビゲーション履歴の管理を親ナビゲーター (<see cref="T:System.Windows.Navigation.NavigationWindow" />、<see cref="T:System.Windows.Controls.Frame" />) に任せるかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Navigation.JournalOwnership" /> が独自の履歴を管理するかどうかを指定する <see cref="T:System.Windows.Controls.Frame" /> 値。 既定値は <see cref="F:System.Windows.Navigation.JournalOwnership.Automatic" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.JournalOwnershipProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.LoadCompleted">
      <summary>移動先のコンテンツが読み込まれ、解析されて、描画が開始されると発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Object)">
      <summary>オブジェクトに格納されているコンテンツに非同期に移動します。</summary>
      <param name="content">移動先のコンテンツを格納している <see cref="T:System.Object" />。</param>
      <returns>ナビゲーションがキャンセルされない場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Object,System.Object)">
      <summary>オブジェクトに格納されているコンテンツに非同期に移動して、ナビゲーション中の処理に使用するデータを格納しているオブジェクトを渡します。</summary>
      <param name="content">移動先のコンテンツを格納している <see cref="T:System.Object" />。</param>
      <param name="extraData">ナビゲーション中の処理に使用するデータを格納している <see cref="T:System.Object" />。</param>
      <returns>ナビゲーションがキャンセルされない場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Uri)">
      <summary>Uniform Resource Identifier (URI) で指定されたコンテンツに非同期に移動します。</summary>
      <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
      <returns>ナビゲーションがキャンセルされない場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Uri,System.Object)">
      <summary>Uniform Resource Identifier (URI) にあるソース コンテンツに非同期に移動して、ナビゲーション中の処理に使用するデータを格納しているオブジェクトを渡します。</summary>
      <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
      <param name="extraData">ナビゲーション中の処理に使用するデータを格納している <see cref="T:System.Object" />。</param>
      <returns>ナビゲーションがキャンセルされない場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.Controls.Frame.Navigated">
      <summary>移動先のコンテンツが見つかったときに発生します。この時点で <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティからコンテンツを取得できますが、読み込みはまだ完了していない可能性があります。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.Navigating">
      <summary>新しいナビゲーションが要求されたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationFailed">
      <summary>要求されたコンテンツにナビゲートするときにエラーが発生したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationProgress">
      <summary>ナビゲーション進行状況の情報提供を目的として、ダウンロード中に定期的に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.NavigationService">
      <summary>ナビゲーション サービスを提供するためにこの <see cref="T:System.Windows.Navigation.NavigationService" /> によって使用される <see cref="T:System.Windows.Controls.Frame" /> を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.Frame" /> で使用されているナビゲーション サービスがある場合は、その <see cref="T:System.Windows.Navigation.NavigationService" /> を表す <see cref="T:System.Windows.Controls.Frame" /> オブジェクト。 それ以外の場合は、<see langword="null" /> が返されます。</returns>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationStopped">
      <summary>
        <see cref="M:System.Windows.Controls.Frame.StopLoading" /> メソッドが呼び出されたときや、現在のナビゲーションの進行中に新しいナビゲーションが要求されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.NavigationUIVisibility">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> のナビゲーション UI がいつ表示されるかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Frame" /> がナビゲーション UI を表示できるタイミングを指定する <see cref="T:System.Windows.Navigation.NavigationUIVisibility" /> 値。 既定値は <see cref="F:System.Windows.Navigation.NavigationUIVisibility.Automatic" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.NavigationUIVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnApplyTemplate">
      <summary>ビジュアル ツリーのテンプレート生成が作成されると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnContentRendered(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.Frame.ContentRendered" /> イベントを発生させます。</summary>
      <param name="args">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> に対応する <see cref="T:System.Windows.Controls.Frame" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> に対応する <see cref="T:System.Windows.Controls.Frame" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Refresh">
      <summary>現在のコンテンツを再度読み込みます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.RemoveBackEntry">
      <summary>"戻る" 履歴から最新の履歴項目を削除します。</summary>
      <returns>"戻る" ナビゲーション履歴の最新の <see cref="T:System.Windows.Navigation.JournalEntry" /> (存在する場合)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.SandboxExternalContent">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> で外部の Extensible Application Markup Language (XAML) コンテンツが、(既定の<see langword="Internet" /> アクセス許可セットを持つ) 部分信頼のセキュリティ サンドボックス内に分離されるかどうかを取得または設定します。</summary>
      <returns>コンテンツが部分信頼セキュリティ サンドボックス内に分離される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.Security.SecurityException">アプリケーションが部分信頼で実行されているときに、<see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" /> が設定されています。</exception>
    </member>
    <member name="F:System.Windows.Controls.Frame.SandboxExternalContentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.ShouldSerializeContent">
      <summary>派生クラスに対し、<see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティのシリアル化動作の決定を許可します。</summary>
      <returns>コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.Source">
      <summary>現在のコンテンツの Uniform Resource Identifier (URI) (移動中の場合は移動先の新しいコンテンツの URI) を取得または設定します。</summary>
      <returns>現在のコンテンツの URI、または現在ナビゲートされているコンテンツを格納している <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Frame.Source" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.StopLoading">
      <summary>現在のナビゲーション要求に対応するコンテンツのダウンロードを中止します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.System#Windows#Markup#IUriContext#BaseUri">
      <summary>このメンバーの詳細については、「<see cref="P:System.Windows.Markup.IUriContext.BaseUri" />」をご覧ください。</summary>
      <returns>現在のコンテキストのベース URI。</returns>
    </member>
    <member name="T:System.Windows.Controls.Grid">
      <summary>行と列で構成される柔軟性のあるグリッド領域を定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 要素のコンテンツを配置します。</summary>
      <param name="arrangeSize">この <see cref="T:System.Windows.Controls.Grid" /> 要素が子要素を配置するために使用するサイズを指定します。</param>
      <returns>このグリッド要素およびその子要素の配置後のサイズを表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.Column">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 内のどの列の子コンテンツを表示するかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnDefinitions">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> の、このインスタンスで定義されている <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Grid" /> の、このインスタンスで定義されている <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.Column" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnSpan">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 内の子コンテンツの列の総数範囲を示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnSpanProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumn(System.Windows.UIElement)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.Column" /> 添付プロパティの値を、指定した <see cref="T:System.Windows.UIElement" /> から取得します。</summary>
      <param name="element">プロパティ値の読み取り元となる要素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Column" /> 添付プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumnSpan(System.Windows.UIElement)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 添付プロパティの値を、指定した <see cref="T:System.Windows.UIElement" /> から取得します。</summary>
      <param name="element">プロパティ値の読み取り元となる要素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 添付プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetIsSharedSizeScope(System.Windows.UIElement)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 添付プロパティの値を、指定した <see cref="T:System.Windows.UIElement" /> から取得します。</summary>
      <param name="element">プロパティ値の読み取り元となる要素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 添付プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRow(System.Windows.UIElement)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.Row" /> 添付プロパティの値を、指定した <see cref="T:System.Windows.UIElement" /> から取得します。</summary>
      <param name="element">プロパティ値の読み取り元となる要素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Row" /> 添付プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRowSpan(System.Windows.UIElement)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 添付プロパティの値を、指定した <see cref="T:System.Windows.UIElement" /> から取得します。</summary>
      <param name="element">プロパティ値の読み取り元となる要素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 添付プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetVisualChild(System.Int32)">
      <summary>指定した <paramref name="index" /> 位置にある子 <see cref="T:System.Windows.Media.Visual" /> を取得します。</summary>
      <param name="index">目的の <see cref="T:System.Windows.Media.Visual" /> の 0 から始まるインデックス位置。</param>
      <returns>指定した <paramref name="index" /> 位置にある子 <see cref="T:System.Windows.Media.Visual" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.IsSharedSizeScope">
      <summary>複数の <see cref="T:System.Windows.Controls.Grid" /> 要素がサイズ情報を共有することを示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Grid.IsSharedSizeScopeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Grid.LogicalChildren">
      <summary>この <see cref="T:System.Windows.Controls.Grid" /> の論理的な子を反復処理できる列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> が渡される間、配置を予測して <see cref="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)" /> の子を測定します。</summary>
      <param name="constraint">超えることができない上限のサイズを指定します。</param>
      <returns>子コンテンツを配置するのに必要なサイズを表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 要素のビジュアル子が変更されると呼び出されます。</summary>
      <param name="visualAdded">追加されたビジュアル子を識別します。</param>
      <param name="visualRemoved">削除されたビジュアル子を識別します。</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.Row">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 内のどの行の子コンテンツを表示するかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowDefinitions">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> の、このインスタンスで定義されている <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Grid" /> のこのインスタンスで定義されている <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.Row" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowSpan">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 内の子コンテンツの行の総数範囲を示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowSpanProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumn(System.Windows.UIElement,System.Int32)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.Column" /> 添付プロパティの値を所定の <see cref="T:System.Windows.UIElement" /> に設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Grid.Column" /> 添付プロパティを設定する要素。</param>
      <param name="value">設定するプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumnSpan(System.Windows.UIElement,System.Int32)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 添付プロパティの値を所定の <see cref="T:System.Windows.UIElement" /> に設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 添付プロパティを設定する要素。</param>
      <param name="value">設定するプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetIsSharedSizeScope(System.Windows.UIElement,System.Boolean)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 添付プロパティの値を所定の <see cref="T:System.Windows.UIElement" /> に設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 添付プロパティを設定する要素。</param>
      <param name="value">設定するプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRow(System.Windows.UIElement,System.Int32)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.Row" /> 添付プロパティの値を所定の <see cref="T:System.Windows.UIElement" /> に設定します。</summary>
      <param name="element">添付プロパティを設定する要素。</param>
      <param name="value">設定するプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRowSpan(System.Windows.UIElement,System.Int32)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 添付プロパティの値を所定の <see cref="T:System.Windows.UIElement" /> に設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 添付プロパティを設定する要素。</param>
      <param name="value">設定するプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.ShouldSerializeColumnDefinitions">
      <summary>この <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> のインスタンスに関連付けられている <see cref="T:System.Windows.Controls.Grid" /> が空でない場合に true を返します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.Grid" /> のインスタンスに関連付けられている <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> が空でない場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.ShouldSerializeRowDefinitions">
      <summary>この <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> のインスタンスに関連付けられている <see cref="T:System.Windows.Controls.Grid" /> が空でない場合に true を返します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.Grid" /> のインスタンスに関連付けられている <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> が空でない場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ShowGridLines">
      <summary>この <see cref="T:System.Windows.Controls.Grid" /> の中でグリッド線が表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>グリッド線が表示される場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ShowGridLinesProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.ShowGridLines" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.VisualChildrenCount">
      <summary>この <see cref="T:System.Windows.Media.Visual" /> のインスタンス内の <see cref="T:System.Windows.Controls.Grid" /> 子の合計数を表す値を取得します。</summary>
      <returns>子 <see cref="T:System.Int32" /> オブジェクトの合計数を表す <see cref="T:System.Windows.Media.Visual" />。 既定値は 0 です。</returns>
    </member>
    <member name="T:System.Windows.Controls.GridResizeBehavior">
      <summary>
        <see cref="T:System.Windows.Controls.GridSplitter" /> コントロールでサイズを変更する行または列を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.BasedOnAlignment">
      <summary>領域は、<see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> プロパティと <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> プロパティの値に基づいて再配分されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.CurrentAndNext">
      <summary>水平の <see cref="T:System.Windows.Controls.GridSplitter" /> の場合、<see cref="T:System.Windows.Controls.GridSplitter" /> に対して指定されている行と、すぐ下にある行の間の領域が再配分されます。 垂直の <see cref="T:System.Windows.Controls.GridSplitter" /> の場合、<see cref="T:System.Windows.Controls.GridSplitter" /> に対して指定されている列と、すぐ右にある列の間の領域が再配分されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.PreviousAndCurrent">
      <summary>水平の <see cref="T:System.Windows.Controls.GridSplitter" /> の場合、<see cref="T:System.Windows.Controls.GridSplitter" /> に対して指定されている行と、すぐ上にある行の間の領域が再配分されます。 垂直の <see cref="T:System.Windows.Controls.GridSplitter" /> の場合、<see cref="T:System.Windows.Controls.GridSplitter" /> に対して指定されている列と、すぐ左にある列の間の領域が再配分されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.PreviousAndNext">
      <summary>水平の <see cref="T:System.Windows.Controls.GridSplitter" /> の場合、<see cref="T:System.Windows.Controls.GridSplitter" /> に対して指定されている行より上にある行と下にある行の間の領域が再配分されます。 垂直の <see cref="T:System.Windows.Controls.GridSplitter" /> の場合、<see cref="T:System.Windows.Controls.GridSplitter" /> に対して指定されている列より左にある列と右にある列の間の領域が再配分されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridResizeDirection">
      <summary>
        <see cref="T:System.Windows.Controls.GridSplitter" /> コントロールが領域を行間または列間のどちらで再配分するかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeDirection.Auto">
      <summary>領域は、<see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> の <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" />、<see cref="P:System.Windows.FrameworkElement.ActualWidth" />、<see cref="P:System.Windows.FrameworkElement.ActualHeight" />、<see cref="T:System.Windows.Controls.GridSplitter" /> の各プロパティの値に基づいて再配分されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeDirection.Columns">
      <summary>領域が列間で再配分されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeDirection.Rows">
      <summary>領域が行間で再配分されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridSplitter">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> コントロールの行間または列間のスペースを再配分するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.GridSplitter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.DragIncrement">
      <summary>
        <see cref="T:System.Windows.Controls.GridSplitter" /> コントロール付きの行または列のサイズを変更するために、ユーザーがマウスをドラッグする必要のある最小の距離を取得または設定します。</summary>
      <returns>行または列のサイズを変更するためにユーザーがマウスで <see cref="T:System.Windows.Controls.GridSplitter" /> をドラッグする必要のある最小の距離を表す値。 既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.DragIncrementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridSplitter.DragIncrement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.KeyboardIncrement">
      <summary>方向キーを押すたびに <see cref="T:System.Windows.Controls.GridSplitter" /> コントロールが移動する距離を取得または設定します。</summary>
      <returns>方向キーを押すたびに <see cref="T:System.Windows.Controls.GridSplitter" /> が移動する距離。 既定値は 10 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.KeyboardIncrementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridSplitter.KeyboardIncrement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> コントロールの <see cref="T:System.Windows.Controls.GridSplitter" /> の実装を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> コントロールの新しい <see cref="T:System.Windows.Controls.ToolTip" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>キーが押されるときに呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.GridSplitter" /> コントロールがキーボード フォーカスを失うと呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
        <see cref="T:System.Windows.Controls.GridSplitter" /> コントロールの寸法の変更に応答します。</summary>
      <param name="sizeInfo">
        <see cref="T:System.Windows.Controls.GridSplitter" /> のサイズの変更に関する情報。</param>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.PreviewStyle">
      <summary>
        <see cref="T:System.Windows.Controls.GridSplitter" /> プロパティが <see langword="true" /> に設定されているときに表示される <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> コントロールのプレビュー インジケーターの外観、効果、およびその他のスタイル特性をカスタマイズするスタイルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Style" /> コントロールを移動する際に <see cref="T:System.Windows.Controls.Grid" /> 寸法の可能性のある変更を示すプレビュー インジケーターの <see cref="T:System.Windows.Controls.GridSplitter" /> を返します。 既定値は、現在のテーマが提供するスタイルです。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.PreviewStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridSplitter.PreviewStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ResizeBehavior">
      <summary>
        <see cref="T:System.Windows.Controls.GridSplitter" /> コントロールが定義されている列または行からの相対位置として、どの列または行がサイズ変更されるかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.GridSplitter" /> コントロールによってどの列または行がサイズ変更されるかを示す列挙値のいずれか。 既定値は、<see cref="F:System.Windows.Controls.GridResizeBehavior.BasedOnAlignment" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ResizeBehaviorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridSplitter.ResizeBehavior" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ResizeDirection">
      <summary>
        <see cref="T:System.Windows.Controls.GridSplitter" /> コントロールで行や列のサイズを変更するかどうかを示す値を取得または設定します。</summary>
      <returns>行や列のサイズを変更するかどうかを指定する列挙値の 1 つ。 既定値は、<see cref="F:System.Windows.Controls.GridResizeDirection.Auto" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ResizeDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridSplitter.ResizeDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ShowsPreview">
      <summary>ユーザーがコントロールをドラッグするときに <see cref="T:System.Windows.Controls.GridSplitter" /> コントロールが行または列のサイズを更新するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.GridSplitter" /> プレビューを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ShowsPreviewProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridView">
      <summary>
        <see cref="T:System.Windows.Controls.ListView" /> コントロールの列にデータ項目を表示する表示モードを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridView.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.GridView" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridView.AddChild(System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> オブジェクトを <see cref="T:System.Windows.Controls.GridView" /> に追加します。</summary>
      <param name="column">追加する列</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.AddText(System.String)">
      <summary>サポートされていません。</summary>
      <param name="text">テキスト文字列</param>
    </member>
    <member name="P:System.Windows.Controls.GridView.AllowsColumnReorder">
      <summary>
        <see cref="T:System.Windows.Controls.GridView" /> の列をドラッグ アンド ドロップ操作で並べ替えることができるかどうかを取得または設定します。</summary>
      <returns>列を並べ替えることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.AllowsColumnReorderProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridView.AllowsColumnReorder" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridView.ClearItem(System.Windows.Controls.ListViewItem)">
      <summary>設定、バインディング、およびスタイル設定を <see cref="T:System.Windows.Controls.ListViewItem" /> からすべて削除します。</summary>
      <param name="item">消去する <see cref="T:System.Windows.Controls.ListViewItem" />。</param>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnCollection">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> を含む添付プロパティを取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnCollectionProperty">
      <summary>
        <see cref="F:System.Windows.Controls.GridView.ColumnCollectionProperty" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderContainerStyle">
      <summary>列ヘッダーに適用するスタイルを取得または設定します。</summary>
      <returns>列ヘッダーの表示プロパティを定義するために使用される <see cref="T:System.Windows.Style" />。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderContainerStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridView.ColumnHeaderContainerStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderContextMenu">
      <summary>
        <see cref="T:System.Windows.Controls.ContextMenu" /> の <see cref="T:System.Windows.Controls.GridView" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ContextMenu" /> の列ヘッダーの <see cref="T:System.Windows.Controls.GridView" />。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderContextMenuProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridView.ColumnHeaderContextMenu" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderStringFormat">
      <summary>
        <see cref="T:System.Windows.Controls.GridView" /> の列ヘッダーが文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.GridView" /> の列ヘッダーが文字列として表示される場合に、その書式を指定する複合文字列。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderStringFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridView.ColumnHeaderStringFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderTemplate">
      <summary>列ヘッダーを表示するために使用するテンプレートを取得または設定します。</summary>
      <returns>列ヘッダーを <see cref="T:System.Windows.DataTemplate" /> の一部として表示するために使用する <see cref="T:System.Windows.Controls.GridView" />。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridView.ColumnHeaderTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderTemplateSelector">
      <summary>各列ヘッダーに対して使用するテンプレートを選択するためのロジックを提供するセレクター オブジェクトを取得または設定します。</summary>
      <returns>各列ヘッダーに対して使用するデータ テンプレートを決定する <see cref="T:System.Windows.Controls.DataTemplateSelector" /> オブジェクト。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridView.ColumnHeaderTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderToolTip">
      <summary>いずれかの列ヘッダーの上にマウス ポインターを置いたときに表示されるツールヒントのコンテンツを取得または設定します。</summary>
      <returns>いずれかの列ヘッダーの上にマウス ポインターを置いたときにツールヒントとして表示されるコンテンツ表すオブジェクト。 既定値は定義されていません。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderToolTipProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridView.ColumnHeaderToolTip" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.Columns">
      <summary>この <see cref="T:System.Windows.Controls.GridViewColumn" /> に対して定義されている <see cref="T:System.Windows.Controls.GridView" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.GridView" /> の列のコレクション。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.DefaultStyleKey">
      <summary>
        <see cref="T:System.Windows.Controls.GridView" /> の既定のスタイルへの参照を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridView.GridViewStyleKey" />。 既定値は、現在のテーマの <see cref="P:System.Windows.Controls.GridView.GridViewStyleKey" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.GetAutomationPeer(System.Windows.Controls.ListView)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクトの <see cref="T:System.Windows.Controls.GridView" /> の実装を取得します。</summary>
      <param name="parent">この <see cref="T:System.Windows.Controls.ListView" /> ビューを実装する <see cref="T:System.Windows.Controls.GridView" /> コントロール。</param>
      <returns>この <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" /> の <see cref="T:System.Windows.Controls.GridView" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.GetColumnCollection(System.Windows.DependencyObject)">
      <summary>
        <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> 添付プロパティの内容を取得します。</summary>
      <param name="element">コレクションに関連付けられている <see cref="T:System.Windows.DependencyObject" />。</param>
      <returns>指定した <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> の <see cref="T:System.Windows.DependencyObject" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey">
      <summary>
        <see cref="T:System.Windows.Controls.ListViewItem" /> 内の各 <see cref="T:System.Windows.Controls.GridView" /> に対して定義されたスタイルを参照するキーを取得します。</summary>
      <returns>各 <see cref="T:System.Windows.ResourceKey" /> のスタイルを参照する <see cref="T:System.Windows.Controls.ListViewItem" />。 既定値は、現在のテーマの <see cref="T:System.Windows.Controls.ListViewItem" /> コントロールの既定のスタイルを参照します。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.GridViewScrollViewerStyleKey">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> によって表示されるコンテンツを囲む <see cref="T:System.Windows.Controls.GridView" /> コントロールに対して定義されたスタイルを参照するキーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Style" /> コントロールに適用される <see cref="T:System.Windows.Controls.ScrollViewer" /> を参照する <see cref="T:System.Windows.Controls.GridView" />。 既定値は、現在のテーマの <see cref="T:System.Windows.Controls.ScrollViewer" /> の <see cref="T:System.Windows.Controls.ListView" /> オブジェクトのスタイルです。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.GridViewStyleKey">
      <summary>
        <see cref="T:System.Windows.Controls.GridView" /> に対して定義されたスタイルを参照するキーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.ResourceKey" /> に適用される <see cref="T:System.Windows.Style" /> を参照する <see cref="T:System.Windows.Controls.GridView" />。 既定値は、現在のテーマの <see cref="T:System.Windows.Controls.ListView" /> のスタイルです。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.ItemContainerDefaultStyleKey">
      <summary>
        <see cref="T:System.Windows.Controls.GridView" /> 内のデータ項目のコンテナーの既定のスタイルへの参照を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey" />。 既定値は、現在のテーマの <see cref="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.PrepareItem(System.Windows.Controls.ListViewItem)">
      <summary>この <see cref="T:System.Windows.Controls.ListViewItem" /> オブジェクトの定義に従って表示するために、<see cref="T:System.Windows.Controls.GridView" /> を準備します。</summary>
      <param name="item">表示する <see cref="T:System.Windows.Controls.ListViewItem" />。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.SetColumnCollection(System.Windows.DependencyObject,System.Windows.Controls.GridViewColumnCollection)">
      <summary>
        <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> 添付プロパティの内容を設定します。</summary>
      <param name="element">
        <see cref="T:System.Windows.Controls.GridView" /> オブジェクト。</param>
      <param name="collection">割り当てる <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.ShouldSerializeColumnCollection(System.Windows.DependencyObject)">
      <summary>
        <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> 添付プロパティをシリアル化するかどうかを決定します。</summary>
      <param name="obj">
        <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> が設定されたオブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> をシリアル化する必要がある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="column">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.GridView" /> オブジェクトの文字列表現を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.GridView" /> の列の数を示す文字列。</returns>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumn">
      <summary>データを表示する列を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.ActualWidth">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> の実際の幅を取得します。</summary>
      <returns>列の現在の幅です。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.CellTemplate">
      <summary>列のセルの内容を表示するために使用するテンプレートを取得または設定します。</summary>
      <returns>列のセルの書式設定に使用される <see cref="T:System.Windows.DataTemplate" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.CellTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewColumn.CellTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector">
      <summary>列のセルの表示に使用するテンプレートを決定する <see cref="T:System.Windows.Controls.DataTemplateSelector" /> を取得または設定します。</summary>
      <returns>列のセルの <see cref="T:System.Windows.Controls.DataTemplateSelector" /> を選択できるようにする <see cref="T:System.Windows.DataTemplate" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.DisplayMemberBinding">
      <summary>この列にバインドするデータ項目を取得または設定します。</summary>
      <returns>列に表示される指定したデータ項目の型。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.Header">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> のヘッダーの内容を取得または設定します。</summary>
      <returns>列ヘッダーに使用するオブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> のヘッダーに使用するスタイルを取得または設定します。</summary>
      <returns>列ヘッダーの表示プロパティを定義する <see cref="T:System.Windows.Style" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> プロパティが文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> プロパティが文字列として表示される場合に、その書式を指定する複合文字列。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderTemplate">
      <summary>列ヘッダーの内容の表示に使用するテンプレートを取得または設定します。</summary>
      <returns>列ヘッダーの表示に使用する <see cref="T:System.Windows.DataTemplate" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector">
      <summary>列ヘッダーの表示に使用するテンプレートを選択するためのロジックを提供する、<see cref="T:System.Windows.Controls.DataTemplateSelector" /> を取得または設定します。</summary>
      <returns>各 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> のデータ テンプレートを選択できるようにする <see cref="T:System.Windows.Controls.GridViewColumn" /> オブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> プロパティが変更されたときに発生します。</summary>
      <param name="oldHeaderStringFormat">
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> プロパティの変更前の値。</param>
      <param name="newHeaderStringFormat">
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.GridViewColumn.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="E:System.Windows.Controls.GridViewColumn.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> プロパティの値が変化したときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> の文字列形式を作成します。</summary>
      <returns>オブジェクトを <see cref="T:System.Windows.Controls.GridViewColumn" /> オブジェクトとして識別し、<see cref="P:System.Windows.Controls.GridViewColumn.Header" /> プロパティの値を表示する文字列。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.Width">
      <summary>列の幅を取得または設定します。</summary>
      <returns>列の幅。 既定値は <see cref="F:System.Double.NaN" /> です。この値を指定すると、列ヘッダー以外で最も大きな列項目に合わせて、列のサイズが自動的に調整されます。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.WidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewColumn.Width" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumnCollection">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.ClearItems">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> からすべての <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> オブジェクトを削除します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.InsertItem(System.Int32,System.Windows.Controls.GridViewColumn)">
      <summary>コレクション内の指定したインデックス位置に、<see cref="T:System.Windows.Controls.GridViewColumn" /> を追加します。</summary>
      <param name="index">新しい <see cref="T:System.Windows.Controls.GridViewColumn" /> を配置する位置。</param>
      <param name="column">挿入する <see cref="T:System.Windows.Controls.GridViewColumn" />。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.MoveItem(System.Int32,System.Int32)">
      <summary>コレクション内での <see cref="T:System.Windows.Controls.GridViewColumn" /> の位置を変更します。</summary>
      <param name="oldIndex">
        <see cref="T:System.Windows.Controls.GridViewColumn" /> の元の位置。</param>
      <param name="newIndex">
        <see cref="T:System.Windows.Controls.GridViewColumn" /> の新しい位置。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> が変更された場合に <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> イベントを発生させます。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.RemoveItem(System.Int32)">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> 内の指定したインデックス位置から <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> を削除します。</summary>
      <param name="index">削除する <see cref="T:System.Windows.Controls.GridViewColumn" /> の位置。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.SetItem(System.Int32,System.Windows.Controls.GridViewColumn)">
      <summary>指定したインデックス位置にある <see cref="T:System.Windows.Controls.GridViewColumn" /> を、別の <see cref="T:System.Windows.Controls.GridViewColumn" /> で置き換えます。</summary>
      <param name="index">新しい <see cref="T:System.Windows.Controls.GridViewColumn" /> で古い <see cref="T:System.Windows.Controls.GridViewColumn" /> を置き換える位置。</param>
      <param name="column">指定した位置に配置する <see cref="T:System.Windows.Controls.GridViewColumn" />。</param>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumnHeader">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> の列ヘッダーを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumnHeader.Column">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumn" /> に関連付けられている <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> に関連付けられた <see cref="T:System.Windows.Controls.GridViewColumn" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeader.ColumnProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewColumnHeader.Column" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> の <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> が押されると、応答します。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnApplyTemplate">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> のビジュアル ツリーの作成に応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnClick">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> の <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> イベントのクラス処理を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 実装を提供します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> の <see cref="T:System.Windows.Controls.GridViewColumnHeader" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> の <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>ユーザーが <see cref="E:System.Windows.UIElement.MouseEnter" /> にマウス ポインターを置いたときの <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeave" /> からマウスが離れたときの <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> の上にマウス ポインターがある間に、ユーザーがマウスの左ボタンを押したときの <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> の上にマウス ポインターがある間に、ユーザーがマウスの左ボタンを離したときの <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>ユーザーが <see cref="E:System.Windows.UIElement.MouseMove" /> 内でマウスを動かしたときに発生する、<see cref="T:System.Windows.Controls.GridViewColumnHeader" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> の寸法の変更に応答します。</summary>
      <param name="sizeInfo">
        <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> のサイズの変更に関する情報。</param>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumnHeader.Role">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> の役割を取得します。</summary>
      <returns>列の現在の役割を指定する <see cref="T:System.Windows.Controls.GridViewColumnHeaderRole" /> 列挙値。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeader.RoleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewColumnHeader.Role" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary>
        <see cref="T:System.Windows.DependencyProperty" /> をシリアル化するかどうかを決定します。</summary>
      <param name="dp">依存関係プロパティ。</param>
      <returns>
        <see cref="T:System.Windows.DependencyProperty" /> をシリアル化する必要がある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumnHeaderRole">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> コントロールの状態またはロールを定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Floating">
      <summary>列ヘッダーは、列を移動するドラッグ アンド ドロップ操作のオブジェクトです。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Normal">
      <summary>列ヘッダーは、関連付けられた列の上に表示されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Padding">
      <summary>列ヘッダーは、列ヘッダーの行にある最後のヘッダーであり、パディングに使用されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridViewHeaderRowPresenter">
      <summary>列見出しの行のレイアウトを定義するオブジェクトを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorder">
      <summary>列の位置を変更できるかどうかを示す値を取得または設定します。</summary>
      <returns>列ヘッダーのドラッグ アンド ドロップ操作によって列を移動できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorderProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorder" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>ヘッダー列要素のコンテンツを配置し、ヘッダー列の実際のサイズを計算します。</summary>
      <param name="arrangeSize">列ヘッダー行に使用できる領域。</param>
      <returns>列ヘッダー行の実際の <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyle">
      <summary>列ヘッダーに使用する <see cref="T:System.Windows.Style" /> を取得または設定します。</summary>
      <returns>列ヘッダー コンテナーに使用する <see cref="T:System.Windows.Style" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenu">
      <summary>列ヘッダーの <see cref="T:System.Windows.Controls.ContextMenu" /> を取得または設定します。</summary>
      <returns>列ヘッダー行の <see cref="T:System.Windows.Controls.ContextMenu" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenuProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenu" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat">
      <summary>列ヘッダーが文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
      <returns>列ヘッダーが文字列として表示される場合に、その書式を指定する複合文字列。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate">
      <summary>列ヘッダーを表示するために使用するテンプレートを取得または設定します。</summary>
      <returns>列ヘッダーの内容の表示に使用する <see cref="T:System.Windows.DataTemplate" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelector">
      <summary>列ヘッダーの表示に使用するデータ テンプレートを選択するためのロジックを提供する <see cref="T:System.Windows.Controls.DataTemplateSelector" /> を取得または設定します。</summary>
      <returns>各列ヘッダーの表示に使用する <see cref="T:System.Windows.Controls.DataTemplateSelector" /> を選択する <see cref="T:System.Windows.DataTemplate" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTip">
      <summary>列ヘッダー行のツールヒントのコンテンツを取得または設定します。</summary>
      <returns>列ヘッダーのツールヒントのコンテンツを表すオブジェクト。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTipProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTip" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.MeasureOverride(System.Windows.Size)">
      <summary>列ヘッダー行の表示に必要な領域を決定します。</summary>
      <param name="constraint">列ヘッダー行の表示に使用できる領域の大きさ。</param>
      <returns>列ヘッダー行に必要な <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnCreateAutomationPeer">
      <summary>列ヘッダー行の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクトを作成します。</summary>
      <returns>この列ヘッダー行の <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostMouseCapture" /> の <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> イベントに対するクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>ユーザーが <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 内でマウスの左ボタンを押したときに発生する <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> イベントに対するクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>ユーザーが マウスの左ボタンを離したときに発生する <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントに対するクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>ユーザーがマウスを動かしたときに発生する <see cref="E:System.Windows.UIElement.MouseMove" /> イベントに対するクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.GridViewRowPresenter">
      <summary>データ行のレイアウトを指定するオブジェクトを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewRowPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>対応する <see cref="T:System.Windows.Controls.GridViewColumn" /> オブジェクトのサイズに応じて行のコンテンツを配置します。</summary>
      <param name="arrangeSize">
        <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> の表示に使用する領域。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> の表示に使用する実際の <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewRowPresenter.Content">
      <summary>行に表示するデータ コンテンツを取得または設定します。</summary>
      <returns>行のコンテンツを表すオブジェクト。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewRowPresenter.ContentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.MeasureOverride(System.Windows.Size)">
      <summary>行の表示に必要な領域を決定します。</summary>
      <param name="constraint">
        <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> の表示に使用する最大領域。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> を表示する領域の実際の <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.ToString">
      <summary>
        <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> の文字列形式を返します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> を表示する文字列。</returns>
    </member>
    <member name="T:System.Windows.Controls.GroupBox">
      <summary>ユーザー インターフェイス (UI) コンテンツの枠線やヘッダーが設定されたコンテナーを作成するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.GroupBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.GroupBox" /> の <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> が押されると、応答します。</summary>
      <param name="e">イベント情報。</param>
    </member>
    <member name="M:System.Windows.Controls.GroupBox.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> コントロールの <see cref="T:System.Windows.Controls.GroupBox" /> の実装を作成します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /> の <see cref="T:System.Windows.Controls.GroupBox" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.GroupItem">
      <summary>グループ用に生成されたビジュアル サブツリーのルートとして表示されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.GroupItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.GroupItem" /> のコンテンツを配置します。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Controls.GroupItem" /> とその子を配置するために使用される親の末尾の領域。</param>
      <returns>
        <see cref="T:System.Windows.Controls.GroupItem" /> が使用する実際のサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.GroupItem" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.GroupItem" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.GroupItem" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#Clear">
      <summary>プロパティの関連付けをすべてクリアします。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#ClearItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>指定したアイテムとプロパティ間の関連付けを削除します。</summary>
      <param name="item">関連付けられた項目。</param>
      <param name="dp">関連付けられているプロパティ。</param>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#ClearValue(System.Windows.DependencyProperty)">
      <summary>指定されたプロパティをすべてのプロパティ リストから削除します。</summary>
      <param name="dp">削除するプロパティ。</param>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#ReadItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>指定したアイテムに関連付けられた、指定したプロパティの値を返します。</summary>
      <param name="item">指定したプロパティが関連付けられている項目。</param>
      <param name="dp">返す値を持つプロパティ。</param>
      <returns>指定したアイテムに関連付けられた、指定したプロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)">
      <summary>指定したプロパティおよび値を格納し、それらを指定した項目と関連付けます。</summary>
      <param name="item">値およびプロパティを関連付ける項目。</param>
      <param name="dp">指定した項目に関連付けられているプロパティ。</param>
      <param name="value">関連するプロパティの値。</param>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#Constraints">
      <summary>コントロールのビューポートとキャッシュのサイズを表すオブジェクトを取得または設定します。</summary>
      <returns>コントロールのビューポートとキャッシュのサイズを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#HeaderDesiredSizes">
      <summary>コントロールのヘッダーの目的のサイズを表すオブジェクトを取得します。</summary>
      <returns>コントロールのヘッダーの目的のサイズを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#InBackgroundLayout">
      <summary>コントロールのレイアウト パスが低い優先順位で発生するかどうかを示す値を取得します。</summary>
      <returns>コントロールのレイアウト パスが低い優先順位で発生する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemDesiredSizes">
      <summary>コントロールの項目の目的のサイズを表すオブジェクトを取得または設定します。</summary>
      <returns>コントロールの項目の目的のサイズを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemsHost">
      <summary>コントロールの項目を表示する <see cref="T:System.Windows.Controls.Panel" /> を取得します。</summary>
      <returns>コントロールの項目を表示する <see cref="T:System.Windows.Controls.Panel" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#MustDisableVirtualization">
      <summary>所有する <see cref="T:System.Windows.Controls.ItemsControl" /> の項目を仮想化するかどうかを示す値を取得または設定します。</summary>
      <returns>所有する <see cref="T:System.Windows.Controls.ItemsControl" /> がその項目を仮想化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.GroupStyle">
      <summary>レベルごとにグループの外観を定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupStyle.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.GroupStyle" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.AlternationCount">
      <summary>代替 <see cref="T:System.Windows.Controls.GroupItem" /> オブジェクトの数を取得または設定します。</summary>
      <returns>代替 <see cref="T:System.Windows.Controls.GroupItem" /> オブジェクトの数。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.ContainerStyle">
      <summary>項目ごとに生成される <see cref="T:System.Windows.Controls.GroupItem" /> に適用されるスタイルを取得または設定します。</summary>
      <returns>項目ごとに生成される <see cref="T:System.Windows.Controls.GroupItem" /> に適用されるスタイル。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector">
      <summary>生成された各 <see cref="T:System.Windows.Controls.GroupItem" /> に適用するスタイルを選択するためのカスタム ロジックを、アプリケーション作成者が提供できるようにします。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.StyleSelector" /> から派生するオブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.Default">
      <summary>グループの既定のスタイルを取得します。</summary>
      <returns>グループの既定のスタイル。</returns>
    </member>
    <member name="F:System.Windows.Controls.GroupStyle.DefaultGroupPanel">
      <summary>項目のレイアウトに使用するパネルを作成する既定の <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> を識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HeaderStringFormat">
      <summary>ヘッダーが文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
      <returns>ヘッダーが文字列として表示される場合に、その書式を指定する複合文字列。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HeaderTemplate">
      <summary>グループ ヘッダーを表示するために使用するテンプレートを取得または設定します。</summary>
      <returns>グループ ヘッダーを表示するために使用する <see cref="T:System.Windows.DataTemplate" /> オブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector">
      <summary>グループ ヘッダーの表示に使用するテンプレートを選択するためのカスタム ロジックを、アプリケーション作成者が提供できるようにします。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataTemplateSelector" /> から派生するオブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HidesIfEmpty">
      <summary>空のグループに対応する項目が表示されるかどうかを指定する値を取得または設定します。</summary>
      <returns>空のグループを表示しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>指定された引数を使用して、<see cref="E:System.Windows.Controls.GroupStyle.PropertyChanged" /> イベントを発生させます。</summary>
      <param name="e">発生しているイベントの引数。</param>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.Panel">
      <summary>項目のレイアウトに使用するパネルを作成するテンプレートを取得または設定します。</summary>
      <returns>項目のレイアウトに使用するパネルを作成する <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> オブジェクト。</returns>
    </member>
    <member name="E:System.Windows.Controls.GroupStyle.PropertyChanged">
      <summary>プロパティ値が変更するときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.GroupStyle.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>プロパティ値が変更するときに発生します。</summary>
    </member>
    <member name="T:System.Windows.Controls.GroupStyleSelector">
      <summary>親グループおよびそのレベルの関数としてグループ スタイルを選択するために使用されるデリゲート。</summary>
      <param name="group">スタイルが選択されるグループ。</param>
      <param name="level">グループのレベル。</param>
      <returns>適切なグループ スタイル。</returns>
    </member>
    <member name="T:System.Windows.Controls.HeaderedContentControl">
      <summary>単一のコンテンツを含みヘッダーを持つすべてのコントロールの基本実装を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.HeaderedContentControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HasHeader">
      <summary>ヘッダーが <see langword="null" /> であるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> プロパティが <see langword="null" /> でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HasHeaderProperty">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.Header">
      <summary>各コントロールのヘッダーに使用されるデータを取得または設定します。</summary>
      <returns>ヘッダー オブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderProperty">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> プロパティが文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> プロパティが文字列として表示される場合に、その書式を指定する複合文字列。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderStringFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate">
      <summary>コントロールのヘッダーのコンテンツを表示するために使用するテンプレートを取得または設定します。</summary>
      <returns>データ テンプレート。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector">
      <summary>ヘッダーの表示に使用するテンプレートを選択するためのカスタム ロジックを提供する、データ テンプレート セレクターを取得または設定します。</summary>
      <returns>データ テンプレート セレクター オブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.ControlTemplate" /> の論理上の子要素に対する列挙子を取得します。</summary>
      <returns>列挙子。</returns>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> の <see cref="T:System.Windows.Controls.HeaderedContentControl" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldHeader">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> プロパティの古い値。</param>
      <param name="newHeader">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldHeaderStringFormat">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> プロパティの古い値。</param>
      <param name="newHeaderStringFormat">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldHeaderTemplate">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> プロパティの変更前の値。</param>
      <param name="newHeaderTemplate">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldHeaderTemplateSelector">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> プロパティの変更前の値。</param>
      <param name="newHeaderTemplateSelector">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.HeaderedContentControl" /> の文字列形式を提供します。</summary>
      <returns>オブジェクトの文字列形式。</returns>
    </member>
    <member name="T:System.Windows.Controls.HeaderedItemsControl">
      <summary>複数の項目で構成され、ヘッダーを持つコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HasHeader">
      <summary>この <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> にヘッダーがあるかどうかを示す値を取得します。</summary>
      <returns>コントロールにヘッダーがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HasHeaderProperty">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HasHeader" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.Header">
      <summary>コントロールにラベルを付ける項目を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> にラベルを付けるオブジェクト。 既定値は、<see langword="null" /> です。 ヘッダーは、文字列または <see cref="T:System.Windows.UIElement" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderProperty">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> プロパティが文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> プロパティが文字列として表示される場合に、その書式を指定する複合文字列。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate">
      <summary>コントロールのヘッダーのコンテンツを表示するために使用するテンプレートを取得または設定します。</summary>
      <returns>コントロールのヘッダーを表示するために使用するデータ テンプレート。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector">
      <summary>各項目のヘッダーの表示に使用するテンプレートを選択するためのカスタム ロジックを提供するオブジェクトを取得または設定します。</summary>
      <returns>データ テンプレート セレクター。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> の論理上の子要素に対する列挙子を取得します。</summary>
      <returns>列挙子。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> の <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldHeader">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> プロパティの古い値。</param>
      <param name="newHeader">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> プロパティが変更されたときに発生します。</summary>
      <param name="oldHeaderStringFormat">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> プロパティの古い値。</param>
      <param name="newHeaderStringFormat">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldHeaderTemplate">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> プロパティの古い値。</param>
      <param name="newHeaderTemplate">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldHeaderTemplateSelector">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> プロパティの古い値。</param>
      <param name="newHeaderTemplateSelector">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> オブジェクトの文字列表現を返します。</summary>
      <returns>このオブジェクトを表す文字列。</returns>
    </member>
    <member name="T:System.Windows.Controls.HierarchicalVirtualizationConstraints">
      <summary>コントロールのビューポートとキャッシュのサイズを指定します。 この構造体は <see cref="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo" /> インターフェイスで使用します。</summary>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.#ctor(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLengthUnit,System.Windows.Rect)">
      <summary>
        <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cacheLength">ビューポートの前後のキャッシュのサイズ。</param>
      <param name="cacheLengthUnit">
        <see cref="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength" /> プロパティで使用されている単位の型。</param>
      <param name="viewport">ビューポートの前後のキャッシュのサイズ。</param>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength">
      <summary>ビューポートの前後のキャッシュのサイズを取得します。</summary>
      <returns>ビューポートの前後のキャッシュのサイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLengthUnit">
      <summary>
        <see cref="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength" /> プロパティで使用されている単位の型を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength" /> プロパティで使用されている単位の型。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.Equals(System.Object)">
      <summary>指定したオブジェクトがこの <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> と等しいかどうかを示す値を返します。</summary>
      <param name="oCompare">比較対象のオブジェクト。</param>
      <returns>指定したオブジェクトがこの <see langword="true" /> に等しい場合は <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.Equals(System.Windows.Controls.HierarchicalVirtualizationConstraints)">
      <summary>指定した <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> が、この <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> と等しいかどうかを示す値を返します。</summary>
      <param name="comparisonConstraints">比較対象の <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</param>
      <returns>指定した <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> が、この <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.GetHashCode">
      <summary>この <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> のハッシュ コードを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.op_Equality(System.Windows.Controls.HierarchicalVirtualizationConstraints,System.Windows.Controls.HierarchicalVirtualizationConstraints)">
      <summary>指定された <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> オブジェクトが等しいかどうかを示す値を返します。</summary>
      <param name="constraints1">比較対象となる最初の <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</param>
      <param name="constraints2">比較対象となる 2 番目の <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</param>
      <returns>指定した <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationConstraints,System.Windows.Controls.HierarchicalVirtualizationConstraints)">
      <summary>指定された <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> オブジェクトが等しくないかどうかを示す値を返します。</summary>
      <param name="constraints1">比較対象となる最初の <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</param>
      <param name="constraints2">比較対象となる 2 番目の <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />。</param>
      <returns>指定した <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> オブジェクトが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.Viewport">
      <summary>コントロールの項目を表示する領域を取得します。</summary>
      <returns>コントロールの項目を表示する領域。</returns>
    </member>
    <member name="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes">
      <summary>コントロールのヘッダーの目的のサイズをピクセルと論理単位で表します。 この構造体は <see cref="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo" /> インターフェイスで使用します。</summary>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.#ctor(System.Windows.Size,System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="logicalSize">ヘッダーのサイズ (論理単位)。</param>
      <param name="pixelSize">ヘッダーのサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ))。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.Equals(System.Object)">
      <summary>指定されたオブジェクトがこの <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> オブジェクトと等しいかどうかを示す値を返します。</summary>
      <param name="oCompare">比較対象のオブジェクト。</param>
      <returns>このオブジェクトが指定したオブジェクトと同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.Equals(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)">
      <summary>指定された <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> オブジェクトがこの <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> オブジェクトと等しいかどうかを示す値を返します。</summary>
      <param name="comparisonHeaderSizes">比較対象のオブジェクト。</param>
      <returns>このオブジェクトが指定したオブジェクトと同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.GetHashCode">
      <summary>
        <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> のハッシュ コードを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.LogicalSize">
      <summary>ヘッダーのサイズ (論理単位) を取得します。</summary>
      <returns>ヘッダーのサイズ (論理単位)。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.op_Equality(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)">
      <summary>指定された <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> オブジェクトが等しいかどうかを示す値を返します。</summary>
      <param name="headerDesiredSizes1">比較する最初のオブジェクト。</param>
      <param name="headerDesiredSizes2">比較する 2 番目のオブジェクト。</param>
      <returns>指定したオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)">
      <summary>指定された <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> オブジェクトが等しくないかどうかを示す値を返します。</summary>
      <param name="headerDesiredSizes1">比較する最初のオブジェクト。</param>
      <param name="headerDesiredSizes2">比較する 2 番目のオブジェクト。</param>
      <returns>指定したオブジェクトが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.PixelSize">
      <summary>ヘッダーのサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位) を取得します。</summary>
      <returns>ヘッダーのサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ))。</returns>
    </member>
    <member name="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes">
      <summary>デバイスに依存しない単位 (1 単位は 1/96 インチ) および論理ユニットで、コントロールの項目の目的のサイズを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.#ctor(System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="logicalSize">コントロールの子項目のサイズ (論理単位)。</param>
      <param name="logicalSizeInViewport">ビューポートにあるコントロールの子項目のサイズ (論理単位)。</param>
      <param name="logicalSizeBeforeViewport">ビューポート前のキャッシュにあるコントロールの子項目のサイズ (論理単位)。</param>
      <param name="logicalSizeAfterViewport">ビューポート後のキャッシュにあるコントロールの子項目のサイズ (論理単位)。</param>
      <param name="pixelSize">コントロールの子項目のサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ))。</param>
      <param name="pixelSizeInViewport">ビューポートにあるコントロールの子項目のサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ))。</param>
      <param name="pixelSizeBeforeViewport">ビューポート前のキャッシュにあるコントロールの子項目のサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ))。</param>
      <param name="pixelSizeAfterViewport">ビューポートの後にキャッシュにあるコントロールの子項目のサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ))。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.Equals(System.Object)">
      <summary>指定されたオブジェクトがこの <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> オブジェクトと等しいかどうかを示す値を返します。</summary>
      <param name="oCompare">このオブジェクトと比較するオブジェクト。</param>
      <returns>指定したオブジェクトがこの <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> オブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.Equals(System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes)">
      <summary>指定された <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> オブジェクトがこの <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> オブジェクトと等しいかどうかを示す値を返します。</summary>
      <param name="comparisonItemSizes">このオブジェクトと比較するオブジェクト。</param>
      <returns>指定したオブジェクトがこの <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> オブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.GetHashCode">
      <summary>この <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> オブジェクトのハッシュ コードを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> オブジェクトのハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSize">
      <summary>コントロールの子項目のサイズ (論理単位) を取得します。</summary>
      <returns>コントロールの子項目のサイズ (論理単位)。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSizeAfterViewport">
      <summary>ビューポートの後にキャッシュにあるコントロールの子項目のサイズ (論理単位) を取得します。</summary>
      <returns>ビューポートの後のキャッシュにあるコントロールの子項目 (論理単位)。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSizeBeforeViewport">
      <summary>ビューポートの前にキャッシュにあるコントロールの子項目 (論理単位) を取得します。</summary>
      <returns>ビューポートの前のキャッシュにあるコントロールの子項目 (論理単位)。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSizeInViewport">
      <summary>ビューポートにあるコントロールの子項目 (論理単位) を取得します。</summary>
      <returns>ビューポートにあるコントロールの子項目 (論理単位)。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.op_Equality(System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes)">
      <summary>指定されたオブジェクトの <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> が等しいかどうかを示す値を返します。</summary>
      <param name="itemDesiredSizes1">比較する最初のオブジェクト。</param>
      <param name="itemDesiredSizes2">比較する 2 番目のオブジェクト。</param>
      <returns>指定したオブジェクト <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes)">
      <summary>指定されたオブジェクトの <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> が等しくないかどうかを示す値を返します。</summary>
      <param name="itemDesiredSizes1">比較する最初のオブジェクト。</param>
      <param name="itemDesiredSizes2">比較する 2 番目のオブジェクト。</param>
      <returns>指定したオブジェクト <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSize">
      <summary>コントロールの子項目のサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ)) を取得します。</summary>
      <returns>コントロールの子項目のサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ))。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSizeAfterViewport">
      <summary>ビューポートの後にキャッシュにあるコントロールの子項目のサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ)) を取得します。</summary>
      <returns>ビューポートの後にキャッシュにあるコントロールの子項目のサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ))。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSizeBeforeViewport">
      <summary>ビューポートの前にキャッシュにあるコントロールの子項目のサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ)) を取得します。</summary>
      <returns>ビューポート前のキャッシュにあるコントロールの子項目のサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ))。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSizeInViewport">
      <summary>ビューポートにあるコントロールの子項目のサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ)) を取得します。</summary>
      <returns>ビューポートにあるコントロールの子項目のサイズ (デバイスに依存しない単位 (1 単位は 1/96 インチ))。</returns>
    </member>
    <member name="T:System.Windows.Controls.Image">
      <summary>イメージを表示するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Image.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Image" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Image.ArrangeOverride(System.Windows.Size)">
      <summary>イメージ コントロールを配置し、そのサイズを設定します。</summary>
      <param name="arrangeSize">コントロールの配置に使用されるサイズ。</param>
      <returns>コントロールのサイズです。</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.BaseUri">
      <summary>
        <see cref="T:System.Windows.Controls.Image" />の基本 Uniform Resource Identifier (URI) を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Image" /> の基本 URI。</returns>
    </member>
    <member name="E:System.Windows.Controls.Image.DpiChanged">
      <summary>Image が表示されている画面の DPI が変更されたあとに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Image.DpiChangedEvent">
      <summary>画面 Image の DPI が変更中であるときの <see cref="T:System.Windows.RoutedEvent" />。</summary>
    </member>
    <member name="E:System.Windows.Controls.Image.ImageFailed">
      <summary>イメージにエラーがあるときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Image.ImageFailedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Image.ImageFailed" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Image.MeasureOverride(System.Windows.Size)">
      <summary>イメージの <see cref="P:System.Windows.UIElement.DesiredSize" /> を更新します。 このメソッドは、親の <see cref="T:System.Windows.UIElement" /> によって呼び出され、レイアウトの最初のパスになります。</summary>
      <param name="constraint">イメージが超えることができないサイズ。</param>
      <returns>イメージの必要サイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.Image.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.Image" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.Image" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.Image.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>このイメージが表示される DPI が変更されるときに呼び出されます。</summary>
      <param name="oldDpi">以前の DPI スケール設定</param>
      <param name="newDpi">新規の DPI スケール設定</param>
    </member>
    <member name="M:System.Windows.Controls.Image.OnRender(System.Windows.Media.DrawingContext)">
      <summary>
        <see cref="T:System.Windows.Controls.Image" /> のコンテンツをレンダリングします。</summary>
      <param name="dc">
        <see cref="T:System.Windows.Media.DrawingContext" /> のインスタンスは、コントロールのレンダリングに使用されます。</param>
    </member>
    <member name="P:System.Windows.Controls.Image.Source">
      <summary>イメージの <see cref="T:System.Windows.Media.ImageSource" /> を取得または設定します。</summary>
      <returns>描画イメージのソース。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Image.Source" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Image.Stretch">
      <summary>
        <see cref="T:System.Windows.Controls.Image" /> を表示先の四角形全体に引き伸ばす方法を表す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Stretch" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Media.Stretch.Uniform" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.StretchDirection">
      <summary>イメージのスケーリング方法を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.StretchDirection" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Controls.StretchDirection.Both" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.StretchDirectionProperty">
      <summary>
        <see cref="T:System.Windows.Controls.StretchDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Image.StretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Image.Stretch" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Image.System#Windows#Markup#IUriContext#BaseUri">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>現在のコンテキストのベース URI。</returns>
    </member>
    <member name="T:System.Windows.Controls.InitializingNewItemEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InitializingNewItemEventArgs.#ctor(System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.InitializingNewItemEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="newItem">
        <see cref="T:System.Windows.Controls.DataGrid" /> に追加される新しい項目。</param>
    </member>
    <member name="P:System.Windows.Controls.InitializingNewItemEventArgs.NewItem">
      <summary>
        <see cref="T:System.Windows.Controls.DataGrid" /> に追加される新しい項目を取得します。</summary>
      <returns>グリッドに追加される新しい項目。</returns>
    </member>
    <member name="T:System.Windows.Controls.InitializingNewItemEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" /> の <see cref="T:System.Windows.Controls.DataGrid" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvas">
      <summary>インク ストロークを受け取って表示する領域を定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.#ctor">
      <summary>InkCanvas クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の現在の編集モードを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の現在の編集モード。</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
      <summary>現在の編集モードが変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)">
      <summary>子要素を配置し、<see cref="T:System.Windows.Controls.InkCanvas" /> オブジェクトのサイズを決定します。</summary>
      <param name="arrangeSize">この要素が要素自体と子を配置するために使用する親の末尾の領域。</param>
      <returns>使用する実際のサイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Background">
      <summary>
        <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。 <see cref="T:System.Windows.Controls.InkCanvas" /> の周りの境界領域の塗りつぶしに使用するブラシ。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" /> の周りの境界領域の塗りつぶしに使用する <see cref="T:System.Windows.Controls.InkCanvas" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Bottom">
      <summary>要素の下端と親 <see cref="T:System.Windows.Controls.InkCanvas" /> の下端との間の距離を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.BottomProperty">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.CanPaste">
      <summary>クリップボードの内容を <see cref="T:System.Windows.Controls.InkCanvas" /> に貼り付けることができるかどうかを示します。</summary>
      <returns>クリップボードの内容を貼り付けることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Children">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の子要素を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> にある子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.CopySelection">
      <summary>選択されたストロークや要素をクリップボードにコピーします。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.CutSelection">
      <summary>選択されたストロークおよび要素を削除してクリップボードにコピーします。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> で作成された新しいインク ストロークに適用される描画属性を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の既定の描画属性。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> プロパティが置き換えられると発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> のスタイラス ポイントの説明を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> のスタイラス ポイントの説明。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.DynamicRenderer">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> でインクを動的に描画するレンダラーを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> でインクを動的に描画するレンダラー。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.EditingMode">
      <summary>アクティブなポインティング デバイスによって使用されるユーザー編集モードを取得または設定します。</summary>
      <returns>タブレット ペンやマウスなどのポインティング デバイスがアクティブなときに使用される編集モード。</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> オブジェクトの <see cref="T:System.Windows.Controls.InkCanvas" /> プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeChangedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
      <summary>スタイラスが <see cref="T:System.Windows.Controls.InkCanvas" /> と対話するときに反転される場合、ユーザー編集モードを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の反転編集モード。</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> オブジェクトの <see cref="T:System.Windows.Controls.InkCanvas" /> プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.EraserShape">
      <summary>
        <see cref="T:System.Windows.Ink.StylusShape" /> からインクを部分的に消去するために使用する <see cref="T:System.Windows.Controls.InkCanvas" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> に関連付けられている消しゴムの形状。</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.Gesture">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> でジェスチャが検出されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.GestureEvent">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 添付プロパティの値を取得します。</summary>
      <param name="element">取得する Bottom プロパティが所属する要素。</param>
      <returns>依存関係オブジェクトの下端の座標。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetEnabledGestures">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> で認識されるアプリケーション ジェスチャのコレクションを返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> で認識されるジェスチャのコレクション。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> プロパティが <see langword="false" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 添付プロパティの値を取得します。</summary>
      <param name="element">取得する Reft プロパティが所属する要素。</param>
      <returns>依存関係オブジェクトの左の座標。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 添付プロパティの値を取得します。</summary>
      <param name="element">取得する Right プロパティが所属する要素。</param>
      <returns>依存関係オブジェクトの右の座標。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetSelectedElements">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> で選択されている <see cref="T:System.Windows.Controls.InkCanvas" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.FrameworkElement" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes">
      <summary>
        <see cref="T:System.Windows.Ink.StrokeCollection" /> で選択されている <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトを表す <see cref="T:System.Windows.Controls.InkCanvas" /> を取得します。</summary>
      <returns>選択したストロークのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetSelectionBounds">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> 上で選択されているストロークと要素の境界を取得します。</summary>
      <returns>選択されているすべてのストロークおよび要素を囲む最小の四角形。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 添付プロパティの値を取得します。</summary>
      <param name="element">取得する Top プロパティが所属する要素。</param>
      <returns>依存関係オブジェクトの上端の座標。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)">
      <summary>
        <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /> をオーバーライドし、子要素のコレクションから指定したインデックス位置の子を返します。</summary>
      <param name="index">コレクション内の要求された子要素の 0 から始まるインデックス。</param>
      <returns>要求された子要素。 これは <see langword="null" /> を返しません。指定されたインデックスが範囲外の場合、例外がスローされます。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>指定されたポイントが <see cref="T:System.Windows.Controls.InkCanvas" /> のレンダリング境界内にあるかどうかを判断します。</summary>
      <param name="hitTestParams">ヒット テストの対象となる <see cref="T:System.Windows.Point" /> を指定するオブジェクト。</param>
      <returns>ヒット テストから返される <see cref="T:System.Windows.Media.Visual" /> を表すオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)">
      <summary>指定されたポイントと交差したり、指定されたポイントを囲んでいるのが、選択装飾のどの部分であるかを示す値を返します。</summary>
      <param name="point">ヒット テストの対象となる点。</param>
      <returns>指定されたポイントと交差したり、指定されたポイントを囲んでいるのが、選択装飾のどの部分であるかを示す値。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.InkPresenter">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> 上でインクを表示するインク プレゼンターを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> 上でインクを表示するインク プレゼンター。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable">
      <summary>ユーザーのシステムでジェスチャ認識コンポーネントを使用できるかどうかを取得 (判断) します。</summary>
      <returns>認識コンポーネントを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Left">
      <summary>要素の左端と親 <see cref="T:System.Windows.Controls.InkCanvas" /> の左端との間の距離を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.LeftProperty">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.LogicalChildren">
      <summary>論理上の子に対する列挙子を返します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)">
      <summary>子要素に必要なレイアウトのサイズを測定し、<see cref="T:System.Windows.Controls.InkCanvas" /> オブジェクトのサイズを決定します。</summary>
      <param name="availableSize">この要素が子要素に提供できる使用可能なサイズ。 あらゆるコンテンツに要素がサイズを合わせることを示す値として、無限大を指定できます。</param>
      <returns>子要素のサイズの計算に基づいて、この要素が判断したレイアウト時に必要なサイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.MoveEnabled">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> で選択されているインク ストロークや要素をユーザーが移動できるかどうかを示すブール値を取得または設定します。</summary>
      <returns>ユーザーが <see cref="T:System.Windows.Controls.InkCanvas" /> 上のストロークや要素を移動できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnCreateAutomationPeer">
      <summary>WPF インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> を実装します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.FrameworkElement" /> の依存関係プロパティの有効値が更新された場合に必ず呼び出されます。 変更が発生した特定の依存関係プロパティが引数パラメーターで報告されます。 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">変更されたプロパティと、新旧の値を記述するイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)">
      <summary>選択したストロークや要素がユーザーによって選択および移動されたことを通知するイベント。</summary>
      <param name="e">使用しません。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Paste">
      <summary>クリップボードの内容を <see cref="T:System.Windows.Controls.InkCanvas" /> の左上隅に貼り付けます。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)">
      <summary>クリップボードの内容を <see cref="T:System.Windows.Controls.InkCanvas" /> の指定された位置に貼り付けます。</summary>
      <param name="point">ストロークを貼り付ける位置。</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> に貼り付けることができる形式を取得または設定します。</summary>
      <returns>列挙値のコレクション。 既定値は、<see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.ResizeEnabled">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> で選択されているインク ストロークや要素のサイズをユーザーが変更できるかどうかを示すブール値を取得または設定します。</summary>
      <returns>ユーザーが <see cref="T:System.Windows.Controls.InkCanvas" /> 上のストロークや要素のサイズを変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Right">
      <summary>要素の右端と親 <see cref="T:System.Windows.Controls.InkCanvas" /> の右端との間の距離を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.RightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
      <summary>一連の <see cref="T:System.Windows.UIElement" /> オブジェクトを選択します。</summary>
      <param name="selectedElements">選択対象の <see cref="T:System.Windows.UIElement" /> オブジェクトのコレクション。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
      <summary>一連のインク <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトを選択します。</summary>
      <param name="selectedStrokes">選択対象の <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトのコレクション。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectedStrokes" /> に含まれる 1 つ以上のストロークが <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> プロパティにありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
      <summary>
        <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトと <see cref="T:System.Windows.UIElement" /> オブジェクトの組み合わせを選択します。</summary>
      <param name="selectedStrokes">選択対象の <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトのコレクション。</param>
      <param name="selectedElements">選択対象の <see cref="T:System.Windows.UIElement" /> オブジェクトのコレクション。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectedStrokes" /> に含まれる 1 つ以上のストロークが <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> プロパティにありません。</exception>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionChanged">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> 上の選択対象が変わると発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionChanging">
      <summary>新しい一連のインク ストロークや要素が選択されると発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionMoved">
      <summary>選択されているストロークや要素が、ユーザーによって移動された後に発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionMoving">
      <summary>選択したストロークと要素を移動する前に発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionResized">
      <summary>選択されているストロークや要素のサイズがユーザーによって変更されると発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionResizing">
      <summary>選択したストロークと要素のサイズが変更される前に発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 添付プロパティの値を設定します。</summary>
      <param name="element">Bottom プロパティを設定する対象の要素。</param>
      <param name="length">
        <paramref name="element" /> の下端の座標。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> で認識されるアプリケーション ジェスチャを設定します。</summary>
      <param name="applicationGestures">
        <see cref="T:System.Windows.Controls.InkCanvas" /> で認識されるアプリケーション ジェスチャのコレクション。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> プロパティが <see langword="false" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 添付プロパティの値を設定します。</summary>
      <param name="element">Reft プロパティを設定する対象の要素。</param>
      <param name="length">
        <paramref name="element" /> の左の座標。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 添付プロパティの値を設定します。</summary>
      <param name="element">Right プロパティを設定する対象の要素。</param>
      <param name="length">
        <paramref name="element" /> の右の座標。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 添付プロパティの値を設定します。</summary>
      <param name="element">Top プロパティを設定する対象の要素。</param>
      <param name="length">
        <paramref name="element" /> の上端の座標。</param>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokeCollected">
      <summary>ユーザーが描画したストロークが <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> プロパティに追加されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.StrokeCollectedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokeErased">
      <summary>ユーザーがストロークを消去すると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.StrokeErasedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokeErasing">
      <summary>ユーザーがストロークを消去する直前に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Strokes">
      <summary>
        <see cref="T:System.Windows.Ink.Stroke" /> で収集されたインク <see cref="T:System.Windows.Controls.InkCanvas" /> オブジェクトのコレクションを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Ink.Stroke" /> 内にある <see cref="T:System.Windows.Controls.InkCanvas" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.StrokesProperty">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokesReplaced">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> プロパティが置き換えられると発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>指定されたオブジェクトを <see cref="T:System.Windows.Controls.InkCanvas" /> に追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>タグ内のテキストをマークアップに追加します。 常に <see cref="T:System.ArgumentException" /> をスローします。</summary>
      <param name="textData">使用しません。</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Top">
      <summary>要素の上端と親 <see cref="T:System.Windows.Controls.InkCanvas" /> の上端との間の距離を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.TopProperty">
      <summary>
        <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.UseCustomCursor">
      <summary>標準の <see cref="T:System.Windows.Controls.InkCanvas" /> カーソル機能をオーバーライドしてカスタム カーソルをサポートするかどうかを示すブール値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> でカスタム カーソルが使用されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.VisualChildrenCount">
      <summary>この要素内でビジュアル子要素の数を取得します。</summary>
      <returns>この要素のビジュアル子要素の数。</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasClipboardFormat">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> がクリップボードから受け入れる形式を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> が ISF (Ink Serialized Format) を受け入れることを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasClipboardFormat.Text">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> がテキストを受け入れることを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasClipboardFormat.Xaml">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> が "XAML (Extensible Application Markup Language)" 形式を受け入れることを示します。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasEditingMode">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の編集モードを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint">
      <summary>ペンがストロークに交差すると、ストロークの一部が消去されることを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke">
      <summary>ペンがストロークに交差すると、ストローク全体が消去されることを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.GestureOnly">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> がジェスチャに応答し、インクを受け取らないことを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.Ink">
      <summary>ペンが <see cref="T:System.Windows.Controls.InkCanvas" /> にデータを送信すると、そこにインクが表示されることを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.InkAndGesture">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> がジェスチャに応答し、インクを受け取ることを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.None">
      <summary>ペンが <see cref="T:System.Windows.Controls.InkCanvas" /> にデータを送信するときにアクションが実行されないことを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.Select">
      <summary>ペンが <see cref="T:System.Windows.Controls.InkCanvas" /> でストロークおよび要素を選択することを示します。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasGestureEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.#ctor(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.Ink.GestureRecognitionResult})">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvasGestureEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="strokes">使用可能なジェスチャを表すストローク。</param>
      <param name="gestureRecognitionResults">ジェスチャ認識エンジンの結果。</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasGestureEventArgs.Cancel">
      <summary>ストロークをジェスチャとみなすかどうかを示すブール値を取得または設定します。</summary>
      <returns>ストロークがインクである場合は <see langword="true" />。ストロークがジェスチャである場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.GetGestureRecognitionResults">
      <summary>ジェスチャ認識エンジンからの結果を返します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvasGestureEventArgs.Strokes" /> がいずれかに該当する可能性のある、アプリケーション ジェスチャのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>派生クラスでオーバーライドされた場合、型固有の方法でイベント ハンドラーを呼び出す方法を提供します。これにより、基本実装よりも効率が向上する場合があります。</summary>
      <param name="genericHandler">呼び出すジェネリック ハンドラー/デリゲート実装。</param>
      <param name="genericTarget">指定したハンドラーが呼び出されるターゲット。</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasGestureEventArgs.Strokes">
      <summary>使用可能なジェスチャを表すストロークを取得します。</summary>
      <returns>使用可能なジェスチャを表すストローク。</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasGestureEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> の <see cref="T:System.Windows.Controls.InkCanvas" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionChangingEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> にデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedElements">
      <summary>選択された要素を返します。</summary>
      <returns>選択された要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedStrokes">
      <summary>選択されたストロークを返します。</summary>
      <returns>選択されたストローク。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedElements(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
      <summary>選択された要素を設定します。</summary>
      <param name="selectedElements">選択する要素。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectedElements" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedStrokes(System.Windows.Ink.StrokeCollection)">
      <summary>選択されたストロークを設定します。</summary>
      <param name="selectedStrokes">選択するストローク。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectedStrokes" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionChangingEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> の <see cref="T:System.Windows.Controls.InkCanvas" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionEditingEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> イベントおよび <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle">
      <summary>移動またはサイズを変更した後の選択範囲の境界を取得または設定します。</summary>
      <returns>移動またはサイズを変更した後の選択範囲の境界。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle">
      <summary>ユーザーが選択範囲を移動またはサイズ変更する前の選択範囲の境界を取得します。</summary>
      <returns>ユーザーが選択範囲を移動またはサイズ変更する前の選択範囲の境界。</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionEditingEventHandler">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> で変更が発生するときに発生する 2 つのイベント (<see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> イベント、または <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> イベント) を処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionHitResult">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の選択装飾のさまざまな部分を識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Bottom">
      <summary>選択装飾の中央下ハンドル。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.BottomLeft">
      <summary>選択装飾の左下ハンドル。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.BottomRight">
      <summary>選択装飾の右下ハンドル。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Left">
      <summary>選択装飾の左端にある中央ハンドル。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.None">
      <summary>選択装飾のどこの部分も含まれません。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Right">
      <summary>選択装飾の右端にある中央ハンドル。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Selection">
      <summary>選択装飾の境界内の領域。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Top">
      <summary>選択装飾の中央上ハンドル。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.TopLeft">
      <summary>選択装飾の左上ハンドル。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.TopRight">
      <summary>選択装飾の右上ハンドル。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.#ctor(System.Windows.Ink.Stroke)">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stroke">収集された <see cref="T:System.Windows.Ink.Stroke" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>型固有の方法でイベント ハンドラーを呼び出す手段を提供します。</summary>
      <param name="genericHandler">イベント ハンドラー。</param>
      <param name="genericTarget">イベント ターゲット。</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.Stroke">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> に追加されたストロークを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> に追加されたストローク。</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeErasingEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokeErasingEventArgs.Stroke">
      <summary>消去対象のストロークを取得します。</summary>
      <returns>消去対象のストローク。</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeErasingEventHandler">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs.NewStrokes">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の新しいストロークを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の新しいストローク。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs.PreviousStrokes">
      <summary>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の前のストロークを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> の前のストローク。</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokesReplacedEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> の <see cref="T:System.Windows.Controls.InkCanvas" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.InkPresenter">
      <summary>表面にインクをレンダリングします。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.InkPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Decorator" /> 要素のコンテンツを配置します。</summary>
      <param name="arrangeSize">子コンテンツを配置するためにこの要素が使用する <see cref="T:System.Windows.Size" />。</param>
      <returns>この <see cref="T:System.Windows.Controls.Decorator" /> 要素とその子の配置のサイズを表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.AttachVisuals(System.Windows.Media.Visual,System.Windows.Ink.DrawingAttributes)">
      <summary>
        <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> のビジュアルを <see cref="T:System.Windows.Controls.InkPresenter" /> に添付します。</summary>
      <param name="visual">
        <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> のビジュアル。</param>
      <param name="drawingAttributes">動的に描画されるインクの外観を指定する <see cref="T:System.Windows.Ink.DrawingAttributes" />。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="visual" /> は既にビジュアル ツリーに添付されています。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.DetachVisuals(System.Windows.Media.Visual)">
      <summary>
        <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> から <see cref="T:System.Windows.Controls.InkPresenter" /> のビジュアルを解除します。</summary>
      <param name="visual">解除する <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> のビジュアル。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="visual" /> は <see cref="T:System.Windows.Controls.InkPresenter" /> に添付されていません。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.GetLayoutClip(System.Windows.Size)">
      <summary>
        <see cref="P:System.Windows.UIElement.ClipToBounds" /> プロパティが <see langword="true" /> に設定されている場合にクリップされる領域を示すクリッピング ジオメトリを返します。</summary>
      <param name="layoutSlotSize">要素の利用可能なサイズ。</param>
      <returns>
        <see cref="T:System.Windows.Media.Geometry" /> が <see langword="true" /> である場合にクリップされる領域を表す <see cref="P:System.Windows.UIElement.ClipToBounds" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.GetVisualChild(System.Int32)">
      <summary>指定した <paramref name="index" /> の位置にある子 <see cref="T:System.Windows.Media.Visual" /> 要素を取得します。</summary>
      <param name="index">子要素のインデックス位置。</param>
      <returns>指定した <paramref name="index" /> の位置にある子要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)" /> が渡される間に、配置を準備するために <see cref="T:System.Windows.Controls.Decorator" /> の子要素を測定します。</summary>
      <param name="constraint">超過してはいけない上限 <see cref="T:System.Windows.Size" />。</param>
      <returns>要素のターゲット <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.OnCreateAutomationPeer">
      <summary>WPF インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> を実装します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkPresenter.Strokes">
      <summary>
        <see cref="T:System.Windows.Controls.InkPresenter" /> に表示されるストロークを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkPresenter" /> に表示されるストローク。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkPresenter.StrokesProperty">
      <summary>
        <see cref="P:System.Windows.Controls.InkPresenter.Strokes" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkPresenter.VisualChildrenCount">
      <summary>この <see cref="T:System.Windows.Controls.Decorator" /> のインスタンスのビジュアルな子要素の数に相当する値を取得します。</summary>
      <returns>ビジュアル子要素の数。</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemCollection">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> のコンテンツを構成する項目のリストを保持します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Add(System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.ItemCollection" /> に項目を追加します。</summary>
      <param name="newItem">コレクションに追加する項目。</param>
      <returns>オブジェクトが追加される位置の 0 から始まるインデックス。項目を追加できない場合は -1。</returns>
      <exception cref="T:System.InvalidOperationException">コレクションが ItemsSource モードです。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanChangeLiveFiltering">
      <summary>コレクション ビューがデータのリアルタイム フィルター処理のオン/オフ切り替えをサポートしているかどうかを示す値を取得します。</summary>
      <returns>コレクション ビューがライブ フィルター処理のオン/オフ切り替えをサポートしている場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanChangeLiveGrouping">
      <summary>コレクション ビューがリアルタイムのデータのグループ化のオンまたはオフをサポートするかどうかを示す値を取得します。</summary>
      <returns>コレクション ビューがライブ グループ化のオンまたはオフをサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanChangeLiveSorting">
      <summary>コレクション ビューがリアルタイムのデータの並べ替えのオンまたはオフをサポートするかどうかを示す値を取得します。</summary>
      <returns>コレクション ビューがライブ並べ替えのオンまたはオフをサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanFilter">
      <summary>このコレクション ビューでフィルター処理がサポートされるかどうかを示す値を取得します。</summary>
      <returns>このビューでフィルター処理がサポートされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanGroup">
      <summary>このコレクション ビューでグループ化がサポートされるかどうかを示す値を取得します。</summary>
      <returns>コレクションでグループ化がサポートされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanSort">
      <summary>このコレクション ビューで並べ替えがサポートされるかどうかを示す値を取得します。</summary>
      <returns>このビューで並べ替えがサポートされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Clear">
      <summary>コレクションを消去し、現在このコレクションに含まれているすべての項目に対する参照を解放します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.ItemCollection" /> が <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> モードです (<see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> プロパティが設定されている場合、<see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションは、読み取り専用および固定サイズになります)。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Contains(System.Object)">
      <summary>指定された項目がこのビューに存在するかどうかを示す値を返します。</summary>
      <param name="containItem">確認する対象のオブジェクト。</param>
      <returns>項目がこのコレクションに属しており、アクティブなフィルターを渡すことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.CopyTo(System.Array,System.Int32)">
      <summary>特定の配列インデックスを開始位置として、配列にコレクションの要素をコピーします。</summary>
      <param name="array">コピー先の配列。</param>
      <param name="index">コピー先配列内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">コピー先 <paramref name="array" /> が多次元です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> パラメーターが 0 未満です。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Count">
      <summary>コレクション内のレコード数を取得します。</summary>
      <returns>コレクション内の項目数。コレクションが初期化されていない場合、または <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> モードのコレクションがない場合は 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CurrentItem">
      <summary>ビュー内の現在の項目を取得します。</summary>
      <returns>ビュー内の現在のオブジェクト。コレクションが初期化されていない場合、または <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> モードのコレクションがない場合は <see langword="null" />。
既定では、コレクションの最初の項目が現在のアイテムとして開始します。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CurrentPosition">
      <summary>ビュー内の現在の項目の位置を表す序数を取得します。</summary>
      <returns>ビュー内の現在の項目の位置を表す序数。コレクションが初期化されていない場合、または <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> モードのコレクションがない場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.DeferRefresh">
      <summary>ビューの変更をマージして自動更新を遅延させるために使用できる遅延サイクルを入力します。</summary>
      <returns>呼び出し元のオブジェクトを破棄するために使用できる <see cref="T:System.IDisposable" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Filter">
      <summary>項目をビューに含めることが適切であるかどうかを決定するために使用されるコールバックを取得または設定します。</summary>
      <returns>項目をビューに含めることが適切であるかどうかを決定するために使用されるメソッド。</returns>
      <exception cref="T:System.NotSupportedException">フィルター処理はサポートされていません。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.GetItemAt(System.Int32)">
      <summary>このビュー内の、0 から始まる指定されたインデックス位置にある項目を返します。</summary>
      <param name="index">項目の位置を示す、0 から始まるインデックス。</param>
      <returns>このビュー内の、0 から始まる指定したインデックス位置にある項目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">該当する <paramref name="index" /> がありません。</exception>
      <exception cref="T:System.InvalidOperationException">コレクションが初期化されていないか、<see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> に対するバインディングから <see langword="null" /> 値が返されました。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.GroupDescriptions">
      <summary>項目をグループ化する方法を定義する <see cref="T:System.ComponentModel.GroupDescription" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> オブジェクトの <see cref="T:System.ComponentModel.GroupDescription" />。 コレクションは、グループ レベルによってインデックスが付けられます。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Groups">
      <summary>
        <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions" /> に従って構築されるトップレベル グループを取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions" /> に従って構築されるトップレベル グループ。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.IndexOf(System.Object)">
      <summary>指定された項目の位置を示す、このコレクション内のインデックスを返します。</summary>
      <param name="item">コレクション内で検索されるオブジェクト。</param>
      <returns>コレクション内の項目のインデックス。項目がコレクション内に存在しない場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Insert(System.Int32,System.Object)">
      <summary>コレクション内の指定したインデックスの位置に要素を挿入します。</summary>
      <param name="insertIndex">項目を挿入する位置を示す 0 から始まるインデックス。</param>
      <param name="insertItem">挿入する項目。</param>
      <exception cref="T:System.InvalidOperationException">コレクションが ItemsSource モードです。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">インデックスが範囲外です。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsCurrentAfterLast">
      <summary>ビューの現在の項目がコレクションの末尾を越えるかどうかを示す値を取得します。</summary>
      <returns>ビューの現在の項目がコレクションの末尾を越える場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsCurrentBeforeFirst">
      <summary>ビューの現在の項目がコレクションの先頭を越えるかどうかを示す値を取得します。</summary>
      <returns>ビューの現在の項目がコレクションの先頭を越える場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsEmpty">
      <summary>結果の (フィルター処理された) ビューが空かどうかを示す値を取得します。</summary>
      <returns>結果のビューが空である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsLiveFiltering">
      <summary>リアルタイムでのデータのフィルター処理が有効かどうかを示す値を取得または設定します。</summary>
      <returns>リアルタイムのデータのフィルター選択が有効になっている場合は <see langword="true" />。ライブ フィルター選択が有効になっていない場合は <see langword="false" />。コレクション ビューがライブ フィルター処理を実装しているかどうかを特定できない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsLiveGrouping">
      <summary>リアルタイムでのデータのグループ化が有効かどうかを示す値を取得または設定します。</summary>
      <returns>リアルタイムのデータのグループ化が有効になっている場合は <see langword="true" />。ライブ グループ化が有効になっていない場合は <see langword="false" />。コレクション ビューがライブ グループ化を実装しているかどうかを特定できない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsLiveSorting">
      <summary>リアルタイムでの並べ替えが有効かどうかを示す値を取得または設定します。</summary>
      <returns>リアルタイムのデータの並べ替えが有効になっている場合は <see langword="true" />。ライブ並べ替えが有効になっていない場合は <see langword="false" />。コレクション ビューがライブ並べ替えを実装しているかどうかを特定できない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Item(System.Int32)">
      <summary>指定された 0 から始まるインデックス位置にある項目を取得または設定します。</summary>
      <param name="index">項目の 0 から始まるインデックス。</param>
      <returns>取得したオブジェクト、または指定されたインデックスに設定するオブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">コレクションが初期化されていないか、設定する項目に既に論理上の親があるか、コレクションが <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> モードです。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">インデックスが範囲外です。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.LiveFilteringProperties">
      <summary>リアルタイムのデータのフィルター選択に関係するプロパティを指定する文字列のコレクションを取得します。</summary>
      <returns>リアルタイムのデータのフィルター選択に関係するプロパティを指定する文字列のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.LiveGroupingProperties">
      <summary>リアルタイムのデータのグループ化に関係するプロパティを指定する文字列のコレクションを取得します。</summary>
      <returns>リアルタイムのデータのグループ化に関係するプロパティを指定する文字列のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.LiveSortingProperties">
      <summary>リアルタイムのデータの並べ替えに関係するプロパティを指定する文字列のコレクションを取得します。</summary>
      <returns>リアルタイムのデータの並べ替えに関係するプロパティを指定する文字列のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentTo(System.Object)">
      <summary>コレクション内の指定された項目を <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> として設定します。</summary>
      <param name="item">
        <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> として設定する項目。</param>
      <returns>結果として得られる <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> がビュー内の項目であることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToFirst">
      <summary>ビュー内の最初の項目が <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> になるように設定します。</summary>
      <returns>結果として得られる <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> がビュー内の項目であることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToLast">
      <summary>ビュー内の最後の項目が <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> になるように設定します。</summary>
      <returns>結果として得られる <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> がビュー内の項目であることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToNext">
      <summary>ビュー内の <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> の後の項目を <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> として設定します。</summary>
      <returns>結果として得られる <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> がビュー内の項目であることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToPosition(System.Int32)">
      <summary>指定したインデックスにある項目を、ビュー内の <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> になるように設定します。</summary>
      <param name="position">
        <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> として設定する項目の 0 から始まるインデックス。</param>
      <returns>結果として得られる <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> がビュー内の項目であることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToPrevious">
      <summary>ビュー内の <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> の前の項目を <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> として設定します。</summary>
      <returns>結果として得られる <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> がビュー内の項目であることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.NeedsRefresh">
      <summary>コレクションを更新する必要があるかどうかを示す値を取得します。</summary>
      <returns>コレクションを更新する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.PassesFilter(System.Object)">
      <summary>指定された項目がこのビューに属しているかどうかを示す値を返します。</summary>
      <param name="item">テストするオブジェクト。</param>
      <returns>指定された項目がこのビューに属していることを示す場合、またはこのコレクション ビューにフィルターが設定されていないことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Remove(System.Object)">
      <summary>コレクションまたはビューから、指定された項目参照を削除します。</summary>
      <param name="removeItem">削除するオブジェクト。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.ItemCollection" /> が、<see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> モードになっているか、DeferRefresh が有効化されているので、読み取り専用です。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.RemoveAt(System.Int32)">
      <summary>コレクションまたはビューの指定されたインデックス位置にある項目を削除します。</summary>
      <param name="removeIndex">削除する項目の 0 から始まるインデックス。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.ItemCollection" /> が、<see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> モードになっているか、DeferRefresh が有効化されているので、読み取り専用です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">インデックスが範囲外です。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.SortDescriptions">
      <summary>コレクション内の項目をビュー内でどのように並べ替えるかを記述する <see cref="T:System.ComponentModel.SortDescription" /> オブジェクトのコレクションを取得します。</summary>
      <returns>コレクション内の項目をビュー内でどのように並べ替えるかを記述する <see cref="T:System.ComponentModel.SortDescription" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.SourceCollection">
      <summary>このコレクション ビューの基になる、並べ替えおよびフィルター処理が行われていないコレクションを取得します。</summary>
      <returns>基になるコレクション、またはユーザー指定の <see cref="T:System.Collections.IEnumerable" /> コレクションである <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#IList#IsFixedSize">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#IList#IsReadOnly">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>
        <see cref="T:System.Collections.IList" /> が読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#AddNew">
      <summary>新しい項目をコレクションに追加します。</summary>
      <returns>コレクションに追加された新しい項目。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanAddNew">
      <summary>新しい項目をコレクションに追加できるかどうかを示す値を取得します。</summary>
      <returns>新しい項目をコレクションに追加できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanCancelEdit">
      <summary>コレクション ビューが保留中の変更を破棄して、編集されたオブジェクトの元の値を復元できるかどうかを示す値を取得します。</summary>
      <returns>コレクション ビューが保留中の変更を破棄して、編集されたオブジェクトの元の値を復元できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CancelEdit">
      <summary>編集トランザクションを終了し、可能な場合は、項目の元の値を復元します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CancelNew">
      <summary>追加トランザクションを終了し、保留中の新しい項目を破棄します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanRemove">
      <summary>コレクションから項目を削除できるかどうかを示す値を取得します。</summary>
      <returns>コレクションから項目を削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CommitEdit">
      <summary>編集トランザクションを終了し、保留中の変更を保存します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CommitNew">
      <summary>追加トランザクションを終了し、保留中の新しい項目を保存します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CurrentAddItem">
      <summary>現在の追加トランザクション処理中に追加される項目を取得します。</summary>
      <returns>
        <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> が <see langword="true" /> の場合は追加される項目。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CurrentEditItem">
      <summary>編集されているコレクション内の項目を取得します。</summary>
      <returns>
        <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> が <see langword="true" /> である場合は、編集されているコレクション内の項目。それ以外の場合は、<see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#EditItem(System.Object)">
      <summary>指定した項目の編集トランザクションを開始します。</summary>
      <param name="item">編集する項目。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#IsAddingNew">
      <summary>追加トランザクションが実行中かどうかを示す値を取得します。</summary>
      <returns>追加トランザクションが実行中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#IsEditingItem">
      <summary>編集トランザクションが実行中かどうかを示す値を取得します。</summary>
      <returns>編集トランザクションが実行中である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#NewItemPlaceholderPosition">
      <summary>コレクション ビューにある新しい項目のプレースホルダーの位置を取得または設定します。</summary>
      <returns>コレクション ビューにある新しい項目のプレースホルダーの位置を示す列挙値の 1 つ。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#Remove(System.Object)">
      <summary>指定した項目をコレクションから削除します。</summary>
      <param name="item">削除する項目。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#RemoveAt(System.Int32)">
      <summary>コレクション内の指定した位置にある項目を削除します。</summary>
      <param name="index">削除する項目の位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionViewAddNewItem#AddNewItem(System.Object)">
      <summary>指定したオブジェクトをコレクションに追加します。</summary>
      <param name="newItem">コレクションに追加するオブジェクト。</param>
      <returns>コレクションに追加されたオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionViewAddNewItem#CanAddNewItem">
      <summary>指定したオブジェクトをコレクションに追加できるかどうかを示す値を取得します。</summary>
      <returns>指定したオブジェクトをコレクションに追加できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IItemProperties#ItemProperties">
      <summary>コレクション内の項目で使用できるプロパティに関する情報を格納するコレクションを取得します。</summary>
      <returns>コレクション内の項目で使用できるプロパティに関する情報を格納するコレクション。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>中央のイベント マネージャーからイベントを受信します。</summary>
      <param name="managerType">このメソッドを呼び出す <see cref="T:System.Windows.WeakEventManager" /> の型。</param>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベント データ。</param>
      <returns>リスナーがイベントを処理した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerGenerator">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> など、ホストに代わってユーザー インターフェイス (UI) を生成します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
      <summary>
        <see cref="T:System.Windows.Controls.ItemCollection" /> 内で指定されたインデックス位置の項目に対応する要素を返します。</summary>
      <param name="index">目的の項目のインデックス。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ItemCollection" /> 内で指定されたインデックス位置にある項目に対応する要素を返します。項目が実現されていない場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
      <summary>指定された項目に対応する <see cref="T:System.Windows.UIElement" /> を返します。</summary>
      <param name="item">
        <see cref="T:System.Object" /> を特定するための <see cref="T:System.Windows.UIElement" /> 項目。</param>
      <returns>指定された項目に対応する <see cref="T:System.Windows.UIElement" />。 項目が項目コレクションに属していない場合、または <see cref="T:System.Windows.UIElement" /> が生成されていない場合は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.GenerateBatches">
      <summary>
        <see cref="P:System.Windows.Controls.ItemContainerGenerator.Status" /> プロパティを管理するオブジェクトを返します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemContainerGenerator.Status" /> プロパティを管理するオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)">
      <summary>指定および生成された <see cref="T:System.Windows.UIElement" /> に対応する項目にインデックスを返します。</summary>
      <param name="container">インデックスを返す対象の項目に対応する <see cref="T:System.Windows.DependencyObject" />。</param>
      <returns>指定および生成された <see cref="T:System.Int32" /> に対応する項目に対する <see cref="T:System.Windows.UIElement" /> インデックス。<paramref name="container" /> が見つからない場合は -1。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="container" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject,System.Boolean)">
      <summary>必要に応じて、階層項目を再帰的に検索して、指定および生成された <see cref="T:System.Windows.UIElement" /> に対応する項目のインデックスを返します。</summary>
      <param name="container">インデックスを返す対象の項目に対応する <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="returnLocalIndex">階層項目の現在のレベルを取得する場合は <see langword="true" />。再帰的に階層項目を検索する場合は <see langword="false" />。</param>
      <returns>指定および生成された <see cref="T:System.Int32" /> に対応する項目に対する <see cref="T:System.Windows.UIElement" /> インデックス。<paramref name="container" /> が見つからない場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)">
      <summary>指定および生成された <see cref="T:System.Windows.UIElement" /> に対応する項目を返します。</summary>
      <param name="container">返す対象の項目に対応する <see cref="T:System.Windows.DependencyObject" />。</param>
      <returns>指定および生成された <see cref="T:System.Windows.DependencyObject" /> に対応する項目である <see cref="T:System.Windows.UIElement" />。 <see cref="T:System.Windows.UIElement" /> が生成されていない場合は、<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> が返されます。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="container" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemContainerGenerator.Items">
      <summary>この <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> に属する項目のコレクションを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> に属する項目のコレクション。</returns>
    </member>
    <member name="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントは、項目のコレクションが変化したことをレイアウトに通知するために、<see cref="T:System.Windows.Controls.ItemContainerGenerator" /> によって生成されます。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemContainerGenerator.Status">
      <summary>
        <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> の生成ステータス。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorStatus" /> の生成ステータスを表す <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 値。</returns>
    </member>
    <member name="E:System.Windows.Controls.ItemContainerGenerator.StatusChanged">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.StatusChanged" /> イベントは、状態が変化したことをコントロールに通知するために、<see cref="T:System.Windows.Controls.ItemContainerGenerator" /> によって生成されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext">
      <summary>次の項目の表示に使用されるコンテナー要素を返します。</summary>
      <returns>次の項目を表示するために使用されるコンテナー要素である DependencyObject。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext(System.Boolean@)">
      <summary>次の項目の表示に使用されるコンテナー要素と、コンテナー要素が新しく生成されたか (実現されたか) どうかを返します。</summary>
      <param name="isNewlyRealized">返された DependencyObject が新しく生成された (実現された) 場合は true。それ以外の場合は false。</param>
      <returns>次の項目を表示するために使用されるコンテナー要素である DependencyObject。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GeneratorPositionFromIndex(System.Int32)">
      <summary>指定されたインデックス位置にある項目にマップされる GeneratorPosition オブジェクトを返します。</summary>
      <param name="itemIndex">目的の項目のインデックス。</param>
      <returns>指定されたインデックス位置にある項目にマップされる GeneratorPosition オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>指定されたパネルで使用される適切な ItemContainerGenerator を返します。</summary>
      <param name="panel">適切な ItemContainerGenerator を返すパネル。</param>
      <returns>指定されたパネルで使用される適切な ItemContainerGenerator。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>指定された GeneratorPosition にマップされるインデックスを返します。</summary>
      <param name="position">目的の項目のインデックス。</param>
      <returns>指定された GeneratorPosition にマップされるインデックスである Int32。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>対応する項目のコンテナーとして、指定した項目を準備します。</summary>
      <param name="container">準備するコンテナー。 通常の場合、コンテナーは前回の GenerateNext の呼び出しの結果です。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="position">生成された (実現された) 項目を 1 つ以上削除します。</param>
      <param name="count">
        <paramref name="position" /> を先頭に、削除する要素の数の Int32 値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#RemoveAll">
      <summary>生成された (実現された) 項目をすべて削除します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)">
      <summary>指定された GeneratorPosition から開始して、指定された GeneratorDirection で、ジェネレーターが項目を生成できるように準備します。</summary>
      <param name="position">項目の生成を開始する項目の位置を指定する GeneratorPosition。</param>
      <param name="direction">項目を生成する方向を指定する GeneratorDirection。</param>
      <returns>生成プロセスの有効期間を追跡する IDisposable オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>指定された GeneratorPosition から開始して、指定された GeneratorDirection でジェネレーターが項目を生成する準備をし、生成された (実現された) 項目で開始するかどうかを制御します。</summary>
      <param name="position">項目の生成を開始する項目の位置を指定する GeneratorPosition。</param>
      <param name="direction">項目を生成する方向を指定する GeneratorDirection。</param>
      <param name="allowStartAtRealizedItem">生成された (実現された) 項目で開始するかどうかを指定するブール値。</param>
      <returns>生成プロセスの有効期間を追跡する IDisposable オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IRecyclingItemContainerGenerator#Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="position">再利用する先頭の要素のインデックス。 <paramref name="position" /> は、以前生成した (実現した) 項目を参照する必要があります。</param>
      <param name="count">
        <paramref name="position" /> から始めて、再利用する要素の数。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="managerType">このメソッドを呼び出す <see cref="T:System.Windows.WeakEventManager" /> の型。</param>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベント データ。</param>
      <returns>リスナーがイベントを処理した場合は <see langword="true" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerTemplate">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトのコンテナーを生成するためのテンプレートを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplate.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemContainerTemplate.ItemContainerTemplateKey">
      <summary>
        <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> の既定のキーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> の既定のキー。</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerTemplateKey">
      <summary>
        <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> オブジェクトのリソース キーを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateKey.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ItemContainerTemplateKey" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateKey.#ctor(System.Object)">
      <summary>データ型を指定して、<see cref="T:System.Windows.Controls.ItemContainerTemplateKey" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataType">該当するテンプレートがデザインされている型。</param>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerTemplateSelector">
      <summary>
        <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> 内の各項目に <see cref="T:System.Windows.Controls.ItemsControl" /> を選択できるようにします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateSelector.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ItemContainerTemplateSelector" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateSelector.SelectTemplate(System.Object,System.Windows.Controls.ItemsControl)">
      <summary>派生クラスでオーバーライドされた場合に、カスタム ロジックに基づいて <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> を返します。</summary>
      <param name="item">テンプレートを選択する対象のオブジェクト。</param>
      <param name="parentItemsControl">項目のコンテナー。</param>
      <returns>テンプレート。 既定の実装では、<see langword="null" /> が返されます。</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemsControl">
      <summary>アイテムのコレクションの表現に使用できるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.AddChild(System.Object)">
      <summary>指定されたオブジェクトを <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトの子として追加します。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.AddText(System.String)">
      <summary>指定されたテキスト文字列を <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトに追加します。</summary>
      <param name="text">追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.AlternationCount">
      <summary>代替コンテナーに独自の外観を与える <see cref="T:System.Windows.Controls.ItemsControl" /> 内にある、代替項目コンテナーの数を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> 内の代替項目コンテナーの数。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.AlternationCountProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.AlternationIndex">
      <summary>代替項目コンテナーが使用される場合に、項目コンテナーに代入された値を取得します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.AlternationIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.BeginInit">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトの初期化がまもなく開始することを示します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>派生クラスの中でオーバーライドした場合、<see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> メソッドの効果を元に戻します。</summary>
      <param name="element">コンテナー要素。</param>
      <param name="item">項目。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.Controls.ItemsControl,System.Windows.DependencyObject)">
      <summary>特定のコンテナー要素を所有する、指定された <see cref="T:System.Windows.Controls.ItemsControl" /> に属しているコンテナーを返します。</summary>
      <param name="itemsControl">コンテナーを返す対象の <see cref="T:System.Windows.Controls.ItemsControl" />。</param>
      <param name="element">コンテナーを返す要素。</param>
      <returns>
        <paramref name="itemsControl" /> が <see langword="null" /> でない場合、指定された要素を所有する、指定された <see cref="T:System.Windows.Controls.ItemsControl" /> に属するコンテナー。 <paramref name="itemsControl" /> が <see langword="null" /> の場合、いずれかの <see cref="T:System.Windows.Controls.ItemsControl" /> に属するコンテナーのうち最も近いものを返します。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.DependencyObject)">
      <summary>指定された要素を所有する現在の <see cref="T:System.Windows.Controls.ItemsControl" /> に属するコンテナーを返します。</summary>
      <param name="element">コンテナーを返す要素。</param>
      <returns>指定された要素を所有する現在の <see cref="T:System.Windows.Controls.ItemsControl" /> に属するコンテナー。存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.DisplayMemberPath">
      <summary>オブジェクトの視覚的表現として機能する、ソース オブジェクトの値へのパスを取得または設定します。</summary>
      <returns>ソース オブジェクトでの値へのパス。 任意のパス、または "<see cref="Name" />" などの XPath を指定できます。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.EndInit">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトの初期化が完了したことを示します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetAlternationIndex(System.Windows.DependencyObject)">
      <summary>指定されたオブジェクトの <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> の取得元のオブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> の値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetContainerForItemOverride">
      <summary>指定された項目の表示に使用する要素を作成または識別します。</summary>
      <returns>指定された項目の表示に使用する要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetItemsOwner(System.Windows.DependencyObject)">
      <summary>指定された要素がホストする項目が格納されている <see cref="T:System.Windows.Controls.ItemsControl" /> を返します。</summary>
      <param name="element">ホスト要素。</param>
      <returns>指定した要素が項目をホストする <see cref="T:System.Windows.Controls.ItemsControl" />、または <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.GroupStyle">
      <summary>グループの各レベルの外観を定義する <see cref="T:System.Windows.Controls.GroupStyle" /> オブジェクトのコレクションを取得します。</summary>
      <returns>グループの各レベルの外観を定義する <see cref="T:System.Windows.Controls.GroupStyle" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.GroupStyleSelector">
      <summary>
        <see cref="T:System.Windows.Controls.GroupStyle" /> をコレクション内の各グループに適用するカスタム選択ロジックを用意するためのメソッドを取得または設定します。</summary>
      <returns>コレクション内の各グループに適用する <see cref="T:System.Windows.Controls.GroupStyle" /> を選択するためのカスタム ロジックの提供を可能にするメソッド。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.HasItems">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> に項目が含まれているかどうかを示す値を取得します。</summary>
      <returns>項目数が 0 より大きい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.HasItemsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.HasItems" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.IsGrouping">
      <summary>コントロールがグループ化を使用しているかどうかを示す値を取得します。</summary>
      <returns>コントロールがグループ化を使用している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.IsGroupingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.IsGrouping" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainer(System.Object)">
      <summary>指定された項目が自身のコンテナーかどうか (または自身のコンテナーにすることができるかどうか) を判断します。</summary>
      <param name="item">確認する項目。</param>
      <returns>項目が独自のコンテナーである (または独自のコンテナーの対象である) 場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が自身のコンテナーかどうか (または自身のコンテナーにすることができるかどうか) を判断します。</summary>
      <param name="item">確認する項目。</param>
      <returns>項目が独自のコンテナーである (または独自のコンテナーの対象である) 場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive">
      <summary>項目を検索するときに大文字と小文字の区別が条件であるかどうかを示す値を取得または設定します。</summary>
      <returns>テキスト検索で大文字小文字が区別される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitiveProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled">
      <summary>
        <see cref="T:System.Windows.Controls.TextSearch" /> インスタンスで <see cref="T:System.Windows.Controls.ItemsControl" /> が有効かどうかを示す値を取得または設定します。</summary>
      <returns>
        <see langword="true" /> が有効な場合は <see cref="T:System.Windows.Controls.TextSearch" /> 、それ以外の場合は <see langword="true" />を指定します。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemBindingGroup">
      <summary>
        <see cref="T:System.Windows.Data.BindingGroup" /> の各項目にコピーされる <see cref="T:System.Windows.Controls.ItemsControl" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> の各項目にコピーされる <see cref="T:System.Windows.Data.BindingGroup" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemBindingGroupProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator">
      <summary>コントロールに関連付けられている <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> を取得します。</summary>
      <returns>コントロールに関連付けられている <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerStyle">
      <summary>項目ごとに生成されるコンテナー要素に適用される <see cref="T:System.Windows.Style" /> を取得または設定します。</summary>
      <returns>項目ごとに生成されたコンテナー要素に適用される <see cref="T:System.Windows.Style" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemContainerStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector">
      <summary>生成された各コンテナー要素に適用できるスタイルについて、スタイル選択のカスタム ロジックを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.StyleSelector" /> として使用するスタイルを選択するロジックを格納する <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> オブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.Items">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> のコンテンツの生成に使用するコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> のコンテンツの生成に使用されるコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)">
      <summary>指定されたコンテナー要素を所有する <see cref="T:System.Windows.Controls.ItemsControl" /> を返します。</summary>
      <param name="container">
        <see cref="T:System.Windows.Controls.ItemsControl" /> を返す対象となるコンテナー要素。</param>
      <returns>指定されたコンテナー要素を所有する <see cref="T:System.Windows.Controls.ItemsControl" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsPanel">
      <summary>項目のレイアウトを制御するパネルを定義するテンプレートを取得または設定します。</summary>
      <returns>項目のレイアウトに使用するパネルを定義する <see cref="T:System.Windows.Controls.ItemsPanelTemplate" />。 <see cref="T:System.Windows.Controls.ItemsControl" /> の既定値は、<see cref="T:System.Windows.Controls.StackPanel" /> を指定する <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsPanelProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsSource">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> のコンテンツの生成に使用するコレクションを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> のコンテンツの生成に使用されるコレクション。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemStringFormat">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> 内の項目が文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
      <returns>文字列として表示される場合、<see cref="T:System.Windows.Controls.ItemsControl" /> の項目の書式設定方法を指定する複合文字列。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemStringFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemTemplate">
      <summary>各項目を表示するために使用する <see cref="T:System.Windows.DataTemplate" /> を取得または設定します。</summary>
      <returns>データ オブジェクトの視覚化を指定する <see cref="T:System.Windows.DataTemplate" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector">
      <summary>各項目を表示するために使用されるテンプレートを選択するためのカスタム ロジックを取得または設定します。</summary>
      <returns>ロジックを提供し、 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> を返すカスタム <see cref="T:System.Windows.DataTemplate" />オブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトの論理上の子オブジェクトに対する列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトの論理上の子オブジェクトに対する列挙子。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnAlternationCountChanged(System.Int32,System.Int32)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> プロパティが変更された時点で呼び出されます。</summary>
      <param name="oldAlternationCount">
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> の変更前の値。</param>
      <param name="newAlternationCount">
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> の新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnDisplayMemberPathChanged(System.String,System.String)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldDisplayMemberPath">
        <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> プロパティの古い値。</param>
      <param name="newDisplayMemberPath">
        <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnGroupStyleSelectorChanged(System.Windows.Controls.GroupStyleSelector,System.Windows.Controls.GroupStyleSelector)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> プロパティが変更された時点で呼び出されます。</summary>
      <param name="oldGroupStyleSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> プロパティの前の値。</param>
      <param name="newGroupStyleSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemBindingGroupChanged(System.Windows.Data.BindingGroup,System.Windows.Data.BindingGroup)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> プロパティが変更された時点で呼び出されます。</summary>
      <param name="oldItemBindingGroup">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> の以前の値。</param>
      <param name="newItemBindingGroup">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> の変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldItemContainerStyle">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> プロパティの前の値。</param>
      <param name="newItemContainerStyle">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleSelectorChanged(System.Windows.Controls.StyleSelector,System.Windows.Controls.StyleSelector)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> プロパティが変更された時点で呼び出されます。</summary>
      <param name="oldItemContainerStyleSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> プロパティの前の値。</param>
      <param name="newItemContainerStyleSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティが変更された時点で呼び出されます。</summary>
      <param name="e">変更に関する情報。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsPanelChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldItemsPanel">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> プロパティの前の値。</param>
      <param name="newItemsPanel">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldValue">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> プロパティの前の値。</param>
      <param name="newValue">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemStringFormatChanged(System.String,System.String)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> プロパティが変更された時点で呼び出されます。</summary>
      <param name="oldItemStringFormat">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> プロパティの古い値。</param>
      <param name="newItemStringFormat">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> プロパティが変更された時点で呼び出されます。</summary>
      <param name="oldItemTemplate">変更前の <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> プロパティ値。</param>
      <param name="newItemTemplate">変更後の <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> プロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> プロパティが変更された時点で呼び出されます。</summary>
      <param name="oldItemTemplateSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> プロパティの前の値。</param>
      <param name="newItemTemplateSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントを受信すると、呼び出されます。</summary>
      <param name="e">イベントに関する情報。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInput" /> イベントを受信すると、呼び出されます。</summary>
      <param name="e">イベントに関する情報。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定した要素に指定した項目が表示されるように準備します。</summary>
      <param name="element">指定された項目を表示するために使用する要素。</param>
      <param name="item">指定された項目。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>指定された項目のコンテナー要素に対して、<see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> プロパティまたは <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> プロパティからのスタイルを適用するかどうかを示す値を返します。</summary>
      <param name="container">コンテナー要素。</param>
      <param name="item">目的の項目。</param>
      <returns>基本実装では、常に <see langword="true" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ShouldSerializeGroupStyle">
      <summary>シリアル化プロセスによって <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> プロパティの有効な値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> 。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ShouldSerializeItems">
      <summary>シリアル化プロセスが、<see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.Controls.ItemsControl.Items" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#Clear">
      <summary>プロパティの関連付けをすべてクリアします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>指定したアイテムとプロパティ間の関連付けを削除します。</summary>
      <param name="item">関連付けられた項目。</param>
      <param name="dp">関連付けられているプロパティ。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearValue(System.Windows.DependencyProperty)">
      <summary>指定されたプロパティをすべてのプロパティ リストから削除します。</summary>
      <param name="dp">削除するプロパティ。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ReadItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>指定したアイテムに関連付けられた、指定したプロパティの値を返します。</summary>
      <param name="item">指定したプロパティが関連付けられている項目。</param>
      <param name="dp">返す値を持つプロパティ。</param>
      <returns>指定したアイテムに関連付けられた、指定したプロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)">
      <summary>指定されたプロパティと値を格納して、指定した項目に関連付けます。</summary>
      <param name="item">値およびプロパティを関連付ける項目。</param>
      <param name="dp">指定した項目に関連付けられているプロパティ。</param>
      <param name="value">関連するプロパティの値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="text">追加するテキスト。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトの文字列表現を提供します。</summary>
      <returns>オブジェクトの文字列表現。</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemsPanelTemplate">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsPresenter" /> の項目のレイアウト用に <see cref="T:System.Windows.Controls.ItemsControl" /> が作成するパネルを指定します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor(System.Windows.FrameworkElementFactory)">
      <summary>指定したテンプレートを使用して、<see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> クラスのインスタンスを初期化します。</summary>
      <param name="root">テンプレートを表す <see cref="T:System.Windows.FrameworkElementFactory" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>テンプレートが適用される親が、null 以外の <see cref="T:System.Windows.Controls.ItemsPresenter" /> オブジェクトであるか検証します。</summary>
      <param name="templatedParent">このテンプレートが適用される要素。 これは、<see cref="T:System.Windows.Controls.ItemsPresenter" /> オブジェクトである必要があります。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="templatedParent" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="templatedParent" /> が <see cref="T:System.Windows.Controls.ItemsPresenter" /> ではありません。</exception>
    </member>
    <member name="T:System.Windows.Controls.ItemsPresenter">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> で定義されている <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> を追加するコントロールのビジュアル ツリー内の位置を指定するために、項目コントロールのテンプレート内で使用されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsPresenter" /> オブジェクトのコンテンツを配置し、そのサイズを設定するために呼び出されます。</summary>
      <param name="arrangeSize">コンテンツの配置に使用する計算されたサイズ。</param>
      <returns>コンテンツのサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /> の基本クラスの実装をオーバーライドし、<see cref="T:System.Windows.Controls.ItemsPresenter" /> オブジェクトのサイズを測定してレイアウト エンジンに適正なサイズを返します。</summary>
      <param name="constraint">制約サイズは "上限値" です。 戻り値がこのサイズを超えないようにする必要があります。</param>
      <returns>必要なサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.OnApplyTemplate">
      <summary>内部プロセスまたはアプリケーションによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> が呼び出されたときに呼び出されます。これは、現在のテンプレートのビジュアル ツリーの構築に使用されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.OnTemplateChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)">
      <summary>コントロール テンプレートが変更されたときに呼び出されます。</summary>
      <param name="oldTemplate">古いテンプレートの値。</param>
      <param name="newTemplate">新しいテンプレートの値。</param>
    </member>
    <member name="T:System.Windows.Controls.Label">
      <summary>コントロールのテキスト ラベルを表し、アクセス キーのサポートを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Label.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Label" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Label.OnCreateAutomationPeer">
      <summary>WPF インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="P:System.Windows.Controls.Label.Target">
      <summary>ユーザーがラベルのアクセス キーを押すと、フォーカスを受け取る要素を取得または設定します。</summary>
      <returns>ユーザーがアクセス キーを押すとフォーカスを受け取る <see cref="T:System.Windows.UIElement" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Label.TargetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Label.Target" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ListBox">
      <summary>選択可能な項目の一覧が表示されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ListBox.AnchorItem">
      <summary>
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> が <see cref="F:System.Windows.Controls.SelectionMode.Extended" /> であるときに最初に選択される項目を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> が <see cref="F:System.Windows.Controls.SelectionMode.Extended" /> のときに、最初に選択される項目。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.GetContainerForItemOverride">
      <summary>指定された項目の表示に使用する要素を作成または識別します。</summary>
      <returns>指定された項目を表示するために使用する要素。</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.HandlesScrolling">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> がスクロールをサポートしているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ListBox" /> がスクロールをサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が独自の <c>ItemContainer</c> であるか (または独自のコンテナーとすることが可能か) どうかを判断します。</summary>
      <param name="item">指定された項目。</param>
      <returns>項目が自身の <see langword="ItemContainer" /> である場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnCreateAutomationPeer">
      <summary>WPF オートメーション インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">
        <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> にデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントに応答します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.KeyEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>マウスの移動が <see cref="T:System.Windows.Controls.ListBox" /> から報告されると呼び出されます。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.MouseEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> イベントを発生させることにより、リスト ボックスの選択の変更に応答します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定された項目を表示するために、指定された要素を準備します。</summary>
      <param name="element">指定された項目を表示するために使用する要素。</param>
      <param name="item">指定された項目。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.ScrollIntoView(System.Object)">
      <summary>オブジェクトをスクロールして表示します。</summary>
      <param name="item">スクロールするオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.SelectAll">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> 内のすべての項目を選択します。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> プロパティが <see cref="F:System.Windows.Controls.SelectionMode.Single" /> に設定されている。</exception>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectedItems">
      <summary>現在選択されている項目を取得します。</summary>
      <returns>現在選択されている項目のコレクションを返します。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> プロパティが <see cref="F:System.Windows.Controls.SelectionMode.Single" /> に設定されている。</exception>
    </member>
    <member name="F:System.Windows.Controls.ListBox.SelectedItemsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ListBox.SelectedItems" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectionMode">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> の選択動作を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.SelectionMode" /> 値のいずれか 1 つ。 既定の選択は <see cref="F:System.Windows.Controls.SelectionMode.Single" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBox.SelectionModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.SetSelectedItems(System.Collections.IEnumerable)">
      <summary>選択された項目のコレクションを設定します。</summary>
      <param name="selectedItems">選択する項目のコレクション。</param>
      <returns>すべての項目が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.UnselectAll">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> の選択をすべて削除します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ListBoxItem">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> 内の選択可能な項目を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ListBoxItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ListBoxItem.IsSelected">
      <summary>
        <see cref="T:System.Windows.Controls.ListBoxItem" /> が選択されているかどうかを示す値を取得または設定します。</summary>
      <returns>項目が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.IsSelectedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnCreateAutomationPeer">
      <summary>WPF オートメーション インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>マウスが <see cref="T:System.Windows.Controls.ListBoxItem" /> に移動すると呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>マウスが <see cref="T:System.Windows.Controls.ListBoxItem" /> から離れると呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.ListBoxItem" /> の上でマウスの右ボタンを押すと呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.ListBoxItem" /> の上でマウスの右ボタンを押すと呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.ListBoxItem" /> が <see cref="T:System.Windows.Controls.ListBox" /> で選択されると呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.ListBoxItem" /> が <see cref="T:System.Windows.Controls.ListBox" /> で選択解除されると呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>リスト ボックスの項目のビジュアル親が変更されると呼び出されます。</summary>
      <param name="oldParent">
        <see cref="P:System.Windows.FrameworkElement.Parent" /> の以前の <see cref="T:System.Windows.Controls.ListBoxItem" /> プロパティ。</param>
    </member>
    <member name="E:System.Windows.Controls.ListBoxItem.Selected">
      <summary>
        <see cref="T:System.Windows.Controls.ListBoxItem" /> が選択されているときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.SelectedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.ListBoxItem.Selected" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ListBoxItem.Unselected">
      <summary>
        <see cref="T:System.Windows.Controls.ListBoxItem" /> が選択解除されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.UnselectedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.ListBoxItem.Unselected" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ListView">
      <summary>データ アイテムのリストを表示するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListView.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ListView" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.ListViewItem" /> として表示されるオブジェクトのテンプレート、スタイル、およびバインディングをすべて削除します。</summary>
      <param name="element">消去する <see cref="T:System.Windows.Controls.ListViewItem" /> コンテナー。</param>
      <param name="item">
        <see cref="T:System.Windows.Controls.ListViewItem" /> に格納されているオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.ListView.GetContainerForItemOverride">
      <summary>新しい <see cref="T:System.Windows.Controls.ListViewItem" /> コンテナーを作成して返します。</summary>
      <returns>新しい <see cref="T:System.Windows.Controls.ListViewItem" /> コントロール。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListView.IsItemItsOwnContainerOverride(System.Object)">
      <summary>オブジェクトが <see cref="T:System.Windows.Controls.ListViewItem" /> であるかどうかを判別します。</summary>
      <param name="item">評価するオブジェクト。</param>
      <returns>
        <paramref name="item" /> が <see cref="T:System.Windows.Controls.ListViewItem" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListView.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> コントロールの <see cref="T:System.Windows.Controls.ListView" /> を定義します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> コントロールの <see cref="T:System.Windows.Controls.ListView" /> オブジェクトを返します。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" /> に応答します。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:System.Windows.Controls.ListView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.ListViewItem" /> のスタイル、テンプレート、およびバインディングを設定します。</summary>
      <param name="element">
        <see cref="T:System.Windows.Controls.ListViewItem" /> であるオブジェクト。またはそれに変換可能なオブジェクト。</param>
      <param name="item">
        <see cref="T:System.Windows.Controls.ListViewItem" /> の作成に使用するオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Controls.ListView.View">
      <summary>
        <see cref="T:System.Windows.Controls.ListView" />  コントロール内のデータのスタイル設定および構成を定義するオブジェクトを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ViewBase" /> 内の情報の表示方法を指定する <see cref="T:System.Windows.Controls.ListView" /> オブジェクト。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListView.ViewProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ListView.View" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ListViewItem">
      <summary>
        <see cref="T:System.Windows.Controls.ListView" /> コントロールの項目を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListViewItem.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ListViewItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Controls.MediaElement">
      <summary>オーディオとビデオのいずれかまたはその両方を含むコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> クラスの新しいインスタンスを生成します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> コントロールを配置し、そのサイズを設定します。</summary>
      <param name="finalSize">コントロールの配置に使用されるサイズ。</param>
      <returns>コントロールのサイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Balance">
      <summary>左右のスピーカーのボリュームの比率を取得または設定します。</summary>
      <returns>-1 ～ 1 の範囲で指定される左右のスピーカーのボリュームの比率。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BalanceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.Balance" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.BufferingEnded">
      <summary>メディアのバッファリングが終了したときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingEndedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.MediaElement.BufferingEnded" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.BufferingProgress">
      <summary>バッファリングの進行状況の割合を示す値を取得します。</summary>
      <returns>コンテンツをストリーミングするためのバッファリングが完了した割合。 値の範囲は 0 ～ 1 です。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.BufferingStarted">
      <summary>メディアのバッファリングが開始したときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingStartedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.MediaElement.BufferingStarted" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CanPause">
      <summary>メディアを一時停止できるかどうかを示す値を取得します。</summary>
      <returns>メディアを一時停止できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Clock">
      <summary>メディアの再生を制御する <see cref="T:System.Windows.Media.MediaTimeline" /> に関連付けられたクロックを取得または設定します。</summary>
      <returns>メディアの再生を制御する <see cref="T:System.Windows.Media.MediaTimeline" /> に関連付けられたクロック。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Close">
      <summary>メディアを閉じます。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DownloadProgress">
      <summary>リモート サーバーに配置されているコンテンツのダウンロードが完了した割合を示す値を取得します。</summary>
      <returns>リモート サーバーに配置されているコントロールのダウンロードが完了した割合を示す値。 値の範囲は 0 ～ 1 です。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.HasAudio">
      <summary>メディアにオーディオが含まれているかどうかを示す値を取得します。</summary>
      <returns>メディアにオーディオが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.HasVideo">
      <summary>メディアにビデオが含まれているかどうかを示す値を取得します。</summary>
      <returns>メディアにビデオが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.IsBuffering">
      <summary>メディアがバッファリング中かどうかを示す値を取得します。</summary>
      <returns>メディアがバッファリング中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.IsMuted">
      <summary>オーディオがミュートされているかどうかを示す値を取得または設定します。</summary>
      <returns>オーディオがミュートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.IsMutedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.IsMuted" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.LoadedBehavior">
      <summary>メディアの読み込み時の動作の <see cref="T:System.Windows.Controls.MediaState" /> を取得または設定します。</summary>
      <returns>メディアに対して設定されている読み込み時の動作の <see cref="T:System.Windows.Controls.MediaState" />。 既定値は <see cref="F:System.Windows.Controls.MediaState.Play" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.LoadedBehaviorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="P:System.Windows.UIElement.DesiredSize" /> の <see cref="T:System.Windows.Controls.MediaElement" /> を更新します。 このメソッドは、親 <see cref="T:System.Windows.UIElement" /> によって呼び出されます。 これがレイアウトの最初のパスです。</summary>
      <param name="availableSize">要素が超えることのできない上限。</param>
      <returns>必要なサイズ。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaEnded">
      <summary>メディアが終了したときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.MediaEndedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.MediaElement.MediaEnded" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaFailed">
      <summary>エラーが検出されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.MediaFailedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.MediaElement.MediaFailed" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaOpened">
      <summary>メディアの読み込みが完了したときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.MediaOpenedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.MediaElement.MediaOpened" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalDuration">
      <summary>メディアの自然な継続時間を取得します。</summary>
      <returns>メディアの自然な継続時間。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoHeight">
      <summary>メディアに関連付けられているビデオの高さを取得します。</summary>
      <returns>メディアに関連付けられているビデオの高さ。 オーディオ ファイルは 0 を返します。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoWidth">
      <summary>メディアに関連付けられているビデオの幅を取得します。</summary>
      <returns>メディアに関連付けられているビデオの幅。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.MediaElement" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.MediaElement" /> の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.OnRender(System.Windows.Media.DrawingContext)">
      <summary>
        <see cref="T:System.Windows.Media.DrawingContext" /> コントロールの描画パス中に <see cref="T:System.Windows.Controls.MediaElement" /> オブジェクトのコンテンツを描画します。</summary>
      <param name="drawingContext">描画する <see cref="T:System.Windows.Media.DrawingContext" />。</param>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Pause">
      <summary>現在の位置でメディアを一時停止します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> プロパティは <see langword="null" /> ではありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Play">
      <summary>メディアを現在の位置から再生します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> プロパティは <see langword="null" /> ではありません。</exception>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Position">
      <summary>メディアの再生時間全体の中の現在の経過位置を取得または設定します。</summary>
      <returns>メディアの先頭からの経過時間。 既定値は、00:00:00 です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> プロパティは <see langword="null" /> ではありません。</exception>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.ScriptCommand">
      <summary>メディアにスクリプト コマンドが指定されているときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.ScriptCommandEvent">
      <summary>
        <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.ScrubbingEnabled">
      <summary>一時停止中のシーク操作で <see cref="T:System.Windows.Controls.MediaElement" /> がフレームを更新するかどうかを示す値を取得または設定します。</summary>
      <returns>一時停止中にフレームが更新される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.ScrubbingEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.ScrubbingEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Source">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> のメディア ソースを取得または設定します。</summary>
      <returns>要素のソースを指定する URI。 既定値は、<see langword="null" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> プロパティは <see langword="null" /> ではありません。</exception>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.Source" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.SpeedRatio">
      <summary>メディアの速度比率を取得または設定します。</summary>
      <returns>メディアの速度比率。 有効な範囲は 0 (ゼロ) ～無限大です。 1 未満の値を設定すると標準の再生より遅くなり、1 より大きな値を設定すると標準の再生より速くなります。 負の値は 0 として扱われます。 既定値は 1 です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> プロパティは <see langword="null" /> ではありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Stop">
      <summary>メディアを停止し、最初から再生できるようにリセットします。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> プロパティは <see langword="null" /> ではありません。</exception>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Stretch">
      <summary>
        <see cref="T:System.Windows.Media.Stretch" /> が表示先の四角形を埋める方法を表す <see cref="T:System.Windows.Controls.MediaElement" /> 値を取得または設定します。</summary>
      <returns>レンダリングされるメディアの伸縮値。 既定値は、<see cref="F:System.Windows.Media.Stretch.Uniform" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.StretchDirection">
      <summary>イメージに適用されるスケーリングの制約を決定する値を取得または設定します。</summary>
      <returns>要素が引き伸ばされる方向を指定する値。 既定値は、<see cref="F:System.Windows.Controls.StretchDirection.Both" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.StretchDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.StretchDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.StretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.Stretch" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.System#Windows#Markup#IUriContext#BaseUri">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>現在のコンテキストのベース URI。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.UnloadedBehavior">
      <summary>メディアのアンロード時の動作の <see cref="T:System.Windows.Controls.MediaState" /> を取得または設定します。</summary>
      <returns>メディアのアンロード時の動作の <see cref="T:System.Windows.Controls.MediaState" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.UnloadedBehaviorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Volume">
      <summary>メディアのボリュームを取得または設定します。</summary>
      <returns>0 ～ 1 の間の線形スケール上で表されるメディアのボリューム。 既定値は 0.5 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.VolumeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.Volume" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.MediaState">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> の <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior" /> プロパティと <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior" /> プロパティに適用できる状態を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Close">
      <summary>メディアを閉じるために使用する状態。 すべてのメディア リソース (ビデオ メモリを含む) が解放されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Manual">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> の手動による制御に使用する状態。 <see cref="M:System.Windows.Controls.MediaElement.Play" /> や <see cref="M:System.Windows.Controls.MediaElement.Pause" /> のような対話型メソッドを使用できます。 <see cref="T:System.Windows.Controls.MediaElement" /> に有効なメディア ソースが割り当てられている場合、メディアはプリロールされますが再生されません。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Pause">
      <summary>メディアを一時停止するために使用する状態。 <see cref="T:System.Windows.Controls.MediaElement" /> に有効なメディア ソースが割り当てられている場合、メディアはプリロールされますが一時停止したままになります。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Play">
      <summary>メディアを再生するために使用する状態。 . <see cref="T:System.Windows.Controls.MediaElement" /> に有効なメディア ソースが割り当てられている場合、メディアはプリロールされ自動的に再生されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Stop">
      <summary>メディアを停止するために使用する状態。 <see cref="T:System.Windows.Controls.MediaElement" /> に有効なメディア ソースが割り当てられている場合、メディアはプリロールされますが再生されません。 メディア リソースは解放されません。</summary>
    </member>
    <member name="T:System.Windows.Controls.Menu">
      <summary>コマンドおよびイベント ハンドラーに関連付けられている要素を階層的に編成できるようにするための Windows メニュー コントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Menu.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Menu" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
      <summary>いずれかのマウス ボタンが押されたときまたは解放されたときに呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Menu.IsMainMenu">
      <summary>この <see cref="T:System.Windows.Controls.Menu" /> がメイン メニューのアクティブ化の通知を受け取るかどうかを示す値を取得または設定します。</summary>
      <returns>メニューがメイン メニューのアクティブ化の通知を受け取る場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Menu.IsMainMenuProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnCreateAutomationPeer">
      <summary>WPF オートメーション インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> プロパティが <see langword="true" /> に設定されると呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.KeyDown" /> イベントに応答します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>メニューがデバイスからテキスト入力を受け取ったときに発生する <see cref="E:System.Windows.UIElement.TextInput" /> ルーティング イベントを処理します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定された項目を表示するために、指定された要素を準備します。</summary>
      <param name="element">指定された項目を表示するために使用する要素。</param>
      <param name="item">表示する項目。</param>
    </member>
    <member name="T:System.Windows.Controls.MenuItem">
      <summary>
        <see cref="T:System.Windows.Controls.Menu" /> 内の選択できる項目を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.Checked">
      <summary>メニュー項目がオンにされたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CheckedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.MenuItem.Checked" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.Click">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> がクリックされたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.ClickEvent">
      <summary>
        <see cref="E:System.Windows.Controls.MenuItem.Click" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.Command">
      <summary>メニュー項目に関連付けられたコマンドを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> に関連付けられたコマンド。  既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.CommandParameter">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.Command" /> の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに渡すパラメーターを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.Command" /> の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに渡すパラメーター。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CommandParameterProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CommandProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.Command" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.CommandTarget">
      <summary>指定したコマンドが実行される対象要素を取得または設定します。</summary>
      <returns>指定したコマンドが実行される要素。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CommandTargetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.GetContainerForItemOverride">
      <summary>指定された項目の表示に使用する要素を作成または識別します。</summary>
      <returns>指定された項目を表示するために使用する要素。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.HandlesScrolling">
      <summary>コントロールがスクロールをサポートするかどうかを取得します。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.Icon">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> に表示されるアイコンを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> に表示されるアイコン。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IconProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.Icon" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.InputGestureText">
      <summary>指定した項目に関連付けられたコマンドを呼び出す入力ジェスチャを説明するテキストを設定します。</summary>
      <returns>入力ジェスチャを説明するテキスト (コピーコマンドのCtrl + Cなど)。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.InputGestureTextProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsCheckable">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> にチェック マークを付けることができるかどうかを示す値を取得します。</summary>
      <returns>メニュー項目にチェック マークを付けることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。  既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsCheckableProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsChecked">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> にチェック マークが付いているかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> にチェック マークが付いている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsCheckedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsEnabledCore">
      <summary>
        <see cref="P:System.Windows.ContentElement.IsEnabled" /> プロパティが現在のメニュー項目に対して <see langword="true" /> であるかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" />を選択<see langword="false" />できる場合は。それ以外の場合は。 <see cref="T:System.Windows.Controls.MenuItem" /></returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsHighlighted">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> が強調表示されているかどうか示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> が強調表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsHighlightedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が独自の <c>ItemContainer</c> であるか (または独自のコンテナーとすることが可能か) どうかを判断します。</summary>
      <param name="item">指定された項目。</param>
      <returns>項目が自身の <c>ItemContainer</c> である場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsPressed">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> が押されているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> が押されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsPressedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsSubmenuOpen">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> のサブメニューが開いているかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> のサブメニューが開いている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation">
      <summary>メニューが自身の <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールでアニメーションを中断するかどうかを取得します。</summary>
      <returns>メニューが自身のポップアップでアニメーションを中断する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector">
      <summary>各項目の表示に使用するテンプレートを選択するためのカスタム ロジックを取得または設定します。</summary>
      <returns>ロジックを提供し、項目コンテナーを返すカスタム オブジェクト。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>このコントロールの <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> が呼び出された場合に応答します。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnApplyTemplate">
      <summary>テンプレートのツリーが生成されると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> プロパティが <see langword="true" /> になると呼び出されます。 このメソッドは、<see cref="E:System.Windows.Controls.MenuItem.Checked" /> ルーティング イベントを発生させます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.MenuItem.Checked" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnClick">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> がクリックされて <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントが発生すると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnCreateAutomationPeer">
      <summary>WPF オートメーション インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> を実装します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> の <see cref="T:System.Windows.Controls.MenuItem" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>この要素にキーボード フォーカスがあることを通知します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.GotFocus" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> プロパティが <see langword="true" /> に設定されると呼び出され、<see cref="E:System.Windows.FrameworkElement.Initialized" /> イベントを発生させます。</summary>
      <param name="e">
        <see cref="E:System.Windows.FrameworkElement.Initialized" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> 上、またはその内部にフォーカスがなくなったときに呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントに応答します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>マウスが <see cref="T:System.Windows.Controls.MenuItem" /> に移動するたびに呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>マウスが <see cref="T:System.Windows.Controls.MenuItem" /> から離れるたびに呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウスの左ボタンが押されると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウスの左ボタンが離されると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>マウスがメニュー項目上を移動すると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.MouseMove" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウスの右ボタンが押されると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウスの右ボタンが離されると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> のサブメニューが閉じられると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> のサブメニューが開かれると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> プロパティが <see langword="false" /> になると呼び出されます。 このメソッドは、<see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> ルーティング イベントを発生させます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>ビジュアル <see cref="T:System.Windows.Controls.MenuItem" /> の親が変更されると呼び出されます。</summary>
      <param name="oldParent">ビジュアルの親の変更前の値。ビジュアルに親がなかった場合は null。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定された項目を表示するために、指定された要素を準備します。</summary>
      <param name="element">指定された項目を表示するために使用する要素。</param>
      <param name="item">指定された項目。</param>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.Role">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> のロールを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItemRole" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.RoleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.Role" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.SeparatorStyleKey">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> が <see cref="T:System.Windows.Controls.MenuItem" /> の場合、<see cref="T:System.Windows.Controls.Separator" /> に適用されるスタイルのリソース キーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> が <see cref="T:System.Windows.Controls.MenuItem" /> の場合、<see cref="T:System.Windows.Controls.Separator" /> に適用されるスタイルのリソース キー。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>項目のコンテナーにスタイルを適用するかどうかを決定するために使用されます。</summary>
      <param name="container">スタイルの適用対象のコンテナー。</param>
      <param name="item">コンテナーが属する項目。</param>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> が <see cref="T:System.Windows.Controls.Separator" /> ではない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.StaysOpenOnClick">
      <summary>この <see cref="T:System.Windows.Controls.MenuItem" /> が配置されているサブメニューは、この項目がクリックされても閉じないことを示す値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.MenuItem" /> が配置されているサブメニューは、この項目がクリックされても閉じない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.SubmenuClosed">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> プロパティの状態が <see langword="false" /> に変更されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.SubmenuClosedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> がサブメニューのヘッダーの場合、<see cref="T:System.Windows.Controls.MenuItem" /> に適用されるスタイルのリソース キーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> がサブメニューのヘッダーの場合、<see cref="T:System.Windows.Controls.MenuItem" /> に適用されるスタイルのリソース キー。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.SubmenuItemTemplateKey">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> がサブメニューの場合、<see cref="T:System.Windows.Controls.MenuItem" /> に適用されるスタイルのリソース キーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> がサブメニューの場合、<see cref="T:System.Windows.Controls.MenuItem" /> に適用されるスタイルのリソース キー。</returns>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.SubmenuOpened">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> プロパティの状態が <see langword="true" /> に変更されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.SubmenuOpenedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> がトップレベル メニューのヘッダーの場合、<see cref="T:System.Windows.Controls.MenuItem" /> に適用されるスタイルのリソース キーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> がトップレベル メニューのヘッダーの場合、<see cref="T:System.Windows.Controls.MenuItem" /> に適用されるスタイルのリソース キー。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.TopLevelItemTemplateKey">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> がコマンドを呼び出すことができるトップレベルの <see cref="T:System.Windows.Controls.MenuItem" /> である場合、そのメニュー項目に適用されるスタイルのリソース キーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" /> がコマンドを呼び出すことができるトップレベルの <see cref="T:System.Windows.Controls.MenuItem" /> である場合、そのメニュー項目に適用されるスタイルのリソース キー。</returns>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.Unchecked">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> がチェックされていないときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.UncheckedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate">
      <summary>基になるコレクションまたは他のヒューリスティックの項目の型によってメニューが異なる項目コンテナーを選択するかどうかを示す値を取得または設定します。</summary>
      <returns>メニューで異なる項目コンテナーが選択される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.MenuItemRole">
      <summary>
        <see cref="T:System.Windows.Controls.MenuItem" /> に設定できるさまざまな役割を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.SubmenuHeader">
      <summary>サブメニューのヘッダー。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.SubmenuItem">
      <summary>コマンドを呼び出すことができるサブメニューのメニュー項目。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.TopLevelHeader">
      <summary>トップレベルのメニューのヘッダー。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.TopLevelItem">
      <summary>コマンドを呼び出すことができるトップレベルのメニュー項目。</summary>
    </member>
    <member name="T:System.Windows.Controls.MenuScrollingVisibilityConverter">
      <summary>メニューのスクロール時にリピート ボタンの可視性を処理するデータ バインディング コンバーターを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.MenuScrollingVisibilityConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>ソースからターゲットに値を移動すると呼び出されます。</summary>
      <param name="values">ソース バインディングによって生成された値。</param>
      <param name="targetType">対象の型。 ソースを変換する型。</param>
      <param name="parameter">コンバーター パラメーター。</param>
      <param name="culture">カルチャ情報。</param>
      <returns>変換された値。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>サポートされていません。</summary>
      <param name="value">このパラメーターは使用されません。</param>
      <param name="targetTypes">このパラメーターは使用されません。</param>
      <param name="parameter">このパラメーターは使用されません。</param>
      <param name="culture">このパラメーターは使用されません。</param>
      <returns>
        <see cref="F:System.Windows.Data.Binding.DoNothing" /> .</returns>
    </member>
    <member name="T:System.Windows.Controls.NotifyDataErrorValidationRule">
      <summary>
        <see cref="T:System.ComponentModel.INotifyDataErrorInfo" /> を実装するデータ ソースにより発生するエラーをチェックする規則を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.NotifyDataErrorValidationRule.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Windows.Controls.NotifyDataErrorValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>値の検証チェックを実行します。</summary>
      <param name="value">チェックするバインディング ターゲットの値。</param>
      <param name="cultureInfo">この規則で使用するカルチャ。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Controls.Orientation">
      <summary>コントロールまたはレイアウトで可能な、異なる方向を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Horizontal">
      <summary>コントロールまたはレイアウトを水平方向に配置する必要があります。</summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Vertical">
      <summary>コントロールまたはレイアウトを垂直方向に配置する必要があります。</summary>
    </member>
    <member name="T:System.Windows.Controls.OverflowMode">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> 項目をメイン ツールバー パネルとオーバーフロー パネルに配置する方法を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.OverflowMode.Always">
      <summary>項目は、常時オーバーフロー パネルに配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.OverflowMode.AsNeeded">
      <summary>項目がメイン パネルとオーバーフロー パネルのどちらに配置されるかは、使用できるスペースによって決まります。</summary>
    </member>
    <member name="F:System.Windows.Controls.OverflowMode.Never">
      <summary>項目のオーバーフローは許可されません。</summary>
    </member>
    <member name="T:System.Windows.Controls.Page">
      <summary>Windows Internet Explorer、<see cref="T:System.Windows.Navigation.NavigationWindow" />、および <see cref="T:System.Windows.Controls.Frame" /> でナビゲーションおよびホストできるコンテンツのページをカプセル化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Page.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Page" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Page" /> のコンテンツ (子要素) を配置します。</summary>
      <param name="arrangeBounds">子要素の配置に使用されるサイズ。</param>
      <returns>ページの配置後のサイズを表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.Background">
      <summary>
        <see cref="T:System.Windows.Controls.Page" /> の背景を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" /> の背景を描画するために使用される <see cref="T:System.Windows.Controls.Page" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Page.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.Content">
      <summary>
        <see cref="T:System.Windows.Controls.Page" /> のコンテンツを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Page" /> のコンテンツが格納されるオブジェクト。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.ContentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Page.Content" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.FontFamily">
      <summary>指定したフォント ファミリの名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.FontFamily" /> のコンテンツのフォント ファミリである <see cref="T:System.Windows.Controls.Page" />。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Page.FontFamily" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.FontSize">
      <summary>フォント サイズを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Page" /> のコンテンツのフォント サイズ。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontSize" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Page.FontSize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.Foreground">
      <summary>
        <see cref="T:System.Windows.Controls.Page" /> の前景を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" /> の前景を描画するために使用される <see cref="T:System.Windows.Controls.Page" />。 既定値は、<see cref="P:System.Windows.Media.Brushes.Black" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Page.Foreground" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.KeepAlive">
      <summary>
        <see cref="T:System.Windows.Controls.Page" /> のインスタンスがナビゲーション履歴に保持されるかどうかを示す値を取得または設定します。</summary>
      <returns>ナビゲーション履歴に <see cref="T:System.Windows.Controls.Page" /> のインスタンスを保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.KeepAliveProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Page.KeepAlive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.Page" /> の論理上の子要素に対する列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> の論理上の子要素に対する <see cref="T:System.Windows.Controls.Page" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Page" /> の子要素のサイズを測定します。</summary>
      <param name="constraint">ウィンドウで子に割り当てることができる領域。</param>
      <returns>ウィンドウの実際のサイズである <see cref="T:System.Windows.Size" />。 親がスクロール バーを追加する必要がある場合などは、このメソッドにより、ウィンドウの実際のサイズより大きな値が返されることがあります。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.NavigationService">
      <summary>ページのホストがナビゲーションの管理のために使用しているナビゲーション サービスを取得します。</summary>
      <returns>ページのホストがナビゲーションの管理のために使用している <see cref="T:System.Windows.Navigation.NavigationService" /> オブジェクト。ホストがナビゲーションをサポートしない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>
        <see cref="T:System.Windows.Controls.Page" /> のテンプレートが変更されたときに呼び出されます。</summary>
      <param name="oldTemplate">古いテンプレート。</param>
      <param name="newTemplate">新しいテンプレート。</param>
    </member>
    <member name="M:System.Windows.Controls.Page.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>
        <see cref="T:System.Windows.Controls.Page" /> の親が変更されると呼び出されます。</summary>
      <param name="oldParent">直前の親。 <see cref="T:System.Windows.DependencyObject" /> の直前の親がなかった場合は <see langword="null" /> に設定されます。</param>
      <exception cref="T:System.InvalidOperationException">新しい親が <see cref="T:System.Windows.Window" /> でも <see cref="T:System.Windows.Controls.Frame" /> でもありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeShowsNavigationUI">
      <summary>派生クラスに対し、<see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> プロパティのシリアル化動作の決定を許可します。</summary>
      <returns>コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeTitle">
      <summary>派生クラスに対し、<see cref="P:System.Windows.Controls.Page.Title" /> プロパティのシリアル化動作の決定を許可します。</summary>
      <returns>コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeWindowHeight">
      <summary>派生クラスに対し、<see cref="P:System.Windows.Controls.Page.WindowHeight" /> プロパティのシリアル化動作の決定を許可します。</summary>
      <returns>コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeWindowTitle">
      <summary>派生クラスに対し、<see cref="P:System.Windows.Controls.Page.WindowTitle" /> プロパティのシリアル化動作の決定を許可します。</summary>
      <returns>コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeWindowWidth">
      <summary>派生クラスに対し、<see cref="P:System.Windows.Controls.Page.WindowWidth" /> プロパティのシリアル化動作の決定を許可します。</summary>
      <returns>コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.ShowsNavigationUI">
      <summary>Microsoft Internet Explorer 6 の <see cref="T:System.Windows.Navigation.NavigationWindow" /> のナビゲーション UI を表示するかどうかを示す値を取得または設定します。</summary>
      <returns>ホスト <see cref="T:System.Windows.Navigation.NavigationWindow" /> のナビゲーション UI が表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" />、<see cref="T:System.Windows.Controls.Page" />、またはブラウザーでホストされていない <see cref="T:System.Windows.Window" /> インスタンスで <see cref="T:System.Windows.Navigation.NavigationWindow" /> プロパティが検査されました。</exception>
    </member>
    <member name="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />」をご覧ください。</summary>
      <param name="obj">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />」をご覧ください。</summary>
      <param name="str">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Controls.Page.Template">
      <summary>
        <see cref="T:System.Windows.Controls.Page" /> のコントロール テンプレートを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ControlTemplate" /> の <see cref="T:System.Windows.Controls.Page" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.TemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Page.Template" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.Title">
      <summary>
        <see cref="T:System.Windows.Controls.Page" /> のタイトルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Page" /> のタイトル。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.TitleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Page.Title" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.WindowHeight">
      <summary>
        <see cref="T:System.Windows.Window" /> のホスト <see cref="T:System.Windows.Navigation.NavigationWindow" /> または <see cref="T:System.Windows.Controls.Page" /> の高さを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Page" /> を直接ホストするウィンドウの高さ。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.WindowTitle">
      <summary>
        <see cref="T:System.Windows.Window" /> のホスト <see cref="T:System.Windows.Navigation.NavigationWindow" /> またはホスト <see cref="T:System.Windows.Controls.Page" /> のタイトルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Page" /> を直接ホストするウィンドウのタイトル。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.WindowWidth">
      <summary>
        <see cref="T:System.Windows.Window" /> のホスト <see cref="T:System.Windows.Navigation.NavigationWindow" /> または <see cref="T:System.Windows.Controls.Page" /> の幅を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Page" /> を直接ホストするウィンドウの幅。</returns>
    </member>
    <member name="T:System.Windows.Controls.PageRange">
      <summary>ページの範囲を指定します。</summary>
    </member>
    <member name="M:System.Windows.Controls.PageRange.#ctor(System.Int32)">
      <summary>指定された 1 ページのみを格納した <see cref="T:System.Windows.Controls.PageRange" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="page">印刷または処理されるページ。</param>
    </member>
    <member name="M:System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)">
      <summary>指定された最初のページと最後のページで、<see cref="T:System.Windows.Controls.PageRange" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pageFrom">範囲の最初のページ。</param>
      <param name="pageTo">範囲の最後のページ。</param>
    </member>
    <member name="M:System.Windows.Controls.PageRange.Equals(System.Object)">
      <summary>不明な型のオブジェクトが、この <see cref="T:System.Windows.Controls.PageRange" /> と等しいかどうかをテストします。</summary>
      <param name="obj">テスト対象のオブジェクト。</param>
      <returns>オブジェクトの型が <see cref="T:System.Windows.Controls.PageRange" /> で、この <see cref="T:System.Windows.Controls.PageRange" /> と等しい場合は <see langword="true" />。その他の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)">
      <summary>
        <see cref="T:System.Windows.Controls.PageRange" /> がこの <see cref="T:System.Windows.Controls.PageRange" /> と等しいかどうかをテストします。</summary>
      <param name="pageRange">テスト対象の <see cref="T:System.Windows.Controls.PageRange" />。</param>
      <returns>2 つの <see cref="T:System.Windows.Controls.PageRange" /> オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.GetHashCode">
      <summary>
        <see cref="T:System.Windows.Controls.PageRange" /> のハッシュ コードの値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.PageRange" /> のハッシュ コード値。</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)">
      <summary>指定された 2 つの <see cref="T:System.Windows.Controls.PageRange" /> オブジェクトが等しいかどうかをテストするための "==" 演算子を定義します。</summary>
      <param name="pr1">最初の <see cref="T:System.Windows.Controls.PageRange" />。</param>
      <param name="pr2">第 2 の <see cref="T:System.Windows.Controls.PageRange" />。</param>
      <returns>2 つの <see cref="T:System.Windows.Controls.PageRange" /> オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)">
      <summary>指定された 2 つの <see cref="T:System.Windows.Controls.PageRange" /> オブジェクトが等しくないかどうかをテストする "!=" 演算子を定義します。</summary>
      <param name="pr1">最初の <see cref="T:System.Windows.Controls.PageRange" />。</param>
      <param name="pr2">第 2 の <see cref="T:System.Windows.Controls.PageRange" />。</param>
      <returns>2 つの <see cref="T:System.Windows.Controls.PageRange" /> オブジェクトが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.PageRange.PageFrom">
      <summary>範囲の最初のページ番号を取得または設定します。</summary>
      <returns>範囲の最初のページを示す、1 から始まるページ番号。</returns>
    </member>
    <member name="P:System.Windows.Controls.PageRange.PageTo">
      <summary>範囲の最後のページ番号を取得または設定します。</summary>
      <returns>範囲の最後のページを示す、1 から始まるページ番号。</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.ToString">
      <summary>範囲の文字列表現を取得します。</summary>
      <returns>ページの範囲を "<see cref="P:System.Windows.Controls.PageRange.PageFrom" /><c>-</c><see cref="P:System.Windows.Controls.PageRange.PageTo" />" の形式で表す文字列。</returns>
    </member>
    <member name="T:System.Windows.Controls.PageRangeSelection">
      <summary>ある操作 (通常は印刷) で、すべてのページを処理するか、限定した範囲だけを処理するかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.AllPages">
      <summary>すべてのページ。</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.CurrentPage">
      <summary>現在のページ。</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.SelectedPages">
      <summary>選択されたページ。</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.UserPages">
      <summary>ユーザーが指定したページの範囲。</summary>
    </member>
    <member name="T:System.Windows.Controls.Panel">
      <summary>すべての <see cref="T:System.Windows.Controls.Panel" /> 要素の基底クラスを提供します。 <see cref="T:System.Windows.Controls.Panel" /> 要素を使用して、Windows Presentation Foundation (WPF) アプリケーション内の子オブジェクトを配置および整理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Panel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Panel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Panel.Background">
      <summary>
        <see cref="T:System.Windows.Media.Brush" /> の境界線間の領域を塗りつぶすために使用する <see cref="T:System.Windows.Controls.Panel" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" />。 この既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Panel.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Panel.Children">
      <summary>この <see cref="T:System.Windows.Controls.UIElementCollection" /> の子要素の <see cref="T:System.Windows.Controls.Panel" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.UIElementCollection" />。 既定値は空の <see cref="T:System.Windows.Controls.UIElementCollection" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.CreateUIElementCollection(System.Windows.FrameworkElement)">
      <summary>新しい <see cref="T:System.Windows.Controls.UIElementCollection" /> を作成します。</summary>
      <param name="logicalParent">作成されるコレクションの論理上の親要素。</param>
      <returns>指定された論理上の親を持つ、要素の順序付きコレクション。</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.GetVisualChild(System.Int32)">
      <summary>指定されたインデックス位置にあるこの <see cref="T:System.Windows.Media.Visual" /> の <see cref="T:System.Windows.Controls.Panel" /> 子を取得します。</summary>
      <param name="index">
        <see cref="T:System.Windows.Media.Visual" /> 子のインデックス位置。</param>
      <returns>親 <see cref="T:System.Windows.Media.Visual" /> 要素の子 <see cref="T:System.Windows.Controls.Panel" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.GetZIndex(System.Windows.UIElement)">
      <summary>特定の要素の <see cref="P:System.Windows.Controls.Panel.ZIndex" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 値の取得対象となる要素。</param>
      <returns>要素の <see cref="P:System.Windows.Controls.Panel.ZIndex" /> の位置。</returns>
      <exception cref="T:System.ArgumentNullException">要素は <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Controls.Panel.HasLogicalOrientation">
      <summary>この <see cref="T:System.Windows.Controls.Panel" /> がその子孫を 1 次元で整列させるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Panel" /> の方向が 1 次元の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.HasLogicalOrientationPublic">
      <summary>この <see cref="T:System.Windows.Controls.Panel" /> がその子孫を 1 次元で整列させるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Panel" /> の方向が 1 次元の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.InternalChildren">
      <summary>子要素の <see cref="T:System.Windows.Controls.UIElementCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> オブジェクトの順序指定されたコレクション。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.IsItemsHost">
      <summary>この <see cref="T:System.Windows.Controls.Panel" /> が <see cref="T:System.Windows.Controls.ItemsControl" /> で生成されるユーザー インターフェイス (UI) 項目のコンテナーであることを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Panel" /> のこのインスタンスが項目ホストの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.IsItemsHostProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Panel.LogicalChildren">
      <summary>この <see cref="T:System.Windows.Controls.Panel" /> 要素の論理上の子要素を反復処理できる列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.LogicalOrientation">
      <summary>パネルが 1 次元のレイアウトのみをサポートする場合は、パネルの <see cref="T:System.Windows.Controls.Orientation" />。</summary>
      <returns>パネルの <see cref="T:System.Windows.Controls.Orientation" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.LogicalOrientationPublic">
      <summary>パネルが 1 次元のレイアウトのみをサポートする場合は、パネルの <see cref="T:System.Windows.Controls.Orientation" />。</summary>
      <returns>パネルの <see cref="T:System.Windows.Controls.Orientation" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <summary>
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> プロパティ値が変更されたことを示します。</summary>
      <param name="oldIsItemsHost">変更前のプロパティ値。</param>
      <param name="newIsItemsHost">新しいプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.OnRender(System.Windows.Media.DrawingContext)">
      <summary>
        <see cref="T:System.Windows.Controls.Panel" /> 要素のレンダー パス中に、<see cref="T:System.Windows.Media.DrawingContext" /> オブジェクトの内容を描画します。</summary>
      <param name="dc">描画する <see cref="T:System.Windows.Media.DrawingContext" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>ビジュアル オブジェクトの <see cref="T:System.Windows.Media.VisualCollection" /> が変更されると、呼び出されます。</summary>
      <param name="visualAdded">コレクションに追加された <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="visualRemoved">コレクションから削除された <see cref="T:System.Windows.Media.Visual" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.SetZIndex(System.Windows.UIElement,System.Int32)">
      <summary>所定の要素の <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティ値を適用する要素。</param>
      <param name="value">この要素が表示される、z 平面上の順序。</param>
      <exception cref="T:System.ArgumentNullException">要素は <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.Panel.ShouldSerializeChildren">
      <summary>パネルの <see cref="P:System.Windows.Controls.Panel.Children" /> コレクションをシリアル化する必要があるかどうかを判断します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Panel.Children" /> コレクションをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 <see cref="P:System.Windows.Controls.Panel.Children" /> コレクションは、空または <see langword="null" /> ではない場合にのみシリアル化されます。</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.Panel.VisualChildrenCount">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> のこのインスタンス内の子 <see cref="T:System.Windows.Controls.Panel" /> オブジェクトの数を取得します。</summary>
      <returns>子 <see cref="T:System.Windows.Media.Visual" /> オブジェクトの数。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.ZIndex">
      <summary>要素が Z 平面上に表示される順序を表す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Panel.ZIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.PanningMode">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> がタッチ操作に反応する方法を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.Both">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> は水平および垂直にスクロールします。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.HorizontalFirst">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> は、ユーザーが最初に指を水平に動かしたときにスクロールします。  ユーザーが最初に指を垂直に動かした場合は、その動作がマウス イベントとして扱われます。  スクロールを開始した後に、<see cref="T:System.Windows.Controls.ScrollViewer" /> が水平および垂直にスクロールします。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.HorizontalOnly">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> は水平方向にのみスクロールします。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.None">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> は、タッチ入力には応答しません。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.VerticalFirst">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> は、ユーザーが最初に指を垂直に動かしたときにスクロールします。  ユーザーが最初に指を水平に動かした場合は、その動作がマウス イベントとして扱われます。  スクロールを開始した後に、<see cref="T:System.Windows.Controls.ScrollViewer" /> が水平および垂直にスクロールします。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.VerticalOnly">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> は垂直方向にのみスクロールします。</summary>
    </member>
    <member name="T:System.Windows.Controls.PasswordBox">
      <summary>パスワードの入力および処理のために設計されたコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.CaretBrush">
      <summary>パスワード ボックスのキャレットの色を指定するブラシを取得または設定します。</summary>
      <returns>パスワード ボックスのキャレットの色を表すブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.CaretBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.CaretBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.Clear">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.Password" /> プロパティの値を消去します。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> にフォーカスがない場合に <see cref="T:System.Windows.Controls.PasswordBox" /> が選択されたテキストを表示するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.PasswordBox" /> にフォーカスがないときに <see cref="T:System.Windows.Controls.PasswordBox" /> が選択されたテキストを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.IsSelectionActive">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> にフォーカスがあり、選択されたテキストがあるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.PasswordBox" /> にフォーカスと選択したテキストがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.IsSelectionActiveProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.IsSelectionActive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.MaxLength">
      <summary>この <see cref="T:System.Windows.Controls.PasswordBox" /> によって処理されるパスワードの最大長を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.PasswordBox" /> によって処理されるパスワードの最大長 (文字数) を指定する整数。
値がゼロ (0) の場合、制限はありません。
既定値は0 (長さの制限なし) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.MaxLengthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.MaxLength" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.OnApplyTemplate">
      <summary>内部プロセスまたはアプリケーションによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> が呼び出されたときに呼び出されます。これは、現在のテンプレートのビジュアル ツリーの構築に使用されます。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.Password">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> に現在保持されているパスワードを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.PasswordBox" /> に現在保持されているパスワードを表す文字列。
既定値は <see cref="F:System.String.Empty" /> です。</returns>
    </member>
    <member name="E:System.Windows.Controls.PasswordBox.PasswordChanged">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.Password" /> プロパティの値が変化したときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordChangedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.PasswordBox.PasswordChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.PasswordChar">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> のマスク文字を取得または設定します。</summary>
      <returns>ユーザーが <see cref="T:System.Windows.Controls.PasswordBox" /> にテキストを入力したときにエコーされるマスク文字。
既定値は、箇条書き文字 (●) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordCharProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.Paste">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> の現在の選択項目をクリップボードの内容と置き換えます。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SecurePassword">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> に現在保持されているパスワードを <see cref="T:System.Security.SecureString" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.PasswordBox" /> に現在保持されているパスワードを表すセキュリティ文字列。</returns>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.SelectAll">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> の内容全体を選択します。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionBrush">
      <summary>選択されているテキストを強調表示するブラシを取得または設定します。</summary>
      <returns>選択されているテキストを強調表示するブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionOpacity">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" /> の不透明度を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" /> の不透明度。 既定値は0.4 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionOpacityProperty">
      <summary>
        <see cref="F:System.Windows.Controls.PasswordBox.SelectionOpacityProperty" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionTextBrush">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> コントロールで選択したテキストに使用されるブラシを定義する値を取得または設定します。</summary>
      <returns>選択されたテキストに使用されるブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionTextBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.SelectionTextBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.AutoToolTipPlacement">
      <summary>自動 <see cref="T:System.Windows.Controls.ToolTip" /> を <see cref="T:System.Windows.Controls.Slider" /> コントロールに配置する方法について説明します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.BottomRight">
      <summary>水平 <see cref="T:System.Windows.Controls.Slider" /> の場合、自動 <see cref="T:System.Windows.Controls.ToolTip" /> を <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の下端に表示します。 垂直 <see cref="T:System.Windows.Controls.Slider" /> の場合、自動 <see cref="T:System.Windows.Controls.ToolTip" /> を <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の右端に表示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None">
      <summary>自動 <see cref="T:System.Windows.Controls.ToolTip" /> なし。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.TopLeft">
      <summary>水平 <see cref="T:System.Windows.Controls.Slider" /> の場合、自動 <see cref="T:System.Windows.Controls.ToolTip" /> を <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の上端に表示します。 垂直 <see cref="T:System.Windows.Controls.Slider" /> の場合、自動 <see cref="T:System.Windows.Controls.ToolTip" /> を <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の左端に表示します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.BulletDecorator">
      <summary>行頭文字とビジュアル オブジェクトを整列するレイアウト コントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> コントロールの既定のコンテンツ配置動作をオーバーライドします。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Size" /> コントロールのコンテンツのレイアウトに使用できる <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />。</param>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> コントロールの計算されたサイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.Background">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> コントロールの背景色を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> の <see cref="P:System.Windows.Controls.Decorator.Child" /> および <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> の背景色。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.BulletDecorator.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> で行頭文字として使用するオブジェクトを取得または設定します。</summary>
      <returns>行頭文字として使用する <see cref="T:System.Windows.UIElement" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.GetVisualChild(System.Int32)">
      <summary>指定したインデックス位置にある子要素を取得します。</summary>
      <param name="index">子要素に対して指定されたインデックス。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Windows.Media.Visual" /> 子要素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満です。
または
<paramref name="index" /> が <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.VisualChildrenCount" /> 以上です。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> コントロールの論理上の子要素に対する列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> コントロールの論理上の子要素へのアクセスを提供する列挙子。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> コントロールのオブジェクトの既定の測定動作をオーバーライドします。</summary>
      <param name="constraint">
        <see cref="T:System.Windows.Size" /> の <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> の上限。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> および <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> オブジェクトのサイズに基づく <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> コントロールに必要な <see cref="P:System.Windows.Controls.Decorator.Child" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.OnRender(System.Windows.Media.DrawingContext)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> コントロールのコンテンツをレンダリングします。</summary>
      <param name="dc">
        <see cref="T:System.Windows.Media.DrawingContext" /> の <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.VisualChildrenCount">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> コントロールの子ビジュアル要素の数を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> に定義されているビジュアル要素の数。 既定値は 0 です。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ButtonBase">
      <summary>すべての <see cref="T:System.Windows.Controls.Button" /> コントロールの基本クラスを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ButtonBase.Click">
      <summary>
        <see cref="T:System.Windows.Controls.Button" /> がクリックされたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントが発生するタイミングを取得または設定します。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントが発生するタイミング。 既定値は <see cref="F:System.Windows.Controls.ClickMode.Release" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.Command">
      <summary>このボタンが押されたときに呼び出すコマンドを取得または設定します。</summary>
      <returns>このボタンが押されたときに呼び出すコマンド。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> プロパティに渡すパラメーターを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> プロパティに渡すパラメーター。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty">
      <summary>ルーティング <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
      <summary>指定したコマンドの発生元の要素を取得または設定します。</summary>
      <returns>コマンドが実行される要素。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore">
      <summary>
        <see cref="P:System.Windows.ContentElement.IsEnabled" /> プロパティの値を取得します。</summary>
      <returns>コントロールが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> が現在アクティブになっているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> がアクティブになっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>このコントロールの <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> が呼び出されると応答します。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnClick">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> ルーティング イベントを発生させます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">
        <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> のデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>このコントロールにフォーカスがある状態でユーザーがキーを押したときに発生する <see cref="E:System.Windows.UIElement.KeyDown" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>このコントロールにフォーカスがある状態でユーザーがキーを離したときに発生する <see cref="E:System.Windows.UIElement.KeyUp" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyUp" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>要素がキーボード フォーカスを失うと呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>このコントロールがマウスのイベント メッセージを受信しなくなったときに発生する <see cref="E:System.Windows.UIElement.LostMouseCapture" /> ルーティング イベントに対するクラス処理を提供します。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>マウスがこのコントロールに入ったときに発生する <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>マウスが要素から離れたときに発生する <see cref="E:System.Windows.UIElement.MouseLeave" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウス ポインターがこのコントロールの上にある状態でマウスの左ボタンが押されたときに発生する <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウス ポインターがこのコントロールの上にある状態でマウスの左ボタンが離されたときに発生する <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>マウス ポインターがこの要素の上を移動するときに発生する <see cref="E:System.Windows.UIElement.MouseMove" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>レンダリングされるコントロールのサイズが変更されると呼び出されます。</summary>
      <param name="sizeInfo">サイズの変更を指定します。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarButton">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> オブジェクトでの月または年を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarButton.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays">
      <summary>このボタンが選択された日付を含む年または月を表すかどうかを示す値を取得します。</summary>
      <returns>このボタンが選択された日付を含む年または月を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDaysProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive">
      <summary>このボタンが現在表示されている 10 年に含まれない年を表すかどうかを示す値を取得します。</summary>
      <returns>このボタンが現在表示されている月に含まれない日、または現在表示されている 10 年に含まれない年を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarButton.IsInactiveProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarDayButton">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> 上の日を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut">
      <summary>日付が使用不可能かどうかを示す値を取得します。</summary>
      <returns>日付が使用できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOutProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted">
      <summary>このボタンが強調表示されているかどうかを示す値を取得します。</summary>
      <returns>ボタンが強調表示されている場合は、<see langword="true" /> を返します。それ以外の場合は、<see langword="false" /> を返します。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlightedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive">
      <summary>このボタンが現在表示されている月に存在しない日を表すかどうかを示す値を取得します。</summary>
      <returns>このボタンが現在表示されている月に存在しない日を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsInactiveProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected">
      <summary>このボタンで表される日付が選択されているかどうかを示す値を取得します。</summary>
      <returns>日付が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsSelectedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday">
      <summary>このボタンで表される日付が現在の日付であるかどうかを示す値を取得します。</summary>
      <returns>日付が現在の日付である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsTodayProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarItem">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> に現在表示されている月または年を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarItem.DayTitleTemplateResourceKey">
      <summary>曜日を表示する <see cref="T:System.Windows.DataTemplate" /> のリソース キーを取得または設定します。</summary>
      <returns>曜日を表示する <see cref="T:System.Windows.DataTemplate" /> のリソース キー。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CustomPopupPlacement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールのカスタム配置パラメーターを定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.#ctor(System.Windows.Point,System.Windows.Controls.Primitives.PopupPrimaryAxis)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="point">
        <see cref="T:System.Windows.Point" /> の左上隅を配置する <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> に対して相対的な <see cref="T:System.Windows.Controls.Primitives.Popup" />。</param>
      <param name="primaryAxis">画面の端に隠れている場合に、<see cref="T:System.Windows.Controls.Primitives.PopupPrimaryAxis" /> コントロールが沿って移動する <see cref="T:System.Windows.Controls.Primitives.Popup" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.Equals(System.Object)">
      <summary>この構造体と別の <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 構造体を比較し、それらの構造体が等しいかどうかを確認します。</summary>
      <param name="o">比較対象の <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 構造体。</param>
      <returns>構造体が同じ値を持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.GetHashCode">
      <summary>この構造体のハッシュ コードを取得します。</summary>
      <returns>この構造体のハッシュ コード。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Equality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)">
      <summary>2 つの <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 構造体を比較し、それらの構造体が等しいかどうかを判断します。</summary>
      <param name="placement1">最初に比較する <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 構造体。</param>
      <param name="placement2">比較する 2 番目の <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 構造体。</param>
      <returns>構造体が同じ値を持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Inequality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)">
      <summary>2 つの <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 構造体を比較し、それらの構造体が等しくないかどうかを判断します。</summary>
      <param name="placement1">最初に比較する <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 構造体。</param>
      <param name="placement2">比較する 2 番目の <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 構造体。</param>
      <returns>構造体が同じ値を持たない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CustomPopupPlacement.Point">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの左上隅が配置されているターゲット オブジェクトに対する相対位置を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Point" /> コントロールを配置するために使用する <see cref="T:System.Windows.Controls.Primitives.Popup" />。 既定値は (0,0) です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CustomPopupPlacement.PrimaryAxis">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の境界によって隠されている場合に <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを移動する方向を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の境界によって隠されている場合に <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを移動する方向。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールのカスタム位置を提供するメソッドを表します。</summary>
      <param name="popupSize">
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの <see cref="T:System.Windows.Size" />。</param>
      <param name="targetSize">
        <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> の <see cref="T:System.Windows.Size" />。</param>
      <param name="offset">
        <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> プロパティ値と <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> プロパティ値から計算された <see cref="T:System.Windows.Point" />。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> に対して相対的な <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの可能な <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 位置の配列。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridCellsPresenter">
      <summary>セルが追加される、コントロールのビジュアル ツリー内の場所を指定するために、<see cref="T:System.Windows.Controls.DataGrid" /> のテンプレート内で使用されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Control" /> オブジェクトのコンテンツを配置し、そのサイズを設定するために呼び出されます。</summary>
      <param name="finalSize">この要素が要素自体と子を配置するために使用する親の末尾の領域。</param>
      <returns>コントロールのサイズです。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定されたセルのコンテナー参照を消去します。</summary>
      <param name="element">消去する <see cref="T:System.Windows.Controls.DataGridCell" />。</param>
      <param name="item">データ項目。 この値は使用されません。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.GetContainerForItemOverride">
      <summary>セル値を格納する新しい <see cref="T:System.Windows.Controls.DataGridCell" /> インスタンスを返します。</summary>
      <returns>新しい <see cref="T:System.Windows.Controls.DataGridCell" /> インスタンス。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が自身のコンテナーかどうか (または自身のコンテナーにすることができるかどうか) を判断します。</summary>
      <param name="item">確認する項目。</param>
      <returns>項目が自身のコンテナーである (または自身のコンテナーにすることができる) 場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item">
      <summary>行が表すデータ項目を取得します。</summary>
      <returns>行が表すデータ項目。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>コントロールを再測定するために呼び出されます。</summary>
      <param name="availableSize">この要素が子要素に提供できる使用可能なサイズ。</param>
      <returns>コントロールのサイズ。最大値は制約によって指定されます。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnApplyTemplate">
      <summary>アプリケーション コードまたは内部プロセスが <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> を呼び出すたびに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnColumnsChanged(System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.DataGridColumn},System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.DataGrid.Columns" /> コレクションが変更されたときに、表示されているセルを更新します。</summary>
      <param name="columns">
        <see cref="P:System.Windows.Controls.DataGrid.Columns" /> のコレクション。</param>
      <param name="e">
        <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> コレクションの <see cref="P:System.Windows.Controls.DataGrid.Columns" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnItemChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> プロパティ値が変更されたときに、表示されているセルを更新します。</summary>
      <param name="oldItem">
        <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> プロパティの以前の値。</param>
      <param name="newItem">
        <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnRender(System.Windows.Media.DrawingContext)">
      <summary>水平グリッド線が表示されている場合に、セルの下に水平線を描画するためにレイアウト システムによって呼び出されます。</summary>
      <param name="drawingContext">セルの描画命令。 このコンテキストはレイアウト システムに提供されます。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定された項目を表示するために、セルを準備します。</summary>
      <param name="element">準備するセル。</param>
      <param name="item">表示する項目。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeader">
      <summary>個々の <see cref="T:System.Windows.Controls.DataGrid" /> 列ヘッダーを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort">
      <summary>ユーザーがこの列ヘッダーをクリックして、関連付けられた列で <see cref="T:System.Windows.Controls.DataGrid" /> を並べ替えることができるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーがこの列ヘッダーをクリックして、関連付けられた列で <see cref="T:System.Windows.Controls.DataGrid" /> を並べ替えることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSortProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.Column">
      <summary>この列ヘッダーに関連付けられた <see cref="T:System.Windows.Controls.DataGridColumn" /> を取得します。</summary>
      <returns>この列ヘッダーに関連付けられた列。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.ColumnFloatingHeaderStyleKey">
      <summary>ヘッダーのドラッグ操作中に列ヘッダーを表示するためのスタイルを参照するキーを取得します。</summary>
      <returns>フローティング列ヘッダーのスタイル キー。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey">
      <summary>ヘッダーのドラッグ操作中に表示されるドロップ位置のインジケーターのスタイルを参照するキーを取得します。</summary>
      <returns>ドロップ位置のインジケーターのスタイル キー。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex">
      <summary>この列ヘッダーに関連付けられた列の表示位置を、<see cref="T:System.Windows.Controls.DataGrid" /> 内の他の列を基準として取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> 内の他の列を基準とした、関連付けられた列の表示位置。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen">
      <summary>この列ヘッダーに関連付けられた列について、水平方向のスクロールが禁止されているかどうかを示す値を取得します。</summary>
      <returns>関連付けられた列で水平方向のスクロールが禁止されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、列ヘッダーのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnClick">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させ、並べ替えを開始します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnCreateAutomationPeer">
      <summary>この列ヘッダーの新しい <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" /> を返します。</summary>
      <returns>この列ヘッダーの新しいオートメーション ピア。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>このコントロールがマウスのイベント メッセージを受信しなくなったときに発生する <see cref="E:System.Windows.UIElement.LostMouseCapture" /> ルーティング イベントに対するクラス処理を提供します。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウス ポインターがこのコントロールの上にある状態でマウスの左ボタンが押されたときに発生する <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウス ポインターがこのコントロールの上にある状態でマウスの左ボタンが離されたときに発生する <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>マウス ポインターがこの要素の上を移動するときに発生する <see cref="E:System.Windows.UIElement.MouseMove" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush">
      <summary>列ヘッダー区分線の描画に使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>列ヘッダー区分線の描画に使用するブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility">
      <summary>列ヘッダー区分線のユーザー インターフェイス (UI) の表示状態を取得または設定します。</summary>
      <returns>列ヘッダー区分線の UI の表示状態。 既定値は、<see cref="F:System.Windows.Visibility.Visible" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection">
      <summary>関連付けられた列で <see cref="T:System.Windows.Controls.DataGrid" /> が並べ替えられているかどうか、および列の値の並び順が昇順と降順のどちらであるかを示す値を取得します。</summary>
      <returns>列の並べ替えの方向。並べ替えられていない場合は <see langword="null" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter">
      <summary>列ヘッダーが追加される、コントロールのビジュアル ツリー内の場所を指定するために、<see cref="T:System.Windows.Controls.DataGrid" /> のテンプレート内で使用されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Control" /> オブジェクトのコンテンツを配置し、そのサイズを設定するために呼び出されます。</summary>
      <param name="finalSize">この要素が要素自体と子を配置するために使用する親の末尾の領域。</param>
      <returns>コントロールのサイズです。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>派生クラスの中でオーバーライドした場合、<see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> メソッドの効果を元に戻します。</summary>
      <param name="element">コンテナー要素。</param>
      <param name="item">項目。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetContainerForItemOverride">
      <summary>列ヘッダー値を格納する新しい <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> インスタンスを返します。</summary>
      <returns>新しい <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> インスタンス。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetLayoutClip(System.Windows.Size)">
      <summary>クリッピング マスクのジオメトリを返します。 クリッピング マスクは、利用可能な表示領域より大きな要素をレイアウト システムが配置しようとすると適用されます。</summary>
      <param name="layoutSlotSize">レンダリングされる列ヘッダーのサイズ。</param>
      <returns>クリッピング ジオメトリ。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetVisualChild(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Windows.Media.Visual" /> 子を返します。</summary>
      <param name="index">返される <see cref="T:System.Windows.Media.Visual" /> 子のインデックス。</param>
      <returns>子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が自身のコンテナーかどうか (または自身のコンテナーにすることができるかどうか) を判断します。</summary>
      <param name="item">確認する項目。</param>
      <returns>項目が独自のコンテナーである (または独自のコンテナーの対象である) 場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.MeasureOverride(System.Windows.Size)">
      <summary>コントロールを再測定するために呼び出されます。</summary>
      <param name="availableSize">この要素が子要素に提供できる使用可能なサイズ。</param>
      <returns>コントロールのサイズ。最大値は制約によって指定されます。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.OnApplyTemplate">
      <summary>アプリケーション コードまたは内部プロセスが <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> を呼び出すたびに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.OnCreateAutomationPeer">
      <summary>このプレゼンターの新しい <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer" /> を返します。</summary>
      <returns>このプレゼンターの新しいオートメーション ピア。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定された項目を表示するために、指定された要素を準備します。</summary>
      <param name="element">指定された項目を表示するために使用する要素。</param>
      <param name="item">指定された項目。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.VisualChildrenCount">
      <summary>このプレゼンター内の <see cref="T:System.Windows.Media.Visual" /> 子の数を取得します。</summary>
      <returns>ビジュアル子の数。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter">
      <summary>行の詳細が追加される、コントロールのビジュアル ツリー内の場所を指定するために、<see cref="T:System.Windows.Controls.DataGrid" /> のテンプレート内で使用されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>1 つの子要素を配置し、<see cref="T:System.Windows.Controls.ContentPresenter" /> オブジェクトのコンテンツを決定します。</summary>
      <param name="finalSize">この要素が要素自体と子を配置するために使用する親の末尾の領域。</param>
      <returns>要素に必要な実際のサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>子コンテンツのサイズ設定プロパティ、余白、および要求サイズに基づいて <see cref="T:System.Windows.Controls.ContentPresenter" /> オブジェクトのサイズを決定します。</summary>
      <param name="availableSize">この要素が子要素に提供できる使用可能なサイズ。</param>
      <returns>子コンテンツを配置するために必要なサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnCreateAutomationPeer">
      <summary>このプレゼンターの新しい <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" /> を返します。</summary>
      <returns>このプレゼンターの新しいオートメーション ピア。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnRender(System.Windows.Media.DrawingContext)">
      <summary>水平グリッド線が表示されている場合に、行の詳細セクションの下に水平線を描画するためにレイアウト システムによって呼び出されます。</summary>
      <param name="drawingContext">行の詳細の描画命令。 このコンテキストはレイアウト システムに提供されます。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>ビジュアル ツリー内のこの要素の親が変更されたときに呼び出されます。 <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" /> をオーバーライドします。</summary>
      <param name="oldParent">前の親要素。 <see langword="null" /> は要素に前のビジュアル親が存在しないことを示します。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridRowHeader">
      <summary>個々の <see cref="T:System.Windows.Controls.DataGrid" /> 行ヘッダーを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected">
      <summary>行が選択されているかどうかを示す値を取得します。</summary>
      <returns>行が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値が何に影響されるかについては、<see cref="T:System.Windows.DependencyProperty" /> のトピックを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelectedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> パス時の配置の準備として <see cref="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)" /> の子を測定します。</summary>
      <param name="availableSize">この要素が子要素に提供できる使用可能なサイズ。 子要素に与える上限を指定します。</param>
      <returns>子オブジェクトの割り当てサイズの計算に基づいて <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> でレイアウト時に必要と判断されたサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、行ヘッダーのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnClick">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させ、行選択またはドラッグ操作を開始します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnCreateAutomationPeer">
      <summary>この行ヘッダーの新しい <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" /> を返します。</summary>
      <returns>この行ヘッダーの新しいオートメーション ピア。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush">
      <summary>行ヘッダー区分線の描画に使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>行ヘッダー区分線の描画に使用するブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility">
      <summary>行ヘッダー区分線のユーザー インターフェイス (UI) の表示状態を取得または設定します。</summary>
      <returns>行ヘッダー区分線の UI の表示状態。 既定値は、<see cref="F:System.Windows.Visibility.Visible" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridRowsPresenter">
      <summary>行が追加される、コントロールのビジュアル ツリー内の場所を指定するために、<see cref="T:System.Windows.Controls.DataGrid" /> のテンプレート内で使用されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> が渡される間、配置を予測して <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" /> の子要素を測定します。</summary>
      <param name="constraint">超えることができない上限の <see cref="T:System.Windows.Size" />。</param>
      <returns>要素の必要なサイズを表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>表示領域の外側へスクロールされた行について、<see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <summary>
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> プロパティ値が変更されたことを示します。</summary>
      <param name="oldIsItemsHost">変更前のプロパティ値。</param>
      <param name="newIsItemsHost">新しいプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
      <summary>ビューポートのサイズが変更されると呼び出されます。</summary>
      <param name="oldViewportSize">ビューポートの以前のサイズ。</param>
      <param name="newViewportSize">ビューポートの新しいサイズ。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DatePickerTextBox">
      <summary>
        <see cref="T:System.Windows.Controls.DatePicker" /> のテキスト入力を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DocumentPageView">
      <summary>改ページ調整された <see cref="T:System.Windows.Documents.DocumentPage" /> のビューポートを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.ArrangeOverride(System.Windows.Size)">
      <summary>指定されたビュー サイズに合わせてコンテンツを配置します。</summary>
      <param name="finalSize">ページ ビューがビュー自体と子を配置するために使用する最大サイズ。</param>
      <returns>ページ ビューがビュー自体と子を配置するために使用した実際のサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage">
      <summary>このビューに関連付けられている <see cref="T:System.Windows.Documents.DocumentPage" /> を取得します。</summary>
      <returns>このビューに関連付けられているドキュメント ページ。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPaginator">
      <summary>このビューのコンテンツ ページを取得するために使用する <see cref="T:System.Windows.Documents.DocumentPaginator" /> を取得または設定します。</summary>
      <returns>このビューのコンテンツ ページを取得するページネータ。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.GetService(System.Type)">
      <summary>指定した型のサービス オブジェクトを取得します。</summary>
      <param name="serviceType">取得するサービス オブジェクトの型。</param>
      <returns>
        <paramref name="serviceType" /> 型のサービス オブジェクト。<paramref name="serviceType" /> 型のサービス オブジェクトがない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.GetVisualChild(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Windows.Media.Visual" /> 子を返します。</summary>
      <param name="index">返すビジュアル子のインデックス。</param>
      <returns>指定したインデックス位置にあるビジュアル子。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満か、<see cref="P:System.Windows.Controls.Primitives.DocumentPageView.VisualChildrenCount" /> 以上です。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.IsDisposed">
      <summary>このインスタンスの <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> が呼び出されているかどうかを示す値を取得します。</summary>
      <returns>この <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> の <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> が呼び出されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.MeasureOverride(System.Windows.Size)">
      <summary>現在の <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" /> を表示するために指定できるビューポート サイズを返します。</summary>
      <param name="availableSize">利用可能な最大サイズ。</param>
      <returns>実際に必要なサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> を作成して返します。</summary>
      <returns>新しい <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>ドキュメント ページ ビューの DPI 設定が変更されたときに呼び出されます。</summary>
      <param name="oldDpiScaleInfo">親が子に与えることが利用可能なサイズ。 これはソフトの制約です。</param>
      <param name="newDpiScaleInfo">DocumentPageView の必要なサイズ。</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentPageView.PageConnected">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> の <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" /> 要素が接続されたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentPageView.PageDisconnected">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> の <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" /> 要素が切断されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber">
      <summary>現在表示されているページの番号を取得または設定します。</summary>
      <returns>現在表示されているページの 0 から始まるページ番号。  既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.PageNumberProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch">
      <summary>コンテンツを表示ページ全体に引き伸ばす方法を指定する <see cref="T:System.Windows.Media.Stretch" /> 列挙体を取得または設定します。</summary>
      <returns>コンテンツを表示ページ全体に引き伸ばす方法を指定する列挙値。  既定値は、<see cref="F:System.Windows.Media.Stretch.Uniform" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection">
      <summary>
        <see cref="T:System.Windows.Controls.StretchDirection" /> を適用するスケーリング方向を指定する <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> 列挙体を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> を適用するスケーリング方向を指定する列挙値。  既定値は、<see cref="F:System.Windows.Controls.StretchDirection.DownOnly" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.StretchDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.StretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.System#IDisposable#Dispose">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。  代わりに、タイプ セーフ <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> メソッドを使用します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.System#IServiceProvider#GetService(System.Type)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。  代わりに、タイプ セーフ <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.GetService(System.Type)" /> メソッドを使用します。</summary>
      <param name="serviceType">取得対象となるサービスの型を指定するオブジェクト。</param>
      <returns>
        <paramref name="serviceType" /> 型のサービス オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.VisualChildrenCount">
      <summary>このビューに含まれているビジュアル子の数を取得します。</summary>
      <returns>このビューに含まれているビジュアル子の数。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DocumentViewerBase">
      <summary>固定コンテンツまたはフロー コンテンツ (それぞれ <see cref="T:System.Windows.Documents.FixedDocument" /> または <see cref="T:System.Windows.Documents.FlowDocument" /> で表される) を表示するためのビューアーの基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.#ctor">
      <summary>派生クラスによって呼び出されるときに基本クラスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.CancelPrint">
      <summary>現在印刷中のジョブがあればキャンセルします。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage">
      <summary>ビューアーが現在の <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 内の次のページにジャンプできるかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" /> の場合、ビューアーは次のページにジャンプできます。それ以外の場合は、<see langword="false" /> です。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPageProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPagePropertyKey">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> 依存関係プロパティのキーを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPage(System.Int32)">
      <summary>ビューアーが、指定したページ番号にジャンプできるかどうかを示す値を返します。</summary>
      <param name="pageNumber">有効なジャンプ先としてチェックするページ番号。</param>
      <returns>ビューアーが、指定したページ番号にジャンプできるかどうかを示すブール値。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage">
      <summary>ビューアーが現在の <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 内の前のページにジャンプできるかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" /> の場合、ビューアーは前のページにジャンプできます。それ以外の場合は、<see langword="false" /> です。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPageProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPagePropertyKey">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> 依存関係プロパティのキーを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document">
      <summary>ビューアーによって改ページ調整と表示が行われる <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /> を取得または設定します。</summary>
      <returns>ビューアーによって改ページ調整と表示が行われる <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /> 。
既定のプロパティは nullです。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.DocumentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.FirstPage">
      <summary>ビューアーは、現在のドキュメント (<see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> プロパティで表される) の最初のページにジャンプします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetIsMasterPage(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> の値を取得する対象の依存関係オブジェクト。</param>
      <returns>elementで指定された依存関係オブジェクトから読み取られた、<see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 添付プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合、発生します。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetMasterPageView">
      <summary>このビューアーの現在のマスター <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> を返します。</summary>
      <returns>このビューアーの現在のマスター <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />、またはマスター <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> が見つからない場合は null。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)">
      <summary>現在の表示ドキュメント (<see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> プロパティで表される) に関連付けられている <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> オブジェクトの新しい読み取り専用コレクションを作成して返します。</summary>
      <param name="changed">
        <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> の最初の呼び出し、または前の <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> 呼び出し以後にコレクションが変更されていない場合は <see langword="true" />。最後の <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> 呼び出し以降にコレクションが変更された場合は <see langword="false" />。</param>
      <returns>現在の表示ドキュメントと関連付けられている <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> オブジェクトの読み取り専用のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GoToPage(System.Int32)">
      <summary>ビューアーは指定したページ番号にジャンプします。</summary>
      <param name="pageNumber">ジャンプ先ページの番号。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.InvalidatePageViews">
      <summary>有効な <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> コレクションが再構築されます。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage">
      <summary>ビューアー内の子要素をマスター ページとして使用する必要があるかどうかを示す値を取得します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPageProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.LastPage">
      <summary>ビューアーは、現在のドキュメント (<see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> プロパティで表される) の最後のページにジャンプします。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.LogicalChildren">
      <summary>ビューアーの論理ツリー内の子の列挙子を取得します。</summary>
      <returns>ビューアーの論理的な子を列挙するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber">
      <summary>現在のマスター ページのページ番号を取得します。</summary>
      <returns>現在のマスターページのページ番号。ドキュメントが現在読み込まれていない場合は0 。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumberProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumberPropertyKey">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> 依存関係プロパティのキーを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.NextPage">
      <summary>ビューアーは、現在のドキュメント (<see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> プロパティで表される) の次のページにジャンプします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnApplyTemplate">
      <summary>ビューアーのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> イベントが、そのルートでこのクラスから派生する要素に到達するたびに呼び出されます。  このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="element">
        <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> イベントの発生元の要素。</param>
      <param name="rect">表示可能にする必要がある <paramref name="element" /> の座標空間での四角形の領域。</param>
      <param name="pageNumber">
        <paramref name="element" /> を含むページのページ番号。</param>
      <exception cref="T:System.ArgumentNullException">element が null の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnCancelPrintCommand">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnCreateAutomationPeer">
      <summary>このビューアーの <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクトを作成して返します。</summary>
      <returns>このビューアーの <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnDocumentChanged">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> プロパティが変更されるたびに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>DPI スケールが変更されたときに呼び出されます。 フロー ドキュメントの DPI を新しいスケールに設定します。</summary>
      <param name="oldDpiScaleInfo">以前の DPI スケール設定。</param>
      <param name="newDpiScaleInfo">新規の DPI スケール設定。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnFirstPageCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.FirstPage" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnGoToPageCommand(System.Int32)">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.GoToPage" /> ルーティング コマンドを処理します。</summary>
      <param name="pageNumber">ジャンプ先ページの番号。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnLastPageCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.LastPage" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnMasterPageNumberChanged">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> プロパティが変更されるたびに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnNextPageCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPageViewsChanged">
      <summary>このビューアーの <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> オブジェクトの作業セット (<see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> プロパティで表される) が変更されるたびに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPreviousPageCommand">
      <summary>
        <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPrintCommand">
      <summary>
        <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> ルーティング コマンドを処理します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount">
      <summary>現在の <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 内の合計ページ数を取得します。</summary>
      <returns>現在のドキュメント内のページ数。ドキュメントが現在読み込まれていない場合は0 。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.PageCountProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.PageCountPropertyKey">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> 依存関係プロパティのキーを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews">
      <summary>ビューアー内に含まれるアクティブな <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> オブジェクトの読み取り専用コレクションを取得します。</summary>
      <returns>ビューアー内に含まれているアクティブな <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> オブジェクトの読み取り専用コレクション。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentViewerBase.PageViewsChanged">
      <summary>このビューアーに関連付けられた <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 項目のコレクション (<see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> プロパティで表される) が変更されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.PreviousPage">
      <summary>ビューアーは、現在のドキュメント (<see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> プロパティで表される) の前のページにジャンプします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.Print">
      <summary>ビューアーのコンテンツの印刷や印刷設定ができる標準の [印刷] ダイアログ ボックスを呼び出します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.SetIsMasterPage(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 添付プロパティを設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> の値を設定する依存関係オブジェクト。</param>
      <param name="value">プロパティの新しい設定値。</param>
      <exception cref="T:System.ArgumentNullException">element が null の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#IServiceProvider#GetService(System.Type)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="serviceType">取得対象となるサービスの型を指定するオブジェクト。</param>
      <returns>
        <paramref name="serviceType" /> 型のサービス オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventArgs">
      <summary>ユーザーがマウスで <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> コントロールのドラッグ操作を完了したときに発生する、<see cref="T:System.Windows.Controls.Primitives.Thumb" /> イベントに関する情報を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.#ctor(System.Double,System.Double,System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="horizontalChange">ドラッグ操作による <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールの位置の水平方向の変更。</param>
      <param name="verticalChange">ドラッグ操作による <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールの位置の垂直方向の変更。</param>
      <param name="canceled">ドラッグ操作が <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag" /> メソッドの呼び出しによってキャンセルされたかどうかを示すブール値。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.Canceled">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> のドラッグ操作が <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag" /> メソッドの呼び出しによってキャンセルされたかどうかを示す値を取得します。</summary>
      <returns>ドラッグ操作がキャンセルされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.HorizontalChange">
      <summary>ユーザーがマウスでコントロールをドラッグした後の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の位置の水平方向の変更を取得します。</summary>
      <returns>ユーザーがマウスの左ボタンを押したポイントと <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールのドラッグ操作中にボタンを離したポイント間の水平方向の差。 既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> イベントを処理するメソッドを <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventHandler" /> 型に変換します。</summary>
      <param name="genericHandler">イベント ハンドラーのデリゲート。</param>
      <param name="genericTarget">ハンドラーを使用する <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.VerticalChange">
      <summary>ユーザーがマウスでコントロールをドラッグした後の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の位置の垂直方向の変更を取得します。</summary>
      <returns>ユーザーがマウスの左ボタンを押したポイントと <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールのドラッグ操作中にボタンを離したポイント間の垂直方向の差。 既定値はありません。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventHandler">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールの <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventArgs">
      <summary>ユーザーがマウスで <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> コントロールをドラッグしたときに 1 回以上発生する <see cref="T:System.Windows.Controls.Primitives.Thumb" /> イベントに関する情報を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.#ctor(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="horizontalChange">最後の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> イベント以降の <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 位置の水平方向の変更。</param>
      <param name="verticalChange">最後の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> イベント以降の <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 位置の垂直方向の変更。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.HorizontalChange">
      <summary>ユーザーがマウスで <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> コントロールをドラッグしたときの直前の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> イベント以降に、マウスが移動した横の距離を取得します。</summary>
      <returns>ドラッグ操作中のマウスの位置の水平方向の変更。 既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> イベントを処理するメソッドを <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventHandler" /> 型に変換します。</summary>
      <param name="genericHandler">イベント ハンドラーのデリゲート。</param>
      <param name="genericTarget">ハンドラーを使用する <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.VerticalChange">
      <summary>ユーザーがマウスで <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> をドラッグしたときの直前の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> イベント以降に、マウスが移動した縦の距離を取得します。</summary>
      <returns>ドラッグ操作中のマウスの位置の垂直方向の変更。 既定値はありません。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventHandler">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールの <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventArgs">
      <summary>ユーザーがマウスで <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールをドラッグしたときに発生する、<see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> イベントに関する情報を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DragStartedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="horizontalOffset">
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の画面座標に対するマウス クリックの水平オフセット。</param>
      <param name="verticalOffset">
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の画面座標に対するマウス クリックの垂直オフセット。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の画面座標に対するマウス クリックの水平オフセットを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の境界ボックスの左上隅に対するマウス クリックの水平オフセット。 既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> イベントを処理するメソッドを <see cref="T:System.Windows.Controls.Primitives.DragStartedEventHandler" /> 型に変換します。</summary>
      <param name="genericHandler">イベント ハンドラーのデリゲート。</param>
      <param name="genericTarget">ハンドラーを使用する <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の画面座標に対するマウス クリックの垂直オフセットを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の境界ボックスの左上隅に対するマウス クリックの水平オフセット。 既定値はありません。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventHandler">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールの <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorDirection">
      <summary>項目の生成が行われる方向を指定します。 <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> は <see cref="Overload:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt" /> によって使用されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Backward">
      <summary>逆方向に項目を生成するように指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Forward">
      <summary>順方向に項目を生成するように指定します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorPosition">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> は、<see cref="T:System.Windows.Controls.ItemContainerGenerator" /> によって管理される項目の位置を表すために使用されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)">
      <summary>インデックスおよびオフセットを指定して、<see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> の新しいインスタンスを初期化します。</summary>
      <param name="index">生成 (実現された) 項目に対する <see cref="T:System.Int32" /> インデックス。 -1 は項目一覧の先頭または末尾にある架空の項目を参照する特殊な値です。</param>
      <param name="offset">インデックス付けされた項目の近くにある未生成 (実現されていない) 項目に対する <see cref="T:System.Int32" /> オフセット。 オフセット 0 はインデックス付けされた要素自体、オフセット 1 は次の未生成 (実現されていない項目)、オフセット -1 は前の項目を参照します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)">
      <summary>指定したインスタンスと <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> の現在のインスタンスを比較し、値が等しいかどうかを確認します。</summary>
      <param name="o">比較対象の <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> インスタンス。</param>
      <returns>
        <paramref name="o" /> と、この <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> のインスタンスが同じ値を持つ場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode">
      <summary>この <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> のハッシュ コードを返します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Index">
      <summary>生成 (実現された) 項目に対する <see cref="T:System.Int32" /> インデックスを取得または設定します。</summary>
      <returns>生成 (実現された) 項目に対する <see cref="T:System.Int32" /> インデックス。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Offset">
      <summary>インデックス付けされた項目の近くにある未生成 (実現されていない) 項目に対する <see cref="T:System.Int32" /> オフセットを取得または設定します。</summary>
      <returns>インデックス付けされた項目の近くにある未生成 (実現されていない) 項目に対する <see cref="T:System.Int32" /> オフセット。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>2 つの <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> オブジェクトを比較し、値が等しいかどうかを確認します。</summary>
      <param name="gp1">比較する 1 番目のインスタンス。</param>
      <param name="gp2">比較する 2 番目のインスタンス。</param>
      <returns>2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>2 つの <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> オブジェクトを比較し、値が等しくないかどうかを確認します。</summary>
      <param name="gp1">比較する 1 番目のインスタンス。</param>
      <param name="gp2">比較する 2 番目のインスタンス。</param>
      <returns>値が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> のこのインスタンスの文字列表現を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> のこのインスタンスの文字列表現。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorStatus">
      <summary>項目の生成のステータスを示すために <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> で使用されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.ContainersGenerated">
      <summary>ジェネレーターでコンテナーの生成が完了しました。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.Error">
      <summary>ジェネレーターでコンテナーの生成が完了しましたが、1 つ以上のエラーが発生しました。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.GeneratingContainers">
      <summary>ジェネレーターでコンテナーを生成しています。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.NotStarted">
      <summary>ジェネレーターでコンテンツの生成が試行されていません。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase">
      <summary>データ行のレイアウトを定義するクラスの基本クラスを表します。異なるデータ アイテムは別の列に表示されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase" /> クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.Columns">
      <summary>
        <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> を取得または設定します。</summary>
      <returns>データを表示する <see cref="T:System.Windows.Controls.GridViewColumn" /> オブジェクトのコレクション。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GridViewRowPresenterBase.ColumnsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.Columns" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.GetVisualChild(System.Int32)">
      <summary>指定したインデックスにある行項目のビジュアル子を取得します。</summary>
      <param name="index">子のインデックス。</param>
      <returns>指定したインデックスにある子を格納する <see cref="T:System.Windows.Media.Visual" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.LogicalChildren">
      <summary>行の論理的な子の列挙子を取得します。</summary>
      <returns>この行の論理的な子の <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="managerType">このメソッドを呼び出す <see cref="T:System.Windows.WeakEventManager" /> の型。</param>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="args">イベント データ。</param>
      <returns>リスナーがイベントを処理した場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase" /> オブジェクトの文字列表現を返します。</summary>
      <returns>オブジェクトの型と列の数を含む文字列。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.VisualChildrenCount">
      <summary>行のビジュアル子の数を取得します。</summary>
      <returns>現在の行のビジュアル子の数。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IContainItemStorage">
      <summary>項目パネルのプロパティ バッグの実装を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.Clear">
      <summary>プロパティの関連付けをすべてクリアします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.ClearItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>指定したアイテムとプロパティ間の関連付けを削除します。</summary>
      <param name="item">関連付けられた項目。</param>
      <param name="dp">関連付けられているプロパティ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.ClearValue(System.Windows.DependencyProperty)">
      <summary>指定されたプロパティをすべてのプロパティ バッグから削除します。</summary>
      <param name="dp">削除するプロパティ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.ReadItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>指定したアイテムに関連付けられた、指定したプロパティの値を返します。</summary>
      <param name="item">関連付けられている指定したプロパティを持つ項目。</param>
      <param name="dp">返す値を持つプロパティ。</param>
      <returns>指定したアイテムに関連付けられた、指定したプロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)">
      <summary>指定したプロパティおよび値を格納し、それらを指定した項目と関連付けます。</summary>
      <param name="item">値およびプロパティを関連付ける項目。</param>
      <param name="dp">指定した項目に関連付けられているプロパティ。</param>
      <param name="value">関連するプロパティの値。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> と通信する階層データの表示をコントロールするためのプロパティを提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.Constraints">
      <summary>コントロールのビューポートとキャッシュのサイズを表すオブジェクトを取得または設定します。</summary>
      <returns>コントロールのビューポートとキャッシュのサイズを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.HeaderDesiredSizes">
      <summary>コントロールのヘッダーの目的のサイズを デバイスに依存しない単位 (1 単位は 1/96 インチ) と論理単位で表すオブジェクトを取得します。</summary>
      <returns>コントロールのヘッダーの目的のサイズを デバイスに依存しない単位 (1 単位は 1/96 インチ) と論理単位で表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.InBackgroundLayout">
      <summary>コントロールのレイアウト パスが低い優先順位で発生するかどうかを示す値を取得します。</summary>
      <returns>コントロールのレイアウト パスが低い優先順位で発生する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.ItemDesiredSizes">
      <summary>コントロールの項目の目的のサイズを デバイスに依存しない単位 (1 単位は 1/96 インチ) と論理単位で表すオブジェクトを取得または設定します。</summary>
      <returns>コントロールの項目の目的のサイズを デバイスに依存しない単位 (1 単位は 1/96 インチ) と論理単位で表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.ItemsHost">
      <summary>コントロールの項目を表示する <see cref="T:System.Windows.Controls.Panel" /> を取得します。</summary>
      <returns>コントロールの項目を表示する <see cref="T:System.Windows.Controls.Panel" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.MustDisableVirtualization">
      <summary>所有する <see cref="T:System.Windows.Controls.ItemsControl" /> の項目を仮想化するかどうかを示す値を取得または設定します。</summary>
      <returns>所有する <see cref="T:System.Windows.Controls.ItemsControl" /> がその項目を仮想化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IItemContainerGenerator">
      <summary>ホストの代わりにユーザー インターフェイス (UI) コンテンツを生成するクラスによって実装されるインターフェイス。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext">
      <summary>次の項目の表示に使用されるコンテナー要素を返します。</summary>
      <returns>次の項目を表示するために使用されるコンテナー要素である <see cref="T:System.Windows.DependencyObject" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)">
      <summary>次の項目の表示に使用されるコンテナー要素と、コンテナー要素が新しく生成されたか (実現されたか) どうかを返します。</summary>
      <param name="isNewlyRealized">返された <see cref="T:System.Windows.DependencyObject" /> が新しく生成された (実現された) 場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>次の項目を表示するために使用されるコンテナー要素である <see cref="T:System.Windows.DependencyObject" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
      <summary>指定したインデックスにある項目にマッピングする <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> オブジェクトを返します。</summary>
      <param name="itemIndex">目的の項目のインデックス。</param>
      <returns>指定したインデックスにある項目にマッピングする <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>指定したパネルでの使用に適した <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> を返します。</summary>
      <param name="panel">適切な <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> を返す対象のパネル。</param>
      <returns>指定したパネルでの使用に適した <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> にマッピングするインデックスを返します。</summary>
      <param name="position">目的の項目のインデックス。
目的のインデックスの <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</param>
      <returns>指定した <see cref="T:System.Int32" /> にマッピングするインデックスである <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>対応する項目のコンテナーとして、指定した項目を準備します。</summary>
      <param name="container">準備するコンテナー。 通常、<paramref name="container" /> は <see cref="Overload:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext" /> の前回の呼び出しの結果です。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>生成された (実現された) 項目を 1 つ以上削除します。</summary>
      <param name="position">削除する要素の <see cref="T:System.Int32" /> インデックス。 <paramref name="position" /> は、以前生成した (実現した) 項目を参照する必要があります。つまり、そのオフセットはゼロである必要があります。</param>
      <param name="count">
        <paramref name="position" /> を先頭に、削除する要素の数の <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll">
      <summary>生成された (実現された) 項目をすべて削除します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)">
      <summary>指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> から開始して、指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> で、ジェネレーターが項目を生成できるように準備します。</summary>
      <param name="position">項目の生成を開始する項目の位置を指定する <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</param>
      <param name="direction">項目を生成する方向を指定する <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />。</param>
      <returns>生成プロセスの有効期間を追跡する <see cref="T:System.IDisposable" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> から開始して、指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> で、生成した (実現した) 項目で開始するかどうかを制御して、ジェネレーターが項目を生成する準備をします。</summary>
      <param name="position">項目の生成を開始する項目の位置を指定する <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</param>
      <param name="direction">項目の生成を開始する項目の位置を指定します。</param>
      <param name="allowStartAtRealizedItem">生成された (実現された) 項目で開始するかどうかを指定する <see cref="T:System.Boolean" />。</param>
      <returns>生成プロセスの有効期間を追跡する <see cref="T:System.IDisposable" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.IItemContainerGenerator" /> インターフェイスを、それ自体が生成する UI コンテンツを再利用するように拡張します。 ホストの代わりにユーザー インターフェイス (UI) コンテンツを生成するクラスが、このインターフェイスを実装します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>データ項目から項目コンテナーの関連付けを解除し、コンテナーを保存して、後で他のデータ項目に再利用できるようにします。</summary>
      <param name="position">再利用する最初の要素の 0 から始まるインデックス番号。 <paramref name="position" /> は、以前生成した (実現した) 項目を参照する必要があります。</param>
      <param name="count">
        <paramref name="position" /> から始めて、再利用する要素の数。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IScrollInfo">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コントロール内のメインのスクロール可能領域を表します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll">
      <summary>水平方向の軸上のスクロールが可能かどうかを示す値を取得または設定します。</summary>
      <returns>スクロール可能な場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll">
      <summary>垂直軸上でのスクロールが可能かどうかを示す値を取得または設定します。</summary>
      <returns>スクロールが可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight">
      <summary>エクステントの縦幅を取得します。</summary>
      <returns>デバイス非依存ピクセル数で、エクステントの縦幅を表す <see cref="T:System.Double" />。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth">
      <summary>エクステントの横幅を取得します。</summary>
      <returns>デバイス非依存ピクセルで、エクステントの横幅を表す <see cref="T:System.Double" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset">
      <summary>スクロールしたコンテンツの横方向のオフセットを取得します。</summary>
      <returns>横方向のオフセットを表す <see cref="T:System.Double" /> (デバイス非依存ピクセル単位)。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineDown">
      <summary>コンテンツ内で 1 つの論理ユニット分を下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft">
      <summary>コンテンツ内で 1 つの論理単位だけ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineRight">
      <summary>コンテンツ内で論理単位 1 つ分を右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineUp">
      <summary>コンテンツ内で 1 つの論理単位だけ上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> オブジェクトの座標空間が表示可能になるまでコンテンツを強制的にスクロールします。</summary>
      <param name="visual">表示可能になる <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="rectangle">表示される座標空間を識別する外接する四角形。</param>
      <returns>表示される <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown">
      <summary>ユーザーがマウスのホイール ボタンをクリックした後にコンテンツ内を下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft">
      <summary>ユーザーがマウスのホイール ボタンをクリックした後にコンテンツ内を左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight">
      <summary>ユーザーがマウスのホイール ボタンをクリックした後にコンテンツ内を右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp">
      <summary>ユーザーがマウスのホイール ボタンをクリックした後にコンテンツ内を上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageDown">
      <summary>コンテンツ内を 1 ページ分上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft">
      <summary>コンテンツ内を 1 ページずつ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageRight">
      <summary>コンテンツ内を 1 ページずつ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageUp">
      <summary>コンテンツ内を 1 ページだけ上にスクロールします。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner">
      <summary>スクロール動作を制御する <see cref="T:System.Windows.Controls.ScrollViewer" /> 要素を取得または設定します。</summary>
      <returns>スクロール動作を制御する <see cref="T:System.Windows.Controls.ScrollViewer" /> 要素。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)">
      <summary>水平方向のオフセットの量を設定します。</summary>
      <param name="offset">コンテンツが格納ビューポートから水平方向にオフセットされる角度。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)">
      <summary>垂直方向のオフセットの量を設定します。</summary>
      <param name="offset">格納しているビューポートから、コンテンツを垂直方向にオフセットする程度。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset">
      <summary>スクロールしたコンテンツの縦方向のオフセットを取得します。</summary>
      <returns>デバイス非依存ピクセル数で、スクロールしたコンテンツの垂直オフセットを表す <see cref="T:System.Double" /> 。 有効値は、0 より大きく <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight" /> と <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight" /> の差の値未満です。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight">
      <summary>このコンテンツのビューポートの垂直方向のサイズを取得します。</summary>
      <returns>このコンテンツのビューポートの垂直方向のサイズをデバイスに依存しないピクセル単位で表す <see cref="T:System.Double" /> 。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth">
      <summary>このコンテンツのビューポートの水平方向のサイズを取得します。</summary>
      <returns>デバイスに依存しないピクセル数で、このコンテンツのビューポートの水平方向のサイズを表す <see cref="T:System.Double" /> 。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Action">
      <summary>項目のコレクションで発生したアクションを取得します。</summary>
      <returns>発生したアクションを返します。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemCount">
      <summary>変更に関連する項目の数を取得します。</summary>
      <returns>変更に関連する項目の数を表す整数。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemUICount">
      <summary>変更に関連するユーザー インターフェイス (UI) 要素の数を取得します。</summary>
      <returns>変更に関連する UI 要素の数を表す整数。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.OldPosition">
      <summary>変更が発生する前のコレクション内の位置を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Position">
      <summary>変更が発生したコレクション内の位置を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> を返します。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.LayoutInformation">
      <summary>要素のレイアウト状態に関する追加情報を提供するメソッドを定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutClip(System.Windows.FrameworkElement)">
      <summary>要素の可視領域を表す <see cref="T:System.Windows.Media.Geometry" /> を返します。</summary>
      <param name="element">レイアウト クリップが必要とされる <see cref="T:System.Windows.FrameworkElement" />。</param>
      <returns>
        <paramref name="element" /> の可視領域を表す <see cref="T:System.Windows.Media.Geometry" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutExceptionElement(System.Windows.Threading.Dispatcher)">
      <summary>未処理の例外が発生した時点でレイアウト エンジンによって処理されていた <see cref="T:System.Windows.UIElement" /> を返します。</summary>
      <param name="dispatcher">操作のスコープを定義する <see cref="T:System.Windows.Threading.Dispatcher" /> オブジェクト。 レイアウト エンジン インスタンスごとに 1 つのディスパッチャーがあります。</param>
      <returns>未処理の例外が発生した時点でレイアウト エンジンによって処理されていた <see cref="T:System.Windows.UIElement" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dispatcher" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutSlot(System.Windows.FrameworkElement)">
      <summary>子要素用に予約されているレイアウト パーティションを表す <see cref="T:System.Windows.Rect" /> を返します。</summary>
      <param name="element">レイアウト スロットが必要とされる <see cref="T:System.Windows.FrameworkElement" />。</param>
      <returns>要素のレイアウト スロットを表す <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.MenuBase">
      <summary>ユーザーが選択する選択肢を定義するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.MenuBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.GetContainerForItemOverride">
      <summary>指定された項目の表示に使用する要素を作成または識別します。</summary>
      <returns>指定された項目を表示するために使用する要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウス ボタンが押されるか、または離されると呼び出されます。</summary>
      <param name="e">マウス イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が自身の項目コンテナーかどうか (または自身のコンテナーにすることができるかどうか) を判断します。</summary>
      <param name="item">項目コンテナーかどうかをチェックする項目。</param>
      <returns>項目が <see cref="T:System.Windows.Controls.MenuItem" /> または <see cref="T:System.Windows.Controls.Separator" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector">
      <summary>各項目の表示に使用するテンプレートを選択するためのカスタム ロジックを取得または設定します。</summary>
      <returns>ロジックを提供し、項目コンテナーを返すカスタム オブジェクト。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> プロパティへの変更に応答します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>ユーザーがキーを押したときに発生する <see cref="E:System.Windows.UIElement.KeyDown" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>マウスがコントロールから離れたときに発生する <see cref="E:System.Windows.UIElement.MouseLeave" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeave" /> イベントのイベント データ。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate">
      <summary>基になるコレクションまたは他のヒューリスティックの項目の型によってメニューが異なる項目コンテナーを選択するかどうかを示す値を取得または設定します。</summary>
      <returns>メニューで異なる項目コンテナーが選択される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.MultiSelector">
      <summary>複数の項目を選択できるコントロールの抽象クラスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems">
      <summary>新しい選択トランザクションを開始します。</summary>
      <exception cref="T:System.InvalidOperationException">このメソッドが呼び出されるときは <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" /> が <see langword="true" /> です。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 内の複数の項目を同時に選択できるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 内の複数の項目を一度に選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems">
      <summary>選択されている項目を <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> にコミットします。</summary>
      <exception cref="T:System.InvalidOperationException">このメソッドが呼び出されるときは <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" /> が <see langword="false" /> です。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> が <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> コレクションに対して一括更新を現在実行しているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> が <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> コレクションに対して一括更新を現在実行している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.SelectAll">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 内のすべての項目を選択します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems" /> は <see langword="false" />です。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 内の選択された項目を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 内で選択されている項目。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.UnselectAll">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 内のすべての項目を選択解除します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PlacementMode">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールが表示される画面上の場所の配置について説明します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Absolute">
      <summary>画面の左上隅を起点とした、<see cref="T:System.Windows.Controls.Primitives.Popup" /> および <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> プロパティ値で定義されたオフセット位置にある <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> コントロール。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の端に隠れる場合は、コントロールは端に沿って再配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.AbsolutePoint">
      <summary>画面の左上隅を起点とした、<see cref="T:System.Windows.Controls.Primitives.Popup" /> および <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> プロパティ値で定義されたオフセット位置にある <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> コントロール。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の端に隠れる場合は、コントロールは <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> または <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> で定義された軸から反対方向に広がります。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Bottom">
      <summary>上端と <see cref="T:System.Windows.Controls.Primitives.Popup" /> の下端を揃え、左端と <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> の左端を揃える <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> コントロール。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の下端に隠れる場合は、コントロールはその下端と <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> の上端が揃うように再配置されます。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の上端に隠れる場合は、コントロールはその上端と画面の上端が揃うように再配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Center">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> を中心として配置される <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> コントロール。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の端に隠れる場合は、コントロールは画面の端に沿って再配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Custom">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> プロパティで指定された <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> デリゲートで定義されている <see cref="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" /> コントロールの位置および再配置動作。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Left">
      <summary>右端と <see cref="T:System.Windows.Controls.Primitives.Popup" /> の左端を揃え、上端と <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> の上端を揃える <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> コントロール。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の左端に隠れる場合、<see cref="T:System.Windows.Controls.Primitives.Popup" /> はその左端と <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> の右端が揃うように再配置されます。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の右端に隠れる場合は、コントロールの右端が画面の右端に沿って配置されます。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の上端または下端に隠れる場合は、コントロールはそのいずれかの画面の端に沿って再配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Mouse">
      <summary>上端とマウスの境界ボックスの下端を揃え、左端とマウスの境界ボックスの左端を揃える <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロール。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の下端に隠れる場合は、コントロールはマウスの境界ボックスの上端に沿って再配置されます。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の上端に隠れる場合は、コントロールは画面の上端に沿って再配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint">
      <summary>マウス カーソルの先端を起点とした、<see cref="T:System.Windows.Controls.Primitives.Popup" /> および <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> プロパティ値で定義されたオフセット位置にある <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> コントロール。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の上下または左右の端に隠れる場合は、コントロールはそのいずれかの端から反対方向に開かれます。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の反対側の端にも隠れる場合は、コントロールはこの画面の端に沿って配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Relative">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> の左上隅を起点とした、<see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> および <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> プロパティ値で定義されたオフセット位置にある <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> コントロール。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の端に隠れる場合は、コントロールは画面の端に沿って再配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.RelativePoint">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> の左上隅を起点とした、<see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> および <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> プロパティ値で定義されたオフセット位置にある <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> コントロール。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の端に隠れる場合は、<see cref="T:System.Windows.Controls.Primitives.Popup" /> は <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> または <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> で定義された軸から反対方向に広がります。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の反対側の端にも隠れる場合は、コントロールはこの画面の端に沿って配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Right">
      <summary>左端と <see cref="T:System.Windows.Controls.Primitives.Popup" /> の右端を揃え、上端と <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> の上端を揃える <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> コントロール。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の右端に隠れる場合は、コントロールはその左端と <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> の左端が揃うように再配置されます。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の左端に隠れる場合は、コントロールはその左端と画面の左端が揃うように再配置されます。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の上端または下端に隠れる場合は、コントロールはそのいずれかの画面の端に沿って再配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Top">
      <summary>下端と <see cref="T:System.Windows.Controls.Primitives.Popup" /> の上端を揃え、左端と <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> の左端を揃える <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> コントロール。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の上端に隠れる場合は、コントロールはその上端と <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> の下端が揃うように再配置されます。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の下端に隠れる場合は、コントロールの下端が画面の下端に沿って配置されます。 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が画面の左端または右端に隠れる場合は、コントロールはそのいずれかの画面の端に沿って再配置されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Popup">
      <summary>コンテンツを含むポップアップ ウィンドウを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールに透過的なコンテンツを含めることができるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールに透過的なコンテンツを含めることができル場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Child">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールのコンテンツを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの <see cref="T:System.Windows.UIElement" /> コンテンツ。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.ChildProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Closed">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> プロパティが <see langword="false" /> に変更されると発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールに子要素を結び付けます。</summary>
      <param name="popup">子コンテンツを追加する対象の <see cref="T:System.Windows.Controls.Primitives.Popup" />。</param>
      <param name="child">
        <see cref="T:System.Windows.UIElement" /> 子コンテンツ。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを配置する代理ハンドラーのメソッドを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの配置情報を提供する <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> デリゲート メソッド。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> の論理上の親を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> に定義済みの親がなく、<see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> が <see langword="null" /> ではない場合、<see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> が返されます。 それ以外の場合は、戻り値は <see cref="M:System.Windows.FrameworkElement.GetUIParentCore" /> と同じです。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> がドロップ シャドウ効果を伴って表示されるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> がドロップ シャドウ効果を伴って表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
      <summary>対象の左開始位置からポップアップの配置ポイントまでの横方向の距離を取得または指定します。</summary>
      <returns>対象の左開始位置からポップアップの配置ポイントまでの横方向の距離。 ターゲットの始点とポップアップの配置ポイントの詳細については、「ポップアップ配置の動作」を参照してください。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.IsOpen">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> が表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> が可視の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの論理上の子要素にアクセスするために使用できる列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> コントロールの論理上の子要素にアクセスするために使用できる <see cref="T:System.Windows.Controls.Primitives.Popup" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
      <summary>論理上の親のビジュアル ツリー内の <see cref="T:System.Windows.Controls.Primitives.Popup" /> コンテンツの必要なサイズを決定します。</summary>
      <param name="availableSize">この要素が子に与えることができる使用可能なサイズ。 この要素によってどのようなコンテンツでも使用できるようにサイズを設定できることを示すために、値として無限大を使用できます。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> および <see cref="P:System.Windows.Size.Height" /> プロパティが両方とも 0 の <see cref="P:System.Windows.Size.Width" /> 構造体。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> プロパティの値が <see langword="true" /> から <see langword="false" /> に変更されると応答します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> プロパティの値が <see langword="false" /> から <see langword="true" /> に変更された状態に応答します。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Opened">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> プロパティが <see langword="true" /> に変更されると発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Placement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールが開いた場合のこのコントロールの向きを取得または設定し、<see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールが画面の境界と重複する場合のこのコントロールの動作を指定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> コントロールが開いた場合にこのコントロールの向きを決定し、このコントロールが画面の境界とどのように対話するかを指定する <see cref="T:System.Windows.Controls.Primitives.Popup" /> 列挙値。 既定値は、<see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールが開いたときに配置される相対的な四角形を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを配置するために使用する四角形。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> が開いたときに配置される相対的な要素を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> コントロールの論理上の親である <see cref="T:System.Windows.Controls.Primitives.Popup" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを開く場合と、閉じる場合に使用するアニメーションを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを開く場合と、閉じる場合に使用するアニメーションを定義する <see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /> 列挙値。 既定値は、<see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールにフォーカスがない場合に、このコントロールが閉じるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを、<see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> プロパティが <see langword="true" /> に設定されたときに閉じる場合は <see langword="false" />。<see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの外部でマウス イベントまたはキーボード イベントが発生したときに <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを閉じる場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.StaysOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは、WPF インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>このメンバーは、WPF インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
      <summary>対象の左開始位置からポップアップの配置ポイントまでの縦方向の距離を取得または指定します。</summary>
      <returns>対象の左開始位置からポップアップの配置ポイントまでの縦方向の距離。 ターゲットの始点とポップアップの配置ポイントの詳細については、「ポップアップ配置の動作」を参照してください。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PopupAnimation">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールが開くときのアニメーション化の方法について説明します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Fade">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールは徐々に表示されます (フェード イン)。 この効果は、<see cref="T:System.Windows.Controls.Primitives.Popup" /> ウィンドウの透過度を時間の経過に伴って増加することで実現されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.None">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールはアニメーションなしで表示されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Scroll">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールはその親の左上隅からスクロールします。 画面に <see cref="T:System.Windows.Controls.Primitives.Popup" /> の既定の動作を実行するためのスペースが十分にない場合は、代わりに <see cref="T:System.Windows.Controls.Primitives.Popup" /> は右下隅からスクロールします。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Slide">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールは所定の位置にスライドダウンまたはスライドアップします。 既定では、<see cref="T:System.Windows.Controls.Primitives.Popup" /> はスライドダウンします。 ただし、画面に <see cref="T:System.Windows.Controls.Primitives.Popup" /> がスライドダウンするためのスペースが十分にない場合は、代わりにスライドアップします。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PopupPrimaryAxis">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> の表示量を増やすために <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを移動する方向を表します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.Horizontal">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの位置は、画面の垂直軸に沿って移動する前に水平軸に沿って移動することで変更されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.None">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの位置は、既定の <see cref="T:System.Windows.Controls.Primitives.Popup" /> の動作に応じて変更されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.Vertical">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの位置は、画面の水平軸に沿って移動する前に垂直軸に沿って移動することで変更されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RangeBase">
      <summary>特定の範囲内の値を持つ要素を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.LargeChange">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> コントロールの <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> に対して加算または減算する値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 要素の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> に対して加算または減算する <see cref="T:System.Windows.Controls.Primitives.RangeBase" />。 既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.LargeChangeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Maximum">
      <summary>範囲要素に指定できる最大の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> を取得または設定します。</summary>
      <returns>範囲要素に指定できる最大の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。 既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MaximumProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Minimum">
      <summary>範囲要素に指定できる <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> を取得または設定します。</summary>
      <returns>範囲要素に指定できる <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MinimumProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMaximumChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの変更前の値。</param>
      <param name="newMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMinimumChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの変更前の値。</param>
      <param name="newMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnValueChanged(System.Double,System.Double)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> ルーティング イベントを発生させます。</summary>
      <param name="oldValue">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティの変更前の値。</param>
      <param name="newValue">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティの変更後の値。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> コントロールの <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> に対して加算または減算する <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 要素の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> に対して加算または減算する <see cref="T:System.Windows.Controls.Primitives.RangeBase" />。 既定値は0.1 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.SmallChangeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> オブジェクトの文字列表現を提供します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> オブジェクトの文字列表現を返します。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Value">
      <summary>範囲コントロールの現在の大きさを取得または設定します。</summary>
      <returns>範囲コントロールの現在の大きさ。 既定値は 0 です。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged">
      <summary>範囲が変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueChangedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RepeatButton">
      <summary>コントロールが押されてから離されるまで、その <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを繰り返し発生させるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Delay">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> が押されている間に、繰り返しが開始されるまで待機する時間 (ミリ秒単位) を取得または設定します。 負の値は指定できません。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> が押されている間に、繰り返しが開始されるまで待機する時間 (ミリ秒単位)。 既定値は、<see cref="P:System.Windows.SystemParameters.KeyboardDelay" /> の値です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.DelayProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Interval">
      <summary>繰り返しが開始された後の繰り返し間隔 (ミリ秒単位) を取得または設定します。 負の値は指定できません。</summary>
      <returns>繰り返しが開始された後の繰り返し間隔 (ミリ秒単位)。 既定値は、<see cref="P:System.Windows.SystemParameters.KeyboardSpeed" /> の値です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.IntervalProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnClick">
      <summary>オートメーション イベントを発生させ、<see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させる基本メソッドを呼び出します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnCreateAutomationPeer">
      <summary>WPF インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントに応答します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyUp" /> イベントに応答します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyUp" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> でマウスのキャプチャがなくなると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.LostMouseCapture" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>マウスが要素に移動したことを報告します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseEnter" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>マウスが要素から離れたことを報告します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeave" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントに応答します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントに応答します。</summary>
      <param name="e">
        <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> イベントのイベント データ。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ResizeGrip">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> のサイズを変更できるようにする <see cref="T:System.Windows.Window" /> コントロールの実装を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ResizeGrip.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ResizeGrip" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollBar">
      <summary>スライド式 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> (位置は値に対応) を備えたスクロール バーを提供するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToHorizontalOffsetCommand">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.ScrollViewer" /> で指定された値に水平 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> をドラッグしていることを <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" /> に通知するコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToVerticalOffsetCommand">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.ScrollViewer" /> で指定された値に垂直 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> をドラッグしていることを <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" /> に通知するコマンド。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.IsEnabledCore">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> が有効かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> が <see cref="T:System.Windows.Controls.ScrollViewer" /> で有効で、コンテンツのサイズが表示領域よりも大きい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand">
      <summary>その <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を垂直方向に少量増加させて <see cref="T:System.Windows.Controls.Primitives.Track" /> をスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand">
      <summary>その <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を水平方向に少量減少させて <see cref="T:System.Windows.Controls.Primitives.Track" /> をスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand">
      <summary>その <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を水平方向に少量増加させて <see cref="T:System.Windows.Controls.Primitives.Track" /> をスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand">
      <summary>その <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を垂直方向に少量減少させて <see cref="T:System.Windows.Controls.Primitives.Track" /> をスクロールするコマンド。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnApplyTemplate">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> のビジュアル ツリーを作成します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> の <see cref="T:System.Windows.Controls.ContextMenu" /> が閉じたときに発生する <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> の <see cref="T:System.Windows.Controls.ContextMenu" /> が開いたときに発生する <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> コントロールの <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を作成します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> コントロールに対応する <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Orientation">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を水平または垂直のどちらで表示するかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> を水平または垂直のどちらで表示するかを定義する <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 列挙値。 既定値は、<see cref="F:System.Windows.Controls.Orientation.Vertical" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand">
      <summary>その <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を垂直方向に大量に増加させて <see cref="T:System.Windows.Controls.Primitives.Track" /> をスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand">
      <summary>その <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を水平方向に大量に減少させて <see cref="T:System.Windows.Controls.Primitives.Track" /> をスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand">
      <summary>その <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を水平方向に大量に増加させて <see cref="T:System.Windows.Controls.Primitives.Track" /> をスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand">
      <summary>その <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を垂直方向に大量に減少させて <see cref="T:System.Windows.Controls.Primitives.Track" /> をスクロールするコマンド。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ScrollBar.Scroll">
      <summary>ユーザーがマウスを使用して <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を移動したときに <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> でコンテンツ スクロールとして 1 回以上発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> で <see cref="T:System.Windows.Controls.ContextMenu" /> を開いたマウス クリックのポイントに <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> をスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToBottomCommand">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> の値までスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand">
      <summary>コンテンツを、<see cref="T:System.Windows.Controls.ScrollViewer" /> コントロールの右下隅までスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToHomeCommand">
      <summary>コンテンツを、<see cref="T:System.Windows.Controls.ScrollViewer" /> コントロールの左上隅までスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToHorizontalOffsetCommand">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> で指定された値に、<see cref="T:System.Windows.Controls.ScrollViewer" /> 内の水平 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" /> をスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand">
      <summary>水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 値に <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> をスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToRightEndCommand">
      <summary>水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 値に <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> をスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand">
      <summary>垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 値に <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> をスクロールするコマンド。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToVerticalOffsetCommand">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> で指定された値に、<see cref="T:System.Windows.Controls.ScrollViewer" /> 内の垂直 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" /> をスクロールするコマンド。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Track">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> コントロールの <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> コントロールで使用される <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize">
      <summary>現在表示されているスクロール可能な内容の量を取得または設定します。</summary>
      <returns>現在表示されるスクロール可能なコンテンツの量。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ViewportSizeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> が移動したときに発生する <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.#ctor(System.Windows.Controls.Primitives.ScrollEventType,System.Double)">
      <summary>指定した <see cref="T:System.Windows.Controls.Primitives.ScrollEventArgs" /> 列挙値と、<see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> 内の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールの新しい場所を使用して <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> クラスのインスタンスを初期化します。</summary>
      <param name="scrollEventType">イベントの原因となった <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> の移動の種類を記述する <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 列挙値。</param>
      <param name="newValue">
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 内の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の新しい場所に対応する値。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>適切な型のキャストを実行して、<see cref="T:System.Windows.Controls.Primitives.ScrollEventHandler" /> イベントのタイプセーフな <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> デリゲートを呼び出します。</summary>
      <param name="genericHandler">呼び出すイベント ハンドラー。</param>
      <param name="genericTarget">イベントの経路上にある現在のオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.NewValue">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 内の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の新しい場所を表す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 内の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の新しい位置に対応する値。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.ScrollEventType">
      <summary>このイベントの原因となった <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> の位置の変更を記述する <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 列挙値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> イベントの原因となった <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の移動の種類を記述する <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 列挙値。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventHandler">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の<see cref="T:System.Windows.Controls.Primitives.Thumb" /> の移動時に発生する <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventType">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> コントロールの <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> イベントの原因となった動作を表します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.EndScroll">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> は新しい位置にドラッグされ、現在ユーザーによってドラッグされていません。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.First">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> は <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の位置に移動しました。 垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、この移動は Ctrl + Home キーを押すと発生します。 この移動は、垂直 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />、水平 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> に対応しています。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeDecrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> は、<see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> の値で指定された距離だけ左 (水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合) または上 (垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合) に移動しました。 垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、この移動は <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の上のページ ボタンを押すか PageUp キーを押すと発生し、<see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand" /> に対応しています。 水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、この移動は <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の左側のページ ボタンを押すと発生し、<see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand" /> に対応しています。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeIncrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> は、<see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> の値で指定された距離だけ右 (水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合) または下 (垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合) に移動しました。 垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、この移動は <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の下のページ ボタンを押すか PageDown キーを押すと発生し、<see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand" /> に対応しています。 水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、この移動は <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の右側のページ ボタンを押すと発生し、<see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand" /> に対応しています。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.Last">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> は <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の位置に移動しました。 垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、この移動は Ctrl + End キーを押すと発生します。 この移動は、垂直 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />、水平 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToRightEndCommand" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> に対応しています。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallDecrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> は、<see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> の値で指定された距離だけわずかに左 (水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合) または上 (垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合) に移動しました。 垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、この移動は上部の <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> を押すか上方向キーを押すと発生し、<see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand" /> に対応しています。 水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、この移動は左の <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> を押すと発生し、<see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand" /> に対応しています。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallIncrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> は、<see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> の値で指定された距離だけわずかに右 (水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合) または下 (垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合) に移動しました。 垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、この移動は下部の <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> を押すか下方向キーを押すと発生し、<see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand" /> に対応しています。 水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、この移動は右の <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> を押すと発生し、<see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand" /> に対応しています。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbPosition">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> のショートカット メニューで [ここにスクロール] を選択したため、<see cref="T:System.Windows.Controls.Primitives.Thumb" /> は新しい位置に移動しました。 この移動は、<see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand" /> に対応しています。 ショートカット メニューを表示するには、ポインターが <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 上にあるときにマウスを右クリックします。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbTrack">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> がドラッグされたため、<see cref="E:System.Windows.UIElement.MouseMove" /> イベントが発生しました。 この <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> イベントは、<see cref="T:System.Windows.Controls.Primitives.Thumb" /> が <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> でドラッグされると複数回発生する場合があります。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid">
      <summary>ビューがスクロールされたときに指定されたセルを格納できるパネル。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.GetSelectiveScrollingOrientation(System.Windows.DependencyObject)">
      <summary>指定されたオブジェクトでセルをスクロールできる方向を取得します。</summary>
      <param name="obj">スクロールの向きが取得されたオブジェクト。</param>
      <returns>セルをスクロールできる方向。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation">
      <summary>セルをスクロールできる方向を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SetSelectiveScrollingOrientation(System.Windows.DependencyObject,System.Windows.Controls.SelectiveScrollingOrientation)">
      <summary>指定されたオブジェクトでセルをスクロールできる方向を設定します。</summary>
      <param name="obj">スクロールの向きが設定されているオブジェクト。</param>
      <param name="value">スクロールの向き。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Selector">
      <summary>ユーザーが子要素から項目を選択できるようにするコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Selector" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.AddSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> 添付イベントのハンドラーを追加します。</summary>
      <param name="element">このイベントをリッスンする要素。</param>
      <param name="handler">追加するイベント ハンドラー。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.AddUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> 添付イベントのハンドラーを追加します。</summary>
      <param name="element">このイベントをリッスンする要素。</param>
      <param name="handler">追加するイベント ハンドラー。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>項目コンテナーを <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> の前の状態に戻します。</summary>
      <param name="element">項目コンテナーの要素。</param>
      <param name="item">データ項目。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelected(System.Windows.DependencyObject)">
      <summary>項目が選択されているかどうかを示す <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> 添付プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> プロパティについて照会するオブジェクト。</param>
      <returns>ブール値。<see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> プロパティが <see langword="true" /> の場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelectionActive(System.Windows.DependencyObject)">
      <summary>キーボード フォーカスが <see cref="T:System.Windows.Controls.Primitives.Selector" /> 内にあるかどうかを示す値を取得します。</summary>
      <param name="element">添付プロパティの読み込み元の要素。</param>
      <returns>プロパティの値。キーボード フォーカスが <see cref="T:System.Windows.Controls.Primitives.Selector" /> 内にある場合は <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSelected">
      <summary>項目が選択されているかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSelectedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive">
      <summary>キーボード フォーカスが <see cref="T:System.Windows.Controls.Primitives.Selector" /> によって返される値内にあるかどうかを示す値を取得します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSelectionActiveProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Selector" /> で <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> を <see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティの現在の項目と同期するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> が <see cref="T:System.Windows.Controls.ItemCollection" /> の現在の項目と常に同期される場合は <see langword="true" />。<see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> が現在の項目と同期されない場合は <see langword="false" />。<see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> で <see cref="T:System.Windows.Controls.Primitives.Selector" /> が使用される場合にだけ <see cref="T:System.Windows.Data.CollectionView" /> が現在の項目と同期される場合は <see langword="null" />。  既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItemProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnInitialized(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.Initialized" /> イベントを発生させます。 このメソッドは、<see cref="P:System.Windows.FrameworkElement.IsInitialized" /> が内部で <see langword="true" /> に設定されるたびに呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Selector" /> の項目が変更されたときに選択されている項目を更新します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>セレクターの項目のソースが変更されると呼び出されます。</summary>
      <param name="oldValue">ソースの変更前の値。</param>
      <param name="newValue">ソースの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>選択項目が変更されたときに呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定した要素に指定した項目が表示されるように準備します。</summary>
      <param name="element">指定された項目の表示に使用する要素。</param>
      <param name="item">表示する指定された項目。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.RemoveSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> 添付イベントのハンドラーを削除します。</summary>
      <param name="element">このイベントをリッスンする要素。</param>
      <param name="handler">削除するイベント ハンドラー。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.RemoveUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> 添付イベントのハンドラーを削除します。</summary>
      <param name="element">このイベントをリッスンする要素。</param>
      <param name="handler">削除するイベント ハンドラー。</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.Selected">
      <summary>項目が選択されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedIndex">
      <summary>現在の選択範囲のうち、最初のアイテムのインデックスを取得または設定します。選択範囲が空の場合は、マイナス 1 (-1) を返します。</summary>
      <returns>現在選択されている最初の項目のインデックス。 既定値は -1 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedItem">
      <summary>現在選択されている最初の項目を取得または設定します。選択範囲が空の場合は null を返します。</summary>
      <returns>現在選択されている最初の項目。選択範囲が空の場合は <see langword="null" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedItemProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValue">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> を使用して取得される <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> の値を取得または設定します。</summary>
      <returns>選択された項目の値。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> から <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> を取得するために使用するパスを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> を取得するために使用するパス。 既定値は空の文字列です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValuePathProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValueProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.SelectionChanged">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Selector" /> の選択項目が変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectionChangedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.SetIsSelected(System.Windows.DependencyObject,System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Selector" /> の項目が選択されているかどうかを示すプロパティ値を設定します。</summary>
      <param name="element">プロパティの設定対象のオブジェクト。</param>
      <param name="isSelected">設定する値。</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.Unselected">
      <summary>項目が選択されなかった場合に発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.UnselectedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.StatusBar">
      <summary>アプリケーション ウィンドウの水平バーにアイテムと情報を表示するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.GetContainerForItemOverride">
      <summary>新しい <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> を作成します。</summary>
      <returns>指定された項目を表示するために使用する要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が自身のコンテナーかどうか (または自身のコンテナーにすることができるかどうか) を判断します。</summary>
      <param name="item">指定した評価対象オブジェクト。</param>
      <returns>項目が自身のコンテナーである (または自身のコンテナーにすることができる) 場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelector">
      <summary>各項目の表示に使用するテンプレートを選択するためのカスタム ロジックを取得または設定します。</summary>
      <returns>ロジックを提供し、項目コンテナーを返すカスタム オブジェクト。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> を指定します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> の <see cref="T:System.Windows.Controls.Primitives.StatusBar" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> に表示するために項目を準備します。</summary>
      <param name="element">
        <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> に表示する項目。</param>
      <param name="item">表示する項目のコンテンツ。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.SeparatorStyleKey">
      <summary>
        <see cref="T:System.Windows.Controls.Separator" /> の <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> オブジェクトに使用するスタイルを表すキー。</summary>
      <returns>
        <see cref="T:System.Windows.ResourceKey" /> オブジェクトに使用するスタイルを参照する <see cref="T:System.Windows.Controls.Separator" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>
        <see cref="T:System.Windows.Style" /> の項目の <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> をオブジェクトに適用するかどうかを判断します。</summary>
      <param name="container">項目のコンテナー。</param>
      <param name="item">評価するオブジェクト。</param>
      <returns>
        <paramref name="item" /> が <see cref="T:System.Windows.Controls.Separator" /> ではない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplate">
      <summary>基になるコレクションまたは他のヒューリスティックの項目の型によってメニューが異なる項目コンテナーを選択するかどうかを示す値を取得または設定します。</summary>
      <returns>メニューで異なる項目コンテナーが選択される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.StatusBarItem">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> コントロールの項目を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBarItem.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBarItem.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> を指定します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> の <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TabPanel">
      <summary>
        <see cref="T:System.Windows.Controls.TabItem" /> で <see cref="T:System.Windows.Controls.TabControl" /> オブジェクトのレイアウトを処理します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> オブジェクトのコンテンツを配置し、そのサイズを設定します。</summary>
      <param name="arrangeSize">タブ パネルが子要素を配置する際に想定するサイズ。</param>
      <returns>タブ パネルのサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.GetLayoutClip(System.Windows.Size)">
      <summary>既定のクリッピングをオーバーライドするために使用されます。</summary>
      <param name="layoutSlotSize">パネルのサイズ。</param>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> のレイアウト サイズを表すサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.MeasureOverride(System.Windows.Size)">
      <summary>コントロールの再測定が必要なときに呼び出されます。</summary>
      <param name="constraint">制約サイズは上限値です。 戻り値がこのサイズを超えないようにする必要があります。</param>
      <returns>必要なサイズ。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TextBoxBase">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> などのテキスト編集コントロールの機能を提供する抽象基本クラス。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn">
      <summary>ユーザーが Enter キーを押したとき、テキスト編集コントロールがどのように反応するかを示す値を取得または設定します。</summary>
      <returns>Enter キーを押すと現在のカーソル位置に新しい行が挿入される場合は <see langword="true" />。それ以外の場合は、Enter キーは無視されます。 既定値は、<see cref="T:System.Windows.Controls.TextBox" /> の場合は <see langword="false" />、<see cref="T:System.Windows.Controls.RichTextBox" /> の場合は <see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab">
      <summary>Tab キーが押されたとき、テキスト編集コントロールがどのように反応するかを示す値を取得または設定します。</summary>
      <returns>Tab キーを押すと現在のカーソル位置にタブ文字が挿入される場合は <see langword="true" />。タブ文字は挿入されず、タブ位置に指定されている次のコントロールにフォーカスが移動する場合は <see langword="false" />。
既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)">
      <summary>テキスト コントロールの内容に文字列を追加します。</summary>
      <param name="textData">テキスト コントロールの現在の内容に追加するテキストを指定する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection">
      <summary>マウスのドラッグによって単語の一部が選択された場合に、単語の残りの部分を選択するかどうかを指定する値を取得または設定します。</summary>
      <returns>単語の自動選択が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange">
      <summary>変更ブロックを開始します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo">
      <summary>最新の取り消し操作をやり直すことができるかどうかを示す値を取得します。</summary>
      <returns>最新の取り消し操作をやり直すことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo">
      <summary>最新の操作を取り消すことができるかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" />最新の操作を元に戻すことができる場合は。それ以外<see langword="false" />の場合は。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush">
      <summary>テキスト ボックスのキャレットの描画に使用するブラシを取得または設定します。</summary>
      <returns>テキスト ボックスのキャレットの描画に使用するブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Copy">
      <summary>テキスト編集コントロールの現在の選択内容を <see cref="T:System.Windows.Clipboard" /> にコピーします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Cut">
      <summary>テキスト編集コントロールの現在の選択内容を削除して <see cref="T:System.Windows.Clipboard" /> にコピーします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock">
      <summary>変更ブロックを作成します。</summary>
      <returns>新しい変更ブロックを参照する <see cref="T:System.IDisposable" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange">
      <summary>変更ブロックを終了します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight">
      <summary>表示されるコンテンツ エリアの縦幅を取得します。</summary>
      <returns>表示されるコンテンツ エリアの縦幅をデバイスに依存しない単位 (1 単位は 1/96 インチ) で指定する浮動小数点値。
スクロールをサポートするようにテキスト編集コントロールが構成されていない場合、このプロパティの値は 0.0 になります。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth">
      <summary>表示されるコンテンツ エリアの横幅を取得します。</summary>
      <returns>表示されるコンテンツ エリアの横幅をデバイスに依存しない単位 (1 単位は 1/96 インチ) で指定する浮動小数点値。
スクロールをサポートするようにテキスト編集コントロールが構成されていない場合、このプロパティの値は 0.0 になります。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset">
      <summary>水平方向のスクロール位置を取得または設定します。</summary>
      <returns>水平スクロール位置をデバイスに依存しない単位 (1 単位は 1/96 インチ) で指定する浮動小数点値。
このプロパティを設定すると、指定した水平オフセットまでテキスト編集コントロールがスクロールします。 このプロパティを読み取ると、現在の水平オフセットが返されます。
スクロールをサポートするようにテキスト編集コントロールが構成されていない場合、このプロパティの値は 0.0 になります。
このプロパティには既定値はありません。</returns>
      <exception cref="T:System.ArgumentException">このプロパティを負の値に設定しようとしました。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility">
      <summary>水平スクロール バーが表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 列挙体によって定義されている値。
既定値は <see cref="F:System.Windows.Visibility.Hidden" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled">
      <summary>テキスト ボックスにフォーカスがない場合にテキスト ボックスが選択されたテキストを表示するかどうかを示す値を取得または設定します。</summary>
      <returns>テキスト ボックスにフォーカスがないときにテキスト ボックスが選択されたテキストを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly">
      <summary>テキスト編集コントロールを操作するユーザーに対して、コントロールが読み取り専用であるかどうかを示す値を取得または設定します。</summary>
      <returns>テキスト編集コントロールの内容がユーザーに対して読み取り専用の場合は <see langword="true" />。それ以外の場合は、テキスト編集コントロールの内容をユーザーが変更できます。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible">
      <summary>読み取り専用のテキスト ボックスにキャレットが表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>読み取り専用のテキスト ボックスにキャレットが表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive">
      <summary>テキスト ボックスにフォーカスがあり、選択されたテキストがあるかどうかを示す値を取得します。</summary>
      <returns>テキスト ボックスにフォーカスと選択したテキストがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled">
      <summary>テキスト編集コントロールについて、元に戻す機能が有効であるかどうかを示す値を取得または設定します。</summary>
      <returns>取り消しのサポートが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown">
      <summary>コントロールの内容を 1 行ずつ下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft">
      <summary>コントロールの内容を 1 行ずつ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight">
      <summary>コントロールの内容を 1 行ずつ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp">
      <summary>コントロールの内容を 1 行ずつ上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit">
      <summary>アプリケーションの undo スタックの最新の undo 単位をロックします。 これにより、ロックした単位が、その後に追加される undo 単位とマージされなくなります。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate">
      <summary>コントロール テンプレートが適用されると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> ルーティング イベントが、その経路上でこのクラスに到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントの引数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.DragDrop.DragEnter" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.DragDrop.DragLeave" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.DragDrop.DragOver" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.DragDrop.DragEnter" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.DragDrop.GiveFeedback" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostFocus" /> イベントを (指定された引数を使用して) 発生させます。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Mouse.MouseDown" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Mouse.MouseMove" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Mouse.MouseUp" /> イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントの引数。 これらの引数には、押されたマウス ボタンおよび処理済み状態に関する詳細が含まれます。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseWheel" /> イベントがこのクラス (またはこのクラスを継承するクラス) にルーティングされると呼び出されます。</summary>
      <param name="e">このイベントに関連付けられるマウス ホイール引数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> が発生するときに呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)">
      <summary>キャレットの位置 (現在の選択の位置) が変わると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> イベントに関連付けられている引数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>コントロール テンプレートが変更されたときに呼び出されます。</summary>
      <param name="oldTemplate">現在アクティブなコントロール テンプレートを指定する <see cref="T:System.Windows.Controls.ControlTemplate" /> オブジェクト。</param>
      <param name="newTemplate">使用する新しいコントロール テンプレートを指定する <see cref="T:System.Windows.Controls.ControlTemplate" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
      <summary>この編集コントロールの内容が変更されると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> イベントに関連付けられている引数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 添付ルーティング イベントが、その経路上でこのクラスから派生する要素に到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown">
      <summary>コントロールの内容を 1 ページずつ下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft">
      <summary>コントロールの内容を 1 ページずつ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight">
      <summary>コントロールの内容を 1 ページずつ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp">
      <summary>コントロールの内容を 1 ページずつ上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Paste">
      <summary>テキスト編集コントロールの現在の選択箇所にクリップボードの内容を貼り付けます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Redo">
      <summary>最新の取り消しコマンドを取り消します。 つまり、undo スタックの最新の undo 単位をやり直します。</summary>
      <returns>やり直しの操作が正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 使用できる取り消しコマンドがない場合 (undo スタックが空の場合) には <see langword="false" /> が返されます。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd">
      <summary>編集コントロールのビューを内容の最後までスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome">
      <summary>編集コントロールのビューをビューポートの先頭までスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)">
      <summary>編集コントロールの内容を、指定された水平方向オフセットまでスクロールします。</summary>
      <param name="offset">スクロール先の水平オフセットを指定する double 型の値。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)">
      <summary>指定した垂直方向のオフセットに編集コントロールの内容をスクロールします。</summary>
      <param name="offset">スクロール先の垂直オフセットを指定する double 型の値。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll">
      <summary>テキスト編集コントロールのすべての内容を選択します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush">
      <summary>選択されているテキストを強調表示するブラシを取得または設定します。</summary>
      <returns>選択されているテキストを強調表示するブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged">
      <summary>テキスト選択が変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> の不透明度を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> の不透明度。 既定値は0.4 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush">
      <summary>選択したテキストに使用されるブラシを定義する値を取得または設定します。</summary>
      <returns>選択されたテキストに使用されるブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck">
      <summary>
        <see cref="T:System.Windows.Controls.SpellCheck" /> または <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> のテキスト コンテンツのスペル ミスへのアクセスを提供する <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.SpellCheck" /> または <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> のテキスト コンテンツのスペル ミスへのアクセスを提供する <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクト。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged">
      <summary>テキスト要素が変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Undo">
      <summary>最新の取り消しコマンドを取り消します。 つまり、undo スタックの最新の undo 単位を取り消します。</summary>
      <returns>取り消しの操作が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 undo スタックが空の場合、このメソッドは <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit">
      <summary>アンドゥ キューに格納されるアクション数を取得または設定します。</summary>
      <returns>アンドゥ キューに格納されるアクション数。 既定値は-1 です。これは、元に戻すキューが使用可能なメモリに限定されることを意味します。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> は、<see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> を呼び出した後、<see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" /> を呼び出す前に設定されます。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset">
      <summary>垂直方向のスクロール位置を取得または設定します。</summary>
      <returns>垂直スクロール位置をデバイスに依存しない単位 (1 単位は 1/96 インチ) で指定する浮動小数点値。
このプロパティを設定すると、指定した垂直オフセットまでテキスト編集コントロールがスクロールします。 このプロパティを読み取ると、現在の垂直オフセットが返されます。
スクロールをサポートするようにテキスト編集コントロールが構成されていない場合、このプロパティの値は 0.0 になります。
このプロパティには既定値はありません。</returns>
      <exception cref="T:System.ArgumentException">このプロパティを負の値に設定しようとしました。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility">
      <summary>垂直スクロール バーが表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 列挙体によって定義されている値。
既定値は <see cref="F:System.Windows.Visibility.Hidden" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight">
      <summary>スクロール可能なコンテンツ エリアの縦のサイズを取得します。</summary>
      <returns>スクロール可能なコンテンツ エリアの縦幅をデバイスに依存しない単位 (1 単位は 1/96 インチ) で指定する浮動小数点値。
スクロールをサポートするようにテキスト編集コントロールが構成されていない場合、このプロパティの値は 0.0 になります。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth">
      <summary>スクロール可能なコンテンツ エリアの横幅を取得します。</summary>
      <returns>スクロール可能なコンテンツ エリアの横幅をデバイスに依存しない単位 (1 単位は 1/96 インチ) で指定する浮動小数点値。
スクロールをサポートするようにテキスト編集コントロールが構成されていない場合、このプロパティの値は 0.0 になります。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Thumb">
      <summary>ユーザーがドラッグできるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.CancelDrag">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> のドラッグ操作を取り消します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragCompleted">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールでマウスのキャプチャがなくなると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragCompletedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragDelta">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールに論理フォーカスおよびマウス キャプチャがあるときにマウスの位置が変更されると、1 回以上発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragDeltaEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragStarted">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールが論理フォーカスおよびマウス キャプチャを受け取ると発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragStartedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Thumb.IsDragging">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールに論理フォーカスおよびマウス キャプチャがあるかどうか、およびマウスの左ボタンが押されているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールにフォーカスおよびマウス キャプチャがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.IsDraggingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> コントロールの <see cref="T:System.Windows.Controls.Primitives.Thumb" /> を作成します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> コントロールに対応する <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnDraggingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> プロパティの値の変更に応答します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseMove" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickBar">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> コントロールの目盛りを描画するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TickBar.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.TickBar" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Fill">
      <summary>目盛りの描画に使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>目盛の描画に使用する <see cref="T:System.Windows.Media.Brush" />。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.FillProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.Fill" /> 依存関係プロパティを識別します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.IsDirectionReversed">
      <summary>目盛りの値を増加させる方向を取得または設定します。</summary>
      <returns>値を増加させる方向が、水平 <see cref="T:System.Windows.Controls.Slider" /> で左方向の場合、または垂直 <see cref="T:System.Windows.Controls.Slider" /> で下方向の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.IsDirectionReversedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.IsDirectionReversed" /> 依存関係プロパティを識別します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabled">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.TickBar" /> に選択範囲を表示するかどうかを取得または設定します。</summary>
      <returns>選択範囲を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> 依存関係プロパティを識別します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Maximum">
      <summary>目盛りに対して指定可能な最大値を取得または設定します。</summary>
      <returns>目盛りに対して指定可能な最大値。 既定値は 100.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.MaximumProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.Maximum" /> 依存関係プロパティを識別します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Minimum">
      <summary>目盛りに対して指定可能な最小値を取得または設定します。</summary>
      <returns>目盛りに対して指定可能な最小値。 既定値はゼロ (0.0) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.MinimumProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.Minimum" /> 依存関係プロパティを識別します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TickBar.OnRender(System.Windows.Media.DrawingContext)">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> コントロールの目盛りを描画します。</summary>
      <param name="dc">目盛りの描画に使用される <see cref="T:System.Windows.Media.DrawingContext" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Placement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> コントロールの <see cref="T:System.Windows.Controls.Slider" /> に対して相対的な、目盛りが表示される位置を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.TickBarPlacement" /> の <see cref="T:System.Windows.Controls.Primitives.TickBar" /> レイアウトにおける <see cref="T:System.Windows.Style" /> の位置を識別する <see cref="T:System.Windows.Controls.Slider" /> 列挙値。 既定値は <see cref="F:System.Windows.Controls.Primitives.TickBarPlacement.Top" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.PlacementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.Placement" /> 依存関係プロパティを識別します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.TickBar" /> に対して指定されている目盛りを含む領域の領域バッファーを取得または設定します。</summary>
      <returns>目盛りの行または列の両側の合計バッファー領域を表す値。 既定値はゼロ (0.0) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.ReservedSpaceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace" /> 依存関係プロパティを識別します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd">
      <summary>選択の終点を取得または設定します。</summary>
      <returns>選択対象の値の範囲の最後の値。 既定値は-1.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.SelectionEndProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd" /> 依存関係プロパティを識別します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.SelectionStart">
      <summary>選択の始点を取得または設定します。</summary>
      <returns>選択対象の値の範囲の最初の値。 既定値は-1.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.SelectionStartProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionStart" /> 依存関係プロパティを識別します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.TickFrequency">
      <summary>目盛りの間隔を取得または設定します。</summary>
      <returns>目盛り間の距離。 既定値は 1 (1.0) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.TickFrequencyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.TickFrequency" /> 依存関係プロパティを識別します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Ticks">
      <summary>目盛りの位置を取得または設定します。</summary>
      <returns>目盛りの位置を指定する <see cref="T:System.Windows.Media.DoubleCollection" />。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.TicksProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.Ticks" /> 依存関係プロパティを識別します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickBarPlacement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.TickBar" /> コントロールの <see cref="T:System.Windows.Controls.Primitives.Track" /> に対する <see cref="T:System.Windows.Controls.Slider" /> の配置を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Bottom">
      <summary>目盛りバーは、<see cref="T:System.Windows.Controls.Primitives.Track" /> の <see cref="T:System.Windows.Controls.Slider" /> の下に配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Left">
      <summary>目盛りバーは、<see cref="T:System.Windows.Controls.Primitives.Track" /> の <see cref="T:System.Windows.Controls.Slider" /> の左に配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Right">
      <summary>目盛りバーは、<see cref="T:System.Windows.Controls.Primitives.Track" /> の <see cref="T:System.Windows.Controls.Slider" /> の右に配置されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Top">
      <summary>目盛りバーは、<see cref="T:System.Windows.Controls.Primitives.Track" /> の <see cref="T:System.Windows.Controls.Slider" /> の上に配置されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickPlacement">
      <summary>コントロールに実装される <see cref="T:System.Windows.Controls.Slider" /> に対する <see cref="T:System.Windows.Controls.Primitives.Track" /> コントロール内での目盛りの位置を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.Both">
      <summary>目盛りは、水平 <see cref="T:System.Windows.Controls.Primitives.Track" /> の場合は <see cref="T:System.Windows.Controls.Slider" /> の上と下、垂直 <see cref="T:System.Windows.Controls.Primitives.Track" /> の場合は <see cref="T:System.Windows.Controls.Slider" /> の左側と右側に表示されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.BottomRight">
      <summary>目盛りは、水平 <see cref="T:System.Windows.Controls.Primitives.Track" /> の場合は <see cref="T:System.Windows.Controls.Slider" /> の下、垂直 <see cref="T:System.Windows.Controls.Primitives.Track" /> の場合は <see cref="T:System.Windows.Controls.Slider" /> の右側に表示されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.None">
      <summary>目盛りは表示されません。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.TopLeft">
      <summary>目盛りは、水平 <see cref="T:System.Windows.Controls.Primitives.Track" /> の場合は <see cref="T:System.Windows.Controls.Slider" /> の上、垂直 <see cref="T:System.Windows.Controls.Primitives.Track" /> の場合は <see cref="T:System.Windows.Controls.Slider" /> の左側に表示されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToggleButton">
      <summary>
        <see cref="T:System.Windows.Controls.CheckBox" /> などの、状態を切り替えることができるコントロールの基本クラス。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Checked">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> がチェックされたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.CheckedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> の状態がオンでもオフでもないときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IndeterminateEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> がチェックされているかどうかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> がチェックされている場合は <see langword="true" />。<see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> がチェックされていない場合は false。それ以外の場合は <see langword="null" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsCheckedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState">
      <summary>コントロールが 2 つまたは 3 つの状態をサポートするかどうかを指定します。</summary>
      <returns>コントロールで 3 種類の状態がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsThreeStateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> が <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> イベントを発生させると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnClick">
      <summary>マウスまたはキーボードによってコントロールがクリックされたときに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnCreateAutomationPeer">
      <summary>WPF インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnIndeterminate(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> が <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> イベントを発生させると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnToggle">
      <summary>トグル動作を実装するために、<see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> メソッドによって呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> が <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> イベントを発生させると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> オブジェクトの文字列表現を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> オブジェクトの文字列表現。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> がチェックされていないときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.UncheckedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel">
      <summary>オーバーフロー <see cref="T:System.Windows.Controls.ToolBar" /> 項目の配置に使用されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> オブジェクトのコンテンツを配置し、そのサイズを設定します。</summary>
      <param name="arrangeBounds">ツール バーのオーバーフロー パネルが子要素を配置する際に想定するサイズ。</param>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> のサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.CreateUIElementCollection(System.Windows.FrameworkElement)">
      <summary>新しい <see cref="T:System.Windows.Controls.UIElementCollection" /> を作成します。</summary>
      <param name="logicalParent">新しいコレクションの論理上の親。</param>
      <returns>新しいコレクション。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> を再測定します。</summary>
      <param name="constraint">制約サイズは上限値です。 戻り値がこのサイズを超えないようにする必要があります。</param>
      <returns>必要なサイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidth">
      <summary>項目が次の行に移動するまでのオーバーフロー <see cref="T:System.Windows.Controls.ToolBar" /> の推奨幅を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBar" /> の推奨幅を表す double 型の値。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToolBarPanel">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> 内の <see cref="T:System.Windows.Controls.ToolBar" /> 項目を配置します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> 内の <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> 項目を配置し、サイズを設定します。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> がその子を配置する際に想定するサイズ。</param>
      <returns>パネルのサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.MeasureOverride(System.Windows.Size)">
      <summary>ツール バー パネルを再測定します。</summary>
      <param name="constraint">測定値の制約。制約を超えるサイズを <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> が返すことはできません。</param>
      <returns>パネルの必要サイズ。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Track">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> を設定するために使用される 1 つの <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> コントロールと 2 つの <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> コントロールの位置とサイズを処理するコントロール プリミティブを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> のレイアウトを作成します。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Controls.Primitives.Track" /> に対して提供される領域。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> のコンテンツに使用する <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.DecreaseRepeatButton">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティを減少させる <see cref="T:System.Windows.Controls.Primitives.Track" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> が押されたときに <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> コントロールの <see cref="T:System.Windows.Controls.Primitives.Track" /> を減少させる <see cref="T:System.Windows.Controls.Primitives.RepeatButton" />。 既定値は、既定の設定を持つ <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> コントロールです。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.GetVisualChild(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Windows.Controls.Primitives.Track" /> の子を取得します。</summary>
      <param name="index">子のインデックス。</param>
      <returns>子ビジュアル要素の一覧における指定したインデックス位置の <see cref="T:System.Windows.Controls.Primitives.Track" /> のオブジェクトを返します。 インデックスは、0 ～ <see cref="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount" /> プロパティの値から 1 を引いた値までの数値にする必要があります。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定したインデックスは、<see cref="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount" /> プロパティから 1 を引いた値よりも大きい値です。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.IncreaseRepeatButton">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> クラスの <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティを増加させる <see cref="T:System.Windows.Controls.Primitives.Track" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> が押されたときに <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> コントロールの <see cref="T:System.Windows.Controls.Primitives.Track" /> を増加させる <see cref="T:System.Windows.Controls.Primitives.RepeatButton" />。 既定値は、既定の設定を持つ <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> コントロールです。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.IsDirectionReversed">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> の増加方向が、既定の方向と逆になるかどうかを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Track.IncreaseRepeatButton" /> および <see cref="P:System.Windows.Controls.Primitives.Track.DecreaseRepeatButton" /> が位置を交換し、値の増加方向が逆になる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.IsDirectionReversedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Track.IsDirectionReversed" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Maximum">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> の指定可能な最大 <see cref="T:System.Windows.Controls.Primitives.Track" /> を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> の指定可能な最大 <see cref="T:System.Windows.Controls.Primitives.Track" />。 既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.MaximumProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Track.Maximum" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> およびそのコンポーネントに必要なレイアウト サイズを測定します。</summary>
      <param name="availableSize">トラックで使用可能な領域のサイズ。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> に必要なレイアウトの <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Minimum">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> の指定可能な最小 <see cref="T:System.Windows.Controls.Primitives.Track" /> を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> の指定可能な最小 <see cref="T:System.Windows.Controls.Primitives.Track" />。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.MinimumProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Track.Minimum" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Orientation">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> が水平または垂直のどちらの方向に表示されるかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> が水平または垂直のどちらの方向に表示されるかを示す <see cref="T:System.Windows.Controls.Primitives.Track" /> 列挙値。 既定値は、<see cref="F:System.Windows.Controls.Orientation.Horizontal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Track.Orientation" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Thumb">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> の変更に使用される <see cref="T:System.Windows.Controls.Primitives.Track" /> コントロールを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> で使用される <see cref="T:System.Windows.Controls.Primitives.Track" /> コントロール。 既定値は、既定の設定を持つ <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールです。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Value">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> コントロールの位置で決定される <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> の現在の値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> の現在の値。 既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ValueFromDistance(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> が移動したときの <see cref="T:System.Windows.Controls.Primitives.Track" /> の <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> の変更を計算します。</summary>
      <param name="horizontal">
        <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> の水平移動距離。</param>
      <param name="vertical">
        <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> の垂直移動距離。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> の <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> の移動距離に対応する <see cref="T:System.Windows.Controls.Primitives.Track" /> の変更。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ValueFromPoint(System.Windows.Point)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> から <see cref="T:System.Windows.Controls.Primitives.Track" /> に沿って指定したポイントまでの距離を計算します。</summary>
      <param name="pt">指定した点。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> および指定した <paramref name="pt" /> 値間の距離。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.ViewportSize">
      <summary>スクロール可能なコンテンツの中で表示される部分のサイズを取得または設定します。</summary>
      <returns>スクロール可能なコンテンツの表示領域のサイズ。 既定値は <see cref="F:System.Double.NaN" /> です。これは、コンテンツ サイズが定義されていないことを意味します。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.ViewportSizeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Track.ViewportSize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> の子要素の数を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> の子要素の数を指定する 0 ～ 22 の整数値。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.UniformGrid">
      <summary>グリッド内のセルがすべて同じサイズである場合に、コンテンツを整列する方法を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.ArrangeOverride(System.Windows.Size)">
      <summary>すべての子要素にスペースを均等に配分することによって <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> のレイアウトを定義します。</summary>
      <param name="arrangeSize">使用するグリッドの領域の <see cref="T:System.Windows.Size" />。</param>
      <returns>表示可能な子要素を表示するために描画されるグリッドの実際の <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.Columns">
      <summary>グリッド内の列数を取得または設定します。</summary>
      <returns>グリッド内の列の数。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.ColumnsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Columns" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn">
      <summary>グリッドの最初の行にある先頭の空のセルの数を取得または設定します。</summary>
      <returns>グリッドの最初の行にある空のセルの数。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.FirstColumnProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.MeasureOverride(System.Windows.Size)">
      <summary>すべての子要素を測定することによって <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> の必要なサイズを計算します。</summary>
      <param name="constraint">グリッドに使用できる領域の <see cref="T:System.Windows.Size" />。</param>
      <returns>グリッドの子コンテンツおよび <paramref name="constraint" /> パラメーターに基づいた必要な <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.Rows">
      <summary>グリッド内の行数を取得または設定します。</summary>
      <returns>グリッド内の行の数。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.RowsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Rows" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.PrintDialog">
      <summary>ユーザー入力に従って <see cref="T:System.Printing.PrintTicket" /> および <see cref="T:System.Printing.PrintQueue" /> を構成し、ドキュメントを印刷する標準の Microsoft Windows 印刷ダイアログ ボックスを呼び出します。</summary>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.PrintDialog" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.CurrentPageEnabled">
      <summary>プリンターで現在のページを印刷するためのオプションが有効かどうかを示す値を取得または設定します。</summary>
      <returns>現在のページを印刷するオプションが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.MaxPage">
      <summary>ページ範囲内で許容されている最大のページ番号を取得または設定します。</summary>
      <returns>[印刷] ダイアログボックスのページ範囲で使用できる最大のページ番号を表す。 **** <see cref="T:System.UInt32" /></returns>
      <exception cref="T:System.ArgumentException">このプロパティは 1 未満に設定されています。</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.MinPage">
      <summary>ページ範囲内で許容されている最小のページ番号を取得または設定します。</summary>
      <returns>[印刷] ダイアログボックスのページ範囲で使用できる最小のページ番号を表す。 **** <see cref="T:System.UInt32" /></returns>
      <exception cref="T:System.ArgumentException">このプロパティは 1 未満に設定されています。</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PageRange">
      <summary>
        <see cref="P:System.Windows.Controls.PrintDialog.PageRangeSelection" /> が <see cref="F:System.Windows.Controls.PageRangeSelection.UserPages" /> に設定されている場合に印刷するページの範囲を取得または設定します。</summary>
      <returns>印刷されているページの範囲を表す <see cref="T:System.Windows.Controls.PageRange" />。</returns>
      <exception cref="T:System.ArgumentException">プロパティを設定するために使用されている <see cref="T:System.Windows.Controls.PageRange" /> オブジェクトによって、範囲の先頭または範囲の末尾が 1 未満の値に設定されています。</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PageRangeSelection">
      <summary>
        <see cref="T:System.Windows.Controls.PageRangeSelection" /> のこのインスタンスの <see cref="T:System.Windows.Controls.PrintDialog" /> を取得または設定します。</summary>
      <returns>印刷するページ範囲の種類を表す <see cref="T:System.Windows.Controls.PageRangeSelection" /> 値。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintableAreaHeight">
      <summary>ページの印刷可能領域の高さを取得します。</summary>
      <returns>印刷可能ページ領域の高さを表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintableAreaWidth">
      <summary>ページの印刷可能領域の幅を取得します。</summary>
      <returns>印刷可能ページ領域の幅を表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.PrintDocument(System.Windows.Documents.DocumentPaginator,System.String)">
      <summary>現在選択されている <see cref="T:System.Windows.Documents.DocumentPaginator" /> に <see cref="T:System.Printing.PrintQueue" /> オブジェクトを印刷します。</summary>
      <param name="documentPaginator">印刷する <see cref="T:System.Windows.Documents.DocumentPaginator" /> オブジェクト。</param>
      <param name="description">印刷されるジョブの説明。 このテキストは、プリンターのユーザー インターフェイス (UI) に表示されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="documentPaginator" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintQueue">
      <summary>選択されているプリンターを表す <see cref="T:System.Printing.PrintQueue" /> を取得または設定します。</summary>
      <returns>ユーザーが選択した <see cref="T:System.Printing.PrintQueue" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintTicket">
      <summary>ユーザーが現在の印刷ジョブに対して [印刷] をクリックした場合に、<see cref="T:System.Windows.Controls.PrintDialog" /> によって使用される <see cref="T:System.Printing.PrintTicket" /> を取得または設定します。</summary>
      <returns>ダイアログボックスの [印刷] ボタンをクリックしたときに使用される。 <see cref="T:System.Printing.PrintTicket" />
この <see cref="P:System.Windows.Controls.PrintDialog.PrintTicket" /> プロパティを設定しても、特定の <see cref="T:System.Printing.PrintTicket" /> に対して指定した <see cref="T:System.Printing.PrintQueue" /> の検証または変更は行われません。  必要に応じて、<see cref="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> メソッドを使用して、指定したプリンターに対して有効な、<see cref="T:System.Printing.PrintQueue" /> 固有の <see cref="T:System.Printing.PrintTicket" /> を作成します。</returns>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.PrintVisual(System.Windows.Media.Visual,System.String)">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> クラスから派生している (テキスト以外の) ビジュアル オブジェクトを、現在選択されている <see cref="T:System.Printing.PrintQueue" /> に印刷します。</summary>
      <param name="visual">印刷する <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="description">印刷されるジョブの説明。 このテキストは、プリンターのユーザー インターフェイス (UI) に表示されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visual" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.SelectedPagesEnabled">
      <summary>プリンターで選択されたページを印刷するためのオプションが有効かどうかを示す値を取得または設定します。</summary>
      <returns>選択されたページを印刷するオプションが有効になっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.ShowDialog">
      <summary>
        <see cref="T:System.Windows.Controls.PrintDialog" /> を、モーダル ダイアログ ボックスとして呼び出します。</summary>
      <returns>ユーザーが [印刷] をクリックした場合は <see langword="true" />。ユーザーが [キャンセル] をクリックした場合は <see langword="false" />。ユーザーが [印刷] も [キャンセル] もクリックせずにダイアログ ボックスを閉じた場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.UserPageRangeEnabled">
      <summary>[印刷] ダイアログ ボックスの印刷するページの範囲を指定するオプションを、ユーザーが使用できるかどうかを示す値を取得または設定します。</summary>
      <returns>オプションを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.PrintDialogException">
      <summary>PrintDialog を開いている、アクセスしている、または使用している間にエラー状態が発生するとスローされる例外。</summary>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.PrintDialogException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>特定の <see cref="T:System.Windows.Controls.PrintDialogException" /> および <see cref="T:System.Runtime.Serialization.SerializationInfo" /> を提供する <see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの新しいインスタンスを初期化します。 このコンストラクターは保護されています。</summary>
      <param name="info">オブジェクトのシリアル化または逆シリアル化に必要なデータ。</param>
      <param name="context">シリアル化ストリームのソースおよびデスティネーションを含むコンテキスト。</param>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.String)">
      <summary>
        <see cref="T:System.Windows.Controls.PrintDialogException" /> で特定のエラー条件を提供する <see cref="T:System.String" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラー状態を説明する <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.String,System.Exception)">
      <summary>根本原因を含めた、特定のエラー条件を提供する <see cref="T:System.Windows.Controls.PrintDialogException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラー条件を説明する <see cref="T:System.String" />。</param>
      <param name="innerException">
        <see cref="T:System.Windows.Controls.PrintDialogException" /> を発生させた、基になるエラー条件。</param>
    </member>
    <member name="T:System.Windows.Controls.ProgressBar">
      <summary>操作の進行状況を示します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ProgressBar" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ProgressBar.IsIndeterminate">
      <summary>
        <see cref="T:System.Windows.Controls.ProgressBar" /> は、実際の値と汎用の連続的な進行状況フィードバックのどちらを表示するかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ProgressBar" /> が実際の値を表示する場合は <see langword="false" />。<see cref="T:System.Windows.Controls.ProgressBar" /> が汎用の進行状況を表示する場合は <see langword="true" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ProgressBar.IsIndeterminateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnApplyTemplate">
      <summary>テンプレートが <see cref="T:System.Windows.Controls.ProgressBar" /> に適用されると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnCreateAutomationPeer">
      <summary>WPF オートメーション インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnMaximumChanged(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.ProgressBar" /> プロパティが変化した場合に、<see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> の現在の位置を更新します。</summary>
      <param name="oldMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの変更前の値。</param>
      <param name="newMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnMinimumChanged(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.ProgressBar" /> プロパティが変化した場合に、<see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> の現在の位置を更新します。</summary>
      <param name="oldMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの変更前の値。</param>
      <param name="newMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnValueChanged(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.ProgressBar" /> プロパティが変化した場合に、<see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> の現在の位置を更新します。</summary>
      <param name="oldValue">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティの変更前の値。</param>
      <param name="newValue">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティの変更後の値。</param>
    </member>
    <member name="P:System.Windows.Controls.ProgressBar.Orientation">
      <summary>
        <see cref="T:System.Windows.Controls.ProgressBar" /> の向き (水平方向または垂直方向) を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Controls.Orientation.Horizontal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ProgressBar.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ProgressBar.Orientation" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.RadioButton">
      <summary>ユーザーによる選択が可能であり、選択解除はできないボタンを表します。 <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> の <see cref="T:System.Windows.Controls.RadioButton" /> プロパティは、これをクリックすることによって設定できますが、プロパティをオフにするのはプログラムからしかできません。</summary>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.RadioButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.RadioButton.GroupName">
      <summary>同時には使用できない <see cref="T:System.Windows.Controls.RadioButton" /> コントロールを指定する名前を取得または設定します。</summary>
      <returns>同時には使用できない <see cref="T:System.Windows.Controls.RadioButton" /> コントロールを指定する名前。  既定値は空の文字列です。</returns>
    </member>
    <member name="F:System.Windows.Controls.RadioButton.GroupNameProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RadioButton.GroupName" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>オプション ボタンの <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> が呼び出されると呼び出されます。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.AccessKeyEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> プロパティが <see langword="true" /> になると呼び出されます。</summary>
      <param name="e">
        <see cref="T:System.Windows.RoutedEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnCreateAutomationPeer">
      <summary>WPF オートメーション インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnToggle">
      <summary>
        <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> コントロールの切り替え動作を実装するために、<see cref="T:System.Windows.Controls.RadioButton" /> メソッドによって呼び出されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.RichTextBox">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> オブジェクトを操作するリッチ編集コントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> クラスの新しい既定のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.#ctor(System.Windows.Documents.FlowDocument)">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> クラスの新しいインスタンスを初期化し、指定した <see cref="T:System.Windows.Documents.FlowDocument" /> を初期コンテンツとして追加します。</summary>
      <param name="document">新しい <see cref="T:System.Windows.Documents.FlowDocument" /> の初期コンテンツとして追加する <see cref="T:System.Windows.Controls.RichTextBox" />。</param>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.CaretPosition">
      <summary>入力キャレットの位置を取得または設定します。</summary>
      <returns>入力キャレットの位置を指定する <see cref="T:System.Windows.Documents.TextPointer" /> オブジェクト。
既定では、キャレットは、<see cref="T:System.Windows.Controls.RichTextBox" /> でホストされているコンテンツの先頭にある最初の挿入位置にあります。 "挿入位置" など、テキストの位置に関する用語の詳細については、<see cref="T:System.Windows.Documents.TextPointer" /> を参照してください。</returns>
      <exception cref="T:System.ArgumentNullException">このプロパティを <see langword="null" /> に設定しようとしました。</exception>
      <exception cref="T:System.ArgumentException">このプロパティを、現在のドキュメントの外部の位置を参照する <see cref="T:System.Windows.Documents.TextPointer" /> に設定しようとしました。</exception>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Document">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> のコンテンツを表す <see cref="T:System.Windows.Controls.RichTextBox" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> のコンテンツを表す <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクト。
既定では、このプロパティは空の <see cref="T:System.Windows.Documents.FlowDocument" /> に設定されます。  具体的には、空の <see cref="T:System.Windows.Documents.FlowDocument" /> には <see cref="T:System.Windows.Documents.Paragraph" /> が 1 つあり、その中にテキストを含まない <see cref="T:System.Windows.Documents.Run" /> が 1 つあります。</returns>
      <exception cref="T:System.ArgumentNullException">このプロパティを <see langword="null" /> に設定しようとしました。</exception>
      <exception cref="T:System.ArgumentException">このプロパティを、別の <see cref="T:System.Windows.Documents.FlowDocument" /> のコンテンツを表す <see cref="T:System.Windows.Controls.RichTextBox" /> に設定しようとしました。</exception>
      <exception cref="T:System.InvalidOperationException">このプロパティは、変更ブロックがアクティブになっている場合に設定されます。</exception>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> のコンテンツの次のスペル ミスを指す <see cref="T:System.Windows.Controls.RichTextBox" /> を返します。</summary>
      <param name="position">次のスペル ミスの検索を開始する位置を示す <see cref="T:System.Windows.Documents.TextPointer" />。</param>
      <param name="direction">指定した <c>posision</c> から次のスペル ミスを検索するときの <see cref="T:System.Windows.Documents.LogicalDirection" />。</param>
      <returns>
        <see cref="T:System.Windows.Documents.TextPointer" /> のコンテンツの次のスペル ミスを指す <see cref="T:System.Windows.Controls.RichTextBox" />。次のスペル ミスが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point,System.Boolean)">
      <summary>指定された位置に最も近い挿入ポイントを指す <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</summary>
      <param name="point">
        <see cref="T:System.Windows.Point" /> を取得する位置を指定する <see cref="T:System.Windows.Documents.TextPointer" /> オブジェクト。</param>
      <param name="snapToText">
        <see langword="true" /> の場合は、指定された <see cref="T:System.Windows.Documents.TextPointer" /> が文字境界ボックス内にあるかどうかに関係なく、その <see cref="T:System.Windows.Point" /> に最も近い挿入位置を指す <see cref="T:System.Windows.Point" /> が常に返されます。
<see langword="false" /> の場合は、指定された <see cref="T:System.Windows.Point" /> が文字境界ボックス内にないときは <see langword="null" /> が返されます。</param>
      <returns>指定されたポイントに最も近い挿入位置を指す <see cref="T:System.Windows.Documents.TextPointer" />。<paramref name="snapToText" /> が <see langword="null" /> で、指定された <see cref="T:System.Windows.Point" /> が文字境界ボックス内にない場合は、<see langword="false" />。 返される <see cref="T:System.Windows.Documents.TextPointer" /> は、通常は 2 つの文字間の位置になります。 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> が 2 つの文字のどちらに対応するかは、返される <see cref="T:System.Windows.Documents.TextPointer" /> の <see cref="T:System.Windows.Documents.TextPointer" /> プロパティを使用して決定します。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.RichTextBox" /> のレイアウト情報が最新でない場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)">
      <summary>
        <see cref="T:System.Windows.Controls.SpellingError" /> のコンテンツ内の指定した位置にあるスペル ミスに関連付けられた <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクトを返します。</summary>
      <param name="position">スペル ミスをチェックする文字に解決される位置および論理方向を指定する <see cref="T:System.Windows.Documents.TextPointer" />。 この <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> の <see cref="T:System.Windows.Documents.TextPointer" /> プロパティを使用して、チェックする文字の方向を指定します。</param>
      <returns>
        <paramref name="position" /> で示された文字の位置で見つかったスペル ミスの詳細を格納する <see cref="T:System.Windows.Controls.SpellingError" /> オブジェクト。指定された文字にスペル ミスが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)">
      <summary>
        <see cref="T:System.Windows.Documents.TextRange" /> のコンテンツ内の指定された位置にあるスペル ミスの単語が含まれている <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクトを返します。</summary>
      <param name="position">スペル ミスをチェックする文字に解決される位置および論理方向を指定する <see cref="T:System.Windows.Documents.TextPointer" />。 この <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> の <see cref="T:System.Windows.Documents.TextPointer" /> プロパティを使用して、チェックする文字の方向を指定します。</param>
      <returns>
        <paramref name="position" /> で指定された文字を含むスペル ミスの単語が含まれている <see cref="T:System.Windows.Documents.TextRange" /> オブジェクト。指定された文字にスペル ミスが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled">
      <summary>ユーザーが <see cref="T:System.Windows.UIElement" /> 内の <see cref="T:System.Windows.ContentElement" /> オブジェクトおよび <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクトと対話できるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが <see cref="T:System.Windows.UIElement" /> 内の <see cref="T:System.Windows.ContentElement" /> オブジェクトおよび <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクトと対話できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.LogicalChildren">
      <summary>
        <see langword="RichTextBox" /> の論理的な子を反復処理できる列挙子を取得します。</summary>
      <returns>論理的な子の列挙子。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> を再測定するために呼び出されます。</summary>
      <param name="constraint">
        <see cref="T:System.Windows.Size" /> のサイズに関する制約を指定する <see cref="T:System.Windows.Controls.RichTextBox" /> 構造体。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> の新しいサイズを示す <see cref="T:System.Windows.Controls.RichTextBox" /> 構造体。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>このリッチ テキスト ボックスが表示される DPI が変更されるときに呼び出されます。</summary>
      <param name="oldDpiScaleInfo">以前の DPI スケール設定。</param>
      <param name="newDpiScaleInfo">新規の DPI スケール設定。</param>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Selection">
      <summary>
        <see cref="T:System.Windows.Documents.TextSelection" /> の現在の選択範囲が含まれている <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextSelection" /> の現在の選択範囲が含まれている <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクト。
既定では、<see cref="T:System.Windows.Documents.TextSelection" /> プロパティの値が <see langword="true" /> の <see cref="P:System.Windows.Documents.TextRange.IsEmpty" /> が返されます。 空の <see cref="T:System.Windows.Documents.TextSelection" /> は、何も選択されていないテキスト領域のキャレットとして描画されます。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.ShouldSerializeDocument">
      <summary>
        <see cref="P:System.Windows.Controls.RichTextBox.Document" /> オブジェクトのシリアル化中に <see cref="T:System.Windows.Controls.RichTextBox" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RichTextBox.Document" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="T:System.Windows.Controls.RowDefinition">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 要素に適用する行固有のプロパティを定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinition.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.ActualHeight">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> の計算された高さを表す値を取得します。</summary>
      <returns>計算された高さをデバイス非依存ピクセルで表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.Height">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> 要素の計算された高さ取得するか、<see cref="T:System.Windows.GridLength" /> で定義されている行の <see cref="T:System.Windows.Controls.RowDefinition" /> 値を設定します。</summary>
      <returns>行の高さを表す <see cref="T:System.Windows.GridLength" />。 既定値は 1.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.HeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RowDefinition.Height" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MaxHeight">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> の最大の高さ表す値を取得または設定します。</summary>
      <returns>最大の高さを表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MaxHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MinHeight">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> の最小の高さを表す値を取得または設定します。</summary>
      <returns>最小の高さを表す <see cref="T:System.Double" />。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MinHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RowDefinition.MinHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.Offset">
      <summary>この <see cref="T:System.Windows.Controls.RowDefinition" />のオフセット値を表す値を取得します。</summary>
      <returns>行のオフセットを表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="T:System.Windows.Controls.RowDefinitionCollection">
      <summary>順序付けられ、厳密に型指定された <see cref="T:System.Windows.Controls.RowDefinition" /> オブジェクトのコレクションへのアクセスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Add(System.Windows.Controls.RowDefinition)">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> 要素を <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> に追加します。</summary>
      <param name="value">コレクションに追加する <see cref="T:System.Windows.Controls.RowDefinition" /> を識別します。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Clear">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> の内容を消去します。</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Contains(System.Windows.Controls.RowDefinition)">
      <summary>指定された <see cref="T:System.Windows.Controls.RowDefinition" /> が <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 内に存在するかどうかを確認します。</summary>
      <param name="value">テスト中の <see cref="T:System.Windows.Controls.RowDefinition" /> を識別します。</param>
      <returns>
        <see cref="T:System.Windows.Controls.RowDefinition" /> がコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> 内の指定されたインデックス位置に、<see cref="T:System.Windows.Controls.RowDefinitionCollection" /> オブジェクトの配列をコピーします。</summary>
      <param name="array">
        <see cref="T:System.Windows.Controls.RowDefinition" /> オブジェクトの配列。</param>
      <param name="index">
        <see cref="T:System.Windows.Controls.RowDefinition" /> オブジェクトのコピー先となる <paramref name="array" /> 内のインデックス位置を識別します。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> が多次元です。
または
コピー元の <see cref="T:System.Collections.ICollection" /> の要素数が、インデックスからコピー先の配列の末尾までに格納できる数を超えています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満です。</exception>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.Count">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> のこのインスタンス内にある項目の合計数を取得します。</summary>
      <returns>コレクション内の項目の合計数。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.IndexOf(System.Windows.Controls.RowDefinition)">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> 内の指定された <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> のインデックス位置を返します。</summary>
      <param name="value">目的のインデックス位置を持つ <see cref="T:System.Windows.Controls.RowDefinition" />。</param>
      <returns>コレクションに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Insert(System.Int32,System.Windows.Controls.RowDefinition)">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> 内の指定されたインデックス位置に、<see cref="T:System.Windows.Controls.RowDefinitionCollection" /> を挿入します。</summary>
      <param name="index">コレクション内での項目の挿入位置。</param>
      <param name="value">挿入する <see cref="T:System.Windows.Controls.RowDefinition" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が <see cref="T:System.Collections.IList" /> の有効なインデックスではありません。</exception>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.IsReadOnly">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> が読み取り専用かどうかを示す値を取得します。</summary>
      <returns>コレクションが読み取り専用の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.IsSynchronized">
      <summary>この <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>このコレクションへのアクセスが同期されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.Item(System.Int32)">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 内の現在の項目を表す値を取得します。</summary>
      <param name="index">コレクション内の現在の項目。</param>
      <returns>指定したインデックス位置にある要素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> は、コレクション内での有効なインデックス位置ではありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Remove(System.Windows.Controls.RowDefinition)">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> から <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> を削除します。</summary>
      <param name="value">コレクションから削除する <see cref="T:System.Windows.Controls.RowDefinition" />。</param>
      <returns>
        <see cref="T:System.Windows.Controls.RowDefinition" /> がコレクション内で見つかり、削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックス位置にある <see cref="T:System.Windows.Controls.RowDefinition" /> を <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> から削除します。</summary>
      <param name="index">コレクション内での <see cref="T:System.Windows.Controls.RowDefinition" /> の削除位置。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> から <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> オブジェクトの範囲を削除します。</summary>
      <param name="index">最初の <see cref="T:System.Windows.Controls.RowDefinition" /> を削除する、コレクション内での位置。</param>
      <param name="count">コレクションから削除する <see cref="T:System.Windows.Controls.RowDefinition" /> オブジェクトの合計数。</param>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.SyncRoot">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#Generic#IEnumerable{System#Windows#Controls#RowDefinition}#GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerable`1" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>コレクションの要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
      <param name="array">
        <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> からコピーされた項目を受け取る、0 から始まる <see cref="T:System.Array" />。</param>
      <param name="index">指定した <see cref="T:System.Array" /> 内の、内容のコピー開始位置。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Add(System.Object)">
      <summary>項目をコレクションに追加します。</summary>
      <param name="value">
        <see cref="T:System.Object" /> に追加する <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</param>
      <returns>新しい要素が挿入された位置。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>コレクションに特定の値が格納されているかどうかを判断します。</summary>
      <param name="value">
        <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>
        <see cref="T:System.Object" /> が <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>コレクション内での指定した項目のインデックスを調べます。</summary>
      <param name="value">
        <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>コレクション内の指定したインデックスの位置に項目を挿入します。</summary>
      <param name="index">
        <see cref="T:System.Object" /> を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">
        <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> に挿入する <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IsFixedSize">
      <summary>コレクションが固定サイズかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns>指定したインデックス位置にある要素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> がリスト内での有効なインデックス位置ではありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>特定のオブジェクトの最初に出現したものをコレクションから削除します。</summary>
      <param name="value">
        <see cref="T:System.Object" /> から削除する <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</param>
    </member>
    <member name="T:System.Windows.Controls.ScrollBarVisibility">
      <summary>スクロール可能なコンテンツについて、<see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の参照可能範囲を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Auto">
      <summary>ビューポートがコンテンツ全体を表示できない場合に <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> が表示され、<see cref="T:System.Windows.Controls.ScrollViewer" /> のサイズがコンテンツに適用されます。 水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、コンテンツの幅は <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> の <see cref="T:System.Windows.Controls.ScrollViewer" /> に設定されます。 垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、コンテンツの高さは <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> の <see cref="T:System.Windows.Controls.ScrollViewer" /> に設定されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Disabled">
      <summary>ビューポートがコンテンツ全体を表示できない場合でも、<see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> は表示されません。 コンテンツのサイズは、親の <see cref="T:System.Windows.Controls.ScrollViewer" /> のサイズに設定されます。 水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、コンテンツの幅は <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> の <see cref="T:System.Windows.Controls.ScrollViewer" /> に設定されます。 垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、コンテンツの高さは <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> の <see cref="T:System.Windows.Controls.ScrollViewer" /> に設定されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Hidden">
      <summary>ビューポートがコンテンツ全体を表示できない場合でも、<see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> は表示されません。 <see cref="T:System.Windows.Controls.ScrollViewer" /> のサイズは、コンテンツに適用されません。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Visible">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> は常に表示されます。 <see cref="T:System.Windows.Controls.ScrollViewer" /> のサイズはコンテンツに適用されます。 水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、コンテンツの幅は <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> の <see cref="T:System.Windows.Controls.ScrollViewer" /> に設定されます。 垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、コンテンツの高さは <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> の <see cref="T:System.Windows.Controls.ScrollViewer" /> に設定されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollChangedEventArgs">
      <summary>スクロール状態の変化を記述し、<see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /> イベントに必要な引数を格納します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentHeight">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> エクステントの更新された高さを取得します。</summary>
      <returns>更新されたエクステントの高さを表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentHeightChange">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> エクステントの高さの変更を示す値を取得します。</summary>
      <returns>エクステントの高さの変更を表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentWidth">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> エクステントの更新された幅を取得します。</summary>
      <returns>更新されたエクステントの幅を表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentWidthChange">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> エクステントの幅の変更を示す値を取得します。</summary>
      <returns>エクステントの幅の変更を表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.HorizontalChange">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> の水平オフセットの変更を示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> の水平方向のオフセットの変更を示す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.HorizontalOffset">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> の水平オフセットの更新された値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> の水平オフセットの更新された値を表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>タイプ セーフな <see cref="T:System.Windows.Controls.ScrollChangedEventHandler" /> デリゲートを呼び出す前に、適切な型のキャストを実行します。</summary>
      <param name="genericHandler">呼び出すイベント ハンドラー (この場合は <see cref="T:System.Windows.Controls.ScrollChangedEventHandler" /> デリゲート)。</param>
      <param name="genericTarget">
        <paramref name="genericHandler" /> が呼び出されるときのターゲット。</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.VerticalChange">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> の垂直オフセットの変更を示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> の垂直オフセットの変更を表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.VerticalOffset">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> の垂直オフセットの更新された値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> の更新された縦方向のオフセットを表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportHeight">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> のビューポートの高さの更新された値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> の更新されたビューポートの高さを表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportHeightChange">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> のビューポートについて高さの値の変化を示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> の垂直ビューポートの高さの変化を表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportWidth">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> のビューポートの幅の更新された値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> のビューポートの幅の更新された値を表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportWidthChange">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> のビューポートの幅の変更を示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> のビューポートの幅の変更を表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.ScrollChangedEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /> ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.ScrollContentPresenter">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コントロールのコンテンツを表示します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.AdornerLayer">
      <summary>装飾を表示する <see cref="T:System.Windows.Documents.AdornerLayer" /> を取得します。</summary>
      <returns>装飾を表示する <see cref="T:System.Windows.Documents.AdornerLayer" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll">
      <summary>コンテンツが <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> をサポートする場合、コンテンツにスクロール制御を許可するかどうかを示します。</summary>
      <returns>コンテンツにスクロールを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 値が <see langword="false" /> であれば、<see cref="T:System.Windows.Controls.ScrollContentPresenter" /> がスクロール クライアントとして機能することを示します。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollContentPresenter.CanContentScrollProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanHorizontallyScroll">
      <summary>水平方向の軸上のスクロールが可能かどうかを示す値を取得または設定します。</summary>
      <returns>スクロール可能な場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanVerticallyScroll">
      <summary>垂直軸上でのスクロールが可能かどうかを示す値を取得または設定します。</summary>
      <returns>スクロールが可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight">
      <summary>エクステントの縦幅を取得します。</summary>
      <returns>範囲の縦のサイズ。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentWidth">
      <summary>エクステントの横幅を取得します。</summary>
      <returns>範囲の横幅。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.HorizontalOffset">
      <summary>スクロールしたコンテンツの横方向のオフセットを取得します。</summary>
      <returns>水平オフセット。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineDown">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> コンテンツを 1 行分下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineLeft">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> コンテンツを、あらかじめ設定されている量だけ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineRight">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> コンテンツを、あらかじめ設定されている量だけ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineUp">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> コンテンツを 1 行分上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> オブジェクトの座標空間が表示可能になるまでコンテンツを強制的にスクロールします。</summary>
      <param name="visual">表示される <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="rectangle">表示される座標空間を識別する外接する四角形。</param>
      <returns>表示領域を表す <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelDown">
      <summary>ユーザーがマウスのホイール ボタンをクリックした後にコンテンツ内を下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelLeft">
      <summary>ユーザーがマウスのホイール ボタンをクリックした後にコンテンツ内を左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelRight">
      <summary>ユーザーがマウスのホイール ボタンをクリックした後にコンテンツ内を右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelUp">
      <summary>ユーザーがマウスのホイール ボタンをクリックした後にコンテンツ内を上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.OnApplyTemplate">
      <summary>内部プロセスまたはアプリケーションが <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> を呼び出すと呼び出されます。これは、現在のテンプレートのビジュアル ツリーの構築に使用されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageDown">
      <summary>コンテンツ内を 1 ページ分上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageLeft">
      <summary>コンテンツ内を 1 ページずつ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageRight">
      <summary>コンテンツ内を 1 ページずつ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageUp">
      <summary>コンテンツ内を 1 ページだけ上にスクロールします。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ScrollOwner">
      <summary>スクロール動作を制御する <see cref="T:System.Windows.Controls.ScrollViewer" /> 要素を取得または設定します。</summary>
      <returns>スクロール動作を制御する <see cref="T:System.Windows.Controls.ScrollViewer" /> 要素。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetHorizontalOffset(System.Double)">
      <summary>水平方向のオフセットの量を設定します。</summary>
      <param name="offset">コンテンツが格納ビューポートから水平方向にオフセットされる角度。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetVerticalOffset(System.Double)">
      <summary>垂直方向のオフセットの量を設定します。</summary>
      <param name="offset">格納しているビューポートから、コンテンツを垂直方向にオフセットする程度。</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.VerticalOffset">
      <summary>スクロールしたコンテンツの縦方向のオフセットを取得します。</summary>
      <returns>スクロールしたコンテンツの縦方向のオフセット。 有効な値は、0 と、 <see cref="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight" /> から <see cref="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight" />を減算した値の間です。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight">
      <summary>このコンテンツのビューポートの垂直方向のサイズを取得します。</summary>
      <returns>このコンテンツのビューポートの垂直方向のサイズ。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportWidth">
      <summary>このコンテンツのビューポートの水平方向のサイズを取得します。</summary>
      <returns>このコンテンツのビューポートの水平方向のサイズ。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="T:System.Windows.Controls.ScrollUnit">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 添付プロパティによって使用される単位の種類を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollUnit.Item">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> がパネルに表示される項目に基づいて測定されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollUnit.Pixel">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> は デバイスに依存しない単位 (1 単位は 1/96 インチ) に基づいて測定されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollViewer">
      <summary>その他の表示可能な要素を含むことのできるスクロール可能領域を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> のコンテンツを配置します。</summary>
      <param name="arrangeSize">この要素が要素自体と子を配置するために使用する親の末尾の領域。</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> インターフェイスをサポートする要素がスクロール可能かどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> が論理単位でスクロールする場合は <see langword="true" />。<see cref="T:System.Windows.Controls.ScrollViewer" /> が物理単位でスクロールする場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.CanContentScrollProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
      <summary>水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> が表示されるかどうかを示す値を取得します。</summary>
      <returns>水平スクロール バーが表示されるかどうかを示す <see cref="T:System.Windows.Visibility" />。 既定値は、<see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
      <summary>垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> が表示されるかどうかを示す値を取得します。</summary>
      <returns>垂直スクロール バーが表示されるかどうかを示す <see cref="T:System.Windows.Visibility" />。 既定値は、<see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset">
      <summary>表示されるコンテンツの水平オフセットを取得します。</summary>
      <returns>表示されるコンテンツの水平オフセット。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ContentHorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset">
      <summary>表示されるコンテンツの垂直オフセットを取得します。</summary>
      <returns>表示されるコンテンツの垂直オフセット。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ContentVerticalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
      <summary>範囲の縦のサイズを示す値を取得します。</summary>
      <returns>範囲の縦のサイズを表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
      <summary>範囲の横のサイズを含む値を取得します。</summary>
      <returns>範囲の横のサイズを表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetCanContentScroll(System.Windows.DependencyObject)">
      <summary>指定された要素から <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> 依存関係プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>この要素をスクロールできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(System.Windows.DependencyObject)">
      <summary>指定された要素から <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依存関係プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依存関係プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetIsDeferredScrollingEnabled(System.Windows.DependencyObject)">
      <summary>指定されたオブジェクトの <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> の取得元のオブジェクト。</param>
      <returns>ユーザーが <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> をドラッグしたときにコンテンツが静止する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetPanningDeceleration(System.Windows.DependencyObject)">
      <summary>指定されたオブジェクトの <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> プロパティの値を返します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>速度 <see cref="T:System.Windows.Controls.ScrollViewer" /> は平方ミリ秒ごとに デバイスに依存しない単位 (1 単位は 1/96 インチ) で低下します。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetPanningMode(System.Windows.DependencyObject)">
      <summary>指定されたオブジェクトの <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> プロパティの値を返します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> がタッチ操作に反応する方法を指定する値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetPanningRatio(System.Windows.DependencyObject)">
      <summary>指定されたオブジェクトの <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> プロパティの値を返します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>スクロール オフセットと平行移動操作オフセットの比率。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetVerticalScrollBarVisibility(System.Windows.DependencyObject)">
      <summary>指定された要素から <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依存関係プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依存関係プロパティの値。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HandlesScrolling">
      <summary>コントロールのスタイルに、カスタムのキーボード スクロール動作を定義した <see cref="T:System.Windows.Controls.ScrollViewer" /> が定義されていることを示す値を取得します。</summary>
      <returns>このコントロールでカスタムのキーボード スクロール動作が定義されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>ヒット テストを実行して、指定した位置がこの <see cref="T:System.Windows.Controls.ScrollViewer" /> の境界内にあるかどうかを判断します。</summary>
      <param name="hitTestParameters">ビジュアル オブジェクト内でのヒット テストのパラメーター。</param>
      <returns>ヒット テストの結果。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
      <summary>スクロールしたコンテンツの横方向のオフセットを格納する値を取得します。</summary>
      <returns>スクロールしたコンテンツの横方向のオフセットを表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
      <summary>水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を表示するかどうかを示す値を取得または設定します。</summary>
      <returns>水平 <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> を表示するかどうかを示す <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 値。 既定値は、<see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.InvalidateScrollInfo">
      <summary>スクロール プロパティのサイズ値が変更されたときに <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> に割り当てられた <see cref="T:System.Windows.Controls.ScrollViewer" /> インターフェイスによって呼び出されます。 スクロール プロパティには、オフセット、エクステント、ビューポイントがあります。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> をドラッグしたときにコンテンツが静止するかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> をドラッグしたときにコンテンツが静止する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineDown">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツを 1 行分下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineLeft">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツを、あらかじめ設定されている量だけ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineRight">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツを、あらかじめ設定されている量だけ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineUp">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツを 1 行分上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 要素のコンテンツを測定します。</summary>
      <param name="constraint">
        <see cref="T:System.Windows.Size" /> の上限。この値を超えることはできません。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> 要素の <see cref="T:System.Windows.Controls.ScrollViewer" /> の、計算された目的の上限値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnApplyTemplate">
      <summary>内部プロセスまたはアプリケーションによって <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> が呼び出されたときに呼び出されます。これは、現在のテンプレートのビジュアル ツリーの構築に使用されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnCreateAutomationPeer">
      <summary>Windows Presentation Foundation (WPF) オートメーション インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を実装します。</summary>
      <returns>このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>特定のキーボード入力に応答し、関連付けられたスクロール動作を呼び出します。</summary>
      <param name="e">このイベントの必須の引数。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> イベントが発生すると呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationDelta" /> イベントが発生すると呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> イベントが発生すると呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationStarting" /> イベントが発生すると呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウスの左ボタンのクリックに応答します。</summary>
      <param name="e">このイベントを説明する必須の引数。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>マウス ホイールのクリックに応答します。</summary>
      <param name="e">このイベントを説明する必須の引数。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
      <summary>スクロール位置、範囲、またはビューポートのサイズの変更など、スクロール状態の変更が検出されたときに呼び出されます。</summary>
      <param name="e">スクロール状態の変化に関する情報を格納している <see cref="T:System.Windows.Controls.ScrollChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
      <summary>スタイラスによって開始されたタップ ジェスチャが検出されたときに呼び出されます。</summary>
      <param name="e">ジェスチャに関する情報を格納している <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageDown">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツを 1 ページ分下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageLeft">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツを 1 ページ分左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageRight">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツを 1 ページ分右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageUp">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツを 1 ページ分上にスクロールします。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.PanningDeceleration">
      <summary>慣性処理時の平方ミリ秒あたりの <see cref="T:System.Windows.Controls.ScrollViewer" /> の速度の低下率 (デバイスに依存しない単位 (1 単位は 1/96 インチ)) を取得または設定します。</summary>
      <returns>速度 <see cref="T:System.Windows.Controls.ScrollViewer" /> は平方ミリ秒ごとに デバイスに依存しない単位 (1 単位は 1/96 インチ) で低下します。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.PanningDecelerationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.PanningMode">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> がタッチ操作に反応する方法を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> がタッチ操作に反応する方法を指定する値。  既定値は、<see cref="F:System.Windows.Controls.PanningMode.None" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.PanningModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.PanningRatio">
      <summary>スクロール オフセットと平行移動操作オフセットの比率を取得または設定します。</summary>
      <returns>スクロール オフセットと平行移動操作オフセットの比率。 既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.PanningRatioProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
      <summary>スクロールできるコンテンツ要素の縦幅を表す値を取得します。</summary>
      <returns>スクロールできるコンテンツ要素の縦幅を表す <see cref="T:System.Double" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
      <summary>スクロールできるコンテンツ要素の横幅を表す値を取得します。</summary>
      <returns>スクロールできるコンテンツ要素の横幅を表す <see cref="T:System.Double" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ScrollViewer.ScrollChanged">
      <summary>スクロールの位置、範囲、またはビューポートのサイズに対する変更が検出されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollChangedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollInfo">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> インターフェイスを実装し、この <see cref="T:System.Windows.Controls.ScrollViewer" />のスクロール プロパティの値を提供する要素を取得または設定します。</summary>
      <returns>範囲、オフセット、ビューポート サイズなどのスクロール プロパティを制御する要素。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToBottom">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツの末尾まで垂直方向にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToEnd">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツの末尾まで垂直方向にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToHome">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツの先頭まで垂直方向にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 内のコンテンツを指定された水平方向のオフセット位置にスクロールします。</summary>
      <param name="offset">コンテンツのスクロール先の位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToLeftEnd">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツの先頭まで水平方向にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToRightEnd">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツの末尾まで水平方向にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToTop">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コンテンツの先頭まで垂直方向にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 内のコンテンツを指定された垂直方向のオフセット位置にスクロールします。</summary>
      <param name="offset">コンテンツのスクロール先の位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetCanContentScroll(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された要素に <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> 依存関係プロパティの値を設定します。</summary>
      <param name="element">プロパティ値の設定対象の要素。</param>
      <param name="canContentScroll">設定するプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
      <summary>指定された要素に <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依存関係プロパティの値を設定します。</summary>
      <param name="element">プロパティ値の設定対象の要素。</param>
      <param name="horizontalScrollBarVisibility">設定するプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetIsDeferredScrollingEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> プロパティを設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> プロパティの設定対象のオブジェクト。</param>
      <param name="value">ユーザーが <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> をドラッグしたときにコンテンツを静止したままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetPanningDeceleration(System.Windows.DependencyObject,System.Double)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> プロパティを設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> プロパティの設定対象のオブジェクト。</param>
      <param name="value">速度 <see cref="T:System.Windows.Controls.ScrollViewer" /> は平方ミリ秒ごとに デバイスに依存しない単位 (1 単位は 1/96 インチ) で低下します。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetPanningMode(System.Windows.DependencyObject,System.Windows.Controls.PanningMode)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> プロパティを設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> プロパティの設定対象のオブジェクト。</param>
      <param name="panningMode">
        <see cref="T:System.Windows.Controls.ScrollViewer" /> がタッチ操作に反応する方法を指定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetPanningRatio(System.Windows.DependencyObject,System.Double)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> プロパティを設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> プロパティの設定対象のオブジェクト。</param>
      <param name="value">スクロール オフセットと平行移動操作オフセットの比率。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
      <summary>指定された要素に <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依存関係プロパティの値を設定します。</summary>
      <param name="element">プロパティ値の設定対象の要素。</param>
      <param name="verticalScrollBarVisibility">設定するプロパティ値。</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
      <summary>スクロールしたコンテンツの縦方向のオフセットを含む値を取得します。</summary>
      <returns>スクロールしたコンテンツの縦方向のオフセットを表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
      <summary>垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を表示するかどうかを示す値を取得または設定します。</summary>
      <returns>垂直 <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> を表示するかどうかを示す <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 値。 既定値は、<see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
      <summary>コンテンツのビューポートの縦幅を含む値を取得します。</summary>
      <returns>コンテンツのビューポートの縦幅を表す <see cref="T:System.Double" /> 。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
      <summary>コンテンツのビューポートの横幅を格納する値を取得します。</summary>
      <returns>コンテンツのビューポートの横幅を表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.SelectedCellsChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectedCellsChangedEventArgs.#ctor(System.Collections.Generic.List{System.Windows.Controls.DataGridCellInfo},System.Collections.Generic.List{System.Windows.Controls.DataGridCellInfo})">
      <summary>選択に追加するセルおよび選択から削除するセルを指定して、<see cref="T:System.Windows.Controls.SelectedCellsChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="addedCells">選択に追加されるセル。</param>
      <param name="removedCells">選択から削除されるセル。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addedCells" /> または <paramref name="removedCells" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.SelectedCellsChangedEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.DataGridCellInfo},System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.DataGridCellInfo})">
      <summary>選択に追加するセルおよび選択から削除するセルを指定して、<see cref="T:System.Windows.Controls.SelectedCellsChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="addedCells">選択に追加されるセル。</param>
      <param name="removedCells">選択から削除されるセル。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addedCells" /> または <paramref name="removedCells" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Controls.SelectedCellsChangedEventArgs.AddedCells">
      <summary>選択に追加されたセルを取得します。</summary>
      <returns>追加されたセル。</returns>
    </member>
    <member name="P:System.Windows.Controls.SelectedCellsChangedEventArgs.RemovedCells">
      <summary>選択から削除されたセルの一覧を取得します。</summary>
      <returns>削除されたセルの一覧。</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectedCellsChangedEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" /> の <see cref="T:System.Windows.Controls.DataGrid" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.SelectedDatesCollection">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> 内で選択されている日付のセットを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectedDatesCollection.#ctor(System.Windows.Controls.Calendar)">
      <summary>
        <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このコレクションに関連付けられている <see cref="T:System.Windows.Controls.Calendar" />。</param>
    </member>
    <member name="M:System.Windows.Controls.SelectedDatesCollection.AddRange(System.DateTime,System.DateTime)">
      <summary>指定された範囲のすべての日付 (最初と最後の日付を含む) をコレクションに追加します。</summary>
      <param name="start">コレクションに追加する最初の日付。</param>
      <param name="end">コレクションに追加する最後の日付。</param>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectionChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.IList,System.Collections.IList)">
      <summary>
        <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="id">識別子 (ID) イベント。</param>
      <param name="removedItems">このイベント中に選択されなかった項目。</param>
      <param name="addedItems">このイベント中に選択された項目。</param>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.AddedItems">
      <summary>選択された項目の一覧を取得します。</summary>
      <returns>前回の <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> イベント発生以降に選択された項目。</returns>
    </member>
    <member name="M:System.Windows.Controls.SelectionChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>適切な型のキャストを実行して、<see cref="T:System.Windows.Controls.SelectionChangedEventHandler" /> イベントのタイプ セーフな <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> デリゲートを呼び出します。</summary>
      <param name="genericHandler">呼び出すハンドラー。</param>
      <param name="genericTarget">イベントの経路上にある現在のオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.RemovedItems">
      <summary>選択されなかった項目の一覧を取得します。</summary>
      <returns>前回の <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> イベント発生以降に選択されなかった項目。</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.SelectionMode">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> に関する選択動作を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Extended">
      <summary>ユーザーは、Shift キーを押しながら、連続した複数の項目を選択できます。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Multiple">
      <summary>ユーザーは、変換キーを押さなくても複数の項目を選択できます。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Single">
      <summary>ユーザーは、一度に 1 つの項目しか選択できません。</summary>
    </member>
    <member name="T:System.Windows.Controls.SelectiveScrollingOrientation">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid" /> パネルがスクロールできる方向を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.Both">
      <summary>パネルは、水平および垂直の両方向にスクロールします。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.Horizontal">
      <summary>パネルは水平方向にのみスクロールします。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.None">
      <summary>パネルはスクロールしません。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.Vertical">
      <summary>パネルは垂直方向にのみスクロールします。</summary>
    </member>
    <member name="T:System.Windows.Controls.Separator">
      <summary>項目コントロール内で項目を区切るために使用するコントロール。</summary>
    </member>
    <member name="M:System.Windows.Controls.Separator.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Separator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Separator.OnCreateAutomationPeer">
      <summary>WPF オートメーション インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="T:System.Windows.Controls.Slider">
      <summary>ユーザーが <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> に沿って <see cref="T:System.Windows.Controls.Primitives.Track" /> コントロールを移動することにより一定範囲から値を選択できるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> のコンテンツを配置し、その <see cref="T:System.Windows.Size" /> を決定します。</summary>
      <param name="finalSize">コントロールの配置に使用される、計算された <see cref="T:System.Windows.Size" />。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> の計算された <see cref="T:System.Windows.Controls.Slider" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.AutoToolTipPlacement">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> が押されたときに、<see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> の現在の値を示すツールヒントが表示されるかどうかを取得または設定します。 ツールヒントが表示される場合、このプロパティによってツールヒントの配置も指定されます。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.AutoToolTipPlacement" /> 上で、<see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> に対してどこにツールヒントを表示するかを決定する、またはツールヒントを表示しないことを指定する <see cref="T:System.Windows.Controls.Slider" /> 値の 1 つ。 既定値は <see cref="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None" /> です。これは、ツールヒントが表示されないことを示します。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.AutoToolTipPlacementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.AutoToolTipPlacement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.AutoToolTipPrecision">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> の <see cref="T:System.Windows.Controls.Slider" /> について、ツールヒント内で小数点の右側に表示される桁数を取得または設定します。</summary>
      <returns>ツールヒント内に表示される <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> の精度。小数点の右側に表示される桁数を指定します。 既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision" /> が、負でない整数値以外の値に設定されました。</exception>
    </member>
    <member name="F:System.Windows.Controls.Slider.AutoToolTipPrecisionProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.DecreaseLarge">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> プロパティで示される値の分だけ <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> の値を減少させるコマンドを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Input.RoutedCommand" /> プロパティで示される値の分だけ <see cref="T:System.Windows.Controls.Slider" /> の値を減少させる <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" />。 既定値 <see cref="T:System.Windows.Input.InputGesture" /> は <see cref="F:System.Windows.Input.Key.PageDown" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.DecreaseSmall">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> プロパティで示される値の分だけ <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> の値を減少させるコマンドを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Input.RoutedCommand" /> プロパティで示される値の分だけ <see cref="T:System.Windows.Controls.Slider" /> の値を減少させる <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" />。 既定の <see cref="T:System.Windows.Input.InputGesture" /> オブジェクトは <see cref="F:System.Windows.Input.Key.Down" /> と <see cref="F:System.Windows.Input.Key.Left" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.Delay">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> が押されている間に、<see cref="T:System.Windows.Controls.Primitives.Thumb" /> コマンドなど、<see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /> を移動するコマンドが実行されるまで待機する時間 (ミリ秒単位) を取得または設定します。</summary>
      <returns>ミリ秒単位の遅延時間。 既定値は、システム キーを押すときの遅延です。 詳細については、「<see cref="P:System.Windows.SystemParameters.KeyboardDelay" />」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.DelayProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.Delay" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IncreaseLarge">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> プロパティで示される値の分だけスライダーの値を増加させるコマンドを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Input.RoutedCommand" /> プロパティで示される値の分だけ <see cref="F:System.Windows.Controls.Slider.SelectionStartProperty" /> の値を増加させる <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" />。 このコマンドの既定の <see cref="T:System.Windows.Input.InputGesture" /> は <see cref="F:System.Windows.Input.Key.PageUp" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.IncreaseSmall">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> プロパティで示される値の分だけスライダーの値を増加させるコマンドを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Input.RoutedCommand" /> プロパティで示される値の分だけスライダーの値を増加させる <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> を返します。 このコマンドの既定の <see cref="T:System.Windows.Input.InputGesture" /> オブジェクトは <see cref="F:System.Windows.Input.Key.Up" /> と <see cref="F:System.Windows.Input.Key.Right" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.Interval">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> の <see cref="T:System.Windows.Controls.Slider" /> をクリックしたときの、増加コマンドまたは減少コマンドの間隔 (ミリ秒単位) を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> の <see cref="T:System.Windows.Controls.Slider" /> を変更するコマンドの間隔 (ミリ秒単位)。 既定値は、システム キーのリピート間隔です。 詳細については、「 SystemParametersInfo (SPI_GETKEYBOARDSPEED)」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IntervalProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.Interval" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsDirectionReversed">
      <summary>値を増加させる方向を取得または設定します。</summary>
      <returns>値を増加させる方向が、水平スライダーで左方向の場合、または垂直スライダーで下方向の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsDirectionReversedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsMoveToPointEnabled">
      <summary>マウス ポインターが <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> トラック上にある間にマウス クリックが生じた場合、その位置に <see cref="T:System.Windows.Controls.Slider" /> の <see cref="T:System.Windows.Controls.Slider" /> を直ちに移動させるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> をマウス クリックの位置に直ちに移動させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsMoveToPointEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.IsMoveToPointEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> で、<see cref="T:System.Windows.Controls.Slider" /> に沿って選択範囲を表示するかどうかを示す値を取得または設定します。</summary>
      <returns>選択範囲を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsSelectionRangeEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsSnapToTickEnabled">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> で、最も近い目盛りに <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> を自動的に移動するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Slider" /> で、<see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> の位置を目盛りに合わせる必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsSnapToTickEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.IsSnapToTickEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.MaximizeValue">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> を <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 値に設定するコマンドを取得します。</summary>
      <returns>使用する <see cref="T:System.Windows.Input.RoutedCommand" />。 既定値は、<see cref="F:System.Windows.Input.Key.End" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.MinimizeValue">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> を <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 値に設定するコマンドを取得します。</summary>
      <returns>使用する <see cref="T:System.Windows.Input.RoutedCommand" />。 既定値は、<see cref="F:System.Windows.Input.Key.Home" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnApplyTemplate">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> コントロールのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.Slider" /> を作成します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> の <see cref="T:System.Windows.Controls.Slider" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnDecreaseLarge">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /> コマンドに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnDecreaseSmall">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.DecreaseSmall" /> コマンドに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnIncreaseLarge">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.IncreaseLarge" /> コマンドに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnIncreaseSmall">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.IncreaseSmall" /> コマンドに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMaximizeValue">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.MaximizeValue" /> コマンドに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMaximumChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの値の変更に応答します。</summary>
      <param name="oldMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの古い値。</param>
      <param name="newMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMinimizeValue">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.MinimizeValue" /> コマンドに応答します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMinimumChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの値の変更に応答します。</summary>
      <param name="oldMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの古い値。</param>
      <param name="newMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> で <see cref="T:System.Windows.Controls.Primitives.Thumb" /> のドラッグをユーザーが停止したときに発生する <see cref="T:System.Windows.Controls.Slider" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> をユーザーがドラッグしたときに発生する <see cref="T:System.Windows.Controls.Slider" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnThumbDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> のドラッグをユーザーが開始したときに発生する <see cref="T:System.Windows.Controls.Slider" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnValueChanged(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> プロパティが変化した場合に、<see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> の現在の位置を更新します。</summary>
      <param name="oldValue">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> の以前の <see cref="T:System.Windows.Controls.Slider" />。</param>
      <param name="newValue">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> の新しい <see cref="T:System.Windows.Controls.Slider" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Slider.Orientation">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> の向きを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Slider.Orientation" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Controls.Orientation.Horizontal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.Orientation" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.SelectionEnd">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> で指定された選択範囲の最大値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Slider" /> の選択している値の範囲の最大値。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.SelectionEndProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.SelectionEnd" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.SelectionStart">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> で指定された選択範囲の最小値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Slider" /> の選択している値の範囲の最大値。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.SelectionStartProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.SelectionStart" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.TickFrequency">
      <summary>目盛りの間隔を取得または設定します。</summary>
      <returns>目盛り間の距離。 既定値は (1.0) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.TickFrequencyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.TickFrequency" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.TickPlacement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> の目盛りを配置する場合の <see cref="T:System.Windows.Controls.Slider" /> に対する位置を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> の目盛りをスライダー バーに対してどこに配置するかを定義する <see cref="T:System.Windows.Controls.Slider" /> 値。 既定値は、<see cref="F:System.Windows.Controls.Primitives.TickPlacement.None" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.TickPlacementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.Ticks">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> で表示する目盛りの位置を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Slider" /> で表示する目盛りのセット。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.TicksProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.Ticks" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.SoundPlayerAction">
      <summary>.wav ファイルの再生に使用する軽量のオーディオ再生 <see cref="T:System.Windows.TriggerAction" /> を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.SoundPlayerAction.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.SoundPlayerAction" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.SoundPlayerAction.Dispose">
      <summary>
        <see cref="T:System.Windows.Controls.SoundPlayerAction" /> クラスによって使用されているリソースを解放します。</summary>
    </member>
    <member name="P:System.Windows.Controls.SoundPlayerAction.Source">
      <summary>オーディオ ソースの場所を取得または設定します。</summary>
      <returns>オーディオ ソースの場所。</returns>
    </member>
    <member name="F:System.Windows.Controls.SoundPlayerAction.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.SoundPlayerAction.Source" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.SpellCheck">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> などのテキスト編集コントロールに、リアルタイムのスペル チェック機能を提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.SpellCheck.CustomDictionaries">
      <summary>カスタム スペル チェックに使用される用語集ファイルの場所のコレクションを取得します。</summary>
      <returns>用語集ファイルの場所のコレクション。</returns>
    </member>
    <member name="F:System.Windows.Controls.SpellCheck.CustomDictionariesProperty">
      <summary>
        <see cref="P:System.Windows.Controls.SpellCheck.CustomDictionaries" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)">
      <summary>指定されたテキスト編集コントロールでカスタム スペル チェックに使用される、用語集ファイルの場所のコレクションを取得します。</summary>
      <param name="textBoxBase">用語集ファイルのコレクションを取得するテキスト編集コントロール。</param>
      <returns>用語集ファイルの場所のコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBoxBase" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.GetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase)">
      <summary>指定されたテキスト編集コントロールでスペル チェックが有効になっているかどうかを示す値を返します。</summary>
      <param name="textBoxBase">チェック対象のテキスト編集コントロール。 コントロールの例としては、<see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> などがあります。</param>
      <returns>テキスト編集コントロールでスペル チェックが有効になっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBoxBase" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Controls.SpellCheck.IsEnabled">
      <summary>このテキスト編集コントロール (<see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> など) で、スペル チェックが有効になっているかどうかを決定する値を取得または設定します。</summary>
      <returns>コントロールでスペル チェックが有効になっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.SpellCheck.IsEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.SpellCheck.IsEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.SetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> などの指定されたテキスト編集コントロールで、スペル チェックを有効または無効にします。</summary>
      <param name="textBoxBase">スペル チェックを有効または無効にするテキスト編集コントロール。 コントロールの例としては、<see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> などがあります。</param>
      <param name="value">テキスト編集コントロールでスペル チェックを有効にするかどうかを指定するブール値。</param>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.SetSpellingReform(System.Windows.Controls.Primitives.TextBoxBase,System.Windows.Controls.SpellingReform)">
      <summary>スペル チェックが使用するスペリング改善ルールを決定します。</summary>
      <param name="textBoxBase">スペル チェックを適用するテキスト編集コントロール。 コントロールの例としては、<see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> などがあります。</param>
      <param name="value">スペリング改善ルールを決定する <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" /> 値。</param>
    </member>
    <member name="P:System.Windows.Controls.SpellCheck.SpellingReform">
      <summary>スペル チェックが使用するスペリング改善ルールを取得または設定します。</summary>
      <returns>スペル チェックが使用するスペリング改善ルール。 既定値は、フランス語の場合は <see cref="F:System.Windows.Controls.SpellingReform.PreAndPostreform" />、ドイツ語の場合は <see cref="F:System.Windows.Controls.SpellingReform.Postreform" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.SpellCheck.SpellingReformProperty">
      <summary>
        <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.SpellingError">
      <summary>編集コントロール (<see cref="T:System.Windows.Controls.TextBox" /> または <see cref="T:System.Windows.Controls.RichTextBox" />) 内のスペル ミスの単語を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.SpellingError.Correct(System.String)">
      <summary>スペル ミスがあるテキストを、指定した修正候補に置き換えます。</summary>
      <param name="correctedText">スペル ミスがあるテキストを置き換えるためのテキスト。</param>
    </member>
    <member name="M:System.Windows.Controls.SpellingError.IgnoreAll">
      <summary>コントロールの有効期間の残りの間、このエラーおよびすべての重複を無視するようコントロールに指示します。</summary>
    </member>
    <member name="P:System.Windows.Controls.SpellingError.Suggestions">
      <summary>スペルの正しくない単語のスペル修正候補の一覧を取得します。</summary>
      <returns>スペルの正しくない単語のスペル修正候補のコレクション。</returns>
    </member>
    <member name="T:System.Windows.Controls.SpellingReform">
      <summary>テキスト編集コントロールのスペルチェックによって使用されるスペリング改善ルールを指定します (<see cref="T:System.Windows.Controls.TextBox" /> または <see cref="T:System.Windows.Controls.RichTextBox" />)。</summary>
    </member>
    <member name="F:System.Windows.Controls.SpellingReform.Postreform">
      <summary>スペル改善後のスペル ルールを使用します。</summary>
    </member>
    <member name="F:System.Windows.Controls.SpellingReform.PreAndPostreform">
      <summary>スペル改善前とスペル改善後の両方のスペル ルールを使用します。</summary>
    </member>
    <member name="F:System.Windows.Controls.SpellingReform.Prereform">
      <summary>スペル改善前のスペル ルールを使用します。</summary>
    </member>
    <member name="T:System.Windows.Controls.StackPanel">
      <summary>子要素を水平方向または垂直方向の単一行に整列します。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.StackPanel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.StackPanel" /> 要素のコンテンツを配置します。</summary>
      <param name="arrangeSize">この要素が子要素を配置するために使用する必要がある <see cref="T:System.Windows.Size" />。</param>
      <returns>この <see cref="T:System.Windows.Size" /> 要素およびその子要素の配置後のサイズを表す <see cref="T:System.Windows.Controls.StackPanel" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.CanHorizontallyScroll">
      <summary>
        <see cref="T:System.Windows.Controls.StackPanel" /> を水平方向にスクロールできるかどうかを示す値を取得または設定します。</summary>
      <returns>コンテンツを水平方向にスクロールできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.CanVerticallyScroll">
      <summary>コンテンツを垂直方向にスクロールできるかどうかを示す値を取得または設定します。</summary>
      <returns>コンテンツを垂直方向にスクロールできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ExtentHeight">
      <summary>範囲の縦のサイズを示す値を取得します。</summary>
      <returns>範囲の縦のサイズを表す <see cref="T:System.Double" />。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ExtentWidth">
      <summary>範囲の横のサイズを含む値を取得します。</summary>
      <returns>範囲の横のサイズを表す <see cref="T:System.Double" />。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.HasLogicalOrientation">
      <summary>この <see cref="T:System.Windows.Controls.StackPanel" /> が水平方向であるか垂直方向であるかを示す値を取得します。</summary>
      <returns>このプロパティは常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.HorizontalOffset">
      <summary>スクロールしたコンテンツの横方向のオフセットを格納する値を取得します。</summary>
      <returns>スクロールしたコンテンツの横方向のオフセットを表す <see cref="T:System.Double" />。 既定値は 0.0 です。</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineDown">
      <summary>コンテンツを 1 論理単位分だけ下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineLeft">
      <summary>コンテンツを 1 論理単位分だけ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineRight">
      <summary>コンテンツを 1 論理単位分だけ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineUp">
      <summary>コンテンツを 1 論理単位分だけ上にスクロールします。</summary>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.LogicalOrientation">
      <summary>
        <see cref="T:System.Windows.Controls.Orientation" /> の <see cref="T:System.Windows.Controls.StackPanel" /> を表す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 値。</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>指定された座標までスクロールし、その部分の <see cref="T:System.Windows.Media.Visual" /> を表示します。</summary>
      <param name="visual">表示可能になる <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="rectangle">ビジュアル内の座標空間を表す <see cref="T:System.Windows.Rect" />。</param>
      <returns>表示される座標空間での <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.StackPanel" /> が渡される間、配置を予測して <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" /> の子要素を測定します。</summary>
      <param name="constraint">超えることができない上限の <see cref="T:System.Windows.Size" />。</param>
      <returns>要素の必要サイズを表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelDown">
      <summary>マウスのホイール ボタンがクリックされた場合に、コンテンツを論理的に下方向へスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelLeft">
      <summary>マウスのホイール ボタンがクリックされた場合に、コンテンツを論理的に左方向へスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelRight">
      <summary>マウスのホイール ボタンがクリックされた場合に、コンテンツを論理的に右方向へスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelUp">
      <summary>マウスのホイール ボタンがクリックされた場合に、コンテンツを論理的に上方向へスクロールします。</summary>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.Orientation">
      <summary>子要素がスタックされる次元を示す値を取得または設定します。</summary>
      <returns>子コンテンツの <see cref="T:System.Windows.Controls.Orientation" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.StackPanel.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageDown">
      <summary>コンテンツを論理的に 1 ページ分だけ下方向へスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageLeft">
      <summary>コンテンツを論理的に 1 ページ分だけ左方向へスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageRight">
      <summary>コンテンツを論理的に 1 ページ分だけ右方向へスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageUp">
      <summary>コンテンツを論理的に 1 ページ分だけ上方向へスクロールします。</summary>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ScrollOwner">
      <summary>この <see cref="T:System.Windows.Controls.StackPanel" /> でのスクロール動作を制御するコンテナーを識別する値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.ScrollViewer" /> のスクロールを所有している <see cref="T:System.Windows.Controls.StackPanel" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.SetHorizontalOffset(System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> プロパティの値を設定します。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> プロパティの値。</param>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.SetVerticalOffset(System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> プロパティの値を設定します。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> プロパティの値。</param>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.VerticalOffset">
      <summary>スクロールしたコンテンツの縦方向のオフセットを含む値を取得します。</summary>
      <returns>スクロールしたコンテンツの縦方向のオフセットを表す <see cref="T:System.Double" />。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ViewportHeight">
      <summary>コンテンツのビューポートの縦幅を含む値を取得します。</summary>
      <returns>コンテンツのビューポートの縦幅を表す <see cref="T:System.Double" />。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ViewportWidth">
      <summary>コンテンツのビューポートの横幅を格納する値を取得します。</summary>
      <returns>コンテンツのビューポートの縦のサイズを表す <see cref="T:System.Double" />。 既定値は 0.0 です。</returns>
    </member>
    <member name="T:System.Windows.Controls.StickyNoteControl">
      <summary>入力したテキストまたは手書きの注釈をユーザーがドキュメントに結び付けることができるコントロールを表します。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.AnchorInfo">
      <summary>注釈付きオブジェクトに関する情報を提供するオブジェクトを取得します。</summary>
      <returns>注釈付きオブジェクトに関する情報を提供する <see cref="T:System.Windows.Annotations.IAnchorInfo" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.Author">
      <summary>付箋を作成した作成者の名前を取得します。</summary>
      <returns>付箋を作成した作成者の名前。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.AuthorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StickyNoteControl.Author" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily">
      <summary>
        <see cref="T:System.Windows.Controls.StickyNoteControl" /> のキャプションのフォント ファミリを取得または設定します。</summary>
      <returns>コントロールのキャプションの <see cref="T:System.Drawing.FontFamily" />。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> の値です。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize">
      <summary>
        <see cref="T:System.Windows.Controls.StickyNoteControl" /> のキャプションに使用されるフォントのサイズを取得または設定します。</summary>
      <returns>フォント サイズを表す <see cref="T:System.Double" />。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontSize" /> の値です。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch">
      <summary>
        <see cref="T:System.Windows.Controls.StickyNoteControl" /> のキャプションに使用されるフォントの伸縮度を取得または設定します。</summary>
      <returns>フォントの標準縦横比と比較した伸縮度を表す <see cref="T:System.Windows.FontStretch" /> 構造体。 既定値は、<see cref="P:System.Windows.FontStretches.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontStretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle">
      <summary>
        <see cref="T:System.Windows.Controls.StickyNoteControl" /> のキャプションに使用されるフォントのスタイルを取得または設定します。</summary>
      <returns>キャプションのスタイルを標準または斜体として表す <see cref="T:System.Windows.FontStyle" /> 構造体。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> の値です。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight">
      <summary>
        <see cref="T:System.Windows.Controls.StickyNoteControl" /> のキャプションに使用されるフォントの太さを取得または設定します。</summary>
      <returns>太字、極太字、特細字などのフォントの太さを表す <see cref="T:System.Windows.FontWeight" /> 構造体。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> の値です。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.DeleteNoteCommand">
      <summary>
        <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> を削除する <see cref="T:System.Windows.Controls.StickyNoteControl" /> メソッドを持つコマンドを表します。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.InkCommand">
      <summary>インク付箋内のカーソルを描画と消去を含む、使用可能ないくつかのモードのいずれかに切り替える <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> メソッドを持つコマンドを表します。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.InkSchemaName">
      <summary>インク付箋の注釈の XML 型を取得します。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.IsActive">
      <summary>
        <see cref="T:System.Windows.Controls.StickyNoteControl" /> がアクティブであるかどうかを示す値を取得します。</summary>
      <returns>コントロールがアクティブな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.IsActiveProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StickyNoteControl.IsActive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.IsExpanded">
      <summary>
        <see cref="T:System.Windows.Controls.StickyNoteControl" /> が展開されているかどうかを示す値を取得または設定します。</summary>
      <returns>コントロールが展開されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.IsExpandedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StickyNoteControl.IsExpanded" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor">
      <summary>マウス カーソルが <see cref="T:System.Windows.Controls.StickyNoteControl" /> のアンカーの上にあるかどうかを示す値を取得します。</summary>
      <returns>マウス カーソルがアンカーの上にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.StickyNoteControl.OnApplyTemplate">
      <summary>テンプレートのすべての子のイベント ハンドラーを登録します。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.PenWidth">
      <summary>インク <see cref="T:System.Windows.Controls.StickyNoteControl" /> に対するペンの幅を取得または設定します。</summary>
      <returns>ペンの幅を表す <see cref="T:System.Double" />。 既定値は、<see cref="P:System.Windows.Ink.DrawingAttributes.Width" /> の値です。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.PenWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StickyNoteControl.PenWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.StickyNoteType">
      <summary>付箋がテキストとインクのどちらであるかを示す値を取得します。</summary>
      <returns>付箋の種類を示す <see cref="T:System.Windows.Controls.StickyNoteType" /> 値。 既定値は、<see cref="F:System.Windows.Controls.StickyNoteType.Text" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.StickyNoteTypeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StickyNoteControl.StickyNoteType" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.TextSchemaName">
      <summary>テキスト付箋の注釈の XML 型を取得します。</summary>
    </member>
    <member name="T:System.Windows.Controls.StickyNoteType">
      <summary>
        <see cref="T:System.Windows.Controls.StickyNoteControl" /> がテキストまたはインクを受け入れるかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteType.Ink">
      <summary>インク付箋。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteType.Text">
      <summary>テキストの付箋。</summary>
    </member>
    <member name="T:System.Windows.Controls.StretchDirection">
      <summary>コンテンツにスケーリングがどのように適用されるかを記述し、指定された軸の種類にスケーリングを制限します。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.Both">
      <summary>コンテンツは、<see cref="T:System.Windows.Media.Stretch" /> モードに基づいて、親に合わせて伸縮します。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.DownOnly">
      <summary>コンテンツが親よりも大きい場合のみ、縮小方向にスケーリングします。 コンテンツの方が親より小さくても、拡大方向にはスケーリングしません。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.UpOnly">
      <summary>コンテンツが親よりも小さい場合のみ、拡大方向にスケーリングします。 コンテンツの方が親より大きくても、縮小方向にはスケーリングしません。</summary>
    </member>
    <member name="T:System.Windows.Controls.StyleSelector">
      <summary>カスタム ロジックに基づいてスタイルを適用する方法を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.StyleSelector.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.StyleSelector" /> の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
      <summary>派生クラスでオーバーライドされると、カスタム ロジックに基づいて <see cref="T:System.Windows.Style" /> を返します。</summary>
      <param name="item">コンテンツ。</param>
      <param name="container">スタイルの適用対象の要素。</param>
      <returns>アプリケーション固有のスタイルを返します。それ以外の場合は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="T:System.Windows.Controls.TabControl">
      <summary>画面上の同じスペースを共有する複数の項目で構成されるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.TabControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.ContentStringFormat">
      <summary>
        <see cref="T:System.Windows.Controls.TabItem" /> オブジェクトの内容が文字列として表示される場合に、その書式を指定する複合文字列を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TabItem" /> オブジェクトの内容が文字列として表示される場合に、その書式を指定する複合文字列。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.ContentStringFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TabControl.ContentStringFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.ContentTemplate">
      <summary>
        <see cref="T:System.Windows.DataTemplate" /> プロパティまたは <see cref="T:System.Windows.Controls.TabItem" /> プロパティが定義されていないすべての <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> に適用する <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.DataTemplate" /> プロパティまたは <see cref="T:System.Windows.Controls.TabItem" /> プロパティが定義されていないすべての <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> に適用する <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.ContentTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TabControl.ContentTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.ContentTemplateSelector">
      <summary>
        <see cref="T:System.Windows.Controls.DataTemplateSelector" /> を取得または設定します。これにより、コントロールのコンテンツの表示に使用するテンプレートを選択するためのカスタム ロジックが提供されます。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.ContentTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.GetContainerForItemOverride">
      <summary>指定された項目の表示に使用する要素を作成または識別します。</summary>
      <returns>指定された項目を表示するために使用する要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定した項目が自身の <see langword="ItemContainer" /> かどうか (または自身の  にすることができるかどうか) を確認します。</summary>
      <param name="item">指定された項目。</param>
      <returns>項目がそれ自体の <see langword="true" /> である場合は <see langword="ItemContainer" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnApplyTemplate">
      <summary>
        <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> の呼び出し時に呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnCreateAutomationPeer">
      <summary>WPF オートメーション インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnInitialized(System.EventArgs)">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> が <see langword="true" /> に設定されると呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.FrameworkElement.Initialized" /> イベントのデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>項目が変更されたときに選択されている項目を更新するために呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>ユーザーがキーを押したときに発生する <see cref="E:System.Windows.ContentElement.KeyDown" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.KeyEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> ルーティング イベントを発生させます。</summary>
      <param name="e">
        <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContent">
      <summary>現在選択されている <see cref="T:System.Windows.Controls.TabItem" /> のコンテンツを取得します。</summary>
      <returns>現在選択されている <see cref="T:System.Windows.Controls.TabItem" /> のコンテンツ。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TabControl.SelectedContent" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContentStringFormat">
      <summary>現在選択されている <see cref="T:System.Windows.Controls.TabItem" /> の内容が文字列として表示される場合に、その書式を指定する複合文字列を取得します。</summary>
      <returns>現在選択されている <see cref="T:System.Windows.Controls.TabItem" /> の内容が文字列として表示される場合に、その書式を指定する複合文字列。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentStringFormatProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TabControl.SelectedContentStringFormat" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContentTemplate">
      <summary>現在選択されている項目の <see cref="T:System.Windows.DataTemplate" /> を取得します。</summary>
      <returns>選択されている項目の <see cref="T:System.Windows.DataTemplate" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplate" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContentTemplateSelector">
      <summary>現在選択されている項目の <see cref="T:System.Windows.Controls.DataTemplateSelector" /> を取得します。</summary>
      <returns>現在選択されている項目の <see cref="T:System.Windows.Controls.DataTemplateSelector" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentTemplateSelectorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplateSelector" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.TabStripPlacement">
      <summary>タブ ヘッダーが、タブの内容に対してどのように配置されるかを取得または設定します。</summary>
      <returns>タブのコンテンツを基準にしたタブ ヘッダーの配置方法。 既定値は、<see cref="F:System.Windows.Controls.Dock.Top" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.TabStripPlacementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.TabItem">
      <summary>
        <see cref="T:System.Windows.Controls.TabControl" /> 内の選択できる項目を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TabItem.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.TabItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TabItem.IsSelected">
      <summary>
        <see cref="T:System.Windows.Controls.TabItem" /> が選択されているかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TabItem" /> が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.IsSelectedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> の <see cref="T:System.Windows.Controls.TabControl" /> が呼び出された場合に応答します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.AccessKeyEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldContent">コンテンツ プロパティの変更前の値。</param>
      <param name="newContent">コンテンツ プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        <see cref="P:System.Windows.Controls.TabControl.ContentTemplate" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldContentTemplate">コンテンツ テンプレート プロパティの変更前の値。</param>
      <param name="newContentTemplate">コンテンツ テンプレート プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldContentTemplateSelector">コンテンツ テンプレート セレクターの変更前の値。</param>
      <param name="newContentTemplateSelector">コンテンツ テンプレート セレクターの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnCreateAutomationPeer">
      <summary>WPF オートメーション インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> イベントに応答します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> のデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>この要素にキーボード フォーカスがあることを通知します。</summary>
      <param name="e">キーボード入力イベントの引数。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> プロパティが <see langword="true" /> に変更されたことを示すために呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> プロパティが <see langword="false" /> に変更されたことを示すために呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> イベントのイベント データ。</param>
    </member>
    <member name="P:System.Windows.Controls.TabItem.TabStripPlacement">
      <summary>タブ ストリップの配置を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Dock" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Windows.Controls.Dock.Top" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.TabStripPlacementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TabItem.TabStripPlacement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.TextBlock">
      <summary>少量のフロー コンテンツを表示するライトウェイト コントロールを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.#ctor(System.Windows.Documents.Inline)">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> クラスの新しいインスタンスを初期化し、指定した <see cref="T:System.Windows.Documents.Inline" /> 要素を初期の表示コンテンツとして追加します。</summary>
      <param name="inline">初期コンテンツとして追加するために、<see cref="T:System.Windows.Documents.Inline" /> 抽象クラスから派生するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inline" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ArrangeOverride(System.Windows.Size)">
      <summary>子要素を配置し、<see cref="T:System.Windows.Controls.TextBlock" /> のサイズを決定します。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Size" /> が自身と子要素を配置するために使用する、親ホスト要素内の <see cref="T:System.Windows.Controls.TextBlock" />。 この要求サイズには、サイズ制約が影響する可能性があります。</param>
      <returns>要素の配置に使用する実際の <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Background">
      <summary>コンテンツ エリアの背景の塗りつぶしに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>コンテンツ エリアの背景の塗りつぶしに使用するブラシ。背景ブラシを使用しない場合は <see langword="null" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BaselineOffset">
      <summary>テキストの各行がベースラインからオフセットされる量を取得または設定します。</summary>
      <returns>テキストの各行がベースラインからオフセットされる量 (デバイスに依存しないピクセル単位)。 <see cref="F:System.Double.NaN" /> は最適なベースラインのオフセットが現在のフォント特性から自動的に計算されることを示します。 既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.BaselineOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BreakAfter">
      <summary>現在の要素の後で内容を改行する方法を示す <see cref="T:System.Windows.LineBreakCondition" /> を取得します。</summary>
      <returns>現在の要素の後で内容を改行するための条件。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BreakBefore">
      <summary>現在の要素の前で内容を改行する方法を示す <see cref="T:System.Windows.LineBreakCondition" /> を取得します。</summary>
      <returns>現在の要素の後で内容を改行するための条件。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.ContentEnd">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> のコンテンツの末尾に対する <see cref="T:System.Windows.Controls.TextBlock" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextPointer" /> のコンテンツの末尾に対する <see cref="T:System.Windows.Controls.TextBlock" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.ContentStart">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> のコンテンツの先頭に対する <see cref="T:System.Windows.Controls.TextBlock" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextPointer" /> のコンテンツの先頭に対する <see cref="T:System.Windows.Controls.TextBlock" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontFamily">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> に対して、優先される最上位レベルのフォント ファミリを取得または設定します。</summary>
      <returns>優先フォント ファミリ (1 つ以上の代替フォント ファミリを持つ第一に優先されるフォント ファミリ) を指定する <see cref="T:System.Windows.Media.FontFamily" /> オブジェクト。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 値によって決まるフォントです。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontSize">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> に対して、最上位レベルのフォント サイズを取得または設定します。</summary>
      <returns>使用する目的のフォント サイズ (デバイス非依存のピクセル単位)。 既定値は <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 値で決定されます。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStretch">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> の最上位レベルのフォント伸縮特性を取得または設定します。</summary>
      <returns>使用するフォント伸縮特性を指定する <see cref="T:System.Windows.FontStretch" /> クラスのメンバー。 既定値は、<see cref="P:System.Windows.FontStretches.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStyle">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> に対して、最上位レベルのフォント スタイルを取得または設定します。</summary>
      <returns>適切なフォント スタイルを指定する <see cref="T:System.Windows.FontStyles" /> クラスのメンバー。 既定値は <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 値で決定されます。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontWeight">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> に対して、最上位レベルのフォントの太さを取得または設定します。</summary>
      <returns>適切なフォントの太さを指定する <see cref="T:System.Windows.FontWeights" /> クラスのメンバー。 既定値は <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 値で決定されます。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Foreground">
      <summary>
        <see cref="T:System.Windows.Media.Brush" /> のテキスト コンテンツに適用する <see cref="T:System.Windows.Controls.TextBlock" /> を取得または設定します。</summary>
      <returns>テキスト コンテンツに適用するブラシ。 既定値は、<see cref="P:System.Windows.Media.Brushes.Black" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetBaselineOffset(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 添付プロパティの値を取得する対象の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontFamily(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="F:System.Windows.Controls.TextBlock.FontFamilyProperty" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 添付プロパティ値の取得元の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontSize(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 添付プロパティ値の取得元の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontStretch(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 添付プロパティ値の取得元の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontStyle(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 添付プロパティ値の取得元の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontWeight(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 添付プロパティ値の取得元の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetForeground(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 添付プロパティ値の取得元の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetLineHeight(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 添付プロパティ値の取得元の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetLineStackingStrategy(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 添付プロパティ値の取得元の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetPositionFromPoint(System.Windows.Point,System.Boolean)">
      <summary>指定した <see cref="T:System.Windows.Documents.TextPointer" /> に最も近い位置に対する <see cref="T:System.Windows.Point" /> を返します。</summary>
      <param name="point">
        <see cref="T:System.Windows.Point" /> を返す対象の <see cref="T:System.Windows.Controls.TextBlock" /> の座標空間での <see cref="T:System.Windows.Documents.TextPointer" />。</param>
      <param name="snapToText">
        <paramref name="point" /> が文字境界ボックス内にあるかどうかに関係なく、<paramref name="point" /> に最も近い挿入位置に対する <see cref="T:System.Windows.Documents.TextPointer" /> を返す場合は <see langword="true" />。<paramref name="point" /> が文字境界ボックス内になければ <see langword="false" /> を返す場合には <see langword="null" />。</param>
      <returns>指定したポイントに対する <see cref="T:System.Windows.Documents.TextPointer" />。<paramref name="snapToText" /> が <see langword="null" /> であり、指定したポイントが <see cref="T:System.Windows.Controls.TextBlock" /> コンテンツ エリアの文字境界ボックス内にない場合は、<see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">コントロールの現在の有効なレイアウト情報を利用できません。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)">
      <summary>指定した <see cref="T:System.Windows.ContentElement" /> に外接する四角形の読み取り専用のコレクションを返します。</summary>
      <param name="child">外接する四角形のコレクションを生成して返す対象の <see cref="T:System.Windows.ContentElement" />。</param>
      <returns>指定した <see cref="T:System.Windows.ContentElement" /> に外接する四角形の読み取り専用のコレクション。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetTextAlignment(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 添付プロパティ値の取得元の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetVisualChild(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Windows.Media.Visual" /> 子を返します。</summary>
      <param name="index">返す <see cref="T:System.Windows.Media.Visual" /> 子を指定する 0 から始まるインデックス。  この有効値の範囲は 0 ～ (<see cref="P:System.Windows.Controls.TextBlock.VisualChildrenCount" /> - 1) です。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Windows.Media.Visual" /> 子。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 ～ (<see cref="P:System.Windows.Controls.TextBlock.VisualChildrenCount" /> - 1) の範囲内の値でありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>指定した <see cref="T:System.Windows.Media.PointHitTestResult" /> の <see cref="T:System.Windows.Media.PointHitTestParameters" /> を返します。</summary>
      <param name="hitTestParameters">ヒット テストの対象となるパラメーターを指定する <see cref="T:System.Windows.Media.PointHitTestParameters" /> オブジェクト。</param>
      <returns>指定したヒット テスト パラメーターの <see cref="T:System.Windows.Media.PointHitTestResult" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hitTestParameters" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.HostedElementsCore">
      <summary>この <see cref="T:System.Windows.Controls.TextBlock" /> によってホストされる要素を反復処理するために使用できる列挙子を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.TextBlock" /> によってホストされる要素を反復処理できる列挙子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Inlines">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> の内容を構成する最上位レベルの <see cref="T:System.Windows.Documents.Inline" /> 要素を含む <see cref="T:System.Windows.Documents.InlineCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TextBlock" /> の内容を構成する <see cref="T:System.Windows.Documents.Inline" /> 要素を含む <see cref="T:System.Windows.Documents.InlineCollection" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)">
      <summary>
        <see cref="T:System.Windows.IInputElement" /> 内の指定した <see cref="T:System.Windows.Point" /> にある <see cref="T:System.Windows.Controls.TextBlock" /> を返します。</summary>
      <param name="point">対応する <see cref="T:System.Windows.Point" /> を返す対象の <see cref="T:System.Windows.Controls.TextBlock" /> の座標空間での <see cref="T:System.Windows.IInputElement" />。</param>
      <returns>指定したポイントで見つかった <see cref="T:System.Windows.IInputElement" />。該当する <see cref="T:System.Windows.IInputElement" /> が見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled">
      <summary>単語の自動ハイフネーションが有効かどうかを示す値を取得または設定します。</summary>
      <returns>自動改行と単語の自動ハイフネーションが有効になっていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineHeight">
      <summary>コンテンツの各行の高さを取得または設定します。</summary>
      <returns>行の高さ (単位はデバイスに依存しないピクセル数)。範囲は 0.0034 ～ 160000 です。 <see cref="F:System.Double.NaN" /> の値 (属性値 "<c>Auto</c>" に相当) は、現在のフォント特性を基に行の高さが自動的に決定されることを示します。 既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> が負の値に設定されています。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineStackingStrategy">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> 内のテキストの行ごとに行ボックスを決定するメカニズムを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TextBlock" /> 内のテキストの行ごとに行ボックスを決定するメカニズム。 既定値は、<see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineStackingStrategyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> の論理的な子を反復処理できる列挙子を取得します。</summary>
      <returns>論理的な子の列挙子。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> を再測定するために呼び出されます。</summary>
      <param name="constraint">
        <see cref="T:System.Windows.Size" /> のサイズに関する制約を指定する <see cref="T:System.Windows.Controls.TextBlock" /> 構造体。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> の新しいサイズを示す <see cref="T:System.Windows.Controls.TextBlock" /> 構造体。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.UIElement" /> から派生している子要素の <see cref="P:System.Windows.UIElement.DesiredSize" /> が変更されると呼び出されます。</summary>
      <param name="child">
        <see cref="T:System.Windows.UIElement" /> が変更された <see cref="P:System.Windows.UIElement.DesiredSize" /> 子要素。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.TextBlock" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.TextBlock" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>1 つ以上のホストされた依存関係プロパティの値が変更されたときに呼び出されます。</summary>
      <param name="e">関連付けられているイベントの引数。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnRender(System.Windows.Media.DrawingContext)">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> のコンテンツをレンダリングします。</summary>
      <param name="ctx">コントロールをレンダリングする <see cref="T:System.Windows.Media.DrawingContext" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ctx" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Padding">
      <summary>コンテンツ領域の境界と <see cref="T:System.Windows.Controls.TextBlock" /> によって表示されるコンテンツとの間に埋め込むスペースの幅を示す値を取得または設定します。</summary>
      <returns>適用する埋め込みの量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。 既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.PaddingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.Padding" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetBaselineOffset(System.Windows.DependencyObject,System.Double)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> プロパティの値を設定する対象の依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> プロパティの値を設定する対象の依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> プロパティの値を設定する対象の依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> プロパティの値を設定する対象の依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> プロパティの値を設定する対象の依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> プロパティの値を設定する対象の依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> プロパティの値を設定する対象の依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetLineHeight(System.Windows.DependencyObject,System.Double)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> プロパティの値を設定する対象の依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> が負の値に設定されています。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> プロパティの値を設定する対象の依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> プロパティの値を設定する対象の依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> オブジェクトのシリアル化中に <see cref="T:System.Windows.Controls.TextBlock" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.Inlines" /> オブジェクトのシリアル化中に <see cref="T:System.Windows.Controls.TextBlock" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <param name="manager">このオブジェクトのシリアル化サービス マネージャー オブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Inlines" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ShouldSerializeText">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.Text" /> オブジェクトのシリアル化中に <see cref="T:System.Windows.Controls.TextBlock" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Text" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#IServiceProvider#GetService(System.Type)">
      <summary>このメソッドは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="serviceType">取得対象となるサービスの型を指定するオブジェクト。</param>
      <returns>
        <paramref name="serviceType" /> 型のサービス オブジェクト。<paramref name="serviceType" /> 型のサービス オブジェクトがない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles(System.Windows.ContentElement)">
      <summary>このメソッドは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。  代わりに、タイプ セーフ <see cref="M:System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)" /> メソッドを使用します。</summary>
      <param name="child">外接する四角形のコレクションを生成して返す対象の <see cref="T:System.Windows.ContentElement" />。</param>
      <returns>指定した <see cref="T:System.Windows.ContentElement" /> に外接する四角形の読み取り専用のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。  代わりに、タイプ セーフな <see cref="P:System.Windows.Controls.TextBlock.HostedElementsCore" /> プロパティを使用してください。</summary>
      <returns>コンテンツ ホストによってホストされている要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest(System.Windows.Point)">
      <summary>このメソッドは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。  代わりに、タイプ セーフ <see cref="M:System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)" /> メソッドを使用します。</summary>
      <param name="point">コンテンツ ホストに対するマウス座標。</param>
      <returns>ヒットした要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged(System.Windows.UIElement)">
      <summary>このメソッドは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。  代わりに、タイプ セーフ <see cref="M:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)" /> メソッドを使用します。</summary>
      <param name="child">
        <see cref="T:System.Windows.UIElement" /> が変更された <see cref="P:System.Windows.UIElement.DesiredSize" /> 子要素。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Text">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> のテキスト コンテンツを取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.TextBlock" /> のテキストの内容。 テキスト以外のコンテンツはすべて取り除かれ、<see cref="T:System.Windows.Controls.TextBlock" /> コンテンツはプレーン テキスト表現になります。 既定値は、<see cref="F:System.String.Empty" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextAlignment">
      <summary>テキスト コンテンツの水平方向の配置を示す値を取得または設定します。</summary>
      <returns>目的の配置を指定する、いずれかの <see cref="T:System.Windows.TextAlignment" /> 値。 既定値は、<see cref="F:System.Windows.TextAlignment.Left" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextDecorations">
      <summary>
        <see cref="T:System.Windows.TextDecorationCollection" /> のテキストに適用する効果を格納する <see cref="T:System.Windows.Controls.TextBlock" /> を取得または設定します。</summary>
      <returns>この要素に適用する文字装飾を格納する <see cref="T:System.Windows.TextDecorationCollection" /> コレクション。 既定値は <see langword="null" /> です (文字装飾は適用されません)。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextDecorationsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextEffects">
      <summary>この要素内のテキスト コンテンツに適用する効果を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.TextEffectCollection" /> のテキストに適用する効果を定義する 1 つ以上の <see cref="T:System.Windows.Media.TextEffect" /> オブジェクトを格納する <see cref="T:System.Windows.Controls.TextBlock" />。 既定値は <see langword="null" /> です (効果は適用されません)。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextEffectsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.TextEffects" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.Text" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextTrimming">
      <summary>コンテンツ領域いっぱいになったときに使用するテキストのトリミング動作を取得または設定します。</summary>
      <returns>使用するテキストのトリミング動作を指定する <see cref="T:System.Windows.TextTrimming" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.TextTrimming.None" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextTrimmingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextWrapping">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> のテキスト折り返し方法を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.TextWrapping" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.TextWrapping.NoWrap" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextWrappingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Typography">
      <summary>この要素のコンテンツで現在有効な文字体裁のバリエーションを取得します。</summary>
      <returns>現在有効な文字体裁のバリエーションを指定する <see cref="T:System.Windows.Documents.Typography" /> オブジェクト。 既定の文字体裁値の一覧については、<see cref="T:System.Windows.Documents.Typography" /> のトピックを参照してください。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.VisualChildrenCount">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> によってホストされる <see cref="T:System.Windows.Controls.TextBlock" /> 子の数を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TextBlock" /> によってホストされるビジュアル子の数。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextBox">
      <summary>書式なしテキストの表示または編集に使用できるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.CaretIndex">
      <summary>キャレットの挿入位置インデックスを取得または設定します。</summary>
      <returns>キャレットの 0 から始まる挿入位置インデックス。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.CharacterCasing">
      <summary>テキスト ボックスに手動で文字を入力した場合に大文字で入力されるか小文字で入力されるかを取得または設定します。</summary>
      <returns>手動で入力した文字が大文字で入力されるか小文字で入力されるかを指定する <see cref="T:System.Windows.Controls.CharacterCasing" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Controls.CharacterCasing.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.CharacterCasingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.Clear">
      <summary>テキスト ボックスからすべての内容を削除します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)">
      <summary>指定された行内の最初の文字に対応する、0 から始まる文字インデックスを返します。</summary>
      <param name="lineIndex">最初の文字インデックスを取得する行の 0 から始まるインデックス。</param>
      <returns>指定された行内の最初の文字に対応する、0 から始まるインデックス。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)">
      <summary>指定されたポイントに最も近い場所にある文字の、0 から始まるインデックスを返します。</summary>
      <param name="point">インデックスを返す対象である、<see cref="T:System.Windows.Controls.TextBox" /> 座標空間内のポイント。</param>
      <param name="snapToText">指定されたポイントに文字がなかったときに最も近いインデックスを返す場合は <see langword="true" />。指定されたポイントに文字がなかったときに -1 を返す場合は <see langword="false" />。</param>
      <returns>指定されたポイントに最も近い場所にある文字のインデックス。有効なインデックスが見つからない場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex">
      <summary>現在テキスト ボックスに表示されている最初の行に対応する行インデックスを返します。</summary>
      <returns>テキスト ボックスに表示されている最初の行に対応する、0 から始まるインデックス。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex">
      <summary>現在テキスト ボックスに表示されている最後の行に対応する行インデックスを返します。</summary>
      <returns>テキスト ボックスに表示されている最後の行に対応する、0 から始まるインデックス。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)">
      <summary>指定された文字インデックスが含まれている行に対応する、0 から始まる行インデックスを返します。</summary>
      <param name="charIndex">関連付けられている行インデックスを取得するための 0 から始まる文字インデックス。</param>
      <returns>指定された文字インデックスが含まれている行に対応する、0 から始まるインデックス。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)">
      <summary>指定された行の文字数を返します。</summary>
      <param name="lineIndex">文字数を取得するための 0 から始まる行インデックス。</param>
      <returns>指定された行の文字数。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)">
      <summary>指定した行に現在表示されているテキストを返します。</summary>
      <param name="lineIndex">現在表示されているテキストを取得する対象の 0 から始まる行インデックス。</param>
      <returns>指定した行に現在表示されているテキストのコピーを格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)">
      <summary>テキスト ボックスのコンテンツ内にある次のスペル ミスの先頭の文字インデックスを返します。</summary>
      <param name="charIndex">次のスペル ミスの検索を開始する位置を示す、0 から始まる文字インデックス。</param>
      <param name="direction">指定された <paramref name="charIndex" /> から次のスペル ミスを検索するときの方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
      <returns>テキスト ボックスのコンテンツ内にある次のスペル ミスの先頭に対応する文字インデックス。次のスペル ミスが存在しない場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)">
      <summary>指定されたインデックス位置にある文字のリーディング エッジの四角形を返します。</summary>
      <param name="charIndex">四角形を取得する文字の 0 から始まる文字インデックス。</param>
      <returns>指定された文字インデックス位置にある文字のリーディング エッジの四角形。外接する四角形を決定できない場合は <see cref="P:System.Windows.Rect.Empty" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)">
      <summary>指定されたインデックス位置にある文字のリーディング エッジまたはトレーリング エッジの四角形を返します。</summary>
      <param name="charIndex">四角形を取得する文字の 0 から始まる文字インデックス。</param>
      <param name="trailingEdge">文字のトレーリング エッジを取得する場合は <see langword="true" />。文字のリーディング エッジを取得する場合は <see langword="false" />。</param>
      <returns>指定された文字インデックス位置にある文字のエッジの四角形。外接する四角形を決定できない場合は <see cref="P:System.Windows.Rect.Empty" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" /> が負か、またはコンテンツの長さより大きい値です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)">
      <summary>指定された文字インデックスの位置にあるスペル ミスに関連付けられている <see cref="T:System.Windows.Controls.SpellingError" /> オブジェクトを返します。</summary>
      <param name="charIndex">スペル ミスがないかをチェックするコンテンツ内の位置の、0 から始まる文字インデックス。</param>
      <returns>
        <paramref name="charIndex" /> によって示される文字で見つかったスペル ミスの詳細を格納する <see cref="T:System.Windows.Controls.SpellingError" /> オブジェクト。指定した文字にスペル ミスが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)">
      <summary>指定された文字を含むスペル ミスがあった場合、その長さを返します。</summary>
      <param name="charIndex">スペル ミスがないかをチェックするコンテンツ内の位置の、0 から始まる文字インデックス。</param>
      <returns>charIndex で指定された文字を含むスペル ミスの長さ。指定した文字を含むスペル ミスがない場合は 0。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)">
      <summary>指定された文字を含むスペル ミスがあった場合、先頭の文字インデックスを返します。</summary>
      <param name="charIndex">スペル ミスがないかをチェックするコンテンツ内の位置の、0 から始まる文字インデックス。</param>
      <returns>
        <paramref name="charIndex" /> で指定された文字を含むスペル ミスがあった場合は、先頭の文字インデックス。指定された文字を含むスペル ミスがない場合は -1。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.LineCount">
      <summary>テキスト ボックス内の行の合計数を取得します。</summary>
      <returns>テキストボックス内の行の合計数。レイアウト情報を使用できない場合は-1。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> の論理上の子要素に対する列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TextBox" /> の論理上の子要素に対する列挙子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MaxLength">
      <summary>テキスト ボックスに手動で入力できる最大文字数を取得または設定します。</summary>
      <returns>テキスト ボックスに手動で入力できる最大文字数。 既定値 0 は、制限がないことを示します。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MaxLengthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MaxLines">
      <summary>表示行の最大数を取得または設定します。</summary>
      <returns>表示行の最大数。 既定値は、<see cref="F:System.Int32.MaxValue" /> です。</returns>
      <exception cref="T:System.Exception">
        <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> は <see cref="P:System.Windows.Controls.TextBox.MinLines" /> より小さい値です。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MaxLinesProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)">
      <summary>テキスト ボックスのサイズをコンテンツに合わせます。</summary>
      <param name="constraint">テキスト ボックスのサイズに関する制約を指定する <see cref="T:System.Windows.Size" /> 構造体。</param>
      <returns>テキスト ボックスの新しいサイズを示す <see cref="T:System.Windows.Size" /> 構造体。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MinLines">
      <summary>表示行の最小数を取得または設定します。</summary>
      <returns>表示行の最小数。 既定値は 1 です。</returns>
      <exception cref="T:System.Exception">
        <see cref="P:System.Windows.Controls.TextBox.MinLines" /> が <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> より大きくなっています。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MinLinesProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.MinLines" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer">
      <summary>テキスト ボックスの <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクトを作成し、返します。</summary>
      <returns>テキスト ボックスの <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>要素に存在する 1 つ以上の依存関係プロパティの有効な値が変更された場合に呼び出されます。</summary>
      <param name="e">関連付けられたイベントの引数。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)">
      <summary>指定された行インデックス位置の行が表示されるまでスクロールします。</summary>
      <param name="lineIndex">表示されるまでスクロールする行の 0 から始まる行インデックス。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)">
      <summary>テキスト ボックスでテキストの範囲を選択します。</summary>
      <param name="start">選択されている先頭の文字の 0 から始まる文字インデックス。</param>
      <param name="length">選択範囲の長さ (文字数)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> または <paramref name="length" /> が負の値です。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectedText">
      <summary>テキスト ボックス内の現在の選択項目のコンテンツを取得または設定します。</summary>
      <returns>テキスト ボックスで現在択されているテキスト。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionLength">
      <summary>テキスト ボックス内の現在の選択範囲の文字数を示す値を取得または設定します。</summary>
      <returns>テキスト ボックス内の現在の選択範囲の文字数。 既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> に負の数が設定されています。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionStart">
      <summary>現在の選択範囲の先頭の文字インデックスを取得または設定します。</summary>
      <returns>現在の選択範囲の先頭の文字インデックス。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> に負の数が設定されています。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.Text" /> オブジェクトのシリアル化中に <see cref="T:System.Windows.Controls.TextBox" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <param name="manager">このオブジェクトのシリアル化サービス マネージャー オブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.Text" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>常に例外をスローします。</summary>
      <param name="value">子として追加するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">上記のいずれのケースにも該当しない場合。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Text">
      <summary>テキスト ボックスのテキスト内容を取得または設定します。</summary>
      <returns>テキストボックスのテキスト内容を格納している文字列。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextAlignment">
      <summary>テキスト ボックスのコンテンツの水平方向の配置を取得または設定します。</summary>
      <returns>テキスト ボックスのコンテンツの水平方向の配置を指定する <see cref="T:System.Windows.TextAlignment" /> 値の 1 つ。 既定値は、<see cref="F:System.Windows.TextAlignment.Left" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextDecorations">
      <summary>テキスト ボックスに適用する文字装飾を取得します。</summary>
      <returns>テキスト ボックスに適用する文字装飾が格納される <see cref="T:System.Windows.TextDecorationCollection" /> コレクション。 既定値は <see langword="null" /> です (文字装飾は適用されません)。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextDecorationsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.Text" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextWrapping">
      <summary>テキスト ボックスでのテキストの折り返し方法を取得または設定します。</summary>
      <returns>テキスト ボックスでのテキストの折り返し方法を示す <see cref="T:System.Windows.TextWrapping" /> 値の 1 つ。 既定値は、<see cref="F:System.Windows.TextWrapping.NoWrap" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextWrappingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Typography">
      <summary>テキスト ボックスのテキスト コンテンツで現在有効な文字体裁のバリエーションを取得します。</summary>
      <returns>現在有効な文字体裁のバリエーションを指定する <see cref="T:System.Windows.Documents.Typography" /> オブジェクト。 既定の文字体裁値の一覧については、<see cref="T:System.Windows.Documents.Typography" /> のトピックを参照してください。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChange">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> イベントで発生する変更に関する情報を格納します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextChange.AddedLength">
      <summary>コントロールに追加されたシンボルの数を取得または設定します。</summary>
      <returns>コントロールに追加されたシンボルの数。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChange.Offset">
      <summary>変更が発生した位置を取得または設定します。</summary>
      <returns>変更が発生した位置。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChange.RemovedLength">
      <summary>コントロールから削除されたシンボルの数を取得または設定します。</summary>
      <returns>コントロールから削除されたシンボルの数。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction)">
      <summary>指定したイベント ID と元に戻す操作を使用して、<see cref="T:System.Windows.Controls.TextChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="id">識別子 (ID) イベント。</param>
      <param name="action">テキスト変更によって発生する <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" />。</param>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction,System.Collections.Generic.ICollection{System.Windows.Controls.TextChange})">
      <summary>指定したイベント ID、元に戻す操作、およびテキストの変更を使用して、<see cref="T:System.Windows.Controls.TextChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="id">識別子 (ID) イベント。</param>
      <param name="action">テキスト変更によって発生する <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" />。</param>
      <param name="changes">このイベント中に発生した変更。 詳細については、「<see cref="P:System.Windows.Controls.TextChangedEventArgs.Changes" />」を参照してください。</param>
    </member>
    <member name="P:System.Windows.Controls.TextChangedEventArgs.Changes">
      <summary>発生した変更に関する情報を格納するオブジェクトのコレクションを取得します。</summary>
      <returns>発生した変更に関する情報を格納するオブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>適切な型のキャストを実行して、<see cref="T:System.Windows.Controls.TextChangedEventHandler" /> イベントのタイプ セーフな <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> デリゲートを呼び出します。</summary>
      <param name="genericHandler">呼び出すハンドラー。</param>
      <param name="genericTarget">イベントの経路上にある現在のオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Controls.TextChangedEventArgs.UndoAction">
      <summary>このテキスト変更によって発生する undo スタックと、undo スタックが受ける影響を取得します。</summary>
      <returns>このテキスト変更に適した <see cref="T:System.Windows.Controls.UndoAction" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.TextSearch">
      <summary>ユーザーが文字列のプレフィックスを入力して、セット内の項目にすばやくアクセスできるようにします。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.GetText(System.Windows.DependencyObject)">
      <summary>指定した項目を識別する文字列を返します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>指定した項目を識別する文字列。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.GetTextPath(System.Windows.DependencyObject)">
      <summary>指定した要素のコレクション内の項目を識別するプロパティの名前を返します。</summary>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <returns>ユーザーに項目を示すプロパティの名前。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.SetText(System.Windows.DependencyObject,System.String)">
      <summary>
        <see cref="P:System.Windows.Controls.TextSearch.Text" /> 添付プロパティの値を指定された要素に書き込みます。</summary>
      <param name="element">プロパティ値の書き込み対象の要素。</param>
      <param name="text">項目を識別する文字列。</param>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.SetTextPath(System.Windows.DependencyObject,System.String)">
      <summary>
        <see cref="P:System.Windows.Controls.TextSearch.TextPath" /> 添付プロパティを指定した要素に書き込みます。</summary>
      <param name="element">プロパティ値の書き込み先になる要素。</param>
      <param name="path">項目を識別するプロパティの名前。</param>
    </member>
    <member name="P:System.Windows.Controls.TextSearch.Text">
      <summary>コントロールのコレクション内の項目を識別する文字列を取得または設定します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextSearch.TextPath">
      <summary>コントロールのコレクション内の各項目を識別する項目のプロパティの名前を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.TextSearch.TextPathProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextSearch.TextPath" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.TextSearch.TextProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextSearch.Text" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolBar">
      <summary>コマンドまたはコントロールのグループのコンテナーを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.Band">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBarTray" /> 内でツール バーを配置する位置を示す値を取得または設定します。</summary>
      <returns>ツール バーが配置される <see cref="T:System.Windows.Controls.ToolBarTray" /> のバンド。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.BandIndex">
      <summary>ツール バーのバンドでの位置を示すバンド インデックス番号を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBarTray" /> のバンドでのツール バーの位置。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.BandIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolBar.BandIndex" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.BandProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolBar.Band" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ButtonStyleKey">
      <summary>ツール バーのボタンに適用される <see cref="T:System.Windows.Style" /> を取得します。</summary>
      <returns>ツール バーのボタンの既定のスタイルを表すリソース キー。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.CheckBoxStyleKey">
      <summary>
        <see cref="T:System.Windows.Style" /> のチェック ボックスに適用される <see cref="T:System.Windows.Controls.ToolBar" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBar" /> のチェック ボックスの既定のスタイルを表すリソース キー。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ComboBoxStyleKey">
      <summary>
        <see cref="T:System.Windows.Style" /> のコンボ ボックスに適用される <see cref="T:System.Windows.Controls.ToolBar" /> を取得します。</summary>
      <returns>ツール バーのコンボ ボックスの既定のスタイルを表すリソース キー。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.GetIsOverflowItem(System.Windows.DependencyObject)">
      <summary>指定された要素から <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> プロパティの値を読み取ります。</summary>
      <param name="element">読み取るプロパティが属する要素。</param>
      <returns>プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.GetOverflowMode(System.Windows.DependencyObject)">
      <summary>指定された要素から <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> プロパティの値を読み取ります。</summary>
      <param name="element">読み取るプロパティが属する要素。</param>
      <returns>プロパティの値。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.HasOverflowItems">
      <summary>ツール バーに表示されない項目があるかどうかを示す値を取得します。</summary>
      <returns>ツール バーに表示されない項目がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.HasOverflowItemsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolBar.HasOverflowItems" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.IsOverflowItem">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> がオーバーフロー項目であるかどうかを示す値を取得します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.IsOverflowItemProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.IsOverflowOpen">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> オーバーフロー領域が現在表示されているかどうかを示す値を取得または設定します。</summary>
      <returns>オーバーフロー領域が表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.IsOverflowOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolBar.IsOverflowOpen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> を再測定します。</summary>
      <param name="constraint">測定値の制約。 <see cref="T:System.Windows.Controls.ToolBar" /> は制約を超えるサイズを返すことができません。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBar" /> のサイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.MenuStyleKey">
      <summary>
        <see cref="T:System.Windows.Style" /> のメニューに適用される <see cref="T:System.Windows.Controls.ToolBar" /> を取得します。</summary>
      <returns>ツール バーのメニューの既定のスタイルを表すリソース キー。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnCreateAutomationPeer">
      <summary>WPF インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">
        <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> イベントの引数。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> の項目上でキーが押されたときに発生する <see cref="T:System.Windows.Controls.ToolBar" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントの引数。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostMouseCapture" /> がマウスのキャプチャを失ったときに発生する <see cref="T:System.Windows.Controls.ToolBar" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.LostMouseCapture" /> イベントの引数。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.Orientation">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> の向きを取得します。</summary>
      <returns>ツール バーの向き。 既定値は、<see cref="F:System.Windows.Controls.Orientation.Horizontal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.OrientationProperty">
      <summary>
        <see cref="T:System.Windows.Controls.Orientation" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.OverflowMode">
      <summary>項目をメイン パネルではなくオーバーフロー パネルに配置するタイミングを示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.OverflowModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定した要素に指定した項目が表示されるように準備します。</summary>
      <param name="element">項目を表示する要素。</param>
      <param name="item">表示する項目。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.RadioButtonStyleKey">
      <summary>ツール バーのオプション ボタンに適用される <see cref="T:System.Windows.Style" /> を取得します。</summary>
      <returns>ツール バーのオプション ボタンの既定のスタイルを表すリソース キー。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.SeparatorStyleKey">
      <summary>
        <see cref="T:System.Windows.Style" /> の区分線に適用される <see cref="T:System.Windows.Controls.ToolBar" /> を取得します。</summary>
      <returns>ツール バーの区分線の既定のスタイルを表すリソース キー。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.SetOverflowMode(System.Windows.DependencyObject,System.Windows.Controls.OverflowMode)">
      <summary>指定された要素に <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> プロパティの値を書き込みます。</summary>
      <param name="element">プロパティの書き込み先の要素。</param>
      <param name="mode">設定するプロパティ値。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.TextBoxStyleKey">
      <summary>
        <see cref="T:System.Windows.Style" /> のテキスト ボックスに適用される <see cref="T:System.Windows.Controls.ToolBar" /> を取得します。</summary>
      <returns>ツール バーのテキスト ボックスの既定のスタイルを表すリソース キー。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ToggleButtonStyleKey">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> 上の <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> コントロールに適用される <see cref="T:System.Windows.Style" /> を取得します。</summary>
      <returns>ツールバーのトグル ボタンの既定のスタイルを表すリソース キー。</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolBarTray">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> のレイアウトを処理するコンテナーを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBarTray" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> の子を配置し、そのサイズを設定するために呼び出されます。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Controls.ToolBarTray" /> がその子を配置する際に想定するサイズ。</param>
      <returns>コントロールのサイズです。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.Background">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBarTray" /> の背景色に使用するブラシを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBarTray" /> の背景色に使用するブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolBarTray.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.GetIsLocked(System.Windows.DependencyObject)">
      <summary>指定された要素から <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> プロパティの値を読み取ります。</summary>
      <param name="element">読み取るプロパティが属する要素。</param>
      <returns>ツール バー トレイ内にツール バーを移動できない場合は<see langword="true" /> 、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.GetVisualChild(System.Int32)">
      <summary>表示されている子のインデックス番号を取得します。</summary>
      <param name="index">ビジュアル子のインデックス。</param>
      <returns>表示されている子のインデックス番号。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.IsLocked">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> が <see cref="T:System.Windows.Controls.ToolBarTray" /> 内で移動できるかどうかを示す値を取得または設定します。</summary>
      <returns>ツール バー トレイ内にツール バーを移動できない場合は<see langword="true" /> 、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.IsLockedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBarTray" /> の論理上の子要素に対する列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBarTray" /> 要素の子に対する列挙子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBarTray" /> を再測定するために呼び出されます。</summary>
      <param name="constraint">測定値の制約。制約を超えるサイズを <see cref="T:System.Windows.Controls.ToolBarTray" /> が返すことはできません。</param>
      <returns>コントロールのサイズです。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.OnRender(System.Windows.Media.DrawingContext)">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBarTray" /> のレンダリングに使用する描画コンテキスト (DC) を取得するために <see cref="T:System.Windows.Controls.ToolBarTray" /> が表示されたときに呼び出されます。</summary>
      <param name="dc">
        <see cref="T:System.Windows.Controls.ToolBarTray" /> のレンダリングに使用する描画コンテキスト。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.Orientation">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBarTray" /> の向きを指定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Windows.Controls.Orientation.Horizontal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolBarTray.Orientation" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.SetIsLocked(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された要素に <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> プロパティの値を書き込みます。</summary>
      <param name="element">プロパティの書き込み先の要素。</param>
      <param name="value">設定するプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.ToolBars">
      <summary>
        <see cref="T:System.Windows.Controls.ToolBar" /> 内の <see cref="T:System.Windows.Controls.ToolBarTray" /> 要素のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBar" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.VisualChildrenCount">
      <summary>現在表示されている子の数を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBar" /> 内の <see cref="T:System.Windows.Controls.ToolBarTray" /> 表示オブジェクトの数。</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolTip">
      <summary>インターフェイスの要素に関する情報を表示するポップアップ ウィンドウを作成するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Closed">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> を閉じて非表示にしたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.ClosedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.ToolTip.Closed" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> の配置に使用するデリゲート ハンドラー メソッドを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> の配置情報を提供する <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> デリゲート メソッド。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.CustomPopupPlacementCallbackProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HasDropShadow">
      <summary>コントロールにドロップ シャドウがあるかどうかを示す値を取得または設定します。</summary>
      <returns>コントロールにドロップ シャドウがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HasDropShadowProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.HasDropShadow" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HorizontalOffset">
      <summary>対象の左開始位置からポップアップの配置ポイントまでの横方向の距離を取得または指定します。</summary>
      <returns>対象の左開始位置からポップアップの配置ポイントまでの横方向の距離。 ターゲットの始点とポップアップの配置ポイントの詳細については、「ポップアップ配置の動作」を参照してください。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.IsOpen">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> が表示されているかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> が可視の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.IsOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.IsOpen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnClosed(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.ToolTip.Closed" /> イベントに応答します。</summary>
      <param name="e">イベント情報。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnContentChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティの古い値。</param>
      <param name="newContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> コントロールの <see cref="T:System.Windows.Controls.ToolTip" /> の実装を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" /> コントロールの新しい <see cref="T:System.Windows.Controls.ToolTip" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.ToolTip.Opened" /> イベントに応答します。</summary>
      <param name="e">イベント情報。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> のビジュアル親の変更に応答します。</summary>
      <param name="oldParent">直前のビジュアル親。</param>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Opened">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> を表示したときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.OpenedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.ToolTip.Opened" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.Placement">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> コントロールが開いたときの向きを取得または設定し、<see cref="T:System.Windows.Controls.ToolTip" /> コントロールが画面の境界と重複するときの動作を指定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> コントロールが開いた場合の向きを決定し、このコントロールの画面の境界に対する動作を指定する <see cref="T:System.Windows.Controls.ToolTip" /> 列挙値。 既定値は、<see cref="F:System.Windows.Controls.Primitives.PlacementMode.Mouse" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.Placement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementRectangle">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> コントロールが開くときに配置の基準となる四角形領域を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> コントロールの配置に使用される四角形を定義する <see cref="T:System.Windows.Controls.ToolTip" /> 構造体。 既定値は、<see cref="P:System.Windows.Rect.Empty" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementRectangleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.PlacementRectangle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementTarget">
      <summary>
        <see cref="T:System.Windows.UIElement" /> が開くときに配置の基準となる <see cref="T:System.Windows.Controls.ToolTip" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> コントロールの論理上の親である <see cref="T:System.Windows.Controls.ToolTip" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementTargetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.StaysOpen">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.ToolTip" /> の外側でマウスをクリックするまで、開いている <see cref="T:System.Windows.Controls.ToolTip" /> が開いたままになるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーが <see cref="T:System.Windows.Controls.ToolTip" /> の外側でマウス ボタンをクリックしてツールヒントを閉じるまで、<see cref="T:System.Windows.Controls.ToolTip" /> が開いたままになる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
      <exception cref="T:System.NotSupportedException">ツールヒントを開いていない場合に、<see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> を <see langword="false" /> に設定したときに発生します。</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.StaysOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.VerticalOffset">
      <summary>対象の左開始位置からポップアップの配置ポイントまでの縦方向の距離を取得または指定します。</summary>
      <returns>対象の左開始位置からポップアップの配置ポイントまでの縦方向の距離。 ターゲットの始点とポップアップの配置ポイントの詳細については、「ポップアップ配置の動作」を参照してください。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.VerticalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolTipEventArgs">
      <summary>ツールヒントが開くときまたは閉じるときに発生するイベントのイベント情報を提供します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolTipEventHandler">
      <summary>ツールヒントを開くときと閉じるときに発生するルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.ToolTipService">
      <summary>ツールヒントの表示と動作を制御するためのプロパティおよびイベントを提供するサービスを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.AddToolTipClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> 添付イベントのハンドラーを追加します。</summary>
      <param name="element">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">追加するイベント ハンドラー。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.AddToolTipOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> 添付イベントのハンドラーを追加します。</summary>
      <param name="element">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</param>
      <param name="handler">追加するイベント ハンドラー。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.BetweenShowDelay">
      <summary>2 番目のツールヒントを遅延なしで表示する場合の、2 つのツールヒントの表示間隔の最大時間を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> プロパティの値が 0 未満です。</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.BetweenShowDelayProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetBetweenShowDelay(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetHasDropShadow(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetHorizontalOffset(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetInitialShowDelay(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetIsEnabled(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetIsOpen(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacement(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementRectangle(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementTarget(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetShowDuration(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetShowOnDisabled(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetToolTip(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetVerticalOffset(System.Windows.DependencyObject)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> 添付プロパティの値を取得します。</summary>
      <param name="element">プロパティ値の読み取り元となるオブジェクト。</param>
      <returns>オブジェクトの <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> プロパティの値。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.HasDropShadow">
      <summary>ツールヒントにドロップ シャドウ効果を表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.HasDropShadowProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.HorizontalOffset">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> プロパティおよび <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> プロパティでツールヒントに指定した領域の左端からのオフセットを取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.HorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.InitialShowDelay">
      <summary>ツールヒントが開くまでの時間の長さを取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> プロパティの値がゼロ (0) 未満です。</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.InitialShowDelayProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.IsEnabled">
      <summary>ツールヒントを表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.IsEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.IsOpen">
      <summary>ツールヒントが現在表示されているかどうかを取得します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.IsOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.Placement">
      <summary>ヒントが開くときにその向きを取得または設定し、画面の境界と重なる場合のヒントの動作を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementRectangle">
      <summary>ツールヒントの配置基準となる四角形の領域を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementRectangleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementTarget">
      <summary>ツールヒントを相対的に配置するための基準となるオブジェクトを取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementTargetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.RemoveToolTipClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> 添付イベントのハンドラーを削除します。</summary>
      <param name="element">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">削除するイベント ハンドラー。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.RemoveToolTipOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> 添付イベントのハンドラーを削除します。</summary>
      <param name="element">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">削除するイベント ハンドラー。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetBetweenShowDelay(System.Windows.DependencyObject,System.Int32)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となるオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetHasDropShadow(System.Windows.DependencyObject,System.Boolean)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となるオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となるオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetInitialShowDelay(System.Windows.DependencyObject,System.Int32)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となるオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となるオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となるオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementRectangle(System.Windows.DependencyObject,System.Windows.Rect)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となるオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となるオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetShowDuration(System.Windows.DependencyObject,System.Int32)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となるオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetShowOnDisabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となるオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetToolTip(System.Windows.DependencyObject,System.Object)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となるオブジェクト。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>オブジェクトに対する <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先となるオブジェクト。</param>
      <param name="value">目的の値。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ShowDuration">
      <summary>ツールヒントが表示される時間を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> プロパティの値がゼロ (0) 未満です。</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ShowDurationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ShowOnDisabled">
      <summary>有効でないオブジェクトに対してツールヒントを表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ShowOnDisabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ToolTip">
      <summary>ヒントのコンテンツを取得または設定します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTipService.ToolTipClosing">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> が閉じた場合に発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipClosingEvent">
      <summary>
        <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> サービスを使用してツールヒントを表示するオブジェクトによって公開される <see cref="T:System.Windows.Controls.ToolTipService" /> イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTipService.ToolTipOpening">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> が開くときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipOpeningEvent">
      <summary>
        <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> サービスを使用してツールヒントを表示するオブジェクトによって公開される <see cref="T:System.Windows.Controls.ToolTipService" /> イベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.VerticalOffset">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> プロパティと <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> プロパティによってヒント用に指定された領域の上部からの距離を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.VerticalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.TreeView">
      <summary>展開したり折りたたんだりできるアイテムを保有するツリー構造の階層型データを表示するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.TreeView" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.ExpandSubtree(System.Windows.Controls.TreeViewItem)">
      <summary>指定した <see cref="T:System.Windows.Controls.TreeViewItem" /> コントロールとそのすべての子 <see cref="T:System.Windows.Controls.TreeViewItem" /> 要素を展開します。</summary>
      <param name="container">展開する <see cref="T:System.Windows.Controls.TreeViewItem" />。</param>
      <returns>指定した <see cref="T:System.Windows.Controls.TreeViewItem" /> とそのすべての子要素が展開された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.GetContainerForItemOverride">
      <summary>内容の表示に使用する <see cref="T:System.Windows.Controls.TreeViewItem" /> を作成します。</summary>
      <returns>コンテンツのコンテナーとして使用する新しい <see cref="T:System.Windows.Controls.TreeViewItem" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.HandlesScrolling">
      <summary>
        <see cref="T:System.Windows.Controls.TreeView" /> がスクロールできるかどうかを取得します。</summary>
      <returns>コントロールのスタイルには <see cref="T:System.Windows.Controls.ScrollViewer" /> があるので、常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が自身のコンテナーかどうか (または自身のコンテナーにすることができるかどうか) を確認します。</summary>
      <param name="item">評価するオブジェクト。</param>
      <returns>
        <paramref name="item" /> が <see cref="T:System.Windows.Controls.TreeViewItem" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> コントロールの <see cref="T:System.Windows.Controls.TreeView" /> を定義します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> コントロールに対応する <see cref="T:System.Windows.Controls.TreeView" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.GotFocus" /> ルーティング イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> のキーボード フォーカスが変更されたときの <see cref="T:System.Windows.Controls.TreeView" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> コレクション内で変更があったときに発生する <see cref="P:System.Windows.Controls.ItemsControl.Items" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> の <see cref="T:System.Windows.Controls.TreeView" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
      <summary>
        <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> プロパティの値が変更された場合に <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> イベントを発生させます。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> イベントに対して、以前選択されていた項目および現在選択されている項目を提供します。</param>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedItem">
      <summary>
        <see cref="T:System.Windows.Controls.TreeView" /> 内の選択された項目を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TreeView" /> 内の選択されたオブジェクト。項目が選択されていない場合は、<see langword="null" />。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="E:System.Windows.Controls.TreeView.SelectedItemChanged">
      <summary>
        <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> が変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedItemChangedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedItemProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValue">
      <summary>
        <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> の <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> により指定されるプロパティの値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> の <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> により指定されるプロパティの値。項目が選択されていない場合は <see langword="null" />。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValuePath">
      <summary>
        <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> 内で <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> の <see cref="T:System.Windows.Controls.TreeView" /> を取得するために使用されるパスを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> を取得するために使用されるパスを含む文字列。 既定値は <see langword="String.Empty" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValuePathProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValueProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.TreeViewItem">
      <summary>
        <see cref="T:System.Windows.Controls.TreeView" /> コントロール内の選択可能な項目を実装します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> のコンテンツを配置します。</summary>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Controls.TreeViewItem" /> とその子を配置するために使用される親の末尾の領域。</param>
      <returns>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> が使用する実際のサイズ。</returns>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Collapsed">
      <summary>
        <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> プロパティの値が <see langword="true" /> から <see langword="false" /> に変更された場合に発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.CollapsedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Expanded">
      <summary>
        <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> プロパティの値が <see langword="false" /> から <see langword="true" /> に変更された場合に発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.ExpandedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.ExpandSubtree">
      <summary>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> コントロールとそのすべての子 <see cref="T:System.Windows.Controls.TreeViewItem" /> 要素を展開します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.GetContainerForItemOverride">
      <summary>新しい <see cref="T:System.Windows.Controls.TreeViewItem" /> を作成し、オブジェクトを表示するために使用します。</summary>
      <returns>オブジェクトを表示するために使用する、新しい <see cref="T:System.Windows.Controls.TreeViewItem" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsExpanded">
      <summary>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> 内の入れ子になった項目が展開されているか、折りたたまれているかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> の入れ子になった項目が表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsExpandedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary>オブジェクトが <see cref="T:System.Windows.Controls.TreeViewItem" /> であるかどうかを判別します。</summary>
      <param name="item">評価するオブジェクト。</param>
      <returns>
        <paramref name="item" /> が <see cref="T:System.Windows.Controls.TreeViewItem" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelected">
      <summary>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> コントロールが選択されているかどうかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> が選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelectionActive">
      <summary>
        <see cref="T:System.Windows.Controls.TreeView" /> にキーボード フォーカスが含まれているかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" />含ま<see cref="T:System.Windows.Controls.TreeView" />れているにキーボードフォーカスがある<see langword="false" />場合は。それ以外の場合は。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectionActiveProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TreeViewItem.IsSelectionActive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCollapsed(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> プロパティの値が <see langword="true" /> から <see langword="false" /> に変更されたときに、<see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> イベントを発生させます。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.TreeViewItem" /> を定義します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> の <see cref="T:System.Windows.Controls.TreeViewItem" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnExpanded(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> プロパティの値が <see langword="false" /> から <see langword="true" /> に変更されたときに、<see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> イベントを発生させます。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.GotFocus" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> コレクション内で変更があったときに発生する、<see cref="P:System.Windows.Controls.ItemsControl.Items" /> イベントに対するクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントに対するクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントに対するクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> プロパティの値が <see langword="false" /> から <see langword="true" /> に変更された場合に <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> ルーティング イベントを発生させます。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" /> プロパティの値が <see langword="true" /> から <see langword="false" /> に変更された場合に <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> ルーティング イベントを発生させます。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> のビジュアル親の変更に応答します。</summary>
      <param name="oldParent">直前のビジュアル親。</param>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Selected">
      <summary>
        <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> の <see cref="T:System.Windows.Controls.TreeViewItem" /> プロパティの値が <see langword="false" /> から <see langword="true" /> に変更された場合に発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.SelectedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> ルーティング イベントによって識別されます。</summary>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#Constraints">
      <summary>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> のビューポートとキャッシュのサイズを表すオブジェクトを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> のビューポートとキャッシュのサイズを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#HeaderDesiredSizes">
      <summary>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> の目的のサイズをピクセルと論理単位で表すオブジェクトを取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> の目的のサイズをピクセルと論理単位で表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#InBackgroundLayout">
      <summary>コントロールのレイアウト パスが低い優先順位で発生するかどうかを示す値を取得します。</summary>
      <returns>コントロールのレイアウト パスが低い優先順位で発生する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemDesiredSizes">
      <summary>コントロールの項目の目的のサイズをピクセルと論理単位で表すオブジェクトを取得または設定します。</summary>
      <returns>コントロールの項目の目的のサイズをピクセルと論理単位で表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemsHost">
      <summary>
        <see cref="T:System.Windows.Controls.Panel" /> の <see cref="P:System.Windows.Controls.ItemsControl.Items" /> を表示する <see cref="T:System.Windows.Controls.TreeViewItem" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Panel" /> の <see cref="P:System.Windows.Controls.ItemsControl.Items" /> を表示する <see cref="T:System.Windows.Controls.TreeViewItem" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#MustDisableVirtualization">
      <summary>所有する <see cref="T:System.Windows.Controls.ItemsControl" /> の項目を仮想化するかどうかを示す値を取得または設定します。</summary>
      <returns>所有する <see cref="T:System.Windows.Controls.ItemsControl" /> がその項目を仮想化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Unselected">
      <summary>
        <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> の <see cref="T:System.Windows.Controls.TreeViewItem" /> プロパティの値が <see langword="true" /> から <see langword="false" /> に変更された場合に発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.UnselectedEvent">
      <summary>
        <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" /> ルーティング イベントによって識別されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.UIElementCollection">
      <summary>
        <see cref="T:System.Windows.UIElement" /> 子要素の順序付きコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)">
      <summary>
        <see cref="T:System.Windows.Controls.UIElementCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="visualParent">コレクションの <see cref="T:System.Windows.UIElement" /> の親。</param>
      <param name="logicalParent">コレクション内の要素の論理上の親。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)">
      <summary>指定された要素を <see cref="T:System.Windows.Controls.UIElementCollection" /> に追加します。</summary>
      <param name="element">追加する <see cref="T:System.Windows.UIElement" />。</param>
      <returns>追加した要素のインデックス位置。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Capacity">
      <summary>
        <see cref="T:System.Windows.Controls.UIElementCollection" /> に格納できる要素の数を取得または設定します。</summary>
      <returns>コレクションに格納できる要素の合計数。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Clear">
      <summary>
        <see cref="T:System.Windows.Controls.UIElementCollection" /> からすべての要素を削除します。</summary>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)">
      <summary>要素が <see cref="T:System.Windows.Controls.UIElementCollection" /> から離れたときに要素の論理上の親を消去します。</summary>
      <param name="element">論理上の親が消去される <see cref="T:System.Windows.UIElement" />。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)">
      <summary>指定された要素が <see cref="T:System.Windows.Controls.UIElementCollection" /> 内に存在するかどうかを判定します。</summary>
      <param name="element">検索対象の要素。</param>
      <returns>指定された <see cref="T:System.Windows.UIElement" /> がコレクション内で見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)">
      <summary>指定されたインデックス位置を開始位置として、配列に <see cref="T:System.Windows.UIElement" /> の <see cref="T:System.Windows.Controls.UIElementCollection" /> をコピーします。</summary>
      <param name="array">コレクションのコピー先の配列。</param>
      <param name="index">コピーを開始する、要素のインデックス位置。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)">
      <summary>指定されたインデックス位置を開始位置として、配列に <see cref="T:System.Windows.UIElement" /> の <see cref="T:System.Windows.Controls.UIElementCollection" /> をコピーします。</summary>
      <param name="array">
        <see cref="T:System.Windows.UIElement" /> オブジェクトの配列。</param>
      <param name="index">コピーを開始する、要素のインデックス位置。</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Count">
      <summary>コレクション内の要素の実際の数を取得します。</summary>
      <returns>コレクション内の要素の実際の数。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Windows.Controls.UIElementCollection" /> を反復処理できる列挙子を返します。</summary>
      <returns>このコレクションのメンバーをリストできる <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.Controls.UIElementCollection" /> 内の指定された要素のインデックス位置を返します。</summary>
      <param name="element">インデックス位置が要求される要素。</param>
      <returns>要素のインデックス位置。  要素がコレクション内で見つからない場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.Controls.UIElementCollection" /> の指定されたインデックス位置に要素を挿入します。</summary>
      <param name="index">要素を挿入するインデックス位置。</param>
      <param name="element">
        <see cref="T:System.Windows.Controls.UIElementCollection" /> に挿入する要素。</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.IsSynchronized">
      <summary>
        <see cref="T:System.Collections.ICollection" /> インターフェイスへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>コレクションへのアクセスが同期されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Item(System.Int32)">
      <summary>
        <see cref="T:System.Windows.UIElement" /> の 0 から始まるインデックス位置に格納されている <see cref="T:System.Windows.Controls.UIElementCollection" /> を取得または設定します。</summary>
      <param name="index">
        <see cref="T:System.Windows.UIElement" /> のインデックス位置。</param>
      <returns>指定された <paramref name="index" /> 位置にある <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)">
      <summary>指定された要素を <see cref="T:System.Windows.Controls.UIElementCollection" /> から削除します。</summary>
      <param name="element">コレクションから削除する要素。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Windows.UIElement" /> を削除します。</summary>
      <param name="index">削除する <see cref="T:System.Windows.UIElement" /> のインデックス。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Windows.Controls.UIElementCollection" /> から要素の範囲を削除します。</summary>
      <param name="index">削除を開始する、要素のインデックス位置。</param>
      <param name="count">削除する要素の数を指定します。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.Controls.UIElementCollection" /> 内の要素の論理上の親を設定します。</summary>
      <param name="element">論理上の親が設定される <see cref="T:System.Windows.UIElement" />。</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.SyncRoot">
      <summary>
        <see cref="T:System.Collections.ICollection" /> インターフェイスへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Object" /> インターフェイスへのアクセスを同期するために使用できる <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。 このメンバーの詳細については、「<see cref="M:System.Collections.IList.Add(System.Object)" />」をご覧ください。</summary>
      <param name="value">追加するオブジェクト。</param>
      <returns>新しい要素が挿入された位置。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。 このメンバーの詳細については、「<see cref="M:System.Collections.IList.Contains(System.Object)" />」をご覧ください。</summary>
      <param name="value">リスト内で検索するオブジェクト。</param>
      <returns>オブジェクトがリスト内で見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。 このメンバーの説明については、<see cref="M:System.Collections.IList.IndexOf(System.Object)" /> のトピックを参照してください。</summary>
      <param name="value">リスト内で検索するオブジェクト。</param>
      <returns>リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。 このメンバーの詳細については、「<see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />」をご覧ください。</summary>
      <param name="index">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value">リストに挿入するオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。 このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsFixedSize" />」をご覧ください。</summary>
      <returns>リストが固定サイズの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。 このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsReadOnly" />」をご覧ください。</summary>
      <returns>リストが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。 このメンバーの詳細については、「<see cref="P:System.Collections.IList.Item(System.Int32)" />」をご覧ください。</summary>
      <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns>指定したインデックス位置にある要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。 このメンバーの説明については、<see cref="M:System.Collections.IList.Remove(System.Object)" /> のトピックを参照してください。</summary>
      <param name="value">リストから削除するオブジェクト。</param>
    </member>
    <member name="T:System.Windows.Controls.UndoAction">
      <summary>テキスト変更によって発生する undo スタックと undo スタックが受ける影響。</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Clear">
      <summary>この変更は、undo スタックをクリアします。</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Create">
      <summary>この変更は、新しい undo 単位を作成します。</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Merge">
      <summary>この変更は、前の undo 単位にマージされます。</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.None">
      <summary>この変更は undo スタックにまったく影響を与えません。</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Redo">
      <summary>この変更は、Redo() を呼び出した結果です。</summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Undo">
      <summary>この変更は、Undo() を呼び出した結果です。</summary>
    </member>
    <member name="T:System.Windows.Controls.UserControl">
      <summary>コントロールを作成するための簡単な方法を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.UserControl.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.UserControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.UserControl" /> を作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> の新しい <see cref="T:System.Windows.Controls.UserControl" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.Validation">
      <summary>データの検証をサポートするメソッドと添付プロパティを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Validation.AddErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})">
      <summary>指定したオブジェクトに <see cref="E:System.Windows.Controls.Validation.Error" /> 添付イベントのイベント ハンドラーを追加します。</summary>
      <param name="element">
        <paramref name="handler" /> を追加する <see cref="T:System.Windows.UIElement" /> オブジェクトまたは <see cref="T:System.Windows.ContentElement" /> オブジェクト。</param>
      <param name="handler">追加するハンドラー。</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpressionBase)">
      <summary>指定された <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトから、すべての <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトを削除します。</summary>
      <param name="bindingExpression">有効にするオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingExpression" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="E:System.Windows.Controls.Validation.Error">
      <summary>バインドされている要素で検証エラーが検出されると発生しますが、<see cref="P:System.Windows.Data.Binding.NotifyOnValidationError" /> 値が <see langword="true" /> に設定されているバインディングのみが対象です。</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorEvent">
      <summary>
        <see cref="E:System.Windows.Controls.Validation.Error" /> 添付イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Validation.Errors">
      <summary>バインドされている要素のアクティブなすべての <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトのコレクションを取得します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Validation.Errors" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Validation.ErrorTemplate">
      <summary>装飾層に対する検証エラーのフィードバックを生成するために使用する <see cref="T:System.Windows.Controls.ControlTemplate" /> を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)">
      <summary>指定された要素の <see cref="P:System.Windows.Controls.Validation.Errors" /> 添付プロパティの値を取得します。</summary>
      <param name="element">値の読み取り元の <see cref="T:System.Windows.UIElement" /> オブジェクトまたは <see cref="T:System.Windows.ContentElement" /> オブジェクト。</param>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> オブジェクトの <see cref="T:System.Windows.Controls.ValidationError" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrorTemplate(System.Windows.DependencyObject)">
      <summary>指定された要素の <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 添付プロパティの値を取得します。</summary>
      <param name="element">値の読み取り元の <see cref="T:System.Windows.UIElement" /> オブジェクトまたは <see cref="T:System.Windows.ContentElement" /> オブジェクト。</param>
      <returns>装飾層に対する検証エラーのフィードバックを生成するために使用する <see cref="T:System.Windows.Controls.ControlTemplate" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)">
      <summary>指定された要素の <see cref="P:System.Windows.Controls.Validation.HasError" /> 添付プロパティの値を取得します。</summary>
      <param name="element">値の読み取り元の <see cref="T:System.Windows.UIElement" /> オブジェクトまたは <see cref="T:System.Windows.ContentElement" /> オブジェクト。</param>
      <returns>指定された要素の <see cref="P:System.Windows.Controls.Validation.HasError" /> 添付プロパティの値を取得します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetValidationAdornerSite(System.Windows.DependencyObject)">
      <summary>指定した要素の <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 添付プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> の取得元の要素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> の値です。</returns>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetValidationAdornerSiteFor(System.Windows.DependencyObject)">
      <summary>指定した要素の <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 添付プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> の取得元の要素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> の値です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.HasError">
      <summary>バインディング ターゲット要素に対するバインディングに <see cref="T:System.Windows.Controls.ValidationError" /> が存在するかどうかを示す値を取得します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.HasErrorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Validation.HasError" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)">
      <summary>指定された <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトで、指定された <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトを無効としてマークします。</summary>
      <param name="bindingExpression">無効としてマークする <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクト。</param>
      <param name="validationError">使用する <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validationError" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.RemoveErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})">
      <summary>指定されたオブジェクトから <see cref="E:System.Windows.Controls.Validation.Error" /> 添付イベントのイベント ハンドラーを追加します。</summary>
      <param name="element">
        <paramref name="handler" /> を削除する対象の <see cref="T:System.Windows.UIElement" /> オブジェクトまたは <see cref="T:System.Windows.ContentElement" /> オブジェクト。</param>
      <param name="handler">削除するハンドラー。</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetErrorTemplate(System.Windows.DependencyObject,System.Windows.Controls.ControlTemplate)">
      <summary>指定した要素の <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <paramref name="value" /> を設定する <see cref="T:System.Windows.UIElement" /> オブジェクトまたは <see cref="T:System.Windows.ContentElement" /> オブジェクト。</param>
      <param name="value">装飾層に対する検証エラーのフィードバックを生成するために使用する <see cref="T:System.Windows.Controls.ControlTemplate" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetValidationAdornerSite(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>指定された要素の <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 添付プロパティを指定された値に設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> を設定する対象の要素。</param>
      <param name="value">指定された要素の <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetValidationAdornerSiteFor(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>指定された要素の <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 添付プロパティを指定された値に設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> を設定する対象の要素。</param>
      <param name="value">指定された要素の <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Validation.ValidationAdornerSite">
      <summary>このプロパティが設定されているバインドされた要素で発生した検証エラーを示すために表示される要素を取得または設定します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor">
      <summary>エラーが発生したことを示すためにこの要素が表示される要素を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ValidationAdornerSiteProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationError">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationRule" /> が検証エラーを報告したときにバインディング エンジンによって作成されるか、<see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" /> メソッドで明示的に作成された検証エラーを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)">
      <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.Controls.ValidationError" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="ruleInError">検証エラーを検出した規則。</param>
      <param name="bindingInError">検証エラーを含む <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトまたは <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)">
      <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.Controls.ValidationError" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="ruleInError">検証エラーを検出した規則。</param>
      <param name="bindingInError">検証エラーを含む <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトまたは <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクト。</param>
      <param name="errorContent">エラーに関する情報。</param>
      <param name="exception">検証エラーの原因となった例外。 このパラメーターは省略可能で、<see langword="null" /> に設定できます。</param>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.BindingInError">
      <summary>この <see cref="T:System.Windows.Data.BindingExpression" /> の <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトまたは <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトを取得します。 オブジェクトは明示的に無効とマークされるか、失敗した検証規則が含まれます。</summary>
      <returns>この <see cref="T:System.Windows.Data.BindingExpression" /> の <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトまたは <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.ErrorContent">
      <summary>エラーを説明する文字列など、この <see cref="T:System.Windows.Controls.ValidationError" /> に追加のコンテキストを提供するオブジェクトを取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.ValidationError" /> に追加のコンテキストを提供するオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.Exception">
      <summary>エラーが例外の結果である場合に、この <see cref="T:System.Exception" /> の原因となった <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトを取得または設定します。</summary>
      <returns>エラーが例外の結果である場合の <see cref="T:System.Exception" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.RuleInError">
      <summary>エラーが検証規則の結果である場合に、この <see cref="T:System.Windows.Controls.ValidationRule" /> の原因となった <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトを取得または設定します。</summary>
      <returns>エラーが検証規則の結果である場合の <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventAction">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトが追加または削除されたかどうかを表します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Added">
      <summary>新しい <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトが検出されました。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Removed">
      <summary>既存の <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトが消去されました。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.Validation.Error" /> 添付イベントに関する情報を提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Action">
      <summary>エラーが新しいエラーなのか、既に解消された既存のエラーなのかを示す値を取得します。</summary>
      <returns>エラーが新しいエラーなのか、既に解消された既存のエラーなのかを示す <see cref="T:System.Windows.Controls.ValidationErrorEventAction" /> 値。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Error">
      <summary>この <see cref="E:System.Windows.Controls.Validation.Error" /> イベントの原因となったエラーを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.ValidationError" /> イベントの原因となった <see cref="E:System.Windows.Controls.Validation.Error" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationErrorEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>指定したオブジェクトに対し、指定したハンドラーを型固有の方法で呼び出します。</summary>
      <param name="genericHandler">型固有の方法で呼び出しを行うジェネリック ハンドラー。</param>
      <param name="genericTarget">ハンドラーを呼び出す対象のオブジェクト。</param>
    </member>
    <member name="T:System.Windows.Controls.ValidationResult">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationRule" />.<see cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" /> メソッドによって返された結果を表します。 このメソッドは、チェック後の値が <see cref="T:System.Windows.Controls.ValidationRule" /> に合致しているかどうかを示します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationResult" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="isValid">
        <see cref="T:System.Windows.Controls.ValidationRule" /> でチェックした値が有効かどうか。</param>
      <param name="errorContent">無効性に関する情報。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.Equals(System.Object)">
      <summary>指定したインスタンスと <see cref="T:System.Windows.Controls.ValidationResult" /> の現在のインスタンスを比較し、値が等しいかどうかを確認します。</summary>
      <param name="obj">比較対象の <see cref="T:System.Windows.Controls.ValidationResult" /> インスタンス。</param>
      <returns>
        <paramref name="obj" /> および <see cref="T:System.Windows.Controls.ValidationResult" /> のこのインスタンスが同じ値を持つ場合は <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.ErrorContent">
      <summary>無効性に関する追加情報を提供するオブジェクトを取得します。</summary>
      <returns>無効性に関する追加情報を提供するオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.GetHashCode">
      <summary>この <see cref="T:System.Windows.Controls.ValidationResult" /> のハッシュ コードを返します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.ValidationResult" /> のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.IsValid">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationRule" /> に関してチェックされた値が有効かどうかを示す値を取得します。</summary>
      <returns>値が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)">
      <summary>2 つの <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクトを比較し、値が等しいかどうかを確認します。</summary>
      <param name="left">比較する 1 番目のインスタンス。</param>
      <param name="right">比較する 2 番目のインスタンス。</param>
      <returns>2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)">
      <summary>2 つの <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクトを比較し、値が等しくないかどうかを確認します。</summary>
      <param name="left">比較する 1 番目のインスタンス。</param>
      <param name="right">比較する 2 番目のインスタンス。</param>
      <returns>値が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.ValidResult">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationResult" /> の有効なインスタンスを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationResult" /> の有効なインスタンス。</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationRule">
      <summary>ユーザー入力の有効性を確認するためのカスタム規則を作成する方法を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationRule" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)">
      <summary>指定した検証手順と、ターゲットの更新時に検証規則を実行するかどうかを示す値を使用して、<see cref="T:System.Windows.Controls.ValidationRule" /> クラスの新規インスタンスを初期化します。</summary>
      <param name="validationStep">検証規則を実行するタイミングを指定する列挙値の 1 つ。</param>
      <param name="validatesOnTargetUpdated">
        <see cref="T:System.Windows.Data.Binding" /> のターゲットが更新されたときに検証規則を実行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>派生クラスでオーバーライドされると、値の検証チェックを行います。</summary>
      <param name="value">チェックするバインディング ターゲットの値。</param>
      <param name="cultureInfo">この規則で使用するカルチャ。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)">
      <summary>値の検証チェックを実行します。</summary>
      <param name="value">チェックするバインディング ターゲットの値。</param>
      <param name="cultureInfo">この規則で使用するカルチャ。</param>
      <param name="owner">検証規則を使用するバインディング式。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)">
      <summary>値の検証チェックを実行します。</summary>
      <param name="value">チェックするバインディング ターゲットの値。</param>
      <param name="cultureInfo">この規則で使用するカルチャ。</param>
      <param name="owner">検証規則を使用するバインディング グループ。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated">
      <summary>
        <see cref="T:System.Windows.Data.Binding" /> のターゲットが更新されたときに検証規則を実行するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.Binding" /> のターゲットが更新されたときに検証規則を実行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationRule.ValidationStep">
      <summary>検証規則を実行するタイミングを取得または設定します。</summary>
      <returns>列挙値の 1 つ。  既定値は、<see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> です。</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationStep">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationRule" /> を実行するタイミングを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.CommittedValue">
      <summary>値がソースにコミットされた後で <see cref="T:System.Windows.Controls.ValidationRule" /> を実行します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue">
      <summary>値が変換された後で <see cref="T:System.Windows.Controls.ValidationRule" /> を実行します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.RawProposedValue">
      <summary>変換が行われる前に <see cref="T:System.Windows.Controls.ValidationRule" /> を実行します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.UpdatedValue">
      <summary>ソースの更新後に <see cref="T:System.Windows.Controls.ValidationRule" /> を実行します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ViewBase">
      <summary>
        <see cref="T:System.Windows.Controls.ListView" /> コントロール内のデータの外観を定義するビューの基本クラスを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ViewBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.ClearItem(System.Windows.Controls.ListViewItem)">
      <summary>項目に設定されたバインディングとスタイルをすべて削除します。</summary>
      <param name="item">設定を削除する <see cref="T:System.Windows.Controls.ListViewItem" />。</param>
    </member>
    <member name="P:System.Windows.Controls.ViewBase.DefaultStyleKey">
      <summary>表示モードのスタイルに関連付けられているオブジェクトを取得します。</summary>
      <returns>表示モードで使用するスタイル。 既定値は、<see cref="T:System.Windows.Controls.ListBox" /> のスタイルです。</returns>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.GetAutomationPeer(System.Windows.Controls.ListView)">
      <summary>
        <see cref="T:System.Windows.Controls.ListView" /> コントロールがその <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> の <see cref="P:System.Windows.Controls.ListView.View" /> を作成するときに呼び出されます。</summary>
      <param name="parent">
        <see cref="T:System.Windows.Controls.ListView" /> を作成するために使用する <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> コントロール。</param>
      <returns>カスタム <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" /> の <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> を実装する <see cref="P:System.Windows.Controls.ListView.View" /> インターフェイス。</returns>
    </member>
    <member name="P:System.Windows.Controls.ViewBase.ItemContainerDefaultStyleKey">
      <summary>表示モード内の項目に使用するスタイルを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ListViewItem" /> のスタイル。 既定値は、<see cref="T:System.Windows.Controls.ListBoxItem" /> コントロールのスタイルです。</returns>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.PrepareItem(System.Windows.Controls.ListViewItem)">
      <summary>バインディングとスタイルを設定することにより、ビュー内の項目を表示用に準備します。</summary>
      <param name="item">表示の準備をする項目。</param>
    </member>
    <member name="T:System.Windows.Controls.Viewbox">
      <summary>利用できるスペースに合うように 1 つの子を引き伸ばしたり拡大縮小したりするためのコンテンツ デコレータを定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Viewbox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Viewbox" /> 要素のコンテンツを配置します。</summary>
      <param name="arrangeSize">この要素が子要素を配置するために使用する <see cref="T:System.Windows.Size" />。</param>
      <returns>この <see cref="T:System.Windows.Size" /> 要素およびその子要素の配置後のサイズを表す <see cref="T:System.Windows.Controls.Viewbox" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Child">
      <summary>
        <see cref="T:System.Windows.Controls.Viewbox" /> 要素の単一の子を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Viewbox" /> 要素の単一の子。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.GetVisualChild(System.Int32)">
      <summary>指定した <paramref name="index" /> 位置にある <see cref="T:System.Windows.Media.Visual" /> 子を取得します。</summary>
      <param name="index">必要な子 <see cref="T:System.Windows.Media.Visual" /> のインデックス位置。</param>
      <returns>親 <see cref="T:System.Windows.Media.Visual" /> 要素の子 <see cref="T:System.Windows.Controls.Viewbox" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.LogicalChildren">
      <summary>この <see cref="T:System.Windows.Controls.Viewbox" /> 要素の論理的な子を反復処理できる列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Viewbox" /> パスにおいて、配置の前に <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /> の子要素を測定します。</summary>
      <param name="constraint">
        <see cref="T:System.Windows.Size" /> が超えることができない上限の <see cref="T:System.Windows.Controls.Viewbox" />。</param>
      <returns>要素の必要サイズを表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Stretch">
      <summary>コンテンツを使用可能な領域に収める方法を決定する <see cref="T:System.Windows.Controls.Viewbox" /><see cref="T:System.Windows.Media.Stretch" /> モードを取得または設定します。</summary>
      <returns>コンテンツを使用可能な領域に収める方法を決定する <see cref="T:System.Windows.Media.Stretch" />。 既定値は、<see cref="F:System.Windows.Media.Stretch.Uniform" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.StretchDirection">
      <summary>
        <see cref="T:System.Windows.Controls.StretchDirection" /> のコンテンツにスケーリングを適用する方法を決定する <see cref="T:System.Windows.Controls.Viewbox" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.StretchDirection" /> のコンテンツにスケーリングを適用する方法を決定する <see cref="T:System.Windows.Controls.Viewbox" />。 既定値は、<see cref="F:System.Windows.Controls.StretchDirection.Both" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.VisualChildrenCount">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> のこのインスタンス内の子 <see cref="T:System.Windows.Controls.Viewbox" /> オブジェクトの数を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Visual" /> 子の数。</returns>
    </member>
    <member name="T:System.Windows.Controls.Viewport3D">
      <summary>
        <see cref="T:System.Windows.Controls.Viewport3D" /> 要素の 2-D レイアウト境界内に包含される 3-D コンテンツを描画します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Viewport3D" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Viewport3D" /> で、指定されたサイズに合わせてビジュアル コンテンツが配置されるようになります。</summary>
      <param name="finalSize">
        <see cref="T:System.Windows.Controls.Viewport3D" /> が想定するサイズ。</param>
      <returns>配置された <see cref="T:System.Windows.Controls.Viewport3D" /> の最終的なサイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.Camera">
      <summary>
        <see cref="T:System.Windows.Controls.Viewport3D" /> の 3-D コンテンツを <see cref="T:System.Windows.Controls.Viewport3D" /> の 2-D 画面に投影するカメラ オブジェクトを取得または設定します。</summary>
      <returns>3-D のコンテンツを 2-D 画面に投影するカメラ。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewport3D.CameraProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Viewport3D.Camera" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.Children">
      <summary>
        <see cref="T:System.Windows.Controls.Viewport3D" /> の <see cref="T:System.Windows.Media.Media3D.Visual3D" /> の子のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Viewport3D" /> の <see cref="T:System.Windows.Media.Media3D.Visual3D" /> の子のコレクション。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewport3D.ChildrenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Viewport3D.Children" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.GetVisualChild(System.Int32)">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> の <see cref="P:System.Windows.Controls.Viewport3D.Children" /> コレクション内の指定された位置の <see cref="T:System.Windows.Controls.Viewport3D" /> を取得します。</summary>
      <param name="index">コレクション内の要素の位置。</param>
      <returns>
        <see cref="P:System.Windows.Controls.Viewport3D.Children" /> コレクション内の指定された位置のビジュアル。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> に対応する <see cref="T:System.Windows.Controls.Viewport3D" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> の <see cref="T:System.Windows.Controls.Viewport3D" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.VisualChildrenCount">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> の <see cref="P:System.Windows.Media.Media3D.ModelVisual3D.Children" /> コレクション内の <see cref="T:System.Windows.Media.Media3D.Visual3D" /> オブジェクトの数を表す整数を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Visual3D" /> の子コレクション内のビジュアルの数を表す整数。</returns>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationCacheLength">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 添付プロパティの測定値を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)">
      <summary>ビューポートの各サイドに同じキャッシュの長さを指定して、<see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="cacheBeforeAndAfterViewport">ビューポートの前後のキャッシュのサイズ。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)">
      <summary>ビューポートの各サイドのキャッシュの長さを指定して、<see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="cacheBeforeViewport">ビューポート後のキャッシュのサイズ。</param>
      <param name="cacheAfterViewport">ビューポート後のキャッシュのサイズ。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が仮想化している場合に、ビューポートの前のキャッシュのサイズを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が仮想化している場合の、ビューポート後のキャッシュのサイズ。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が仮想化している場合に、ビューポートの後のキャッシュのサイズを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が仮想化している場合の、ビューポート後のキャッシュのサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)">
      <summary>指定したオブジェクトが、現在の <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> と等しいかどうかを判断します。</summary>
      <param name="oCompare">現在の <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> と比較するオブジェクト。</param>
      <returns>指定したオブジェクトが現在の <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> オブジェクトと等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)">
      <summary>指定した <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> が現在の <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> と等しいかどうかを示します。</summary>
      <param name="cacheLength">現在の <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> と比較するオブジェクト。</param>
      <returns>指定したオブジェクトが現在の <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> オブジェクトと等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.GetHashCode">
      <summary>現在の <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> のハッシュ コードを取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
      <summary>指定した 2 つの <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> オブジェクトが等しいかどうかを判断します。</summary>
      <param name="cl1">比較する最初のオブジェクト。</param>
      <param name="cl2">比較する 2 番目のオブジェクト。</param>
      <returns>指定した <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
      <summary>指定した 2 つの <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> オブジェクトが等しいかどうかを判断します。</summary>
      <param name="cl1">比較する最初のオブジェクト。</param>
      <param name="cl2">比較する 2 番目のオブジェクト。</param>
      <returns>指定した <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.ToString">
      <summary>現在の <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> を表す文字列を返します。</summary>
      <returns>現在の <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> を表す文字列。</returns>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationCacheLengthConverter">
      <summary>オブジェクトと <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 間の変換を行います。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> が、指定したコンテキストを使用して、指定した型のオブジェクトを <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 変換できるかどうかを示す値を返します。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供するオブジェクト。</param>
      <param name="sourceType">変換前の型。</param>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> が、指定した型の <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> に変換できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> が <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> を指定した型に変換できるかどうかを判断します。</summary>
      <param name="typeDescriptorContext">形式コンテキストを提供するオブジェクト。</param>
      <param name="destinationType">変換後の型。</param>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> が <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> を指定した型に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したオブジェクトを <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> に変換します。</summary>
      <param name="typeDescriptorContext">形式コンテキストを提供するオブジェクト。</param>
      <param name="cultureInfo">変換中に使用されるカルチャ情報を提供するオブジェクト。</param>
      <param name="source">
        <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> に変換するオブジェクト。</param>
      <returns>変換後のオブジェクト。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> は <see langword="null" />です。

または -
<paramref name="source" /> を <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> に変換できません。</exception>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定した <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> を指定した型のオブジェクトに変換します。</summary>
      <param name="typeDescriptorContext">形式コンテキストを提供するオブジェクト。</param>
      <param name="cultureInfo">変換中に使用されるカルチャ情報を提供するオブジェクト。</param>
      <param name="value">別の型に変換する <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</param>
      <param name="destinationType">変換後の型。</param>
      <returns>変換後のオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> が <paramref name="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> が <see langword="null" /> です。

または -
<paramref name="value" /> が <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> ではありません。</exception>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationCacheLengthUnit">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 添付プロパティによって使用される単位の種類を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Item">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> がパネルに表示される項目に基づいて測定されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Page">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> はパネルのビューポートのサイズと等しいページに基づいて測定されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Pixel">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> は デバイスに依存しない単位 (1 単位は 1/96 インチ) に基づいて測定されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationMode">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> が子アイテムの仮想化の管理に使用するメソッドを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Recycling">
      <summary>項目コンテナーを再利用します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Standard">
      <summary>項目コンテナーを作成し、破棄します。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingPanel">
      <summary>子データ コレクションを仮想化する <see cref="T:System.Windows.Controls.Panel" /> 要素のフレームワークを提供します。 これは抽象クラスです。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.AddInternalChild(System.Windows.UIElement)">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> を <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> 要素の <see cref="T:System.Windows.Controls.VirtualizingPanel" /> コレクションに追加します。</summary>
      <param name="child">コレクションに追加する <see cref="T:System.Windows.UIElement" /> の子。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoView(System.Int32)">
      <summary>派生クラスで実装された場合、指定されたインデックス位置に項目を生成し、可視化します。</summary>
      <param name="index">生成および可視化される項目のインデックス位置。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoViewPublic(System.Int32)">
      <summary>指定したインデックス位置に項目を生成し、可視化します。</summary>
      <param name="index">生成および可視化される項目のインデックス位置。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CacheLength">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が仮想化している場合の、ビューポート前後のキャッシュのサイズを取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.CacheLengthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> プロパティによって使用される単位の種類を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.CacheLengthUnitProperty">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CanHierarchicallyScrollAndVirtualize">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が階層にグループ化または編成されている項目を仮想化できるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が階層にグループ化または編成されている項目を仮想化できるかどうかを示す値。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CanHierarchicallyScrollAndVirtualizeCore">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が階層にグループ化または編成されている項目を仮想化できるかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetCacheLength(System.Windows.DependencyObject)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 添付プロパティの取得元の要素。</param>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が仮想化している場合の、ビューポート前後のキャッシュのサイズ。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetCacheLengthUnit(System.Windows.DependencyObject)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 添付プロパティの取得元の要素。</param>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> プロパティで使用されている単位の型。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetIsContainerVirtualizable(System.Windows.DependencyObject)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 添付プロパティの取得元の要素。</param>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が項目を仮想化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetIsVirtualizing(System.Windows.DependencyObject)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> 添付プロパティの値を取得します。</summary>
      <param name="element">添付プロパティ値の読み取り元のオブジェクト。</param>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> がそのコンテンツを仮想化している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetIsVirtualizingWhenGrouping(System.Windows.DependencyObject)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 添付プロパティの取得元の要素。</param>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> がコレクション内のグループ化された項目を仮想化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetItemOffset(System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> を基準とする、指定された項目の相対的な位置を返します。</summary>
      <param name="child">位置を検索する要素。</param>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> を基準とする、指定された項目の相対的な位置。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetItemOffsetCore(System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> を基準とする、指定された項目の相対的な位置を返します。</summary>
      <param name="child">位置を検索する要素。</param>
      <returns>常に 0。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetScrollUnit(System.Windows.DependencyObject)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 添付プロパティの取得元の要素。</param>
      <returns>スクロールがコレクション内の項目またはピクセルとして測定されるかどうかを示す値。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetVirtualizationMode(System.Windows.DependencyObject)">
      <summary>指定されたオブジェクトの <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 添付プロパティを返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> プロパティの読み取り元のオブジェクト。</param>
      <returns>オブジェクトがコンテナー リサイクルを使用するかどうかを指定する列挙値の 1 つ。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.InsertInternalChild(System.Int32,System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.UIElement" /> 要素の <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> コレクション内の指定されたインデックス位置に、指定された <see cref="T:System.Windows.Controls.VirtualizingPanel" /> を追加します。</summary>
      <param name="index">子要素が挿入されるコレクション内のインデックス位置。</param>
      <param name="child">コレクションに追加する <see cref="T:System.Windows.UIElement" /> の子。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable">
      <summary>この <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が項目を仮想化する必要があるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizableProperty">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing">
      <summary>この <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が子コレクションを仮想化していることを示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.IsVirtualizingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> がグループを表示するときにコレクションの項目を仮想化するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGroupingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.ItemContainerGenerator">
      <summary>この <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> の <see cref="T:System.Windows.Controls.VirtualizingPanel" /> を識別する値を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> の <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnClearChildren">
      <summary>子要素のコレクションが基本 <see cref="T:System.Windows.Controls.Panel" /> クラスによってクリアされたときに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>この <see cref="P:System.Windows.Controls.ItemsControl.Items" /> の <see cref="T:System.Windows.Controls.ItemsControl" /> に関連付けられている <see cref="T:System.Windows.Controls.Panel" /> コレクションが変更されたときに呼び出されます。</summary>
      <param name="sender">イベントの発生元の <see cref="T:System.Object" />。</param>
      <param name="args">
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントのデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.RemoveInternalChildRange(System.Int32,System.Int32)">
      <summary>
        <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> コレクションから子要素を削除します。</summary>
      <param name="index">最初の子要素が削除されるコレクション内の開始インデックス位置。</param>
      <param name="range">コレクションから削除する子要素の総数。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit">
      <summary>スクロールがコレクション内の項目またはピクセルとして測定されるかどうかを示す値を取得します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.ScrollUnitProperty">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetCacheLength(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationCacheLength)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 添付プロパティを設定します。</summary>
      <param name="element">プロパティを設定するオブジェクト。</param>
      <param name="value">
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が仮想化している場合の、ビューポート前後のキャッシュのサイズ。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetCacheLengthUnit(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationCacheLengthUnit)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 添付プロパティを設定します。</summary>
      <param name="element">プロパティを設定するオブジェクト。</param>
      <param name="value">
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> プロパティで使用されている単位の型。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetIsContainerVirtualizable(System.Windows.DependencyObject,System.Boolean)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 添付プロパティを設定します。</summary>
      <param name="element">プロパティを設定するオブジェクト。</param>
      <param name="value">
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> が項目を仮想化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetIsVirtualizing(System.Windows.DependencyObject,System.Boolean)">
      <summary>
        <see cref="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティ値の設定先のオブジェクト。</param>
      <param name="value">
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> が仮想化中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetIsVirtualizingWhenGrouping(System.Windows.DependencyObject,System.Boolean)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 添付プロパティを設定します。</summary>
      <param name="element">プロパティを設定するオブジェクト。</param>
      <param name="value">
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> がコレクション内のグループ化された項目を仮想化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetScrollUnit(System.Windows.DependencyObject,System.Windows.Controls.ScrollUnit)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 添付プロパティを設定します。</summary>
      <param name="element">プロパティを設定するオブジェクト。</param>
      <param name="value">スクロールがコレクション内の項目またはピクセルとして測定されるかどうかを示す値。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetVirtualizationMode(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationMode)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 添付プロパティを設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> プロパティを設定する対象の要素。</param>
      <param name="value">
        <paramref name="element" /> でコンテナー リサイクルを使用するかどうかを指定する列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.ShouldItemsChangeAffectLayout(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> の変更された項目がこのパネルのレイアウトに影響するかどうかを示す値を返します。</summary>
      <param name="areItemChangesLocal">変更された項目が、この <see cref="T:System.Windows.Controls.VirtualizingPanel" /> の直接の子である場合は <see langword="true" />。変更された項目が <see cref="T:System.Windows.Controls.VirtualizingPanel" /> の間接的な子孫である場合は <see langword="false" />。</param>
      <param name="args">変更された項目に関するデータを格納します。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> の変更された項目がこのパネルのレイアウトに影響する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> の変更された項目がこのパネルのレイアウトに影響するかどうかを示す値を返します。</summary>
      <param name="areItemChangesLocal">変更された項目が、この <see cref="T:System.Windows.Controls.VirtualizingPanel" /> の直接の子である場合は <see langword="true" />。変更された項目が <see cref="T:System.Windows.Controls.VirtualizingPanel" /> の間接的な子孫である場合は <see langword="false" />。</param>
      <param name="args">変更された項目に関するデータを格納します。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> の変更された項目がこのパネルのレイアウトに影響する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> のパネルで子アイテムを仮想化する方法を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.VirtualizationModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingStackPanel">
      <summary>水平方向または垂直方向の単一行でコンテンツを整列し、仮想化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 添付イベントのイベント ハンドラーを追加します。</summary>
      <param name="element">このイベントをリッスンしている <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="handler">追加するイベント ハンドラー。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 要素のコンテンツを配置します。</summary>
      <param name="arrangeSize">この要素が子要素を配置するために使用する必要がある <see cref="T:System.Windows.Size" />。</param>
      <returns>この <see cref="T:System.Windows.Size" /> 要素およびその子要素の配置後のサイズを表す <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)">
      <summary>指定されたインデックス位置に項目を生成し、可視化します。</summary>
      <param name="index">生成して可視化する項目の位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 位置が子コレクション内に存在しません。</exception>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore">
      <summary>階層内でグループ化されたり整理されたりした項目を <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> が仮想化できるかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> を水平方向にスクロールできるかどうかを示す値を取得または設定します。</summary>
      <returns>コンテンツを水平方向にスクロールできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll">
      <summary>コンテンツを垂直方向にスクロールできるかどうかを示す値を取得または設定します。</summary>
      <returns>コンテンツを垂直方向にスクロールできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> のこのインスタンスに関連付けられている <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> によって項目が再仮想化されているときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent">
      <summary>
        <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 添付イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight">
      <summary>範囲の縦のサイズを示す値を取得します。</summary>
      <returns>範囲の縦のサイズを表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth">
      <summary>範囲の横のサイズを含む値を取得します。</summary>
      <returns>範囲の横のサイズを表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> を基準とする、指定された項目の相対的な位置を返します。</summary>
      <param name="child">位置を検索する要素。</param>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> を基準とする、指定された項目の相対的な位置。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation">
      <summary>この <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> の向きが水平方向であるか垂直方向であるかを示す値を取得します。</summary>
      <returns>このプロパティは常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset">
      <summary>スクロールしたコンテンツの横方向のオフセットを格納する値を取得します。</summary>
      <returns>スクロールしたコンテンツの横方向のオフセットを表す<see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty">
      <summary>
        <see langword="VirtualizingPanel.IsVirtualizing" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
      <summary>コンテンツを 1 論理単位分だけ下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
      <summary>コンテンツを 1 論理単位分だけ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
      <summary>コンテンツを 1 論理単位分だけ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
      <summary>コンテンツを 1 論理単位分だけ上にスクロールします。</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation">
      <summary>
        <see cref="T:System.Windows.Controls.Orientation" /> の <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> を表す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 値。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>指定した座標までスクロールし、その部分の <see cref="T:System.Windows.Media.Visual" /> を表示します。</summary>
      <param name="visual">表示可能になる <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="rectangle">
        <see cref="T:System.Windows.Rect" /> 内の座標空間を表す <see cref="T:System.Windows.Media.Visual" />。</param>
      <returns>表示される <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> が渡される間、配置を予測して <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" /> の子要素を測定します。</summary>
      <param name="constraint">超えることができない上限の <see cref="T:System.Windows.Size" />。</param>
      <returns>要素の必要サイズを表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
      <summary>マウスのホイール ボタンが下方向に回転された場合に、コンテンツを下方向へ論理的にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
      <summary>マウスのホイール ボタンが左に傾けられた場合に、コンテンツを左方向へ論理的にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
      <summary>マウスのホイール ボタンが右に傾けられた場合に、コンテンツを右方向へ論理的にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
      <summary>マウスのホイール ボタンが上方向に回転された場合に、コンテンツを上方向へ論理的にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> によってホストされる項目が再仮想化されると呼び出されます。</summary>
      <param name="e">イベントに関するデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnClearChildren">
      <summary>子要素のコレクションが基本 <see cref="T:System.Windows.Controls.Panel" /> クラスによってクリアされたときに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>この <see cref="P:System.Windows.Controls.ItemsControl.Items" /> の <see cref="T:System.Windows.Controls.ItemsControl" /> に関連付けられている <see cref="T:System.Windows.Controls.Panel" /> コレクションが変更されたときに呼び出されます。</summary>
      <param name="sender">イベントの発生元の <see cref="T:System.Object" />。</param>
      <param name="args">
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントのデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)">
      <summary>ユーザーがコンテンツをスクロールしてビューポートのオフセットが変更されると呼び出されます。</summary>
      <param name="oldViewportOffset">ビューポートの以前のオフセット。</param>
      <param name="newViewportOffset">ビューポートの新しいオフセット。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
      <summary>ビューポートのサイズが変更されると呼び出されます。</summary>
      <param name="oldViewportSize">ビューポートの以前のサイズ。</param>
      <param name="newViewportSize">ビューポートの新しいサイズ。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
      <summary>スタックされたコンテンツが水平方向であるか垂直方向であるかを示す値を取得または設定します。</summary>
      <returns>子コンテンツの <see cref="T:System.Windows.Controls.Orientation" />。 既定値は、<see cref="F:System.Windows.Controls.Orientation.Vertical" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
      <summary>コンテンツを 1 ページ分だけ下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
      <summary>コンテンツを 1 ページ分だけ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
      <summary>コンテンツを 1 ページ分だけ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
      <summary>コンテンツを 1 ページ分だけ上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
      <summary>
        <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 添付イベントに対するイベント ハンドラーを削除します。</summary>
      <param name="element">ハンドラーを削除する対象の <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="handler">削除するイベント ハンドラーを指定します。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
      <summary>この <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> でのスクロール動作を制御するコンテナーを識別する値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.ScrollViewer" /> のスクロールを所有している <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> プロパティの値を設定します。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> プロパティの値。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> プロパティの値を設定します。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> プロパティの値。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> の変更された項目がこのパネルのレイアウトに影響するかどうかを示す値を返します。</summary>
      <param name="areItemChangesLocal">変更された項目が、この <see cref="T:System.Windows.Controls.VirtualizingPanel" /> の直接の子である場合は <see langword="true" />。変更された項目が <see cref="T:System.Windows.Controls.VirtualizingPanel" /> の間接的な子孫である場合は <see langword="false" />。</param>
      <param name="args">変更された項目に関するデータを格納します。</param>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> の変更された項目がこのパネルのレイアウトに影響する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset">
      <summary>スクロールしたコンテンツの縦方向のオフセットを含む値を取得します。</summary>
      <returns>スクロールしたコンテンツの縦方向のオフセットを表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight">
      <summary>コンテンツのビューポートの縦幅を含む値を取得します。</summary>
      <returns>コンテンツのビューポートの縦のサイズを表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth">
      <summary>コンテンツのビューポートの横のサイズを示す値を取得します。</summary>
      <returns>コンテンツのビューポートの縦のサイズを表す <see cref="T:System.Double" /> 。 既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VirtualizationMode" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.WebBrowser">
      <summary>HTML ドキュメント間をホストし、移動します。 WPF マネージド コードと HTML スクリプトの間の相互運用を可能にします。</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.WebBrowser" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.CanGoBack">
      <summary>戻り先のドキュメントがあるかどうかを示す値を取得します。</summary>
      <returns>戻り先のドキュメントがあるかどうかを示す <see cref="T:System.Boolean" /> 値。</returns>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.CanGoForward">
      <summary>進み先のドキュメントがあるかどうかを示す値を取得します。</summary>
      <returns>進み先のドキュメントがあるかどうかを示す <see cref="T:System.Boolean" /> 値。</returns>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.Document">
      <summary>ホストされている HTML ページを表す Document オブジェクトを取得します。</summary>
      <returns>Document オブジェクト。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> インスタンスは無効になりました。</exception>
      <exception cref="T:System.InvalidOperationException">基になるネイティブ <c>WebBrowser</c> への参照を取得できませんでした。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.GoBack">
      <summary>前のドキュメントがある場合は、そのドキュメントに戻ります。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> インスタンスは無効になりました。</exception>
      <exception cref="T:System.InvalidOperationException">基になるネイティブ <c>WebBrowser</c> への参照を取得できませんでした。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">戻り先のドキュメントがありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.GoForward">
      <summary>次の HTML ドキュメントがある場合は、そのドキュメントに進みます。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> インスタンスは無効になりました。</exception>
      <exception cref="T:System.InvalidOperationException">基になるネイティブ <c>WebBrowser</c> への参照を取得できませんでした。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">移動先のドキュメントがありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String)">
      <summary>現在読み込まれているドキュメントによって実装されているスクリプト関数を実行します。</summary>
      <param name="scriptName">実行するスクリプト関数の名前。</param>
      <returns>アクティブ スクリプト呼び出しによって返されたオブジェクト。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> インスタンスは無効になりました。</exception>
      <exception cref="T:System.InvalidOperationException">基になるネイティブ <c>WebBrowser</c> への参照を取得できませんでした。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">スクリプト関数が存在しません。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])">
      <summary>現在読み込まれているドキュメントで定義されているスクリプト関数を実行します。</summary>
      <param name="scriptName">実行するスクリプト関数の名前。</param>
      <param name="args">スクリプト関数に渡すパラメーター。</param>
      <returns>アクティブ スクリプト呼び出しによって返されたオブジェクト。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> インスタンスは無効になりました。</exception>
      <exception cref="T:System.InvalidOperationException">基になるネイティブ <c>WebBrowser</c> への参照を取得できませんでした。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">スクリプト関数が存在しません。</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.LoadCompleted">
      <summary>移動先のドキュメントのダウンロードが完了すると発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.String)">
      <summary>指定された URL にあるドキュメントに非同期に移動します。</summary>
      <param name="source">移動先の URL。</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)">
      <summary>指定された URL にあるドキュメントに非同期に移動し、ドキュメントのコンテンツを読み込むターゲット フレームを指定します。 追加の HTTP POST データおよび HTTP ヘッダーを、ナビゲーション要求の一部としてサーバーに送信できます。</summary>
      <param name="source">移動先の URL。</param>
      <param name="targetFrameName">ドキュメントのコンテンツを表示するフレームの名前。</param>
      <param name="postData">ソースが要求されたときにサーバーに送信する HTTP POST データ。</param>
      <param name="additionalHeaders">ソースが要求されたときにサーバーに送信する HTTP ヘッダー。</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri)">
      <summary>指定された <see cref="T:System.Uri" /> にあるドキュメントに非同期に移動します。</summary>
      <param name="source">移動先の <see cref="T:System.Uri" />。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> インスタンスは無効になりました。</exception>
      <exception cref="T:System.InvalidOperationException">基になるネイティブ <c>WebBrowser</c> への参照を取得できませんでした。</exception>
      <exception cref="T:System.Security.SecurityException">部分信頼で実行されているアプリケーションから、起点にない <see cref="T:System.Uri" /> への移動。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)">
      <summary>指定された <see cref="T:System.Uri" /> にあるドキュメントに非同期に移動し、ドキュメントのコンテンツを読み込むターゲット フレームを指定します。 追加の HTTP POST データおよび HTTP ヘッダーを、ナビゲーション要求の一部としてサーバーに送信できます。</summary>
      <param name="source">移動先の <see cref="T:System.Uri" />。</param>
      <param name="targetFrameName">ドキュメントのコンテンツを表示するフレームの名前。</param>
      <param name="postData">ソースが要求されたときにサーバーに送信する HTTP POST データ。</param>
      <param name="additionalHeaders">ソースが要求されたときにサーバーに送信する HTTP ヘッダー。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> インスタンスは無効になりました。</exception>
      <exception cref="T:System.InvalidOperationException">基になるネイティブ <c>WebBrowser</c> への参照を取得できませんでした。</exception>
      <exception cref="T:System.Security.SecurityException">部分信頼で実行されているアプリケーションからの移動。

起点サイトにない <see cref="T:System.Uri" /> へ、または
<paramref name="targetFrameName" /> 名が <see langword="null" /> ではないか、空です。</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.Navigated">
      <summary>移動先のドキュメントがあり、ダウンロードを開始したときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)">
      <summary>ドキュメントのコンテンツを含む <see cref="T:System.IO.Stream" /> へ非同期に移動します。</summary>
      <param name="stream">ドキュメントのコンテンツを含む <see cref="T:System.IO.Stream" />。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> インスタンスは無効になりました。</exception>
      <exception cref="T:System.InvalidOperationException">基になるネイティブ <c>WebBrowser</c> への参照を取得できませんでした。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.NavigateToString(System.String)">
      <summary>ドキュメントのコンテンツを含む <see cref="T:System.String" /> へ非同期に移動します。</summary>
      <param name="text">ドキュメントのコンテンツを含む <see cref="T:System.String" />。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> インスタンスは無効になりました。</exception>
      <exception cref="T:System.InvalidOperationException">基になるネイティブ <c>WebBrowser</c> への参照を取得できませんでした。</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.Navigating">
      <summary>ドキュメントに移動する直前に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.ObjectForScripting">
      <summary>ホストされているドキュメントからスクリプトでアクセスできる、ホスト アプリケーションによって実装されているパブリック クラスのインスタンスを取得または設定します。</summary>
      <returns>ホストされているドキュメントからスクリプトでアクセスできる、ホスト アプリケーションによって実装されている <see langword="public" /> クラスのインスタンスである <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.WebBrowser.ObjectForScripting" /> は、<see langword="COMVisible" /> でない型のインスタンスで設定されます。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Refresh">
      <summary>現在のページを再読み込みします。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> インスタンスは無効になりました。</exception>
      <exception cref="T:System.InvalidOperationException">基になるネイティブ <c>WebBrowser</c> への参照を取得できませんでした。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Refresh(System.Boolean)">
      <summary>オプションのキャッシュ検証を使用して現在のページを再読み込みします。</summary>
      <param name="noCache">キャッシュ検証を行わずに最新の情報に更新するかどうかを指定します。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> インスタンスは無効になりました。</exception>
      <exception cref="T:System.InvalidOperationException">基になるネイティブ <c>WebBrowser</c> への参照を取得できませんでした。</exception>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.Source">
      <summary>
        <see cref="T:System.Uri" /> にホストされている現在のドキュメントの <see cref="T:System.Windows.Controls.WebBrowser" /> を取得または設定します。</summary>
      <returns>現在の HTML ドキュメントの <see cref="T:System.Uri" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> インスタンスは無効になりました。</exception>
      <exception cref="T:System.InvalidOperationException">基になるネイティブ <c>WebBrowser</c> への参照を取得できませんでした。</exception>
      <exception cref="T:System.Security.SecurityException">部分信頼で実行されているアプリケーションから、起点にない <see cref="T:System.Uri" /> への移動。</exception>
    </member>
    <member name="T:System.Windows.Controls.WrapPanel">
      <summary>左から右へ順に子要素を配置し、ボックスの端で改行してコンテンツを次の行へ送ります。 後続の配置は、<see cref="P:System.Windows.Controls.WrapPanel.Orientation" /> プロパティの値に応じて、上から下または右から左に向かって行われます。</summary>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.WrapPanel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.WrapPanel" /> 要素のコンテンツを配置します。</summary>
      <param name="finalSize">この要素が子要素を配置するために使用する必要がある <see cref="T:System.Windows.Size" />。</param>
      <returns>この <see cref="T:System.Windows.Size" /> 要素およびその子要素の配置後のサイズを表す <see cref="T:System.Windows.Controls.WrapPanel" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.ItemHeight">
      <summary>
        <see cref="T:System.Windows.Controls.WrapPanel" /> 内に含まれているすべての項目の高さを指定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Double" /> 内に含まれているすべての項目の均一な高さを表す <see cref="T:System.Windows.Controls.WrapPanel" />。 既定値は <see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.ItemHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.ItemWidth">
      <summary>
        <see cref="T:System.Windows.Controls.WrapPanel" /> 内に含まれているすべての項目の幅を指定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Double" /> 内に含まれているすべての項目の均一な幅を表す <see cref="T:System.Windows.Controls.WrapPanel" />。 既定値は <see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.ItemWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.WrapPanel" /> が渡される間、配置を予測して <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /> の子要素を測定します。</summary>
      <param name="constraint">超えることができない上限の <see cref="T:System.Windows.Size" />。</param>
      <returns>要素の必要サイズを表す <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.Orientation">
      <summary>子コンテンツが配置される方向を指定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 内のコンテンツの物理的な方向 (水平または垂直) を表す <see cref="T:System.Windows.Controls.WrapPanel" /> 値。 既定値は <see cref="F:System.Windows.Controls.Orientation.Horizontal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.WrapPanel.Orientation" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.CornerRadius">
      <summary>四角形の角の半径を表します。</summary>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double)">
      <summary>四角形のすべての角に同じ半径値を指定して、<see cref="T:System.Windows.CornerRadius" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="uniformRadius">四角形のすべての角に適用される半径値。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>四角形の各角に半径値を指定して、<see cref="T:System.Windows.CornerRadius" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="topLeft">左上隅の半径。</param>
      <param name="topRight">右上隅の半径。</param>
      <param name="bottomRight">右下隅の半径。</param>
      <param name="bottomLeft">左下隅の半径。</param>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomLeft">
      <summary>左下隅の半径を取得または設定します。</summary>
      <returns>左下隅の半径。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomRight">
      <summary>右下隅の半径を取得または設定します。</summary>
      <returns>右下隅の半径。 既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> が <see cref="T:System.Windows.CornerRadius" /> であり、この <see cref="T:System.Windows.CornerRadius" /> と同じ角半径値を含んでいるかどうかを判断します。</summary>
      <param name="obj">比較対象の <see cref="T:System.Object" />。</param>
      <returns>
        <paramref name="obj" /> が <see cref="T:System.Windows.CornerRadius" /> であり、この <see cref="T:System.Windows.CornerRadius" /> と同じ角半径値を含んでいる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)">
      <summary>2 つの <see cref="T:System.Windows.CornerRadius" /> 構造体を比較して、等しいかどうかを確認します。</summary>
      <param name="cornerRadius">この <see cref="T:System.Windows.CornerRadius" /> と比較する <see cref="T:System.Windows.CornerRadius" />。</param>
      <returns>
        <paramref name="cornerRadius" /> がこの <see cref="T:System.Windows.CornerRadius" /> と同じ角半径値を含んでいる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.GetHashCode">
      <summary>この <see cref="T:System.Windows.CornerRadius" /> のハッシュ コードを返します。</summary>
      <returns>この <see cref="T:System.Windows.CornerRadius" /> 構造体のハッシュ コード。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <summary>2 つの <see cref="T:System.Windows.CornerRadius" /> 構造体を比較して、等しいかどうかを確認します。</summary>
      <param name="cr1">比較対象となる最初の <see cref="T:System.Windows.CornerRadius" />。</param>
      <param name="cr2">比較対象となる 2 番目の <see cref="T:System.Windows.CornerRadius" />。</param>
      <returns>すべての角で <paramref name="cr1" /> と <paramref name="cr2" /> の値が同じ (<see cref="P:System.Windows.CornerRadius.TopLeft" />、<see cref="P:System.Windows.CornerRadius.TopRight" />、<see cref="P:System.Windows.CornerRadius.BottomLeft" />、<see cref="P:System.Windows.CornerRadius.BottomRight" /> で値が同じ) 場合は <see langword="true" />。1 つ以上の角で <paramref name="cr1" /> と <paramref name="cr2" /> の値が異なる場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <summary>2 つの <see cref="T:System.Windows.CornerRadius" /> 構造体を比較し、等しくないかどうかを確認します。</summary>
      <param name="cr1">比較対象となる最初の <see cref="T:System.Windows.CornerRadius" />。</param>
      <param name="cr2">比較対象となる 2 番目の <see cref="T:System.Windows.CornerRadius" />。</param>
      <returns>1 つ以上の角で <paramref name="cr1" /> と <paramref name="cr2" /> の値が異なる (<see cref="P:System.Windows.CornerRadius.TopLeft" />、<see cref="P:System.Windows.CornerRadius.TopRight" />、<see cref="P:System.Windows.CornerRadius.BottomLeft" />、<see cref="P:System.Windows.CornerRadius.BottomRight" /> で値が異なる) 場合は <see langword="true" />。すべての角で <paramref name="cr1" /> と <paramref name="cr2" /> の値が同じ場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.TopLeft">
      <summary>左上隅の半径を取得または設定します。</summary>
      <returns>左上隅の半径。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.TopRight">
      <summary>右上隅の半径を取得または設定します。</summary>
      <returns>右上隅の半径。 既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.ToString">
      <summary>
        <see cref="T:System.Windows.CornerRadius" /> の文字列形式を返します。</summary>
      <returns>
        <see cref="T:System.Windows.CornerRadius" /> の文字列形式。</returns>
    </member>
    <member name="T:System.Windows.CornerRadiusConverter">
      <summary>他の型のインスタンスと <see cref="T:System.Windows.CornerRadius" /> の間の変換を行います。</summary>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.CornerRadiusConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定した型から <see cref="T:System.Windows.CornerRadius" /> にオブジェクトを変換できるかどうかを示します。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報を記述します。</param>
      <param name="sourceType">変換のサポートについて照会するソースの <see cref="T:System.Type" />。</param>
      <returns>
        <see langword="true" /> の型が <paramref name="sourceType" /> の場合は <see cref="T:System.String" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.CornerRadius" /> 値を指定した型に変換できるかどうかを判断します。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報を記述します。</param>
      <param name="destinationType">この <see cref="T:System.Windows.CornerRadius" /> が変換元として評価される際に、変換先となる目的の型。</param>
      <returns>
        <paramref name="destinationType" /> の型が <see cref="T:System.String" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したオブジェクトを <see cref="T:System.Windows.CornerRadius" /> に変換します。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報を記述します。</param>
      <param name="cultureInfo">変換元の型の <see cref="T:System.Globalization.CultureInfo" /> を説明します。</param>
      <param name="source">変換されるオブジェクト。</param>
      <returns>
        <paramref name="source" /> の変換によって作成された <see cref="T:System.Windows.CornerRadius" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> は <see langword="null" /> ではなく、また、<see cref="T:System.Windows.CornerRadius" /> に変換できる有効な型でもありません。</exception>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定した <see cref="T:System.Windows.CornerRadius" /> を指定した型に変換します。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報を記述します。</param>
      <param name="cultureInfo">変換元の型の <see cref="T:System.Globalization.CultureInfo" /> を説明します。</param>
      <param name="value">変換対象の <see cref="T:System.Windows.CornerRadius" />。</param>
      <param name="destinationType">
        <see cref="T:System.Windows.CornerRadius" /> を変換した後の型。</param>
      <returns>この <see cref="T:System.Windows.CornerRadius" /> (文字列) の変換によって作成されたオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が <see langword="null" /> でも <see cref="T:System.Windows.Media.Brush" /> でもない場合。または、<paramref name="destinationType" /> が変換先の有効な型ではない場合。</exception>
    </member>
    <member name="T:System.Windows.Data.Binding">
      <summary>バインドの定義に高レベルでアクセスします。バインドは、バインド ターゲット オブジェクト (通常は、WPF 要素) のプロパティと任意のデータ ソース (データベース、XML ファイル、データを格納している任意のオブジェクトなど) とを接続します。</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.Binding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor(System.String)">
      <summary>初期化パスを使用して、<see cref="T:System.Windows.Data.Binding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">バインドのための初期 <see cref="P:System.Windows.Data.Binding.Path" />。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>
        <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 添付イベントのハンドラーを追加します。</summary>
      <param name="element">イベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">追加するハンドラー。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>
        <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 添付イベントのハンドラーを追加します。</summary>
      <param name="element">イベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">追加するハンドラー。</param>
    </member>
    <member name="P:System.Windows.Data.Binding.AsyncState">
      <summary>非同期データ ディスパッチャーに渡される非透過データを取得または設定します。</summary>
      <returns>非同期データ ディスパッチャーに渡されるデータ。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.BindsDirectlyToSource">
      <summary>
        <see cref="P:System.Windows.Data.Binding.Path" /> を評価するときに、データ項目を基準にするか、<see cref="T:System.Windows.Data.DataSourceProvider" /> オブジェクトを基準にするかを示す値を取得または設定します。</summary>
      <returns>データ項目自体を基準にしてパスを評価する場合は <see langword="false" />、それ以外の場合は <see langword="true" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Converter">
      <summary>使用するコンバーターを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.IValueConverter" />型の値。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterCulture">
      <summary>コンバーターを評価するカルチャを取得または設定します。</summary>
      <returns>既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterParameter">
      <summary>
        <see cref="P:System.Windows.Data.Binding.Converter" /> に渡すパラメーターを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Data.Binding.Converter" /> に渡すパラメーター。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Data.Binding.DoNothing">
      <summary>バインディング エンジンにアクションを実行しないように指示するために、戻り値として使用されます。</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.ElementName">
      <summary>バインド ソース オブジェクトとして使用する要素の名前を取得または設定します。</summary>
      <returns>目的の要素の <see langword="Name" /> プロパティまたは x:Name ディレクティブ の値。 コード内で要素を参照できるのは、目的の要素が <see cref="T:System.Windows.NameScope" /> を使用して適切な <see langword="RegisterName" />に登録されている場合に限ります。 詳細については、「 WPF XAML 名前スコープ」を参照してください。
既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
      <summary>指定したオブジェクトにアタッチされているバインドによって使用される XML 名前空間マネージャー オブジェクトを返します。</summary>
      <param name="target">名前空間情報の取得元となるオブジェクト。</param>
      <returns>渡されたオブジェクト要素上のバインディングに関連する XML 名前空間を表示するために使用されるオブジェクトを返します。 このオブジェクトは <see cref="T:System.Xml.XmlNamespaceManager" /> としてキャストする必要があります。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
    </member>
    <member name="F:System.Windows.Data.Binding.IndexerName">
      <summary>
        <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> の <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> として使用され、インデクサー プロパティが変更されたことを示します。</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.IsAsync">
      <summary>
        <see cref="T:System.Windows.Data.Binding" /> が値の取得と設定を非同期で行う必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Mode">
      <summary>バインドのデータ フローの方向を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingMode" /> 値のいずれか 1 つ。 既定は <see cref="F:System.Windows.Data.BindingMode.Default" /> です。これは、ターゲットの依存関係プロパティの、既定のバインド モード値を返します。 ただし、既定値は各依存関係プロパティによって異なります。 一般に、ユーザーが編集できる、テキスト ボックスやチェック ボックスなどのコントロール プロパティは既定で双方向のバインディングであり、それ以外のほとんどのプロパティは既定で一方向のバインドになります。
依存関係プロパティが既定で一方向と双方向のどちらでバインドされるかをプログラムで判断する 1 つの方法として、<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> を使用してそのプロパティのプロパティ メタデータを取得してから、<see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> プロパティのブール値を確認することがきます。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
      <summary>バインディング ターゲットからバインディング ソースへ値が転送されたときに、<see cref="E:System.Windows.Data.Binding.SourceUpdated" /> イベントを発生させるかどうかを示す値を取得または設定します。</summary>
      <returns>バインディング ソースが更新されたときに、<see cref="E:System.Windows.Data.Binding.SourceUpdated" /> イベントを発生させる必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
      <summary>バインディング ソースからバインディング ターゲットへ値が転送されたときに <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> イベントを発生させるかどうかを示す値を取得または設定します。</summary>
      <returns>バインディング ターゲットの値が更新されたときに、<see cref="E:System.Windows.Data.Binding.TargetUpdated" /> イベントを発生させる必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnValidationError">
      <summary>バインドされたオブジェクトに対して <see cref="E:System.Windows.Controls.Validation.Error" /> 添付イベントを発生させるかどうかを示す値を取得または設定します。</summary>
      <returns>ソースの更新中に検証エラーが発生したときにバインドされたオブジェクトに対して<see langword="true" /> 添付イベントを発生させる場合は <see cref="E:System.Windows.Controls.Validation.Error" /> 。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Path">
      <summary>バインディング ソース プロパティへのパスを取得または設定します。</summary>
      <returns>バインディング ソース プロパティへのパス。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.RelativeSource">
      <summary>バインディング ターゲットの位置に対して相対的な位置を指定することにより、バインディング ソースを取得または設定します。</summary>
      <returns>使用するバインディング ソースの相対的な位置を指定する <see cref="T:System.Windows.Data.RelativeSource" /> オブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>
        <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 添付イベントのハンドラーを削除します。</summary>
      <param name="element">イベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">削除するハンドラー。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>
        <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 添付イベントのハンドラーを削除します。</summary>
      <param name="element">イベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">削除するハンドラー。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
      <summary>指定した要素にアタッチされているバインドによって使用される名前空間マネージャー オブジェクトを設定します。</summary>
      <param name="target">名前空間情報の取得元となるオブジェクト。</param>
      <param name="value">渡された要素で名前空間の評価に使用する <see cref="T:System.Xml.XmlNamespaceManager" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializePath">
      <summary>
        <see cref="P:System.Windows.Data.Binding.Path" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializeSource">
      <summary>
        <see cref="P:System.Windows.Data.Binding.Source" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
      <summary>
        <see cref="P:System.Windows.Data.Binding.ValidationRules" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Source">
      <summary>バインド ソースとして使用されるオブジェクトを取得または設定します。</summary>
      <returns>バインド ソースとして使用されるオブジェクト。</returns>
    </member>
    <member name="E:System.Windows.Data.Binding.SourceUpdated">
      <summary>値がバインディング ターゲットからバインディング ソースに転送されるときに発生します。ただし、これは <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> 値が <see langword="true" /> に設定されているバインディングに限られます。</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.SourceUpdatedEvent">
      <summary>
        <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 添付イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.Data.Binding.TargetUpdated">
      <summary>値がバインディング ソースからバインディング ターゲットに転送されるときに発生します。ただし、これは <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> 値が <see langword="true" /> に設定されているバインディングに限られます。</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.TargetUpdatedEvent">
      <summary>
        <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 添付イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
      <summary>バインディング ソースの値の更新時にバインディング エンジンが検出した例外を処理するためにカスタム ロジックの提供に使用できるハンドラーを取得または設定します。 これは、バインディングに <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を関連付けている場合にのみ適用できます。</summary>
      <returns>バインディング ソースの値の更新時にバインディング エンジンが検出した例外を処理するためのカスタム ロジックを提供するメソッド。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceTrigger">
      <summary>バインディング ソースの更新のタイミングを決定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 値のいずれか。 既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /> で、ターゲット依存関係プロパティの既定の <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 値を返します。 ほとんどの依存関係プロパティの既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" /> です。ただし、<see cref="P:System.Windows.Controls.TextBox.Text" /> プロパティの既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" /> です。
プログラムを使って依存関係プロパティの既定の <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 値を確認するには、<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> を使ってプロパティのプロパティ メタデータを取得してから、<see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> プロパティの値を確認します。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
      <summary>
        <see cref="T:System.Windows.Controls.DataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnExceptions">
      <summary>
        <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を含めるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
      <summary>
        <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidationRules">
      <summary>ユーザー入力の有効性をチェックする規則のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.XmlNamespaceManager">
      <summary>XML バインディングで名前空間に対応している <see langword="XPath" /> クエリを実行するために使用される <see cref="T:System.Xml.XmlNamespaceManager" /> を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty">
      <summary>
        <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.XPath">
      <summary>使用する XML バインディング ソースの値を返す <see langword="XPath" /> クエリーを取得または設定します。</summary>
      <returns>
        <see langword="XPath" /> クエリ。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="T:System.Windows.Data.BindingBase">
      <summary>
        <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.PriorityBinding" />、および <see cref="T:System.Windows.Data.MultiBinding" /> の各クラスに共通する特性を定義します。</summary>
    </member>
    <member name="P:System.Windows.Data.BindingBase.BindingGroupName">
      <summary>そのバインディングが属している <see cref="T:System.Windows.Data.BindingGroup" /> の名前を取得または設定します。</summary>
      <returns>そのバインディングが属している <see cref="T:System.Windows.Data.BindingGroup" /> の名前。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.Delay">
      <summary>ターゲット上の値が変更された後でバインディング ソースを更新する前に待機する時間 (ミリ秒単位) を取得または設定します。</summary>
      <returns>バインディング ソースが更新されるまで待機する、ミリ秒単位の時間。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.FallbackValue">
      <summary>バインドが値を返すことができないときに使用する値を取得または設定します。</summary>
      <returns>既定値は <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> です。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
      <summary>このバインディングおよび拡張機能の適用先のプロパティに設定されるオブジェクトを返します。</summary>
      <param name="serviceProvider">マークアップ拡張機能のサービスを提供できるオブジェクト。 <see langword="null" /> である可能性があります。</param>
      <returns>バインディング ターゲット プロパティに設定する値。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
      <summary>シリアル化プロセスが、このクラスのインスタンスの <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.Data.BindingBase.FallbackValue" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue">
      <summary>
        <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> プロパティをシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.StringFormat">
      <summary>バインドされている値が文字列として表示される場合に、バインディングの書式を指定する文字列を取得または設定します。</summary>
      <returns>バインドされている値が文字列として表示される場合に、バインディングの書式を指定する文字列。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.TargetNullValue">
      <summary>ソースの値が <see langword="null" /> のときにターゲットで使用される値を取得または設定します。</summary>
      <returns>ソースの値が <see langword="null" /> のときにターゲットで使用される値。</returns>
    </member>
    <member name="T:System.Windows.Data.BindingExpression">
      <summary>
        <see cref="T:System.Windows.Data.Binding" /> の単一インスタンスに関する情報が含まれます。</summary>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.DataItem">
      <summary>この <see cref="T:System.Windows.Data.BindingExpression" /> が使用するバインド ソース オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Data.BindingExpression" /> が使用するバインド ソース オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ParentBinding">
      <summary>現在の <see cref="T:System.Windows.Data.BindingExpression" /><see cref="T:System.Windows.Data.Binding" /> オブジェクトを返します。</summary>
      <returns>現在のバインド式の <see cref="T:System.Windows.Data.Binding" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ResolvedSource">
      <summary>この <see cref="T:System.Windows.Data.BindingExpression" /> のバインディング ソース オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Data.BindingExpression" /> で使用するバインディング ソース オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName">
      <summary>この <see cref="T:System.Windows.Data.BindingExpression" /> のバインディング ソース プロパティの名前を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Data.BindingExpression" /> のバインディング ソース プロパティの名前。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="managerType">このメソッドを呼び出す <see cref="T:System.Windows.WeakEventManager" /> の型。 これは、<see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 型のマネージャー オブジェクトだけを認識します。</param>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベント データ。</param>
      <returns>リスナーがイベントを処理した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateSource">
      <summary>
        <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> または <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> バインドにあるバインディング ソースのプロパティに現在のバインディング ターゲットの値を送信します。</summary>
      <exception cref="T:System.InvalidOperationException">バインドはそのターゲットからデタッチされています。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateTarget">
      <summary>バインディング ソース プロパティからバインディング ターゲット プロパティへのデータ転送を強制的に実行します。</summary>
      <exception cref="T:System.InvalidOperationException">バインドはそのターゲットからデタッチされています。</exception>
    </member>
    <member name="T:System.Windows.Data.BindingExpressionBase">
      <summary>
        <see cref="T:System.Windows.Data.BindingExpression" />、<see cref="T:System.Windows.Data.PriorityBindingExpression" />、および <see cref="T:System.Windows.Data.MultiBindingExpression" /> の基本クラスを表します。</summary>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.BindingGroup">
      <summary>この連結式が属する <see cref="T:System.Windows.Data.BindingGroup" /> を取得します。</summary>
      <returns>このバインディング式が属する <see cref="T:System.Windows.Data.BindingGroup" />。 <see cref="T:System.Windows.Data.BindingExpressionBase" /> が <see cref="T:System.Windows.Data.BindingGroup" /> の一部ではない場合、このプロパティは <see langword="null" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.HasError">
      <summary>親のバインディングに、失敗した検証規則があるかどうかを示す値を取得します。</summary>
      <returns>親のバインディングに、失敗した検証規則がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.HasValidationError">
      <summary>親のバインディングに、失敗した検証規則があるかどうかを示す値を取得します。</summary>
      <returns>親のバインディングに、失敗した検証規則がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.IsDirty">
      <summary>バインドのターゲットがソースに書き込まれていない値を持っているかどうかを示す値を取得または設定します。</summary>
      <returns>ターゲットがソースに書き込まれていない値を持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase">
      <summary>この <see cref="T:System.Windows.Data.BindingBase" /> オブジェクトの作成元である <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Data.BindingBase" /> オブジェクトの作成元である <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.Status">
      <summary>バインディング式のステータスを取得します。</summary>
      <returns>バインディング式のステータスを示す <see cref="T:System.Windows.Data.BindingStatus" /> 値。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="managerType">このメソッドを呼び出す <see cref="T:System.Windows.WeakEventManager" /> の型。 これは、<see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 型のマネージャー オブジェクトだけを認識します。</param>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベント データ。</param>
      <returns>リスナーがイベントを処理した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.Target">
      <summary>このバインディング式のバインディング ターゲット オブジェクトである要素を取得します。</summary>
      <returns>このバインディング式のバインディング ターゲット オブジェクトである要素。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.TargetProperty">
      <summary>このバインディング式のバインディング ターゲット プロパティを取得します。</summary>
      <returns>このバインディング式のバインディング ターゲット プロパティ。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.UpdateSource">
      <summary>
        <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> または <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> バインドにあるバインディング ソースに現在のバインディング ターゲットの値を送信します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.UpdateTarget">
      <summary>バインディング ソースからバインディング ターゲットへのデータ転送を強制的に実行します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationRule" /> プロパティが <see cref="T:System.Windows.Data.Binding" /> または <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> に設定されている任意の <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> オブジェクトを、関連する <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> に実行します。 このメソッドはソースを更新しません。</summary>
      <returns>検証ルールが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ValidationError">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationError" /> のこのインスタンスが無効になる原因となった <see cref="T:System.Windows.Data.BindingExpressionBase" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationError" /> のこのインスタンスが無効になる原因となった <see cref="T:System.Windows.Data.BindingExpressionBase" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ValidationErrors">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationError" /> のこのインスタンスが無効になる原因となった <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationError" /> のこのインスタンスが無効になる原因となった <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトのコレクション。  エラーがない場合、値は <see langword="null" /> です。</returns>
    </member>
    <member name="T:System.Windows.Data.BindingGroup">
      <summary>あるオブジェクトの検証に使用されるバインディングと <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトのコレクションを格納します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.BindingGroup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.BeginEdit">
      <summary>
        <see cref="T:System.Windows.Data.BindingGroup" /> 内のソースに対する編集トランザクションを開始します。</summary>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.BindingExpressions">
      <summary>
        <see cref="T:System.Windows.Data.BindingExpression" /> 内の各バインディングに対する情報を格納する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingExpression" /> 内の各バインディングに対する情報を格納する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.CancelEdit">
      <summary>編集トランザクションを終了し、保留中の変更を破棄します。</summary>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.CanRestoreValues">
      <summary>バインディングの各ソースが保留中の変更を破棄して元の値を復元できるかどうかを取得します。</summary>
      <returns>バインディングの各ソースが保留中の変更を破棄して元の値を復元できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.CommitEdit">
      <summary>すべての <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトを実行し、すべての検証ルールが成功した場合はバインディング ソースを更新します。</summary>
      <returns>すべての <see cref="T:System.Windows.Controls.ValidationRule" /> が成功して値がソースにコミットされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
      <summary>指定されているプロパティと項目に対して提示されている値を返します。</summary>
      <param name="item">指定されているプロパティを含むオブジェクト。</param>
      <param name="propertyName">提示されている値を取得するプロパティ。</param>
      <returns>提示されているプロパティ値。</returns>
      <exception cref="T:System.InvalidOperationException">指定されている項目とプロパティにはバインディングがありません。</exception>
      <exception cref="T:System.Windows.Data.ValueUnavailableException">変換エラーまたは前の検証ルールが失敗したために、指定されているプロパティの値は使用できません。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.HasValidationError">
      <summary>
        <see cref="T:System.Windows.Data.BindingGroup" /> のバインディングに失敗した検証規則があるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingGroup" /> に失敗した検証規則がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.IsDirty">
      <summary>
        <see cref="T:System.Windows.Data.BindingGroup" /> がソースに書き込まれていない提案された値を含んでいるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingGroup" /> がソースに書き込まれていない提案される値を含む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Items">
      <summary>
        <see cref="T:System.Windows.Data.BindingGroup" /> 内のバインディング オブジェクトが使用するソースを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingGroup" /> 内のバインディング オブジェクトが使用するソース。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Name">
      <summary>
        <see cref="T:System.Windows.Data.BindingGroup" /> を示す名前を取得または設定します。<see cref="T:System.Windows.Data.BindingGroup" /> ではこの名前を使用して、バインディング オブジェクトを含めたり除外したりできます。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingGroup" /> を示す名前。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.NotifyOnValidationError">
      <summary>
        <see cref="E:System.Windows.Controls.Validation.Error" /> の状態が変化したときに <see cref="T:System.Windows.Controls.ValidationRule" /> イベントが発生するかどうかを取得または設定します。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Validation.Error" /> の状態が変化すると <see cref="T:System.Windows.Controls.ValidationRule" /> イベントが発生する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Owner">
      <summary>この <see cref="T:System.Windows.Data.BindingGroup" /> が割り当てられているオブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Data.BindingGroup" /> が割り当てられているオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.SharesProposedValues">
      <summary>
        <see cref="T:System.Windows.Data.BindingGroup" /> がソースにコミットされていないターゲット値を再利用するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingGroup" /> がソースにコミットされていないターゲット値を再利用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
      <summary>指定されているプロパティと項目に対して提示されている値の取得を試みます。</summary>
      <param name="item">指定されているプロパティを含むオブジェクト。</param>
      <param name="propertyName">提示されている値を取得するプロパティ。</param>
      <param name="value">このメソッドが返るときには、提示されているプロパティ値を表すオブジェクトを格納しています。 このパラメーターは初期化せずに渡されます。</param>
      <returns>値が指定されたプロパティの提示されている値である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.UpdateSources">
      <summary>バインディングおよび <see cref="T:System.Windows.Controls.ValidationRule" /> プロパティが <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" />、<see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />、または <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> に設定されている <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> オブジェクトに対してコンバーターを実行し、すべての検証ルールが成功した場合は、ターゲットの値をソース オブジェクトに保存します。</summary>
      <returns>すべての検証ルールが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError">
      <summary>
        <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate">
      <summary>バインディングおよび <see cref="T:System.Windows.Controls.ValidationRule" /> プロパティが <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> または <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> に設定されている <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> オブジェクトに対し、コンバーターを実行します。</summary>
      <returns>検証ルールが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidationErrors">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationError" /> を無効にした <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationError" /> を無効にした <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。  エラーがない場合、値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidationRules">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationRule" /> 内のソース オブジェクトを検証する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationRule" /> 内のソース オブジェクトを検証する <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="T:System.Windows.Data.BindingListCollectionView">
      <summary>Microsoft ActiveX データ オブジェクト (ADO) データ ビューなど、<see cref="T:System.ComponentModel.IBindingList" /> を実装するコレクションの <see cref="T:System.Windows.Data.CollectionView" /> を表します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.#ctor(System.ComponentModel.IBindingList)">
      <summary>指定したリストについて、<see cref="T:System.Windows.Data.BindingListCollectionView" /> のインスタンスを初期化します。</summary>
      <param name="list">基になる <see cref="T:System.ComponentModel.IBindingList" />。</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.AddNew">
      <summary>追加トランザクションを開始し、保留中の新しい項目を返します。</summary>
      <returns>保留中の新しい項目。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanAddNew">
      <summary>新しい項目をコレクションに追加できるかどうかを示す値を取得します。</summary>
      <returns>新しい項目をコレクションに追加できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanCancelEdit">
      <summary>コレクション ビューが保留中の変更を破棄して、編集されたオブジェクトの元の値を復元できるかどうかを示す値を取得します。</summary>
      <returns>コレクション ビューが保留中の変更を破棄して、編集されたオブジェクトの元の値を復元できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CancelEdit">
      <summary>編集トランザクションを終了し、可能な場合は、項目の元の値を復元します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CancelNew">
      <summary>追加トランザクションを終了し、保留中の新しい項目を破棄します。</summary>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveFiltering">
      <summary>このビューがリアルタイムのデータのフィルター選択のオンまたはオフをサポートするかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveGrouping">
      <summary>このビューがリアルタイムのデータのグループ化のオンまたはオフをサポートするかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveSorting">
      <summary>このビューがリアルタイムのデータの並べ替えのオンまたはオフをサポートするかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanCustomFilter">
      <summary>ビューがカスタム フィルター処理をサポートするかどうかを示す値を取得します。</summary>
      <returns>ビューがカスタム フィルター処理をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanFilter">
      <summary>ビューがコールバックを使用したフィルター処理をサポートするかどうかを示す値を取得します。</summary>
      <returns>このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanGroup">
      <summary>ビューがグループ化をサポートするかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingListCollectionView" /> の既定インスタンスに対して、このプロパティは常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanRemove">
      <summary>コレクションから項目を削除できるかどうかを示す値を取得します。</summary>
      <returns>コレクションから項目を削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanSort">
      <summary>コレクションが並べ替えをサポートするかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingListCollectionView" /> の既定インスタンスに対して、このプロパティは常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CommitEdit">
      <summary>編集トランザクションを終了し、保留中の変更を保存します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CommitNew">
      <summary>追加トランザクションを終了し、保留中の新しい項目を保存します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.Contains(System.Object)">
      <summary>特定の項目がコレクション ビューに属しているかどうかを示す値を返します。</summary>
      <param name="item">確認する対象のオブジェクト。</param>
      <returns>項目がコレクション ビューに属している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.Count">
      <summary>コレクション内のレコードの推定数を取得します。</summary>
      <returns>次のいずれかになります。
  [値]  
  
  説明  
  
  -1  
  
  コレクションの数を決定できませんでした。 これは、"仮想化" ビューから返される場合があります。仮想化ビューでは、効率を向上させ、コレクション全体が常に利用可能であることにできるだけ依存しないようにするために、基になるコレクション内のすべての項目が意図的に考慮されません。  
  
  その他の任意の整数  
  
  コレクションの数。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CurrentAddItem">
      <summary>現在の追加トランザクション処理中に追加される項目を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsAddingNew" /> が <see langword="true" /> の場合は追加される項目。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CurrentEditItem">
      <summary>編集されているコレクション内の項目を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> が <see langword="true" /> である場合は、編集されているコレクション内の項目。それ以外の場合は、<see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CustomFilter">
      <summary>カスタム フィルターを取得また設定します。</summary>
      <returns>項目をフィルター処理する方法を指定する文字列。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.DetachFromSourceCollection">
      <summary>基になるコレクションをこのコレクション ビューからデタッチして、コレクション ビューをガベージ コレクトできるようにします。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.EditItem(System.Object)">
      <summary>指定した項目の編集トランザクションを開始します。</summary>
      <param name="item">編集する項目。</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.GetItemAt(System.Int32)">
      <summary>ビュー内の指定された位置にある項目を取得します。</summary>
      <param name="index">項目の位置を示す、0 から始まるインデックス。</param>
      <returns>ビュー内の指定された位置にある項目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が範囲外である場合。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.GroupBySelector">
      <summary>
        <see cref="T:System.ComponentModel.GroupDescription" /> を選択するためのデリゲートを、親グループおよびそのレベルの関数として取得または設定します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.GroupDescription" /> を選択するためのロジックを、親グループおよびそのレベルの関数として提供するメソッド。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.GroupDescriptions">
      <summary>コレクション内の項目をビュー内でどのようにグループ化するかを記述する <see cref="T:System.ComponentModel.GroupDescription" /> オブジェクトのコレクションを取得します。</summary>
      <returns>コレクション内の項目をビュー内でどのようにグループ化するかを記述する <see cref="T:System.ComponentModel.GroupDescription" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.Groups">
      <summary>トップレベル グループを取得します。</summary>
      <returns>トップレベル グループの読み取り専用コレクション。グループがない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.IndexOf(System.Object)">
      <summary>コレクション ビューでの特定の項目の位置を示すインデックスを返します。</summary>
      <param name="item">コレクション内で検索されるオブジェクト。</param>
      <returns>コレクション内の項目のインデックス。項目がコレクション ビュー内に存在しない場合は <c>-1</c>。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsAddingNew">
      <summary>追加トランザクションが実行中かどうかを示す値を取得します。</summary>
      <returns>追加トランザクションが実行中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsDataInGroupOrder">
      <summary>項目の一覧 (並べ替えやフィルター処理の後) が正しい順序でグループ化されているかどうかを示す値を取得または設定します。</summary>
      <returns>項目の一覧が既に正しい順序でグループ化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsEditingItem">
      <summary>編集トランザクションが実行中かどうかを示す値を取得します。</summary>
      <returns>編集トランザクションが実行中である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsEmpty">
      <summary>結果の (フィルター処理された) ビューが空かどうかを示す値を返します。</summary>
      <returns>結果のビューが空である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsLiveFiltering">
      <summary>リアルタイムでのデータのフィルター処理が有効かどうかを示す値を取得または設定します。</summary>
      <returns>リアルタイムのデータのフィルター選択が有効になっている場合は <see langword="true" />。ライブ フィルター選択が有効になっていない場合は <see langword="false" />。コレクション ビューがライブ フィルター処理を実装しているかどうかを特定できない場合は <see langword="null" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsLiveFiltering" /> は設定できません。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsLiveGrouping">
      <summary>リアルタイムでのデータのグループ化が有効かどうかを示す値を取得または設定します。</summary>
      <returns>リアルタイムのデータのグループ化が有効になっている場合は <see langword="true" />。ライブ グループ化が有効になっていない場合は <see langword="false" />。コレクション ビューがライブ グループ化を実装しているかどうかを特定できない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsLiveGrouping" /> は <see langword="null" /> に設定できません。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsLiveSorting">
      <summary>リアルタイムでのデータの並べ替えが有効かどうかを示す値を取得または設定します。</summary>
      <returns>リアルタイムのデータの並べ替えが有効になっている場合は <see langword="true" />。ライブ並べ替えが有効になっていない場合は <see langword="false" />。コレクション ビューがライブ並べ替えを実装しているかどうかを特定できない場合は <see langword="null" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsLiveSorting" /> は設定できません。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.ItemProperties">
      <summary>コレクション内の項目のプロパティを記述するオブジェクトのコレクションを取得します。</summary>
      <returns>コレクション内の項目のプロパティを記述するオブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.LiveFilteringProperties">
      <summary>リアルタイムのデータのフィルター選択に関係するプロパティを指定する文字列のコレクションを取得します。</summary>
      <returns>リアルタイムのデータのフィルター選択に関係するプロパティを指定する文字列のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.LiveGroupingProperties">
      <summary>リアルタイムのデータのグループ化に関係するプロパティを指定する文字列のコレクションを取得します。</summary>
      <returns>リアルタイムのデータのグループ化に関係するプロパティを指定する文字列のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.LiveSortingProperties">
      <summary>リアルタイムのデータの並べ替えに関係するプロパティを指定する文字列のコレクションを取得します。</summary>
      <returns>リアルタイムのデータの並べ替えに関係するプロパティを指定する文字列のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>指定したインデックスにある項目を、ビュー内の <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> になるように設定します。</summary>
      <param name="position">
        <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> に設定するインデックス。</param>
      <returns>結果として得られる <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がビュー内の項目である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">インデックスが範囲外である場合にスローされます。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.NewItemPlaceholderPosition">
      <summary>
        <see cref="T:System.Windows.Data.BindingListCollectionView" /> にある新しい項目プレースホルダーの位置を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingListCollectionView" /> にある新しい項目プレースホルダーの位置を指定する列挙値の 1 つ。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.PassesFilter(System.Object)">
      <summary>基になるコレクション内の指定した項目がビューに属しているかどうかを示す値を返します。</summary>
      <param name="item">確認する項目。</param>
      <returns>指定の項目がビューに属している場合、またはコレクション ビューにフィルターが設定されていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.Remove(System.Object)">
      <summary>指定した項目をコレクションから削除します。</summary>
      <param name="item">削除する項目。</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.RemoveAt(System.Int32)">
      <summary>コレクション内の指定した位置にある項目を削除します。</summary>
      <param name="index">削除する項目の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満か、コレクション ビューに含まれる項目数を上回っています。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.SortDescriptions">
      <summary>コレクション内の項目をビュー内でどのように並べ替えるかを説明する <see cref="T:System.ComponentModel.SortDescription" /> オブジェクトのコレクションを取得します。</summary>
      <returns>コレクション内の項目をビュー内でどのように並べ替えるかを記述する <see cref="T:System.ComponentModel.SortDescription" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="o1">比較する 1 つ目のオブジェクト。</param>
      <param name="o2">比較する 2 つ目のオブジェクト。</param>
      <returns>
        <paramref name="o1" /> が <paramref name="o2" /> 未満の場合は負の値。等しい場合はゼロ。<paramref name="o1" /> が <paramref name="o2" /> を超える場合は正の値。</returns>
    </member>
    <member name="T:System.Windows.Data.BindingMode">
      <summary>バインディングのデータ フローの方向を記述します。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.Default">
      <summary>バインディング ターゲットの既定の <see cref="P:System.Windows.Data.Binding.Mode" /> 値を使用します。 既定値は、各依存関係プロパティによって異なります。 一般に、ユーザーが編集できる、テキスト ボックスやチェック ボックスなどのコントロール プロパティは既定で双方向のバインディングであり、それ以外のほとんどのプロパティは既定で一方向のバインドになります。 依存関係プロパティが既定で一方向と双方向のどちらでバインドされるかをプログラムで判断する 1 つの方法として、<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> を使用してそのプロパティのプロパティ メタデータを取得してから、<see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> プロパティのブール値を確認することがきます。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneTime">
      <summary>アプリケーションの起動時またはデータ コンテキストの変更時にバインディング ターゲットを更新します。 この型のバインディングは、現在の状態のスナップショットが用途に合っている場合や、データが完全に静的である場合に適しています。 また、ソース プロパティの値を使用してターゲット プロパティを初期化するときにデータ コンテキストが事前にわからない場合にも、この型のバインディングは便利です。 基本的に、この型のバインディングは、ソース値が変わらない場合にパフォーマンスを向上させる <see cref="F:System.Windows.Data.BindingMode.OneWay" /> バインディングを簡易化したものです。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWay">
      <summary>バインディング ソース (ソース) の変更時にバインディング ターゲット (ターゲット) プロパティが更新されます。 この型のバインディングは、バインドされているコントロールが暗黙的な読み取り専用の場合に適しています。 たとえば、株価情報などのソースにバインドする場合です。 また、ターゲット プロパティには、データ バインドされたテーブルの背景色などのように、変更用コントロール インターフェイスがない可能性もあります。 ターゲット プロパティの変更を監視する必要がない場合は、<see cref="F:System.Windows.Data.BindingMode.OneWay" /> バインディング モードを使うことにより、<see cref="F:System.Windows.Data.BindingMode.TwoWay" /> バインディング モードのオーバーヘッドを回避できます。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWayToSource">
      <summary>ターゲット プロパティが変更されると、ソース プロパティを更新します。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.TwoWay">
      <summary>ソース プロパティまたはターゲット プロパティのいずれかが変更され、もう一方も自動的に更新されます。 この型のバインディングは、編集可能なフォームや完全対話型の UI シナリオに適しています。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingOperations">
      <summary>
        <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" />、<see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトなどのバインディングを操作するための静的メソッドを提供します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
      <summary>EnableCollectionSynchronization を呼び出したときに指定されるアプリケーション同期機構を使用してコレクションへのアクセスを提供します。</summary>
      <param name="collection">アクセスするコレクション。</param>
      <param name="accessMethod">コレクション上で実行するアクション。</param>
      <param name="writeAccess">
        <paramref name="accessMethod" /> がコレクションに記述する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
      <summary>種類が <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" />、および <see cref="T:System.Windows.Data.PriorityBinding" /> のバインﾄﾞを含むすべてのバインドを、指定した <see cref="T:System.Windows.DependencyObject" /> から削除します。</summary>
      <param name="target">バインディングが削除されるオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>プロパティからバインドを削除します (存在する場合)。</summary>
      <param name="target">バインドを削除するオブジェクト。</param>
      <param name="dp">バインドを削除する依存関係プロパティ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</exception>
    </member>
    <member name="E:System.Windows.Data.BindingOperations.CollectionRegistering">
      <summary>データ バインディングのシステムがコレクションを確認すると発生します。</summary>
    </member>
    <member name="E:System.Windows.Data.BindingOperations.CollectionViewRegistering">
      <summary>データ バインディングのシステムがコレクション ビューを確認すると発生します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
      <summary>指定されたコレクションについて登録されている同期を削除します。</summary>
      <param name="collection">同期アクセスを削除するコレクション。</param>
    </member>
    <member name="P:System.Windows.Data.BindingOperations.DisconnectedSource">
      <summary>項目コンテナーがビジュアル ツリーから削除された場合に <see cref="P:System.Windows.FrameworkElement.DataContext" /> を置換するオブジェクトを取得します。</summary>
      <returns>項目コンテナーがビジュアル ツリーから削除された場合に <see cref="P:System.Windows.FrameworkElement.DataContext" /> を置換するオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
      <summary>
        <see cref="T:System.Windows.Data.CollectionView" /> オブジェクトが、単純なロック メカニズムを使用して複数のスレッドで使用されるコレクションへの同期アクセスに参加できるようにします。</summary>
      <param name="collection">同期アクセスが必要なコレクション。</param>
      <param name="lockObject">コレクションにアクセスするときにロックするオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
      <summary>
        <see cref="T:System.Windows.Data.CollectionView" /> オブジェクトが、単純なロック以外のメカニズムを使用して複数のスレッドで使用されるコレクションへの同期アクセスに参加できるようにします。</summary>
      <param name="collection">同期アクセスが必要なコレクション。</param>
      <param name="context">コールバックに渡されるオブジェクト。</param>
      <param name="synchronizationCallback">コレクションへのアクセスが必要なときに呼び出されるコールバック。 これを使用して、一度に 1 つのスレッドでコレクションにアクセスできるようにします。</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>指定したプロパティに設定されている <see cref="T:System.Windows.Data.Binding" /> オブジェクトを取得します。</summary>
      <param name="target">
        <paramref name="dp" /> が存在するオブジェクト。</param>
      <param name="dp">バインディングの取得元となるバインディング ターゲット プロパティ。</param>
      <returns>指定したプロパティに設定された <see cref="T:System.Windows.Data.Binding" /> オブジェクト。<see cref="T:System.Windows.Data.Binding" /> オブジェクトが設定されていない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターに null を指定することはできません。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>指定したプロパティに設定されている <see cref="T:System.Windows.Data.BindingBase" /> オブジェクトを取得します。</summary>
      <param name="target">
        <paramref name="dp" /> が存在するオブジェクト。</param>
      <param name="dp">
        <see cref="T:System.Windows.Data.BindingBase" /> オブジェクトを取得するバインディング ターゲット プロパティ。</param>
      <returns>指定したプロパティに設定された <see cref="T:System.Windows.Data.BindingBase" /> オブジェクト。バインディング オブジェクトが設定されていない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>指定されたオブジェクト上の指定されたバインディング ターゲット プロパティに関連付けられた <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトを返します。</summary>
      <param name="target">
        <paramref name="dp" /> が存在するバインディング ターゲット オブジェクト。</param>
      <param name="dp">
        <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</param>
      <returns>特定のプロパティに関連付けられている <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクト、または存在しない場合は <see langword="null" />。 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクトがプロパティに設定されている場合は、<see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> が返されます。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>指定したプロパティに設定されている <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトを取得します。</summary>
      <param name="target">
        <paramref name="dp" /> が存在するオブジェクト。</param>
      <param name="dp">
        <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトを取得するバインディング ターゲット プロパティ。</param>
      <returns>指定したプロパティに設定された <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクト。バインディング オブジェクトが設定されていない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターに null を指定することはできません。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>指定したプロパティに設定されている <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトを取得します。</summary>
      <param name="target">
        <paramref name="dp" /> が存在するオブジェクト。</param>
      <param name="dp">バインディングの取得元となるバインディング ターゲット プロパティ。</param>
      <returns>指定したプロパティに設定された <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクト。<see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトが設定されていない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターに null を指定することはできません。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>指定されたオブジェクト上の指定されたバインディング ターゲット プロパティに関連付けられた <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトを返します。</summary>
      <param name="target">
        <paramref name="dp" /> が存在するバインディング ターゲット オブジェクト。</param>
      <param name="dp">
        <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</param>
      <returns>特定のプロパティに関連付けられている <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクト、または存在しない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>指定したプロパティに設定されている <see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトを取得します。</summary>
      <param name="target">
        <paramref name="dp" /> が存在するオブジェクト。</param>
      <param name="dp">バインディングの取得元となるバインディング ターゲット プロパティ。</param>
      <returns>指定したプロパティに設定された <see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクト。<see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトが設定されていない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターに null を指定することはできません。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>指定されたオブジェクト上の指定されたバインディング ターゲット プロパティに関連付けられた <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクトを返します。</summary>
      <param name="target">
        <paramref name="dp" /> が存在するバインディング ターゲット オブジェクト。</param>
      <param name="dp">
        <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクトの取得元となるバインディング ターゲット プロパティ。</param>
      <returns>特定のプロパティに関連付けられている <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクト、または存在しない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> パラメーターと <paramref name="dp" /> パラメーターを <see langword="null" /> にすることはできません。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
      <summary>無効な値がある、またはターゲット値がソースを更新していない <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトをすべて取得します。</summary>
      <param name="root">バインディング グループを取得するためのルート <see cref="T:System.Windows.UIElement" />。  このメソッドは、この要素または子孫要素に関連付けられた <see cref="T:System.Windows.Data.BindingGroup" /> のオブジェクトを戻します。</param>
      <returns>指定された要素に関連付けられ、無効な値を持つかターゲット値がソースを更新していない <see cref="T:System.Windows.Data.BindingGroup" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
      <summary>無効な値がある、またはターゲット値がソースを更新していない <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトをすべて取得します。</summary>
      <param name="root">バインディング グループを取得するためのルート <see cref="T:System.Windows.UIElement" />。  このメソッドは、この要素または子孫要素に関連付けられた <see cref="T:System.Windows.Data.BindingExpressionBase" /> のオブジェクトを戻します。</param>
      <returns>指定された要素に関連付けられ、無効な値を持つかターゲット値がソースを更新していない <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>指定したプロパティが現在データ バインドされているかどうかを示す値を返します。</summary>
      <param name="target">
        <paramref name="dp" /> が存在するオブジェクト。</param>
      <param name="dp">照合する対象の依存関係プロパティ。</param>
      <returns>指定したプロパティがデータ バインドされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>
        <see cref="T:System.Windows.Data.BindingExpressionBase" /> の新しいインスタンスを作成し、指定したバインディング ターゲット プロパティと関連付けます。</summary>
      <param name="target">バインディングのバインディング ターゲット。</param>
      <param name="dp">バインディングのターゲット プロパティ。</param>
      <param name="binding">バインディングを記述する <see cref="T:System.Windows.Data.BindingBase" /> オブジェクト。</param>
      <returns>指定したプロパティに対して作成され関連付けられた <see cref="T:System.Windows.Data.BindingExpressionBase" /> のインスタンス。 <see cref="T:System.Windows.Data.BindingExpressionBase" /> クラスは、<see cref="T:System.Windows.Data.BindingExpression" />､<see cref="T:System.Windows.Data.MultiBindingExpression" />、および <see cref="T:System.Windows.Data.PriorityBindingExpression" /> の基底クラスです。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
    </member>
    <member name="T:System.Windows.Data.BindingStatus">
      <summary>バインドのステータスを記述します。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Active">
      <summary>バインドは正常にアクティブ化されています。 つまり、バインドは、バインディング ターゲット (ターゲット) プロパティにアタッチされ、バインディング ソース (ソース) を位置指定し、<see langword="Path" /> および/または <see langword="XPath" /> を解決し、値の転送を開始しました。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.AsyncRequestPending">
      <summary>バインドは、非同期操作が完了するのを待機しています。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Detached">
      <summary>バインドはターゲット プロパティからデタッチされています。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Inactive">
      <summary>バインドはアクティブ化されていません。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.PathError">
      <summary>バインドは、ソース パスを解決できませんでした。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Unattached">
      <summary>バインドはまだターゲット プロパティにアタッチされていません。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.UpdateSourceError">
      <summary>バインドは、ソース プロパティに値を送信できませんでした。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.UpdateTargetError">
      <summary>バインドは、ターゲット値を更新するために、ソース値を正常に返すことができませんでした。 詳細については、「<see cref="P:System.Windows.Data.BindingBase.FallbackValue" />」を参照してください。</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionContainer">
      <summary>
        <see cref="T:System.Windows.Data.CompositeCollection" /> 内部で使用される、<see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> または <see cref="T:System.Data.DataSet" /> などの既存のコレクション構造を保持します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.CollectionContainer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionContainer.Collection">
      <summary>追加するコレクションを取得または設定します。</summary>
      <returns>追加するコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionContainer.CollectionChanged">
      <summary>格納されているコレクションが変更されると発生します。</summary>
    </member>
    <member name="F:System.Windows.Data.CollectionContainer.CollectionProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.OnContainedCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Data.CollectionContainer.CollectionChanged" /> イベントを発生させます。</summary>
      <param name="args">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>中央のイベント テーブルにあるイベントを処理します。</summary>
      <param name="managerType">このメソッドを呼び出す <see cref="T:System.Windows.WeakEventManager" /> の型。 これは、<see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 型のマネージャー オブジェクトだけを認識します。</param>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
      <returns>リスナーがイベントを処理した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.ShouldSerializeCollection">
      <summary>
        <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionContainer.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>格納されているコレクションが変更されると発生します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="managerType">このメソッドを呼び出す <see cref="T:System.Windows.WeakEventManager" /> の型。 これは、<see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 型のマネージャー オブジェクトだけを認識します。</param>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベント データ。</param>
      <returns>リスナーがイベントを処理した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Data.CollectionRegisteringEventArgs">
      <summary>
        <see cref="E:System.Windows.Data.BindingOperations.CollectionRegistering" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionRegisteringEventArgs.Collection">
      <summary>スレッド間のアクセスのために登録されるコレクションを取得します。</summary>
      <returns>スレッド間のアクセスのために登録されるコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionRegisteringEventArgs.Parent">
      <summary>登録するコレクションの親を取得します。</summary>
      <returns>登録するコレクションの親。</returns>
    </member>
    <member name="T:System.Windows.Data.CollectionSynchronizationCallback">
      <summary>クロススレッド アクセスの収集を同期するメソッドを表します。</summary>
      <param name="collection">作成したスレッド以外のスレッドへアクセスするコレクション。</param>
      <param name="context">コレクションを同期するために使用されるオブジェクト。</param>
      <param name="accessMethod">コレクションで操作を実行するメソッドへのデリゲート。</param>
      <param name="writeAccess">
        <paramref name="accessMethod" /> がコレクションに記述する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.Windows.Data.CollectionView">
      <summary>データ コレクションをグループ化、並べ替え、フィルター処理、移動するためのビューを表します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)">
      <summary>指定されたコレクションのビューを表す、<see cref="T:System.Windows.Data.CollectionView" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="collection">基になるコレクション。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges">
      <summary>
        <see cref="T:System.Windows.Data.CollectionView" /> を作成したスレッド以外のスレッドが <see cref="P:System.Windows.Data.CollectionView.SourceCollection" /> を変更できるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.CollectionView" /> を作成したスレッド以外のスレッドが <see cref="P:System.Windows.Data.CollectionView.SourceCollection" /> を変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanFilter">
      <summary>ビューがフィルター処理をサポートするかどうかを示す値を取得します。</summary>
      <returns>ビューでフィルター処理がサポートされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanGroup">
      <summary>ビューがグループ化をサポートするかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanSort">
      <summary>ビューが並べ替えをサポートするかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ClearChangeLog">
      <summary>保留状態の変更を変更ログから消去します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ClearPendingChanges">
      <summary>コレクションに対する未処理の変更をクリアします。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CollectionChanged">
      <summary>ビューが変更された場合に発生します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Comparer">
      <summary>ビュー内の項目を比較するために使用できるオブジェクトを返します。</summary>
      <returns>ビュー内の項目を比較するために使用できる <see cref="T:System.Collections.IComparer" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.Contains(System.Object)">
      <summary>指定された項目がビューに属しているかどうかを示す値を返します。</summary>
      <param name="item">確認する対象のオブジェクト。</param>
      <returns>項目がビューに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Count">
      <summary>ビュー内のレコードの数を取得します。</summary>
      <returns>ビュー内のレコードの数。レコードの数が不明の場合は-1。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Culture">
      <summary>並べ替え中に使用するカルチャ情報を取得または設定します。</summary>
      <returns>並べ替え中に使用されるカルチャ情報。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CurrentChanged">
      <summary>
        <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> が変更された後に発生します。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CurrentChanging">
      <summary>
        <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> が変更されているときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CurrentItem">
      <summary>ビュー内の現在の項目を取得します。</summary>
      <returns>ビューの現在の項目。 既定では、コレクションの最初の項目が現在のアイテムとして開始します。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CurrentPosition">
      <summary>ビュー (オプションで並べ替えおよびフィルター処理されたビュー) 内の <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> の位置を表す序数を取得します。</summary>
      <returns>ビュー (オプションで並べ替えおよびフィルター処理されたビュー) 内の <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> の位置を表す序数。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.DeferRefresh">
      <summary>ビューの変更をマージして自動更新を遅延させるために使用できる遅延サイクルを入力します。</summary>
      <returns>呼び出し元のオブジェクトを破棄するために使用できる <see cref="T:System.IDisposable" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.DetachFromSourceCollection">
      <summary>基になるコレクションの参照を <see cref="T:System.Windows.Data.CollectionView" /> から削除します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Filter">
      <summary>項目をビューに含めることが適切であるかどうかを決定するために使用されるメソッドを取得または設定します。</summary>
      <returns>項目をビューに含めることが適切であるかどうかを決定するために使用されるメソッドを表すデリゲート。</returns>
      <exception cref="T:System.NotSupportedException">現在の実装ではフィルター処理をサポートしていません。</exception>
    </member>
    <member name="M:System.Windows.Data.CollectionView.GetEnumerator">
      <summary>ビュー内の項目を列挙するために使用できるオブジェクトを返します。</summary>
      <returns>ビュー内の項目を列挙するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.GetItemAt(System.Int32)">
      <summary>ビュー内の、0 から始まる指定されたインデックス位置にある項目を取得します。</summary>
      <param name="index">取得する項目の 0 から始まるインデックス。</param>
      <returns>ビュー内の、0 から始まる指定されたインデックス位置にある項目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満です。</exception>
    </member>
    <member name="P:System.Windows.Data.CollectionView.GroupDescriptions">
      <summary>コレクション内の項目をビュー内でどのようにグループ化するかを説明する <see cref="T:System.ComponentModel.GroupDescription" /> オブジェクトのコレクションを取得します。</summary>
      <returns>常に <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Groups">
      <summary>
        <see cref="P:System.Windows.Data.CollectionView.GroupDescriptions" /> プロパティに従って構築されるトップレベル グループのコレクションを取得します。</summary>
      <returns>常に <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.IndexOf(System.Object)">
      <summary>指定した項目の位置を示すインデックスを返します。</summary>
      <param name="item">検索する項目。</param>
      <returns>指定した項目の位置を示すインデックス。項目が不明の場合は -1。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentAfterLast">
      <summary>ビューの <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がコレクションの末尾を越えるかどうかを示す値を取得します。</summary>
      <returns>ビューの <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がコレクションの末尾を越える場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst">
      <summary>ビューの <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がコレクションの先頭より前にあるかどうかを示す値を取得します。</summary>
      <returns>ビューの <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がコレクションの先頭より前にある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentInSync">
      <summary>
        <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> が <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> にあるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がビュー内の <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsDynamic">
      <summary>基になるコレクションが変更通知機能を持つかどうかを示す値を取得します。</summary>
      <returns>基になるコレクションが変更通知機能を持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsEmpty">
      <summary>結果の (フィルター処理された) ビューが空かどうかを示す値を取得します。</summary>
      <returns>結果のビューが空の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsInUse">
      <summary>この <see cref="T:System.Windows.Data.CollectionView" /> オブジェクトのイベントをサブスクライブしているオブジェクトがあるかどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Data.CollectionView" /> のイベントをサブスクライブしているオブジェクトがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsRefreshDeferred">
      <summary>保留状態の <see cref="M:System.Windows.Data.CollectionView.DeferRefresh" /> が使用されているかどうかを示す値を取得します。</summary>
      <returns>保留状態の <see cref="M:System.Windows.Data.CollectionView.DeferRefresh" /> が使用されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)">
      <summary>指定された項目をビュー内の <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> に設定します。</summary>
      <param name="item">
        <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> として設定する項目。</param>
      <returns>結果として得られる <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がビュー内にある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToFirst">
      <summary>ビュー内の最初の項目が <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> になるように設定します。</summary>
      <returns>結果として得られる <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がビュー内の項目である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToLast">
      <summary>ビュー内の最後の項目が <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> になるように設定します。</summary>
      <returns>結果として得られる <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がビュー内の項目である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToNext">
      <summary>ビュー内の <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> の後の項目を <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> として設定します。</summary>
      <returns>結果として得られる <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がビュー内の項目である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>指定したインデックスにある項目を、ビュー内の <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> になるように設定します。</summary>
      <param name="position">
        <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> に設定するインデックス。</param>
      <returns>結果として得られる <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がビュー内の項目である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious">
      <summary>ビュー内の <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> の前の項目を <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> として設定します。</summary>
      <returns>結果として得られる <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がビュー内の項目である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.NeedsRefresh">
      <summary>ビューを更新する必要があるかどうかを示す値を取得します。</summary>
      <returns>ビューを更新する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.NewItemPlaceholder">
      <summary>新しい項目を表すコレクション内のオブジェクトを取得します。</summary>
      <returns>新しい項目を表すコレクション内のオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OKToChangeCurrent">
      <summary>ビューで、<see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> である項目を変更できるかどうかを示す値を返します。</summary>
      <returns>リスナーが変更をキャンセルする場合は <see langword="false" />。それ以外の場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged">
      <summary>
        <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> イベントがメッセージ キューにポストされたことを派生クラスに通知するために、基本クラスによって呼び出されます。</summary>
      <param name="args">変更ログに追加されている <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> イベントを発生させます。</summary>
      <param name="args">イベント ハンドラーに渡す <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> イベントを発生させます。</summary>
      <param name="sender">イベントの送信元。</param>
      <param name="args">イベント ハンドラーに渡す <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanged">
      <summary>
        <see cref="E:System.Windows.Data.CollectionView.CurrentChanged" /> イベントを発生させます。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanging">
      <summary>キャンセルできない <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" /> イベントを発生させます。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)">
      <summary>指定された引数を使用して、<see cref="E:System.Windows.Data.CollectionView.CurrentChanging" /> イベントを発生させます。</summary>
      <param name="args">イベントに関する情報。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>指定された引数を使用して <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントを発生させます。</summary>
      <param name="e">発生させるイベントの引数。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.PassesFilter(System.Object)">
      <summary>基になるコレクション内の指定した項目がビューに属しているかどうかを示す値を返します。</summary>
      <param name="item">確認する項目。</param>
      <returns>指定の項目がビューに属している場合、またはコレクション ビューにフィルターが設定されていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>派生クラスでオーバーライドされると、UI スレッド上で単一の変更を処理します。</summary>
      <param name="args">処理対象の <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ProcessPendingChanges">
      <summary>コレクションへのすべての保留中の変更がコミットされたことを確認します。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.PropertyChanged">
      <summary>プロパティ値が変更された場合に発生します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.Refresh">
      <summary>ビューを再作成します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.RefreshOrDefer">
      <summary>ビューを更新します。または遅延サイクルの完了時にビューを更新する必要があることを指定します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.RefreshOverride">
      <summary>ビューを再作成します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)">
      <summary>指定された項目およびインデックスを <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> プロパティおよび <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> プロパティの値として設定します。</summary>
      <param name="newItem">
        <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> として設定する項目。</param>
      <param name="newPosition">
        <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> プロパティ値として設定する値。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)">
      <summary>指定された項目およびインデックスを <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> プロパティおよび <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> プロパティの値として設定します。 このメソッドは、派生クラスのコンストラクターから呼び出すことができます。</summary>
      <param name="newItem">
        <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> として設定する項目。</param>
      <param name="newPosition">
        <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> プロパティ値として設定する値。</param>
      <param name="count">
        <see cref="T:System.Windows.Data.CollectionView" /> 内の項目数。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionView.SortDescriptions">
      <summary>コレクション内の項目をビュー内でどのように並べ替えるかを説明する <see cref="T:System.ComponentModel.SortDescription" /> 構造体のコレクションを取得します。</summary>
      <returns>すべてのクラスについて空の <see cref="T:System.ComponentModel.SortDescriptionCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.SourceCollection">
      <summary>基になるフィルター処理されていないコレクションを返します。</summary>
      <returns>基になるコレクションである <see cref="T:System.Collections.IEnumerable" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator">
      <summary>ビュー内の項目を列挙するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクトを返します。</summary>
      <returns>ビュー内の項目を列挙するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>ビューが変更された場合に発生します。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>プロパティ値が変更するときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.UpdatedOutsideDispatcher">
      <summary>
        <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> 通知が最初に ユーザー インターフェイス (UI) スレッド ディスパッチャーに入らずに別のスレッドで受信されたため変更ログを更新する必要があったかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> 通知が、最初に ユーザー インターフェイス (UI) スレッドディスパッチャーに入っていない別のスレッドで受信されたために、変更ログを更新する必要がある場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="T:System.Windows.Data.CollectionViewGroup">
      <summary>
        <see cref="T:System.Windows.Data.CollectionView" /> に基づいて <see cref="P:System.Windows.Data.CollectionView.GroupDescriptions" /> オブジェクトによって作成されたグループを表します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)">
      <summary>グループの名前を使用して、<see cref="T:System.Windows.Data.CollectionViewGroup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">このグループの名前です。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel">
      <summary>このグループにサブグループが含まれるかどうかを示す値を取得します。</summary>
      <returns>このグループが最下位レベルで、サブグループを持たない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ItemCount">
      <summary>このグループの下のサブツリーに含まれる項目の数を取得します。</summary>
      <returns>このグループの下のサブツリーに含まれる項目 (リーフ) の数。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Items">
      <summary>このグループに含まれる直接の項目を取得します。</summary>
      <returns>このグループの直接の項目の読み取り専用コレクション。 これはサブグループのコレクションになるか、このグループがサブグループを持たない場合は項目のコレクションになります。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Name">
      <summary>このグループの名前を取得します。</summary>
      <returns>項目をグループに分けるために使用するプロパティの共通の値である、このグループの名前。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>指定された引数を使用して、<see cref="E:System.Windows.Data.CollectionViewGroup.PropertyChanged" /> イベントを発生させます。</summary>
      <param name="e">発生しているイベントの引数。</param>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.PropertyChanged">
      <summary>プロパティ値が変更するときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount">
      <summary>このグループの下のサブツリーに含まれる項目の数を取得または設定します。</summary>
      <returns>このグループの下のサブツリーに含まれる項目 (リーフ) の数</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItems">
      <summary>このグループに含まれる直接の項目を取得します。</summary>
      <returns>このグループに含まれる直接の項目の読み取り専用コレクション。 これはサブグループのコレクションになるか、このグループがサブグループを持たない場合は項目のコレクションになります。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>プロパティ値が変更するときに発生します。</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionViewRegisteringEventArgs">
      <summary>
        <see cref="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewRegisteringEventArgs.CollectionView">
      <summary>スレッド間のアクセスのために登録されるコレクション ビューを取得します。</summary>
      <returns>スレッド間のアクセスのために登録されるコレクション ビュー。</returns>
    </member>
    <member name="T:System.Windows.Data.CollectionViewSource">
      <summary>
        <see cref="T:System.Windows.Data.CollectionView" /> クラスの Extensible Application Markup Language (XAML) プロキシ。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.CollectionViewSource" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering">
      <summary>コレクション ビューがデータのリアルタイム フィルター処理のオン/オフ切り替えをサポートしているかどうかを示す値を取得します。</summary>
      <returns>コレクション ビューがライブ フィルター処理のオン/オフ切り替えをサポートしている場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CanChangeLiveFilteringProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping">
      <summary>コレクション ビューがリアルタイムのデータのグループ化のオンまたはオフをサポートするかどうかを示す値を取得します。</summary>
      <returns>コレクション ビューがライブ グループ化のオンまたはオフをサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。登録されている既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CanChangeLiveGroupingProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting">
      <summary>コレクション ビューがリアルタイムのデータの並べ替えのオンまたはオフをサポートするかどうかを示す値を取得します。</summary>
      <returns>コレクション ビューがライブ並べ替えのオンまたはオフをサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CanChangeLiveSortingProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CollectionViewType">
      <summary>必要なビューの種類を取得または設定します。</summary>
      <returns>必要なビューの種類。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CollectionViewTypeProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Culture">
      <summary>並べ替えや比較などの操作で使用するカルチャを取得または設定します。</summary>
      <returns>並べ替えや比較などの操作で使用するカルチャ。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.DeferRefresh">
      <summary>ビューの変更をマージして自動更新を遅延させるために使用できる遅延サイクルを入力します。</summary>
      <returns>呼び出し元のオブジェクトを破棄するために使用できる <see cref="T:System.IDisposable" /> オブジェクト。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewSource.Filter">
      <summary>フィルタリング ロジックを提供します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.GetDefaultView(System.Object)">
      <summary>指定したソースの既定のビューを返します。</summary>
      <param name="source">バインディング ソースへのオブジェクト参照。</param>
      <returns>指定したソース コレクションの既定のビューである <see cref="T:System.ComponentModel.ICollectionView" /> オブジェクトを返します。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.GroupDescriptions">
      <summary>コレクションに含まれる項目をビュー内でどのようにグループ化するかを説明する <see cref="T:System.ComponentModel.GroupDescription" /> オブジェクトのコレクションを取得または設定します。</summary>
      <returns>コレクションに含まれる項目をビュー内でどのようにグループ化するかを示す <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> オブジェクトの <see cref="T:System.ComponentModel.GroupDescription" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.IsDefaultView(System.ComponentModel.ICollectionView)">
      <summary>特定のビューが、<see cref="P:System.Windows.Data.CollectionViewSource.Source" /> コレクションの既定のビューかどうかを示す値を返します。</summary>
      <param name="view">確認する対象のビュー オブジェクト。</param>
      <returns>特定のビューが <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> コレクションの既定のビューか <see langword="true" /> である場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering">
      <summary>
        <see cref="T:System.Windows.Data.CollectionViewSource" /> がデータをリアルタイムでフィルター処理するかどうかを示す値を取得します。</summary>
      <returns>リアルタイムのデータのフィルター選択が有効になっている場合は <see langword="true" />。ライブ フィルター選択が有効になっていない場合は <see langword="false" />。コレクション ビューがライブ フィルター処理を実装しているかどうかを特定できない場合は <see langword="null" />。 登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested">
      <summary>可能な場合は <see cref="T:System.Windows.Data.CollectionViewSource" /> がリアルタイムでデータをフィルター処理するかどうかを示す値を取得または設定します。</summary>
      <returns>ライブ フィルター処理が要求されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequestedProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping">
      <summary>
        <see cref="T:System.Windows.Data.CollectionViewSource" /> がデータをリアルタイムでグループ化するかどうかを示す値を取得します。</summary>
      <returns>リアルタイムのデータのグループ化が有効になっている場合は <see langword="true" />。ライブ グループ化が有効になっていない場合は <see langword="false" />。コレクション ビューがライブ グループ化を実装しているかどうかを特定できない場合は <see langword="null" />。 登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested">
      <summary>可能な場合は <see cref="T:System.Windows.Data.CollectionViewSource" /> がリアルタイムでデータをグループ化するかどうかを示す値を取得または設定します。</summary>
      <returns>ライブ グループ化が要求されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequestedProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveSorting">
      <summary>
        <see cref="T:System.Windows.Data.CollectionViewSource" /> がデータをリアルタイムで並べ替えるかどうかを示す値を取得します。</summary>
      <returns>リアルタイムのデータの並べ替えが有効になっている場合は <see langword="true" />。ライブ並べ替えが有効になっていない場合は <see langword="false" />。コレクション ビューがライブ並べ替えを実装しているかどうかを特定できない場合は <see langword="null" />。 登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveSortingProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSorting" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested">
      <summary>可能な場合は <see cref="T:System.Windows.Data.CollectionViewSource" /> がリアルタイムでデータを並べ替えるかどうかを示す値を取得または設定します。</summary>
      <returns>ライブ並べ替えが要求されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="false" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveSortingRequestedProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.LiveFilteringProperties">
      <summary>リアルタイムのデータのフィルター選択に関係するプロパティを指定する文字列のコレクションを取得します。</summary>
      <returns>リアルタイムのデータのフィルター選択に関係するプロパティを指定する文字列のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.LiveGroupingProperties">
      <summary>リアルタイムのデータのグループ化に関係するプロパティを指定する文字列のコレクションを取得します。</summary>
      <returns>リアルタイムのデータのグループ化に関係するプロパティを指定する文字列のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.LiveSortingProperties">
      <summary>リアルタイムのデータの並べ替えに関係するプロパティを指定する文字列のコレクションを取得します。</summary>
      <returns>リアルタイムのデータの並べ替えに関係するプロパティを指定する文字列のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> プロパティが変更された時点で呼び出されます。</summary>
      <param name="oldCollectionViewType">
        <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> プロパティの古い値。</param>
      <param name="newCollectionViewType">
        <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> プロパティが変更された時点で呼び出されます。</summary>
      <param name="oldSource">
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> プロパティの古い値。</param>
      <param name="newSource">
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>中央のイベント テーブルにあるイベントを処理します。</summary>
      <param name="managerType">このメソッドを呼び出す <see cref="T:System.Windows.WeakEventManager" /> の型。 これは、<see cref="T:System.Windows.Data.DataChangedEventManager" /> 型のマネージャー オブジェクトだけを認識します。</param>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベント データ。</param>
      <returns>リスナーがイベントを処理した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.SortDescriptions">
      <summary>コレクション内の項目をビュー内でどのように並べ替えるかを説明する <see cref="T:System.ComponentModel.SortDescription" /> オブジェクトのコレクションを取得または設定します。</summary>
      <returns>コレクション内の項目をビュー内でどのように並べ替えるかを説明する <see cref="T:System.ComponentModel.SortDescription" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Source">
      <summary>このビューの作成元のコレクション オブジェクトを取得または設定します。</summary>
      <returns>既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>初期化の開始を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>初期化の完了を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>中央のイベント マネージャーからイベントを受信します。</summary>
      <param name="managerType">このメソッドを呼び出す <see cref="T:System.Windows.WeakEventManager" /> の型。 これは、<see cref="T:System.Windows.Data.DataChangedEventManager" /> 型のマネージャー オブジェクトだけを認識します。</param>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベント データ。</param>
      <returns>リスナーがイベントを処理した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.View">
      <summary>現在、<see cref="T:System.Windows.Data.CollectionViewSource" /> のこのインスタンスに関連付けられているビュー オブジェクトを取得します。</summary>
      <returns>現在、<see cref="T:System.Windows.Data.CollectionViewSource" /> のこのインスタンスに関連付けられているビュー オブジェクト。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.ViewProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Data.CompositeCollection">
      <summary>複数のコレクションと複数の項目を単一のリストとして表示できるようにします。</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.#ctor">
      <summary>空で、既定の初期量を備えた、<see cref="T:System.Windows.Data.CompositeCollection" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.#ctor(System.Int32)">
      <summary>空で、指定した初期量を備えた、<see cref="T:System.Windows.Data.CompositeCollection" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="capacity">新しいリストが最初に格納できる項目の数。</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Add(System.Object)">
      <summary>指定した項目をこのコレクションに追加します。</summary>
      <param name="newItem">コレクションに新しく追加する項目。</param>
      <returns>新しい項目を追加する位置を示す、0 から始まるインデックス。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Clear">
      <summary>コレクションを空にします。</summary>
    </member>
    <member name="E:System.Windows.Data.CompositeCollection.CollectionChanged">
      <summary>アイテムの追加または削除によりコレクションが変更されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Contains(System.Object)">
      <summary>指定した項目がこのコレクション内にあるかどうかを確認します。</summary>
      <param name="containItem">確認する項目。</param>
      <returns>指定した項目がコレクションに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)">
      <summary>このコレクションから指定した配列に対するオブジェクト参照のシャロー コピーを作成します。</summary>
      <param name="array">コピー操作先の配列。</param>
      <param name="index">対象となる配列でコピーの開始位置を示す 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.Count">
      <summary>このコレクション内に格納されている項目の数を取得します。</summary>
      <returns>このコレクション内に格納されている項目の数。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.IndexOf(System.Object)">
      <summary>指定した項目が見つかった位置を示す、このコレクション内のインデックスを返します。</summary>
      <param name="indexItem">インデックスを取得する対象の項目。</param>
      <returns>コレクション内に指定した項目が表示される場合は、その項目が見つかった位置を示す 0 から始まるインデックス。それ以外の場合は <c>-1</c>。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)">
      <summary>コレクション内の指定したインデックス位置に項目を挿入します。 指定した位置より後の項目は、すべて 1 ずつ後ろに移動されます。</summary>
      <param name="insertIndex">項目を挿入するインデックス。</param>
      <param name="insertItem">コレクションに追加する項目参照。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">インデックスが範囲外である場合。</exception>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.Item(System.Int32)">
      <summary>コレクション内で指定した 0 から始まるオフセット位置にある項目を取得または置換するインデクサー プロパティ。</summary>
      <param name="itemIndex">取得または置換する項目の 0 から始まるオフセット。</param>
      <returns>0 から始まる指定したオフセットにある項目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">インデックスが範囲外である場合。</exception>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>中央のイベント テーブルにあるイベントを処理します。</summary>
      <param name="managerType">このメソッドを呼び出す <see cref="T:System.Windows.WeakEventManager" /> の型。 これは、<see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 型のマネージャー オブジェクトだけを認識します。</param>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベント データ。</param>
      <returns>リスナーがイベントを処理した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Remove(System.Object)">
      <summary>指定した項目参照をコレクションから削除します。 残りの項目は、すべて 1 つずつ上に移動します。</summary>
      <param name="removeItem">削除する項目。</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)">
      <summary>指定したインデックスにある項目をコレクションから削除します。 残りの項目は、すべて 1 つずつ上に移動します。</summary>
      <param name="removeIndex">項目を削除する位置のインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">インデックスが範囲外である場合。</exception>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスが同期されている (スレッド セーフである) 場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>列挙子を返します。</summary>
      <returns>IEnumerator オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>
        <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.Data.CompositeCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>コレクションが変更されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>作成されたビュー。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="managerType">このメソッドを呼び出す <see cref="T:System.Windows.WeakEventManager" /> の型。 これは、<see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 型のマネージャー オブジェクトだけを認識します。</param>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベント データ。</param>
      <returns>リスナーがイベントを処理した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Data.DataChangedEventManager">
      <summary>
        <see cref="T:System.Windows.WeakEventManager" /> を実装することにより、"弱いイベント リスナー" パターンを使用して <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> イベントのリスナーを関連付けられるようにします。</summary>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.AddHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})">
      <summary>指定されたソースで <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> イベントが発生したときに呼び出されるイベント ハンドラーを追加します。</summary>
      <param name="source">
        <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> イベントを発生させるソース オブジェクト。</param>
      <param name="handler">
        <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> イベントを処理するデリゲート。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.AddListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
      <summary>指定したリスナーを、指定したソースの <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> イベントに追加します。</summary>
      <param name="source">イベントを持つオブジェクト。</param>
      <param name="listener">リスナーとして追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.NewListenerList">
      <summary>
        <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> イベントのリスナーを格納する新しいオブジェクトを返します。</summary>
      <returns>
        <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> イベントのリスナーを格納する新しいオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.RemoveHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})">
      <summary>指定したソースから、指定したイベント ハンドラーを削除します。</summary>
      <param name="source">
        <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> イベントを発生させるソース オブジェクト。</param>
      <param name="handler">
        <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> イベントを処理するデリゲート。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.RemoveListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
      <summary>指定したリスナーを、指定したソースの <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> イベントから削除します。</summary>
      <param name="source">イベントを持つオブジェクト。</param>
      <param name="listener">削除するリスナー。</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.StartListening(System.Object)">
      <summary>指定したソースで <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> イベントのリッスンを開始します。</summary>
      <param name="source">イベントを持つオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.StopListening(System.Object)">
      <summary>指定したソースで <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> イベントのリッスンを停止します。</summary>
      <param name="source">リッスンを停止するソース オブジェクト。</param>
    </member>
    <member name="T:System.Windows.Data.DataTransferEventArgs">
      <summary>データ転送イベントの引数をカプセル化します。</summary>
    </member>
    <member name="M:System.Windows.Data.DataTransferEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>指定したオブジェクトに対し、指定したハンドラーを型固有の方法で呼び出します。</summary>
      <param name="genericHandler">型固有の方法で呼び出しを行うジェネリック ハンドラー。</param>
      <param name="genericTarget">ハンドラーを呼び出す対象のオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Data.DataTransferEventArgs.Property">
      <summary>データ転送イベントに関連する特定のバインディング ターゲット プロパティを取得します。</summary>
      <returns>変更されたプロパティ。</returns>
    </member>
    <member name="P:System.Windows.Data.DataTransferEventArgs.TargetObject">
      <summary>イベントを発生させるバインディングのバインディング ターゲット オブジェクトを取得します。</summary>
      <returns>イベントを発生させるバインディングのターゲット オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Data.FilterEventArgs">
      <summary>
        <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> イベントに関連付けられている情報およびイベント データを提供します。</summary>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Accepted">
      <summary>項目がフィルターを通過するかどうかを示す値を取得または設定します。</summary>
      <returns>項目がフィルター条件を満たす場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Item">
      <summary>フィルターのテスト対象のオブジェクトを取得します。</summary>
      <returns>フィルターでテストする必要があるオブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="T:System.Windows.Data.FilterEventHandler">
      <summary>
        <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Data.GroupDescriptionSelectorCallback">
      <summary>親グループおよびそのレベルを基に <see cref="T:System.ComponentModel.GroupDescription" /> を選択するカスタム ロジックを提供するために使用するメソッドを表します。</summary>
      <param name="group">親グループ。</param>
      <param name="level">
        <paramref name="group" /> のレベル。</param>
      <returns>親グループとそのレベルに基づいて選択された <see cref="T:System.ComponentModel.GroupDescription" />。</returns>
    </member>
    <member name="T:System.Windows.Data.IMultiValueConverter">
      <summary>カスタム ロジックを <see cref="T:System.Windows.Data.MultiBinding" /> に適用する方法を提供します。</summary>
    </member>
    <member name="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>ソース値をバインディング ターゲットの値に変換します。 データ バインディング エンジンでは、ソース バインディングからの値をバインディング ターゲットに伝達するときに、このメソッドを呼び出します。</summary>
      <param name="values">
        <see cref="T:System.Windows.Data.MultiBinding" /> のソース バインディングが生成する値の配列。 値 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> は、ソース バインディングに変換対象となる値がないことを示します。</param>
      <param name="targetType">バインディング ターゲット プロパティの型。</param>
      <param name="parameter">使用するコンバーター パラメーター。</param>
      <param name="culture">コンバーターで使用するカルチャ。</param>
      <returns>変換された値。
メソッドが <see langword="null" /> を返す場合は、有効な <see langword="null" /> 値が使用されています。
<see cref="T:System.Windows.DependencyProperty" /> の戻り値。<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> は、コンバーターで値を生成しなかったこと、および <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> が使用できる場合にバインディングでそれを使用し、使用できない場合は既定値を使用することを示します。
<see cref="T:System.Windows.Data.Binding" /> の戻り値。<see cref="F:System.Windows.Data.Binding.DoNothing" /> は、バインディングで値を転送しないこと、あるいは <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> または既定値を使用しないことを示します。</returns>
    </member>
    <member name="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>バインディング ターゲットの値をバインディング ソースの値に変換します。</summary>
      <param name="value">バインディング ターゲットによって生成される値。</param>
      <param name="targetTypes">変換対象の型の配列。 配列の長さは、メソッドの戻り値として推奨されている値の数と型を示します。</param>
      <param name="parameter">使用するコンバーター パラメーター。</param>
      <param name="culture">コンバーターで使用するカルチャ。</param>
      <returns>ターゲット値からソース値に変換された値の配列。</returns>
    </member>
    <member name="T:System.Windows.Data.IValueConverter">
      <summary>カスタム ロジックをバインディングに適用する方法を提供します。</summary>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>値を変換します。</summary>
      <param name="value">バインディング ソースによって生成された値。</param>
      <param name="targetType">バインディング ターゲット プロパティの型。</param>
      <param name="parameter">使用するコンバーター パラメーター。</param>
      <param name="culture">コンバーターで使用するカルチャ。</param>
      <returns>変換された値。 メソッドが <see langword="null" /> を返す場合は、有効な null 値が使用されています。</returns>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>値を変換します。</summary>
      <param name="value">バインディング ターゲットによって生成された値。</param>
      <param name="targetType">変換後の型。</param>
      <param name="parameter">使用するコンバーター パラメーター。</param>
      <param name="culture">コンバーターで使用するカルチャ。</param>
      <returns>変換された値。 メソッドが <see langword="null" /> を返す場合は、有効な null 値が使用されています。</returns>
    </member>
    <member name="T:System.Windows.Data.ListCollectionView">
      <summary>
        <see cref="T:System.Collections.IList" /> を実装するコレクションに使用されるコレクション ビューを表します。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)">
      <summary>
        <see cref="T:System.Windows.Data.ListCollectionView" /> を実装する指定したコレクションを使用して、<see cref="T:System.Collections.IList" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="list">
        <see cref="T:System.Collections.IList" /> を実装する必要がある、基になるコレクション。</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ActiveComparer">
      <summary>並べ替えで使用する現在のアクティブな比較子を取得または設定します。</summary>
      <returns>アクティブな比較子である <see cref="T:System.Collections.IComparer" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ActiveFilter">
      <summary>現在のアクティブな <see cref="P:System.Windows.Data.CollectionView.Filter" /> コールバックを取得または設定します。</summary>
      <returns>アクティブな <see cref="P:System.Windows.Data.CollectionView.Filter" /> コールバック。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.AddNew">
      <summary>追加トランザクションを開始し、保留中の新しい項目を返します。</summary>
      <returns>保留中の新しい項目。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)">
      <summary>指定したオブジェクトをコレクションに追加します。</summary>
      <param name="newItem">コレクションに追加するオブジェクト。</param>
      <returns>コレクションに追加されたオブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.ListCollectionView" /> メソッドを使用して、オブジェクトを <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" /> に追加できません。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanAddNew">
      <summary>新しい項目をコレクションに追加できるかどうかを示す値を取得します。</summary>
      <returns>新しい項目をコレクションに追加できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanAddNewItem">
      <summary>指定したオブジェクトをコレクションに追加できるかどうかを示す値を取得します。</summary>
      <returns>指定したオブジェクトをコレクションに追加できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanCancelEdit">
      <summary>コレクション ビューが保留中の変更を破棄して、編集されたオブジェクトの元の値を復元できるかどうかを示す値を取得します。</summary>
      <returns>コレクション ビューが保留中の変更を破棄して、編集されたオブジェクトの元の値を復元できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CancelEdit">
      <summary>編集トランザクションを終了し、可能な場合は、項目の元の値を復元します。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CancelNew">
      <summary>追加トランザクションを終了し、保留中の新しい項目を破棄します。</summary>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanChangeLiveFiltering">
      <summary>コレクション ビューがデータのリアルタイム フィルター処理のオン/オフ切り替えをサポートしているかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanChangeLiveGrouping">
      <summary>コレクション ビューがリアルタイムのデータのグループ化のオンまたはオフをサポートするかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanChangeLiveSorting">
      <summary>コレクション ビューがリアルタイムのデータの並べ替えのオンまたはオフをサポートするかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanFilter">
      <summary>ビューがコールバックを使用したフィルター処理をサポートするかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.ListCollectionView" /> の既定インスタンスに対して、このプロパティは常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanGroup">
      <summary>コレクション ビューがグループ化をサポートするかどうかを示す値を取得します。</summary>
      <returns>コレクション ビューがグループ化をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanRemove">
      <summary>コレクションから項目を削除できるかどうかを示す値を取得します。</summary>
      <returns>コレクションから項目を削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanSort">
      <summary>コレクション ビューが並べ替えをサポートするかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.ListCollectionView" /> の既定インスタンスに対して、このプロパティは常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CommitEdit">
      <summary>編集トランザクションを終了し、保留中の変更を保存します。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CommitNew">
      <summary>追加トランザクションを終了し、保留中の新しい項目を保存します。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)">
      <summary>2 つのオブジェクトを比較し、一方が他方より小さいか、等しいか、大きいかを示す値を返します。</summary>
      <param name="o1">比較する最初のオブジェクト。</param>
      <param name="o2">比較する 2 番目のオブジェクト。</param>
      <returns>
        <paramref name="o1" /> が <paramref name="o2" /> より小さい場合は負の値。<paramref name="o1" /> と <paramref name="o2" /> が等しい場合はゼロ。<paramref name="o1" /> が <paramref name="o2" /> より大きい場合は正の値。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Contains(System.Object)">
      <summary>特定の項目がコレクション ビューに属しているかどうかを示す値を返します。</summary>
      <param name="item">確認する対象のオブジェクト。</param>
      <returns>項目がコレクション ビューに属している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Count">
      <summary>レコードの推定数を取得します。</summary>
      <returns>次のいずれかになります。
  [値]  
  
  説明  
  
  -1  
  
  コレクションの数を決定できませんでした。 これは、"仮想化" ビューから返される場合があります。仮想化ビューでは、意図的に、基になるコレクション内の項目の一部が表示されません。これは、効率を向上させるため、およびコレクション全体が常に利用可能であることへの依存度を最小にするためです。  
  
  その他の任意の整数  
  
  コレクションの数。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CurrentAddItem">
      <summary>現在の追加トランザクション処理中に追加される項目を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /> が <see langword="true" /> の場合は追加される項目。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CurrentEditItem">
      <summary>編集されているコレクション内の項目を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> が <see langword="true" /> である場合は、編集されているコレクション内の項目。それ以外の場合は、<see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CustomSort">
      <summary>ビュー内で項目を並べ替えるために、<see cref="T:System.Collections.IComparer" /> を実装するカスタム オブジェクトを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Collections.IComparer" /> の実装として並べ替える基準。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.EditItem(System.Object)">
      <summary>指定した項目の編集トランザクションを開始します。</summary>
      <param name="item">編集する項目。</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Filter">
      <summary>項目をビューに含めることが適切であるかどうかを決定するために使用されるメソッドを取得または設定します。</summary>
      <returns>項目をビューに含めることが適切であるかどうかを決定するために使用されるメソッドを表すデリゲート。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.GetEnumerator">
      <summary>ビュー内の項目を列挙するために使用できるオブジェクトを返します。</summary>
      <returns>ビュー内の項目を列挙するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)">
      <summary>ビュー内の指定された位置にある項目を取得します。</summary>
      <param name="index">項目の位置を示す、0 から始まるインデックス。</param>
      <returns>ビュー内の指定された位置にある項目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が範囲外である場合。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.GroupBySelector">
      <summary>
        <see cref="T:System.ComponentModel.GroupDescription" /> を選択するためのデリゲートを、親グループおよびそのレベルの関数として取得または設定します。</summary>
      <returns>
        <see cref="T:System.ComponentModel.GroupDescription" /> を選択するためのロジックを、親グループおよびそのレベルの関数として提供するメソッド。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.GroupDescriptions">
      <summary>コレクション内の項目をビュー内でどのようにグループ化するかを記述する <see cref="T:System.ComponentModel.GroupDescription" /> オブジェクトのコレクションを取得します。</summary>
      <returns>コレクション内の項目をビュー内でどのようにグループ化するかを記述する <see cref="T:System.ComponentModel.GroupDescription" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Groups">
      <summary>トップレベル グループを取得します。</summary>
      <returns>トップレベル グループの読み取り専用コレクション。グループがない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)">
      <summary>指定したデータ項目がコレクションにある場合はインデックスを返します。項目が不明の場合は -1 を返します。</summary>
      <param name="item">コレクション内で確認の対象となるオブジェクト。</param>
      <returns>コレクション内の項目のインデックス。項目がコレクション内に存在しない場合は <c>-1</c>。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)">
      <summary>
        <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> に項目が含まれているかどうかを示す値を返します。</summary>
      <param name="item">検索する項目。</param>
      <returns>
        <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> に項目が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.InternalCount">
      <summary>
        <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 内のレコードの数を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> のレコード数です。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator">
      <summary>
        <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> の列挙子を返します。</summary>
      <returns>
        <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> の列挙子。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)">
      <summary>
        <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 内の指定した項目のインデックスを返します。</summary>
      <param name="item">インデックスを返す対象の項目。</param>
      <returns>
        <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 内の指定した項目のインデックス。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)">
      <summary>
        <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 内の指定したインデックス位置にある項目を返します。</summary>
      <param name="index">項目の位置を示すインデックス。</param>
      <returns>ビュー内の、0 から始まる指定されたインデックス位置にある項目。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.InternalList">
      <summary>フィルター処理され並べ替えられた項目の一覧を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IList" />フィルター処理と並べ替えが適用されている。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsAddingNew">
      <summary>追加トランザクションが実行中かどうかを示す値を取得します。</summary>
      <returns>追加トランザクションが実行中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder">
      <summary>項目の一覧 (並べ替えやフィルター処理の後) が正しい順序でグループ化されているかどうかを示す値を取得または設定します。</summary>
      <returns>項目の一覧が既に正しい順序でグループ化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsEditingItem">
      <summary>編集トランザクションが実行中かどうかを示す値を取得します。</summary>
      <returns>編集トランザクションが実行中である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsEmpty">
      <summary>結果の (フィルター処理された) ビューが空かどうかを示す値を返します。</summary>
      <returns>結果のビューが空である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsGrouping">
      <summary>ビューにグループがあるかどうかを示す値を取得します。</summary>
      <returns>ビューにグループがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsLiveFiltering">
      <summary>リアルタイムでのデータのフィルター処理が有効かどうかを示す値を取得または設定します。</summary>
      <returns>リアルタイムのデータのフィルター選択が有効になっている場合は <see langword="true" />。ライブ フィルター選択が有効になっていない場合は <see langword="false" />。コレクション ビューがライブ フィルター処理を実装しているかどうかを特定できない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> は <see langword="null" /> に設定できません。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsLiveGrouping">
      <summary>リアルタイムでのデータのグループ化が有効かどうかを示す値を取得または設定します。</summary>
      <returns>リアルタイムのデータのグループ化が有効になっている場合は <see langword="true" />。ライブ グループ化が有効になっていない場合は <see langword="false" />。コレクション ビューがライブ グループ化を実装しているかどうかを特定できない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" /> は <see langword="null" /> に設定できません。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsLiveSorting">
      <summary>リアルタイムでの並べ替えが有効かどうかを示す値を取得または設定します。</summary>
      <returns>リアルタイムのデータの並べ替えが有効になっている場合は <see langword="true" />。ライブ並べ替えが有効になっていない場合は <see langword="false" />。コレクション ビューがライブ並べ替えを実装しているかどうかを特定できない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> は <see langword="null" /> に設定できません。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ItemProperties">
      <summary>コレクション内の項目のプロパティを記述するオブジェクトのコレクションを取得します。</summary>
      <returns>コレクション内の項目のプロパティを記述するオブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.LiveFilteringProperties">
      <summary>リアルタイムのデータのフィルター選択に関係するプロパティを指定する文字列のコレクションを取得します。</summary>
      <returns>リアルタイムのデータのフィルター選択に関係するプロパティを指定する文字列のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.LiveGroupingProperties">
      <summary>リアルタイムのデータのグループ化に関係するプロパティを指定する文字列のコレクションを取得します。</summary>
      <returns>リアルタイムのデータのグループ化に関係するプロパティを指定する文字列のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.LiveSortingProperties">
      <summary>リアルタイムのデータの並べ替えに関係するプロパティを指定する文字列のコレクションを取得します。</summary>
      <returns>リアルタイムのデータの並べ替えに関係するプロパティを指定する文字列のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>指定したインデックスにある項目を、ビュー内の <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> になるように設定します。</summary>
      <param name="position">
        <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> に設定するインデックス。</param>
      <returns>結果として得られる <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> がビュー内の項目である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">インデックスが範囲外である場合にスローされます。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition">
      <summary>
        <see cref="T:System.Windows.Data.ListCollectionView" /> にある新しい項目プレースホルダーの位置を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.ListCollectionView" /> にある新しい項目プレースホルダーの位置を指定する列挙値の 1 つ。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged">
      <summary>
        <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> イベントがメッセージ キューにポストされたことを派生クラスに通知するために、基本クラスによって呼び出されます。</summary>
      <param name="args">変更ログに追加されている <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)">
      <summary>基になるコレクション内の指定した項目がビューに属しているかどうかを示す値を返します。</summary>
      <param name="item">確認する項目。</param>
      <returns>指定の項目がビューに属している場合、またはコレクション ビューにフィルターが設定されていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> イベントを処理します。</summary>
      <param name="args">処理対象の <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.RefreshOverride">
      <summary>ビューを再作成します。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Remove(System.Object)">
      <summary>指定した項目をコレクションから削除します。</summary>
      <param name="item">削除する項目。</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)">
      <summary>コレクション内の指定した位置にある項目を削除します。</summary>
      <param name="index">削除する項目の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満か、コレクション ビューに含まれる項目数を上回っています。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.SortDescriptions">
      <summary>コレクション内の項目をビュー内でどのように並べ替えるかを説明する <see cref="T:System.ComponentModel.SortDescription" /> オブジェクトのコレクションを取得します。</summary>
      <returns>コレクション内の項目をビュー内でどのように並べ替えるかを記述する <see cref="T:System.ComponentModel.SortDescription" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="o1">比較する最初のオブジェクト。</param>
      <param name="o2">比較する 2 番目のオブジェクト。</param>
      <returns>ゼロ未満の値は、<paramref name="o1" /> が <paramref name="o2;" /> 未満であることを意味します。値ゼロは、これらのオブジェクトが等しいことを意味します。ゼロより大きい値は、<paramref name="o1" /> が <paramref name="o2" /> より大きいことを意味します。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.UsesLocalArray">
      <summary>並べ替えやフィルター処理にデータのプライベート コピーが必要かどうかを示す値を取得します。</summary>
      <returns>並べ替えやフィルター処理にデータのプライベート コピーが必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> または <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" /> (あるいはその両方) がある場合、既定の実装は <see langword="true" /> を返します。</returns>
    </member>
    <member name="T:System.Windows.Data.MultiBinding">
      <summary>単一のバインド対象のプロパティに添付される <see cref="T:System.Windows.Data.Binding" /> オブジェクトのコレクションを記述します。</summary>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.MultiBinding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Bindings">
      <summary>この <see cref="T:System.Windows.Data.MultiBinding" /> のインスタンス内の <see cref="T:System.Windows.Data.Binding" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.Binding" /> オブジェクトのコレクション。 <see cref="T:System.Windows.Data.MultiBinding" /> は、現在、型 <see cref="T:System.Windows.Data.Binding" /> のオブジェクトのみをサポートしており、<see cref="T:System.Windows.Data.MultiBinding" /> と <see cref="T:System.Windows.Data.PriorityBinding" /> はサポートしていません。 <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトに <see cref="T:System.Windows.Data.Binding" /> の子を追加すると、その子が <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトの <see cref="T:System.Windows.Data.BindingBase" /> コレクションに暗黙的に追加されます。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Converter">
      <summary>対象の値との間でソース値の変換に使用するコンバーターを取得または設定します。</summary>
      <returns>使用するコンバーターを示す <see cref="T:System.Windows.Data.IMultiValueConverter" /> 型の値。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ConverterCulture">
      <summary>
        <see cref="T:System.Globalization.CultureInfo" /> によってラップされたバインディングまたは <see cref="T:System.Windows.Data.MultiBinding" /> 自体にあるバインディングに割り当てられている任意のコンバーターに適用される <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトを取得または設定します。</summary>
      <returns>有効な <see cref="T:System.Globalization.CultureInfo" />。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ConverterParameter">
      <summary>コンバータに追加情報として渡すオプション パラメーターを取得または設定します。</summary>
      <returns>コンバーターに渡すパラメーター。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Mode">
      <summary>このバインディングのデータ フローの方向を示す値を取得または設定。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingMode" /> 値のいずれか 1 つ。 既定値は <see cref="F:System.Windows.Data.BindingMode.Default" /> で、ターゲット依存関係プロパティの既定のバインド モード値を返します。 ただし、既定値は各依存関係プロパティによって異なります。 一般に、ユーザーが編集できる <see cref="P:System.Windows.Controls.TextBox.Text" /> などのコントロール プロパティは既定で双方向のバインディングであり、それ以外のほとんどのプロパティは既定で一方向のバインドになります。
依存関係プロパティが既定で一方向と双方向のどちらでバインドされるかをプログラムで判断する 1 つの方法として、<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> を使用してそのプロパティのプロパティ メタデータを取得してから、<see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> プロパティのブール値を確認することがきます。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated">
      <summary>バインディング ターゲットからバインディング ソースへ値が転送されたときに、<see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> イベントを発生させるかどうかを示す値を取得または設定します。</summary>
      <returns>バインディング ソースの値が更新されたときに <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> イベントを発生させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated">
      <summary>バインディング ソースからバインディング ターゲットへ値が転送されたときに <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> イベントを発生させるかどうかを示す値を取得または設定します。</summary>
      <returns>バインディング ターゲットの値が更新されたときに <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> イベントを発生させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnValidationError">
      <summary>バインドされた要素に対して <see cref="E:System.Windows.Controls.Validation.Error" /> 添付イベントを発生させるかどうかを示す値を取得または設定します。</summary>
      <returns>ソースの更新中に検証エラーが発生したときにバインドされた要素に対して<see langword="true" /> 添付イベントを発生させる場合は <see cref="E:System.Windows.Controls.Validation.Error" /> 。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.ShouldSerializeBindings">
      <summary>
        <see cref="P:System.Windows.Data.MultiBinding.Bindings" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.ShouldSerializeValidationRules">
      <summary>
        <see cref="P:System.Windows.Data.MultiBinding.ValidationRules" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter">
      <summary>バインディング ソースの値の更新時にバインディング エンジンが検出した例外を処理するためにカスタム ロジックの提供に使用できるハンドラーを取得または設定します。 これは、<see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトに <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を関連付けている場合にのみ適用できます。</summary>
      <returns>バインディング ソースの値の更新時にバインディング エンジンが検出した例外を処理するためのカスタム ロジックを提供するメソッド。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger">
      <summary>バインディング ソースの更新のタイミングを決定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 値のいずれか 1 つ。 既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /> で、ターゲット依存関係プロパティの既定の <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 値を返します。 ほとんどの依存関係プロパティの既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" /> です。ただし、<see cref="P:System.Windows.Controls.TextBox.Text" /> プロパティの既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" /> です。
プログラムを使って依存関係プロパティの既定の <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 値を確認するには、<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> を使ってプロパティのプロパティ メタデータを取得してから、<see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> プロパティの値を確認します。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors">
      <summary>
        <see cref="T:System.Windows.Controls.DataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions">
      <summary>
        <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を含めるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors">
      <summary>
        <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含めるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidationRules">
      <summary>この <see cref="T:System.Windows.Controls.ValidationRule" /> のインスタンスの <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトのコレクションを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.ValidationRule" /> のインスタンスの <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="T:System.Windows.Data.MultiBindingExpression">
      <summary>
        <see cref="T:System.Windows.Data.MultiBinding" /> の単一インスタンスに関するインスタンス情報を含みます。</summary>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.BindingExpressions">
      <summary>
        <see cref="T:System.Windows.Data.BindingExpression" /> のこのインスタンス内の <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトの読み取り専用のコレクション。 戻り値の型が <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトのコレクションである場合でも、返されたコレクションには、<see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトしか格納されていません。これは、<see cref="T:System.Windows.Data.MultiBinding" /> クラスで現在サポートしているのが <see cref="T:System.Windows.Data.Binding" /> オブジェクトだけであるためです。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.HasError">
      <summary>内部 <see cref="T:System.Windows.Data.Binding" /> オブジェクトまたは <see cref="T:System.Windows.Data.MultiBinding" /> 自体に失敗した検証規則があるかどうかを示す値を返します。</summary>
      <returns>1 つ以上の内部 <see cref="T:System.Windows.Data.Binding" /> オブジェクトまたは <see cref="T:System.Windows.Data.MultiBinding" /> 自体に失敗した検証規則がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.HasValidationError">
      <summary>親のバインディングに、失敗した検証規則があるかどうかを示す値を取得します。</summary>
      <returns>親のバインディングに、失敗した検証規則がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.ParentMultiBinding">
      <summary>この <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトの作成元である <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトの作成元である <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBindingExpression.UpdateSource">
      <summary>
        <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> または <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> バインディングにあるバインディング ソースのプロパティに、現在のバインディング ターゲットの値を送信します。</summary>
    </member>
    <member name="M:System.Windows.Data.MultiBindingExpression.UpdateTarget">
      <summary>バインディング ソース プロパティからバインディング ターゲット プロパティへのデータ転送を強制的に実行します。</summary>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.ValidationError">
      <summary>
        <see cref="T:System.Windows.Controls.ValidationError" /> のこのインスタンスが無効になる原因となった <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationError" /> のこのインスタンスが無効になる原因となった <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Data.ObjectDataProvider">
      <summary>バインディング ソースとして使用できるオブジェクトをラップして作成します。</summary>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.ObjectDataProvider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.BeginQuery">
      <summary>要求されたオブジェクトの作成を開始します。即座に開始するかバックグラウンド スレッドで開始するかは、<see cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" /> プロパティの値に基づいて決まります。</summary>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters">
      <summary>コンストラクターに渡すパラメーターの一覧を取得します。</summary>
      <returns>コンストラクターに渡すパラメーターの一覧。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous">
      <summary>オブジェクトの作成をワーカー スレッドまたはアクティブなコンテキストのどちらで実行するかを示す値を取得または設定します。</summary>
      <returns>オブジェクトの作成をワーカー スレッドで実行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.MethodName">
      <summary>呼び出すメソッドの名前を取得または設定します。</summary>
      <returns>呼び出すメソッドの名前。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.MethodParameters">
      <summary>メソッドに渡すパラメーターの一覧を取得します。</summary>
      <returns>メソッドに渡すパラメーターの一覧。 既定値は空のリストです。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ObjectInstance">
      <summary>バインド ソースとして使用されるオブジェクトを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> と <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" /> から構築されるオブジェクトのインスタンス、または <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> が <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> として使用される <see cref="T:System.Windows.Data.DataSourceProvider" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.ObjectDataProvider" /> に <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> と <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> の両方が割り当てられています。使用できるのはどちらか 1 つだけです。</exception>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ObjectType">
      <summary>インスタンスを作成するオブジェクトの型を取得または設定します。</summary>
      <returns>
        <see langword="null" /> が初期化されていない場合、または明示的に null に設定されている場合、このプロパティは <see cref="T:System.Windows.Data.ObjectDataProvider" /> です。 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> が割り当てられている場合、<see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> はオブジェクトの型を返します。オブジェクトが null の場合は null を返します。 既定値は <see langword="null" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.ObjectDataProvider" /> に <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> と <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> の両方が割り当てられています。使用できるのはどちらか 1 つだけです。</exception>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters">
      <summary>
        <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters">
      <summary>
        <see cref="P:System.Windows.Data.ObjectDataProvider.MethodParameters" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance">
      <summary>
        <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType">
      <summary>
        <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Data.PriorityBinding">
      <summary>1 つのバインド ターゲット プロパティに関連付けられた <see cref="T:System.Windows.Data.Binding" /> オブジェクトのコレクションを記述します。このプロパティは、コレクション内の正常に値を生成する最初のバインドからその値を受け取ります。</summary>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.PriorityBinding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Data.PriorityBinding.Bindings">
      <summary>
        <see cref="T:System.Windows.Data.Binding" /> のこのインスタンスで確立されている <see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.Binding" /> オブジェクトのコレクション。 <see cref="T:System.Windows.Data.PriorityBinding" /> は、現在、型 <see cref="T:System.Windows.Data.Binding" /> のオブジェクトのみをサポートしており、<see cref="T:System.Windows.Data.MultiBinding" /> と <see cref="T:System.Windows.Data.PriorityBinding" /> はサポートしていません。 <see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトに <see cref="T:System.Windows.Data.Binding" /> の子を追加すると、その子が <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトの <see cref="T:System.Windows.Data.BindingBase" /> コレクションに暗黙的に追加されます。 既定値は空のコレクションです。</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.ShouldSerializeBindings">
      <summary>シリアル化プロセスが、このクラスのインスタンスの <see cref="P:System.Windows.Data.PriorityBinding.Bindings" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.Data.PriorityBinding.Bindings" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">子として追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="text">オブジェクトに追加する文字列。</param>
    </member>
    <member name="T:System.Windows.Data.PriorityBindingExpression">
      <summary>
        <see cref="T:System.Windows.Data.PriorityBinding" /> の単一インスタンスに関するインスタンス情報を含みます。</summary>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression">
      <summary>アクティブな <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトを取得します。</summary>
      <returns>アクティブな <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクト。アクティブな <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトがない場合は <see langword="null" />。 戻り値の型は <see cref="T:System.Windows.Data.BindingExpressionBase" /> ですが、返されるオブジェクトは <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトだけです。これは、<see cref="T:System.Windows.Data.PriorityBinding" /> クラスでは現在、<see cref="T:System.Windows.Data.Binding" /> オブジェクトのみがサポートされているためです。</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.BindingExpressions">
      <summary>
        <see cref="T:System.Windows.Data.BindingExpression" /> のこのインスタンス内の <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトの読み取り専用のコレクション。 戻り値の型は <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトのコレクションですが、返されるコレクションに格納されているのは <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトだけです。これは、<see cref="T:System.Windows.Data.PriorityBinding" /> クラスでは現在、<see cref="T:System.Windows.Data.Binding" /> オブジェクトのみがサポートされているためです。</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.HasValidationError">
      <summary>親のバインディングに、失敗した検証規則があるかどうかを示す値を取得します。</summary>
      <returns>親のバインディングに、失敗した検証規則がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.ParentPriorityBinding">
      <summary>この <see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトの作成元である <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Data.PriorityBinding" /> オブジェクトの作成元である <see cref="T:System.Windows.Data.PriorityBindingExpression" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBindingExpression.UpdateSource">
      <summary>アクティブなバインディング上のソースを更新します。</summary>
    </member>
    <member name="M:System.Windows.Data.PriorityBindingExpression.UpdateTarget">
      <summary>アクティブなバインディング上のターゲットを更新します。</summary>
    </member>
    <member name="T:System.Windows.Data.PropertyGroupDescription">
      <summary>プロパティ名を条件として使用して、項目のグループ化について記述します。</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.PropertyGroupDescription" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)">
      <summary>指定したプロパティ名を使用して、<see cref="T:System.Windows.Data.PropertyGroupDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyName">項目が属するグループを指定するプロパティの名前。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)">
      <summary>指定したプロパティ名とコンバーターを使用して、<see cref="T:System.Windows.Data.PropertyGroupDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyName">項目が属するグループを指定するプロパティの名前。 <see langword="null" /> の場合、項目そのものが値コンバーターに渡されます。</param>
      <param name="converter">項目が属するグループを決定するために使用される最終的な値を生成するためにプロパティ値または項目に適用される <see cref="T:System.Windows.Data.IValueConverter" /> オブジェクト。 コンバーターがコレクションを返す場合があります。これは、項目が複数のグループ内に現れることを示します。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)">
      <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.Data.PropertyGroupDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyName">項目が属するグループを指定するプロパティの名前。 <see langword="null" /> の場合、項目そのものが値コンバーターに渡されます。</param>
      <param name="converter">項目が属するグループを決定するために使用される最終的な値を生成するためにプロパティ値または項目に適用される <see cref="T:System.Windows.Data.IValueConverter" /> オブジェクト。 コンバーターがコレクションを返す場合があります。これは、項目が複数のグループ内に現れることを示します。</param>
      <param name="stringComparison">項目の値とグループの名前との比較を指定する <see cref="T:System.StringComparison" /> 値。</param>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.CompareNameAscending">
      <summary>名前の昇順でグループを並べる <see cref="T:System.Collections.IComparer" /> 値を取得します。</summary>
      <returns>名前の昇順でグループを並べる <see cref="T:System.Collections.IComparer" /> 値。</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.CompareNameDescending">
      <summary>名前の降順でグループを並べる <see cref="T:System.Collections.IComparer" /> 値を取得します。</summary>
      <returns>名前の降順でグループを並べる <see cref="T:System.Collections.IComparer" /> 値。</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.Converter">
      <summary>項目が属するグループを決定するために使用される最終的な値を生成するためにプロパティ値または項目に適用されるコンバーターを取得または設定します。</summary>
      <returns>既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>指定したアイテムのグループ名を返します。</summary>
      <param name="item">グループの名前を返す項目。</param>
      <param name="level">グループ化のレベル。</param>
      <param name="culture">コンバーターを提供する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <returns>指定したアイテムのグループ名。</returns>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>項目がグループに属するようにグループ名と項目名が一致するかどうかを示す値を返します。</summary>
      <param name="groupName">確認するグループの名前。</param>
      <param name="itemName">確認する項目の名前。</param>
      <returns>名前が一致し、項目がグループに属している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.PropertyName">
      <summary>項目が属するグループを決定するために使用されるプロパティの名前を取得または設定します。</summary>
      <returns>既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.StringComparison">
      <summary>項目の値 (<see cref="P:System.Windows.Data.PropertyGroupDescription.PropertyName" /> および <see cref="P:System.Windows.Data.PropertyGroupDescription.Converter" /> によって決定される) とグループ名との比較を指定する <see cref="T:System.StringComparison" /> 値を取得または設定します。</summary>
      <returns>既定値は <see cref="T:System.StringComparison" />.<see langword="Ordinal" /> です。</returns>
    </member>
    <member name="T:System.Windows.Data.RelativeSource">
      <summary>バインディング ソースの位置を、バインディング ターゲットの位置を基準とする相対的な位置として示すマークアップ拡張機能を実装します。</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.RelativeSource" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)">
      <summary>初期モードを指定して、<see cref="T:System.Windows.Data.RelativeSource" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="mode">
        <see cref="T:System.Windows.Data.RelativeSourceMode" /> 値のいずれか。</param>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)">
      <summary>初期モードと必要な相対ソースを検出するために追加のツリー探索用の修飾子を使用して、<see cref="T:System.Windows.Data.RelativeSource" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="mode">
        <see cref="T:System.Windows.Data.RelativeSourceMode" /> 値のいずれか。 この署名を関連させるには、これが <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> である必要があります。</param>
      <param name="ancestorType">検索する先祖の <see cref="T:System.Type" />。</param>
      <param name="ancestorLevel">指定した型の先祖すべての中で、目的の先祖の位置を表す序数。</param>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.AncestorLevel">
      <summary>
        <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> モードで、検索する先祖のレベルを取得または設定します。 バインドのターゲット要素に一番近いレベルを示すには、1 を使用します。</summary>
      <returns>先祖レベル。 バインドのターゲット要素に一番近いレベルを示すには、1 を使用します。</returns>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.AncestorType">
      <summary>検索する先祖の型を取得または設定します。</summary>
      <returns>先祖の型。 既定値は <see langword="null" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.RelativeSource" /> は、<see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> モードにはありません。</exception>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Mode">
      <summary>バインディング ターゲットの位置を基準とする、バインディング ソースの相対的な位置を示す <see cref="T:System.Windows.Data.RelativeSourceMode" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.RelativeSourceMode" /> 値のいずれか 1 つ。 既定値は <see langword="null" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">このプロパティは、初期化後に変更できません。 このインスタンスで <see cref="P:System.Windows.Data.RelativeSource.Mode" /> を変更するのではなく、新しい <see cref="T:System.Windows.Data.RelativeSource" /> を作成するか、別の静的なインスタンスを使用します。</exception>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.PreviousData">
      <summary>
        <see cref="T:System.Windows.Data.RelativeSource" /> モード用に構築された <see cref="F:System.Windows.Data.RelativeSourceMode.PreviousData" /> を返すために使用する静的な値を取得します。</summary>
      <returns>静的な <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)">
      <summary>このマークアップ拡張機能で使用するターゲット オブジェクトのプロパティ上の値として設定するオブジェクトを返します。 <see cref="T:System.Windows.Data.RelativeSource" /> の場合、これは、指定したモードに適したソースを使用する別の <see cref="T:System.Windows.Data.RelativeSource" /> です。</summary>
      <param name="serviceProvider">マークアップ拡張機能のサービスを提供できるオブジェクト。 この実装では、このパラメーターを <see langword="null" /> にすることができます。</param>
      <returns>別の <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Self">
      <summary>
        <see cref="T:System.Windows.Data.RelativeSource" /> モード用に構築された <see cref="F:System.Windows.Data.RelativeSourceMode.Self" /> を返すために使用する静的な値を取得します。</summary>
      <returns>静的な <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorLevel">
      <summary>
        <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorType">
      <summary>
        <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.TemplatedParent">
      <summary>
        <see cref="T:System.Windows.Data.RelativeSource" /> モード用に構築された <see cref="F:System.Windows.Data.RelativeSourceMode.TemplatedParent" /> を返すために使用する静的な値を取得します。</summary>
      <returns>静的な <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
    </member>
    <member name="T:System.Windows.Data.RelativeSourceMode">
      <summary>バインディング ターゲットの位置を基準とする相対的なバインディング ソースの位置を記述します。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.FindAncestor">
      <summary>データ バインド要素の親チェーン内の先祖を参照します。 これを使用して、特定の型の先祖またはそのサブクラスにバインドすることができます。 これは、<see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> と <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" /> の両方またはいずれかを指定する場合に使用するモードです。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.PreviousData">
      <summary>表示されるデータ項目の一覧に以前のデータ項目 (データ項目を格納するコントロールではない) をバインドできるようにします。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.Self">
      <summary>バインディングを設定する要素を参照し、その要素の 1 つのプロパティを同じ要素の別のプロパティにバインドできるようにします。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.TemplatedParent">
      <summary>テンプレート (データ バインド要素が存在する) が適用される要素を参照します。 これは、<see cref="T:System.Windows.TemplateBindingExtension" /> の設定に似ていて、<see cref="T:System.Windows.Data.Binding" /> がテンプレート内に存在する場合にのみ適用されます。</summary>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceExceptionFilterCallback">
      <summary>バインディング ソースの値の更新中にスローされる例外をハンドルするメソッドを表します。 これは <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> と一緒に使用する必要があります。</summary>
      <param name="bindExpression">例外を発生させたオブジェクト。</param>
      <param name="exception">発生した例外。</param>
      <returns>通常、次のいずれかのオブジェクト:
  [値] 
  説明 
 <see langword="null" /> すべての例外を無視する場合。 既定の動作では (<see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" /> がない場合)、例外を使用して <see cref="T:System.Windows.Controls.ValidationError" /> を作成し、バインドされている要素の <see cref="P:System.Windows.Controls.Validation.Errors" /> コレクションにこれを追加します。  
  
  任意のオブジェクト 
  <see cref="T:System.Windows.Controls.ValidationError" /> が設定された <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" /> オブジェクトを作成する場合。  
  
<see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトは、バインドされている要素の <see cref="P:System.Windows.Controls.Validation.Errors" /> コレクションに追加されます。  
  
  <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクト。 
  <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトまたは <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトを <see cref="P:System.Windows.Controls.ValidationError.BindingInError" /> として設定する場合。 <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトは、バインドされている要素の <see cref="P:System.Windows.Controls.Validation.Errors" /> コレクションに追加されます。</returns>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceTrigger">
      <summary>バインディング ソースを更新するタイミングを示します。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Default">
      <summary>バインディング ターゲット プロパティの既定の <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 値。 ほとんどの依存関係プロパティの既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" /> です。ただし、<see cref="P:System.Windows.Controls.TextBox.Text" /> プロパティの既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" /> です。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Explicit">
      <summary>
        <see cref="M:System.Windows.Data.BindingExpression.UpdateSource" /> メソッドを呼び出すときにのみ、バインディング ソースを更新します。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.LostFocus">
      <summary>バインディング ターゲット要素がフォーカスを失うたびに、バインド ソースを更新します。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged">
      <summary>バインディング ターゲット プロパティが変更されるたびに、バインディング ソースを即時更新します。</summary>
    </member>
    <member name="T:System.Windows.Data.ValueConversionAttribute">
      <summary>値コンバーターの作成者がコンバーターの実装に関連するデータ型を指定できるようにする属性を表します。</summary>
    </member>
    <member name="M:System.Windows.Data.ValueConversionAttribute.#ctor(System.Type,System.Type)">
      <summary>指定されたソース型およびターゲット型を使用して、<see cref="T:System.Windows.Data.ValueConversionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sourceType">このコンバーターの変換元の種類。</param>
      <param name="targetType">このコンバーターの変換先の型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetType" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
    </member>
    <member name="M:System.Windows.Data.ValueConversionAttribute.GetHashCode">
      <summary>
        <see cref="T:System.Windows.Data.ValueConversionAttribute" /> のインスタンスのハッシュ コードを返します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.ValueConversionAttribute" /> のインスタンスのハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.ParameterType">
      <summary>省略可能な値コンバーター パラメーター オブジェクトの型を取得または設定します。</summary>
      <returns>省略可能な値コンバーター パラメーター オブジェクトの型。</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.SourceType">
      <summary>このコンバーターが変換する種類を取得します。</summary>
      <returns>このコンバーターの変換元の種類。</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.TargetType">
      <summary>このコンバーターの変換先の型を取得します。</summary>
      <returns>このコンバーターの変換先の型。</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.TypeId">
      <summary>この <see cref="T:System.Windows.Data.ValueConversionAttribute" /> インスタンスの一意の識別子を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Data.ValueConversionAttribute" /> インスタンスの一意の識別子。</returns>
    </member>
    <member name="T:System.Windows.Data.ValueUnavailableException">
      <summary>この例外は、値を使用できない場合に <see cref="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" /> メソッドによってスローされます。</summary>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.ValueUnavailableException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:System.Windows.Data.ValueUnavailableException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String)">
      <summary>指定したメッセージを使用して、<see cref="T:System.Windows.Data.ValueUnavailableException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーを説明するメッセージ。</param>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Windows.Data.ValueUnavailableException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因となった例外。 <paramref name="innerException" /> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Windows.Data.XmlDataProvider">
      <summary>データ バインディングのために XML データに対する宣言型のアクセスを可能にします。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.XmlDataProvider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.BaseUri">
      <summary>この型またはメンバーは、WPF インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>ベース URI。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.BeginQuery">
      <summary>XML ノードのコレクションを生成するために、インライン XML または外部ファイル XML の読み込みを準備します。</summary>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.Document">
      <summary>バインディング ソースとして使用される <see cref="T:System.Xml.XmlDocument" /> を取得または設定します。</summary>
      <returns>バインディング ソースとして使用される <see cref="T:System.Xml.XmlDocument" />。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.EndInit">
      <summary>この要素の初期化が完了したことを示します。これにより、保留状態の <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> が他にない場合は <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> が発生します。</summary>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.IsAsynchronous">
      <summary>ノード コレクションの作成を、ワーカー スレッドまたはアクティブなコンテキストのどちらで実行するかを示す値を取得または設定します。</summary>
      <returns>ノード コレクションの作成をワーカー スレッドで実行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeSource">
      <summary>
        <see cref="P:System.Windows.Data.XmlDataProvider.Source" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer">
      <summary>
        <see cref="P:System.Windows.Data.XmlDataProvider.XmlSerializer" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXPath">
      <summary>
        <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.Source">
      <summary>バインディング ソースとして使用される XML データ ファイルの <see cref="T:System.Uri" /> を取得または設定します。</summary>
      <returns>バインディング ソースとして使用される XML データ ファイルの <see cref="T:System.Uri" />。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>ベース URI。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XmlNamespaceManager">
      <summary>
        <see cref="T:System.Xml.XmlNamespaceManager" /> クエリの実行で使用する <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Xml.XmlNamespaceManager" /> クエリの実行に使用する <see cref="P:System.Windows.Data.XmlDataProvider.XPath" />。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XmlSerializer">
      <summary>インラインの XML コンテンツを取得します。</summary>
      <returns>インラインの XML コンテンツ。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XPath">
      <summary>データ コレクションの生成に使用する <see langword="XPath" /> クエリを取得または設定します。</summary>
      <returns>データ コレクションの生成に使用する <see langword="XPath" /> クエリ。 既定値は空の文字列です。</returns>
    </member>
    <member name="T:System.Windows.Data.XmlNamespaceMapping">
      <summary>Uniform Resource Identifier (URI) とプレフィックスとの間のマッピングを宣言します。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.#ctor(System.String,System.Uri)">
      <summary>指定したプレフィックスと Uniform Resource Identifier (URI) を使用して、<see cref="T:System.Windows.Data.XmlNamespaceMapping" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="prefix">Extensible Application Markup Language (XAML) で使用するプレフィックス。</param>
      <param name="uri">作成するマッピングの対象となる名前空間の <see cref="T:System.Uri" />。</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.Equals(System.Object)">
      <summary>この <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> が、指定したインスタンスと等しいかどうかを示す値を返します。</summary>
      <param name="obj">等しいかどうかを比較するインスタンス。</param>
      <returns>2 つのインスタンスが同じである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.GetHashCode">
      <summary>この <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> のハッシュ コードを返します。</summary>
      <returns>この <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.op_Equality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
      <summary>値で等価比較を実行します。</summary>
      <param name="mappingA">比較対象の第 1 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクト。</param>
      <param name="mappingB">比較する 2 番目の <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクト。</param>
      <returns>2 つの <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.op_Inequality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
      <summary>値で非等価比較を実行します。</summary>
      <param name="mappingA">比較対象の第 1 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクト。</param>
      <param name="mappingB">比較する 2 番目の <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクト。</param>
      <returns>2 つの <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクトが同じでない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMapping.Prefix">
      <summary>Extensible Application Markup Language (XAML) で使用するプレフィックスを取得または設定します。</summary>
      <returns>URI に関連付けるプレフィックス。 既定値は空の文字列 ("") です。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMapping.Uri">
      <summary>マッピングを作成する対象の名前空間の <see cref="T:System.Uri" /> を取得または設定します。</summary>
      <returns>名前空間の URI。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="T:System.Windows.Data.XmlNamespaceMappingCollection">
      <summary>
        <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.XmlNamespaceMappingCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Add(System.Windows.Data.XmlNamespaceMapping)">
      <summary>
        <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクトをこのコレクションに追加します。</summary>
      <param name="mapping">追加する <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクト。 これは <see langword="null" /> にすることはできません。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapping" /> が <see langword="null" /> の場合。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> オブジェクトの <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.AddChild(System.Object)">
      <summary>
        <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクトをこのコレクションに追加します。</summary>
      <param name="value">追加する <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクト。 これは <see langword="null" /> にすることはできません。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mapping" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.AddText(System.String)">
      <summary>この <see cref="T:System.Windows.Data.XmlNamespaceMappingCollection" /> オブジェクトの子としてテキスト文字列を追加します。</summary>
      <param name="text">子として追加するテキスト文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Clear">
      <summary>このコレクション内の <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクトをすべて削除します。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Contains(System.Windows.Data.XmlNamespaceMapping)">
      <summary>指定した <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクトがこのコレクションに含まれているかどうかを示す値を返します。</summary>
      <param name="mapping">目的の <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクト。 これは <see langword="null" /> にすることはできません。</param>
      <returns>指定した <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクトがこのコレクションに含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapping" /> が <see langword="null" /> の場合。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> オブジェクトの <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.CopyTo(System.Windows.Data.XmlNamespaceMapping[],System.Int32)">
      <summary>指定したインデックスを開始位置として、指定した配列にコレクション項目をコピーします。</summary>
      <param name="array">コレクションからコピーされた項目のコピー先の配列。</param>
      <param name="arrayIndex">コピーの開始位置となる、配列の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" /> の場合。</exception>
      <exception cref="T:System.ArgumentException">項目の数が配列の長さを超える場合。</exception>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMappingCollection.Count">
      <summary>コレクション内の <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクト数を取得します。</summary>
      <returns>コレクションに含まれる <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクトの数。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.GetEnumerator">
      <summary>このコレクション内の項目を列挙するのに使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクトを返します。</summary>
      <returns>このコレクション内の項目を列挙するのに使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMappingCollection.IsReadOnly">
      <summary>このコレクションが読み取り専用かどうかを示す値を取得します。</summary>
      <returns>これは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.ProtectedGetEnumerator">
      <summary>汎用 <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクトを返します。</summary>
      <returns>汎用 <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Remove(System.Windows.Data.XmlNamespaceMapping)">
      <summary>指定した <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクトをこのコレクションから削除します。</summary>
      <param name="mapping">削除する <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクト。 これは <see langword="null" /> にすることはできません。</param>
      <returns>指定した <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> オブジェクトが正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapping" /> が <see langword="null" /> の場合。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> オブジェクトの <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> が <see langword="null" /> の場合。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Collections#Generic#IEnumerable{System#Windows#Data#XmlNamespaceMapping}#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />」をご覧ください。</summary>
      <param name="value">追加する子 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />」をご覧ください。</summary>
      <param name="text">
        <see cref="T:System.Object" /> に追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.DataTemplate">
      <summary>データ オブジェクトのビジュアル構造を記述します。</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.#ctor">
      <summary>
        <see cref="T:System.Windows.DataTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.#ctor(System.Object)">
      <summary>指定した <see cref="T:System.Windows.DataTemplate" /> プロパティを使用して、<see cref="P:System.Windows.DataTemplate.DataType" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataType">テンプレートがオブジェクト データ用である場合、これはデータ オブジェクトの Type 名です。</param>
    </member>
    <member name="P:System.Windows.DataTemplate.DataTemplateKey">
      <summary>
        <see cref="T:System.Windows.DataTemplate" /> の既定のキーを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.DataTemplate" /> の既定のキー。</returns>
    </member>
    <member name="P:System.Windows.DataTemplate.DataType">
      <summary>この <see cref="T:System.Windows.DataTemplate" /> が対象としている型を取得または設定します。</summary>
      <returns>既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.DataTemplate.Triggers">
      <summary>プロパティ値を適用するトリガー、または 1 つ以上の条件に基づいてアクションを実行するトリガーのコレクションを取得します。</summary>
      <returns>トリガー オブジェクトのコレクション。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>規則のセットに対してテンプレートが適用される親をチェックします。</summary>
      <param name="templatedParent">このテンプレートが適用される要素。</param>
    </member>
    <member name="T:System.Windows.DataTemplateKey">
      <summary>
        <see cref="T:System.Windows.DataTemplate" /> クラスのリソース キーを表します。</summary>
    </member>
    <member name="M:System.Windows.DataTemplateKey.#ctor">
      <summary>
        <see cref="T:System.Windows.DataTemplateKey" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.DataTemplateKey.#ctor(System.Object)">
      <summary>型を指定して、<see cref="T:System.Windows.DataTemplateKey" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataType">該当するテンプレートがデザインされている型。 これは、<see cref="T:System.Type" /> (<see cref="T:System.Windows.DataTemplate" /> が、指定した型の項目を表示するために使用されていることを示す場合)、または文字列 (<see cref="T:System.Windows.DataTemplate" /> が、指定したタグ名の <see cref="T:System.Xml.XmlNode" /> 要素を表示するために使用されていることを示す場合) のいずれかです。</param>
    </member>
    <member name="T:System.Windows.DataTrigger">
      <summary>バインドされたデータが指定した条件を満たしたときに、プロパティ値を適用するかアクションを実行するトリガーを表します。</summary>
    </member>
    <member name="M:System.Windows.DataTrigger.#ctor">
      <summary>
        <see cref="T:System.Windows.DataTrigger" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.DataTrigger.Binding">
      <summary>データ オブジェクトのプロパティ値を作成するバインドを取得または設定します。</summary>
      <returns>既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
      <summary>マークアップ拡張機能によって <see cref="T:System.Windows.DataTrigger" /> オブジェクトのプロパティの値が設定された場合の処理を行います。</summary>
      <param name="targetObject">マークアップ拡張機能によって値が設定されるオブジェクト。</param>
      <param name="eventArgs">マークアップ拡張機能の処理に関連したデータ。</param>
    </member>
    <member name="P:System.Windows.DataTrigger.Setters">
      <summary>データ項目が指定した条件を満たしたときに適用するプロパティ値を表す <see cref="T:System.Windows.Setter" /> オブジェクトのコレクションを取得します。</summary>
      <returns>既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.DataTrigger.Value">
      <summary>データ オブジェクトのプロパティ値と比較する値を取得または設定します。</summary>
      <returns>既定値は <see langword="null" /> です。 「例外」も参照してください。</returns>
      <exception cref="T:System.ArgumentException">式はサポートされていません。 バインディングはサポートされていません。</exception>
    </member>
    <member name="T:System.Windows.DeferrableContent">
      <summary>BAML 内にストリームとして保持される遅延可能なコンテンツを表します。</summary>
    </member>
    <member name="T:System.Windows.DeferrableContentConverter">
      <summary>ストリームを <see cref="T:System.Windows.DeferrableContent" /> インスタンスに変換します。</summary>
    </member>
    <member name="M:System.Windows.DeferrableContentConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.DeferrableContentConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.DeferrableContentConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが指定されたオブジェクトを <see cref="T:System.Windows.DeferrableContent" /> オブジェクトに変換できるかどうかを示す値を返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換元の型を表す <see cref="T:System.Type" />。</param>
      <returns>コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.DeferrableContentConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定されたストリームを新しい <see cref="T:System.Windows.DeferrableContent" /> オブジェクトに変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換の対象となる変換元ストリーム。</param>
      <returns>新しい <see cref="T:System.Windows.DeferrableContent" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="context" /> は、BAML に必要な XAML スキーマ コンテキストを提供できません。

または -
<paramref name="context" /> の <see cref="T:System.Windows.Markup.IProvideValueTarget" /> サービス解釈は、対象オブジェクトが <see cref="T:System.Windows.ResourceDictionary" /> ではないことにを判定します。

または -
<paramref name="value" /> が有効なバイト ストリームではありません。</exception>
    </member>
    <member name="T:System.Windows.DependencyPropertyHelper">
      <summary>依存関係プロパティの有効値のプロパティ システムのソースを報告する単一のヘルパー メソッド (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />) を提供します。</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>特定の <see cref="T:System.Windows.DependencyObject" /> の指定した依存関係プロパティのさまざまなメタデータとプロパティ システム特性を報告する構造体を返します。</summary>
      <param name="dependencyObject">情報を報告する <paramref name="dependencyProperty" /> を格納する要素。</param>
      <param name="dependencyProperty">情報を報告する依存関係プロパティの識別子。</param>
      <returns>特定の情報を報告する <see cref="T:System.Windows.ValueSource" /> 構造体。</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>指定した要素が、別の場所の変更に基づいて実行時に変わる可能性のある、指定したプロパティの値を定義するテンプレートのインスタンスに属するかどうかを示します。</summary>
      <param name="elementInTemplate">テンプレート インスタンスに属している要素。</param>
      <param name="dependencyProperty">依存関係プロパティ。</param>
      <returns>
        <paramref name="elementInTemplate" /> が別の場所の変更に基づいて実行時に変わる可能性のある、指定したプロパティの値を定義するテンプレートのインスタンスに属する場合は <see langword="true" />、それ以外の場合、<see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Diagnostics.ResourceDictionaryDiagnostics">
      <summary>ジェネリックとテーマが適用された <see cref="T:System.Windows.ResourceDictionary" /> インスタンスの列挙を有効にし、<see cref="T:System.Windows.ResourceDictionary" /> インスタンスの読み込みとアンロードをリッスンするための通知インフラストラクチャを提供します。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaries">
      <summary>マネージド デバッガーがアタッチされている場合は、アプリケーションによって読み込まれる、ジェネリック <see cref="T:System.Windows.ResourceDictionary" /> オブジェクトのすべてのインスタンスを取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaries" /> プロパティ</returns>
    </member>
    <member name="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaryLoaded">
      <summary>マネージド デバッガーがアタッチされ、ジェネリック <see cref="T:System.Windows.ResourceDictionary" /> オブジェクトがアプリケーションによって読み込まれている場合に発生します。</summary>
    </member>
    <member name="M:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GetApplicationOwners(System.Windows.ResourceDictionary)">
      <summary>指定したリソース ディクショナリのアプリケーション所有者を取得します。</summary>
      <param name="dictionary">リソース ディクショナリ。</param>
      <returns>
        <paramref name="dictionary" /> のアプリケーション所有者。 アプリケーション所有者がいない場合、メソッドは <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GetFrameworkContentElementOwners(System.Windows.ResourceDictionary)">
      <summary>指定したリソース ディクショナリのフレームワーク コンテンツ所有者を取得します。</summary>
      <param name="dictionary">リソース ディクショナリ。</param>
      <returns>
        <paramref name="dictionary" /> のフレームワーク コンテンツ所有者。 フレームワーク コンテンツ所有者がいない場合、このメソッドは <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GetFrameworkElementOwners(System.Windows.ResourceDictionary)">
      <summary>指定したリソース ディクショナリのフレームワーク要素所有者を取得します。</summary>
      <param name="dictionary">リソース ディクショナリ。</param>
      <returns>
        <paramref name="dictionary" /> のフレームワーク要素所有者。 フレームワーク要素所有者がいない場合、このメソッドは <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GetResourceDictionariesForSource(System.Uri)">
      <summary>指定されたソース URI から作成されたリソース ディクショナリを検索します。</summary>
      <param name="uri">ソース URI。</param>
      <returns>
        <paramref name="uri" /> から作成されたリソース ディクショナリ。 Visual 診断が有効でない場合、<see langword="null" /> 環境変数が設定されていないか、<see langword="ENABLE_XAML_DIAGNOSTICS_SOURCE_INFO" /> に設定されているか、または <see langword="false" /> からリソース ディクショナリが作成されていない場合、メソッドは <paramref name="uri" /> を返します。</returns>
    </member>
    <member name="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.StaticResourceResolved">
      <summary>静的リソース参照が解決されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaries">
      <summary>マネージド デバッガーがアタッチされている場合は、アプリケーションによって読み込まれる、テーマが適用された <see cref="T:System.Windows.ResourceDictionary" /> オブジェクトのすべてのインスタンスを取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaries" />
      </returns>
    </member>
    <member name="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryLoaded">
      <summary>マネージド デバッガーがアタッチされ、テーマが適用された <see cref="T:System.Windows.ResourceDictionary" /> オブジェクトがアプリケーションによって読み込まれている場合に発生します。</summary>
    </member>
    <member name="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryUnloaded">
      <summary>マネージド デバッガーがアタッチされ、テーマが適用された <see cref="T:System.Windows.ResourceDictionary" /> オブジェクトがアプリケーションによって読み込まれていない場合に発生します。</summary>
    </member>
    <member name="T:System.Windows.Diagnostics.ResourceDictionaryInfo">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" /> オブジェクトに関する情報を表します。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryInfo.Assembly">
      <summary>
        <see cref="P:System.Windows.Diagnostics.ResourceDictionaryInfo.ResourceDictionaryAssembly" /> プロパティによって参照される <see cref="T:System.Windows.ResourceDictionary" /> オブジェクトを使用するアセンブリを取得します。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryInfo.ResourceDictionary">
      <summary>この <see cref="T:System.Windows.Diagnostics.ResourceDictionaryInfo" /> オブジェクト インスタンスによって説明される追加情報のリソース ディクショナリを取得します。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryInfo.ResourceDictionaryAssembly">
      <summary>リソース ディクショナリの読み込み元となるアセンブリの名前を取得します。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryInfo.SourceUri">
      <summary>リソース ディクショナリの読み込み元となる <see cref="P:System.Windows.Diagnostics.ResourceDictionaryInfo.ResourceDictionaryAssembly" /> プロパティに埋め込まれているコンパイル済みの BAML ファイルの URI を取得します。</summary>
    </member>
    <member name="T:System.Windows.Diagnostics.ResourceDictionaryLoadedEventArgs">
      <summary>
        <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaryLoaded" /> イベントおよび <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryLoaded" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryLoadedEventArgs.ResourceDictionaryInfo">
      <summary>
        <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaryLoaded" /> イベントおよび <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryLoaded" /> イベントのデータを取得します。</summary>
      <returns>
        <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.GenericResourceDictionaryLoaded" /> イベントおよび <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryLoaded" /> イベントのデータ。</returns>
    </member>
    <member name="T:System.Windows.Diagnostics.ResourceDictionaryUnloadedEventArgs">
      <summary>
        <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryUnloaded" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.ResourceDictionaryUnloadedEventArgs.ResourceDictionaryInfo">
      <summary>
        <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryUnloaded" /> イベントのデータを取得します。</summary>
      <returns>
        <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.ThemedResourceDictionaryUnloaded" /> イベントのデータ。</returns>
    </member>
    <member name="T:System.Windows.Diagnostics.StaticResourceResolvedEventArgs">
      <summary>
        <see cref="E:System.Windows.Diagnostics.ResourceDictionaryDiagnostics.StaticResourceResolved" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Diagnostics.StaticResourceResolvedEventArgs.ResourceDictionary">
      <summary>リソース ディクショナリの名前を取得します。</summary>
      <returns>リソース ディクショナリの名前。</returns>
    </member>
    <member name="P:System.Windows.Diagnostics.StaticResourceResolvedEventArgs.ResourceKey">
      <summary>要求されたリソースのキー。</summary>
      <returns>要求されたリソースのキー。</returns>
    </member>
    <member name="P:System.Windows.Diagnostics.StaticResourceResolvedEventArgs.TargetObject">
      <summary>ターゲット プロパティに割り当てる値を取得します。</summary>
      <returns>ターゲット プロパティに割り当てる値。</returns>
    </member>
    <member name="P:System.Windows.Diagnostics.StaticResourceResolvedEventArgs.TargetProperty">
      <summary>リソースの設定対象のプロパティを取得します。</summary>
      <returns>リソースの設定対象のプロパティ。</returns>
    </member>
    <member name="T:System.Windows.DialogResultConverter">
      <summary>
        <see cref="P:System.Windows.Window.DialogResult" /> 型の <see cref="T:System.Nullable`1" /> 値である <see cref="T:System.Boolean" /> プロパティと他の型の間の変換を行います。</summary>
    </member>
    <member name="M:System.Windows.DialogResultConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.DialogResultConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> は、他の型から <see cref="P:System.Windows.Window.DialogResult" /> (<see cref="T:System.Nullable`1" /> 型の <see cref="T:System.Boolean" /> 値) への変換をサポートしていません。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換前の型を表す <see cref="T:System.Type" />。</param>
      <returns>常に <see langword="false" /> を返す <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Windows.DialogResultConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> は、<see cref="P:System.Windows.Window.DialogResult" /> (<see cref="T:System.Nullable`1" /> 型の <see cref="T:System.Boolean" /> 値) から他の型への変換をサポートしていません。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換先の型を表す <see cref="T:System.Type" />。</param>
      <returns>常に <see langword="false" /> を返す <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Windows.DialogResultConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> は、<see cref="P:System.Windows.Window.DialogResult" /> (<see cref="T:System.Nullable`1" /> 型の <see cref="T:System.Boolean" /> 値) から他の型への変換をサポートしていません。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="cultureInfo">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。 <see langword="null" /> を渡すと、現在のカルチャが使用されます。</param>
      <param name="source">変換対象の <see cref="T:System.Object" />。</param>
      <returns>常に <see cref="T:System.InvalidOperationException" /> が発生します。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.DialogResultConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> が呼び出されます。</exception>
    </member>
    <member name="M:System.Windows.DialogResultConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> は、他の型から <see cref="P:System.Windows.Window.DialogResult" /> (<see cref="T:System.Nullable`1" /> 型の <see cref="T:System.Boolean" /> 値) への変換をサポートしていません。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="cultureInfo">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。 <see langword="null" /> を渡すと、現在のカルチャが使用されます。</param>
      <param name="value">変換対象の <see cref="T:System.Object" />。</param>
      <param name="destinationType">value パラメーターの変換先の <see cref="T:System.Type" />。</param>
      <returns>常に <see cref="T:System.InvalidOperationException" /> が発生します。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.DialogResultConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> が呼び出されます。</exception>
    </member>
    <member name="T:System.Windows.Documents.Adorner">
      <summary>
        <see cref="T:System.Windows.UIElement" /> を装飾する <see cref="T:System.Windows.FrameworkElement" /> を表す抽象クラスです。</summary>
    </member>
    <member name="M:System.Windows.Documents.Adorner.#ctor(System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.Documents.Adorner" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="adornedElement">装飾のバインド先の要素。</param>
      <exception cref="T:System.ArgumentNullException">adornedElement が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Documents.Adorner.AdornedElement">
      <summary>この装飾のバインド先の <see cref="T:System.Windows.UIElement" /> を取得します。</summary>
      <returns>この装飾のバインド先の要素。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Documents.Adorner.GetDesiredTransform(System.Windows.Media.GeneralTransform)">
      <summary>装飾対象の要素に現在適用されている変換に基づいて、装飾の <see cref="T:System.Windows.Media.Transform" /> を返します。</summary>
      <param name="transform">装飾対象の要素に現在適用されている変換。</param>
      <returns>装飾に適用する変換。</returns>
    </member>
    <member name="M:System.Windows.Documents.Adorner.GetLayoutClip(System.Windows.Size)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />」をご覧ください。</summary>
      <param name="layoutSlotSize">要素によって提供される使用可能なサイズ。</param>
      <returns>潜在的なクリッピング ジオメトリ。</returns>
    </member>
    <member name="P:System.Windows.Documents.Adorner.IsClipEnabled">
      <summary>装飾のクリッピングが有効かどうかを示す値を取得または設定します。</summary>
      <returns>装飾のクリッピングが有効かどうかを示す <see langword="Boolean" /> 値。
このプロパティが <see langword="false" /> の場合、装飾はクリッピングされません。
このプロパティが <see langword="true" /> の場合、装飾は装飾対象の要素と同じクリッピング ジオメトリを使用してクリッピングされます。
既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Documents.Adorner.MeasureOverride(System.Windows.Size)">
      <summary>装飾の測定の任意のカスタム動作を実装します。</summary>
      <param name="constraint">装飾が制約されるサイズ。</param>
      <returns>装飾に必要なレイアウト空間の量を表す <see cref="T:System.Windows.Size" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Documents.AdornerDecorator">
      <summary>ビジュアル ツリー内の子要素に <see cref="T:System.Windows.Documents.AdornerLayer" /> を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.AdornerDecorator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.AdornerLayer">
      <summary>この <see cref="T:System.Windows.Documents.AdornerLayer" /> に関連付けられている <see cref="T:System.Windows.Documents.AdornerDecorator" /> を取得します。</summary>
      <returns>この装飾デコレータに関連付けられている <see cref="T:System.Windows.Documents.AdornerLayer" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.ArrangeOverride(System.Windows.Size)">
      <summary>子要素を配置し、<see cref="T:System.Windows.Documents.AdornerDecorator" /> のサイズを決定します。</summary>
      <param name="finalSize">親によって予約されたこの要素のサイズ。</param>
      <returns>要素に必要な実際のサイズ。  通常、この戻り値は、finalSize に渡された値と同じです。</returns>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.Child">
      <summary>
        <see cref="T:System.Windows.Documents.AdornerDecorator" /> の単一の子を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.AdornerDecorator" /> の単一の子。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.GetVisualChild(System.Int32)">
      <summary>指定した <paramref name="index" /> 位置にある <see cref="T:System.Windows.Media.Visual" /> 子を取得します。</summary>
      <param name="index">必要な子 <see cref="T:System.Windows.Media.Visual" /> のインデックス位置。</param>
      <returns>親 <see cref="T:System.Windows.Media.Visual" /> 要素の子 <see cref="T:System.Windows.Controls.Viewbox" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.MeasureOverride(System.Windows.Size)">
      <summary>子要素に必要なサイズを測定し、<see cref="T:System.Windows.Documents.AdornerDecorator" /> のサイズを決定します。</summary>
      <param name="constraint">
        <see cref="T:System.Windows.Documents.AdornerDecorator" /> が制約されるサイズ。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> に必要なレイアウト空間の量を表す <see cref="T:System.Windows.Documents.AdornerDecorator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.VisualChildrenCount">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> のこのインスタンス内の子 <see cref="T:System.Windows.Documents.AdornerDecorator" /> オブジェクトの数を取得します。</summary>
      <returns>
        <c>2</c> ( <see cref="T:System.Windows.Documents.AdornerLayer" />の場合<see cref="P:System.Windows.Documents.AdornerDecorator.Child" />は1、の場合は 1)、 <see cref="T:System.Windows.Documents.AdornerDecorator" />またはが子を持たない場合は<c>0</c>を返します。</returns>
    </member>
    <member name="T:System.Windows.Documents.AdornerLayer">
      <summary>装飾の描画のためのサーフェイスを表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Add(System.Windows.Documents.Adorner)">
      <summary>装飾層に装飾を追加します。</summary>
      <param name="adorner">追加する装飾。</param>
      <exception cref="T:System.ArgumentNullException">adorner が null の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point)">
      <summary>指定したポイントの <see cref="T:System.Windows.Media.AdornerHitTestResult" /> を取得します。</summary>
      <param name="point">ヒット テストの対象となる点。</param>
      <returns>指定したポイントの <see cref="T:System.Windows.Media.AdornerHitTestResult" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.ArrangeOverride(System.Windows.Size)">
      <summary>子要素を配置し、<see cref="T:System.Windows.Documents.AdornerLayer" /> のサイズを決定します。</summary>
      <param name="finalSize">親によって予約されたこの要素のサイズ。</param>
      <returns>要素に必要な実際のサイズ。  通常、この戻り値は、finalSize に渡された値と同じです。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetAdornerLayer(System.Windows.Media.Visual)">
      <summary>ビジュアル ツリー内の指定した <see cref="T:System.Windows.Media.Visual" /> の上にある最初の装飾層を返します。</summary>
      <param name="visual">装飾層の検索対象となるビジュアル要素。</param>
      <returns>指定したビジュアルの装飾層。装飾層が見つからない場合は null。</returns>
      <exception cref="T:System.ArgumentNullException">visual が null の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetAdorners(System.Windows.UIElement)">
      <summary>指定された <see cref="T:System.Windows.UIElement" /> にバインドされる装飾の配列を返します。</summary>
      <param name="element">装飾の配列を取得する <see cref="T:System.Windows.UIElement" />。</param>
      <returns>指定された <see cref="T:System.Windows.UIElement" /> を装飾する装飾の配列。指定された要素に装飾がバインドされていない場合は null。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetVisualChild(System.Int32)">
      <summary>指定した <paramref name="index" /> 位置にある <see cref="T:System.Windows.Media.Visual" /> 子を取得します。</summary>
      <param name="index">必要な子 <see cref="T:System.Windows.Media.Visual" /> のインデックス位置。</param>
      <returns>親 <see cref="T:System.Windows.Media.Visual" /> 要素の子 <see cref="T:System.Windows.Documents.AdornerLayer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.AdornerLayer.LogicalChildren">
      <summary>この <see cref="T:System.Windows.Documents.AdornerLayer" /> 要素の論理上の子要素を反復処理できる列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.MeasureOverride(System.Windows.Size)">
      <summary>子要素に必要なサイズを測定し、<see cref="T:System.Windows.Documents.AdornerLayer" /> のサイズを決定します。</summary>
      <param name="constraint">使用されません。</param>
      <returns>このメソッドは、常に (0,0) の <see cref="T:System.Windows.Size" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Remove(System.Windows.Documents.Adorner)">
      <summary>指定された <see cref="T:System.Windows.Documents.Adorner" /> を装飾 (adorner) 層から削除します。</summary>
      <param name="adorner">削除する <see cref="T:System.Windows.Documents.Adorner" />。</param>
      <exception cref="T:System.ArgumentNullException">adorner が null の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Update">
      <summary>レイアウトを更新し、装飾層内のすべての装飾を再描画します。</summary>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Update(System.Windows.UIElement)">
      <summary>レイアウトを更新し、指定した <see cref="T:System.Windows.UIElement" /> にバインドされた装飾層内のすべての装飾を再描画します。</summary>
      <param name="element">更新する装飾に関連付けられた <see cref="T:System.Windows.UIElement" />。</param>
      <exception cref="T:System.ArgumentNullException">element が null の場合に発生します。</exception>
      <exception cref="T:System.InvalidOperationException">指定した要素が見つからない場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.AdornerLayer.VisualChildrenCount">
      <summary>
        <see cref="T:System.Windows.Media.Visual" /> のこのインスタンス内の子 <see cref="T:System.Windows.Documents.AdornerLayer" /> オブジェクトの数を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Visual" /> のこのインスタンス内の子 <see cref="T:System.Windows.Documents.AdornerLayer" /> オブジェクトの数。</returns>
    </member>
    <member name="T:System.Windows.Documents.AnchoredBlock">
      <summary>
        <see cref="T:System.Windows.Documents.Inline" /> 要素をフロー コンテンツに固定するのに使用される <see cref="T:System.Windows.Documents.Block" /> 要素の基になる抽象クラス。</summary>
    </member>
    <member name="M:System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>派生クラスによって呼び出されたときに、<see cref="T:System.Windows.Documents.Block" /> の新しい子孫の初期コンテンツとして指定された <see cref="T:System.Windows.Documents.AnchoredBlock" /> オブジェクトと、<see cref="T:System.Windows.Documents.TextPointer" /> の新しい子孫の挿入位置を指定する <see cref="T:System.Windows.Documents.AnchoredBlock" /> を取得して基本クラスの値を初期化します。</summary>
      <param name="block">新しい要素の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Block" /> オブジェクト。  このパラメーターは、<see langword="null" /> でもかまいません。その場合、<see cref="T:System.Windows.Documents.Block" /> は挿入されません。</param>
      <param name="insertionPosition">要素の作成後に、この要素を挿入する挿入位置を指定する <see cref="T:System.Windows.Documents.TextPointer" />。自動挿入を行わない場合は <see langword="null" />。</param>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Blocks">
      <summary>要素の内容を構成する最上位レベルの <see cref="T:System.Windows.Documents.BlockCollection" /> 要素を含む <see cref="T:System.Windows.Documents.Block" /> を取得します。</summary>
      <returns>要素の内容を構成する <see cref="T:System.Windows.Documents.Block" /> 要素を含む <see cref="T:System.Windows.Documents.BlockCollection" />。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.BorderBrush">
      <summary>要素の境界線を描画するときに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>要素の境界線に適用するために使用するブラシ。 既定値は<see langword="null" />ブラシです。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.BorderBrushProperty">
      <summary>
        <see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.BorderThickness">
      <summary>要素の境界線の太さを取得または設定します。</summary>
      <returns>適用する境界線の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。
既定値は 0 (0.0) の均一の太さです。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty">
      <summary>
        <see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.LineHeight">
      <summary>各コンテンツ行の高さを取得または設定します。</summary>
      <returns>デバイスに依存しないピクセルで行の高さを指定する double 値。  <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /><c>0.0034</c>以上かつ<c>16万</c>以下である必要があります。
値 (属性<see cref="F:System.Double.NaN" />値 "<c>Auto</c>" に相当) を指定すると、現在のフォント特性に基づいて行の高さが自動的に決定されます。
既定値は <see cref="F:System.Double.NaN" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> を正でない値に設定しようとすると発生します。</exception>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.LineHeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy">
      <summary>テキスト要素内の各テキスト行の行ボックスを決定する際に使用する機構を取得または設定します。</summary>
      <returns>テキスト要素内の各テキスト行の行ボックスを決定する際に使用する機構。 既定値は <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty">
      <summary>
        <see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Margin">
      <summary>要素の余白の厚みを取得または設定します。</summary>
      <returns>適用する余白の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。
既定値は 0 (0.0) の均一の太さです。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.MarginProperty">
      <summary>
        <see cref="P:System.Windows.Documents.AnchoredBlock.Margin" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Padding">
      <summary>要素のパディングの厚みを取得または設定します。</summary>
      <returns>適用するパディングの量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。
既定値は 0 (0.0) の均一の太さです。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.PaddingProperty">
      <summary>
        <see cref="P:System.Windows.Documents.AnchoredBlock.Padding" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>
        <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> の派生オブジェクトのシリアル化中に <see cref="T:System.Windows.Documents.AnchoredBlock" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <param name="manager">このオブジェクトのシリアル化サービス マネージャー オブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.TextAlignment">
      <summary>テキスト コンテンツの水平方向の配置を示す値を取得または設定します。</summary>
      <returns>目的の配置を指定する <see cref="T:System.Windows.TextAlignment" /> 列挙体のメンバー。
既定値は <see cref="F:System.Windows.TextAlignment.Left" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.Block">
      <summary>すべてのブロック レベルのフロー コンテンツ要素のベースを提供する抽象クラス。</summary>
    </member>
    <member name="M:System.Windows.Documents.Block.#ctor">
      <summary>派生クラスによって呼び出されるときに <see cref="T:System.Windows.Documents.Block" /> 基本クラスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.BorderBrush">
      <summary>要素の境界線を描画するときに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>要素の境界線に適用するために使用するブラシ。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BorderBrushProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.BorderBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.BorderThickness">
      <summary>要素の境界線の太さを取得または設定します。</summary>
      <returns>適用する境界線の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。 既定では 0 (0.0) の均一の幅です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BorderThicknessProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.BorderThickness" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.BreakColumnBefore">
      <summary>この要素が列に基づく表示に参加する場合に要素の前に段区切りを自動的に挿入するかどうかを示す値を取得または設定します。</summary>
      <returns>この要素の前に段区切りを自動的に挿入する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BreakColumnBeforeProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.BreakColumnBefore" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.BreakPageBefore">
      <summary>この要素の前にページ区切りを自動的に挿入するかどうかを示す値を取得または設定します。</summary>
      <returns>この要素の前にページ区切りを自動的に挿入する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BreakPageBeforeProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.BreakPageBefore" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.ClearFloaters">
      <summary>
        <see cref="T:System.Windows.Documents.Floater" /> 要素に含まれる <see cref="T:System.Windows.Documents.Block" /> 要素を再配置する方向を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.WrapDirection" /> 要素に含まれる他のコンテンツから <see cref="T:System.Windows.Documents.Floater" /> 要素を分離する方向を指定する <see cref="T:System.Windows.Documents.Block" /> 値のいずれか。 既定値は <see cref="F:System.Windows.WrapDirection.None" /> で、浮遊要素をその位置に描画することを示します。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.ClearFloatersProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.ClearFloaters" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.FlowDirection">
      <summary>
        <see cref="T:System.Windows.Documents.Block" /> 要素内のコンテンツのフローの相対的な方向を指定する値を取得または設定します。</summary>
      <returns>相対的なフロー方向を指定する <see cref="T:System.Windows.FlowDirection" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.FlowDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.FlowDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> プロパティの値を取得する対象の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 添付プロパティの現在の値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.LineHeight" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Block.LineHeight" /> プロパティの値を取得する対象の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.LineHeight" /> 添付プロパティの現在の値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 添付プロパティ値の取得元の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 添付プロパティの現在の値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Block.TextAlignment" /> プロパティの値を取得する対象の依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 添付プロパティの現在の値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Documents.Block.IsHyphenationEnabled">
      <summary>単語の自動ハイフネーションが有効かどうかを示す値を取得または設定します。</summary>
      <returns>自動改行と単語の自動ハイフネーションが有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.IsHyphenationEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.LineHeight">
      <summary>各コンテンツ行の高さを取得または設定します。</summary>
      <returns>各行の高さ (デバイス非依存のピクセル単位)。範囲は 0.0034 ～ 160000 です。<see cref="F:System.Double.NaN" /> にすると高さが自動的に決定されます。 既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> が負の値に設定されています。</exception>
    </member>
    <member name="F:System.Windows.Documents.Block.LineHeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.LineHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.LineStackingStrategy">
      <summary>ブロック レベルのフロー コンテンツ要素内のテキストの行ごとに行ボックスを決定する方法を取得または設定します。</summary>
      <returns>ブロック レベルのフロー コンテンツ要素内のテキストの行ごとに行ボックスを決定する方法を指定する <see cref="T:System.Windows.LineStackingStrategy" /> 値の 1 つ。 既定値は <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.LineStackingStrategyProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.Margin">
      <summary>要素の余白の厚みを取得または設定します。</summary>
      <returns>適用する余白の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。 既定では 0 (0.0) の均一の幅です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.MarginProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.Margin" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.NextBlock">
      <summary>現在の <see cref="T:System.Windows.Documents.Block" /> 要素の直後にある兄弟 <see cref="T:System.Windows.Documents.Block" /> 要素を取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.Documents.Block" /> 要素の直後にある兄弟 <see cref="T:System.Windows.Documents.Block" /> 要素。そのような要素が存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.Padding">
      <summary>要素のパディングの厚みを取得または設定します。</summary>
      <returns>適用する余白の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。 既定では 0 (0.0) の均一の幅です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.PaddingProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.Padding" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.PreviousBlock">
      <summary>現在の <see cref="T:System.Windows.Documents.Block" /> 要素の直前にある兄弟 <see cref="T:System.Windows.Documents.Block" /> 要素を取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.Documents.Block" /> 要素の直前にある兄弟 <see cref="T:System.Windows.Documents.Block" /> 要素。そのような要素が存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.LineHeight" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Block.LineHeight" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が負の値です。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Block.TextAlignment" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Documents.Block.SiblingBlocks">
      <summary>現在の <see cref="T:System.Windows.Documents.Block" /> 要素と兄弟関係にある <see cref="T:System.Windows.Documents.Block" /> 要素のコレクションを取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.Documents.BlockCollection" /> 要素の親が直接ホストする子 <see cref="T:System.Windows.Documents.Block" /> 要素を格納する <see cref="T:System.Windows.Documents.Block" />。現在の <see cref="T:System.Windows.Documents.Block" /> 要素に親がない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.TextAlignment">
      <summary>テキスト コンテンツの水平方向の配置を取得または設定します。</summary>
      <returns>目的の配置を指定する、いずれかの <see cref="T:System.Windows.TextAlignment" /> 値。 既定値は、<see cref="F:System.Windows.TextAlignment.Left" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.TextAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.BlockCollection">
      <summary>
        <see cref="T:System.Windows.Documents.Block" /> 要素のコレクションを表します。 <see cref="T:System.Windows.Documents.BlockCollection" /> は <see cref="T:System.Windows.Documents.FlowDocument" />、<see cref="T:System.Windows.Documents.Section" />、<see cref="T:System.Windows.Documents.ListItem" />、<see cref="T:System.Windows.Documents.TableCell" />、<see cref="T:System.Windows.Documents.Floater" />、<see cref="T:System.Windows.Documents.Figure" /> 要素で許容される子コンテンツを定義します。</summary>
    </member>
    <member name="P:System.Windows.Documents.BlockCollection.FirstBlock">
      <summary>
        <see cref="T:System.Windows.Documents.Block" /> のこのインスタンス内の最初の <see cref="T:System.Windows.Documents.BlockCollection" /> 要素を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Block" /> 内の最初の <see cref="T:System.Windows.Documents.BlockCollection" /> 要素。</returns>
    </member>
    <member name="P:System.Windows.Documents.BlockCollection.LastBlock">
      <summary>
        <see cref="T:System.Windows.Documents.Block" /> のこのインスタンス内の最後の <see cref="T:System.Windows.Documents.BlockCollection" /> 要素を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Block" /> 内の最後の <see cref="T:System.Windows.Documents.BlockCollection" /> 要素。</returns>
    </member>
    <member name="T:System.Windows.Documents.BlockUIContainer">
      <summary>フロー コンテンツに埋め込まれる (ホストされる) <see cref="T:System.Windows.UIElement" /> 要素 (<see cref="T:System.Windows.Controls.Button" /> など) を有効にするブロック レベルのフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.BlockUIContainer.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.BlockUIContainer" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.BlockUIContainer.#ctor(System.Windows.UIElement)">
      <summary>指定した <see cref="T:System.Windows.Documents.BlockUIContainer" /> オブジェクトを新しい <see cref="T:System.Windows.UIElement" /> の初期コンテンツとして受け取って、<see cref="T:System.Windows.Documents.BlockUIContainer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="uiElement">新しい <see cref="T:System.Windows.UIElement" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.BlockUIContainer" /> オブジェクト。</param>
    </member>
    <member name="P:System.Windows.Documents.BlockUIContainer.Child">
      <summary>
        <see cref="T:System.Windows.UIElement" /> によってホストされる <see cref="T:System.Windows.Documents.BlockUIContainer" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> によってホストされる <see cref="T:System.Windows.Documents.BlockUIContainer" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.Bold">
      <summary>コンテンツが太字のフォントで描画されるインラインレベルのフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Bold" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.Inline)">
      <summary>指定した <see cref="T:System.Windows.Documents.Bold" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツとして受け取って、<see cref="T:System.Windows.Documents.Bold" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childInline">新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Bold" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>指定した <see cref="T:System.Windows.Documents.Bold" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツとして受け取ると共に、新しい <see cref="T:System.Windows.Documents.Bold" /> 要素の挿入位置を指定する <see cref="T:System.Windows.Documents.TextPointer" /> を受け取って、<see cref="T:System.Windows.Documents.Inline" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childInline">新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Bold" /> オブジェクト。  このパラメーターは、<see langword="null" /> でもかまいません。その場合、<see cref="T:System.Windows.Documents.Inline" /> は挿入されません。</param>
      <param name="insertionPosition">
        <see cref="T:System.Windows.Documents.TextPointer" /> 要素の作成後に、この要素を挿入する挿入位置を指定する <see cref="T:System.Windows.Documents.Bold" />。自動挿入を行わない場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>新しい <see cref="T:System.Windows.Documents.Bold" /> に格納されるコンテンツの選択範囲の先頭と末尾を示す 2 つの <see cref="T:System.Windows.Documents.TextPointer" /> オブジェクトを受け取って、<see cref="T:System.Windows.Documents.Bold" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="start">新しい <see cref="T:System.Windows.Documents.TextPointer" /> に格納されるコンテンツの選択範囲の先頭を示す <see cref="T:System.Windows.Documents.Bold" />。</param>
      <param name="end">新しい <see cref="T:System.Windows.Documents.TextPointer" /> に格納されるコンテンツの選択範囲の末尾を示す <see cref="T:System.Windows.Documents.Bold" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> または <paramref name="end" /> が null の場合に発生します。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> と <paramref name="end" /> が、<see cref="T:System.Windows.Documents.Bold" /> 要素によって囲まれた部分に適合するコンテンツの範囲に解決されない場合に発生します。たとえば、<paramref name="start" /> と <paramref name="end" /> が別々のパラグラフ内の位置を示している場合などです。</exception>
    </member>
    <member name="T:System.Windows.Documents.DocumentReference">
      <summary>
        <see cref="T:System.Windows.Documents.FixedDocument" /> を参照するためのアクセスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentReference" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.GetDocument(System.Boolean)">
      <summary>
        <see cref="P:System.Windows.Documents.DocumentReference.Source" /> プロパティの場所で指定されたドキュメントを同期的に読み込んで解析します。</summary>
      <param name="forceReload">
        <see cref="P:System.Windows.Documents.DocumentReference.Source" /> ドキュメントを、既に読み込まれている場合でも強制的に新しく読み込む場合は <see langword="true" />。</param>
      <returns>読み込まれたドキュメント。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.SetDocument(System.Windows.Documents.FixedDocument)">
      <summary>
        <see cref="T:System.Windows.Documents.FixedDocument" /> を <see cref="T:System.Windows.Documents.DocumentReference" /> に関連付けます。</summary>
      <param name="doc">関連付けられるドキュメント。</param>
    </member>
    <member name="P:System.Windows.Documents.DocumentReference.Source">
      <summary>このドキュメント参照の Uniform Resource Identifier (URI) を取得または設定します。</summary>
      <returns>ドキュメント参照を表す <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.DocumentReference.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Documents.DocumentReference.Source" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.DocumentReference.System#Windows#Markup#IUriContext#BaseUri">
      <summary>このメンバーの詳細については、「<see cref="P:System.Windows.Markup.IUriContext.BaseUri" />」をご覧ください。</summary>
      <returns>現在のコンテキストのベース URI。</returns>
    </member>
    <member name="T:System.Windows.Documents.DocumentReferenceCollection">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentReference" /> 要素の順序付きリストを定義します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.Add(System.Windows.Documents.DocumentReference)">
      <summary>コレクションの末尾に要素を追加します。</summary>
      <param name="item">コレクションの末尾に追加する要素。</param>
    </member>
    <member name="E:System.Windows.Documents.DocumentReferenceCollection.CollectionChanged">
      <summary>要素が追加または削除されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.CopyTo(System.Windows.Documents.DocumentReference[],System.Int32)">
      <summary>指定された配列インデックスを開始位置として、配列にコレクション全体をコピーします。</summary>
      <param name="array">コレクションの要素のコピー先となる配列。</param>
      <param name="arrayIndex">コレクション要素がコピーされる配列内の 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.Windows.Documents.DocumentReferenceCollection.Count">
      <summary>コレクション内の要素の数を取得します。</summary>
      <returns>コレクションに格納されている項目の数。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>このコレクションを反復処理するために使用できる列挙子。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentReferenceCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にある要素を取得します。</summary>
      <param name="index">取得するコレクション内の要素の 0 から始まるインデックス。</param>
      <returns>指定した <paramref name="index" /> にあるコレクション要素。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。  代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.DocumentReferenceCollection.GetEnumerator" /> メソッドを使用します。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.BlockElement">
      <summary>使用しないでください。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.BlockElement.#ctor">
      <summary>使用しないでください。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.FigureStructure">
      <summary>ドキュメント内の描画、グラフ、または図を表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.FigureStructure" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.Add(System.Windows.Documents.DocumentStructures.NamedElement)">
      <summary>図形に指定された要素を追加します。</summary>
      <param name="element">追加する要素。</param>
      <exception cref="T:System.ArgumentNullException">要素は <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#NamedElement}#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">追加する子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> がこのクラスの子にできる型の 1 つではありません。 「解説」を参照してください。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ListItemStructure">
      <summary>リストまたはアウトラインの項目を表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.ListItemStructure" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>リスト項目にブロックを追加します。</summary>
      <param name="element">追加するブロック。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.ListItemStructure.Marker">
      <summary>ドキュメントの書式設定マークアップに示されるリスト項目の数字、文字、または行頭文字の名前を取得または設定します。</summary>
      <returns>リスト項目のマーカーを示す <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#BlockElement}#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">追加する子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> がこのクラスの子にできる型の 1 つではありません。 「解説」を参照してください。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>実装されていません。</summary>
      <param name="text">使用しません。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ListStructure">
      <summary>ドキュメント内の項目のリストを表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.ListStructure" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.Add(System.Windows.Documents.DocumentStructures.ListItemStructure)">
      <summary>リストにリスト項目を追加します。</summary>
      <param name="listItem">追加するリスト項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="listItem" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#ListItemStructure}#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">追加する子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> がこのクラスの子にできる型の 1 つではありません。 「解説」を参照してください。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.NamedElement">
      <summary>
        <see cref="T:System.Windows.Documents.FixedPage" /> の要素階層内の要素を識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.NamedElement.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.NamedElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.NamedElement.NameReference">
      <summary>
        <see cref="T:System.Windows.Documents.FixedPage" /> の親のコンテンツを提供する <see cref="T:System.Windows.Documents.DocumentStructures.NamedElement" /> マークアップ階層内の要素の名前を取得または設定します。</summary>
      <returns>要素の名前。</returns>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ParagraphStructure">
      <summary>ドキュメント内の段落を表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.ParagraphStructure" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.Add(System.Windows.Documents.DocumentStructures.NamedElement)">
      <summary>段落に指定された要素を追加します。</summary>
      <param name="element">追加する要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#NamedElement}#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">追加する子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> がこのクラスの子にできる型の 1 つではありません。 「解説」を参照してください。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>実装されていません。</summary>
      <param name="text">使用しません。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.SectionStructure">
      <summary>ドキュメント内のコンテンツのセクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.SectionStructure" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>セクションにブロックを追加します。</summary>
      <param name="element">追加するブロック要素。</param>
      <exception cref="T:System.ArgumentNullException">要素は <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#BlockElement}#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> .</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>System.Collections.IEnumerator</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.SemanticBasicElement">
      <summary>XML Paper Specification (XPS) ドキュメントのマークアップ内の XML 要素です。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryBreak">
      <summary>1 つ以上の <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 要素から成るストーリーの始まりまたは終わりを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryBreak.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.StoryBreak" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryFragment">
      <summary>XPS ドキュメント内のストーリーの全体または一部を表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>ストーリー フラグメントにブロックを追加します。</summary>
      <param name="element">追加するブロック。</param>
      <exception cref="T:System.ArgumentNullException">渡されるブロックは <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName">
      <summary>ストーリー フラグメントの名前を取得または設定します。</summary>
      <returns>このフラグメントの名前を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType">
      <summary>フラグメントの種類を取得または設定します。</summary>
      <returns>フラグメントの種類を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName">
      <summary>ストーリーの名前を取得または設定します。</summary>
      <returns>ストーリーの名前を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#BlockElement}#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">追加する子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> がこのクラスの子にできる型の 1 つではありません。 「解説」を参照してください。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryFragments">
      <summary>1 つ以上の <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 要素のセットを表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.Add(System.Windows.Documents.DocumentStructures.StoryFragment)">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> を <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> コレクションに追加します。</summary>
      <param name="storyFragment">追加する <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#StoryFragment}#GetEnumerator">
      <summary>この API は実装されていません。</summary>
      <returns>この API は実装されていません。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Collections#IEnumerable#GetEnumerator">
      <summary>この API は実装されていません。</summary>
      <returns>この API は実装されていません。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> に追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableCellStructure">
      <summary>テーブル内のセルを表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.TableCellStructure" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>テーブル セルにブロック要素を追加します。</summary>
      <param name="element">追加する要素。</param>
      <exception cref="T:System.ArgumentNullException">要素は <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.TableCellStructure.ColumnSpan">
      <summary>セルがまたがる列の数を取得または設定します。</summary>
      <returns>セルがまたがる列の数。 既定値は 1 です。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.TableCellStructure.RowSpan">
      <summary>セルがまたがる行の数を取得または設定します。</summary>
      <returns>セルがまたがる行の数。 既定値は 1 です。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#BlockElement}#GetEnumerator">
      <summary>この API は実装されていません。</summary>
      <returns>この API は実装されていません。</returns>
      <exception cref="T:System.NotSupportedException">すべての場合。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>この API は実装されていません。</summary>
      <returns>この API は実装されていません。</returns>
      <exception cref="T:System.NotSupportedException">すべての場合。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを <see cref="T:System.Windows.Documents.DocumentStructures.TableCellStructure" /> に追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> がこのクラスの子にできる型の 1 つではありません。 「解説」を参照してください。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableRowGroupStructure">
      <summary>テーブル内の 1 つ以上の行のセットを表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.TableRowGroupStructure" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.Add(System.Windows.Documents.DocumentStructures.TableRowStructure)">
      <summary>行をテーブルの行グループに追加します。</summary>
      <param name="tableRow">追加する行。</param>
      <exception cref="T:System.ArgumentNullException">行が null です。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#TableRowStructure}#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">追加する子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> がこのクラスの子にできる型の 1 つではありません。 「解説」を参照してください。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableRowStructure">
      <summary>テーブル内の 1 つ以上のセルの行を表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.TableRowStructure" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.Add(System.Windows.Documents.DocumentStructures.TableCellStructure)">
      <summary>テーブル行にセルを追加します。</summary>
      <param name="tableCell">追加するセル。</param>
      <exception cref="T:System.ArgumentNullException">呼び出しは <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#TableCellStructure}#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">追加する子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> がこのクラスの子にできる型の 1 つではありません。 「解説」を参照してください。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableStructure">
      <summary>ドキュメント内のテーブルを表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.DocumentStructures.TableStructure" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.Add(System.Windows.Documents.DocumentStructures.TableRowGroupStructure)">
      <summary>テーブルに行グループを追加します。</summary>
      <param name="tableRowGroup">追加する行グループ。</param>
      <exception cref="T:System.ArgumentNullException">行グループが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Collections#Generic#IEnumerable{System#Windows#Documents#DocumentStructures#TableRowGroupStructure}#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメソッドは実装されていません。</summary>
      <returns>常に <see cref="T:System.NotSupportedException" /> が発生します。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">追加する子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> がこのクラスの子にできる型の 1 つではありません。 「解説」を参照してください。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Documents.EditingCommands">
      <summary>一連の標準的な編集関連コマンドを提供します。</summary>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignCenter">
      <summary>現在の段落または段落の選択範囲を中央揃えで配置するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="E" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignJustify">
      <summary>現在の段落または段落の選択範囲を両端揃えで配置するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="J" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignLeft">
      <summary>コンテンツの選択範囲を左揃えで配置するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="L" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignRight">
      <summary>コンテンツの選択範囲を右揃えで配置するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="R" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.Backspace">
      <summary>BackSpace を現在の位置または現在の選択範囲に対して入力するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="Backspace" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.CorrectSpellingError">
      <summary>現在の位置にあるスペル ミスの単語を修正するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドには、既定のキー ジェスチャはありません。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DecreaseFontSize">
      <summary>現在の選択範囲のフォント サイズを 1 ポイント縮小するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="OemOpenBrackets" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DecreaseIndentation">
      <summary>現在の段落のインデントを 1 タブ位置分減らすよう要求する <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + + <see langword="Shift" /><see langword="T" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.Delete">
      <summary>現在の選択範囲を削除するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="Delete" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DeleteNextWord">
      <summary>現在の位置から見て次の単語を削除するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="Delete" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DeletePreviousWord">
      <summary>現在の位置から見て前の単語を削除するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="Backspace" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.EnterLineBreak">
      <summary>改行を現在の位置または現在の選択範囲に対して挿入するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Shift" /> + <see langword="Enter" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak">
      <summary>段落区切りを現在の位置または現在の選択範囲を超えた位置に挿入するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="Enter" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError">
      <summary>現在の位置または現在の選択範囲内にあるスペル ミスの単語をすべて無視するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドには、既定のキー ジェスチャはありません。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IncreaseFontSize">
      <summary>現在の選択範囲のフォント サイズを 1 ポイント拡大するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="OemCloseBrackets" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IncreaseIndentation">
      <summary>現在の段落のインデントを 1 タブ位置分増やすよう要求する <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="T" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByLine">
      <summary>キャレットを 1 行下に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="Down" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByPage">
      <summary>キャレットを 1 ページ下に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="PageDown" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph">
      <summary>キャレットを 1 段落下に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="Down" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter">
      <summary>キャレットを 1 文字左に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="Left" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveLeftByWord">
      <summary>キャレットを 1 語左に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="Left" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter">
      <summary>キャレットを 1 文字右に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="Right" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveRightByWord">
      <summary>キャレットを 1 語右に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="Right" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd">
      <summary>キャレットをコンテンツの末尾に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="End" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart">
      <summary>キャレットをコンテンツの先頭に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="Home" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToLineEnd">
      <summary>キャレットを現在の行の末尾に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="End" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToLineStart">
      <summary>キャレットを現在の行の先頭に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="Home" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByLine">
      <summary>キャレットを 1 行上に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="Up" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByPage">
      <summary>キャレットを 1 ページ上に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="PageUp" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph">
      <summary>キャレットを 1 段落上に移動するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="Up" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByLine">
      <summary>現在の選択範囲を 1 行下に拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Shift" /> + <see langword="Down" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByPage">
      <summary>現在の選択範囲を 1 ページ下に拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Shift" /> + <see langword="PageDown" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph">
      <summary>現在の選択範囲を 1 段落下に拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + + <see langword="Shift" /><see langword="Down" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter">
      <summary>現在の選択範囲を 1 文字左に拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Shift" /> + <see langword="Left" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectLeftByWord">
      <summary>現在の選択範囲を 1 語左に拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + + <see langword="Shift" /><see langword="Left" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter">
      <summary>現在の選択範囲を 1 文字右に拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Shift" /> + <see langword="Right" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectRightByWord">
      <summary>現在の選択範囲を 1 語右に拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + + <see langword="Shift" /><see langword="Right" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd">
      <summary>現在の選択範囲をコンテンツの末尾まで拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + + <see langword="Shift" /><see langword="End" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart">
      <summary>現在の選択範囲をコンテンツの先頭まで拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + + <see langword="Shift" /><see langword="Home" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToLineEnd">
      <summary>現在の選択範囲を現在の行の末尾まで拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Shift" /> + <see langword="End" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToLineStart">
      <summary>現在の選択範囲を現在の行の先頭まで拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Shift" /> + <see langword="Home" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByLine">
      <summary>現在の選択範囲を 1 行上に拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Shift" /> + <see langword="Up" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByPage">
      <summary>現在の選択範囲を 1 ページ上に拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Shift" /> + <see langword="PageUp" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph">
      <summary>現在の選択範囲を 1 段落上に拡張するよう要求する <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + + <see langword="Shift" /><see langword="Up" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.TabBackward">
      <summary>
        <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Shift" /> + <see langword="Tab" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.TabForward">
      <summary>
        <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="Tab" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleBold">
      <summary>現在の選択範囲に対して <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> の書式設定を切り替えるよう要求する <see cref="T:System.Windows.Documents.Bold" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="B" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleBullets">
      <summary>現在の選択範囲に対して順序の付いていないリスト (箇条書きリスト) の書式設定を切り替えるよう要求する <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + + <see langword="Shift" /><see langword="L" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleInsert">
      <summary>挿入と上書きの入力モードを切り替える <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキー ジェスチャは、<see langword="Insert" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleItalic">
      <summary>現在の選択範囲に対して <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> の書式設定を切り替えるよう要求する <see cref="T:System.Windows.Documents.Italic" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="I" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleNumbering">
      <summary>現在の選択範囲に対して順序付きリスト (番号付きリスト) の書式設定を切り替えるよう要求する <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + + <see langword="Shift" /><see langword="N" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleSubscript">
      <summary>現在の選択範囲に対して下付き文字の書式設定を切り替えるよう要求する <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="OemPlus" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleSuperscript">
      <summary>現在の選択範囲に対して上付き文字の書式設定を切り替えるよう要求する <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + + <see langword="Shift" /><see langword="OemPlus" />です。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleUnderline">
      <summary>現在の選択範囲に対して <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> の書式設定を切り替えるよう要求する <see cref="T:System.Windows.Documents.Underline" /> コマンドを表します。</summary>
      <returns>要求されたコマンド。  このコマンドの既定のキージェスチャは<see langword="Ctrl" /> + <see langword="U" />です。</returns>
    </member>
    <member name="T:System.Windows.Documents.Figure">
      <summary>図のホストに使用されるインラインレベル フロー コンテンツ要素。  図は、<see cref="T:System.Windows.Documents.FlowDocument" /> 内の主要コンテンツ フローとは別にカスタマイズできる配置プロパティを持つ、フロー コンテンツの一部です。</summary>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor(System.Windows.Documents.Block)">
      <summary>指定した <see cref="T:System.Windows.Documents.Figure" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Block" /> の初期コンテンツとして受け取って、<see cref="T:System.Windows.Documents.Figure" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childBlock">新しい <see cref="T:System.Windows.Documents.Block" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Figure" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>指定した <see cref="T:System.Windows.Documents.Figure" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Block" /> の初期コンテンツとして受け取ると共に、新しい <see cref="T:System.Windows.Documents.Figure" /> 要素の挿入位置を指定する <see cref="T:System.Windows.Documents.TextPointer" /> を受け取って、<see cref="T:System.Windows.Documents.Figure" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childBlock">新しい <see cref="T:System.Windows.Documents.Block" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Figure" /> オブジェクト。  このパラメーターは、<see langword="null" /> でもかまいません。その場合、<see cref="T:System.Windows.Documents.Block" /> は挿入されません。</param>
      <param name="insertionPosition">
        <see cref="T:System.Windows.Documents.TextPointer" /> 要素の作成後に、この要素を挿入する挿入位置を指定する <see cref="T:System.Windows.Documents.Figure" />。自動挿入を行わない場合は <see langword="null" />。</param>
    </member>
    <member name="P:System.Windows.Documents.Figure.CanDelayPlacement">
      <summary>コンテンツのフローにおいてこの図の配置を遅延できるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see langword="true" />この図が配置を遅らせることができる場合は。それ以外<see langword="false" />の場合は。  既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.CanDelayPlacementProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Figure.CanDelayPlacement" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.Height">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> 要素の高さを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FigureLength" /> の高さの特性を指定する <see cref="T:System.Windows.Documents.Figure" /> 構造体。
既定値は <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.Value" /> = 1.0および<see cref="T:System.Windows.FigureLength" />。<see cref="P:System.Windows.FigureLength.FigureUnitType" /> = <see cref="F:System.Windows.FigureUnitType.Auto" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Figure.Height" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.HorizontalAnchor">
      <summary>コンテンツが固定される水平方向の位置を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FigureHorizontalAnchor" /> の水平アンカーの場所を指定する <see cref="T:System.Windows.Documents.Figure" /> 列挙体のメンバー。
既定値は <see cref="F:System.Windows.FigureHorizontalAnchor.ColumnRight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HorizontalAnchorProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Figure.HorizontalAnchor" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.HorizontalOffset">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> をそのベースラインからオフセットする水平方向の距離を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Figure" /> をそのベースラインからオフセットする水平方向の距離 (デバイス非依存のピクセル数)。
既定値は 0.0です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Figure.HorizontalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.VerticalAnchor">
      <summary>コンテンツが固定される垂直方向の位置を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FigureVerticalAnchor" /> の垂直アンカーの場所を指定する <see cref="T:System.Windows.Documents.Figure" /> 列挙体のメンバー。
既定値は <see cref="F:System.Windows.FigureVerticalAnchor.ParagraphTop" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.VerticalAnchorProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Figure.VerticalAnchor" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.VerticalOffset">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> をそのベースラインからオフセットする垂直方向の距離を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Figure" /> をそのベースラインからオフセットする垂直方向の距離 (デバイス非依存のピクセル数)。
既定値は 0.0です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.VerticalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Figure.VerticalOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.Width">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> 要素の幅を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FigureLength" /> の幅の特性を指定する <see cref="T:System.Windows.Documents.Figure" /> 構造体。
既定値は <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.Value" /> = 1.0および<see cref="T:System.Windows.FigureLength" />。<see cref="P:System.Windows.FigureLength.FigureUnitType" /> = <see cref="F:System.Windows.FigureUnitType.Auto" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.WidthProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Figure.Width" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Figure.WrapDirection">
      <summary>コンテンツが <see cref="T:System.Windows.Documents.Figure" /> の周りをフローできる方向を示す値を取得または設定します。</summary>
      <returns>コンテンツが <see cref="T:System.Windows.WrapDirection" /> の周りをフローできる方向を指定する <see cref="T:System.Windows.Documents.Figure" /> 列挙体のメンバー。
既定値は <see cref="F:System.Windows.WrapDirection.Both" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.WrapDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Figure.WrapDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.FixedDocument">
      <summary>移植性があり、忠実度の高い、固定形式のドキュメントをホストします。ユーザーは読み取りアクセス許可を持ち、テキスト選択、キーボードによるナビゲーション、検索が可能です。</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.FixedDocument" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.DocumentPaginator">
      <summary>特定のページの取得や変更に応じた改ページ位置の自動修正など、ページ指向のサービスを提供する <see cref="T:System.Windows.Documents.FixedDocument" /> のページネータを取得します。</summary>
      <returns>改ページ位置の自動修正サービスを提供する <see cref="T:System.Windows.Documents.DocumentPaginator" /> から派生したクラスのオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.LogicalChildren">
      <summary>ドキュメントの <see cref="T:System.Windows.Documents.PageContent" /> 子要素にアクセスするための列挙子を取得します。</summary>
      <returns>ドキュメントの <see cref="T:System.Windows.Documents.PageContent" /> 子要素にアクセスするための列挙子。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.OnCreateAutomationPeer">
      <summary>ドキュメントのオートメーション ピアを作成します。</summary>
      <returns>Microsoft UI オートメーションに <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> を公開する <see cref="T:System.Windows.Documents.FixedDocument" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.Pages">
      <summary>ドキュメントの <see cref="T:System.Windows.Documents.PageContent" /> 要素のコレクションを取得します。</summary>
      <returns>ドキュメントの <see cref="T:System.Windows.Documents.PageContent" /> 要素のコレクション。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.PrintTicket">
      <summary>このドキュメントに関連付けられている <see cref="T:System.Printing.PrintTicket" /> を取得または設定します。</summary>
      <returns>このドキュメントの <see cref="T:System.Printing.PrintTicket" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedDocument.PrintTicketProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#IServiceProvider#GetService(System.Type)">
      <summary>指定した型のサービス オブジェクトを取得します。</summary>
      <param name="serviceType">取得対象となるサービスの型を指定するオブジェクト。</param>
      <returns>
        <paramref name="serviceType" /> 型のサービス オブジェクト。
または
<paramref name="serviceType" /> 型のサービス オブジェクトがない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>ノードのテキスト コンテンツをオブジェクトに追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.System#Windows#Markup#IUriContext#BaseUri">
      <summary>現在のアプリケーション コンテキストのベース URI を取得または設定します。</summary>
      <returns>アプリケーション コンテキストのベース URI。</returns>
    </member>
    <member name="T:System.Windows.Documents.FixedDocumentSequence">
      <summary>固定されたドキュメントの順序を定義する 1 つ以上の <see cref="T:System.Windows.Documents.DocumentReference" /> 要素をホストします。</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.DocumentPaginator">
      <summary>特定のページの取得や変更に応じた改ページ位置の自動修正など、ページ指向のサービスを提供する <see cref="T:System.Windows.Documents.FixedDocument" /> のページネータを取得します。</summary>
      <returns>改ページ位置の自動修正サービスを提供する <see cref="T:System.Windows.Documents.DocumentPaginator" /> から派生したクラスのオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.LogicalChildren">
      <summary>ドキュメント シーケンスの <see cref="T:System.Windows.Documents.DocumentReference" /> 子要素にアクセスするための列挙子を取得します。</summary>
      <returns>ドキュメント シーケンスの <see cref="T:System.Windows.Documents.DocumentReference" /> 子要素にアクセスするための列挙子。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.OnCreateAutomationPeer">
      <summary>シーケンスのオートメーション ピアを作成します。</summary>
      <returns>Microsoft UI オートメーションに <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> を公開する <see cref="T:System.Windows.Documents.FixedDocumentSequence" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket">
      <summary>このドキュメント シーケンスに関連付けられる <see cref="T:System.Printing.PrintTicket" /> を取得または設定します。</summary>
      <returns>このシーケンスの <see cref="T:System.Printing.PrintTicket" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedDocumentSequence.PrintTicketProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.References">
      <summary>ドキュメント シーケンスの <see cref="T:System.Windows.Documents.DocumentReference" /> 子要素のコレクションを取得します。</summary>
      <returns>ドキュメント シーケンスの <see cref="T:System.Windows.Documents.DocumentReference" /> 子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#IServiceProvider#GetService(System.Type)">
      <summary>指定した型のサービス オブジェクトを取得します。</summary>
      <param name="serviceType">取得対象となるサービスの型を指定するオブジェクト。</param>
      <returns>
        <paramref name="serviceType" /> 型のサービス オブジェクト。
または
<paramref name="serviceType" /> 型のサービス オブジェクトがない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>ノードのテキスト コンテンツをオブジェクトに追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IUriContext#BaseUri">
      <summary>現在のアプリケーション コンテキストのベース URI を取得または設定します。</summary>
      <returns>アプリケーション コンテキストのベース URI。</returns>
    </member>
    <member name="T:System.Windows.Documents.FixedPage">
      <summary>高い忠実性の固定形式ページに対するコンテンツを提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.FixedPage" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Background">
      <summary>ページ背景を描画するために使用される <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>ページ背景を描画するためのブラシ。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FixedPage.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.BleedBox">
      <summary>裁ち落とし、登録マーク、および裁ちトンボのためのオーバーフロー領域を定義する四角形を取得または設定します。</summary>
      <returns>オーバーフロー領域を定義する <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BleedBoxProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FixedPage.BleedBox" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Bottom">
      <summary>ページの下端と親 <see cref="T:System.Windows.Controls.Canvas" /> の下端との間の距離を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BottomProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FixedPage.Bottom" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Children">
      <summary>
        <see cref="T:System.Windows.Documents.FixedPage" /> 子要素のコレクションを取得します。</summary>
      <returns>子要素の <see cref="T:System.Windows.Controls.UIElementCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.ContentBox">
      <summary>コンテンツ領域の外接する四角形、つまり、ページのマージン内 の領域 (存在する場合) を取得または設定します。</summary>
      <returns>コンテンツ領域を定義する <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.ContentBoxProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FixedPage.ContentBox" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetBottom(System.Windows.UIElement)">
      <summary>要素の下端と親 <see cref="T:System.Windows.Controls.Canvas" /> の下端との距離を返します。</summary>
      <param name="element">下オフセットの取得元の要素。</param>
      <returns>要素の下端と親キャンバスの下端との距離。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetLeft(System.Windows.UIElement)">
      <summary>要素の左側と親 <see cref="T:System.Windows.Controls.Canvas" /> の左側との距離を返します。</summary>
      <param name="element">左オフセットの取得元の要素。</param>
      <returns>要素の右側と親キャンバスの右側との距離。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetNavigateUri(System.Windows.UIElement)">
      <summary>指定した要素の <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> プロパティを返します。</summary>
      <param name="element">プロパティの取得元の要素。</param>
      <returns>
        <see cref="T:System.Uri" /> の <paramref name="element" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetRight(System.Windows.UIElement)">
      <summary>要素の右側と親 <see cref="T:System.Windows.Controls.Canvas" /> の右側との距離を返します。</summary>
      <param name="element">右オフセットの取得元の要素。</param>
      <returns>要素の右側と親キャンバスの右側との距離。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetTop(System.Windows.UIElement)">
      <summary>要素の上端と親 <see cref="T:System.Windows.Controls.Canvas" /> の上端との距離を返します。</summary>
      <param name="element">上オフセットの取得元の要素。</param>
      <returns>要素の上端と親キャンバスの上端との距離。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Left">
      <summary>ページの左端と親 <see cref="T:System.Windows.Controls.Canvas" /> の左端との間の距離を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.LeftProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FixedPage.Left" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.NavigateUri">
      <summary>ページに関連付けられている URI を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.NavigateUriProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.PrintTicket">
      <summary>ページに関連付けられている <see cref="T:System.Printing.PrintTicket" /> を取得または設定します。</summary>
      <returns>ページの <see cref="T:System.Printing.PrintTicket" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.PrintTicketProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FixedPage.PrintTicket" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Right">
      <summary>ページの右端と親 <see cref="T:System.Windows.Controls.Canvas" /> の右端との間の距離を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.RightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FixedPage.Right" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>要素の下端とその親 <see cref="T:System.Windows.Controls.Canvas" /> の下端との距離を設定します。</summary>
      <param name="element">下オフセットの設定対象の要素。</param>
      <param name="length">要素の下側と親キャンバスの下側との新しい距離。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>要素の左側と親 <see cref="T:System.Windows.Controls.Canvas" /> の左側との距離を設定します。</summary>
      <param name="element">左オフセットの設定対象の要素。</param>
      <param name="length">要素の左側と親キャンバスの左側との新しい距離。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetNavigateUri(System.Windows.UIElement,System.Uri)">
      <summary>ハイパーリンクがクリックされたときの移動先 Uniform Resource Identifier (URI) を設定します。</summary>
      <param name="element">URI の設定対象の要素。</param>
      <param name="uri">ハイパーリンクがクリックされたときの移動先 Uniform Resource Identifier (URI)。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetRight(System.Windows.UIElement,System.Double)">
      <summary>要素の右側と親 <see cref="T:System.Windows.Controls.Canvas" /> の右側との距離を設定します。</summary>
      <param name="element">右オフセットの設定対象の要素。</param>
      <param name="length">要素の右側と親キャンバスの右側との新しい距離。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetTop(System.Windows.UIElement,System.Double)">
      <summary>要素の上端と親 <see cref="T:System.Windows.Controls.Canvas" /> の上端との距離を設定します。</summary>
      <param name="element">上オフセットの設定対象の要素。</param>
      <param name="length">要素の上側と親キャンバスの上側との新しい距離。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>ノードのテキスト コンテンツをオブジェクトに追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.System#Windows#Markup#IUriContext#BaseUri">
      <summary>現在のアプリケーション コンテキストのベース URI を取得または設定します。</summary>
      <returns>アプリケーション コンテキストのベース URI。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Top">
      <summary>ページの上端と親 <see cref="T:System.Windows.Controls.Canvas" /> の上端との間の距離を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.TopProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FixedPage.Top" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.Floater">
      <summary>浮遊要素のホストに使用されるインラインレベル フロー コンテンツ要素を提供します。 浮遊要素は、<see cref="T:System.Windows.Documents.FlowDocument" /> 内にメイン コンテンツ フローと平行してイメージやその他のコンテンツを表示します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Floater" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block)">
      <summary>指定した <see cref="T:System.Windows.Documents.Floater" /> オブジェクトを初期コンテンツとして使用して、<see cref="T:System.Windows.Documents.Block" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childBlock">新しい <see cref="T:System.Windows.Documents.Floater" /> の初期コンテンツ。</param>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>指定した <see cref="T:System.Windows.Documents.Floater" /> オブジェクトを初期コンテンツとし、新しい <see cref="T:System.Windows.Documents.Block" /> の挿入位置を指定する <see cref="T:System.Windows.Documents.TextPointer" /> を使用して、<see cref="T:System.Windows.Documents.Floater" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childBlock">新しい <see cref="T:System.Windows.Documents.Floater" /> の初期コンテンツ。 このパラメーターは、<see langword="null" /> でもかまいません。その場合、<see cref="T:System.Windows.Documents.Block" /> は挿入されません。</param>
      <param name="insertionPosition">作成された <see cref="T:System.Windows.Documents.Floater" /> 要素を挿入する位置。</param>
    </member>
    <member name="P:System.Windows.Documents.Floater.HorizontalAlignment">
      <summary>
        <see cref="T:System.Windows.Documents.Floater" /> オブジェクトの水平方向の配置を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.HorizontalAlignment" /> の水平方向の配置を指定する <see cref="T:System.Windows.Documents.Floater" /> 列挙体のメンバー。 既定値は、<see cref="F:System.Windows.HorizontalAlignment.Stretch" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Floater.HorizontalAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Floater.HorizontalAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Floater.Width">
      <summary>
        <see cref="T:System.Windows.Documents.Floater" /> オブジェクトの幅を示す値を取得または設定します。</summary>
      <returns>デバイスに依存しないピクセルでの <see cref="T:System.Windows.Documents.Floater" /> の幅。 既定値は<see cref="F:System.Double.NaN" /> (属性値<c>Auto</c>と等価) で、行の高さが自動的に決定されることを示します。</returns>
    </member>
    <member name="F:System.Windows.Documents.Floater.WidthProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Floater.Width" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.FlowDocument">
      <summary>改ページ位置の自動修正や列などの高度なドキュメント機能を持つフロー コンテンツをホストして書式設定します。</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.#ctor(System.Windows.Documents.Block)">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> クラスの新しいインスタンスを初期化し、指定された <see cref="T:System.Windows.Documents.Block" /> 要素を初期コンテンツとして追加します。</summary>
      <param name="block">初期コンテンツとして追加するために、<see cref="T:System.Windows.Documents.Block" /> 抽象クラスから派生するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="block" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Background">
      <summary>コンテンツ エリアの背景の塗りつぶしに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>コンテンツ エリアの背景の塗りつぶしに使用するブラシ。背景ブラシを使用しない場合は <see langword="null" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Blocks">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> の内容の最上位の <see cref="T:System.Windows.Documents.Block" /> 要素を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> の内容を構成する <see cref="T:System.Windows.Documents.Block" /> 要素を含む <see cref="T:System.Windows.Documents.BlockCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnGap">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内の列間の間隔を示す、列間隔値を取得または設定します。</summary>
      <returns>列間隔 (デバイスに依存しないピクセル単位)。  <see cref="F:System.Double.NaN" /> の値 (属性値 "<c>Auto</c>" に相当) は、列の間隔が <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> プロパティと同じであることを示します。 既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnGapProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.ColumnGap" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush">
      <summary>列間ルールの描画に使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>列間の罫線を描画するときに使用する <see cref="T:System.Windows.Media.Brush" />、または背景ブラシを使用しないようにする <see langword="null" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth">
      <summary>列のルールの幅を取得または設定します。</summary>
      <returns>列のルールの幅。デバイス非依存のピクセル単位で指定します。 既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnWidth">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> の列の適切な最小幅を取得または設定します。</summary>
      <returns>適切な最小列幅 (デバイスに依存しないピクセル単位)。 値 <see cref="F:System.Double.NaN" /> により、ページの幅に関係なく、表示される列は 1 つだけです。  既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnWidthProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ContentEnd">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> のコンテンツの末尾を表す <see cref="T:System.Windows.Documents.FlowDocument" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextPointer" /> のコンテンツの末尾を表す <see cref="T:System.Windows.Documents.FlowDocument" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ContentStart">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> 内のコンテンツの先頭を表す <see cref="T:System.Windows.Documents.FlowDocument" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextPointerContext" /> のコンテンツの先頭を表す <see cref="T:System.Windows.Documents.FlowDocument" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FlowDirection">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内のコンテンツのフローの相対的な方向を取得または設定します。</summary>
      <returns>相対的なフロー方向を指定する <see cref="T:System.Windows.FlowDirection" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FlowDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.FlowDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontFamily">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> のトップレベルの優先フォント ファミリを取得または設定します。</summary>
      <returns>優先フォント ファミリ (1 つ以上の代替フォント ファミリを持つ第一に優先されるフォント ファミリ) を指定する <see cref="T:System.Windows.Media.FontFamily" /> オブジェクト。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 値によって決まるフォントです。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.FontFamily" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontSize">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> に対して、最上位レベルのフォント サイズを取得または設定します。</summary>
      <returns>使用する目的のフォント サイズ (デバイス非依存のピクセル単位)。   既定値は <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 値で決定されます。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.FontSize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontStretch">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> のトップレベルのフォント伸縮特性を取得または設定します。</summary>
      <returns>使用する目的のフォント伸縮特性を指定する <see cref="T:System.Windows.FontStretch" /> クラスのメンバー。 既定値は、<see cref="P:System.Windows.FontStretches.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontStretchProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.FontStretch" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontStyle">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> のトップレベルのフォント スタイルを取得または設定します。</summary>
      <returns>目的のフォント スタイルを指定する <see cref="T:System.Windows.FontStyles" /> クラスのメンバー。 既定値は <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 値で決定されます。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.FontStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontWeight">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> のトップレベルのフォントの太さを取得または設定します。</summary>
      <returns>目的のフォントの太さを指定する <see cref="T:System.Windows.FontWeights" /> クラスのメンバー。 既定値は <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 値で決定されます。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.FontWeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Foreground">
      <summary>
        <see cref="T:System.Windows.Media.Brush" /> のテキスト コンテンツに適用する <see cref="T:System.Windows.Documents.FlowDocument" /> を取得または設定します。</summary>
      <returns>テキスト コンテンツに適用するブラシ。 既定値は、<see cref="P:System.Windows.Media.Brushes.Black" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.Foreground" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> 値が変動するか、または固定された値であるかどうかを示す値を取得または設定します。</summary>
      <returns>列幅が変動する場合は <see langword="true" />。列幅が固定の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsEnabledCore">
      <summary>
        <see cref="P:System.Windows.ContentElement.IsEnabled" /> の <see cref="T:System.Windows.Documents.FlowDocument" /> プロパティの値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.ContentElement.IsEnabled" /> の <see cref="T:System.Windows.Documents.FlowDocument" /> プロパティの値。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled">
      <summary>単語の自動ハイフネーションが有効かどうかを示す値を取得または設定します。</summary>
      <returns>自動改行と単語の自動ハイフネーションが有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled">
      <summary>最適な段落レイアウトが有効かどうかを示す値を取得または設定します。</summary>
      <returns>最適な段落レイアウトが有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LineHeight">
      <summary>コンテンツの各行の高さを取得または設定します。</summary>
      <returns>各行の高さ。単位はデバイスに依存しないピクセルで、値は 0.0034 から 160000 までの範囲です。 値 <see cref="F:System.Double.NaN" /> (属性値 "<c>Auto</c>" に相当) を指定すると、現在のフォント特性を基に行の高さが自動的に決定されます。 既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> が負の値に設定されています。</exception>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.LineHeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LineStackingStrategy">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内の各テキスト行の行ボックスを決定する際に使用する機構を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.LineStackingStrategy" /> 内の各テキスト行の行ボックスを決定する際に使用する機構を指定する <see cref="T:System.Windows.Documents.FlowDocument" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.LineStackingStrategyProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> の論理的な子を反復処理できる列挙子を取得します。</summary>
      <returns>論理的な子の列挙子。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MaxPageHeight">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最大の高さを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最大の高さ (デバイスに依存しないピクセル単位)。 既定値は <see cref="F:System.Double.PositiveInfinity" /> です (ページの最大の高さはありません)。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MaxPageHeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.MaxPageHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MaxPageWidth">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最大幅を取得または設定します。</summary>
      <returns>デバイスに依存しないピクセル単位の、<see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最大幅。 既定値は <see cref="F:System.Double.PositiveInfinity" /> (ページの最大幅なし) です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MaxPageWidthProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.MaxPageWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MinPageHeight">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最小の高さを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最小の高さ (デバイスに依存しないピクセル単位)。 既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MinPageHeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.MinPageHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MinPageWidth">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最小幅を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最小幅 (デバイスに依存しないピクセル数)。 既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MinPageWidthProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.MinPageWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.OnCreateAutomationPeer">
      <summary>派生クラスでオーバーライドされた場合、Windows Presentation Foundation (WPF) インフラストラクチャに特定の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を実装します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>要素に存在する 1 つ以上の依存関係プロパティの有効な値が変更された場合に呼び出されます。</summary>
      <param name="e">関連付けられているイベントの引数。</param>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PageHeight">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの適切な高さを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの適切な高さ (デバイス非依存のピクセル)。 値 <see cref="F:System.Double.NaN" /> (属性値 "<c>Auto</c>" に相当) を指定すると、ページの高さが自動的に決定されます。 既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PageHeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.PageHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PagePadding">
      <summary>ページの境界とページのコンテンツとの間に埋め込むスペースの幅を示す値を取得または設定します。</summary>
      <returns>適用する埋め込みの量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。 既定では 0 (0.0) の均一の幅です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PagePaddingProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.PagePadding" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PageWidth">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの適切な幅を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの適切な幅 (デバイス非依存のピクセル)。 値 <see cref="F:System.Double.NaN" /> (属性値 "<c>Auto</c>" に相当) に設定すると、ページの幅が自動的に決定されます。 既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PageWidthProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.PageWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.SetDpi(System.Windows.DpiScale)">
      <summary>FlowDocument の DPI を設定することにより、再測定および再表示されます。</summary>
      <param name="dpiInfo">
        <see cref="T:System.Windows.Media.Visual" /> または <see cref="T:System.Windows.UIElement" /> の表示元の DPI 設定。</param>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#IServiceProvider#GetService(System.Type)">
      <summary>指定した型のサービス オブジェクトを取得します。</summary>
      <param name="serviceType">取得対象となるサービスの型を指定するオブジェクト。</param>
      <returns>
        <paramref name="serviceType." /> 型のサービス オブジェクト

または -
<paramref name="serviceType" /> 型のサービス オブジェクトがない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator">
      <summary>実際のコンテンツの改ページ位置の自動修正を実行するソース オブジェクトを定義します。</summary>
      <returns>実際のコンテンツの改ページ位置の自動修正を実行するオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.TextAlignment">
      <summary>テキスト コンテンツの水平方向の配置を示す値を取得または設定します。</summary>
      <returns>目的の配置を指定する、いずれかの <see cref="T:System.Windows.TextAlignment" /> 値。 既定値は、<see cref="F:System.Windows.TextAlignment.Left" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.TextAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.TextAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.TextEffects">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> のテキスト コンテンツに適用する効果を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.TextEffectCollection" /> のテキストに適用する効果を定義する 1 つ以上の <see cref="T:System.Windows.Media.TextEffect" /> オブジェクトを格納する <see cref="T:System.Windows.Documents.FlowDocument" />。 既定値は <see langword="null" /> です (効果は適用されません)。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.TextEffectsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.FlowDocument.TextEffects" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Typography">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> のテキスト コンテンツで現在有効な文字体裁のバリエーションを取得します。</summary>
      <returns>現在有効な文字体裁のバリエーションを指定する <see cref="T:System.Windows.Documents.Typography" /> オブジェクト。 既定の文字体裁値の一覧については、<see cref="T:System.Windows.Documents.Typography" /> のトピックを参照してください。</returns>
    </member>
    <member name="T:System.Windows.Documents.FrameworkRichTextComposition">
      <summary>テキスト入力に関連するコンポジションを表します。 このクラスを使用して、コンポジションのテキスト位置または結果文字列を検索できます。</summary>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.CompositionEnd">
      <summary>現在のコンポジション テキストの末尾位置を取得します。</summary>
      <returns>現在のコンポジション テキストの末尾位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.CompositionStart">
      <summary>現在のコンポジション テキストの先頭位置を取得します。</summary>
      <returns>現在のコンポジション テキストの先頭位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.ResultEnd">
      <summary>テキスト入力の結果として得られるテキストの末尾位置を取得します。</summary>
      <returns>テキスト入力の結果として得られるテキストの末尾位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.ResultStart">
      <summary>テキスト入力の結果として得られるテキストの先頭位置を取得します。</summary>
      <returns>テキスト入力の結果として得られるテキストの先頭位置。</returns>
    </member>
    <member name="T:System.Windows.Documents.FrameworkTextComposition">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> のテキスト入力イベント時のコンポジションを表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.FrameworkTextComposition.Complete">
      <summary>コンポジションを完了します。</summary>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.CompositionLength">
      <summary>現在のコンポジションの長さを Unicode 記号の数として取得します。</summary>
      <returns>現在のコンポジションの長さ (Unicode 記号の数)。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.CompositionOffset">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> 内で、コンポジション テキストが発生した位置を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TextBox" /> 内で、コンポジション テキストが発生した位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.ResultLength">
      <summary>
        <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> イベントが発生したとき、完成したテキストの長さを Unicode 記号の数として取得します。</summary>
      <returns>
        <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> イベントが発生したときの完成したテキストの長さ (Unicode 記号の数)。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.ResultOffset">
      <summary>
        <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> イベントが発生したとき、完成したテキストのオフセットを取得します。</summary>
      <returns>
        <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> イベントが発生したときの完成したテキストのオフセット。</returns>
    </member>
    <member name="T:System.Windows.Documents.GetPageRootCompletedEventArgs">
      <summary>
        <see cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Documents.GetPageRootCompletedEventArgs.Result">
      <summary>
        <see cref="T:System.Windows.Documents.FixedPage" /> によって要求された <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> コンテンツを非同期に取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.PageContent" /> よって要求された <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" />のビジュアル ツリーのルート要素。</returns>
    </member>
    <member name="T:System.Windows.Documents.GetPageRootCompletedEventHandler">
      <summary>
        <see cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" /> クラスの <see cref="T:System.Windows.Documents.PageContent" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Documents.Glyphs">
      <summary>固定テキストの描画に使用される一連のグリフを表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Glyphs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.BidiLevel">
      <summary>
        <see cref="T:System.Windows.Documents.Glyphs" /> の双方向の入れ子レベルを取得または設定します。</summary>
      <returns>双方向の入れ子レベルを表す <see cref="T:System.Int32" /> 値。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.BidiLevelProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.BidiLevel" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.CaretStops">
      <summary>
        <see cref="T:System.Windows.Documents.Glyphs" /> を表している、Unicode 文字列内のコード ポイントに対応したキャレット位置を取得または設定します。</summary>
      <returns>コード ポイントにキャレット位置があるかどうかを表す <see cref="T:System.String" /> 型の値。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.CaretStopsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.CaretStops" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.DeviceFontName">
      <summary>
        <see cref="T:System.Windows.Documents.Glyphs" /> オブジェクトが最適化される対象の、デバイス固有のフォントを取得または設定します。</summary>
      <returns>デバイス フォントの名前を表す <see cref="T:System.String" /> 値。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.DeviceFontNameProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.DeviceFontName" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Fill">
      <summary>
        <see cref="T:System.Windows.Media.Brush" /> クラスの塗りつぶしに使用する <see cref="T:System.Windows.Documents.Glyphs" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" /> クラスの塗りつぶしに使用する <see cref="T:System.Windows.Documents.Glyphs" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FillProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.Fill" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontRenderingEmSize">
      <summary>
        <see cref="T:System.Windows.Documents.Glyphs" /> クラスの描画に使用する全角サイズを取得または設定します。</summary>
      <returns>描画に使用する全角サイズを表す <see cref="T:System.Double" /> 値。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontRenderingEmSizeProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontUri">
      <summary>
        <see cref="T:System.Uri" /> クラスの描画に使用するフォントの場所を表す <see cref="T:System.Windows.Documents.Glyphs" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Uri" /> クラスの描画に使用するフォントの場所を表す <see cref="T:System.Windows.Documents.Glyphs" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontUriProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.FontUri" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Indices">
      <summary>
        <see cref="T:System.Windows.Documents.Glyphs" /> オブジェクトを表すグリフ指定のコレクションを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" /> オブジェクトを表すグリフ指定のコレクション。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IndicesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.Indices" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.IsSideways">
      <summary>
        <see cref="T:System.Windows.Documents.Glyphs" /> オブジェクトを回転するかどうかを決定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" /> オブジェクトを構成するグリフが反時計回りに 90 度回転されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IsSidewaysProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.IsSideways" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginX">
      <summary>
        <see cref="T:System.Windows.Documents.Glyphs" /> オブジェクトの x 軸の原点の値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" /> オブジェクトの x 軸の原点。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginXProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.OriginX" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginY">
      <summary>
        <see cref="T:System.Windows.Documents.Glyphs" /> オブジェクトの y 軸の原点の値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" /> オブジェクトの y 軸の原点。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginYProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.OriginY" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.StyleSimulations">
      <summary>
        <see cref="T:System.Windows.Media.StyleSimulations" /> クラスの <see cref="T:System.Windows.Documents.Glyphs" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.StyleSimulations" /> クラスの <see cref="T:System.Windows.Documents.Glyphs" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.StyleSimulationsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.System#Windows#Markup#IUriContext#BaseUri">
      <summary>このメンバーの詳細については、「<see cref="P:System.Windows.Markup.IUriContext.BaseUri" />」をご覧ください。</summary>
      <returns>現在のコンテキストのベース URI。</returns>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.ToGlyphRun">
      <summary>
        <see cref="T:System.Windows.Media.GlyphRun" /> オブジェクトのプロパティから <see cref="T:System.Windows.Documents.Glyphs" /> を作成します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.GlyphRun" /> オブジェクトのプロパティを使用して作成された <see cref="T:System.Windows.Documents.Glyphs" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.UnicodeString">
      <summary>
        <see cref="T:System.String" /> オブジェクトの Unicode 文字列を表す <see cref="T:System.Windows.Documents.Glyphs" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" /> オブジェクトの Unicode 文字列。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.UnicodeStringProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.UnicodeString" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.Hyperlink">
      <summary>フロー コンテンツ内のハイパーリンクをホストする機能を提供するインラインレベル フロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> クラスの新しい既定のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.Inline)">
      <summary>指定した <see cref="T:System.Windows.Documents.Hyperlink" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツとして受け取って、<see cref="T:System.Windows.Documents.Hyperlink" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childInline">新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Hyperlink" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>指定した <see cref="T:System.Windows.Documents.Hyperlink" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツとして受け取ると共に、新しい <see cref="T:System.Windows.Documents.Hyperlink" /> の挿入位置を指定する <see cref="T:System.Windows.Documents.TextPointer" /> を受け取って、<see cref="T:System.Windows.Documents.Hyperlink" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childInline">新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Hyperlink" /> オブジェクト。  このパラメーターは、<see langword="null" /> でもかまいません。その場合、<see cref="T:System.Windows.Documents.Inline" /> は挿入されません。</param>
      <param name="insertionPosition">
        <see cref="T:System.Windows.Documents.TextPointer" /> 要素の作成後に、この要素を挿入する挿入位置を指定する <see cref="T:System.Windows.Documents.Hyperlink" />。自動挿入を行わない場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>新しい <see cref="T:System.Windows.Documents.Hyperlink" /> に格納されるコンテンツの選択範囲の先頭と末尾を示す 2 つの <see cref="T:System.Windows.Documents.TextPointer" /> オブジェクトを受け取って、<see cref="T:System.Windows.Documents.Hyperlink" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="start">新しい <see cref="T:System.Windows.Documents.TextPointer" /> に格納されるコンテンツの選択範囲の先頭を示す <see cref="T:System.Windows.Documents.Hyperlink" />。</param>
      <param name="end">新しい <see cref="T:System.Windows.Documents.TextPointer" /> に格納されるコンテンツの選択範囲の末尾を示す <see cref="T:System.Windows.Documents.Hyperlink" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> または <paramref name="end" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> および <paramref name="end" /> が、<see cref="T:System.Windows.Documents.Span" /> 要素によって囲まれた部分に適合するコンテンツの範囲にありません。たとえば、<paramref name="start" /> と <paramref name="end" /> が別々の段落内の位置を示している場合などです。</exception>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.BaseUri">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> の基本 URI を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Hyperlink" /> の基本 URI。</returns>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.Click">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> 上でマウスの左ボタンがクリックされると発生します。</summary>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.ClickEvent">
      <summary>
        <see cref="E:System.Windows.Documents.Hyperlink.Click" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.Command">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> に関連付けられているコマンドを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Hyperlink" /> に関連付けられているコマンド。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandParameter">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.Command" /> プロパティで指定されたコマンドに関連付けられているコマンド パラメーターを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.Command" /> プロパティで指定されたコマンドのパラメーターを指定するオブジェクト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandParameterProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandTarget">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.Command" /> プロパティで指定したコマンドが実行される対象要素を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.Command" /> プロパティで指定したコマンドが実行される対象要素。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandTargetProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.CommandTarget" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.DoClick">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> をクリックするユーザーの操作をシミュレートします。</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.IsEnabledCore">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> が有効かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Hyperlink" /> が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.NavigateUri">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> がアクティブになったときの移動先の URI を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Hyperlink" /> がアクティブになったときの移動先の URI。 既定値は、<see langword="null" /> です。
<see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> プロパティの値に移動できるのは、<see cref="T:System.Windows.Documents.Hyperlink" /> の直接または間接の親がナビゲーションホスト (<see cref="T:System.Windows.Navigation.NavigationWindow" />、<see cref="T:System.Windows.Controls.Frame" />、または Xbap をホストできる任意のブラウザー (Internet Explorer 6 以降のバージョンを含む) の場合のみです。 <see cref="T:System.Windows.Documents.Hyperlink" />、および Firefox 2.0 以降)。 詳細については、「ナビゲーションの概要」の「ナビゲーションホスト」セクションを参照してください。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.NavigateUriProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnClick">
      <summary>
        <see cref="E:System.Windows.Documents.Hyperlink.Click" /> ルーティング イベントを処理します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Documents.Hyperlink" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Documents.Hyperlink" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.KeyDown" /> ルーティング イベントを処理します。</summary>
      <param name="e">
        <see cref="E:System.Windows.ContentElement.KeyDown" /> イベントに関連付けられている引数。</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> ルーティング イベントを処理します。</summary>
      <param name="e">
        <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> イベントに関連付けられている引数。</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> ルーティング イベントを処理します。</summary>
      <param name="e">
        <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> イベントに関連付けられている引数。</param>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.RequestNavigate">
      <summary>ナビゲーション イベントが要求されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.RequestNavigateEvent">
      <summary>
        <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.System#Windows#Markup#IUriContext#BaseUri">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> の基本 URI を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Hyperlink" /> の基本 URI。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.TargetName">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> の対象となるウィンドウまたはフレームの名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Hyperlink" /> の対象となるウィンドウまたはフレームの名前を指定する文字列。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.TargetNameProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.TargetName" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.Inline">
      <summary>すべてのインライン フロー コンテンツ要素の基になる抽象クラス。</summary>
    </member>
    <member name="M:System.Windows.Documents.Inline.#ctor">
      <summary>派生クラスによって呼び出されるときに基本クラスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Inline.BaselineAlignment">
      <summary>
        <see cref="T:System.Windows.Documents.Inline" /> 要素のベースライン配置を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.BaselineAlignment" /> 要素のベースライン配置を指定する <see cref="T:System.Windows.Documents.Inline" /> 列挙体のメンバー。
既定値は<see cref="T:System.Windows.BaselineAlignment" />です。ベースライン。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.BaselineAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Inline.BaselineAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Inline.FlowDirection">
      <summary>
        <see cref="T:System.Windows.Documents.Inline" /> 要素内のコンテンツのフローの相対的な方向を指定する値を取得または設定します。</summary>
      <returns>相対的なフロー方向を指定する <see cref="T:System.Windows.FlowDirection" /> 列挙体のメンバー。  このプロパティを取得すると、現在有効なフロー方向が返されます。  このプロパティを設定すると、<see cref="T:System.Windows.Documents.Inline" /> 要素のコンテンツが指定した方向に再フローされます。
既定値は <see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FlowDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Inline.FlowDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Inline.NextInline">
      <summary>この要素のピアである次の <see cref="T:System.Windows.Documents.Inline" /> 要素を取得します。</summary>
      <returns>この要素のピアで<see cref="T:System.Windows.Documents.Inline" />ある次の要素を表す**** <see cref="T:System.Windows.Documents.Inline" /> オブジェクト。次の要素がない場合は <see cref="T:System.Windows.Documents.Inline" />  null。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.PreviousInline">
      <summary>この要素のピアである前の <see cref="T:System.Windows.Documents.Inline" /> 要素を取得します。</summary>
      <returns>この要素のピアで<see cref="T:System.Windows.Documents.Inline" />ある前の要素を表す**** <see cref="T:System.Windows.Documents.Inline" /> オブジェクト。前の要素が存在しない場合は <see cref="T:System.Windows.Documents.Inline" />  null。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.SiblingInlines">
      <summary>この要素の兄弟 (ピア) である <see cref="T:System.Windows.Documents.InlineCollection" /> 要素を格納する <see cref="T:System.Windows.Documents.Inline" /> を取得します。</summary>
      <returns>この要素と兄弟関係にある <see cref="T:System.Windows.Documents.InlineCollection" /> 要素を格納する <see cref="T:System.Windows.Documents.Inline" /> オブジェクト。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.TextDecorations">
      <summary>この要素に適用する文字装飾を格納する <see cref="T:System.Windows.TextDecorationCollection" /> を取得します。</summary>
      <returns>この要素に適用する文字装飾を格納する <see cref="T:System.Windows.TextDecorationCollection" /> コレクション。
既定値はnullです (文字飾りは適用されません)。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.TextDecorationsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.InlineCollection">
      <summary>
        <see cref="T:System.Windows.Documents.Inline" /> 要素のコレクションを表します。 <see cref="T:System.Windows.Documents.InlineCollection" /> は、<see cref="T:System.Windows.Documents.Paragraph" />、<see cref="T:System.Windows.Documents.Span" />、<see cref="T:System.Windows.Controls.TextBlock" /> の要素の使用できる子コンテンツを定義します。</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.String)">
      <summary>
        <see cref="T:System.Windows.Documents.Run" /> として指定された、特定のテキストを持つ暗黙の <see cref="T:System.String" /> 要素を追加します。</summary>
      <param name="text">暗黙の <see cref="P:System.Windows.Documents.Run.Text" /> の <see cref="T:System.Windows.Documents.Run" /> プロパティとして設定されたテキスト。</param>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.Windows.UIElement)">
      <summary>指定した <see cref="T:System.Windows.Documents.InlineUIContainer" /> が既に含まれている暗黙の <see cref="T:System.Windows.UIElement" /> を追加します。</summary>
      <param name="uiElement">暗黙の <see cref="T:System.Windows.UIElement" /> の <see cref="P:System.Windows.Documents.InlineUIContainer.Child" /> プロパティとして設定された <see cref="T:System.Windows.Documents.InlineUIContainer" />。</param>
    </member>
    <member name="P:System.Windows.Documents.InlineCollection.FirstInline">
      <summary>
        <see cref="T:System.Windows.Documents.Inline" /> のこのインスタンス内の最初の <see cref="T:System.Windows.Documents.InlineCollection" /> 要素を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Inline" /> のこのインスタンス内の最初の <see cref="T:System.Windows.Documents.InlineCollection" /> 要素。</returns>
    </member>
    <member name="P:System.Windows.Documents.InlineCollection.LastInline">
      <summary>
        <see cref="T:System.Windows.Documents.Inline" /> のこのインスタンス内の最後の <see cref="T:System.Windows.Documents.InlineCollection" /> 要素を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Inline" /> のこのインスタンス内の最後の <see cref="T:System.Windows.Documents.InlineCollection" /> 要素。</returns>
    </member>
    <member name="T:System.Windows.Documents.InlineUIContainer">
      <summary>
        <see cref="T:System.Windows.UIElement" /> 要素 (たとえば、<see cref="T:System.Windows.Controls.Button" />) のフロー コンテンツへの埋め込み (ホスト) を可能にするインライン レベルのフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.InlineUIContainer" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement)">
      <summary>指定した <see cref="T:System.Windows.Documents.InlineUIContainer" /> オブジェクトを新しい <see cref="T:System.Windows.UIElement" /> の初期コンテンツとして受け取って、<see cref="T:System.Windows.Documents.InlineUIContainer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childUIElement">新しい <see cref="T:System.Windows.UIElement" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.InlineUIContainer" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement,System.Windows.Documents.TextPointer)">
      <summary>指定した <see cref="T:System.Windows.Documents.InlineUIContainer" /> オブジェクトを新しい <see cref="T:System.Windows.UIElement" /> の初期コンテンツとして受け取ると共に、新しい <see cref="T:System.Windows.Documents.InlineUIContainer" /> 要素の挿入位置を指定する <see cref="T:System.Windows.Documents.TextPointer" /> を受け取って、<see cref="T:System.Windows.Documents.InlineUIContainer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childUIElement">新しい <see cref="T:System.Windows.UIElement" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.InlineUIContainer" /> オブジェクト。  このパラメーターは、<see langword="null" /> でもかまいません。その場合、<see cref="T:System.Windows.UIElement" /> は挿入されません。</param>
      <param name="insertionPosition">
        <see cref="T:System.Windows.Documents.TextPointer" /> 要素の作成後に、この要素を挿入する挿入位置を指定する <see cref="T:System.Windows.Documents.InlineUIContainer" />。自動挿入を行わない場合は <see langword="null" />。</param>
    </member>
    <member name="P:System.Windows.Documents.InlineUIContainer.Child">
      <summary>
        <see cref="T:System.Windows.UIElement" /> によってホストされる <see cref="T:System.Windows.Documents.InlineUIContainer" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> によってホストされる <see cref="T:System.Windows.Documents.InlineUIContainer" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.Italic">
      <summary>コンテンツを斜体のフォント スタイルで表示させるインライン レベルのフロー コンテンツ要素を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Italic" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.Inline)">
      <summary>指定した <see cref="T:System.Windows.Documents.Italic" /> オブジェクトを初期コンテンツとして使用して、<see cref="T:System.Windows.Documents.Inline" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childInline">新しい <see cref="T:System.Windows.Documents.Italic" /> の初期コンテンツ。</param>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>指定した <see cref="T:System.Windows.Documents.Italic" /> オブジェクトをその初期コンテンツとし、新しい <see cref="T:System.Windows.Documents.Inline" /> 要素の挿入位置を指定する <see cref="T:System.Windows.Documents.TextPointer" /> を使用して、<see cref="T:System.Windows.Documents.Inline" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childInline">初期のコンテンツ。 このパラメーターは、<see langword="null" /> でもかまいません。その場合、<see cref="T:System.Windows.Documents.Inline" /> は挿入されません。</param>
      <param name="insertionPosition">作成された <see cref="T:System.Windows.Documents.Italic" /> 要素を挿入する挿入位置。</param>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>新しい <see cref="T:System.Windows.Documents.Italic" /> に格納されるコンテンツの選択範囲の先頭と末尾を示す、指定した <see cref="T:System.Windows.Documents.TextPointer" /> オブジェクトを使用して、<see cref="T:System.Windows.Documents.Italic" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="start">新しい <see cref="T:System.Windows.Documents.Italic" /> に格納されるコンテンツの選択範囲の先頭。</param>
      <param name="end">新しい <see cref="T:System.Windows.Documents.Italic" /> に格納されるコンテンツの選択範囲の末尾。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> または <paramref name="end" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> および <paramref name="end" /> が、<see cref="T:System.Windows.Documents.Italic" /> 要素によって囲まれた部分に適合するコンテンツの範囲にありません。たとえば、<paramref name="start" /> と <paramref name="end" /> が別々の段落内の位置を示している場合などです。</exception>
    </member>
    <member name="T:System.Windows.Documents.LineBreak">
      <summary>フロー コンテンツでの改行を生じさせるインライン フロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.LineBreak" /> クラスの新しい既定のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor(System.Windows.Documents.TextPointer)">
      <summary>
        <see cref="T:System.Windows.Documents.LineBreak" /> クラスの新しいインスタンスを初期化して、この新しい <see cref="T:System.Windows.Documents.LineBreak" /> を指定した位置に挿入します。</summary>
      <param name="insertionPosition">
        <see cref="T:System.Windows.Documents.TextPointer" /> 要素の作成後に、この要素を挿入する挿入位置を指定する <see cref="T:System.Windows.Documents.LineBreak" />。自動挿入を行わない場合は <see langword="null" />。</param>
    </member>
    <member name="T:System.Windows.Documents.LinkTarget">
      <summary>他のドキュメント、または同じドキュメント内の他の場所にリンクすることができるページの要素を表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTarget.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.LinkTarget" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.LinkTarget.Name">
      <summary>この <see cref="T:System.Windows.Documents.LinkTarget" /> がリンク可能な要素として識別する要素の名前を取得または設定します。</summary>
      <returns>この <see cref="T:System.String" /> 要素に対応する、マークアップ要素の <see cref="P:System.Windows.FrameworkElement.Name" /> プロパティと同じ <see cref="T:System.Windows.Documents.LinkTarget" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.LinkTargetCollection">
      <summary>
        <see cref="T:System.Windows.Documents.LinkTarget" /> 内のすべての <see cref="T:System.IO.Packaging.Package" /> 要素のコレクションを提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.LinkTargetCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Add(System.Windows.Documents.LinkTarget)">
      <summary>指定した <see cref="T:System.Windows.Documents.LinkTarget" /> をコレクションに追加します。</summary>
      <param name="value">追加されるリンク先。</param>
      <returns>追加された <paramref name="value" /> のコレクション内の 0 から始まるインデックス。</returns>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Contains(System.Windows.Documents.LinkTarget)">
      <summary>特定の <see cref="T:System.Windows.Documents.LinkTarget" /> がコレクション内にあるかどうかを示す値を指定します。</summary>
      <param name="value">テスト対象のリンク。</param>
      <returns>
        <paramref name="value" /> が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.CopyTo(System.Windows.Documents.LinkTarget[],System.Int32)">
      <summary>指定したインデックスを開始位置として、指定した配列にコレクション内の項目をコピーします。</summary>
      <param name="array">対象となる配列。</param>
      <param name="index">最初の項目がコピーされる、配列位置の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.IndexOf(System.Windows.Documents.LinkTarget)">
      <summary>指定した項目のインデックスを取得します。</summary>
      <param name="value">コレクション内で検索するオブジェクト。</param>
      <returns>コレクションに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Insert(System.Int32,System.Windows.Documents.LinkTarget)">
      <summary>コレクション内の指定したインデックスに、指定した項目を挿入します。</summary>
      <param name="index">リンク先が挿入されるポイント。</param>
      <param name="value">挿入するターゲット。</param>
    </member>
    <member name="P:System.Windows.Documents.LinkTargetCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Windows.Documents.LinkTarget" /> を取得または設定します。</summary>
      <param name="index">読み書きされているターゲットのインデックス。</param>
      <returns>指定されたインデックス位置にある <see cref="T:System.Windows.Documents.LinkTarget" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Remove(System.Windows.Documents.LinkTarget)">
      <summary>特定のオブジェクトが <see cref="T:System.Collections.Generic.ICollection`1" /> 内にあるときに、最初に出現したものを削除します。</summary>
      <param name="value">削除するリンク先。</param>
    </member>
    <member name="T:System.Windows.Documents.List">
      <summary>順序付きリストまたは順序の付いていないリスト内のコンテンツを提示する機能を提供するブロックレベルのフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.List.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.List" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.List.#ctor(System.Windows.Documents.ListItem)">
      <summary>指定した <see cref="T:System.Windows.Documents.List" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.ListItem" /> の初期コンテンツとして受け取って、<see cref="T:System.Windows.Documents.List" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="listItem">新しい <see cref="T:System.Windows.Documents.ListItem" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.List" /> オブジェクト。</param>
    </member>
    <member name="P:System.Windows.Documents.List.ListItems">
      <summary>
        <see cref="T:System.Windows.Documents.ListItemCollection" /> のコンテンツを構成する <see cref="T:System.Windows.Documents.ListItem" /> 要素を格納する <see cref="T:System.Windows.Documents.List" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.ListItemCollection" /> のコンテンツを構成する <see cref="T:System.Windows.Documents.ListItem" /> 要素を格納する <see cref="T:System.Windows.Documents.List" />。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Documents.List.MarkerOffset">
      <summary>各 <see cref="T:System.Windows.Documents.ListItem" /> 要素のコンテンツとリスト マーカーの近傍端の間に必要な距離を取得または設定します。</summary>
      <returns>リスト コンテンツとリスト マーカーの近傍端の間に必要な距離を指定する double 型の値 (デバイスに依存しないピクセル単位)。
値<see cref="F:System.Double.NaN" /> (属性値 "<c>Auto</c>" に相当) を指定すると、マーカーオフセットが自動的に決定されます。
既定値は <see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.List.MarkerOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Documents.List.MarkerOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.List.MarkerStyle">
      <summary>
        <see cref="T:System.Windows.Documents.List" /> のマーカー スタイルを取得または設定します。</summary>
      <returns>使用するマーカー スタイルを指定する <see cref="T:System.Windows.TextMarkerStyle" /> 列挙体のメンバー。
既定値は <see cref="F:System.Windows.TextMarkerStyle.Disc" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.List.MarkerStyleProperty">
      <summary>
        <see cref="P:System.Windows.Documents.List.MarkerStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.List.StartIndex">
      <summary>順序付きリストに付ける項目ラベルの開始インデックスを取得または設定します。</summary>
      <returns>順序付きリストに付ける項目ラベルの開始インデックス。
既定値は1です。</returns>
    </member>
    <member name="F:System.Windows.Documents.List.StartIndexProperty">
      <summary>
        <see cref="P:System.Windows.Documents.List.StartIndex" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.ListItem">
      <summary>順序付きまたは順序の付いていない <see cref="T:System.Windows.Documents.List" /> 内の特定のコンテンツ項目を表すフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.ListItem.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.ListItem" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.ListItem.#ctor(System.Windows.Documents.Paragraph)">
      <summary>指定した <see cref="T:System.Windows.Documents.ListItem" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Paragraph" /> の初期コンテンツとして受け取って、<see cref="T:System.Windows.Documents.ListItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="paragraph">新しい <see cref="T:System.Windows.Documents.Paragraph" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.ListItem" /> オブジェクト。</param>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Blocks">
      <summary>
        <see cref="T:System.Windows.Documents.ListItem" /> の最上位 <see cref="T:System.Windows.Documents.Block" /> 要素を格納するブロック コレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.ListItem" /> の <see cref="T:System.Windows.Documents.Block" /> 要素を格納するブロック コレクション。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.BorderBrush">
      <summary>要素の境界線を描画するときに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>要素の境界線に適用するために使用するブラシ。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.BorderBrushProperty">
      <summary>
        <see cref="P:System.Windows.Documents.ListItem.BorderBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.BorderThickness">
      <summary>要素の境界線の太さを取得または設定します。</summary>
      <returns>適用する境界線の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。 既定では 0 (0.0) の均一の幅です。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.BorderThicknessProperty">
      <summary>
        <see cref="P:System.Windows.Documents.ListItem.BorderThickness" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.FlowDirection">
      <summary>
        <see cref="T:System.Windows.Documents.ListItem" /> 要素内のコンテンツのフローの相対的な方向を指定する値を取得または設定します。</summary>
      <returns>相対的なフロー方向を指定する <see cref="T:System.Windows.FlowDirection" /> 値のいずれか。  既定値は、<see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.FlowDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Documents.ListItem.FlowDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.LineHeight">
      <summary>コンテンツの各行の高さを取得または設定します。</summary>
      <returns>各行の高さ。単位はデバイスに依存しないピクセルで、値は 0.0034 から 160000 までの範囲です。  値 (属性<see cref="F:System.Double.NaN" />値 "<c>Auto</c>" に相当) を指定すると、現在のフォント特性を基に行の高さが自動的に決定されます。  既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.LineHeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.ListItem.LineHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.LineStackingStrategy">
      <summary>
        <see cref="T:System.Windows.Documents.ListItem" /> 内の各テキスト行の行ボックスを決定する際に使用する機構を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.LineStackingStrategy" /> 内の各テキスト行の行ボックスを決定する際に使用される機構を指定する <see cref="T:System.Windows.Documents.ListItem" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.LineStackingStrategyProperty">
      <summary>
        <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.List">
      <summary>
        <see cref="T:System.Windows.Documents.List" /> を格納している <see cref="T:System.Windows.Documents.ListItem" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.ListItem" /> を格納しているリスト。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Margin">
      <summary>要素の余白の厚みを取得または設定します。</summary>
      <returns>適用する余白の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。 既定では 0 (0.0) の均一の幅です。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.MarginProperty">
      <summary>
        <see cref="P:System.Windows.Documents.ListItem.Margin" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.NextListItem">
      <summary>含有する <see cref="T:System.Windows.Documents.ListItem" /> 内の次の <see cref="T:System.Windows.Documents.List" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.ListItem" /> 内の次の <see cref="T:System.Windows.Documents.List" />。次の <see cref="T:System.Windows.Documents.ListItem" /> がない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Padding">
      <summary>要素のパディングの厚みを取得または設定します。</summary>
      <returns>適用する余白の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。 既定では 0 (0.0) の均一の幅です。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.PaddingProperty">
      <summary>
        <see cref="P:System.Windows.Documents.ListItem.Padding" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItem.PreviousListItem">
      <summary>含有する <see cref="T:System.Windows.Documents.ListItem" /> 内の前の <see cref="T:System.Windows.Documents.List" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.ListItem" /> 内の前の <see cref="T:System.Windows.Documents.List" />。前の <see cref="T:System.Windows.Documents.ListItem" /> がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.ListItem.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>
        <see cref="P:System.Windows.Documents.ListItem.Blocks" /> オブジェクトのシリアル化中に <see cref="T:System.Windows.Documents.ListItem" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <param name="manager">このオブジェクトのシリアル化サービス マネージャー オブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.Blocks" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Documents.ListItem.SiblingListItems">
      <summary>現在の <see cref="T:System.Windows.Documents.ListItemCollection" /> 要素の兄弟である <see cref="T:System.Windows.Documents.ListItem" /> 要素を格納する <see cref="T:System.Windows.Documents.ListItem" /> を取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.Documents.ListItemCollection" /> 要素の親が直接ホストする子 <see cref="T:System.Windows.Documents.ListItem" /> 要素を格納する <see cref="T:System.Windows.Documents.ListItem" />。現在の <see cref="T:System.Windows.Documents.ListItem" /> 要素に親がない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.TextAlignment">
      <summary>テキスト コンテンツの水平方向の配置を示す値を取得または設定します。</summary>
      <returns>目的の配置を指定する、いずれかの <see cref="T:System.Windows.TextAlignment" /> 値。 既定値は、<see cref="F:System.Windows.TextAlignment.Left" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.TextAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Documents.ListItem.TextAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.ListItemCollection">
      <summary>
        <see cref="T:System.Windows.Documents.ListItem" /> 要素のコレクションを表します。 <see cref="T:System.Windows.Documents.ListItemCollection" /> は、<see cref="T:System.Windows.Documents.List" /> 要素に許容される子コンテンツを定義します。</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItemCollection.FirstListItem">
      <summary>
        <see cref="T:System.Windows.Documents.ListItem" /> のこのインスタンス内の最初の <see cref="T:System.Windows.Documents.ListItemCollection" /> 要素を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.ListItem" /> のこのインスタンス内の最初の <see cref="T:System.Windows.Documents.ListItemCollection" /> 要素。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItemCollection.LastListItem">
      <summary>
        <see cref="T:System.Windows.Documents.ListItem" /> のこのインスタンス内の最後の <see cref="T:System.Windows.Documents.ListItemCollection" /> 要素を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.ListItem" /> のこのインスタンス内の最後の <see cref="T:System.Windows.Documents.ListItemCollection" /> 要素。</returns>
    </member>
    <member name="T:System.Windows.Documents.LogicalDirection">
      <summary>指定した位置 (<see cref="T:System.Windows.Documents.TextPointer" />) を基準とするテキストの挿入や取得またはテキスト内の移動など、特定のテキスト操作を実行する論理方向を指定します。</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Backward">
      <summary>後方、つまり右から左。</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Forward">
      <summary>前方、つまり左から右。</summary>
    </member>
    <member name="T:System.Windows.Documents.PageContent">
      <summary>
        <see cref="T:System.Windows.Documents.FixedDocument" /> 内の <see cref="T:System.Windows.Documents.FixedPage" /> 要素に関する情報を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.PageContent.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.PageContent" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.PageContent.Child">
      <summary>この <see cref="T:System.Windows.Documents.FixedPage" /> に関連付けられた <see cref="T:System.Windows.Documents.PageContent" /> を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Documents.PageContent" />に関連付けられている <see cref="T:System.Windows.Documents.FixedPage" />。 <see cref="P:System.Windows.Documents.PageContent.Source" /> プロパティによって <see cref="T:System.Windows.Documents.FixedPage" /> が設定されている場合はnull 。</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRoot(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Documents.FixedPage" /> コンテンツ要素を読み込んで返します。</summary>
      <param name="forceReload">
        <see cref="T:System.Windows.Documents.FixedPage" /> が以前に読み込まれ、キャッシュされていても、常に再読み込みする場合は、<see langword="true" />。キャッシュ バージョンが存在しないときにのみ、<see cref="T:System.Windows.Documents.FixedPage" /> を読み込む場合は、<see langword="false" />。</param>
      <returns>このページのビジュアル ツリーのルート要素。</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Documents.FixedPage" /> コンテンツ要素を非同期に読み込んで返します。</summary>
      <param name="forceReload">
        <see cref="T:System.Windows.Documents.FixedPage" /> が以前に読み込まれ、キャッシュされていても、常に再読み込みする場合は、<see langword="true" />。キャッシュ バージョンが存在しないときにのみ、<see cref="T:System.Windows.Documents.FixedPage" /> を読み込む場合は、<see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel">
      <summary>現在進行中の <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> 操作をキャンセルします。</summary>
    </member>
    <member name="E:System.Windows.Documents.PageContent.GetPageRootCompleted">
      <summary>
        <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> の完了時に発生します。</summary>
    </member>
    <member name="P:System.Windows.Documents.PageContent.LinkTargets">
      <summary>ページ上のハイパーリンクアドレス可能な場所を識別する <see cref="T:System.Windows.Documents.LinkTarget" /> 要素のコレクションを取得します。</summary>
      <returns>ページ上のハイパーリンクアドレス可能な場所を識別する <see cref="T:System.Windows.Documents.LinkTargetCollection" /> 要素の <see cref="T:System.Windows.Documents.LinkTarget" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.ShouldSerializeChild(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>この <see cref="P:System.Windows.Documents.PageContent.Child" /> がシリアル化されるときに <see cref="T:System.Windows.Documents.PageContent" /> プロパティの値をシリアル化する必要があるかどうかを示す値を取得します。</summary>
      <param name="manager">シリアル化サービス プロバイダー。</param>
      <returns>
        <paramref name="manager" /> が <see langword="true" /> ではなく、XmlWriter を持っていない場合は <see langword="null" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.PageContent.Source">
      <summary>
        <see cref="T:System.Windows.Documents.FixedPage" /> コンテンツ データ ストリームに対する Uniform Resource Identifier (URI) を取得または設定します。</summary>
      <returns>対応する <see cref="T:System.Uri" /> の <see cref="T:System.Windows.Documents.FixedPage" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.PageContent.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Documents.PageContent.Source" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />」をご覧ください。</summary>
      <param name="value">追加する子 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />」をご覧ください。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Documents.PageContent.System#Windows#Markup#IUriContext#BaseUri">
      <summary>このメンバーの詳細については、「<see cref="P:System.Windows.Markup.IUriContext.BaseUri" />」をご覧ください。</summary>
      <returns>現在のコンテキストのベース URI。</returns>
    </member>
    <member name="T:System.Windows.Documents.PageContentCollection">
      <summary>ドキュメント ページのコレクションをサポートします。</summary>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.Add(System.Windows.Documents.PageContent)">
      <summary>新しいページをページ コレクションに追加します。</summary>
      <param name="newPageContent">コレクションに新しく追加するページ。</param>
      <returns>コレクション内でページが追加された位置の 0 から始まるインデックス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newPageContent" /> が <see langword="null" /> として渡されました。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="newPageContent" /> として渡されたページは、既にコレクションに含まれていました。</exception>
    </member>
    <member name="P:System.Windows.Documents.PageContentCollection.Count">
      <summary>ページ コレクションに格納されている要素の数を取得します。</summary>
      <returns>コレクション内の要素の数。</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.GetEnumerator">
      <summary>ページ コレクションを反復処理する列挙子を返します。</summary>
      <returns>コレクションの反復処理に使用できる列挙子。</returns>
    </member>
    <member name="P:System.Windows.Documents.PageContentCollection.Item(System.Int32)">
      <summary>コレクション内の指定したインデックス位置にある <see cref="T:System.Windows.Documents.PageContent" /> 要素を取得します。</summary>
      <param name="pageIndex">取得するページの 0 から始まるインデックス。</param>
      <returns>コレクション内の指定したインデックス位置にあるページ コンテンツ要素。</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。  代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.PageContentCollection.GetEnumerator" /> メソッドを使用します。</summary>
      <returns>列挙子。</returns>
    </member>
    <member name="T:System.Windows.Documents.Paragraph">
      <summary>コンテンツをグループ化して段落にするために使用される、ブロックレベルのフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Paragraph" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor(System.Windows.Documents.Inline)">
      <summary>指定した <see cref="T:System.Windows.Documents.Paragraph" /> オブジェクトを初期コンテンツとして取得して、<see cref="T:System.Windows.Documents.Inline" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="inline">新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Paragraph" /> オブジェクト。</param>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.Inlines">
      <summary>
        <see cref="T:System.Windows.Documents.Paragraph" /> の内容を構成する最上位レベルの <see cref="T:System.Windows.Documents.Inline" /> 要素を含む <see cref="T:System.Windows.Documents.InlineCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.InlineCollection" /> の内容を構成する <see cref="T:System.Windows.Documents.Inline" /> 要素を含む <see cref="T:System.Windows.Documents.Paragraph" />。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.KeepTogether">
      <summary>段落のテキストをページ区切りまたは段区切りで区切ることができるかを示す値を取得または設定します。</summary>
      <returns>段落のテキストを区切らないようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.KeepTogetherProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Paragraph.KeepTogether" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.KeepWithNext">
      <summary>この段落と次の段落間に区切りを挿入できるかどうかを示す値を取得または設定します。</summary>
      <returns>この段落と次の段落に区切りを挿入できないようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.KeepWithNextProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Paragraph.KeepWithNext" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.MinOrphanLines">
      <summary>
        <see cref="T:System.Windows.Documents.Paragraph" /> がページ区切りまたは段区切りで区切られているときに、区切りの前に残すことができる最小行数を指定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Paragraph" /> がページ区切りまたは段区切りで区切られているときに、区切りの前に残す最小行数を指定する整数。 値 0 は、最小値がないことを示します。
既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.MinOrphanLinesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Paragraph.MinOrphanLines" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.MinWidowLines">
      <summary>
        <see cref="T:System.Windows.Documents.Paragraph" /> がページ区切りまたは段区切りで区切られているときに、区切りの後に置くことができる最小行数を指定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Paragraph" /> がページ区切りまたは段区切りで区切られているときに、区切りの後に置くことができる最小行数を指定する整数。  値 0 は、最小値がないことを示します。
既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.MinWidowLinesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Paragraph.MinWidowLines" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>
        <see cref="P:System.Windows.Documents.Paragraph.Inlines" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <param name="manager">このオブジェクトのシリアル化サービス マネージャー オブジェクト。</param>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.TextDecorations">
      <summary>この要素に適用する文字装飾を格納する <see cref="T:System.Windows.TextDecorationCollection" /> を取得または設定します。</summary>
      <returns>この要素に適用する文字装飾を格納する <see cref="T:System.Windows.TextDecorationCollection" /> コレクション。 <see langword="null" /> 値は、文字装飾が適用されないことを意味します。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.TextDecorationsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Paragraph.TextDecorations" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.TextIndent">
      <summary>
        <see cref="T:System.Windows.Documents.Paragraph" /> の最初の行をどの程度インデントするかを示す値を取得または設定します。</summary>
      <returns>デバイス非依存ピクセルで表される、段落の最初の行をインデントする量を指定する double 型の値。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.TextIndentProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Paragraph.TextIndent" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.Run">
      <summary>書式設定されたか、または書式設定されていない一続きのテキストを格納するための、インライン レベルのフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Run" /> クラスの新しい既定のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor(System.String)">
      <summary>テキスト ランの初期コンテンツとして指定された文字列を受け取って、<see cref="T:System.Windows.Documents.Run" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="text">
        <see cref="T:System.Windows.Documents.Run" /> オブジェクトの初期コンテンツを指定する文字列。</param>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor(System.String,System.Windows.Documents.TextPointer)">
      <summary>テキスト ランの初期コンテンツとして指定された文字列と、テキスト ランの挿入位置を指定する <see cref="T:System.Windows.Documents.Run" /> を受け取って、<see cref="T:System.Windows.Documents.TextPointer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="text">
        <see cref="T:System.Windows.Documents.Run" /> オブジェクトの初期コンテンツを指定する文字列。</param>
      <param name="insertionPosition">テキスト ランの作成後に、このテキスト ランを挿入する挿入位置を指定する <see cref="T:System.Windows.Documents.TextPointer" />。自動挿入を行わない場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Run.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>
        <see cref="P:System.Windows.Documents.Run.Text" /> オブジェクトのシリアル化中に <see cref="T:System.Windows.Documents.Run" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <param name="manager">このオブジェクトのシリアル化サービス マネージャー オブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Run.Text" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Documents.Run.Text">
      <summary>このテキスト <see cref="T:System.Windows.Documents.Run" /> の未フォーマット テキストのコンテンツを取得または設定します。</summary>
      <returns>このテキスト <see cref="T:System.Windows.Documents.Run" /> の未フォーマット テキストのコンテンツを指定する文字列。 既定値は、<see cref="F:System.String.Empty" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Run.TextProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Run.Text" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.Section">
      <summary>その他の <see cref="T:System.Windows.Documents.Block" /> 要素をグループ化するために使用するブロック レベルのフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.Section.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Section" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Section.#ctor(System.Windows.Documents.Block)">
      <summary>指定した <see cref="T:System.Windows.Documents.Section" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Block" /> の初期コンテンツとして受け取って、<see cref="T:System.Windows.Documents.Section" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="block">新しい <see cref="T:System.Windows.Documents.Block" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Section" /> オブジェクト。</param>
    </member>
    <member name="P:System.Windows.Documents.Section.Blocks">
      <summary>
        <see cref="T:System.Windows.Documents.Section" /> の内容を構成する最上位レベルの <see cref="T:System.Windows.Documents.Block" /> 要素を含む <see cref="T:System.Windows.Documents.BlockCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Section" /> の内容を構成する <see cref="T:System.Windows.Documents.Block" /> 要素を含む <see cref="T:System.Windows.Documents.BlockCollection" />。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Documents.Section.HasTrailingParagraphBreakOnPaste">
      <summary>ルート <see cref="T:System.Windows.Documents.Section" /> 要素のコンテンツをクリップボードに配置する場合、末尾の段落区切りを最後の段落の後に挿入する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see langword="true" />後続の段落区切りを含める必要があることを示す場合は。それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="M:System.Windows.Documents.Section.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="manager">このオブジェクトのシリアル化サービス マネージャー オブジェクト。</param>
      <returns>
        <see cref="P:System.Windows.Documents.Section.Blocks" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="T:System.Windows.Documents.Serialization.ISerializerFactory">
      <summary>Windows Presentation Foundation (WPF) アプリケーションのコンテンツの任意の部分を製造元の専用の形式にシリアル化できるソフトウェア コンポーネントを作成するための手段を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter(System.IO.Stream)">
      <summary>指定した <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> の <see cref="T:System.IO.Stream" /> 抽象クラスから派生したオブジェクトを初期化します。</summary>
      <param name="stream">返されるオブジェクトの書き込み先となる <see cref="T:System.IO.Stream" />。</param>
      <returns>
        <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> から派生したクラスのオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.DefaultFileExtension">
      <summary>製造元の専用形式の既定のファイル拡張子を取得します。</summary>
      <returns>専用形式の既定のファイル拡張子を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.DisplayName">
      <summary>製造元のシリアル化コンポーネントのパブリック名を取得します。</summary>
      <returns>シリアル化コンポーネントのパブリック名を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.ManufacturerName">
      <summary>シリアル化コンポーネントの製造元の名前を取得します。</summary>
      <returns>製造元の名前を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.ManufacturerWebsite">
      <summary>シリアル化コンポーネントの製造元の Web アドレスを取得します。</summary>
      <returns>製造元の Web サイトを表す <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerDescriptor">
      <summary>インストールされているプラグイン シリアライザーに関する情報を提供します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName">
      <summary>シリアライザーを格納するアセンブリの名前を取得します。</summary>
      <returns>プラグイン シリアライザーを格納するアセンブリ (通常は DLL) の名前。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath">
      <summary>シリアライザーを格納するアセンブリ ファイルへのパスを取得します。</summary>
      <returns>プラグイン シリアライザーを格納するアセンブリ ファイルへのパス。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion">
      <summary>シリアライザーを格納するアセンブリのバージョンを取得します。</summary>
      <returns>プラグイン シリアライザーを格納するアセンブリのバージョン。</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(System.Windows.Documents.Serialization.ISerializerFactory)">
      <summary>指定された <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 実装を介して新しい <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> を作成します。</summary>
      <param name="factoryInstance">新しい <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> のデータ ソース。</param>
      <returns>指定された <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 実装の値でプロパティが初期化された新しい <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="factoryInstance" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="factoryInstance" /> の <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName" />、<see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName" />、<see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite" />、および <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension" /> プロパティのうち、1 つ以上が null です。</exception>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension">
      <summary>シリアライザーが出力するファイルに関連付けられている既定の拡張子を取得します。</summary>
      <returns>シリアライザーが出力するファイルに関連付けられている既定の拡張子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName">
      <summary>シリアライザーのパブリック表示名を取得します。</summary>
      <returns>シリアライザーのパブリック表示名。</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.Equals(System.Object)">
      <summary>2 つの <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> オブジェクトが等しいかどうかをテストします。</summary>
      <param name="obj">この <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> と比較されるオブジェクト。</param>
      <returns>2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName">
      <summary>シリアライザーを実装する <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> 派生クラスの名前を取得します。</summary>
      <returns>シリアライザーを実装する <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> 派生クラスの名前。</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode">
      <summary>シリアライザーの一意のハッシュ コード値を取得します。</summary>
      <returns>シリアライザーの一意のハッシュ コード値。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable">
      <summary>現在インストールされているバージョンの .NET Framework でシリアライザーを読み込むことができるかどうかを示す値を取得します。</summary>
      <returns>シリアライザー アセンブリを読み込むことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。  既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName">
      <summary>シリアライザーを開発した会社名を取得します。</summary>
      <returns>プラグイン シリアライザーを開発した会社名。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite">
      <summary>シリアライザーを開発した会社の Web アドレスを取得します。</summary>
      <returns>シリアライザーを開発した会社の Web アドレス。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion">
      <summary>シリアライザーに必要な .NET Framework のバージョンを取得します。</summary>
      <returns>プラグインシリアライザーに必要な .NET Framework のバージョン。</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerProvider">
      <summary>専用のシリアル化形式を持つ製造元が作成したシリアル化プラグインを、<see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> および <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> を使用して管理します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Serialization.SerializerProvider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter(System.Windows.Documents.Serialization.SerializerDescriptor,System.IO.Stream)">
      <summary>指定した記述子を使用する指定した <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> の <see cref="T:System.IO.Stream" /> 抽象クラスから派生したオブジェクトを初期化します。</summary>
      <param name="serializerDescriptor">
        <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> に関するシリアル化情報を格納する <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />。</param>
      <param name="stream">返されるオブジェクトの書き込み先となる <see cref="T:System.IO.Stream" />。</param>
      <returns>
        <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> から派生したクラスのオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">いずれかのパラメーターが null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serializerDescriptor" /> で指定されているバージョンが不正です。

または -
バージョンが登録されていません。

または -
アセンブリ ファイルが見つかりません。


または
アセンブリを読み込めません。</exception>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerProvider.InstalledSerializers">
      <summary>インストールされているプラグイン シリアライザーのコレクションを取得します。</summary>
      <returns>既に登録されている <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> オブジェクトの <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.RegisterSerializer(System.Windows.Documents.Serialization.SerializerDescriptor,System.Boolean)">
      <summary>シリアライザー プラグインを登録します。</summary>
      <param name="serializerDescriptor">プラグインの <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />。</param>
      <param name="overwrite">同じプラグインの既存の登録を上書きする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializerDescriptor" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="overwrite" /> が <see langword="false" /> で、プラグインが既に登録されています。</exception>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.UnregisterSerializer(System.Windows.Documents.Serialization.SerializerDescriptor)">
      <summary>レジストリからシリアライザー プラグインを削除します。</summary>
      <param name="serializerDescriptor">プラグインの <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializerDescriptor" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">プラグインが登録されていません。 「解説」を参照してください。</exception>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerWriter">
      <summary>プラグイン ドキュメント出力シリアライザーの実装に必要な抽象メソッドおよびイベントを定義します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync">
      <summary>派生クラスでオーバーライドされると、非同期書き込み操作をキャンセルします。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator">
      <summary>派生クラスでオーバーライドされると、部単位で印刷する <see cref="T:System.Windows.Media.Visual" /> 要素を書き込む <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> を返します。</summary>
      <returns>部単位で印刷する <see cref="T:System.Windows.Media.Visual" /> 要素をドキュメント出力のシリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされると、部単位で印刷する <see cref="T:System.Windows.Media.Visual" /> 要素および指定の印刷チケットを書き込む <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> を返します。</summary>
      <param name="documentSequencePT">
        <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> コンテンツの既定の印刷設定。</param>
      <param name="documentPT">
        <see cref="T:System.Windows.Documents.FixedDocument" /> コンテンツの既定の印刷設定。</param>
      <returns>部単位で印刷する <see cref="T:System.Windows.Media.Visual" /> 要素をドキュメント出力のシリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)">
      <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.DocumentPaginator" /> のコンテンツをシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
      <param name="documentPaginator">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント ページネータ。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされると、改ページ調整されたコンテンツを関連付けられた <see cref="T:System.Printing.PrintTicket" /> と共にシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
      <param name="documentPaginator">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント ページネータ。</param>
      <param name="printTicket">
        <paramref name="documentPaginator" /> コンテンツの既定の印刷設定。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)">
      <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedDocument" /> をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
      <param name="fixedDocument">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むドキュメント。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.FixedDocument" /> および関連する <see cref="T:System.Printing.PrintTicket" /> をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
      <param name="fixedDocument">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むドキュメント。</param>
      <param name="printTicket">
        <paramref name="fixedDocument" /> コンテンツの既定の印刷設定。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)">
      <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
      <param name="fixedDocumentSequence">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント シーケンス。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> および関連する <see cref="T:System.Printing.PrintTicket" /> をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
      <param name="fixedDocumentSequence">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント シーケンス。</param>
      <param name="printTicket">
        <paramref name="fixedDocumentSequence" /> コンテンツの既定の印刷設定。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)">
      <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedPage" /> をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
      <param name="fixedPage">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むためのページ。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.FixedPage" /> および関連する <see cref="T:System.Printing.PrintTicket" /> をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
      <param name="fixedPage">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むためのページ。</param>
      <param name="printTicket">
        <paramref name="fixedPage" /> コンテンツの既定の印刷設定。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)">
      <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Media.Visual" /> 要素をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
      <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Media.Visual" /> 要素。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされるときに、<see cref="T:System.Windows.Media.Visual" /> 要素を、関連した所定の <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
      <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Media.Visual" /> 要素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 要素の既定の印刷設定。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)">
      <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.DocumentPaginator" /> のコンテンツをシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
      <param name="documentPaginator">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント ページネータ。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)">
      <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.DocumentPaginator" /> のコンテンツをシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
      <param name="documentPaginator">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント ページネータ。</param>
      <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.DocumentPaginator" /> のコンテンツをシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
      <param name="documentPaginator">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント ページネータ。</param>
      <param name="printTicket">
        <paramref name="documentPaginator" /> コンテンツの既定の印刷設定。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)">
      <summary>派生クラスでオーバーライドされると、改ページ位置が自動修正されたコンテンツおよび関連する <see cref="T:System.Printing.PrintTicket" /> を共にシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
      <param name="documentPaginator">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント ページネータ。</param>
      <param name="printTicket">
        <paramref name="documentPaginator" /> コンテンツの既定の印刷設定。</param>
      <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)">
      <summary>派生クラスでオーバーライドされたときに、指定された <see cref="T:System.Windows.Documents.FixedDocument" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
      <param name="fixedDocument">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むドキュメント。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)">
      <summary>派生クラスでオーバーライドされたときに、指定された <see cref="T:System.Windows.Documents.FixedDocument" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
      <param name="fixedDocument">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むドキュメント。</param>
      <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedDocument" /> を関連した <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
      <param name="fixedDocument">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むドキュメント。</param>
      <param name="printTicket">
        <paramref name="fixedDocument" /> コンテンツの既定の印刷設定。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)">
      <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedDocument" /> を関連した <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
      <param name="fixedDocument">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むドキュメント。</param>
      <param name="printTicket">
        <paramref name="fixedDocument" /> コンテンツの既定の印刷設定。</param>
      <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)">
      <summary>派生クラスでオーバーライドされたときに、指定された <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
      <param name="fixedDocumentSequence">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント シーケンス。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)">
      <summary>派生クラスでオーバーライドされたときに、指定された <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
      <param name="fixedDocumentSequence">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント シーケンス。</param>
      <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> を関連した <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
      <param name="fixedDocumentSequence">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント シーケンス。</param>
      <param name="printTicket">
        <paramref name="fixedDocumentSequence" /> コンテンツの既定の印刷設定。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)">
      <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> を関連した <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
      <param name="fixedDocumentSequence">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント シーケンス。</param>
      <param name="printTicket">
        <paramref name="fixedDocumentSequence" /> コンテンツの既定の印刷設定。</param>
      <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)">
      <summary>派生クラスでオーバーライドされたときに、指定された <see cref="T:System.Windows.Documents.FixedPage" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
      <param name="fixedPage">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むためのページ。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)">
      <summary>派生クラスでオーバーライドされたときに、指定された <see cref="T:System.Windows.Documents.FixedPage" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
      <param name="fixedPage">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むためのページ。</param>
      <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedPage" /> を関連した <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
      <param name="fixedPage">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むためのページ。</param>
      <param name="printTicket">
        <paramref name="fixedPage" /> コンテンツの既定の印刷設定。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)">
      <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedPage" /> を関連した <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
      <param name="fixedPage">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むためのページ。</param>
      <param name="printTicket">
        <paramref name="fixedPage" /> コンテンツの既定の印刷設定。</param>
      <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)">
      <summary>派生クラスでオーバーライドされたときに、指定された <see cref="T:System.Windows.Media.Visual" /> 要素をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
      <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Media.Visual" /> 要素。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)">
      <summary>派生クラスでオーバーライドされたときに、指定された <see cref="T:System.Windows.Media.Visual" /> 要素をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
      <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Media.Visual" /> 要素。</param>
      <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされると、<see cref="T:System.Printing.PrintTicket" /> に関連付けられている指定された <see cref="T:System.Windows.Media.Visual" /> 要素をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
      <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Media.Visual" /> 要素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 要素の既定の印刷設定。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
      <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Media.Visual" /> 要素および関連する <see cref="T:System.Printing.PrintTicket" /> と識別子をシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
      <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Media.Visual" /> 要素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 要素の既定の印刷設定。</param>
      <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" /> 操作の実行時に発生します。</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted">
      <summary>派生クラスでオーバーライドされると、書き込み操作の終了時に発生します。</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired">
      <summary>派生クラスでオーバーライドされると、<see cref="T:System.Printing.PrintTicket" /> が <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write" /> または <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> メソッドによってストリームに追加される直前に発生します。</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged">
      <summary>派生クラスでオーバーライドされると、<see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> がその進行状況を更新したときに発生します。</summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerWriterCollator">
      <summary>プラグイン ドキュメント シリアル化 <see cref="T:System.Windows.Media.Visual" /> Collator の実装に必要な抽象メソッドを定義します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.BeginBatchWrite">
      <summary>派生クラスでオーバーライドされると、バッチ書き込み操作を開始します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel">
      <summary>派生クラスでオーバーライドされるとき、同期する <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" /> 操作をキャンセルします。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync">
      <summary>派生クラスでオーバーライドされるとき、非同期の <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" /> 操作をキャンセルします。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.EndBatchWrite">
      <summary>派生クラスでオーバーライドされると、バッチ書き込み操作を完了します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual)">
      <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Media.Visual" /> 要素をシリアル化ストリームに同期的に書き込みます。</summary>
      <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むビジュアル要素。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされた場合、指定された <see cref="T:System.Windows.Media.Visual" /> 要素を、関連付けられた印刷チケットと一緒にシリアル化ストリームに同期的に書き込みます。</summary>
      <param name="visual">ストリームに書き込む <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="printTicket">素材の印刷方法に関するユーザー設定を指定するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual)">
      <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Media.Visual" /> 要素をシリアル化ストリームに非同期的に書き込みます。</summary>
      <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むビジュアル要素。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Object)">
      <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Media.Visual" /> 要素および指定されたイベント識別子をシリアル化ストリームに非同期的に書き込みます。</summary>
      <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むビジュアル要素。</param>
      <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>派生クラスでオーバーライドされた場合は、指定された <see cref="T:System.Windows.Media.Visual" /> 要素を関連する印刷チケットと一緒にシリアル化ストリームに非同期的に書き込みます。</summary>
      <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むビジュアル要素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 要素の既定の印刷設定。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
      <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Media.Visual" /> 要素および関連する印刷チケットと識別子を、シリアル化ストリームに非同期で書き込みます。</summary>
      <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むビジュアル要素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 要素の既定の印刷設定。</param>
      <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCancelledEventArgs">
      <summary>
        <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingCancelledEventArgs.#ctor(System.Exception)">
      <summary>
        <see cref="T:System.Windows.Documents.Serialization.WritingCancelledEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="exception">書き込み操作をキャンセルした例外。</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingCancelledEventArgs.Error">
      <summary>書き込み操作をキャンセルした例外を取得します。</summary>
      <returns>書き込み操作をキャンセルした例外。</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCancelledEventHandler">
      <summary>
        <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs">
      <summary>
        <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingCompletedEventArgs.#ctor(System.Boolean,System.Object,System.Exception)">
      <summary>
        <see cref="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cancelled">キャンセルされた場合は <see langword="true" />。書き込み操作が正常に完了した場合は <see langword="false" />。</param>
      <param name="state">
        <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> メソッドに渡されたユーザー指定の状態オブジェクト。</param>
      <param name="exception">書き込み操作中に発生したエラー。エラーが存在しない場合は <see langword="null" />。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCompletedEventHandler">
      <summary>
        <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted" /> クラスの <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs">
      <summary>
        <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.#ctor(System.Windows.Xps.Serialization.PrintTicketLevel,System.Int32)">
      <summary>
        <see cref="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="printTicketLevel">
        <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" /> のスコープを単一ページ、単一ドキュメント、またはドキュメントのシーケンスとして指定する列挙値。</param>
      <param name="sequence">
        <paramref name="printTicketLevel" /> で定義されたスコープに基づく、<see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" /> に関連付けられたページ数またはドキュメント数。</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket">
      <summary>ドキュメントの印刷時に使用する既定のプリンター設定を取得または設定します。</summary>
      <returns>ドキュメントの印刷時に使用する既定のプリンター設定。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicketLevel">
      <summary>
        <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> イベントのスコープを示す値を取得します。</summary>
      <returns>
        <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> イベントのスコープをドキュメントのシーケンス、単一ドキュメント、または単一ページとして示す列挙体。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.Sequence">
      <summary>
        <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" /> で出力されるドキュメントまたはページの数を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" /> で出力されるドキュメントまたはページの数。</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler">
      <summary>
        <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired" /> の <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.#ctor(System.Windows.Documents.Serialization.WritingProgressChangeLevel,System.Int32,System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="writingLevel">複数ドキュメント シーケンス全体、単一ドキュメント、単一ページなどの進行状況変更イベントのスコープを指定する列挙値。</param>
      <param name="number">
        <paramref name="writingLevel" /> によって定義された範囲に基づく、書き込まれたドキュメントの数またはページの数。</param>
      <param name="progressPercentage">書き込まれたデータの割合。</param>
      <param name="state">書き込み操作を識別するユーザー指定のオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.Number">
      <summary>書き込まれたドキュメントまたはページの数を取得します。</summary>
      <returns>イベント発生時に書き込まれたドキュメントまたはページの数。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.WritingLevel">
      <summary>書き込みの進行状況のスコープを示す値を取得します。</summary>
      <returns>複数ドキュメント シーケンス、単一ドキュメント、または単一ページの書き込みのスコープを示す列挙体。</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangedEventHandler">
      <summary>
        <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged" /> の <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangeLevel">
      <summary>
        <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" /> イベントのスコープを指定します。</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedDocumentSequenceWritingProgress">
      <summary>複数ドキュメント シーケンスの出力進行状況。</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedDocumentWritingProgress">
      <summary>単一ドキュメントの出力進行状況。</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedPageWritingProgress">
      <summary>単一ページの出力進行状況。</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.None">
      <summary>出力進行状況は指定されていません。</summary>
    </member>
    <member name="T:System.Windows.Documents.Span">
      <summary>その他の <see cref="T:System.Windows.Documents.Inline" /> フロー コンテンツ要素をグループ化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Span" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline)">
      <summary>指定した <see cref="T:System.Windows.Documents.Span" /> オブジェクトを初期コンテンツとして使用して、<see cref="T:System.Windows.Documents.Inline" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childInline">新しい <see cref="T:System.Windows.Documents.Span" /> の初期コンテンツ。</param>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>新しい <see cref="T:System.Windows.Documents.Span" /> の初期コンテンツとして指定された <see cref="T:System.Windows.Documents.Inline" /> オブジェクトと、新しい <see cref="T:System.Windows.Documents.Span" /> 要素の挿入位置を指定する <see cref="T:System.Windows.Documents.TextPointer" /> を受け取って、<see cref="T:System.Windows.Documents.Inline" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childInline">新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Span" /> オブジェクト。 このパラメーターは、null でもかまいません。その場合、<see cref="T:System.Windows.Documents.Inline" /> は挿入されません。</param>
      <param name="insertionPosition">
        <see cref="T:System.Windows.Documents.TextPointer" /> 要素の作成後に、この要素を挿入する挿入位置を指定する <see cref="T:System.Windows.Documents.Span" />。自動挿入を行わない場合は null。</param>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>新しい <see cref="T:System.Windows.Documents.Span" /> が格納するコンテンツの選択範囲の先頭と末尾を示す 2 つの <see cref="T:System.Windows.Documents.TextPointer" /> オブジェクトを受け取って、<see cref="T:System.Windows.Documents.Span" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="start">新しい <see cref="T:System.Windows.Documents.TextPointer" /> が格納するコンテンツの選択範囲の先頭を示す <see cref="T:System.Windows.Documents.Span" />。</param>
      <param name="end">新しい <see cref="T:System.Windows.Documents.TextPointer" /> が格納するコンテンツの選択範囲の末尾を示す <see cref="T:System.Windows.Documents.Span" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> または <paramref name="end" /> が null の場合に発生します。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> と <paramref name="end" /> が、<see cref="T:System.Windows.Documents.Span" /> 要素によって囲まれた部分に適合するコンテンツの範囲に解決されない場合に発生します。たとえば、<paramref name="start" /> と <paramref name="end" /> が別々のパラグラフ内の位置を示している場合などです。</exception>
    </member>
    <member name="P:System.Windows.Documents.Span.Inlines">
      <summary>
        <see cref="T:System.Windows.Documents.Span" /> の内容を構成する最上位レベルの <see cref="T:System.Windows.Documents.Inline" /> 要素を含む <see cref="T:System.Windows.Documents.InlineCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.InlineCollection" /> の内容を構成する <see cref="T:System.Windows.Documents.Inline" /> 要素を含む <see cref="T:System.Windows.Documents.Span" />。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Documents.Span.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>
        <see cref="T:System.Windows.Documents.Span" /> オブジェクトのシリアル化中に、<see cref="T:System.Windows.Documents.Run" /> 要素のコンテンツをシリアル化する必要があるかどうかを示す値を返します。</summary>
      <param name="manager">このオブジェクトのシリアル化サービス マネージャー オブジェクト。</param>
      <returns>コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> が null です。</exception>
    </member>
    <member name="T:System.Windows.Documents.Table">
      <summary>行と列に整理されたグリッド ベースのプレゼンテーションを提供する、ブロック レベルのフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.Table.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Table" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Table.BeginInit">
      <summary>要素が初期化される前に呼び出されます。</summary>
    </member>
    <member name="P:System.Windows.Documents.Table.CellSpacing">
      <summary>テーブル内のセルの間隔を取得または設定します。</summary>
      <returns>デバイス非依存のピクセル単位でのテーブル内のセルの間隔。
既定値は 2.0です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Table.CellSpacingProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Table.CellSpacing" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Table.Columns">
      <summary>テーブルによってホストされている列を含む <see cref="T:System.Windows.Documents.TableColumnCollection" /> オブジェクトを取得します。</summary>
      <returns>テーブルによってホストされている (<see cref="T:System.Windows.Documents.TableColumn" /> オブジェクトによって表される) 列を含む <see cref="T:System.Windows.Documents.TableColumnCollection" /> オブジェクト。 この数字はテーブルにレンダリングされる列の実際の数ではない場合があることにご注意ください。 実際にレンダリングされる列の数を決定するテーブル内の <see cref="T:System.Windows.Documents.TableCell" /> オブジェクトです。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.EndInit">
      <summary>要素が初期化された直後に呼び出されます。</summary>
    </member>
    <member name="P:System.Windows.Documents.Table.LogicalChildren">
      <summary>
        <see cref="T:System.Windows.Documents.Table" /> の論理的な子の反復処理に使用できる列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Table" /> の論理的な子の列挙子。</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Documents.Table" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Documents.Table" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Documents.Table.RowGroups">
      <summary>テーブルによってホストされる行グループを格納する、<see cref="T:System.Windows.Documents.TableRowGroupCollection" /> コレクション オブジェクトを取得します。</summary>
      <returns>テーブルによってホストされる行グループ (<see cref="T:System.Windows.Documents.TableRowGroup" /> オブジェクトによって表される) を格納する <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> オブジェクト。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.ShouldSerializeColumns">
      <summary>
        <see cref="P:System.Windows.Documents.Table.Columns" /> オブジェクトのシリアル化中に <see cref="T:System.Windows.Documents.Table" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Table.Columns" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Table.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Documents.TableCell">
      <summary>
        <see cref="T:System.Windows.Documents.Table" /> 内のコンテンツのセルを定義するフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCell.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.TableCell" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCell.#ctor(System.Windows.Documents.Block)">
      <summary>指定した <see cref="T:System.Windows.Documents.TableCell" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Block" /> の初期コンテンツとして受け取って、<see cref="T:System.Windows.Documents.TableCell" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="blockItem">新しい <see cref="T:System.Windows.Documents.Block" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.TableCell" /> オブジェクト。</param>
    </member>
    <member name="P:System.Windows.Documents.TableCell.Blocks">
      <summary>
        <see cref="T:System.Windows.Documents.TableCell" /> の内容を構成する最上位レベルの <see cref="T:System.Windows.Documents.Block" /> 要素を含む <see cref="T:System.Windows.Documents.BlockCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TableCell" /> の内容を構成する <see cref="T:System.Windows.Documents.Block" /> 要素を含む <see cref="T:System.Windows.Documents.BlockCollection" />。
このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.BorderBrush">
      <summary>要素の境界線を描画するときに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>要素の境界線に適用するために使用するブラシ。
既定値はnullブラシです。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.BorderBrushProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TableCell.BorderBrush" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.BorderThickness">
      <summary>要素の境界線の太さを取得または設定します。</summary>
      <returns>適用する境界線の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。
既定値は 0 (0.0) の均一の太さです。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.BorderThicknessProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TableCell.BorderThickness" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.ColumnSpan">
      <summary>
        <see cref="T:System.Windows.Documents.TableCell" /> が複数の列にまたがって表示される場合の列数を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TableCell" /> が複数の列にまたがって表示される場合の列数。
既定値は1 (スパニングなし) です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.ColumnSpanProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TableCell.ColumnSpan" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.FlowDirection">
      <summary>
        <see cref="T:System.Windows.Documents.TableCell" /> 要素内のコンテンツのフローの相対的な方向を指定する値を取得または設定します。</summary>
      <returns>相対的なフロー方向を指定する <see cref="T:System.Windows.FlowDirection" /> 列挙体のメンバー。  このプロパティを取得すると、現在有効なフロー方向が返されます。  このプロパティを設定すると、<see cref="T:System.Windows.Documents.TableCell" /> 要素のコンテンツが指定した方向に再フローされます。
既定値は <see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.FlowDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TableCell.FlowDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.LineHeight">
      <summary>各コンテンツ行の高さを取得または設定します。</summary>
      <returns>デバイスに依存しないピクセルで行の高さを指定する double 値。  <see cref="P:System.Windows.Documents.TableCell.LineHeight" /><c>0.0034</c>以上かつ<c>16万</c>以下である必要があります。
値 (属性<see cref="F:System.Double.NaN" />値 "<c>Auto</c>" に相当) を指定すると、現在のフォント特性を基に行の高さが自動的に決定されます。
既定値は <see cref="F:System.Double.NaN" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> を正でない値に設定しようとすると発生します。</exception>
    </member>
    <member name="F:System.Windows.Documents.TableCell.LineHeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TableCell.LineHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.LineStackingStrategy">
      <summary>
        <see cref="T:System.Windows.Documents.TableCell" /> 内のテキストの行ごとに行ボックスを決定するメカニズムを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TableCell" /> 内のテキストの行ごとに行ボックスを決定するメカニズム。 既定値は <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.LineStackingStrategyProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TableCell.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCell.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Documents.TableCell" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Documents.TableCell" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.Padding">
      <summary>要素のパディングの厚みを取得または設定します。</summary>
      <returns>適用するパディングの量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。
既定値は 0 (0.0) の均一の太さです。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.PaddingProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TableCell.Padding" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.RowSpan">
      <summary>
        <see cref="T:System.Windows.Documents.TableCell" /> が複数の行にまたがって表示される場合の行数を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TableCell" /> が複数の行にまたがって表示される場合の行数。
既定値は1 (スパニングなし) です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.RowSpanProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TableCell.RowSpan" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableCell.TextAlignment">
      <summary>テキスト コンテンツの水平方向の配置を示す値を取得または設定します。</summary>
      <returns>目的の配置を指定する <see cref="T:System.Windows.TextAlignment" /> 列挙体のメンバー。
既定値は <see cref="F:System.Windows.TextAlignment.Left" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.TextAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TableCell.TextAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableCellCollection">
      <summary>
        <see cref="T:System.Windows.Documents.TableCell" /> オブジェクトのタイプ セーフな順序付けられたコレクションを作成し管理する標準的な機能を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Add(System.Windows.Documents.TableCell)">
      <summary>指定された <see cref="T:System.Windows.Documents.TableCell" /> をテーブル セルのコレクションに追加します。</summary>
      <param name="item">テーブル セルのコレクションに追加する <see cref="T:System.Windows.Documents.TableCell" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> が既にコレクションに属している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> が null の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Capacity">
      <summary>このコレクションの事前に割り当てられたコレクション項目の容量を取得または設定します。</summary>
      <returns>このコレクションの、事前に割り当てられたコレクション項目の容量。 既定値は8です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> を <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> の現在の値よりも小さい値に設定しようとしたときに発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Contains(System.Windows.Documents.TableCell)">
      <summary>コレクション内に指定した項目が存在するかどうかを照会します。</summary>
      <param name="item">コレクション内に存在するかどうかを照会する対象となる項目。</param>
      <returns>指定した <paramref name="item" /> がこのコレクションに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.CopyTo(System.Array,System.Int32)">
      <summary>コレクションの内容をコピーして、指定された配列の指定されたインデックス位置から挿入します。</summary>
      <param name="array">コレクションの内容のコピー先となる 1 次元配列。 この配列では、0 から始まるインデックスを使用する必要があります。</param>
      <param name="index">コピーしたコレクション オブジェクトの挿入を開始する位置を指定する <paramref name="array" /> 内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> に <see cref="T:System.Windows.Documents.TableCell" /> 型と互換性のない項目が含まれている場合、または <paramref name="index" /> が <paramref name="array" /> の範囲外にある位置を指定している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が null の場合に発生します。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.CopyTo(System.Windows.Documents.TableCell[],System.Int32)">
      <summary>コレクションの内容をコピーして、指定された <see cref="T:System.Windows.Documents.TableCell" /> 配列の指定されたインデックス位置から挿入します。</summary>
      <param name="array">コレクションの内容のコピー先となる <see cref="T:System.Windows.Documents.TableCell" /> の 1 次元配列。 この配列では、0 から始まるインデックスを使用する必要があります。</param>
      <param name="index">コピーしたコレクション オブジェクトの挿入を開始する位置を指定する <paramref name="array" /> 内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> に <see cref="T:System.Windows.Documents.TableCell" /> 型と互換性のない項目が含まれている場合、または <paramref name="index" /> が <paramref name="array" /> の範囲外にある位置を指定している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が null の場合に発生します。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Count">
      <summary>コレクションに現在含まれている項目数を取得します。</summary>
      <returns>コレクションに現在含まれている項目数。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.IndexOf(System.Windows.Documents.TableCell)">
      <summary>指定したコレクション項目の 0 から始まるインデックスを返します。</summary>
      <param name="item">インデックスを返す対象となるコレクション項目。</param>
      <returns>指定したコレクション項目の 0 から始まるインデックス。指定した項目がコレクションのメンバーでない場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)">
      <summary>コレクション内の指定したインデックス位置に、指定した項目を挿入します。</summary>
      <param name="index">コレクション内で <paramref name="item" /> を挿入する位置を指定する 0 から始まるインデックス。</param>
      <param name="item">コレクションに挿入する項目。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満の場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> が null の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.IsReadOnly">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>現在、このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.IsSynchronized">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>現在、このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にあるコレクション項目を取得または設定します。 これは、インデックス付きプロパティです。</summary>
      <param name="index">コレクション項目の位置を指定する 0 から始まるインデックス。</param>
      <returns>指定したインデックス位置にあるコレクション項目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満の場合、または <paramref name="index" /> が <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> 以上の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)">
      <summary>指定した項目をコレクションから削除します。</summary>
      <param name="item">コレクションから削除する項目。</param>
      <returns>指定した項目が見つかり、削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">コレクションに <paramref name="item" /> が存在しない場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> が null の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)">
      <summary>インデックスで指定した項目をコレクションから削除します。</summary>
      <param name="index">削除するコレクション項目を指定する、0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満の場合、または <paramref name="index" /> が <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> 以上の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>先頭のインデックスおよびカウントで指定された項目の範囲をコレクションから削除します。</summary>
      <param name="index">削除する項目の範囲の先頭を示す 0 から始まるインデックス。</param>
      <param name="count">
        <paramref name="index" /> で指定した位置から数えた削除する項目の数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> または <paramref name="count" /> が 0 未満の場合、あるいは <paramref name="index" /> が <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> 以上の場合に発生します。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> および <paramref name="count" /> が、このコレクション内の有効な範囲を指定していない場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.SyncRoot">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コレクションへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableCell}#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Add(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Add(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Object" /> に追加する <see cref="T:System.Windows.Documents.TableCellCollection" />。</param>
      <returns>新しい要素が挿入された位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Clear" />」をご覧ください。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Contains(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Windows.Documents.TableCellCollection" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>
        <see cref="T:System.Object" /> が <see cref="T:System.Windows.Documents.TableCellCollection" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.IndexOf(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Windows.Documents.TableCellCollection" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> のトピックを参照してください。</summary>
      <param name="index">
        <see cref="T:System.Object" /> を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">
        <see cref="T:System.Windows.Documents.TableCellCollection" /> に挿入する <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsFixedSize" />」をご覧ください。</summary>
      <returns>
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Windows.Documents.TableCellCollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.IList.IsReadOnly" /> のトピックを参照してください。</summary>
      <returns>
        <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Windows.Documents.TableCellCollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#Item(System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IList.Item(System.Int32)" />」をご覧ください。</summary>
      <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns>指定したインデックス位置にある要素。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Remove(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Object" /> から削除する <see cref="T:System.Windows.Documents.TableCellCollection" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />」をご覧ください。</summary>
      <param name="index">削除する項目の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.TrimToSize">
      <summary>基になるコレクションの <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> を、現在コレクション内に存在する項目の <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> と同じに設定することでコレクションのメモリ消費を最適化します。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableColumn">
      <summary>
        <see cref="T:System.Windows.Documents.Table" /> 内の列を定義するフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumn.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.TableColumn" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableColumn.Background">
      <summary>
        <see cref="T:System.Windows.Media.Brush" /> のコンテンツの塗りつぶしに使用する背景 <see cref="T:System.Windows.Documents.TableColumn" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" /> のコンテンツの塗りつぶしに使用する背景 <see cref="T:System.Windows.Documents.TableColumn" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableColumn.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TableColumn.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableColumn.Width">
      <summary>
        <see cref="T:System.Windows.Documents.TableColumn" /> 要素の幅を取得または設定します。 <see cref="P:System.Windows.Documents.TableColumn.Width" /> プロパティは、<see cref="T:System.Windows.Documents.TableColumn" /> のコンテンツ、スペース、および境界線の端から端までの合計を測定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TableColumn" /> 要素の <see cref="T:System.Windows.GridLength" /> としての幅。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableColumn.WidthProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TableColumn.Width" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableColumnCollection">
      <summary>
        <see cref="T:System.Windows.Documents.TableColumn" /> オブジェクトのタイプ セーフな順序付けられたコレクションを作成し管理する標準的な機能を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Add(System.Windows.Documents.TableColumn)">
      <summary>指定した項目をコレクションに追加します。</summary>
      <param name="item">列のコレクションに追加するテーブル列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> が既にコレクションに属している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Capacity">
      <summary>このコレクションの事前に割り当てられたコレクション項目の容量を取得または設定します。</summary>
      <returns>このコレクションの、事前に割り当てられたコレクション項目の容量。 既定値は8です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> を <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> の現在の値よりも小さい値に設定しようとしたときに発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Contains(System.Windows.Documents.TableColumn)">
      <summary>コレクション内に指定した項目が存在するかどうかを照会します。</summary>
      <param name="item">コレクション内に存在するかどうかを照会する対象となる項目。</param>
      <returns>指定した <paramref name="item" /> がこのコレクションに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.CopyTo(System.Array,System.Int32)">
      <summary>コレクションの内容をコピーして、指定された配列の指定されたインデックス位置から挿入します。</summary>
      <param name="array">コレクションの内容のコピー先となる 1 次元配列。  この配列では、0 から始まるインデックスを使用する必要があります。</param>
      <param name="index">コピーしたコレクション オブジェクトの挿入を開始する位置を指定する <paramref name="array" /> 内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> に <see cref="T:System.Windows.Documents.TableColumn" /> 型と互換性のない項目が含まれている場合、または <paramref name="index" /> が <paramref name="array" /> の範囲外にある位置を指定している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" /> の場合に発生します。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.CopyTo(System.Windows.Documents.TableColumn[],System.Int32)">
      <summary>コレクションの内容をコピーして、指定された <see cref="T:System.Windows.Documents.TableColumn" /> 配列の指定されたインデックス位置から挿入します。</summary>
      <param name="array">コレクションの内容のコピー先となる <see cref="T:System.Windows.Documents.TableColumn" /> の 1 次元配列。  この配列では、0 から始まるインデックスを使用する必要があります。</param>
      <param name="index">コピーしたコレクション オブジェクトの挿入を開始する位置を指定する <paramref name="array" /> 内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> に <see cref="T:System.Windows.Documents.TableColumn" /> 型と互換性のない項目が含まれている場合、または <paramref name="index" /> が <paramref name="array" /> の範囲外にある位置を指定している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" /> の場合に発生します。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Count">
      <summary>コレクションに現在含まれている項目数を取得します。</summary>
      <returns>コレクションに現在含まれている項目数。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.IndexOf(System.Windows.Documents.TableColumn)">
      <summary>指定したコレクション項目の 0 から始まるインデックスを返します。</summary>
      <param name="item">インデックスを返す対象となるコレクション項目。</param>
      <returns>指定したコレクション項目の 0 から始まるインデックス。指定した項目がコレクションのメンバーでない場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Insert(System.Int32,System.Windows.Documents.TableColumn)">
      <summary>コレクション内の指定したインデックス位置に、指定した項目を挿入します。</summary>
      <param name="index">コレクション内で <paramref name="item" /> を挿入する位置を指定する 0 から始まるインデックス。</param>
      <param name="item">コレクションに挿入する項目。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満の場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.IsReadOnly">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>現在、このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.IsSynchronized">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>現在、このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にあるコレクション項目を取得します。  これは、インデックス付きプロパティです。</summary>
      <param name="index">削除するコレクション項目の位置を指定する 0 から始まるインデックス。</param>
      <returns>指定したインデックス位置にあるコレクション項目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満の場合、または <paramref name="index" /> が <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> 以上の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)">
      <summary>指定した項目をコレクションから削除します。</summary>
      <param name="item">コレクションから削除する項目。</param>
      <returns>指定した項目が見つかり、削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">コレクションに <paramref name="item" /> が存在しない場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)">
      <summary>インデックスで指定した項目をコレクションから削除します。</summary>
      <param name="index">削除するコレクション項目を指定する、0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満の場合、または <paramref name="index" /> が <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> 以上の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>先頭のインデックスおよびカウントで指定された項目の範囲をコレクションから削除します。</summary>
      <param name="index">削除する項目の範囲の先頭を示す 0 から始まるインデックス。</param>
      <param name="count">
        <paramref name="index" /> で指定した位置から数えた削除する項目の数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> または <paramref name="count" /> が 0 未満の場合、あるいは <paramref name="index" /> が <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> 以上の場合に発生します。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> および <paramref name="count" /> が、このコレクション内の有効な範囲を指定していない場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.SyncRoot">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コレクションへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableColumn}#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" /> のトピックを参照してください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IEnumerable.GetEnumerator" /> のトピックを参照してください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Add(System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IList.Add(System.Object)" /> のトピックを参照してください。 代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.TableColumnCollection.Add(System.Windows.Documents.TableColumn)" /> メソッドを使用します。</summary>
      <param name="value">
        <see cref="T:System.Object" /> に追加する <see cref="T:System.Windows.Documents.TableColumnCollection" />。</param>
      <returns>新しい要素が挿入された位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Clear">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IList.Clear" /> のトピックを参照してください。 代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.TableColumnCollection.Clear" /> メソッドを使用します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Contains(System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IList.Contains(System.Object)" /> のトピックを参照してください。 代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.TableColumnCollection.Contains(System.Windows.Documents.TableColumn)" /> メソッドを使用します。</summary>
      <param name="value">
        <see cref="T:System.Windows.Documents.TableColumnCollection" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>
        <see cref="T:System.Object" /> が <see cref="T:System.Windows.Documents.TableColumnCollection" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IList.IndexOf(System.Object)" /> のトピックを参照してください。 代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.TableColumnCollection.IndexOf(System.Windows.Documents.TableColumn)" /> メソッドを使用します。</summary>
      <param name="value">
        <see cref="T:System.Windows.Documents.TableColumnCollection" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />」をご覧ください。 代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.TableColumnCollection.Insert(System.Int32,System.Windows.Documents.TableColumn)" /> メソッドを使用します。</summary>
      <param name="index">
        <see cref="T:System.Object" /> を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">
        <see cref="T:System.Windows.Documents.TableColumnCollection" /> に挿入する <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IsFixedSize">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsFixedSize" />」をご覧ください。</summary>
      <returns>
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Windows.Documents.TableCellCollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IsReadOnly">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.IList.IsReadOnly" /> のトピックを参照してください。</summary>
      <returns>
        <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Windows.Documents.TableColumnCollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Item(System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IList.Item(System.Int32)" />」をご覧ください。 代わりに、タイプ セーフな <see cref="P:System.Windows.Documents.TableCellCollection.Item(System.Int32)" /> プロパティを使用してください。</summary>
      <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns>指定したインデックス位置にある要素。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Remove(System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IList.Remove(System.Object)" /> のトピックを参照してください。 代わりに、タイプ セーフな <see cref="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)" />、<see cref="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)" />、または <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)" /> メソッドを使用してください。</summary>
      <param name="value">
        <see cref="T:System.Object" /> から削除する <see cref="T:System.Windows.Documents.TableColumnCollection" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />」をご覧ください。 代わりに、タイプ セーフな <see cref="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)" />、<see cref="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)" />、または <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)" /> メソッドを使用してください。</summary>
      <param name="index">削除する項目の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.TrimToSize">
      <summary>基になるコレクションの <see cref="P:System.Windows.Documents.TableColumnCollection.Capacity" /> を、現在コレクション内に存在する項目の <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> と同じに設定することでコレクションのメモリ消費を最適化します。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableRow">
      <summary>
        <see cref="T:System.Windows.Documents.Table" /> 内の行を定義するフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRow.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.TableRow" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableRow.Cells">
      <summary>
        <see cref="T:System.Windows.Documents.TableRow" /> のセルを含む <see cref="T:System.Windows.Documents.TableCellCollection" /> を取得します。</summary>
      <returns>子セルのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRow.ShouldSerializeCells">
      <summary>
        <see cref="P:System.Windows.Documents.TableRow.Cells" /> オブジェクトのシリアル化中に <see cref="T:System.Windows.Documents.TableRow" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableRow.Cells" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRow.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>
        <see cref="P:System.Windows.Documents.TableRow.Cells" /> に子の <see cref="T:System.Windows.Documents.TableCell" /> 要素を追加するための <see cref="T:System.Windows.Documents.TableRow" /> プロパティ。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRow.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Documents.TableRowCollection">
      <summary>
        <see cref="T:System.Windows.Documents.TableRow" /> オブジェクトのタイプ セーフな順序付けられたコレクションを作成し管理する標準的な機能を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Add(System.Windows.Documents.TableRow)">
      <summary>指定した項目をコレクションに追加します。</summary>
      <param name="item">コレクションまたは行に追加するテーブル行。</param>
      <exception cref="T:System.ArgumentException">item が既にコレクションに属していル場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">item が null の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Capacity">
      <summary>このコレクションの事前に割り当てられたコレクション項目の容量を取得または設定します。</summary>
      <returns>このコレクションの、事前に割り当てられたコレクション項目の容量。  既定値は8です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> を <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> の現在の値よりも小さい値に設定しようとしたときに発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Contains(System.Windows.Documents.TableRow)">
      <summary>コレクション内に指定した項目が存在するかどうかを照会します。</summary>
      <param name="item">コレクション内に存在するかどうかを照会する対象となる項目。</param>
      <returns>指定した item がこのコレクションに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>コレクションの内容をコピーして、指定された配列の指定されたインデックス位置から挿入します。</summary>
      <param name="array">コレクションの内容のコピー先となる 1 次元配列。  この配列では、0 から始まるインデックスを使用する必要があります。</param>
      <param name="index">コピーしたコレクション オブジェクトの挿入を開始する位置を指定する <paramref name="array" /> 内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentException">array に <see cref="T:System.Windows.Documents.TableRow" /> 型と互換性のない項目が含まれている場合、または arrayIndex が array の範囲外にある位置を指定している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">array が null の場合に発生します。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex が 0 未満の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.CopyTo(System.Windows.Documents.TableRow[],System.Int32)">
      <summary>コレクションの内容をコピーして、指定された <see cref="T:System.Windows.Documents.TableRow" /> 配列の指定されたインデックス位置から挿入します。</summary>
      <param name="array">コレクションの内容のコピー先となる <see cref="T:System.Windows.Documents.TableRow" /> の 1 次元配列。  この配列では、0 から始まるインデックスを使用する必要があります。</param>
      <param name="index">コピーしたコレクション オブジェクトの挿入を開始する位置を指定する <paramref name="array" /> 内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentException">array に <see cref="T:System.Windows.Documents.TableRow" /> 型と互換性のない項目が含まれている場合、または arrayIndex が array の範囲外にある位置を指定している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">array が null の場合に発生します。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex が 0 未満の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Count">
      <summary>コレクションに現在含まれている項目数を取得します。</summary>
      <returns>コレクションに現在含まれている項目数。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.IndexOf(System.Windows.Documents.TableRow)">
      <summary>指定したコレクション項目の 0 から始まるインデックスを返します。</summary>
      <param name="item">インデックスを返す対象となるコレクション項目。</param>
      <returns>指定したコレクション項目の 0 から始まるインデックス。指定した項目がコレクションのメンバーでない場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Insert(System.Int32,System.Windows.Documents.TableRow)">
      <summary>コレクション内の指定したインデックス位置に、指定した項目を挿入します。</summary>
      <param name="index">コレクション内で <paramref name="item" /> を挿入する位置を指定する 0 から始まるインデックス。</param>
      <param name="item">コレクションに挿入する項目。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">index が 0 より小さい場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">item が null の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.IsReadOnly">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>現在、このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.IsSynchronized">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>現在、このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にあるコレクション項目を取得します。  これは、インデックス付きプロパティです。</summary>
      <param name="index">削除するコレクション項目の位置を指定する 0 から始まるインデックス。</param>
      <returns>指定したインデックス位置にあるコレクション項目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">index がゼロ未満か、index が <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> 以上の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Remove(System.Windows.Documents.TableRow)">
      <summary>指定した項目をコレクションから削除します。</summary>
      <param name="item">コレクションから削除する項目。</param>
      <returns>指定した項目が見つかり、削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">item がコレクションに存在しない場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">item が null の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.RemoveAt(System.Int32)">
      <summary>インデックスで指定した項目をコレクションから削除します。</summary>
      <param name="index">削除するコレクション項目を指定する、0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">index がゼロ未満か、index が <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> 以上の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>先頭のインデックスおよびカウントで指定された項目の範囲をコレクションから削除します。</summary>
      <param name="index">削除する項目の範囲の先頭を示す 0 から始まるインデックス。</param>
      <param name="count">
        <paramref name="index" /> で指定した位置から数えた削除する項目の数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">index または count がゼロ未満の場合、または index が <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> 以上の場合に発生します。</exception>
      <exception cref="T:System.ArgumentException">index および count が、このコレクション内の有効な範囲を指定していない場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.SyncRoot">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コレクションへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableRow}#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" /> のトピックを参照してください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IEnumerable.GetEnumerator" /> のトピックを参照してください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Add(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Add(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Object" /> に追加する <see cref="T:System.Windows.Documents.TableRowCollection" />。</param>
      <returns>新しい要素が挿入された位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Clear">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Clear" />」をご覧ください。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Contains(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Contains(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Windows.Documents.TableRowCollection" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>
        <see cref="T:System.Object" /> が <see cref="T:System.Windows.Documents.TableRowCollection" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IList.IndexOf(System.Object)" /> のトピックを参照してください。</summary>
      <param name="value">
        <see cref="T:System.Windows.Documents.TableRowCollection" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> のトピックを参照してください。</summary>
      <param name="index">
        <see cref="T:System.Object" /> を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">
        <see cref="T:System.Windows.Documents.TableRowCollection" /> に挿入する <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#IsFixedSize">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.IList.IsFixedSize" /> のトピックを参照してください。</summary>
      <returns>
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Windows.Documents.TableRowCollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#IsReadOnly">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsReadOnly" />」をご覧ください。</summary>
      <returns>
        <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Windows.Documents.TableRowCollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#Item(System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IList.Item(System.Int32)" />」をご覧ください。</summary>
      <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns>指定したインデックス位置にある要素。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Remove(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Remove(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Object" /> から削除する <see cref="T:System.Windows.Documents.TableRowCollection" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />」をご覧ください。</summary>
      <param name="index">削除する項目の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.TrimToSize">
      <summary>基になるコレクションの <see cref="P:System.Windows.Documents.TableRowCollection.Capacity" /> を、現在コレクション内に存在する項目の <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> と同じに設定することでコレクションのメモリ消費を最適化します。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableRowGroup">
      <summary>
        <see cref="T:System.Windows.Documents.Table" /> 内の <see cref="T:System.Windows.Documents.TableRow" /> 要素のグループ化に使用されるフロー コンテンツ要素を表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.TableRowGroup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroup.Rows">
      <summary>
        <see cref="T:System.Windows.Documents.TableRowCollection" /> のコンテンツを構成する <see cref="T:System.Windows.Documents.TableRow" /> オブジェクトを格納する <see cref="T:System.Windows.Documents.TableRowGroup" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TableRowCollection" /> のコンテンツを構成する <see cref="T:System.Windows.Documents.TableRow" /> 要素を格納する <see cref="T:System.Windows.Documents.TableRowGroup" />。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.ShouldSerializeRows">
      <summary>
        <see cref="P:System.Windows.Documents.TableRowGroup.Rows" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>
        <see cref="T:System.Windows.Documents.TableRowGroup" /> コレクションにテーブル行を追加します。</summary>
      <param name="value">コレクションに追加する <see cref="T:System.Windows.Documents.TableRow" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Documents.TableRowGroupCollection">
      <summary>
        <see cref="T:System.Windows.Documents.TableRowGroup" /> オブジェクトのタイプ セーフな順序付けられたコレクションを作成し管理する標準的な機能を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Add(System.Windows.Documents.TableRowGroup)">
      <summary>指定した項目をコレクションに追加します。</summary>
      <param name="item">コレクションに追加する項目。</param>
      <exception cref="T:System.ArgumentException">item が既にコレクションに属していル場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">item が null の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Capacity">
      <summary>このコレクションの事前に割り当てられたコレクション項目の容量を取得または設定します。</summary>
      <returns>このコレクションの、事前に割り当てられたコレクション項目の容量。  既定値は8です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> を <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> の現在の値よりも小さい値に設定しようとしたときに発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Contains(System.Windows.Documents.TableRowGroup)">
      <summary>コレクション内に指定した項目が存在するかどうかを照会します。</summary>
      <param name="item">コレクション内に存在するかどうかを照会する対象となる項目。</param>
      <returns>指定した item がこのコレクションに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>コレクションの内容をコピーして、指定された配列の指定されたインデックス位置から挿入します。</summary>
      <param name="array">コレクションの内容のコピー先となる 1 次元配列。  この配列では、0 から始まるインデックスを使用する必要があります。</param>
      <param name="index">コピーしたコレクション オブジェクトの挿入を開始する位置を指定する <paramref name="array" /> 内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentException">array に <see cref="T:System.Windows.Documents.TableRowGroup" /> 型と互換性のない項目が含まれている場合、または arrayIndex が array の範囲外にある位置を指定している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">array が null の場合に発生します。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex が 0 未満の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.CopyTo(System.Windows.Documents.TableRowGroup[],System.Int32)">
      <summary>コレクションの内容をコピーして、指定された <see cref="T:System.Windows.Documents.TableRowGroup" /> 配列の指定されたインデックス位置から挿入します。</summary>
      <param name="array">コレクションの内容のコピー先となる <see cref="T:System.Windows.Documents.TableRowGroup" /> の 1 次元配列。  この配列では、0 から始まるインデックスを使用する必要があります。</param>
      <param name="index">コピーしたコレクション オブジェクトの挿入を開始する位置を指定する <paramref name="array" /> 内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentException">array に <see cref="T:System.Windows.Documents.TableRowGroup" /> 型と互換性のない項目が含まれている場合、または arrayIndex が array の範囲外にある位置を指定している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">array が null の場合に発生します。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex が 0 未満の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Count">
      <summary>コレクションに現在含まれている項目数を取得します。</summary>
      <returns>コレクションに現在含まれている項目数。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.IndexOf(System.Windows.Documents.TableRowGroup)">
      <summary>指定したコレクション項目の 0 から始まるインデックスを返します。</summary>
      <param name="item">インデックスを返す対象となるコレクション項目。</param>
      <returns>指定したコレクション項目の 0 から始まるインデックス。指定した項目がコレクションのメンバーでない場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Insert(System.Int32,System.Windows.Documents.TableRowGroup)">
      <summary>コレクション内の指定したインデックス位置に、指定した項目を挿入します。</summary>
      <param name="index">コレクション内で <paramref name="item" /> を挿入する位置を指定する 0 から始まるインデックス。</param>
      <param name="item">コレクションに挿入する項目。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">index が 0 より小さい場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">item が null の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.IsReadOnly">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>現在、このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.IsSynchronized">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>現在、このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にあるコレクション項目を取得します。  これは、インデックス付きプロパティです。</summary>
      <param name="index">削除するコレクション項目の位置を指定する 0 から始まるインデックス。</param>
      <returns>指定したインデックス位置にあるコレクション項目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">index がゼロ未満か、index が <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" /> 以上の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Remove(System.Windows.Documents.TableRowGroup)">
      <summary>指定した項目をコレクションから削除します。</summary>
      <param name="item">コレクションから削除する項目。</param>
      <returns>指定した項目が見つかり、削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">item がコレクションに存在しない場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">item が null の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.RemoveAt(System.Int32)">
      <summary>インデックスで指定した項目をコレクションから削除します。</summary>
      <param name="index">削除するコレクション項目を指定する、0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">index がゼロ未満か、index が <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" /> 以上の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>先頭のインデックスおよびカウントで指定された項目の範囲をコレクションから削除します。</summary>
      <param name="index">削除する項目の範囲の先頭を示す 0 から始まるインデックス。</param>
      <param name="count">
        <paramref name="index" /> で指定した位置から数えた削除する項目の数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">index または count がゼロ未満の場合、または index が <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" /> 以上の場合に発生します。</exception>
      <exception cref="T:System.ArgumentException">index および count が、このコレクション内の有効な範囲を指定していない場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.SyncRoot">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>コレクションへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableRowGroup}#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" /> のトピックを参照してください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IEnumerable.GetEnumerator" /> のトピックを参照してください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Add(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Object" /> に追加する <see cref="T:System.Windows.Documents.TableRowGroupCollection" />。</param>
      <returns>新しい要素が挿入された位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Clear">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Clear" />」をご覧ください。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Contains(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>
        <see cref="T:System.Object" /> が <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.IndexOf(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> のトピックを参照してください。</summary>
      <param name="index">
        <see cref="T:System.Object" /> を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">
        <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> に挿入する <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IsFixedSize">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsFixedSize" />」をご覧ください。</summary>
      <returns>
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Windows.Documents.TableRowGroupCollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IsReadOnly">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsReadOnly" />」をご覧ください。</summary>
      <returns>
        <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Windows.Documents.TableRowGroupCollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IList.Item(System.Int32)" />」をご覧ください。</summary>
      <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns>指定したインデックス位置にある要素。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.Remove(System.Object)" />」をご覧ください。</summary>
      <param name="value">
        <see cref="T:System.Object" /> から削除する <see cref="T:System.Windows.Documents.TableRowGroupCollection" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />」をご覧ください。</summary>
      <param name="index">削除する項目の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.TrimToSize">
      <summary>基になるコレクションの <see cref="P:System.Windows.Documents.TableRowGroupCollection.Capacity" /> を、現在コレクション内に存在する項目の <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" /> と同じに設定することでコレクションのメモリ消費を最適化します。</summary>
    </member>
    <member name="T:System.Windows.Documents.TextEffectResolver">
      <summary>テキスト コンテナーのテキスト効果を設定するヘルパー クラス。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextEffectResolver.Resolve(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer,System.Windows.Media.TextEffect)">
      <summary>テキスト範囲上のテキスト効果をテキスト効果ターゲットのリストに対して解決します。</summary>
      <param name="startPosition">開始テキスト ポインター</param>
      <param name="endPosition">終了テキスト ポインター</param>
      <param name="effect">テキストに適用する効果</param>
      <returns>テキスト範囲に対応する <see cref="T:System.Windows.Documents.TextEffectTarget" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextEffectTarget">
      <summary>
        <see cref="T:System.Windows.Documents.TextEffectResolver" /> を使用してテキストに効果を設定した結果。 これは、作成された <see cref="T:System.Windows.Media.TextEffect" /> と、<see cref="T:System.Windows.DependencyObject" /> に設定される <see cref="T:System.Windows.Media.TextEffect" /> で構成されます。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextEffectTarget.Disable">
      <summary>効果が適用される対象で <see cref="T:System.Windows.Media.TextEffect" /> を無効にします。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.Element">
      <summary>
        <see cref="T:System.Windows.DependencyObject" /> の対象となる <see cref="T:System.Windows.Media.TextEffect" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.DependencyObject" /> の対象となる <see cref="T:System.Windows.Media.TextEffect" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextEffectTarget.Enable">
      <summary>ターゲット テキスト上の <see cref="T:System.Windows.Media.TextEffect" /> を有効にします。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.IsEnabled">
      <summary>テキスト効果が対象の要素で有効になっているかどうかを示す値を取得します。</summary>
      <returns>ターゲットで <see cref="T:System.Windows.Media.TextEffect" /> が有効になっているかどうかを <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.TextEffect">
      <summary>
        <see cref="T:System.Windows.Media.TextEffect" /> の <see cref="T:System.Windows.Documents.TextEffectTarget" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextEffectTarget" /> の <see cref="T:System.Windows.Media.TextEffect" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElement">
      <summary>抽象 <see cref="T:System.Windows.Documents.Block" /> クラスと <see cref="T:System.Windows.Documents.Inline" /> クラスの基底クラスとして使用される抽象クラス。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Background">
      <summary>コンテンツ エリアの背景の塗りつぶしに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>コンテンツ エリアの背景の塗りつぶしに使用するブラシ。背景ブラシを使用しない場合は <see langword="null" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentEnd">
      <summary>要素内のコンテンツの末尾を表す <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextPointer" /> 内のコンテンツの末尾を表す <see cref="T:System.Windows.Documents.TextElement" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentStart">
      <summary>要素内のコンテンツの先頭を表す <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextPointerContext" /> 内のコンテンツの先頭を表す <see cref="T:System.Windows.Documents.TextElement" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementEnd">
      <summary>要素の末尾直後の位置を表す <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextPointer" /> の末尾の直後の位置を表す <see cref="T:System.Windows.Documents.TextElement" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementStart">
      <summary>要素の先頭直前の位置を表す <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextPointerContext" /> の先頭の直前の位置を表す <see cref="T:System.Windows.Documents.TextElement" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontFamily">
      <summary>要素のコンテンツに対して、優先される最上位レベルのフォント ファミリを取得または設定します。</summary>
      <returns>優先フォント ファミリ、または優先されるプライマリ フォント ファミリと 1 つ以上の代替フォント ファミリを指定する <see cref="T:System.Windows.Media.FontFamily" /> オブジェクト。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 値によって決まるフォントです。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontSize">
      <summary>要素のコンテンツのフォント サイズを取得または設定します。</summary>
      <returns>デバイスに依存しないピクセルでの使用フォントサイズ (0.001 より大きく、35791 以下)。  既定値は、現在のシステム設定と <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 値に依存しています。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> は、35791 より大きいか、0.001 以下の値に設定されています。</exception>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStretch">
      <summary>要素のコンテンツのフォントの伸縮特性を取得または設定します。</summary>
      <returns>使用するフォントの伸縮特性を指定する <see cref="T:System.Windows.FontStretch" /> 構造体。 既定値は、<see cref="P:System.Windows.FontStretches.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStretchProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStyle">
      <summary>要素のコンテンツのフォント スタイルを取得または設定します。</summary>
      <returns>使用するフォントのスタイルを指定する <see cref="T:System.Windows.FontStyles" /> クラスのメンバー。 既定値は <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 値で決定されます。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontWeight">
      <summary>要素のコンテンツの、最上位レベルのフォントの太さを取得または設定します。</summary>
      <returns>使用するフォントの太さを指定する <see cref="T:System.Windows.FontWeights" /> クラスのメンバー。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 値によって決まります。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Foreground">
      <summary>要素のコンテンツに適用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>テキスト コンテンツに適用するために使用するブラシ。 既定値は、<see cref="P:System.Windows.Media.Brushes.Black" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontFamily(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontSize(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontStretch(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontStyle(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontWeight(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetForeground(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.TextElement.Foreground" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 添付プロパティの現在値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElement.LogicalChildren">
      <summary>要素の論理的な子を反復処理できる列挙子を取得します。</summary>
      <returns>論理的な子の列挙子。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>要素に存在する 1 つ以上の依存関係プロパティの有効な値が変更されていることを知らせる通知を処理します。</summary>
      <param name="e">プロパティ値に関連付けられている引数が変更されます。  <see cref="P:System.Windows.DependencyPropertyChangedEventArgs.Property" /> プロパティは変更されたプロパティを指定し、<see cref="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue" /> プロパティは変更前のプロパティ値を指定し、<see cref="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue" /> プロパティは変更後のプロパティ値を指定します。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> プロパティの値の設定対象になる依存関係オブジェクト。</param>
      <param name="value">プロパティの新しい設定値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> プロパティの値の設定対象になる依存関係オブジェクト。</param>
      <param name="value">プロパティの新しい設定値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> プロパティの値の設定対象になる依存関係オブジェクト。</param>
      <param name="value">プロパティの新しい設定値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> プロパティの値の設定対象になる依存関係オブジェクト。</param>
      <param name="value">プロパティの新しい設定値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> プロパティの値の設定対象になる依存関係オブジェクト。</param>
      <param name="value">プロパティの新しい設定値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.TextElement.Foreground" /> プロパティの値の設定対象になる依存関係オブジェクト。</param>
      <param name="value">プロパティの新しい設定値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Documents.TextElement.TextEffects">
      <summary>要素のコンテンツに適用するテキスト効果のコレクションを取得または設定します。</summary>
      <returns>この要素のコンテンツに適用する効果を定義する 1 つ以上の <see cref="T:System.Windows.Media.TextEffectCollection" /> オブジェクトを格納する <see cref="T:System.Windows.Media.TextEffect" />。 既定値は <see langword="null" /> です。空のコレクションではありません。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.TextEffectsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.TextEffects" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Typography">
      <summary>要素のコンテンツで現在有効な文字体裁のバリエーションを取得します。</summary>
      <returns>現在有効な文字体裁のバリエーションを指定する <see cref="T:System.Windows.Documents.Typography" /> オブジェクト。 既定の文字体裁値の一覧については、<see cref="T:System.Windows.Documents.Typography" /> のトピックを参照してください。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElementCollection`1">
      <summary>
        <see cref="T:System.Windows.Documents.TextElement" /> オブジェクトのタイプ セーフな順序付けられたコレクションを作成し管理する標準的な機能を提供します。  これは、指定した型のオブジェクトを操作対象とする、<see cref="T:System.Windows.Documents.TextElement" /> から派生した汎用コレクションです。</summary>
      <typeparam name="TextElementType">汎用コレクションの型指定子。  受け入れられる型は、<see cref="T:System.Windows.Documents.TextElement" /> または <see cref="T:System.Windows.Documents.TextElement" /> の子孫の型に制限されます。</typeparam>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Add(`0)">
      <summary>指定した項目をコレクションに追加します。</summary>
      <param name="item">コレクションに追加する項目。</param>
      <exception cref="T:System.ArgumentException">item が既にコレクションに属していル場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">item が null の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)">
      <summary>指定した項目の範囲をコレクションに追加します。</summary>
      <param name="range">
        <see cref="T:System.Collections.IEnumerable" /> インターフェイスを実装し、コレクションに追加する項目の範囲を指定するオブジェクト。</param>
      <exception cref="T:System.ArgumentException">range に null 項目が含まれる場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">range が null の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Contains(`0)">
      <summary>コレクション内に指定した項目が存在するかどうかを照会します。</summary>
      <param name="item">コレクション内に存在するかどうかを照会する対象となる項目。</param>
      <returns>指定した item がこのコレクションに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)">
      <summary>コレクションの内容をコピーして、指定された配列の指定されたインデックス位置から挿入します。</summary>
      <param name="array">コレクションの内容のコピー先となる 1 次元配列。  この配列では、0 から始まるインデックスを使用する必要があります。</param>
      <param name="arrayIndex">コピーしたコレクション オブジェクトの挿入を開始する位置を指定する <paramref name="array" /> 内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentException">array に <see cref="T:System.Windows.Documents.TextElement" /> 型と互換性のない項目が含まれている場合、または arrayIndex が array の範囲外にある位置を指定している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">array が null の場合に発生します。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex が 0 未満の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.Count">
      <summary>コレクション内の現在の項目数を取得します。</summary>
      <returns>コレクション内の現在の項目数。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.GetEnumerator">
      <summary>コレクションのコンテンツの列挙子を返します。</summary>
      <returns>コレクションのコンテンツの列挙子。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)">
      <summary>コレクション内の指定したコレクション項目の後に、指定した項目を挿入します。</summary>
      <param name="previousSibling">その後に新しい項目が挿入される、コレクション内の項目。</param>
      <param name="newItem">コレクションに挿入する項目。</param>
      <exception cref="T:System.ArgumentException">newItem が既にコレクションに属している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">previousSibling または newItem が null の場合に発生します。</exception>
      <exception cref="T:System.InvalidOperationException">previousSibling がこのコレクションに属していない場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)">
      <summary>コレクション内の指定したコレクション項目の前に、指定した項目を挿入します。</summary>
      <param name="nextSibling">その前に新しい項目が挿入される、コレクション内の項目。</param>
      <param name="newItem">コレクションに挿入する項目。</param>
      <exception cref="T:System.ArgumentException">newItem が既にコレクションに属している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">nextSibling または newItem が null の場合に発生します。</exception>
      <exception cref="T:System.InvalidOperationException">nextSibling がこのコレクションに属していない場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.IsReadOnly">
      <summary>コレクションが読み取り専用かどうかを示す値を取得します。</summary>
      <returns>コレクションが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)">
      <summary>指定した項目をコレクションから削除します。</summary>
      <param name="item">コレクションから削除される項目。</param>
      <returns>指定した項目が見つかり、削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection" /> の要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。 代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)" /> メソッドを使用します。</summary>
      <param name="array">
        <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.ICollection" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="arrayIndex">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count">
      <summary>
        <see cref="T:System.Collections.ICollection" /> に格納されている要素の数を取得します。  代わりに、タイプ セーフな <see cref="P:System.Windows.Documents.TextElementCollection`1.Count" /> プロパティを使用してください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> に格納されている要素の数。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>
        <see cref="T:System.Collections.ICollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>
        <see cref="T:System.Collections.ICollection" />へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。  代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.TextElementCollection`1.GetEnumerator" /> メソッドを使用します。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" /> に項目を追加します。  代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.TextElementCollection`1.Add(`0)" /> メソッドを使用します。</summary>
      <param name="value">
        <see cref="T:System.Collections.IList" /> に追加するオブジェクト。</param>
      <returns>新しい要素が挿入された位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。  代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.TextElementCollection`1.Clear" /> メソッドを使用します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" /> に特定の値が格納されているかどうかを判断します。 代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.TextElementCollection`1.Contains(`0)" /> メソッドを使用します。</summary>
      <param name="value">
        <see cref="T:System.Collections.IList" /> 内で検索するオブジェクト。</param>
      <returns>
        <see cref="T:System.Object" /> が <see cref="T:System.Collections.IList" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" /> 内の特定の項目のインデックスを確認します。</summary>
      <param name="value">
        <see cref="T:System.Collections.IList" /> 内で検索するオブジェクト。</param>
      <returns>リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>指定したインデックスの <see cref="T:System.Collections.IList" /> に項目を挿入します。  代わりに、タイプ セーフな <see cref="M:System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)" /> または <see cref="M:System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)" /> メソッドを使用してください。</summary>
      <param name="index">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value">
        <see cref="T:System.Collections.IList" /> に挿入するオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize">
      <summary>
        <see cref="T:System.Collections.IList" /> が固定サイズかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly">
      <summary>
        <see cref="T:System.Collections.IList" /> が読み取り専用かどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns>指定したインデックス位置にある要素。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>特定のオブジェクトが <see cref="T:System.Collections.IList" /> 内にあるときに、最初に出現したものを削除します。  代わりに、タイプ セーフ <see cref="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)" /> メソッドを使用します。</summary>
      <param name="value">
        <see cref="T:System.Collections.IList" /> から削除するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>指定したインデックスにある <see cref="T:System.Collections.IList" /> 項目を削除します。</summary>
      <param name="index">削除する項目の 0 から始まるインデックス。</param>
    </member>
    <member name="T:System.Windows.Documents.TextElementEditingBehaviorAttribute">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> によるカスタム テキスト要素の処理方法を指定します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.TextElementEditingBehaviorAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> を 2 つの隣接するテキスト要素にマージできるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RichTextBox" /> が同じプロパティ値を持つ隣接するカスタム テキスト要素をマージできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly">
      <summary>テキスト要素の書式設定を文字ごとに行うか、要素全体に適用するかを示す値を取得または設定します。</summary>
      <returns>個々の文字に書式設定を適用する場合は <see langword="true" />、要素全体に適用する場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextPointer">
      <summary>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 内または <see cref="T:System.Windows.Controls.TextBlock" /> 内の位置を表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
      <summary>現在の <see cref="T:System.Windows.Documents.TextPointer" /> と指定された 2 つ目の <see cref="T:System.Windows.Documents.TextPointer" /> によって指定される位置の順序を比較します。</summary>
      <param name="position">現在の位置と比較する位置を指定する <see cref="T:System.Windows.Documents.TextPointer" />。</param>
      <returns>現在の <see cref="T:System.Windows.Documents.TextPointer" /> が <paramref name="position" /> の前である場合は -1。両位置が同じ場合は 0。現在の <see cref="T:System.Windows.Documents.TextPointer" /> が <paramref name="position" /> の後である場合は +1。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="position" /> は、現在の位置に関連付けられているテキスト コンテナー外部の位置を指定します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
      <summary>現在の <see cref="T:System.Windows.Documents.TextPointer" /> で示される位置から指定された文字数を削除します。</summary>
      <param name="count">現在の位置から削除する文字数。 現在の位置より後の文字を削除する場合は正の値を指定します。現在の位置より前の文字を削除する場合は負の値を指定します。</param>
      <returns>実際に削除された文字数。</returns>
      <exception cref="T:System.InvalidOperationException">テキストが許可されない位置でメソッドが呼び出されました。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.DocumentEnd">
      <summary>現在の位置に関連付けられているテキスト コンテナーのコンテンツの末尾にある <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>現在の位置に関連付けられているテキスト コンテナーのコンテンツの末尾にある <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.DocumentStart">
      <summary>現在の位置に関連付けられているテキスト コンテナーのコンテンツの先頭にある <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>現在の位置に関連付けられているテキスト コンテナーのコンテンツの先頭にある <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
      <summary>指定された論理方向で現在の <see cref="T:System.Windows.Documents.TextPointer" /> に隣接する要素を返します (存在する場合)。</summary>
      <param name="direction">隣接する要素を検索する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
      <returns>指定した <paramref name="direction" /> の隣接する要素。隣接する要素が存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
      <summary>指定した論理方向で現在の <see cref="T:System.Windows.Rect" /> に隣接するコンテンツの境界ボックス (<see cref="T:System.Windows.Documents.TextPointer" />) を返します。</summary>
      <param name="direction">コンテンツの境界ボックスを検索する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
      <returns>指定した方向で現在の <see cref="T:System.Windows.Documents.TextPointer" /> に隣接するコンテンツの境界ボックス。現在の有効なレイアウト情報を利用できない場合は <see cref="P:System.Windows.Rect.Empty" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
      <summary>指定した論理方向の最も近い挿入位置への <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</summary>
      <param name="direction">最も近い挿入位置を検索する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
      <returns>指定した方向の最も近い挿入位置への <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
      <summary>現在の <see cref="T:System.Windows.Documents.TextPointer" /> の位置に対する相対位置で指定した行の先頭にある <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</summary>
      <param name="count">開始位置を返す対象の行を決定するときにスキップする行頭マーカーの数。 負の値は以前の行、0 は現在の行、正の値は以降の行をそれぞれ指定します。</param>
      <returns>指定した行の先頭を指す <see cref="T:System.Windows.Documents.TextPointer" /> (<see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> が <see cref="F:System.Windows.Documents.LogicalDirection.Forward" /> に設定されている場合)。指定した行が範囲外の場合や見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
      <summary>現在の <see cref="T:System.Windows.Documents.TextPointer" /> の位置に対する相対位置で指定した行の先頭にある <see cref="T:System.Windows.Documents.TextPointer" /> を返し、スキップされた行数を通知します。</summary>
      <param name="count">開始位置を返す対象の行を決定するときにスキップする行頭マーカーの数。 負の値は以前の行、0 は現在の行、正の値は以降の行をそれぞれ指定します。</param>
      <param name="actualCount">このメソッドが終了すると、開始位置を返す対象の行を決定するときにスキップされた行頭マーカーの実際の数が格納されます。  指定された行数をスキップする前にコンテンツの先頭または末尾が見つかった場合は、この値が <paramref name="count" /> より少なくなることがあります。 このパラメーターは初期化せずに渡されます。</param>
      <returns>指定した行の先頭を指す <see cref="T:System.Windows.Documents.TextPointer" /> (<see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> が <see cref="F:System.Windows.Documents.LogicalDirection.Forward" /> に設定されている場合)。または指定した行が範囲外の場合は、指定した行に最も近い行の先頭を指します。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
      <summary>指定された論理方向の次のシンボルへのポインターを返します。</summary>
      <param name="direction">次のシンボルを検索する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
      <returns>指定した方向の次のシンボルへの <see cref="T:System.Windows.Documents.TextPointer" />。現在の <see cref="T:System.Windows.Documents.TextPointer" /> がコンテンツの先頭または末尾に隣接している場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
      <summary>指定された論理方向の次の挿入位置への <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</summary>
      <param name="direction">次の挿入位置を検索する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
      <returns>指定した方向の次の挿入位置を識別する <see cref="T:System.Windows.Documents.TextPointer" />。次の挿入位置が見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
      <summary>現在の <see cref="T:System.Windows.Documents.TextPointer" /> と指定した 2 つ目の <see cref="T:System.Windows.Documents.TextPointer" /> の間にあるシンボルの数を返します。</summary>
      <param name="position">距離 (シンボル単位) を確認する位置を指定する <see cref="T:System.Windows.Documents.TextPointer" />。</param>
      <returns>現在の <see cref="T:System.Windows.Documents.TextPointer" /> と <paramref name="position" /> の間にあるシンボルの相対的な数。  負の値は、現在の <see cref="T:System.Windows.Documents.TextPointer" /> が <paramref name="position" /> で指定された位置より後にあることを示します。0 は、2 つの位置が等しいことを示します。正の値は、現在の <see cref="T:System.Windows.Documents.TextPointer" /> が <paramref name="position" /> で指定されている位置より前にあることを示します。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="position" /> は、現在の位置に関連付けられているテキスト コンテナー外部の位置を指定します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
      <summary>指定された論理方向で現在の <see cref="T:System.Windows.Documents.TextPointer" /> に隣接するコンテンツのカテゴリ インジケーターを返します。</summary>
      <param name="direction">隣接するコンテンツのカテゴリを決定する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
      <returns>指定された論理方向の隣接するコンテンツのカテゴリを指定する <see cref="T:System.Windows.Documents.TextPointerContext" /> 値のいずれか。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
      <summary>現在の <see cref="T:System.Windows.Documents.TextPointer" /> の先頭からの指定されたオフセット (シンボル単位) が示す位置への <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</summary>
      <param name="offset">位置を計算して返す際の対象となるオフセット (シンボル単位)。  このオフセットが負の場合は、<see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> プロパティが示すのとは逆の論理方向で位置が計算されます。</param>
      <returns>指定されたオフセットが示す位置への <see cref="T:System.Windows.Documents.TextPointer" />。対応する位置が見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
      <summary>指定された方向に、現在の <see cref="T:System.Windows.Documents.TextPointer" /> の先頭からの指定されたオフセット (シンボル単位) が示す位置への <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</summary>
      <param name="offset">位置を計算して返す際の対象となるオフセット (シンボル単位)。  このオフセットが負の場合は、返される <see cref="T:System.Windows.Documents.TextPointer" /> は現在の <see cref="T:System.Windows.Documents.TextPointer" /> より前になります。それ以外の場合は後になります。</param>
      <param name="direction">返される <see cref="T:System.Windows.Documents.LogicalDirection" /> の論理方向を指定する <see cref="T:System.Windows.Documents.TextPointer" /> 値のいずれか。</param>
      <returns>指定されたオフセットが示す位置への <see cref="T:System.Windows.Documents.TextPointer" />。オフセットがコンテンツの末尾を超える場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
      <summary>指定された論理方向で現在の <see cref="T:System.Windows.Documents.TextPointer" /> に隣接するテキストを格納する文字列を返します。</summary>
      <param name="direction">隣接するテキストを検索して返す論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
      <returns>指定された論理方向の隣接するテキストを格納する文字列。隣接するテキストが見つからない場合は <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
      <summary>指定された方向の隣接するテキストから、指定された最大数の文字を、呼び出し元が用意した文字配列にコピーします。</summary>
      <param name="direction">隣接するテキストを検索してコピーする論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
      <param name="textBuffer">テキストのコピー先のバッファー。</param>
      <param name="startIndex">コピーしたテキストの書き込みを開始する <paramref name="textBuffer" /> のインデックス。</param>
      <param name="count">コピーする文字の最大数。</param>
      <returns>実際に <paramref name="textBuffer" /> にコピーされた文字数。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> が 0 より小さいか、<paramref name="textBuffer" /> の <see cref="P:System.Array.Length" /> プロパティより大きい。

または -
<paramref name="count" /> が 0 より小さいか、<paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /> - <paramref name="startIndex" />) の残りの領域より大きい。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
      <summary>現在の <see cref="T:System.Windows.Documents.TextPointer" /> と、指定された論理方向の次のテキスト以外のシンボルとの間にある Unicode 文字の数を返します。</summary>
      <param name="direction">文字数をカウントする論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
      <returns>現在の <see cref="T:System.Windows.Documents.TextPointer" /> と次のテキスト以外のシンボルとの間にある Unicode 文字の数。  隣接するテキストがない場合は 0 になります。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.HasValidLayout">
      <summary>現在の位置に関連付けられているテキスト コンテナーに有効な (最新の) レイアウトがあるかどうかを示す値を取得します。</summary>
      <returns>レイアウトが最新かつ有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertLineBreak">
      <summary>現在の位置に改行を挿入します。</summary>
      <returns>このメソッドによって挿入された <see cref="T:System.Windows.Documents.TextPointer" /> 要素の直後にある <see cref="T:System.Windows.Documents.LineBreak" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
      <summary>現在の位置に段落の区切りを挿入します。</summary>
      <returns>新しい段落の先頭 (<see cref="T:System.Windows.Documents.TextPointer" />) への <see cref="P:System.Windows.Documents.TextElement.ContentStart" />。</returns>
      <exception cref="T:System.InvalidOperationException">このメソッドが新しい段落を作るために分割することができない位置 (<see cref="T:System.Windows.Documents.Hyperlink" /> や <see cref="T:System.Windows.Documents.InlineUIContainer" /> のスコープ内など) で呼び出されました。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
      <summary>現在の位置のテキスト <see cref="T:System.Windows.Documents.Run" /> に、指定されたテキストを挿入します。</summary>
      <param name="textData">挿入するテキスト。</param>
      <exception cref="T:System.InvalidOperationException">現在の位置が <see cref="T:System.Windows.Documents.Run" /> 要素内にありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textData" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
      <summary>現在の位置が挿入位置かどうかを示す値を取得します。</summary>
      <returns>現在の位置が挿入位置の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
      <summary>現在の位置が行頭にあるかどうかを示す値を取得します。</summary>
      <returns>現在の位置が行頭にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
      <summary>指定された位置が現在の位置と同じテキスト コンテナーに含まれているかどうかを示します。</summary>
      <param name="textPosition">現在の位置と比較する位置を指定する <see cref="T:System.Windows.Documents.TextPointer" />。</param>
      <returns>
        <paramref name="textPosition" /> が示す位置が現在の位置と同じテキスト コンテナー内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textPosition" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.LogicalDirection">
      <summary>現在の位置に関連付けられている論理方向を取得します。論理方向は、現在の位置に関連付けられているコンテンツのあいまいさを解消するために使用されます。</summary>
      <returns>現在の位置に関連付けられている <see cref="T:System.Windows.Documents.LogicalDirection" /> 値。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Paragraph">
      <summary>現在の位置のスコープとなる段落を取得します (存在する場合)。</summary>
      <returns>現在の位置のスコープとなる <see cref="T:System.Windows.Documents.Paragraph" />。このような段落が存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Parent">
      <summary>現在の位置のスコープとなる論理上の親を取得します (存在する場合)。</summary>
      <returns>現在の位置のスコープとなる論理上の親。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.ToString">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <returns>オブジェクトを表す文字列。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextPointerContext">
      <summary>指定した <see cref="T:System.Windows.Documents.TextPointer" /> の <see cref="T:System.Windows.Documents.LogicalDirection" /> と隣接しているコンテンツのカテゴリを決定します。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.ElementEnd">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> は、<see cref="T:System.Windows.Documents.TextElement" /> の終了タグと隣接しています。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.ElementStart">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> は、<see cref="T:System.Windows.Documents.TextElement" /> の開始タグと隣接しています。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.EmbeddedElement">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> は、埋め込まれた <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> と隣接しています。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.None">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> は、コンテンツの先頭または末尾と隣接しています。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.Text">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> は、テキストと隣接しています。</summary>
    </member>
    <member name="T:System.Windows.Documents.TextRange">
      <summary>2 つの <see cref="T:System.Windows.Documents.TextPointer" /> 位置の間にあるコンテンツの選択範囲を表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>新しい範囲の開始位置および終了位置として指定された 2 つの <see cref="T:System.Windows.Documents.TextRange" /> 位置を取得して、<see cref="T:System.Windows.Documents.TextPointer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="position1">新しい <see cref="T:System.Windows.Documents.TextRange" /> の作成に使用する選択範囲の一方の端を示す固定アンカー位置。</param>
      <param name="position2">新しい <see cref="T:System.Windows.Documents.TextRange" /> の作成に使用する選択範囲のもう一方の端を示す移動可能な位置。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="position1" /> と <paramref name="position2" /> が同じドキュメント内に位置していない場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="position1" /> または <paramref name="position2" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)">
      <summary>指定した書式設定プロパティとその値を現在の選択範囲に適用します。</summary>
      <param name="formattingProperty">適用する書式設定プロパティ。</param>
      <param name="value">書式設定プロパティの値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="formattingProperty" /> が有効な書式設定プロパティを指定していない場合、または <paramref name="value" /> が <paramref name="formattingProperty" /> の無効な値を指定している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="formattingProperty" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.CanLoad(System.String)">
      <summary>指定したデータ形式でコンテンツを現在の選択範囲に読み込めるかどうかをチェックします。</summary>
      <param name="dataFormat">現在の選択範囲への読み込み互換性をチェックするデータ形式。  定義済みのデータ形式の一覧については、<see cref="T:System.Windows.DataFormats" /> を参照してください。</param>
      <returns>指定したデータ形式でコンテンツを現在の選択範囲に読み込める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.CanSave(System.String)">
      <summary>指定したデータ形式で現在の選択範囲を保存できるかどうかをチェックします。</summary>
      <param name="dataFormat">現在の選択範囲の保存互換性をチェックするデータ形式。  定義済みのデータ形式の一覧については、<see cref="T:System.Windows.DataFormats" /> を参照してください。</param>
      <returns>指定したデータ形式で現在の選択範囲を保存できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.Documents.TextRange.Changed">
      <summary>コンテンツの新しいスパンをカバーするように範囲の位置が変更されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.ClearAllProperties">
      <summary>
        <see cref="T:System.Windows.Documents.Inline" /> 要素によって表される書式設定プロパティを現在の選択範囲からすべて削除します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> で指定された位置が現在の選択範囲内にあるかどうかをチェックします。</summary>
      <param name="textPointer">現在の選択範囲に含まれているかどうかをテストする位置。</param>
      <returns>指定した位置が現在の選択範囲内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">textPointer が現在の選択範囲と同じドキュメント内にない場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextRange.End">
      <summary>現在の選択範囲の末尾を示す位置を取得します。</summary>
      <returns>現在の選択範囲の末尾を示す <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)">
      <summary>現在の選択範囲の指定した書式設定プロパティの有効な値を返します。</summary>
      <param name="formattingProperty">現在の選択範囲について値を取得する書式設定プロパティ。</param>
      <returns>指定された書式設定プロパティの値を指定するオブジェクト。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="formattingProperty" /> が有効な書式設定プロパティを指定していない場合、または <paramref name="value" /> が <paramref name="formattingProperty" /> の無効な値を指定している場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="formattingProperty" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextRange.IsEmpty">
      <summary>現在の選択範囲が空かどうかを示す値を取得します。</summary>
      <returns>現在の選択範囲が空の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)">
      <summary>指定したストリームから、指定したデータ形式で現在の選択範囲を読み込みます。</summary>
      <param name="stream">現在の選択範囲へ読み込むデータを格納する読み込み可能なストリーム。</param>
      <param name="dataFormat">データを読み込む際に使用するデータ形式。  現在サポートされているデータ形式は、<see cref="F:System.Windows.DataFormats.Rtf" />、<see cref="F:System.Windows.DataFormats.Text" />、<see cref="F:System.Windows.DataFormats.Xaml" />、および <see cref="F:System.Windows.DataFormats.XamlPackage" /> です。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> または <paramref name="dataFormat" /> が <see langword="null" /> の場合に発生します。</exception>
      <exception cref="T:System.ArgumentException">指定したデータ形式がサポートされていない場合に発生します。  また、<paramref name="stream" /> から読み込まれたコンテンツが指定したデータ形式と一致しない場合にも発生することがあります。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)">
      <summary>指定したストリームに、指定したデータ形式で現在の選択範囲を保存します。</summary>
      <param name="stream">現在の選択範囲を保存する空の書き込み可能なストリーム。</param>
      <param name="dataFormat">現在の選択範囲を保存する際に使用するデータ形式。  現在サポートされているデータ形式は、<see cref="F:System.Windows.DataFormats.Rtf" />、<see cref="F:System.Windows.DataFormats.Text" />、<see cref="F:System.Windows.DataFormats.Xaml" />、および <see cref="F:System.Windows.DataFormats.XamlPackage" /> です。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> または <paramref name="dataFormat" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">指定したデータ形式がサポートされていません。
または
<paramref name="stream" /> から読み込まれたコンテンツが、指定したデータ形式と一致しません。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)">
      <summary>カスタム <see cref="T:System.Windows.Documents.TextElement" /> オブジェクトを保存するオプションを指定して、指定したストリームに、指定したデータ形式で現在の選択範囲を保存します。</summary>
      <param name="stream">現在の選択範囲を保存する空の書き込み可能なストリーム。</param>
      <param name="dataFormat">現在の選択範囲を保存する際に使用するデータ形式。  現在サポートされているデータ形式は、<see cref="F:System.Windows.DataFormats.Rtf" />、<see cref="F:System.Windows.DataFormats.Text" />、<see cref="F:System.Windows.DataFormats.Xaml" />、および <see cref="F:System.Windows.DataFormats.XamlPackage" /> です。</param>
      <param name="preserveTextElements">カスタム <see cref="T:System.Windows.Documents.TextElement" /> オブジェクトを保存する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> または <paramref name="dataFormat" /> が <see langword="null" /> の場合に発生します。</exception>
      <exception cref="T:System.ArgumentException">指定したデータ形式がサポートされていない場合に発生します。  また、<paramref name="stream" /> から読み込まれたコンテンツが指定したデータ形式と一致しない場合にも発生することがあります。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>更新対象の選択範囲を示す 2 つの <see cref="T:System.Windows.Documents.TextPointer" /> 位置を取得して現在の選択範囲を更新します。</summary>
      <param name="position1">更新対象の選択範囲の一方の端を示す固定アンカー位置。</param>
      <param name="position2">更新対象の選択範囲のもう一方の端を示す移動可能な位置。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="position1" /> と <paramref name="position2" /> が同じドキュメント内に位置していない場合に発生します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="position1" /> または <paramref name="position2" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextRange.Start">
      <summary>現在の選択範囲の先頭を示す位置を取得します。</summary>
      <returns>現在の選択範囲の先頭を示す <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextRange.Text">
      <summary>現在の選択範囲のプレーン テキスト コンテンツを取得または設定します。</summary>
      <returns>現在の選択範囲のプレーン テキスト コンテンツを含む文字列。</returns>
      <exception cref="T:System.ArgumentNullException">このプロパティを <see langword="null" /> に設定しようとすると発生します。</exception>
    </member>
    <member name="T:System.Windows.Documents.TextSelection">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> コントロールの選択状態をカプセル化します。</summary>
    </member>
    <member name="T:System.Windows.Documents.Typography">
      <summary>一連のさまざまな OpenType 文字体裁プロパティにアクセスします。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.AnnotationAlternates">
      <summary>注釈の代替形式のインデックスを指定する値を取得または設定します。</summary>
      <returns>注釈の代替形式のインデックス。 既定値は 0 (ゼロ) です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.AnnotationAlternatesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.Capitals">
      <summary>選択したフォントの大文字形式を示す <see cref="T:System.Windows.FontCapitals" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontCapitals" /> 列挙値。 既定値は <see cref="F:System.Windows.FontCapitals.Normal" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.CapitalSpacing">
      <summary>読みやすくするために、すべてが大文字のテキストのグリフ間隔をグローバルに調整するかどうかを決定する値を取得または設定します。</summary>
      <returns>間隔を調整する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CapitalSpacingProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Documents.Typography.CapitalsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.Capitals" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.CaseSensitiveForms">
      <summary>大文字のグリフに合わせるためにグリフの垂直位置を調整するかどうかを決定する値を取得または設定します。</summary>
      <returns>垂直位置を調整する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CaseSensitiveFormsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualAlternates">
      <summary>表示されているテキストのコンテキストに基づいてカスタムのグリフ フォームを使用できるかどうかを決定する値を取得または設定します。</summary>
      <returns>カスタムのグリフ フォームを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualAlternatesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualLigatures">
      <summary>コンテキスト合字が有効かどうかを示す値を取得または設定します。</summary>
      <returns>コンテキスト合字が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualLigaturesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualSwashes">
      <summary>コンテキスト巻きひげ形式のインデックスを指定する値を取得または設定します。</summary>
      <returns>標準巻きひげ形式のインデックス。 既定値は 0 (ゼロ) です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualSwashesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.DiscretionaryLigatures">
      <summary>随意合字が有効かどうかを示す値を取得または設定します。</summary>
      <returns>随意合字が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.DiscretionaryLigaturesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianExpertForms">
      <summary>標準的な日本語フォントの形式が、対応する適切なタイポグラフィの形式に置き換えられているかどうかを決定する値を取得または設定します。</summary>
      <returns>標準的な日本語フォントの形式が、対応する適切なタイポグラフィの形式に置き換えられている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianExpertFormsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianLanguage">
      <summary>特定の書記体系または言語に使用されるグリフのバージョンを示す <see cref="T:System.Windows.FontEastAsianLanguage" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontEastAsianLanguage" /> 列挙値。 既定値は <see cref="F:System.Windows.FontEastAsianLanguage.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianLanguageProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianWidths">
      <summary>東アジア フォントのラテン文字に使用する比例幅を示す <see cref="T:System.Windows.FontEastAsianWidths" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontEastAsianWidths" /> 列挙値。 既定値は <see cref="F:System.Windows.FontEastAsianWidths.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianWidthsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.Fraction">
      <summary>分数のスタイルを示す <see cref="T:System.Windows.FontFraction" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontFraction" /> 列挙値。 既定値は <see cref="F:System.Windows.FontFraction.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.FractionProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.Fraction" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetAnnotationAlternates(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 添付プロパティの現在の値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCapitals(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Capitals" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Capitals" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Capitals" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCapitalSpacing(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCaseSensitiveForms(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualAlternates(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualLigatures(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualSwashes(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetDiscretionaryLigatures(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianExpertForms(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianLanguage(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianWidths(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetFraction(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Fraction" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Fraction" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Fraction" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetHistoricalForms(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetHistoricalLigatures(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetKerning(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Kerning" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Kerning" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Kerning" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetMathematicalGreek(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetNumeralAlignment(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetNumeralStyle(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetSlashedZero(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStandardLigatures(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStandardSwashes(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticAlternates(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet1(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet10(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet11(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet12(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet13(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet14(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet15(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet16(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet17(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet18(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet19(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet2(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet20(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet3(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet4(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet5(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet6(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet7(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet8(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet9(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetVariants(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Variants" /> 添付プロパティの値を返します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Variants" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Variants" /> 添付プロパティの現在の値。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.HistoricalForms">
      <summary>歴史的形式が有効かどうかを示す値を取得または設定します。</summary>
      <returns>歴史的形式が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.HistoricalFormsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.HistoricalLigatures">
      <summary>歴史的合字が有効かどうかを示す値を取得または設定します。</summary>
      <returns>歴史的合字が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.HistoricalLigaturesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.Kerning">
      <summary>カーニングが有効かどうかを示す値を取得または設定します。</summary>
      <returns>カーニングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.KerningProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.Kerning" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.MathematicalGreek">
      <summary>ギリシャ語グリフの標準的なタイポグラフィ フォント形式が、一般的に数学表記で使用される、対応するフォント形式に置き換えられているかどうかを示す値を取得または設定します。</summary>
      <returns>ギリシャ語数学形式が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.MathematicalGreekProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.NumeralAlignment">
      <summary>数値を使用するときの幅の調整を示す <see cref="T:System.Windows.FontNumeralAlignment" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontNumeralAlignment" /> 列挙値。 既定値は <see cref="F:System.Windows.FontNumeralAlignment.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.NumeralAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.NumeralStyle">
      <summary>数字代替フォント形式を表示するために使用される一連のグリフを示す <see cref="T:System.Windows.FontNumeralStyle" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontNumeralStyle" /> 列挙値。 既定値は <see cref="F:System.Windows.FontNumeralStyle.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.NumeralStyleProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetAnnotationAlternates(System.Windows.DependencyObject,System.Int32)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCapitals(System.Windows.DependencyObject,System.Windows.FontCapitals)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Capitals" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Capitals" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCapitalSpacing(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCaseSensitiveForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualAlternates(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualSwashes(System.Windows.DependencyObject,System.Int32)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetDiscretionaryLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianExpertForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianLanguage(System.Windows.DependencyObject,System.Windows.FontEastAsianLanguage)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianWidths(System.Windows.DependencyObject,System.Windows.FontEastAsianWidths)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetFraction(System.Windows.DependencyObject,System.Windows.FontFraction)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Fraction" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Fraction" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetHistoricalForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetHistoricalLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetKerning(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Kerning" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Kerning" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetMathematicalGreek(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetNumeralAlignment(System.Windows.DependencyObject,System.Windows.FontNumeralAlignment)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetNumeralStyle(System.Windows.DependencyObject,System.Windows.FontNumeralStyle)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetSlashedZero(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStandardLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStandardSwashes(System.Windows.DependencyObject,System.Int32)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticAlternates(System.Windows.DependencyObject,System.Int32)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet1(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet10(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet11(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet12(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet13(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet14(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet15(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet16(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet17(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet18(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet19(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet2(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet20(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet3(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet4(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet5(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet6(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet7(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet8(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet9(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetVariants(System.Windows.DependencyObject,System.Windows.FontVariants)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Variants" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Variants" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> の場合に発生します。</exception>
    </member>
    <member name="P:System.Windows.Documents.Typography.SlashedZero">
      <summary>公称ゼロ フォント形式をスラッシュ ゼロで置き換えるかどうかを示す値を取得または設定します。</summary>
      <returns>スラッシュ ゼロが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.SlashedZeroProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StandardLigatures">
      <summary>標準合字が有効かどうかを示す値を取得または設定します。</summary>
      <returns>標準合字が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StandardLigaturesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StandardSwashes">
      <summary>標準巻きひげ形式のインデックスを指定する値を取得または設定します。</summary>
      <returns>標準巻きひげ形式のインデックス。 既定値は 0 (ゼロ) です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StandardSwashesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticAlternates">
      <summary>スタイル上の代替形式のインデックスを指定する値を取得または設定します。</summary>
      <returns>スタイル上の代替形式のインデックス。 既定値は 0 (ゼロ) です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticAlternatesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet1">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet10">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet10Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet11">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet11Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet12">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet12Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet13">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet13Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet14">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet14Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet15">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet15Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet16">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet16Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet17">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet17Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet18">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet18Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet19">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet19Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet1Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet2">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet20">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet20Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet2Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet3">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet3Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet4">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet4Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet5">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet5Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet6">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet6Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet7">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet7Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet8">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet8Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet9">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet9Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.Variants">
      <summary>使用される標準的なタイポグラフィ形式のバリエーションを示す <see cref="T:System.Windows.FontVariants" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontVariants" /> 列挙値。 既定値は <see cref="F:System.Windows.FontVariants.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.VariantsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.Variants" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Documents.Underline">
      <summary>コンテンツが下線付きのテキスト装飾で表示されるようにするインライン レベルのフロー コンテンツ要素。</summary>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Underline" /> クラスの新しい空のインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.Inline)">
      <summary>指定した <see cref="T:System.Windows.Documents.Underline" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツとして受け取って、<see cref="T:System.Windows.Documents.Underline" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childInline">新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Underline" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>指定した <see cref="T:System.Windows.Documents.Underline" /> オブジェクトを新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツとして受け取ると共に、新しい <see cref="T:System.Windows.Documents.Underline" /> 要素の挿入位置を指定する <see cref="T:System.Windows.Documents.TextPointer" /> を受け取って、<see cref="T:System.Windows.Documents.Inline" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="childInline">新しい <see cref="T:System.Windows.Documents.Inline" /> の初期コンテンツを指定する <see cref="T:System.Windows.Documents.Underline" /> オブジェクト。  このパラメーターは、<see langword="null" /> でもかまいません。その場合、<see cref="T:System.Windows.Documents.Inline" /> は挿入されません。</param>
      <param name="insertionPosition">
        <see cref="T:System.Windows.Documents.TextPointer" /> 要素の作成後に、この要素を挿入する挿入位置を指定する <see cref="T:System.Windows.Documents.Underline" />。自動挿入を行わない場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>新しい <see cref="T:System.Windows.Documents.Underline" /> に格納されるコンテンツの選択範囲の先頭と末尾を示す 2 つの <see cref="T:System.Windows.Documents.TextPointer" /> オブジェクトを受け取って、<see cref="T:System.Windows.Documents.Underline" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="start">新しい <see cref="T:System.Windows.Documents.TextPointer" /> に格納されるコンテンツの選択範囲の先頭を示す <see cref="T:System.Windows.Documents.Underline" />。</param>
      <param name="end">新しい <see cref="T:System.Windows.Documents.TextPointer" /> に格納されるコンテンツの選択範囲の末尾を示す <see cref="T:System.Windows.Documents.Underline" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> または <paramref name="end" /> が null の場合に発生します。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> と <paramref name="end" /> が、<see cref="T:System.Windows.Documents.Underline" /> 要素によって囲まれた部分に適合するコンテンツの範囲に解決されない場合に発生します。たとえば、<paramref name="start" /> と <paramref name="end" /> が別々のパラグラフ内の位置を示している場合などです。</exception>
    </member>
    <member name="T:System.Windows.Documents.ZoomPercentageConverter">
      <summary>
        <see cref="T:System.Double" /> (<see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> の値として使用される) と他の型とを相互変換する型コンバーターを実装します。</summary>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.ZoomPercentageConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <see cref="T:System.Double" /> (<see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> の値として使用される) を指定した型のオブジェクトに変換します。</summary>
      <param name="value">
        <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> の現在の値。</param>
      <param name="targetType">
        <paramref name="value" /> の変換後の型。 これには、<see cref="T:System.Double" /> または <see cref="T:System.String" /> を指定する必要があります。</param>
      <param name="parameter">
        <see langword="null" />。</param>
      <param name="culture">変換時に前提となる言語とカルチャ。</param>
      <returns>コンバーターが値を生成できない場合、たとえば、<paramref name="value" /> が <see langword="null" /> の場合や <paramref name="targetType" /> が <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> または <see cref="T:System.Double" /> ではない場合は <see cref="T:System.String" />。
または
指定した型の新しい <see cref="T:System.Object" />。 このクラスに実装される場合は <see cref="T:System.Double" /> または <see cref="T:System.String" /> のいずれかにする必要があります。 文字列の場合は、<paramref name="culture" /> に合わせて適切に書式設定されます。</returns>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> の以前に変換した値を <see cref="T:System.Double" /> に戻して、<see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> に代入できるようにします。</summary>
      <param name="value">再度 <see cref="T:System.Double" /> に変換されるオブジェクト。</param>
      <param name="targetType">
        <paramref name="value" /> の型。 これには、<see cref="T:System.Double" /> または <see cref="T:System.String" /> を指定する必要があります。</param>
      <param name="parameter">
        <see langword="null" />。</param>
      <param name="culture">変換時に前提となる言語とカルチャ。</param>
      <returns>コンバーターが値を生成できない場合、たとえば、<paramref name="value" /> が有効なパーセンテージではない場合や <paramref name="targetType" /> が <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> または <see cref="T:System.Double" /> ではない場合は <see cref="T:System.String" />。

または -
<see cref="T:System.Double" /> のズーム倍率を表す <see cref="T:System.Windows.Controls.DocumentViewer" />。</returns>
    </member>
    <member name="T:System.Windows.DynamicResourceExtension">
      <summary>XAML から作成された動的リソース参照をサポートするマークアップ拡張機能を実装します。</summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtension.#ctor">
      <summary>
        <see cref="T:System.Windows.DynamicResourceExtension" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtension.#ctor(System.Object)">
      <summary>指定した初期キーを使用して、<see cref="T:System.Windows.DynamicResourceExtension" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="resourceKey">このマークアップ拡張機能が参照するリソースのキー。</param>
    </member>
    <member name="M:System.Windows.DynamicResourceExtension.ProvideValue(System.IServiceProvider)">
      <summary>この拡張機能を適用するプロパティで設定するオブジェクトを返します。 <see cref="T:System.Windows.DynamicResourceExtension" /> の場合、これは、<see cref="P:System.Windows.DynamicResourceExtension.ResourceKey" /> で識別される、現在の親チェーン内のリソース ディクショナリで見つかったオブジェクトです。</summary>
      <param name="serviceProvider">マークアップ拡張機能のサービスを提供できるオブジェクト。</param>
      <returns>拡張機能が適用されたプロパティで設定するオブジェクト。 これは、実際の値ではなく、後で評価される式になります。</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="resourceKey" /> を提供していない拡張機能の値を提供しようとしました。</exception>
    </member>
    <member name="P:System.Windows.DynamicResourceExtension.ResourceKey">
      <summary>この動的リソース参照で指定されているキーを取得または設定します。 このキーは、リソース ディクショナリ内のリソースを中間式で検索するのに使用されます。</summary>
      <returns>この動的リソース参照で指定されているリソース キー。</returns>
    </member>
    <member name="T:System.Windows.DynamicResourceExtensionConverter">
      <summary>解析された XAML を <see cref="T:System.Windows.DynamicResourceExtension" /> に変換し、XAML から作成された動的リソース参照をサポートします。</summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtensionConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.DynamicResourceExtensionConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが、コンテキストを使用してオブジェクトを特定の目的の型に変換できるかどうかを示す値を返します。</summary>
      <param name="context">指定した型を評価する必要があるコンテキスト。</param>
      <param name="destinationType">変換先/変換出力の型。</param>
      <returns>
        <paramref name="destinationType" /> が <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> の型である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.DynamicResourceExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したオブジェクトを別の型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="culture">数を表すカルチャを指定する <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換する値。 これは、<see cref="T:System.Windows.DynamicResourceExtension" /> 型であることが求められます。</param>
      <param name="destinationType">変換する必要がある型。</param>
      <returns>返された変換済みのオブジェクト。 このオブジェクトを要求された型にキャストします。 通常は、このオブジェクトを <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> にキャストする必要があります。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> を <see cref="T:System.Windows.DynamicResourceExtension" /> として割り当てることができませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は <see langword="null" />です。</exception>
    </member>
    <member name="T:System.Windows.EventSetter">
      <summary>スタイル内で、イベント セッターを表します。 イベント セッターは、イベントへの応答で指定されたイベント ハンドラーを呼び出します。</summary>
    </member>
    <member name="M:System.Windows.EventSetter.#ctor">
      <summary>
        <see cref="T:System.Windows.EventSetter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)">
      <summary>提供されたイベントとハンドラー パラメーターを使用して、<see cref="T:System.Windows.EventSetter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="routedEvent">
        <see cref="T:System.Windows.EventSetter" /> が応答する、特定のルーティング イベント。</param>
      <param name="handler">このセッターで割り当てるハンドラー。</param>
    </member>
    <member name="P:System.Windows.EventSetter.Event">
      <summary>この <see cref="T:System.Windows.EventSetter" /> が応答する、特定のルーティング イベントを取得または設定します。</summary>
      <returns>ルーティング イベントの識別子。</returns>
      <exception cref="T:System.InvalidOperationException">シールされた <see cref="T:System.Windows.EventSetter" /> でこのプロパティを設定しようとしています。</exception>
    </member>
    <member name="P:System.Windows.EventSetter.HandledEventsToo">
      <summary>イベント データ内でイベントが処理済みとしてマークされている場合でも、setter に割り当てられたハンドラーを呼び出す必要があるかどうかを判断する値を取得または設定します。</summary>
      <returns>ハンドラーを引き続き呼び出す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.EventSetter.Handler">
      <summary>setter でルーティング イベントのハンドラーへの参照を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.EventSetter" /> によってアタッチされるハンドラーへの参照。</returns>
    </member>
    <member name="T:System.Windows.EventTrigger">
      <summary>イベントへの応答で一連のアクションを適用するトリガーを表します。</summary>
    </member>
    <member name="M:System.Windows.EventTrigger.#ctor">
      <summary>
        <see cref="T:System.Windows.EventTrigger" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)">
      <summary>イベントを指定して、<see cref="T:System.Windows.EventTrigger" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="routedEvent">このトリガーをアクティブにする <see cref="T:System.Windows.RoutedEvent" />。</param>
    </member>
    <member name="P:System.Windows.EventTrigger.Actions">
      <summary>イベントが発生したときに適用するアクションのコレクションを取得します。</summary>
      <returns>既定値は空のコレクションです。</returns>
    </member>
    <member name="M:System.Windows.EventTrigger.AddChild(System.Object)">
      <summary>指定したオブジェクトを現在のイベント トリガーの <see cref="P:System.Windows.EventTrigger.Actions" /> コレクションに追加します。</summary>
      <param name="value">このトリガーの <see cref="T:System.Windows.TriggerAction" /> コレクションに追加する <see cref="P:System.Windows.EventTrigger.Actions" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.EventTrigger.AddText(System.String)">
      <summary>このメソッドはサポートされず、例外が発生します。</summary>
      <param name="text">このパラメーターは使用されません。</param>
    </member>
    <member name="P:System.Windows.EventTrigger.RoutedEvent">
      <summary>このトリガーをアクティブにする <see cref="T:System.Windows.RoutedEvent" /> を取得または設定します。</summary>
      <returns>既定値は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.EventTrigger.RoutedEvent" /> プロパティには null を指定できません。</exception>
    </member>
    <member name="M:System.Windows.EventTrigger.ShouldSerializeActions">
      <summary>シリアル化プロセスがこのクラスのインスタンスの <see cref="P:System.Windows.EventTrigger.Actions" /> プロパティの有効値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see cref="P:System.Windows.EventTrigger.Actions" /> プロパティ値をシリアル化する必要がある場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.EventTrigger.SourceName">
      <summary>このトリガーをアクティブにするイベントでオブジェクトの名前を取得または設定します。 これは、要素トリガーまたはテンプレート トリガーでのみ使用されます。</summary>
      <returns>既定値は <see langword="null" /> です。 このプロパティ値が <see langword="null" /> の場合、イベントの発生について監視される要素は、テンプレートが適用される親または論理ツリー ルートです。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.EventTrigger" /> は、使用中になったら変更できません。</exception>
    </member>
    <member name="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.ExceptionRoutedEventArgs">
      <summary>失敗した <see cref="T:System.Windows.Controls.Image" /> イベントと <see cref="T:System.Windows.Controls.MediaElement" /> イベントにデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.ExceptionRoutedEventArgs.ErrorException">
      <summary>エラー状態を引き起こした例外を取得します。</summary>
      <returns>特定のエラー状態の詳細を示す例外。</returns>
      <exception cref="T:System.Security.SecurityException">メディア ファイルへのアクセスの試行が拒否されました。</exception>
      <exception cref="T:System.IO.FileNotFoundException">メディア ファイルが見つかりません。</exception>
      <exception cref="T:System.IO.FileFormatException">メディア ファイルの形式は、インストールされているコーデックではサポートされていません。
または
ファイルの形式を認識できません。</exception>
      <exception cref="T:System.NotSupportedException">Windows Media Player Version 10 以降が検出されません。

または -

メディア再生のためのビデオ リソースが不十分です。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">COM エラー コードが表示されます。</exception>
    </member>
    <member name="T:System.Windows.ExitEventArgs">
      <summary>
        <see cref="E:System.Windows.Application.Exit" /> イベントのイベント引数。</summary>
    </member>
    <member name="P:System.Windows.ExitEventArgs.ApplicationExitCode">
      <summary>アプリケーションの終了時に、アプリケーションがオペレーティング システムに返す終了コードを取得または設定します。</summary>
      <returns>アプリケーションの終了時に、アプリケーションがオペレーティング システムに返す終了コード。</returns>
    </member>
    <member name="T:System.Windows.ExitEventHandler">
      <summary>
        <see cref="E:System.Windows.Application.Exit" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.FigureHorizontalAnchor">
      <summary>図形の水平方向の位置の基準を示します。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ColumnCenter">
      <summary>列のコンテンツ領域の中央に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ColumnLeft">
      <summary>列のコンテンツ領域の左端に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ColumnRight">
      <summary>列のコンテンツ領域の右端に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ContentCenter">
      <summary>ページのコンテンツ領域の中央に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ContentLeft">
      <summary>ページのコンテンツ領域の左端に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ContentRight">
      <summary>ページのコンテンツ領域の右端に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.PageCenter">
      <summary>ページ領域の中央に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.PageLeft">
      <summary>ページ領域の左端に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.PageRight">
      <summary>ページ領域の右端に図形を固定します。</summary>
    </member>
    <member name="T:System.Windows.FigureLength">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> の高さまたは幅を表します。</summary>
    </member>
    <member name="M:System.Windows.FigureLength.#ctor(System.Double)">
      <summary>長さを示すピクセル数を指定して、<see cref="T:System.Windows.FigureLength" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pixels">長さを構成するデバイス非依存ピクセルの数 (96 ピクセル/インチ)。</param>
    </member>
    <member name="M:System.Windows.FigureLength.#ctor(System.Double,System.Windows.FigureUnitType)">
      <summary>指定された <see cref="T:System.Windows.FigureLength" /> と <see cref="P:System.Windows.FigureLength.Value" /> を使用して、<see cref="P:System.Windows.FigureLength.FigureUnitType" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">
        <see cref="P:System.Windows.FigureLength.Value" /> クラスの <see cref="T:System.Windows.FigureLength" />。</param>
      <param name="type">
        <see cref="P:System.Windows.FigureLength.Value" /> クラスの <see cref="P:System.Windows.FigureLength.FigureUnitType" />。</param>
    </member>
    <member name="M:System.Windows.FigureLength.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> が <see cref="T:System.Windows.FigureLength" /> であるかどうか、およびこの <see cref="T:System.Windows.FigureLength" /> と同一かどうかを判断します。</summary>
      <param name="oCompare">このインスタンスと比較する <see cref="T:System.Object" />。</param>
      <returns>
        <paramref name="oCompare" /> が <see cref="T:System.Windows.FigureLength" /> であり、この <see cref="T:System.Windows.FigureLength" /> と同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.FigureLength.Equals(System.Windows.FigureLength)">
      <summary>2 つの <see cref="T:System.Windows.FigureLength" /> 構造体を比較して、等しいかどうかを確認します。</summary>
      <param name="figureLength">このインスタンスと比較する <see cref="T:System.Windows.FigureLength" />。</param>
      <returns>
        <paramref name="figureLength" /> がこの <see cref="T:System.Windows.FigureLength" /> と同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.FigureUnitType">
      <summary>
        <see cref="P:System.Windows.FigureLength.Value" /> の単位型を取得します。</summary>
      <returns>この <see cref="P:System.Windows.FigureLength.Value" /> の単位型。 既定値は <see cref="F:System.Windows.FigureUnitType.Auto" /> です。</returns>
    </member>
    <member name="M:System.Windows.FigureLength.GetHashCode">
      <summary>この <see cref="T:System.Windows.FigureLength" /> のハッシュ コードを返します。</summary>
      <returns>この <see cref="T:System.Windows.FigureLength" /> 構造体のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsAbsolute">
      <summary>この <see cref="T:System.Windows.FigureLength" /> が絶対値 (ピクセル単位) を保持しているかどうかを判断する値を取得します。</summary>
      <returns>
        <see langword="true" />この<see cref="T:System.Windows.FigureLength" />が絶対値 (ピクセル単位) を保持している場合<see langword="false" />は。それ以外の場合は。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsAuto">
      <summary>この <see cref="T:System.Windows.FigureLength" /> が自動 (未指定) であるかどうかを判断する値を取得します。</summary>
      <returns>
        <see langword="true" />この<see cref="T:System.Windows.FigureLength" />が自動 (指定されていない) <see langword="false" />の場合は。それ以外の場合は。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsColumn">
      <summary>この <see cref="T:System.Windows.FigureLength" /> の <see cref="T:System.Windows.FigureUnitType" /> プロパティ値が <see cref="F:System.Windows.FigureUnitType.Column" /> であるかどうかを判断する値を取得します。</summary>
      <returns>
        <see langword="true" />この<see cref="T:System.Windows.FigureLength" />の<see cref="T:System.Windows.FigureUnitType" /><see cref="F:System.Windows.FigureUnitType.Column" />プロパティ <see langword="false" /> 値がの場合は。それ以外の場合は。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsContent">
      <summary>この <see cref="T:System.Windows.FigureLength" /> の <see cref="T:System.Windows.FigureUnitType" /> プロパティ値が <see cref="F:System.Windows.FigureUnitType.Content" /> であるかどうかを判断する値を取得します。</summary>
      <returns>この<see langword="true" /> にプロパティ <see cref="T:System.Windows.FigureUnitType" /> 値が指定<see langword="false" />されている場合はを返します。それ以外の場合はを返します。 <see cref="F:System.Windows.FigureUnitType.Content" /><see cref="T:System.Windows.FigureLength" /> 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsPage">
      <summary>この <see cref="T:System.Windows.FigureLength" /> の <see cref="T:System.Windows.FigureUnitType" /> プロパティ値が <see cref="F:System.Windows.FigureUnitType.Page" /> であるかどうかを判断する値を取得します。</summary>
      <returns>
        <see langword="true" />この<see cref="T:System.Windows.FigureLength" />の<see cref="T:System.Windows.FigureUnitType" /><see cref="F:System.Windows.FigureUnitType.Page" />プロパティ <see langword="false" /> 値がの場合は。それ以外の場合は。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.FigureLength.op_Equality(System.Windows.FigureLength,System.Windows.FigureLength)">
      <summary>2 つの <see cref="T:System.Windows.FigureLength" /> 構造体を比較して、等しいかどうかを確認します。</summary>
      <param name="fl1">最初に比較する <see cref="T:System.Windows.FigureLength" /> 構造体。</param>
      <param name="fl2">比較する 2 番目の <see cref="T:System.Windows.FigureLength" /> 構造体。</param>
      <returns>
        <see langword="true" /> と <paramref name="fl1" /> が等しい場合は <paramref name="fl2" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.FigureLength.op_Inequality(System.Windows.FigureLength,System.Windows.FigureLength)">
      <summary>2 つの <see cref="T:System.Windows.FigureLength" /> 構造体を比較し、等しくないかどうかを確認します。</summary>
      <param name="fl1">最初に比較する <see cref="T:System.Windows.FigureLength" /> 構造体。</param>
      <param name="fl2">比較する 2 番目の <see cref="T:System.Windows.FigureLength" /> 構造体。</param>
      <returns>
        <paramref name="fl1" /> と <paramref name="fl2" /> が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.FigureLength.ToString">
      <summary>この <see cref="T:System.String" /> の <see cref="T:System.Windows.FigureLength" /> 表現を作成します。</summary>
      <returns>この <see cref="T:System.String" /> の <see cref="T:System.Windows.FigureLength" /> 表現。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.Value">
      <summary>この <see cref="T:System.Windows.FigureLength" /> の値を取得します。</summary>
      <returns>この <see cref="T:System.Windows.FigureLength" /> の値を取得します。 既定値は<c>1</c>です。</returns>
    </member>
    <member name="T:System.Windows.FigureLengthConverter">
      <summary>他の型のインスタンスと <see cref="T:System.Windows.FigureLength" /> の間の変換を行います。</summary>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.FigureLengthConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定した型から <see cref="T:System.Windows.FigureLength" /> のインスタンスにオブジェクトを変換できるかどうかを示します。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報を記述します。</param>
      <param name="sourceType">変換のサポートについて照会するソースの <see cref="T:System.Type" />。</param>
      <returns>指定した型のオブジェクトを <see cref="T:System.Windows.FigureLength" /> に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.FigureLength" /> のインスタンスを指定した型に変換できるかどうかを判断します。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報を記述します。</param>
      <param name="destinationType">この <see cref="T:System.Windows.FigureLength" /> が変換元として評価される際に、変換先となる目的の型。</param>
      <returns>
        <see cref="T:System.Windows.FigureLength" /> のインスタンスを <paramref name="destinationType" /> に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したオブジェクトを <see cref="T:System.Windows.FigureLength" /> に変換します。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報を記述します。</param>
      <param name="cultureInfo">変換元の型の <see cref="T:System.Globalization.CultureInfo" /> を説明します。</param>
      <param name="source">変換されるオブジェクト。</param>
      <returns>
        <paramref name="source" /> の変換によって作成された <see cref="T:System.Windows.FigureLength" />。</returns>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定した <see cref="T:System.Windows.FigureLength" /> を指定した型に変換します。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報を記述します。</param>
      <param name="cultureInfo">変換元の型の <see cref="T:System.Globalization.CultureInfo" /> を説明します。</param>
      <param name="value">変換対象の <see cref="T:System.Windows.FigureLength" />。</param>
      <param name="destinationType">
        <see cref="T:System.Windows.FigureLength" /> を変換した後の型。</param>
      <returns>この <see cref="T:System.Windows.FigureLength" /> の変換によって作成されたオブジェクト。</returns>
    </member>
    <member name="T:System.Windows.FigureUnitType">
      <summary>
        <see cref="T:System.Windows.FigureLength" /> の幅または高さに関連付けられる単位型を記述します。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Auto">
      <summary>
        <see cref="T:System.Windows.FigureLength" /> が指定されていない場合の既定値です。この値は、制約なしに計算される、<see cref="T:System.Windows.Documents.Figure" /> の幅または高さの値を作成します。 注: <see cref="T:System.Windows.FigureUnitType" /> を <see cref="F:System.Windows.FigureUnitType.Auto" /> に設定すると、<see cref="T:System.Windows.FigureLength" /> の <see cref="P:System.Windows.FigureLength.Value" /> プロパティが <c>1</c> に設定されます。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Column">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> の幅または高さの値は、<see cref="T:System.Windows.Documents.Figure" /> が含まれる列の幅の分数 (1 よりも大きい分数を含む) で表されます。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Content">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> の幅または高さの値は、<see cref="T:System.Windows.Documents.Figure" /> のコンテンツ幅の分数 (1 よりも大きい分数を含む) で表されます。 メモ:注: <see cref="T:System.Windows.FigureUnitType" /> を <see cref="F:System.Windows.FigureUnitType.Content" /> に設定する場合、<see cref="T:System.Windows.FigureLength" /> の <see cref="P:System.Windows.FigureLength.Value" /> プロパティを、<c>0</c> から <c>1</c> の値に設定する必要があります。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Page">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> の幅または高さの値は、<see cref="T:System.Windows.Documents.Figure" /> が含まれるページ幅の分数 (1 よりも大きい分数を含む) で表されます。 メモ:注: <see cref="T:System.Windows.FigureUnitType" /> を <see cref="F:System.Windows.FigureUnitType.Page" /> に設定する場合、<see cref="T:System.Windows.FigureLength" /> の <see cref="P:System.Windows.FigureLength.Value" /> プロパティを、<c>0</c> から <c>1</c> の値に設定する必要があります。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Pixel">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> の幅または高さの値は、ピクセル (96 ピクセル/インチ) で表されます。</summary>
    </member>
    <member name="T:System.Windows.FigureVerticalAnchor">
      <summary>図形の垂直方向の位置の基準点を示します。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ContentBottom">
      <summary>ページのコンテンツ領域の下端に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ContentCenter">
      <summary>ページのコンテンツ領域の中央に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ContentTop">
      <summary>ページのコンテンツ領域の上端に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.PageBottom">
      <summary>ページ領域の下端に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.PageCenter">
      <summary>ページ領域の中央に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.PageTop">
      <summary>ページ領域の上端に図形を固定します。</summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ParagraphTop">
      <summary>現在の段落の上端に図形を固定します。</summary>
    </member>
    <member name="T:System.Windows.FontSizeConverter">
      <summary>フォント サイズ値と他の型表現との相互変換を行います。</summary>
    </member>
    <member name="M:System.Windows.FontSizeConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.FontSizeConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.FontSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定した型から <see cref="T:System.Double" /> 値に変換できるかどうかを判断します。</summary>
      <param name="context">コンテナーや <see cref="T:System.ComponentModel.PropertyDescriptor" /> などのコンポーネントのコンテキスト情報を表します。</param>
      <param name="sourceType">変換のために評価するデータ型を識別します。</param>
      <returns>
        <paramref name="sourceType" /> を <see cref="T:System.Double" /> に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.FontSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>フォント サイズ値を指定した型に変換できるかどうかを判断します。</summary>
      <param name="context">コンポーネントのコンテキスト情報 (コンテナーや <see cref="T:System.ComponentModel.PropertyDescriptor" /> など)。</param>
      <param name="destinationType">変換のために評価するデータ型。</param>
      <returns>この型を変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.FontSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定した型を <see cref="T:System.Double" /> に変換します。</summary>
      <param name="context">コンポーネントのコンテキスト情報 (コンテナーや <see cref="T:System.ComponentModel.PropertyDescriptor" /> など)。</param>
      <param name="culture">書記体系や使用する暦など、カルチャ固有の情報。</param>
      <param name="value">フォント サイズ値に変換される値。</param>
      <returns>変換後のフォント サイズ値を表す <see cref="T:System.Double" /> 値。</returns>
    </member>
    <member name="M:System.Windows.FontSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Double" /> 値を指定した型に変換します。</summary>
      <param name="context">コンポーネントのコンテキスト情報 (コンテナーや <see cref="T:System.ComponentModel.PropertyDescriptor" /> など)。</param>
      <param name="culture">書記体系や使用する暦など、カルチャ固有の情報。</param>
      <param name="value">変換されている <see cref="T:System.Object" />。</param>
      <param name="destinationType">このフォント サイズ値の変換先のデータ型。</param>
      <returns>変換の値である新しい <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Windows.FrameworkCompatibilityPreferences">
      <summary>PresentationFramework アセンブリ内にある WPF 機能に関連する、アプリケーションの動作方法を指定するプロパティが含まれています。</summary>
    </member>
    <member name="P:System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported">
      <summary>アプリケーションが非アクティブな選択項目の色に <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> および <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> プロパティを使用するかどうかを示す値を取得または設定します。</summary>
      <returns>アプリケーションが、選択された非アクティブの項目の色に <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> プロパティと <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> プロパティを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty">
      <summary>データ バインドされた <see cref="T:System.Windows.Controls.TextBox" /> が、ソースの <see cref="P:System.Windows.Controls.TextBox.Text" /> プロパティの値と同じ文字列を表示するかどうかを示す値を取得または設定します。</summary>
      <returns>データ バインドされた <see cref="T:System.Windows.Controls.TextBox" /> が、<see cref="P:System.Windows.Controls.TextBox.Text" /> プロパティのソースの値と同じ文字列を表示する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> インスタンス内で失敗したコピーまたは切り取り操作が <see cref="T:System.Runtime.InteropServices.ExternalException" /> という結果になるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> インスタンスで失敗したコピーまたは切り取り操作が <see cref="T:System.Runtime.InteropServices.ExternalException" /> という結果の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.FrameworkContentElement">
      <summary>
        <see cref="T:System.Windows.FrameworkContentElement" /> は、<see cref="T:System.Windows.ContentElement" /> 基底クラスの WPF フレームワーク レベルの実装および拡張です。 <see cref="T:System.Windows.FrameworkContentElement" /> は、補足の入力 API (ツールヒントやコンテキスト メニューなど)、ストーリーボード、データ バインディング用のデータ コンテキスト、スタイルのサポート、および論理ツリーのヘルパー API に関するサポートを追加します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.#ctor">
      <summary>
        <see cref="T:System.Windows.FrameworkContentElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)">
      <summary>指定した要素をこの要素の子として追加します。</summary>
      <param name="child">追加される子要素。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginInit">
      <summary>要素が初期化される前に呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
      <summary>指定したストーリーボードに含まれるアクションのシーケンスを開始します。</summary>
      <param name="storyboard">開始するストーリーボード。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>プロパティが既にアニメーション化されていた場合に行う処理を指定するオプションを使用して、指定したストーリーボードに含まれるアクションのシーケンスを開始します。</summary>
      <param name="storyboard">開始するストーリーボード。</param>
      <param name="handoffBehavior">ストーリーボードに記述されたプロパティが既にアニメーション化されている場合に使用する動作を表す列挙値。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>開始後のアニメーションの制御の状態を指定して、指定したストーリーボードに含まれるアクションのシーケンスを開始します。</summary>
      <param name="storyboard">開始するストーリーボード。</param>
      <param name="handoffBehavior">ストーリーボードに記述されたプロパティが既にアニメーション化されている場合に使用する、動作を表す列挙型の値。</param>
      <param name="isControllable">アニメーションを起動した後に、アニメーションを制御できるかどうか (一時停止できるかどうか) を宣言します。</param>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.BindingGroup">
      <summary>要素に使用される <see cref="T:System.Windows.Data.BindingGroup" /> を取得または設定します。</summary>
      <returns>要素に使用される <see cref="T:System.Windows.Data.BindingGroup" />。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.BindingGroupProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.BindingGroup" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BringIntoView">
      <summary>この要素が含まれているスクロール可能な領域内に、この要素を表示することを試みます。</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.ContextMenu">
      <summary>この要素内からユーザー インターフェイス (UI) によってコンテキスト メニューが要求された場合に常に表示されるコンテキスト メニュー要素を取得または設定します。</summary>
      <returns>この要素が使用するコンテキスト メニュー。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ContextMenuClosing">
      <summary>要素のコンテキスト メニューが閉じる直前に発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ContextMenuClosingEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> (Routed Events Overview (ルーティング イベントの概要)) を識別します。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ContextMenuOpening">
      <summary>要素のコンテキスト メニューが開くときに発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> (Routed Events Overview (ルーティング イベントの概要)) を識別します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ContextMenuProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.ContextMenu" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Cursor">
      <summary>この要素上にマウス ポインターが置かれたときに表示されるカーソルを取得または設定します。</summary>
      <returns>表示対象のカーソル。 既定値はこの依存関係プロパティごとに <see langword="null" /> として定義されます。 ただし、実行時における実用的な既定値は、さまざまな要因から取得されます。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.CursorProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.DataContext">
      <summary>要素がデータ バインディングに含まれている場合に、その要素のデータ コンテキストを取得または設定します。</summary>
      <returns>データ コンテキストとして使用するオブジェクト。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.DataContextChanged">
      <summary>この要素のデータ コンテキストが変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.DataContextProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.DataContext" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.DefaultStyleKey">
      <summary>このコントロールのスタイル テンプレートをテーマ内で検索するために使用するキーを取得または設定します。</summary>
      <returns>スタイルのキー。 スタイルを設定する要素の <see cref="T:System.Type" /> になっていないと、テーマ スタイルの参照の一部として正しく機能しません。 <see langword="null" /> は、特定のケースで許容される値です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.EndInit">
      <summary>要素が初期化された直後に呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.FindName(System.String)">
      <summary>指定した識別名を持つ要素を検索します。</summary>
      <param name="name">検索対象の要素の名前。</param>
      <returns>要求された要素。 一致する要素が見つからなかった場合は <see langword="null" /> になります。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.FindResource(System.Object)">
      <summary>指定されたキーを使用してリソースを検索し、要求されたリソースが見つからない場合は例外をスローします。</summary>
      <param name="resourceKey">検索するリソースのキー識別子。</param>
      <returns>見つかったリソース。または一致するリソースが見つからなかった場合は <see langword="null" /> (<see langword="null" /> の場合は例外もスローします)。</returns>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">要求されたリソース キーは見つかりませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceKey" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.FocusVisualStyle">
      <summary>この要素がキーボード フォーカスを受け取ったときに適用される外観、効果、またはその他のスタイル特性のカスタマイズを可能にするオブジェクトを取得または設定します。</summary>
      <returns>フォーカスに適用する目的のスタイル。 依存関係プロパティで宣言されている既定値は、空の静的 <see cref="T:System.Windows.Style" /> です。 ただし、実行時の有効値は、多くの場合、コントロールのテーマ サポートによって提供されたスタイルです (ただし、常にそうであるとは限りません)。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.FocusVisualStyleProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.FocusVisualStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.ForceCursor">
      <summary>このインスタンスの <see cref="T:System.Windows.FrameworkContentElement" /> プロパティの宣言に従ってユーザー インターフェイス (UI) がカーソルを描画するように、この <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> で強制するかどうかを示す値を取得または設定します。</summary>
      <returns>この要素の上にあるときのカーソルの表示に、このインスタンスのカーソル設定を強制的に使用する場合は <see langword="true" /> (すべての子要素も対象となります)。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ForceCursorProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.ForceCursor" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)">
      <summary>指定したプロパティのバインディングに関する <see cref="T:System.Windows.Data.BindingExpression" /> を取得します。</summary>
      <param name="dp">バインディングの取得元のターゲット <see cref="T:System.Windows.DependencyProperty" />。</param>
      <returns>ターゲットがデータ バインドされている場合は <see cref="T:System.Windows.Data.BindingExpression" /> を返します。それ以外の場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.GetUIParentCore">
      <summary>ビジュアル親が存在しない場合に、この要素に対する代替の論理上の親を返します。 この場合、<see cref="T:System.Windows.FrameworkContentElement" /> の親の値は常に <see cref="P:System.Windows.FrameworkContentElement.Parent" /> プロパティの値と同じになります。</summary>
      <returns>このメソッドの WPF フレームワーク レベルの実装が非ビジュアルの親接続を持つ場合は <see langword="null" /> 以外の値を返します。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.Initialized">
      <summary>この <see cref="T:System.Windows.FrameworkContentElement" /> が初期化されるときに発生します。 これと同時に、<see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> プロパティの値が <see langword="false" /> (未定義) から <see langword="true" /> に変更されます。</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.InputScope">
      <summary>この <see cref="T:System.Windows.FrameworkContentElement" /> で使用される入力のコンテキストを取得または設定します。</summary>
      <returns>代替の入力メソッドからの入力を解釈する方法を変更する入力スコープ。 既定値は <see langword="null" /> です (コマンドの既定の処理が行われます)。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.InputScopeProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.InputScope" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.IsInitialized">
      <summary>この要素が初期化されているかどうかを示す値を取得します。要素の初期化は、Extensible Application Markup Language (XAML) として読み込むことによって行われる場合と、<see cref="M:System.Windows.FrameworkContentElement.EndInit" /> メソッドを明示的に呼び出すことによって行われる場合があります。</summary>
      <returns>上で挙げた読み込みまたはメソッド呼び出しを通じて要素が初期化される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.IsLoaded">
      <summary>この要素が表示のために読み込まれているかどうかを示す値を取得します。</summary>
      <returns>現在の要素が要素ツリーにアタッチされ、描画されている場合は <see langword="true" />。読み込まれた要素ツリーに要素がアタッチされていない場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Language">
      <summary>個々の要素に適用されるローカリゼーション/グローバリゼーション言語情報を取得または設定します。</summary>
      <returns>この要素のカルチャ情報。 既定値は、<see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> の値が文字列 "en-US" に設定された <see cref="T:System.Windows.Markup.XmlLanguage" /> インスタンスです。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.LanguageProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.Language" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.Loaded">
      <summary>要素のレイアウトやレンダリングが完了し、操作を受け入れる準備が整ったときに発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.LoadedEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkContentElement.Loaded" /> (Routed Events Overview (ルーティング イベントの概要)) を識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.LogicalChildren">
      <summary>この要素の論理上の子要素に対する列挙子を取得します。</summary>
      <returns>この要素の論理上の子要素に対する列挙子。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)">
      <summary>この要素から別の要素にキーボード フォーカスを移動します。</summary>
      <param name="request">フォーカスの移動方向を表す列挙値。</param>
      <returns>フォーカスの移動が成功した場合は <see langword="true" /> が返されます。指定した方向にターゲット要素が存在しない場合は <see langword="false" /> が返されます。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Name">
      <summary>要素の識別名を取得または設定します。 この名前はインスタンス参照を提供するため、XAML の解析中に参照が構築されると、プログラムの分離コード (イベント ハンドラー コードなど) は要素を参照できるようになります。</summary>
      <returns>要素の名前。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.NameProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.Name" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>
        <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> ルーティング イベントが、その経路上でこのクラスに到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>
        <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> ルーティング イベントが、その経路上でこのクラスに到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.GotFocus" /> イベントのクラス ハンドラー。</summary>
      <param name="e">イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.FrameworkContentElement.Initialized" /> イベントを発生させます。 このメソッドは、<see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> が <see langword="true" /> に設定されるたびに呼び出されます。</summary>
      <param name="e">イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.FrameworkContentElement" /> の依存関係プロパティの有効値が更新された場合に必ず呼び出されます。 変更が発生した特定の依存関係プロパティが引数パラメーターで報告されます。 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">変更されたプロパティ (古い値と新しい値を含む) を示すイベント データ。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>この要素で使用されているスタイルが変更された場合に呼び出されます。</summary>
      <param name="oldStyle">元のスタイル。</param>
      <param name="newStyle">新しいスタイル。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
      <summary>
        <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> ルーティング イベントが、その経路上でこのクラスに到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
      <summary>
        <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> ルーティング イベントが、その経路上でこのクラスに到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle">
      <summary>この要素にテーマ スタイルのスタイル プロパティを組み込むかどうかを示す値を取得または設定します。</summary>
      <returns>この要素がテーマ スタイル プロパティを使用しない場合は <see langword="true" /> (スタイルが生成するすべてのプロパティは、ローカルのアプリケーション スタイルに起因するため、テーマ スタイル プロパティは適用されません)。 まずアプリケーション スタイルを適用してから、アプリケーション スタイルで明確に設定されなかったプロパティに対してテーマ スタイルを適用する場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Parent">
      <summary>この要素の論理ツリー内での親を取得します。</summary>
      <returns>この要素の論理上の親。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
      <summary>この要素を基準に、指定したフォーカスの移動方向で次にフォーカスを受け取る要素を特定します。ただし、実際のフォーカスの移動は行われません。 このメソッドはシールされているため、オーバーライドできません。</summary>
      <param name="direction">予想されるフォーカスの変更を決定する方向。</param>
      <returns>フォーカスが実際にスキャンされた場合にフォーカスの移動先となる、次の要素。 この要素を基準に、指定した方向へフォーカスを移動できない場合は、<see langword="null" /> が返されます。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="T:System.Windows.Input.TraversalRequest" /> に、<see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />、<see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />、<see cref="F:System.Windows.Input.FocusNavigationDirection.First" />、<see cref="F:System.Windows.Input.FocusNavigationDirection.Last" /> のいずれかの方向が指定されました。 これらの方向は、<see cref="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> に対しては有効ではありません (<see cref="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> に対しては有効です)。</exception>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)">
      <summary>
        <see cref="T:System.Windows.NameScope" /> の登録メソッドへのアクセスを簡略化するアクセサーを提供します。</summary>
      <param name="name">指定した名前オブジェクトの割り当てに使用する名前。</param>
      <param name="scopedElement">割り当て対象のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)">
      <summary>この要素の論理ツリーから、指定した要素を削除します。</summary>
      <param name="child">削除する要素。</param>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Resources">
      <summary>ローカルで定義された現在のリソース ディクショナリを取得または設定します。</summary>
      <returns>ローカルで定義された現在のリソース。 これはリソース ディクショナリです。ディクショナリ内のリソースにはキーでアクセスします。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)">
      <summary>指定したソース プロパティ名をデータ ソースへのパスの修飾として使用して、この要素にバインディングを添付します。</summary>
      <param name="dp">バインドされているプロパティを識別します。</param>
      <param name="path">ソース プロパティ名、またはバインドに使用されているプロパティへのパス。</param>
      <returns>バインドの条件を記録します。 この戻り値は、エラーをチェックするために役立ちます。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>指定したバインディング オブジェクトに基づいて、この要素にバインドをアタッチします。</summary>
      <param name="dp">バインドされているプロパティを識別します。</param>
      <param name="binding">データ バインディングを表します。</param>
      <returns>バインドの条件を記録します。 この戻り値は、エラーをチェックするために役立ちます。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
      <summary>指定した名前のリソースを検索し、指定したプロパティにそのリソースへのリソース参照を設定します。</summary>
      <param name="dp">リソースのバインド先のプロパティ。</param>
      <param name="name">リソースの名前。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.ShouldSerializeResources">
      <summary>シリアル化プロセスが、このクラスのインスタンスに関する <see cref="P:System.Windows.FrameworkContentElement.Resources" /> プロパティの内容をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.FrameworkContentElement.Resources" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.ShouldSerializeStyle">
      <summary>シリアル化プロセスが、このクラスのインスタンスに関する <see cref="P:System.Windows.FrameworkContentElement.Style" /> プロパティの内容をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.FrameworkContentElement.Style" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.SourceUpdated">
      <summary>この要素のバインディングに参加しているデータ ソースが変更されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Style">
      <summary>この要素が使用するスタイルを取得または設定します。</summary>
      <returns>要素に適用される既定以外のスタイル (存在する場合)。 それ以外の場合は <see langword="null" />。 既定で構築された <see cref="T:System.Windows.FrameworkContentElement" /> の既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.StyleProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.Style" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>このメンバーの説明については、<see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> メソッドのトピックを参照してください。</summary>
      <param name="propertyName">要求されたアンビエント プロパティの名前。</param>
      <returns>
        <paramref name="propertyName" /> を使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Tag">
      <summary>この要素に関するユーザー定義情報の格納に使用できる任意のオブジェクト値を取得または設定します。</summary>
      <returns>任意の値。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.TagProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.Tag" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.TargetUpdated">
      <summary>この要素のバインドに関連する対象プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.TemplatedParent">
      <summary>この要素の親テンプレートへの参照を取得します。 このプロパティは、要素がテンプレートによって作成されていない場合は無効です。</summary>
      <returns>この要素が作成される原因となった <see cref="T:System.Windows.FrameworkTemplate" /><see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> が属する要素。 この値は、 <see langword="null" />です。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.ToolTip">
      <summary>ユーザー インターフェイス (UI) でこの要素に対して表示されるツールヒント オブジェクトを取得または設定します。</summary>
      <returns>ツールヒント オブジェクト。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ToolTipClosing">
      <summary>要素のツールヒントが閉じる直前に発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ToolTipClosingEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> (Routed Events Overview (ルーティング イベントの概要)) を識別します。</summary>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ToolTipOpening">
      <summary>要素のツールヒントが開かれたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ToolTipOpeningEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> (Routed Events Overview (ルーティング イベントの概要)) を識別します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ToolTipProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkContentElement.ToolTip" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.TryFindResource(System.Object)">
      <summary>指定されたキーを使用してリソースを検索し、見つかった場合はそのリソースを返します。</summary>
      <param name="resourceKey">検索するリソースのキー識別子。</param>
      <returns>見つかったリソース。 リソースが見つからなかった場合は、<see langword="null" /> が返されます。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.Unloaded">
      <summary>読み込まれた要素の要素ツリーから要素が削除されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.UnloadedEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkContentElement.Unloaded" /> (Routed Events Overview (ルーティング イベントの概要)) を識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)">
      <summary>
        <see cref="T:System.Windows.NameScope" /> の登録解除メソッドへのアクセスを簡略化します。</summary>
      <param name="name">現在のスコープから削除する名前とオブジェクトのペアの名前。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.UpdateDefaultStyle">
      <summary>現在の <see cref="T:System.Windows.FrameworkContentElement" /> に既定のスタイルを再度適用します。</summary>
    </member>
    <member name="T:System.Windows.FrameworkElement">
      <summary>WPF フレームワーク レベルのプロパティ、イベント、およびメソッドのセットを Windows Presentation Foundation (WPF) 要素で利用できます。 このクラスは WPF フレームワーク レベルの実装として用意されており、<see cref="T:System.Windows.UIElement" /> によって定義される WPF コア レベル API 上に構築されています。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.#ctor">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualHeight">
      <summary>この要素の描画時の高さを取得します。</summary>
      <returns>要素の高さ (デバイスに依存しない単位 (1 単位は 1/96 インチ) の値)。 既定値は 0 (ゼロ) です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualHeightProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualWidth">
      <summary>この要素の描画時の幅を取得します。</summary>
      <returns>要素の幅 (デバイスに依存しない単位 (1 単位は 1/96 インチ) の値)。 既定値は 0 (ゼロ) です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualWidthProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
      <summary>指定したオブジェクトをこの要素の論理ツリーに追加します。</summary>
      <param name="child">追加される子要素。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ApplyTemplate">
      <summary>必要に応じて現在のテンプレートのビジュアル ツリーを構築し、この呼び出しによってビジュアル ツリーが再構築されたかどうかを示す値を返します。</summary>
      <returns>ビジュアルがツリーに追加された場合は <see langword="true" />、それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
      <summary>
        <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> (<see cref="T:System.Windows.UIElement" /> で仮想メソッドとして定義されています) を実装し、その実装をシールします。</summary>
      <param name="finalRect">この要素が要素自体と子を配置するために使用する親の末尾の領域。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
      <summary>派生クラスでオーバーライドされると、子要素を配置し、<see cref="T:System.Windows.FrameworkElement" /> 派生クラスのサイズを決定します。</summary>
      <param name="finalSize">この要素が要素自体と子を配置するために使用する親の末尾の領域。</param>
      <returns>使用する実際のサイズ。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginInit">
      <summary>この要素の初期化プロセスを開始します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
      <summary>指定したストーリーボードに含まれるアクションのシーケンスを開始します。</summary>
      <param name="storyboard">開始するストーリーボード。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>プロパティが既にアニメーション化されていた場合にどうするかを指定するオプションを使用して、指定したストーリーボードに含まれるアクションのシーケンスを開始します。</summary>
      <param name="storyboard">開始するストーリーボード。</param>
      <param name="handoffBehavior">ストーリーボードに記述されたプロパティが既にアニメーション化されている場合に使用する動作を表す列挙値。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>開始後のアニメーションの制御の状態を指定して、指定したストーリーボードに含まれるアクションのシーケンスを開始します。</summary>
      <param name="storyboard">開始するストーリーボード。</param>
      <param name="handoffBehavior">ストーリーボードに記述されたプロパティが既にアニメーション化されている場合に使用する動作を表す列挙値。</param>
      <param name="isControllable">アニメーションを起動した後に、アニメーションを制御できるかどうか (一時停止できるかどうか) を宣言します。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.BindingGroup">
      <summary>要素に使用される <see cref="T:System.Windows.Data.BindingGroup" /> を取得または設定します。</summary>
      <returns>要素に使用される <see cref="T:System.Windows.Data.BindingGroup" />。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.BindingGroupProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.BindingGroup" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.BringIntoView">
      <summary>この要素が含まれているスクロール可能な領域内に、この要素を表示することを試みます。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
      <summary>この要素が含まれているスクロール可能な領域内で、この要素の指定したサイズの領域が表示されるように試みます。</summary>
      <param name="targetRectangle">指定した、表示する必要がある要素のサイズ。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.ContextMenu">
      <summary>この要素内から ユーザー インターフェイス (UI) によってコンテキスト メニューが要求された場合に常に表示されるコンテキスト メニュー要素を取得または設定します。</summary>
      <returns>この要素に割り当てられたコンテキスト メニュー。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.ContextMenuClosing">
      <summary>要素のコンテキスト メニューが閉じる直前に発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ContextMenuClosingEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.ContextMenuOpening">
      <summary>要素のコンテキスト メニューが開くときに発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ContextMenuProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Cursor">
      <summary>この要素上にマウス ポインターが置かれたときに表示されるカーソルを取得または設定します。</summary>
      <returns>表示対象のカーソル。 既定値はこの依存関係プロパティごとに <see langword="null" /> として定義されます。 ただし、実行時における実用的な既定値は、さまざまな要因から取得されます。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.CursorProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Cursor" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.DataContext">
      <summary>要素がデータ バインディングに含まれている場合に、その要素のデータ コンテキストを取得または設定します。</summary>
      <returns>データ コンテキストとして使用するオブジェクト。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.DataContextChanged">
      <summary>この要素のデータ コンテキストが変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.DataContextProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.DataContext" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.DefaultStyleKey">
      <summary>テーマ スタイルを使用または定義するときに、このコントロールのスタイルを参照するために使用されるキーを取得または設定します。</summary>
      <returns>スタイルのキー。 テーマ スタイル参照の一部として正常に機能するために、この値は、スタイルを設定するコントロールの <see cref="T:System.Type" /> である必要があります。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.DefaultStyleKeyProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.DefaultStyleKey" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.EndInit">
      <summary>この要素の初期化プロセスが完了したことを示します。</summary>
      <exception cref="T:System.InvalidOperationException">以前に <see cref="M:System.Windows.FrameworkElement.EndInit" /> が呼び出されていないこの要素で、<see cref="M:System.Windows.FrameworkElement.BeginInit" /> が呼び出されました。</exception>
    </member>
    <member name="M:System.Windows.FrameworkElement.FindName(System.String)">
      <summary>指定した識別名を持つ要素を検索します。</summary>
      <param name="name">要求された要素の名前。</param>
      <returns>要求された要素。 一致する要素が見つからなかった場合は <see langword="null" /> になります。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.FindResource(System.Object)">
      <summary>指定したキーを持つリソースを検索します。要求したリソースが見つからない場合は例外がスローされます。</summary>
      <param name="resourceKey">要求したリソースのキー識別子。</param>
      <returns>要求されたリソース。 指定したキーを持つリソースが見つからなかった場合は例外がスローされます。 その場合は <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 値が返されることもあります。</returns>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">
        <paramref name="resourceKey" /> が見つからず、<see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> イベントのイベント ハンドラーが存在しません。

または -
<paramref name="resourceKey" /> が見つからず、<see cref="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" /> イベントで <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> プロパティが <see langword="false" /> です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceKey" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.FrameworkElement.FlowDirection">
      <summary>レイアウトを制御する親要素内でのテキストやその他の ユーザー インターフェイス (UI) 要素のフロー方向を取得または設定します。</summary>
      <returns>テキストやその他の UI 要素の親要素内でのフロー方向を示す列挙値。 既定値は <see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.FlowDirectionProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.FocusVisualStyle">
      <summary>この要素がキーボード フォーカスを受け取ったときに適用される外観、効果、またはその他のスタイル特性のカスタマイズを可能にするプロパティを取得または設定します。</summary>
      <returns>フォーカスに適用する目的のスタイル。 依存関係プロパティで宣言されている既定値は、空の静的 <see cref="T:System.Windows.Style" /> です。 ただし、実行時の有効値は、多くの場合、コントロールのテーマ サポートによって提供されたスタイルです (ただし、常にそうであるとは限りません)。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.FocusVisualStyleProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.FocusVisualStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.ForceCursor">
      <summary>この <see cref="T:System.Windows.FrameworkElement" /> でカーソルを <see cref="P:System.Windows.FrameworkElement.Cursor" /> プロパティの宣言に従って描画するようにユーザー インターフェイス (UI) を強制するかどうかを示す値を取得または設定します。</summary>
      <returns>この要素の上にあるときのカーソルの表示に <see cref="P:System.Windows.FrameworkElement.Cursor" /> の現在の設定を強制的に使用する場合は <see langword="true" /> (すべての子要素を含む)。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ForceCursorProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.ForceCursor" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
      <summary>指定したプロパティでのバインディングを表す <see cref="T:System.Windows.Data.BindingExpression" /> を返します。</summary>
      <param name="dp">バインディングを取得するターゲット <see cref="T:System.Windows.DependencyProperty" />。</param>
      <returns>ターゲット プロパティにアクティブなバインディングが設定されている場合は <see cref="T:System.Windows.Data.BindingExpression" />。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)">
      <summary>指定した <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 添付プロパティの値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> を返す要素。</param>
      <returns>列挙体の値としての要求されたフローの方向。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
      <summary>クリッピング マスクのジオメトリを返します。 クリッピング マスクは、利用可能な表示領域より大きな要素をレイアウト システムが配置しようとすると適用されます。</summary>
      <param name="layoutSlotSize">ビジュアル プレゼンテーションを行う要素の部分のサイズ。</param>
      <returns>クリッピング ジオメトリ。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
      <summary>インスタンス化された <see cref="T:System.Windows.Controls.ControlTemplate" /> のビジュアル ツリー内にある名前付き要素を返します。</summary>
      <param name="childName">検索する子の名前。</param>
      <returns>要求された要素。 要求した名前の要素が存在しない場合は <see langword="null" /> になります。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetUIParentCore">
      <summary>ビジュアル親が存在しない場合に、この要素に対する代替の論理上の親を返します。</summary>
      <returns>このメソッドの WPF フレームワーク レベルの実装が非ビジュアルの親接続を持つ場合は <see langword="null" /> 以外の値を返します。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
      <summary>
        <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /> をオーバーライドし、子要素のコレクションから指定したインデックス位置の子を返します。</summary>
      <param name="index">コレクション内の要求された子要素の 0 から始まるインデックス。</param>
      <returns>要求された子要素。 これは <see langword="null" /> を返しません。指定されたインデックスが範囲外の場合、例外がスローされます。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Height">
      <summary>要素の推奨される高さを取得または設定します。</summary>
      <returns>要素の高さ (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 既定値は <see cref="F:System.Double.NaN" /> です。 この値は 0.0 以上にする必要があります。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HeightProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Height" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.HorizontalAlignment">
      <summary>この要素が、Panel またはアイテム コントロールのような親要素内に構成されるときに適用される水平方向の配置特性を取得または設定します。</summary>
      <returns>列挙体の値としての水平方向の配置設定。 既定値は、<see cref="F:System.Windows.HorizontalAlignment.Stretch" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.InheritanceBehavior">
      <summary>プロパティ値の継承、リソース キーのルックアップ、および RelativeSource FindAncestor 検索のスコープの制限を取得または設定します。</summary>
      <returns>列挙体の値。 既定値は、<see cref="F:System.Windows.InheritanceBehavior.Default" /> です。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.Initialized">
      <summary>この <see cref="T:System.Windows.FrameworkElement" /> が初期化されるときに発生します。 このイベントと同時に、<see cref="P:System.Windows.FrameworkElement.IsInitialized" /> プロパティの値が <see langword="false" /> (未定義) から <see langword="true" /> に変更されます。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.InputScope">
      <summary>この <see cref="T:System.Windows.FrameworkElement" /> で使用される入力のコンテキストを取得または設定します。</summary>
      <returns>代替の入力メソッドからの入力を解釈する方法を変更する入力スコープ。 既定値は <see langword="null" /> です (コマンドの既定の処理が行われます)。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.InputScopeProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.InputScope" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.IsInitialized">
      <summary>この要素が、XAML プロセッサによって処理されている間、またはこの要素の <see cref="M:System.Windows.FrameworkElement.EndInit" /> メソッドが明示的に呼び出されたときに初期化されたかどうかを示す値を取得します。</summary>
      <returns>前述の XAML 処理やメソッド呼び出しごとに要素が初期化された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.IsLoaded">
      <summary>この要素が表示のために読み込まれているかどうかを示す値を取得します。</summary>
      <returns>現在の要素が要素ツリーにアタッチされている場合は <see langword="true" />。読み込まれた要素ツリーに要素がアタッチされていない場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Language">
      <summary>要素に適用されるローカライズ/グローバリゼーション言語情報を取得または設定します。</summary>
      <returns>この要素の言語情報。 既定値は、<see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> 値が文字列 "en-US" に設定されている <see cref="T:System.Windows.Markup.XmlLanguage" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.LanguageProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Language" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.LayoutTransform">
      <summary>レイアウトの実行時にこの要素に適用するグラフィック変換を取得または設定します。</summary>
      <returns>この要素で使用する変換。 既定値は、<see cref="P:System.Windows.Media.Transform.Identity" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.LayoutTransformProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.LayoutTransform" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.Loaded">
      <summary>要素のレイアウトやレンダリングが完了し、操作を受け入れる準備が整ったときに発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.LoadedEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.Loaded" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.LogicalChildren">
      <summary>この要素の論理上の子要素に対する列挙子を取得します。</summary>
      <returns>この要素の論理上の子要素に対する列挙子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Margin">
      <summary>要素の外側の余白を取得または設定します。</summary>
      <returns>要素の余白の値を提供します。 既定値は、すべてのプロパティが 0 (ゼロ) の <see cref="T:System.Windows.Thickness" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MarginProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Margin" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxHeight">
      <summary>要素の高さの最大値を取得または設定します。</summary>
      <returns>要素の最大高 (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 既定値は <see cref="F:System.Double.PositiveInfinity" /> です。 この値は、0.0 以上の任意の値を指定できます。 <see cref="F:System.Double.PositiveInfinity" /> も有効です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxHeightProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxWidth">
      <summary>要素の幅の最大値を取得または設定します。</summary>
      <returns>要素の最大の幅 (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 既定値は <see cref="F:System.Double.PositiveInfinity" /> です。 この値は、0.0 以上の任意の値を指定できます。 <see cref="F:System.Double.PositiveInfinity" /> も有効です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxWidthProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> の測定パス レイアウト システムの基本動作を実装します。</summary>
      <param name="availableSize">親要素が子要素に与えることが利用可能なサイズ。</param>
      <returns>レイアウト内のこの要素の必要なサイズ。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
      <summary>派生クラスでオーバーライドされると、子要素に必要なレイアウトのサイズを測定し、<see cref="T:System.Windows.FrameworkElement" /> 派生クラスのサイズを決定します。</summary>
      <param name="availableSize">この要素が子要素に提供できる使用可能なサイズ。 あらゆるコンテンツに要素がサイズを合わせることを示す値として、無限大を指定できます。</param>
      <returns>子要素のサイズの計算に基づいて、この要素が判断したレイアウト時に必要なサイズ。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinHeight">
      <summary>要素の高さの最小値を取得または設定します。</summary>
      <returns>要素の高さの最小値 (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 既定値は 0.0 です。 この値は、0.0 以上の任意の値を指定できます。 ただし、<see cref="F:System.Double.PositiveInfinity" /> は有効でなく、<see cref="F:System.Double.NaN" /> も有効ではありません。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinHeightProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.MinHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinWidth">
      <summary>要素の幅の最小値を取得または設定します。</summary>
      <returns>要素の幅の最小値 (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 既定値は 0.0 です。 この値は、0.0 以上の任意の値を指定できます。 ただし、<see cref="F:System.Double.PositiveInfinity" /> と <see cref="F:System.Double.NaN" /> は無効です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinWidthProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.MinWidth" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
      <summary>指定した移動方向の別の要素にこの要素からキーボード フォーカスを移動します。</summary>
      <param name="request">フォーカスの移動方向を表す列挙値。</param>
      <returns>フォーカスの移動が成功した場合は <see langword="true" /> が返されます。指定した方向にターゲット要素が存在しない場合や、ターゲット要素にキーボード フォーカスを設定できなかった場合は、<see langword="false" /> が返されます。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Name">
      <summary>要素の識別名を取得または設定します。 この名前は参照を提供するため、イベント ハンドラー コードなどの分離コードは、XAML プロセッサによる処理の際に、構築された後のマークアップ要素を参照できます。</summary>
      <returns>要素の名前。 既定値は空の文字列です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.NameProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Name" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされると、アプリケーション コードまたは内部プロセスが <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> を呼び出すたびに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> ルーティング イベントが、その経路上でこのクラスに到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> ルーティング イベントが、その経路上でこのクラスに到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.UIElement.GotFocus" /> イベントが、その経路上でこの要素に到達するたびに呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.Initialized" /> イベントを発生させます。 このメソッドは、<see cref="P:System.Windows.FrameworkElement.IsInitialized" /> が内部で <see langword="true" /> に設定されるたびに呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.FrameworkElement" /> の依存関係プロパティの有効値が更新された場合に必ず呼び出されます。 変更が発生した特定の依存関係プロパティが引数パラメーターで報告されます。 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">変更されたプロパティと、新旧の値を記述するイベント データ。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>指定した情報を最終的なイベント データの一部として使用して、<see cref="E:System.Windows.FrameworkElement.SizeChanged" /> イベントを発生させます。</summary>
      <param name="sizeInfo">変更に関係する、古いサイズと新しいサイズの詳細。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>この要素で使用されているスタイルが変更された場合に呼び出されます。スタイルが変更されるとレイアウトが無効になります。</summary>
      <param name="oldStyle">元のスタイル。</param>
      <param name="newStyle">新しいスタイル。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
      <summary>未処理の <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> ルーティング イベントが、その経路上でこのクラスに到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> ルーティング イベントが、その経路上でこのクラスに到達するたびに呼び出されます。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>ビジュアル ツリー内のこの要素の親が変更されたときに呼び出されます。 <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" /> をオーバーライドします。</summary>
      <param name="oldParent">前の親要素。 <see langword="null" /> は要素に前のビジュアル親が存在しないことを示します。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
      <summary>この要素に、テーマのスタイルのスタイル プロパティが含まれるかどうかを示す値を取得または設定します。</summary>
      <returns>この要素がテーマ スタイル プロパティを使用しない場合は <see langword="true" /> (スタイルが生成するすべてのプロパティは、ローカルのアプリケーション スタイルに起因するため、テーマ スタイル プロパティは適用されません)。 まずアプリケーション スタイルを適用してから、アプリケーション スタイルで明確に設定されなかったプロパティに対してテーマ スタイルを適用する場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.OverridesDefaultStyleProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Parent">
      <summary>この要素の論理上の親要素を取得します。</summary>
      <returns>この要素の論理上の親。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> の特殊化されたサブクラスでインクリメンタル レイアウトの実装をサポートします。 レイアウト中に親のメジャーまたは整列パスに影響を与えるものとしてメタデータ内でマークされているプロパティを子要素が無効にすると、<see cref="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" /> が呼び出されます。</summary>
      <param name="child">変更を報告している子要素。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
      <summary>この要素を基準に、指定したフォーカスの移動方向で次にフォーカスを受け取る要素を特定します。ただし、実際のフォーカスの移動は行われません。</summary>
      <param name="direction">予想されるフォーカスの変更を決定する方向。</param>
      <returns>フォーカスが実際にスキャンされた場合にフォーカスの移動先となる、次の要素。 この要素を基準に、指定した方向へフォーカスを移動できない場合は、<see langword="null" /> が返されます。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="T:System.Windows.Input.TraversalRequest" /> に、<see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />、<see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />、<see cref="F:System.Windows.Input.FocusNavigationDirection.First" />、<see cref="F:System.Windows.Input.FocusNavigationDirection.Last" /> のいずれかの方向が指定されました。 これらの方向は、<see cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> に対しては有効ではありません (<see cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> に対しては有効です)。</exception>
    </member>
    <member name="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
      <summary>
        <see cref="T:System.Windows.NameScope" /> の登録メソッドへのアクセスを簡略化するアクセサーを提供します。</summary>
      <param name="name">指定した名前オブジェクトの割り当てに使用する名前。</param>
      <param name="scopedElement">割り当て対象のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
      <summary>指定されたオブジェクトをこの要素の論理ツリーから削除します。 <see cref="T:System.Windows.FrameworkElement" /> は、この削除との同期を維持するために影響を受ける論理ツリーの親ポインターを更新します。</summary>
      <param name="child">削除する要素。</param>
    </member>
    <member name="E:System.Windows.FrameworkElement.RequestBringIntoView">
      <summary>この要素で <see cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" /> が呼び出されると発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.RequestBringIntoViewEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Resources">
      <summary>ローカルで定義されたリソース ディクショナリを取得または設定します。</summary>
      <returns>ローカルで定義された現在のリソース ディクショナリ。各リソースにはキーでアクセスできます。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
      <summary>指定したソース プロパティ名をデータ ソースへのパスの修飾として使用して、この要素にバインディングを添付します。</summary>
      <param name="dp">バインディングを確立する必要がある対象のプロパティを識別します。</param>
      <param name="path">ソース プロパティ名、またはバインドに使用されているプロパティへのパス。</param>
      <returns>バインドの条件を記録します。 この戻り値は、エラーをチェックするために役立ちます。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>指定したバインディング オブジェクトに基づいて、この要素にバインドをアタッチします。</summary>
      <param name="dp">バインドを確立する必要があるプロパティを識別します。</param>
      <param name="binding">データ バインディングの詳細を表します。</param>
      <returns>バインドの条件を記録します。 この戻り値は、エラーをチェックするために役立ちます。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)">
      <summary>指定された要素の <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 添付プロパティの値を設定します。</summary>
      <param name="element">フロー方向を指定する要素。</param>
      <param name="value">方向を指定する列挙値。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
      <summary>指定した名前のリソースを検索し、指定したプロパティにそのリソースへのリソース参照を設定します。</summary>
      <param name="dp">リソースのバインド先のプロパティ。</param>
      <param name="name">リソースの名前。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ShouldSerializeResources">
      <summary>シリアル化プロセスが、<see cref="P:System.Windows.FrameworkElement.Resources" /> プロパティの内容をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.FrameworkElement.Resources" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
      <summary>シリアル化プロセスが、<see cref="P:System.Windows.FrameworkElement.Style" /> プロパティの内容をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.FrameworkElement.Style" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
      <summary>シリアル化プロセスが、<see cref="P:System.Windows.FrameworkElement.Triggers" /> プロパティの内容をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.FrameworkElement.Triggers" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.SizeChanged">
      <summary>この要素の <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> プロパティまたは <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.SizeChangedEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.SourceUpdated">
      <summary>この要素の既存のプロパティ バインディングのソース値が変更されると発生します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Style">
      <summary>この要素が使用するスタイルを、表示されるときに取得または設定します。</summary>
      <returns>要素に適用される既定以外のスタイル (存在する場合)。 それ以外の場合は <see langword="null" />。 既定で構築された <see cref="T:System.Windows.FrameworkElement" /> の既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.StyleProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Style" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>このメンバーの説明については、<see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> メソッドのトピックを参照してください。</summary>
      <param name="propertyName">要求されたアンビエント プロパティの名前。</param>
      <returns>
        <paramref name="propertyName" /> を使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Tag">
      <summary>この要素に関するユーザー定義情報の格納に使用できる任意のオブジェクト値を取得または設定します。</summary>
      <returns>任意の値。 このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.TagProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Tag" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.TargetUpdated">
      <summary>この要素のプロパティ バインディングのターゲット値が変更されると発生します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.TemplatedParent">
      <summary>この要素の親テンプレートへの参照を取得します。 このプロパティは、要素がテンプレートによって作成されていない場合は無効です。</summary>
      <returns>この要素が作成される原因となった <see cref="T:System.Windows.FrameworkTemplate" /><see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> が属する要素。 この値は、 <see langword="null" />です。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ToolTip">
      <summary>ユーザー インターフェイス (UI) でこの要素に対して表示されるツールヒント オブジェクトを取得または設定します。</summary>
      <returns>ツールヒント オブジェクト。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.ToolTipClosing">
      <summary>要素のツールヒントが閉じる直前に発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ToolTipClosingEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.ToolTipOpening">
      <summary>要素のツールヒントが開かれたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ToolTipOpeningEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ToolTipProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.ToolTip" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Triggers">
      <summary>この要素に直接、または子要素で設定されているトリガーのコレクションを取得します。</summary>
      <returns>厳密に型指定された <see cref="T:System.Windows.Trigger" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
      <summary>指定されたキーを使用してリソースを検索し、見つかった場合はそのリソースを返します。</summary>
      <param name="resourceKey">検索するリソースのキー識別子。</param>
      <returns>見つかったリソース。指定した <paramref name="key" /> のリソースが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.Unloaded">
      <summary>読み込まれた要素の要素ツリーから要素が削除されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.UnloadedEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.Unloaded" /> ルーティング イベントを識別します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
      <summary>
        <see cref="T:System.Windows.NameScope" /> の登録解除メソッドへのアクセスを簡略化します。</summary>
      <param name="name">現在のスコープから削除する名前とオブジェクトのペアの名前。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.UpdateDefaultStyle">
      <summary>現在の <see cref="T:System.Windows.FrameworkElement" /> に既定のスタイルを再度適用します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.UseLayoutRounding">
      <summary>レイアウトの間に、この要素のサイズおよび位置にレイアウトの丸めを適用するかどうかを示す値を取得または設定します。</summary>
      <returns>レイアウトの丸めを適用する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.UseLayoutRoundingProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.UseLayoutRounding" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.VerticalAlignment">
      <summary>この要素が、Panel またはアイテム コントロールのような親要素内に作成されるときに適用される垂直方向の配置特性を取得または設定します。</summary>
      <returns>垂直方向の配置の設定。 既定値は、<see cref="F:System.Windows.VerticalAlignment.Stretch" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.VerticalAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.VisualChildrenCount">
      <summary>この要素内でビジュアル子要素の数を取得します。</summary>
      <returns>この要素のビジュアル子要素の数。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Width">
      <summary>要素の幅を取得または設定します。</summary>
      <returns>要素の幅 (デバイスに依存しない単位 (1 単位は 1/96 インチ) 単位)。 既定値は <see cref="F:System.Double.NaN" /> です。 この値は 0.0 以上にする必要があります。 上限については、「解説」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.WidthProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Width" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.FrameworkElementFactory">
      <summary>テンプレートの作成をサポートします。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor">
      <summary>
        <see cref="T:System.Windows.FrameworkElementFactory" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor(System.String)">
      <summary>生成するテキストを指定して、<see cref="T:System.Windows.FrameworkElementFactory" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="text">生成する文字列。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Windows.FrameworkElementFactory" /> を指定して、<see cref="T:System.Type" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">作成するインスタンスの型。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor(System.Type,System.String)">
      <summary>
        <see cref="T:System.Windows.FrameworkElementFactory" /> と名前を指定して、<see cref="T:System.Type" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">作成するインスタンスの型。</param>
      <param name="name">スタイル識別子。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
      <summary>このファクトリで作成されたインスタンスに、指定したルーティング イベントのイベント ハンドラーを追加します。</summary>
      <param name="routedEvent">処理されるルーティング イベントの識別子オブジェクト。</param>
      <param name="handler">ハンドラーの実装に対する参照。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
      <summary>指定したルーティング イベントのイベント ハンドラーを、このファクトリで作成されたインスタンスに追加します。このメソッドでは、ルーティング イベントがルート上で別の要素により既に処理済みとしてマークされている場合でも、指定したハンドラーを呼び出すかどうかを指定できます。</summary>
      <param name="routedEvent">処理されるルーティング イベントの識別子オブジェクト。</param>
      <param name="handler">ハンドラーの実装に対する参照。</param>
      <param name="handledEventsToo">ルーティング イベントがその引数オブジェクトで既に処理済みとしてマークされている場合にハンドラーを呼び出すかどうかを示す値。 ルーティング イベントが処理済みとしてマークされていてもハンドラーを呼び出す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。 通常、処理済みのルーティング イベントの処理を要求することはありません。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.AppendChild(System.Windows.FrameworkElementFactory)">
      <summary>子ファクトリをこのファクトリに追加します。</summary>
      <param name="child">子として追加する <see cref="T:System.Windows.FrameworkElementFactory" /> オブジェクト。</param>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.FirstChild">
      <summary>最初の子ファクトリを取得します。</summary>
      <returns>最初の子ファクトリである <see cref="T:System.Windows.FrameworkElementFactory" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.IsSealed">
      <summary>このオブジェクトが不変の状態であるかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" />このオブジェクトが不変の状態である場合は。それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Name">
      <summary>テンプレート項目の名前を取得または設定します。</summary>
      <returns>テンプレート識別子である文字列。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.NextSibling">
      <summary>次の兄弟ファクトリを取得します。</summary>
      <returns>次の兄弟ファクトリである <see cref="T:System.Windows.FrameworkElementFactory" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Parent">
      <summary>親の <see cref="T:System.Windows.FrameworkElementFactory" /> を取得します。</summary>
      <returns>親ファクトリである <see cref="T:System.Windows.FrameworkElementFactory" />。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
      <summary>指定したルーティング イベントからイベント ハンドラーを削除します。 これは、このファクトリで作成されたインスタンスに適用されます。</summary>
      <param name="routedEvent">ルーティング イベントの識別子オブジェクト。</param>
      <param name="handler">削除するハンドラー。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>プロパティのデータ バインディングを設定します。</summary>
      <param name="dp">バインドを確立する必要があるプロパティを識別します。</param>
      <param name="binding">バインディングの説明。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
      <summary>子プロパティに動的リソース参照を設定します。</summary>
      <param name="dp">リソースのバインド先のプロパティ。</param>
      <param name="name">リソースの名前。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary>依存関係プロパティの値を設定します。</summary>
      <param name="dp">設定するプロパティの依存関係プロパティ識別子。</param>
      <param name="value">新しい値。</param>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Text">
      <summary>生成するテキスト文字列を取得または設定します。</summary>
      <returns>生成する文字列。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Type">
      <summary>このファクトリが生成するオブジェクトの型を取得または設定します。</summary>
      <returns>このファクトリが生成するオブジェクトの型。</returns>
    </member>
    <member name="T:System.Windows.FrameworkPropertyMetadata">
      <summary>依存関係プロパティのメタデータを報告または適用します。特に、フレームワークに固有のプロパティのシステム特性を追加します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor">
      <summary>
        <see cref="T:System.Windows.FrameworkPropertyMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
      <summary>指定した既定値を使用して、<see cref="T:System.Windows.FrameworkPropertyMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultValue">依存関係プロパティの既定値。通常、特定の型の値として指定されます。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> が <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> に設定されます。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
      <summary>指定した既定値とフレームワーク レベルのメタデータ オプションを使用して、<see cref="T:System.Windows.FrameworkPropertyMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultValue">依存関係プロパティの既定値。通常、特定の型の値として指定されます。</param>
      <param name="flags">メタデータ オプション フラグ (<see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 値の組み合わせ)。 これらのオプションは、システムと対話する依存関係プロパティの特性 (レイアウトやデータ バインディングなど) を指定します。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> が <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> に設定されます。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
      <summary>指定した既定値、フレームワークのメタデータ オプション、および <see cref="T:System.Windows.FrameworkPropertyMetadata" /> コールバックを使用して、<see cref="T:System.Windows.PropertyChangedCallback" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultValue">依存関係プロパティの既定値。通常、特定の型の値として指定されます。</param>
      <param name="flags">メタデータ オプション フラグ (<see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 値の組み合わせ)。 これらのオプションは、システムと対話する依存関係プロパティの特性 (レイアウトやデータ バインディングなど) を指定します。</param>
      <param name="propertyChangedCallback">プロパティの有効値が変更されるときにプロパティ システムによって必ず呼び出されるハンドラー実装への参照。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> が <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> に設定されます。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>指定した既定値、フレームワークのメタデータ オプション、およびコールバックを使用して、<see cref="T:System.Windows.FrameworkPropertyMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultValue">依存関係プロパティの既定値。通常、特定の型として指定されます。</param>
      <param name="flags">メタデータ オプション フラグ (<see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 値の組み合わせ)。 これらのオプションは、システムと対話する依存関係プロパティの特性 (レイアウトやデータ バインディングなど) を指定します。</param>
      <param name="propertyChangedCallback">プロパティの有効値が変更されるときにプロパティ システムによって必ず呼び出されるハンドラー実装への参照。</param>
      <param name="coerceValueCallback">プロパティ システムがこのプロパティに対して <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> を呼び出すときに必ず呼び出されるハンドラー実装への参照。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> が <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> に設定されます。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
      <summary>指定した既定値、フレームワークのメタデータ オプション、指定したコールバック、およびプロパティでのアニメーションを無効にするブール値を使用して、<see cref="T:System.Windows.FrameworkPropertyMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultValue">依存関係プロパティの既定値。通常、特定の型として指定されます。</param>
      <param name="flags">メタデータ オプション フラグ (<see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 値の組み合わせ)。 これらのオプションは、システムと対話する依存関係プロパティの特性 (レイアウトやデータ バインディングなど) を指定します。</param>
      <param name="propertyChangedCallback">プロパティの有効値が変更されるときにプロパティ システムによって必ず呼び出されるハンドラー実装への参照。</param>
      <param name="coerceValueCallback">プロパティ システムがこの依存関係プロパティに対して <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> を呼び出すときに必ず呼び出されるハンドラー実装への参照。</param>
      <param name="isAnimationProhibited">該当するメタデータが適用されるプロパティがプロパティ システムによってアニメーション化されないようにする場合は <see langword="true" />。 このようなプロパティのアニメーション化を試みると、プロパティ システムでランタイム例外が発生します。 プロパティのアニメーション化を許可する場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> が <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> に設定されます。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
      <summary>指定した既定値、フレームワークのメタデータ オプション、指定したコールバック、プロパティでのアニメーションを無効にするブール値、および既定のデータ バインディング更新トリガーを使用して、<see cref="T:System.Windows.FrameworkPropertyMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultValue">依存関係プロパティの既定値。通常、特定の型として指定されます。</param>
      <param name="flags">メタデータ オプション フラグ (<see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 値の組み合わせ)。 これらのオプションは、システムと対話する依存関係プロパティの特性 (レイアウトやデータ バインディングなど) を指定します。</param>
      <param name="propertyChangedCallback">プロパティの有効値が変更されるときにプロパティ システムによって必ず呼び出されるハンドラー実装への参照。</param>
      <param name="coerceValueCallback">プロパティ システムがこのプロパティに対して <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> を呼び出すときに必ず呼び出されるハンドラー実装への参照。</param>
      <param name="isAnimationProhibited">該当するメタデータが適用されるプロパティがプロパティ システムによってアニメーション化されないようにする場合は <see langword="true" />。 このようなプロパティのアニメーション化を試みると、プロパティ システムでランタイム例外が発生します。 既定値は、<see langword="false" /> です。</param>
      <param name="defaultUpdateSourceTrigger">
        <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> が <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> に設定されているバインディングをこのプロパティに対して適用するときに使用する <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> が <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> に設定されます。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary>指定した既定値と <see cref="T:System.Windows.FrameworkPropertyMetadata" /> コールバックを使用して、<see cref="T:System.Windows.PropertyChangedCallback" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultValue">依存関係プロパティの既定値。通常、特定の型の値として指定されます。</param>
      <param name="propertyChangedCallback">プロパティの有効値が変更されるときにプロパティ システムによって必ず呼び出されるハンドラー実装への参照。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> が <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> に設定されます。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>指定した既定値とコールバックを使用して、<see cref="T:System.Windows.FrameworkPropertyMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultValue">依存関係プロパティの既定値。通常、特定の型として指定されます。</param>
      <param name="propertyChangedCallback">プロパティの有効値が変更されるときにプロパティ システムによって必ず呼び出されるハンドラー実装への参照。</param>
      <param name="coerceValueCallback">プロパティ システムがこの依存関係プロパティに対して <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> を呼び出すときに必ず呼び出されるハンドラー実装への参照。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> が <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> に設定されます。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary>指定した <see cref="T:System.Windows.FrameworkPropertyMetadata" /> コールバックを使用して、<see cref="T:System.Windows.PropertyChangedCallback" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyChangedCallback">プロパティの有効値が変更されるときにプロパティ システムによって必ず呼び出されるハンドラー実装への参照。</param>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>指定したコールバックを使用して、<see cref="T:System.Windows.FrameworkPropertyMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyChangedCallback">プロパティの有効値が変更されるときにプロパティ システムによって必ず呼び出されるハンドラー実装への参照。</param>
      <param name="coerceValueCallback">プロパティ システムがこの依存関係プロパティに対して <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> を呼び出すときに必ず呼び出されるハンドラー実装への参照。</param>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
      <summary>レイアウト エンジンの操作中に、依存関係プロパティが配置パスに潜在的に影響するかどうかを示す値を取得または設定します。</summary>
      <returns>このメタデータが存在する依存関係プロパティが配置パスに影響する可能性がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">メタデータがシールされるよう、かつメタデータのプロパティを設定できないように、メタデータは依存関係プロパティの操作に既に適用されています。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
      <summary>レイアウト エンジンの操作中に、依存関係プロパティが測定パスに影響する可能性があるかどうかを示す値を取得または設定します。</summary>
      <returns>このメタデータが存在する依存関係プロパティが測定パスに影響する可能性がある場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">メタデータがシールされるよう、かつメタデータのプロパティを設定できないように、メタデータは依存関係プロパティの操作に既に適用されています。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
      <summary>レイアウト エンジンの操作中に、依存関係プロパティがその親要素のレイアウトの配置パスに潜在的に影響するかどうかを示す値を取得または設定します。</summary>
      <returns>このメタデータが存在する可能性のある依存関係プロパティが特にその親要素の配置パスに影響する可能性がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">メタデータがシールされるよう、かつメタデータのプロパティを設定できないように、メタデータは依存関係プロパティの操作に既に適用されています。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
      <summary>レイアウト エンジンの操作中に、依存関係プロパティがその親要素のレイアウトの測定パスに潜在的に影響するかどうかを示す値を取得または設定します。</summary>
      <returns>このメタデータが存在する依存関係プロパティが特にその親要素の測定パスに影響する可能性がある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">メタデータがシールされるよう、かつメタデータのプロパティを設定できないように、メタデータは依存関係プロパティの操作に既に適用されています。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
      <summary>依存関係プロパティが一般的なレイアウトに何らかの形で影響する (配置や測定に特に影響を与えないが再描画が必要になる) 可能性があるかどうかを示す値を取得または設定します。</summary>
      <returns>このメタデータが存在する依存関係プロパティがレンダリングに影響を与える場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">メタデータがシールされるよう、かつメタデータのプロパティを設定できないように、メタデータは依存関係プロパティの操作に既に適用されています。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
      <summary>プロパティが既定で双方向をバインドするかどうかを示す値を取得または設定します。</summary>
      <returns>既定でこのメタデータが存在する依存関係プロパティが双方向をバインドする場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">メタデータがシールされるよう、かつメタデータのプロパティを設定できないように、メタデータは依存関係プロパティの操作に既に適用されています。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
      <summary>このメタデータを含むプロパティに対して、<see cref="T:System.Windows.Data.UpdateSourceTrigger" /> が <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> に設定されているバインディングを適用するときに使用する <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /> の既定値を取得または設定します。</summary>
      <returns>
        <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /> 以外の列挙値。</returns>
      <exception cref="T:System.ArgumentException">このプロパティが <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /> に設定されています。設定した値は、バインディングで要求されたときの既定値になります。</exception>
      <exception cref="T:System.InvalidOperationException">メタデータがシールされるよう、かつメタデータのプロパティを設定できないように、メタデータは依存関係プロパティの操作に既に適用されています。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.Inherits">
      <summary>依存関係プロパティの値が継承可能かどうかを示す値を取得または設定します。</summary>
      <returns>プロパティ値が継承可能な場合は<see langword="true" /> 、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">メタデータがシールされるよう、かつメタデータのプロパティを設定できないように、メタデータは依存関係プロパティの操作に既に適用されています。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
      <summary>依存関係プロパティのデータ バインディングがサポートされているかどうかを示す値を取得します。</summary>
      <returns>このメタデータが適用される依存関係プロパティでデータ バインドがサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
      <summary>依存関係プロパティがデータ バインディングをサポートしているかどうかを示す値を取得または設定します。</summary>
      <returns>プロパティがデータ バインドをサポートしない場合は<see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">メタデータがシールされるよう、かつメタデータのプロパティを設定できないように、メタデータは依存関係プロパティの操作に既に適用されています。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.Journal">
      <summary>ジャーナル実装の一部としてアプリケーションが格納できる、または格納する必要のあるジャーナル情報がこのプロパティに格納されているかどうか示す値を取得または設定します。</summary>
      <returns>このメタデータが適用される依存関係プロパティに対してジャーナルを実行する必要がある場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">メタデータがシールされるよう、かつメタデータのプロパティを設定できないように、メタデータは依存関係プロパティの操作に既に適用されています。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary>ソース メタデータと基本メタデータのマージを有効にします。</summary>
      <param name="baseMetadata">マージする基本のメタデータ。</param>
      <param name="dp">このメタデータが適用されている依存関係プロパティ。</param>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary>このメタデータがプロパティに適用されたときに呼び出され、メタデータがシールされることを示します。</summary>
      <param name="dp">メタデータが適用された依存関係プロパティ。</param>
      <param name="targetType">該当するメタデータが型固有のメタデータの場合、このメタデータに関連付けられている型。 これが既定のメタデータである場合は、この値に <see langword="null" /> を指定できます。</param>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
      <summary>要素の論理ツリー内の特定のコンテンツ境界にまたがってプロパティ値の継承を評価するかどうかを示す値を取得または設定します。</summary>
      <returns>プロパティ値の継承が特定のコンテンツ境界をまたがる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">メタデータがシールされるよう、かつメタデータのプロパティを設定できないように、メタデータは依存関係プロパティの操作に既に適用されています。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
      <summary>依存関係プロパティのサブプロパティが格納オブジェクトのレンダリングに影響しないかどうかを示す値を取得または設定します。</summary>
      <returns>サブプロパティ値の変更がレンダリングに影響しない場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">メタデータがシールされるよう、かつメタデータのプロパティを設定できないように、メタデータは依存関係プロパティの操作に既に適用されています。</exception>
    </member>
    <member name="T:System.Windows.FrameworkPropertyMetadataOptions">
      <summary>Windows Presentation Foundation (WPF) プロパティ システムの特定の依存関係プロパティに関する、フレームワーク レベルのプロパティの動作の種類を指定します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange">
      <summary>レイアウト構成の配置パスは、この依存関係プロパティに対する値の変更の影響を受けます。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure">
      <summary>レイアウト構成の測定パスは、この依存関係プロパティに対する値の変更の影響を受けます。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsParentArrange">
      <summary>親要素の配置パスは、この依存関係プロパティに対する値の変更の影響を受けます。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsParentMeasure">
      <summary>親要素の測定パスは、この依存関係プロパティに対する値の変更の影響を受けます。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender">
      <summary>レンダリングまたはレイアウト構成 (測定と配置を除く) の一部の側面が、この依存関係プロパティに対する値の変更の影響を受けます。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault">
      <summary>この依存関係プロパティにおけるデータ バインディングの <see cref="T:System.Windows.Data.BindingMode" /> は、既定では <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> に設定されます。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits">
      <summary>この依存関係プロパティの値は、子要素によって継承されます。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.Journal">
      <summary>この依存関係プロパティの値は、ジャーナリング プロセスによって、または Uniform Resource Identifier (URI) によるナビゲーションが発生したときに、保存または復元される必要があります。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.None">
      <summary>オプションは指定されていません。依存関係プロパティは、WPF プロパティ システムの既定の動作を使用します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.NotDataBindable">
      <summary>この依存関係プロパティへのデータ バインディングは許可されません。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.OverridesInheritanceBehavior">
      <summary>この依存関係プロパティの値は、プロパティ値の継承を目的として分けられたツリー全体に適用されます。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender">
      <summary>この依存関係プロパティの値のサブプロパティは、レンダリングのどの側面にも影響しません。</summary>
    </member>
    <member name="T:System.Windows.FrameworkTemplate">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> オブジェクトと <see cref="T:System.Windows.FrameworkContentElement" /> オブジェクトの両方またはいずれかのツリーをインスタンス化できるようにします。</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.#ctor">
      <summary>
        <see cref="T:System.Windows.FrameworkTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)">
      <summary>このテンプレート内で定義された、指定した名前に関連付けられている要素を検索します。</summary>
      <param name="name">文字列名。</param>
      <param name="templatedParent">このテンプレートが適用される <see cref="T:System.Windows.FrameworkElement" /> のコンテキスト。</param>
      <returns>指定した名前に関連付けられている要素。</returns>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.HasContent">
      <summary>最適化されたコンテンツがこのテンプレートに含まれているかどうかを示す値を取得します。</summary>
      <returns>最適化されたコンテンツがこのテンプレートに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.IsSealed">
      <summary>このオブジェクトが不変の状態で変更不可能であるかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" />このオブジェクトが不変の状態である場合は。それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.LoadContent">
      <summary>テンプレートのコンテンツをオブジェクトのインスタンスとして読み込み、コンテンツのルート要素を返します。</summary>
      <returns>コンテンツのルート要素。 これを複数回呼び出すと、別々のインスタンスが返されます。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)">
      <summary>現在の名前スコープに新しい名前とオブジェクトのペアを登録します。</summary>
      <param name="name">登録する名前。</param>
      <param name="scopedElement">指定された名前にマップするオブジェクト。</param>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.Resources">
      <summary>このテンプレートのスコープ内で使用できるリソースのコレクションを取得または設定します。</summary>
      <returns>このテンプレートのスコープ内で使用できるリソース。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.Seal">
      <summary>テンプレートをロックし、変更できないようにします。</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>シリアル化プロセスが、このクラスのインスタンスの <see cref="P:System.Windows.FrameworkTemplate.Resources" /> プロパティの値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <param name="manager">
        <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" />。</param>
      <returns>
        <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.FrameworkTemplate.Resources" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.ShouldSerializeVisualTree">
      <summary>シリアル化プロセスが、このクラスのインスタンスの <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> プロパティの値をシリアル化する必要があるかどうかを示す値を返します。</summary>
      <returns>
        <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.FrameworkTemplate.VisualTree" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)">
      <summary>指定された識別名を持つオブジェクトを返します。</summary>
      <param name="name">要求されているオブジェクトの名前識別子。</param>
      <returns>見つかった場合はオブジェクト。 その名前のオブジェクトが見つからなかった場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>指定されたアンビエント プロパティを現在のスコープで使用できるかどうかを照会します。</summary>
      <param name="propertyName">要求されたアンビエント プロパティの名前。</param>
      <returns>要求されたアンビエント プロパティを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.Template">
      <summary>ライターがテンプレートを定義または適用するときに、テンプレートの XAML ノードを記録または再生するオブジェクトへの参照を取得または設定します。</summary>
      <returns>テンプレートの XAML ノードを記録または再生するオブジェクトへの参照。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.UnregisterName(System.String)">
      <summary>XAML 名前スコープから名前とオブジェクトのマッピングを削除します。</summary>
      <param name="name">削除するマッピングの名前。</param>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>派生クラスでオーバーライドされると、このテンプレートが適用される要素のルールを提供します。</summary>
      <param name="templatedParent">このテンプレートが適用される要素。</param>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.VisualTree">
      <summary>テンプレートのルート ノードを取得または設定します。</summary>
      <returns>テンプレートのルート ノード。</returns>
    </member>
    <member name="T:System.Windows.GridLength">
      <summary>
        <see cref="F:System.Windows.GridUnitType.Star" /> 単位型を明示的にサポートする要素の長さを表します。</summary>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double)">
      <summary>指定した絶対値 (ピクセル単位) を使用して、<see cref="T:System.Windows.GridLength" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="pixels">デバイス非依存ピクセルの数 (96 ピクセル/インチ)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Pixels" /> は、<see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" />、または <see cref="F:System.Double.NaN" /> と同じです。</exception>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double,System.Windows.GridUnitType)">
      <summary>
        <see cref="T:System.Windows.GridLength" /> 構造体の新しいインスタンスを初期化して、保持する値の種類を指定します。</summary>
      <param name="value">
        <see cref="T:System.Windows.GridLength" /> のこのインスタンスの初期値。</param>
      <param name="type">
        <see cref="T:System.Windows.GridUnitType" /> のこのインスタンスに保持された <see cref="T:System.Windows.GridLength" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> は、<see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" />、または <see cref="F:System.Double.NaN" /> と同じです。</exception>
    </member>
    <member name="P:System.Windows.GridLength.Auto">
      <summary>サイズがコンテンツ オブジェクトのサイズ プロパティによって決まる値を保持する <see cref="T:System.Windows.GridLength" /> のインスタンスを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.GridLength" /> プロパティが <see cref="P:System.Windows.GridLength.GridUnitType" /> に設定された <see cref="F:System.Windows.GridUnitType.Auto" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Object)">
      <summary>指定したオブジェクトが現在の <see cref="T:System.Windows.GridLength" /> インスタンスと等しいかどうかを判断します。</summary>
      <param name="oCompare">現在のインスタンスと比較するオブジェクト。</param>
      <returns>指定したオブジェクトが現在のインスタンスと同じ値および <see cref="T:System.Windows.GridUnitType" /> を保持している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Windows.GridLength)">
      <summary>指定した <see cref="T:System.Windows.GridLength" /> が現在の <see cref="T:System.Windows.GridLength" /> と等しいかどうかを示します。</summary>
      <param name="gridLength">現在のインスタンスと比較する <see cref="T:System.Windows.GridLength" /> 構造体。</param>
      <returns>指定した <see cref="T:System.Windows.GridLength" /> が現在のインスタンスと同じ値および <see cref="P:System.Windows.GridLength.GridUnitType" /> を保持している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.GridLength.GetHashCode">
      <summary>
        <see cref="T:System.Windows.GridLength" /> のハッシュ コードを取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.GridLength" /> 構造体のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.GridLength.GridUnitType">
      <summary>
        <see cref="T:System.Windows.GridUnitType" /> の関連付けられている <see cref="T:System.Windows.GridLength" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.GridUnitType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Windows.GridUnitType.Auto" /> です。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAbsolute">
      <summary>
        <see cref="T:System.Windows.GridLength" /> がピクセルで表される値を保持するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.GridLength.GridUnitType" /> プロパティが <see cref="F:System.Windows.GridUnitType.Pixel" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAuto">
      <summary>サイズがコンテンツ オブジェクトのサイズ プロパティによって決まる値を <see cref="T:System.Windows.GridLength" /> が保持するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.GridLength.GridUnitType" /> プロパティが <see cref="F:System.Windows.GridUnitType.Auto" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsStar">
      <summary>
        <see cref="T:System.Windows.GridLength" /> が使用可能なスペースの加重比率で表される値を保持するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.GridLength.GridUnitType" /> プロパティが <see cref="F:System.Windows.GridUnitType.Star" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.GridLength.op_Equality(System.Windows.GridLength,System.Windows.GridLength)">
      <summary>2 つの <see cref="T:System.Windows.GridLength" /> 構造体を比較して、等しいかどうかを確認します。</summary>
      <param name="gl1">比較対象の <see cref="T:System.Windows.GridLength" /> の第 1 インスタンス。</param>
      <param name="gl2">比較対象の <see cref="T:System.Windows.GridLength" /> の第 2 インスタンス。</param>
      <returns>
        <see cref="T:System.Windows.GridLength" /> の 2 つのインスタンスが同じ値を持ち、<see cref="T:System.Windows.GridUnitType" /> を持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.GridLength.op_Inequality(System.Windows.GridLength,System.Windows.GridLength)">
      <summary>2 つの <see cref="T:System.Windows.GridLength" /> 構造体を比較し、それらが等しくないかどうかを確認します。</summary>
      <param name="gl1">比較対象の <see cref="T:System.Windows.GridLength" /> の第 1 インスタンス。</param>
      <param name="gl2">比較対象の <see cref="T:System.Windows.GridLength" /> の第 2 インスタンス。</param>
      <returns>
        <see cref="T:System.Windows.GridLength" /> の 2 つのインスタンスが同じ値を持たず、<see cref="T:System.Windows.GridUnitType" /> を持たない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.GridLength.ToString">
      <summary>
        <see cref="T:System.String" /> の <see cref="T:System.Windows.GridLength" /> 表現を返します。</summary>
      <returns>現在の <see cref="T:System.String" /> 構造体の <see cref="T:System.Windows.GridLength" /> 表現。</returns>
    </member>
    <member name="P:System.Windows.GridLength.Value">
      <summary>
        <see cref="T:System.Double" /> の値を表す <see cref="T:System.Windows.GridLength" /> を取得します</summary>
      <returns>現在のインスタンスの値を表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="T:System.Windows.GridLengthConverter">
      <summary>他の型のインスタンスと <see cref="T:System.Windows.GridLength" /> インスタンスの間の変換を行います。</summary>
    </member>
    <member name="M:System.Windows.GridLengthConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.GridLengthConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.GridLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定した型からクラスを <see cref="T:System.Windows.GridLength" /> のインスタンスに変換できるかどうかを判断します。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報を説明します。</param>
      <param name="sourceType">評価対象となる変換元の型。</param>
      <returns>コンバーターが指定した型から <see cref="T:System.Windows.GridLength" /> のインスタンスに変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.GridLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.GridLength" /> のインスタンスを別の型に変換できるかどうかを判断します。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報を説明します。</param>
      <param name="destinationType">
        <see cref="T:System.Windows.GridLength" /> のこのインスタンスが変換元として評価されるときの変換先の型。</param>
      <returns>コンバーターが <see cref="T:System.Windows.GridLength" /> のこのインスタンスを指定した型に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.GridLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定されたオブジェクトを <see cref="T:System.Windows.GridLength" /> のインスタンスに変換できるか試みます。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報を説明します。</param>
      <param name="cultureInfo">変換中に尊重される必要があるカルチャ固有情報。</param>
      <param name="source">変換対象のオブジェクト。</param>
      <returns>変換後の <paramref name="source" /> から作成される <see cref="T:System.Windows.GridLength" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> オブジェクトが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> オブジェクトが <see langword="null" /> ではないか、または <see cref="T:System.Windows.GridLength" /> に変換できる有効な型ではありません。</exception>
    </member>
    <member name="M:System.Windows.GridLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Windows.GridLength" /> のインスタンスの指定した型への変換を試みます。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報を説明します。</param>
      <param name="cultureInfo">変換中に尊重される必要があるカルチャ固有情報。</param>
      <param name="value">変換対象の <see cref="T:System.Windows.GridLength" /> のインスタンス。</param>
      <param name="destinationType">
        <see cref="T:System.Windows.GridLength" /> のこのインスタンスの変換先の型。</param>
      <returns>
        <see cref="T:System.Windows.GridLength" /> の変換されたインスタンスから作成されるオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> は変換先の有効な型ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> は <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Windows.GridUnitType">
      <summary>
        <see cref="T:System.Windows.GridLength" /> オブジェクトが保持している値の種類について説明します。</summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Auto">
      <summary>サイズは、コンテンツ オブジェクトのサイズ プロパティによって決まります。</summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Pixel">
      <summary>値は、ピクセルとして表されます。</summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Star">
      <summary>値は、使用可能なスペースの加重比率で表されます。</summary>
    </member>
    <member name="T:System.Windows.HierarchicalDataTemplate">
      <summary>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> や <see cref="T:System.Windows.Controls.MenuItem" /> などの <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> をサポートする <see cref="T:System.Windows.DataTemplate" /> を表します。</summary>
    </member>
    <member name="M:System.Windows.HierarchicalDataTemplate.#ctor">
      <summary>
        <see cref="T:System.Windows.HierarchicalDataTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)">
      <summary>テンプレートの対象となる型を指定して、<see cref="T:System.Windows.HierarchicalDataTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataType">このテンプレートの対象となる型。</param>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
      <summary>子項目の代替項目コンテナーの数を取得または設定します。</summary>
      <returns>項目の次のレベルに対する代替項目コンテナーの数。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup">
      <summary>各子項目にコピーされる <see cref="T:System.Windows.Data.BindingGroup" /> を取得または設定します。</summary>
      <returns>各子項目にコピーされる <see cref="T:System.Windows.Data.BindingGroup" />。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
      <summary>各子項目の項目コンテナーに適用される <see cref="T:System.Windows.Style" /> を取得または設定します。</summary>
      <returns>各子項目の項目コンテナーに適用される <see cref="T:System.Windows.Style" />。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
      <summary>各項目コンテナーに適用できるスタイルについて、スタイル選択のカスタム ロジックを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.StyleSelector" /> として使用するスタイルを選択する <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
      <summary>データ階層内の次のレベルを表すコレクションを検索する場所を示す、このデータ テンプレートのバインドを取得または設定します。</summary>
      <returns>既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat">
      <summary>データ階層の次のレベル内の項目が文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</summary>
      <returns>データ階層の次のレベル内の項目が文字列として表示される場合に、その書式を指定する複合文字列。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplate">
      <summary>データ階層の次のレベルにある項目の表示方法を示すために、生成された <see cref="T:System.Windows.DataTemplate" /> (<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> や <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> など) の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに適用する <see cref="T:System.Windows.Controls.TreeViewItem" /> を取得または設定します。</summary>
      <returns>データ階層の次のレベルにある項目の表示方法を示すために、生成された <see cref="T:System.Windows.DataTemplate" /> (<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> や <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> など) の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに適用する <see cref="T:System.Windows.Controls.TreeViewItem" />。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector">
      <summary>データ階層の次のレベルにある項目を表示するテンプレートの選択方法を示すために、生成された <see cref="T:System.Windows.Controls.DataTemplateSelector" /> (<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> や <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> など) の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに適用する <see cref="T:System.Windows.Controls.TreeViewItem" /> を取得または設定します。</summary>
      <returns>データ階層の次のレベルにある項目を表示するテンプレートの選択方法を示すために、生成された <see cref="T:System.Windows.Controls.DataTemplateSelector" /> (<see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> や <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> など) の <see cref="T:System.Windows.Controls.MenuItem" /> プロパティに適用する <see cref="T:System.Windows.Controls.TreeViewItem" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.HorizontalAlignment">
      <summary>親要素の割り当てられているレイアウト スロットに対する水平軸上で、要素が表示される位置を示します。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Center">
      <summary>親要素のレイアウト スロットの中央に配置された要素。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Left">
      <summary>親要素のレイアウト スロットの左側に配置された要素。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Right">
      <summary>親要素のレイアウト スロットの右側に配置された要素。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Stretch">
      <summary>親要素のレイアウト スロット全体に引き伸ばして配置された要素。</summary>
    </member>
    <member name="T:System.Windows.IFrameworkInputElement">
      <summary>フレームワーク要素の名前スコープ コントラクトを宣言します。</summary>
    </member>
    <member name="P:System.Windows.IFrameworkInputElement.Name">
      <summary>要素の名前を取得または設定します。</summary>
      <returns>名前スコープ内で一意で、特定の操作の識別子として使用できる要素名。</returns>
    </member>
    <member name="T:System.Windows.InheritanceBehavior">
      <summary>プロパティ値の継承のルックアップ、リソースのルックアップ、RelativeSource FindAncestor ルックアップの現在のモードを示します。 RelativeSource FindAncestor ルックアップは、バインディングで <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> 値に設定された <see cref="P:System.Windows.Data.RelativeSource.Mode" /> プロパティを含む <see cref="T:System.Windows.Data.RelativeSource" /> を使用する場合に発生します。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.Default">
      <summary>プロパティ値の継承のルックアップでは現在の要素を照会し、ページのルートに向かう要素ツリーのウォークを継続します。 リソースのルックアップでは現在の要素を照会し、さらにさかのぼって照会します。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipAllNext">
      <summary>プロパティ値の継承のルックアップまたはリソースのルックアップでは、現在の要素を照会しますが、さらにさかのぼって照会することはありません。 リソースのルックアップでは現在の要素を照会しますが、さらにさかのぼって照会することはありません。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipAllNow">
      <summary>プロパティ値の継承のルックアップ、リソースのルックアップ、または RelativeSource FindAncestor ルックアップでは、現在の要素を照会せず、さらにさかのぼって照会することもありません。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToAppNext">
      <summary>プロパティ値の継承のルックアップでは現在の要素を照会しますが、さらにさかのぼって照会することはありません。 リソースのルックアップでは、現在の要素を照会し、ページのルートに向かう要素ツリーのウォークすることなく、アプリケーションとテーマのディクショナリにスキップします。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToAppNow">
      <summary>プロパティ値の継承のルックアップでは現在の要素を照会せず、さらにさかのぼって照会することはありません。 リソースのルックアップでは、現在の要素を照会することはありませんが、ページのルートに向かう要素ツリーのウォークすることなく、アプリケーションとテーマ ディクショナリにスキップします。 RelativeSource FindAncestor ルックアップでは、現在の要素を照会せず、さらにさかのぼって照会することもありません。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToThemeNext">
      <summary>プロパティ値の継承のルックアップでは現在の要素を照会しますが、さらにさかのぼって照会することはありません。 リソースのルックアップでは、現在の要素を照会し、ページのルートに向かって要素ツリーをウォークしたり、アプリケーション ディクショナリを確認したりすることなく、テーマ ディクショナリにスキップします。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToThemeNow">
      <summary>プロパティ値の継承のルックアップでは現在の要素を照会せず、さらにさかのぼって照会することはありません。 リソースのルックアップでは、現在の要素を照会することはありませんが、ページのルートに向かって要素ツリーをウォークしたり、アプリケーション ディクショナリを確認したりすることなく、テーマ ディクショナリにスキップします。 RelativeSource FindAncestor ルックアップでは、現在の要素を照会せず、さらにさかのぼって照会することもありません。</summary>
    </member>
    <member name="T:System.Windows.Input.CommandConverter">
      <summary>
        <see cref="T:System.Windows.Input.ICommand" /> オブジェクトと他の型との相互変換を行います。</summary>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Input.CommandConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定したコンテキストを使用して、指定した型のオブジェクトを <see cref="T:System.Windows.Input.ICommand" /> のインスタンスに変換できるかどうかを判断します。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="sourceType">変換の評価対象となる型。</param>
      <returns>
        <see langword="true" /> の型が <paramref name="sourceType" /> の場合は <see cref="T:System.String" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定したコンテキストを使用して、<see cref="T:System.Windows.Input.ICommand" /> のインスタンスを指定した型に変換できるかどうかを判断します。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="destinationType">変換の評価対象となる型。</param>
      <returns>
        <see langword="true" /> の型が <paramref name="destinationType" /> の場合は <see cref="T:System.String" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したコンテキストを使用して、指定したオブジェクトから <see cref="T:System.Windows.Input.ICommand" /> への変換を試みます。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="culture">カルチャ固有の情報。</param>
      <param name="source">変換対象のオブジェクト。</param>
      <returns>変換されたオブジェクト。<paramref name="source" /> が空の文字列の場合は <see langword="null" />。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> を変換できません。</exception>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したコンテキストを使用して、<see cref="T:System.Windows.Input.ICommand" /> から指定した型への変換を試みます。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="culture">カルチャ固有の情報。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <param name="destinationType">オブジェクトの変換後の型。</param>
      <returns>変換されたオブジェクトまたは空の文字列。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> を変換できません。</exception>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigation">
      <summary>フォーカスを設定できるオブジェクト間の論理ナビゲーションおよび方向ナビゲーションを提供します。</summary>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn">
      <summary>返された文字がコントロールによって受け入れられるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.AcceptsReturnProperty">
      <summary>
        <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation">
      <summary>このプロパティが設定されている要素の子の論理的なコントロール タブ ナビゲーションの動作を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.ControlTabNavigationProperty">
      <summary>
        <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation">
      <summary>このプロパティが設定されている要素の子の方向ナビゲーションの動作を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.DirectionalNavigationProperty">
      <summary>
        <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetAcceptsReturn(System.Windows.DependencyObject)">
      <summary>指定した要素の <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 添付プロパティの値を取得します。</summary>
      <param name="element">添付プロパティの読み取り元の要素。</param>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetControlTabNavigation(System.Windows.DependencyObject)">
      <summary>指定した要素の <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> 添付プロパティの値を取得します。</summary>
      <param name="element">添付プロパティの取得元の要素。</param>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetDirectionalNavigation(System.Windows.DependencyObject)">
      <summary>指定した要素の <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 添付プロパティの値を取得します。</summary>
      <param name="element">添付プロパティの取得元の要素。</param>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetIsTabStop(System.Windows.DependencyObject)">
      <summary>指定した要素の <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 添付プロパティの値を取得します。</summary>
      <param name="element">添付プロパティの読み込み元の要素。</param>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetTabIndex(System.Windows.DependencyObject)">
      <summary>指定した要素の <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 添付プロパティの値を取得します。</summary>
      <param name="element">添付プロパティの読み込み元の要素。</param>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetTabNavigation(System.Windows.DependencyObject)">
      <summary>指定した要素の <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 添付プロパティの値を取得します。</summary>
      <param name="element">添付プロパティの取得元の要素。</param>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.IsTabStop">
      <summary>このプロパティが設定されている要素がタブ位置であるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.IsTabStopProperty">
      <summary>
        <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetAcceptsReturn(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した要素の <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先の要素。</param>
      <param name="enabled">設定するプロパティ値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetControlTabNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>指定した要素の <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティを設定する要素。</param>
      <param name="mode">設定するプロパティ値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetDirectionalNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>指定した要素の <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティを設定する要素。</param>
      <param name="mode">設定するプロパティ値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetIsTabStop(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した要素の <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティの書き込み先の要素。</param>
      <param name="isTabStop">設定するプロパティ値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetTabIndex(System.Windows.DependencyObject,System.Int32)">
      <summary>指定した要素の <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティを設定する要素。</param>
      <param name="index">設定するプロパティ値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetTabNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>指定した要素の <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 添付プロパティの値を設定します。</summary>
      <param name="element">添付プロパティを設定する要素。</param>
      <param name="mode">設定するプロパティ値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.TabIndex">
      <summary>このプロパティが設定されている要素のタブ インデックスを取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.TabIndexProperty">
      <summary>
        <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.TabNavigation">
      <summary>このプロパティが設定されている要素の子の論理的なタブ ナビゲーションの動作を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.TabNavigationProperty">
      <summary>
        <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigationMode">
      <summary>論理ナビゲーションおよび方向ナビゲーションが発生したときのフォーカスの変更に使用可能な値を指定します。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Contained">
      <summary>コンテナーの末尾または先頭に達したとき、ナビゲーションの方向に応じて最初または最後の項目にフォーカスが戻りますが、コンテナーの先頭または末尾を越えて移動することはありません。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Continue">
      <summary>ナビゲーション ストップである各要素が、キーボード フォーカスを受け取ります。  端に達すると、ナビゲーションはそれが含まれている要素から離れます。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Cycle">
      <summary>コンテナーの末尾または先頭に達したとき、ナビゲーションの方向に応じて最初または最後の項目にフォーカスが戻ります。  フォーカスは、論理ナビゲーションを使用してコンテナーから離れることはできません。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Local">
      <summary>タブ インデックスは、このコンテナー内のみのローカル サブツリーで考慮され、その後は <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" /> と同様に機能します。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.None">
      <summary>このコンテナー内では、キーボード ナビゲーションが許可されていません。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Once">
      <summary>コンテナーおよびその子要素全体で 1 度だけフォーカスを受け取ります。 ツリーの最初の子か、グループ内で最後にフォーカスがあった要素が、フォーカスを受け取ります。</summary>
    </member>
    <member name="T:System.Windows.Interop.ActiveXHost">
      <summary>Windows Presentation Foundation (WPF) のコンテンツ内の要素を ActiveX コントロールとしてホストします。</summary>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>
        <see cref="T:System.Windows.Interop.ActiveXHost" /> ウィンドウを作成し、このウィンドウを親に割り当てます。</summary>
      <param name="hwndParent">親ウィンドウを指定します。</param>
      <returns>
        <see cref="T:System.Runtime.InteropServices.HandleRef" /> ウィンドウへの <see cref="T:System.Windows.Interop.ActiveXHost" />。</returns>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>ホストされるウィンドウを破棄します。</summary>
      <param name="hwnd">ウィンドウ ハンドルを格納する構造体。</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Interop.ActiveXHost" /> によって使用されているアンマネージド リソースを解放します。オプションでマネージド リソースも解放できます。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Windows.Interop.ActiveXHost.IsDisposed">
      <summary>
        <see cref="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)" /> メソッドが <see cref="T:System.Windows.Interop.ActiveXHost" /> インスタンスで呼び出されたかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Interop.ActiveXHost" /> インスタンスが破棄されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)">
      <summary>レイアウト エンジンの操作が要求する、<see cref="T:System.Windows.Interop.HwndHost" /> オブジェクトによって表されるウィンドウのサイズを返します。</summary>
      <param name="swConstraint">
        <see cref="T:System.Windows.Interop.HwndHost" /> オブジェクトのサイズ。</param>
      <returns>
        <see cref="T:System.Windows.Interop.HwndHost" /> オブジェクトのサイズ。</returns>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>この要素に対して有効なアクセス キーが呼び出されたときのクラス処理を提供します。</summary>
      <param name="args">アクセス キー イベントのイベント データ。 イベント データは、呼び出されたキーを報告し、これらのイベントの送信を制御する <see cref="T:System.Windows.Input.AccessKeyManager" /> オブジェクトが、このアクセス キーの呼び出しを他の要素にも送信したかどうかを示します。</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.FrameworkElement" /> の依存関係プロパティの有効値が更新された場合に必ず呼び出されます。 変更が発生した特定の依存関係プロパティが引数パラメーターで報告されます。 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">変更されたプロパティ (および古い値と新しい値) を示すイベント データ。</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnWindowPositionChanged(System.Windows.Rect)">
      <summary>ホストされたウィンドウの位置が変わると呼び出されます。</summary>
      <param name="bounds">ウィンドウの位置。</param>
    </member>
    <member name="T:System.Windows.Interop.BrowserInteropHelper">
      <summary>XAML ブラウザー アプリケーション (XBAP) アプリケーションがホストされるブラウザー環境に関する情報を提供するヘルパー クラス。</summary>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.ClientSite">
      <summary>OLE コンテナー インターフェイス (IOleClientSite::GetContainer(); など) を介してホスト ブラウザーにアクセスするのに使用できるオブジェクトへの参照を返します。</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleClientSite" /> にキャストできるオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.HostScript">
      <summary>XAML ブラウザー アプリケーション (XBAP) がフレームでホストされている場合、HTML ページの HTML ウィンドウ オブジェクト、カスタム スクリプト関数、およびグローバル変数へのアクセスを提供するスクリプト オブジェクトを取得します。</summary>
      <returns>XAML ブラウザー アプリケーション (XBAP) がフレームでホストされている場合は HTML ページの HTML ウィンドウ オブジェクト、カスタム スクリプト関数、およびグローバル変数へのアクセスを提供するスクリプト オブジェクト。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted">
      <summary>現在の Windows Presentation Foundation (WPF) アプリケーションがブラウザーによってホストされるかどうかを示す値を取得します。</summary>
      <returns>アプリケーションがブラウザーによってホストされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.Source">
      <summary>XAML ブラウザー アプリケーション (XBAP) アプリケーションが起動された場所の Uniform Resource Identifier (URI) を取得します。</summary>
      <returns>XAML ブラウザー アプリケーション (XBAP) アプリケーションが起動された場所の <see cref="T:System.Uri" />。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Interop.DynamicScriptObject">
      <summary>XAML ブラウザー アプリケーション (XBAP) からアプリケーションをホストする HTML ウィンドウへの呼び出しを有効にします。</summary>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.ToString">
      <summary>スクリプト オブジェクトの文字列形式への変換を試みます。</summary>
      <returns>オブジェクトを変換できる場合はスクリプト オブジェクトの文字列形式。それ以外の場合はオブジェクトの既定のプロパティまたはメソッドの文字列形式。</returns>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
      <summary>
        <paramref name="indexes" /> コレクションの最初のインデックス値を使用して、スクリプト オブジェクトからインデックス値を取得します。</summary>
      <param name="binder">呼び出しサイトによって提供されるバインダー。</param>
      <param name="indexes">取得するインデックス。</param>
      <param name="result">メソッドの結果。</param>
      <returns>常に <see langword="true" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> が <see langword="null" /> です。

または -
<paramref name="indexes" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="indexes" /> の長さが 1 ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">最初の <paramref name="indexes" /> 値は <see langword="null" /> です。</exception>
      <exception cref="T:System.MissingMemberException">メンバーが存在しません。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>スクリプト オブジェクトからメンバー値を取得します。</summary>
      <param name="binder">呼び出しサイトによって提供されるバインダー。</param>
      <param name="result">メソッドの結果。</param>
      <returns>常に <see langword="true" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.MissingMemberException">メンバーが存在しません。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
      <summary>既定のスクリプト メソッドを呼び出します。</summary>
      <param name="binder">呼び出しサイトによって提供されるバインダー。</param>
      <param name="args">既定のメソッドに渡される引数。</param>
      <param name="result">メソッドの結果。</param>
      <returns>常に <see langword="true" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.MissingMethodException">このメソッドは存在しません。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>スクリプト オブジェクトにメソッドを呼び出します。</summary>
      <param name="binder">呼び出しサイトによって提供されるバインダー。</param>
      <param name="args">既定のメソッドに渡される引数。</param>
      <param name="result">メソッドの結果。</param>
      <returns>常に <see langword="true" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.MissingMethodException">このメソッドは存在しません。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
      <summary>
        <paramref name="indexes" /> コレクションに指定された最初のインデックスを使用して、スクリプト オブジェクトにメンバーを設定します。</summary>
      <param name="binder">呼び出しサイトによって提供されるバインダー。</param>
      <param name="indexes">取得するインデックス。</param>
      <param name="value">メソッドの結果。</param>
      <returns>常に <see langword="true" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> が <see langword="null" /> です。

または -
<paramref name="indexes" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="indexes" /> の長さが 1 ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">最初の <paramref name="indexes" /> 値は <see langword="null" /> です。</exception>
      <exception cref="T:System.MissingMemberException">メンバーが存在しません。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>指定された値のスクリプト オブジェクトにメンバーを設定します。</summary>
      <param name="binder">呼び出しサイトによって提供されるバインダー。</param>
      <param name="value">メンバーに設定する値。</param>
      <returns>常に <see langword="true" /> を返します。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> は <see langword="null" />です。

または -
<paramref name="indexes" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="indexes" /> の長さが 1 ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">最初の <paramref name="indexes" /> 値は <see langword="null" /> です。</exception>
      <exception cref="T:System.MissingMemberException">メンバーが存在しません。</exception>
    </member>
    <member name="T:System.Windows.Interop.HwndHost">
      <summary>Windows Presentation Foundation (WPF) のコンテンツ内の要素を Win32 ウィンドウとしてホストします。</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.#ctor">
      <summary>
        <see cref="T:System.Windows.Interop.HwndHost" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>派生クラスでオーバーライドされると、ホストされるウィンドウを作成します。</summary>
      <param name="hwndParent">親ウィンドウのウィンドウ ハンドル。</param>
      <returns>作成する子 Win32 ウィンドウのハンドル。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>派生クラスでオーバーライドされると、ホストされているウィンドウを破棄します。</summary>
      <param name="hwnd">ウィンドウ ハンドルを格納する構造体。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Dispose">
      <summary>オブジェクトが保持していたシステム リソースを直ちに解放します。</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
      <summary>オブジェクトが保持していたシステム リソースを直ちに解放します。</summary>
      <param name="disposing">明示的な破棄要求元から呼び出された場合は <see langword="true" /> に設定します。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="E:System.Windows.Interop.HwndHost.DpiChanged">
      <summary>HwndHost が表示されている画面の DPI が変更されたあとに発生します。</summary>
    </member>
    <member name="F:System.Windows.Interop.HwndHost.DpiChangedEvent">
      <summary>画面 HwndHost の DPI が変更中であるときの <see cref="T:System.Windows.RoutedEvent" />。</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Finalize">
      <summary>ガベージ コレクターがオブジェクトを破棄する前に、最後のクリーンアップを実行します。</summary>
    </member>
    <member name="P:System.Windows.Interop.HwndHost.Handle">
      <summary>ホストされたウィンドウのウィンドウ ハンドルを取得します。</summary>
      <returns>ウィンドウ ハンドル。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.HasFocusWithinCore">
      <summary>シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがあるかどうかを示す値を取得します。</summary>
      <returns>シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
      <summary>レイアウト エンジンの操作が要求する、<see cref="T:System.Windows.Interop.HwndHost" /> オブジェクトによって表されるウィンドウのサイズを返します。</summary>
      <param name="constraint">
        <see cref="T:System.Windows.Interop.HwndHost" /> オブジェクトのサイズ。</param>
      <returns>
        <see cref="T:System.Windows.Interop.HwndHost" /> オブジェクトのサイズ。</returns>
    </member>
    <member name="E:System.Windows.Interop.HwndHost.MessageHook">
      <summary>ホストされたウィンドウで受信される未処理のメッセージごとに発生します。</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Interop.HwndHost" /> を作成します。</summary>
      <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>この HwndHost が表示される DPI が変更されるときに呼び出されます。</summary>
      <param name="oldDpi">元の DPI スケール設定。</param>
      <param name="newDpi">新規の DPI スケール設定。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>ホストされたウィンドウが、WM_KEYDOWN メッセージを受け取るときに呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>ホストされたウィンドウが、WM_KEYUP メッセージを受け取るときに呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>このシンクのニーモニック (アクセス キー) のいずれかが起動されたときに呼び出されます。</summary>
      <param name="msg">ニーモニック用のメッセージおよび関連付けられたデータ。</param>
      <param name="modifiers">変換キー。</param>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
      <summary>ホストされたウィンドウの位置が変わると呼び出されます。</summary>
      <param name="rcBoundingBox">ウィンドウの位置。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
      <summary>格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> インターフェイスを登録します。</summary>
      <param name="sink">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> シンク。</param>
      <returns>格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> サイト。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />」をご覧ください。</summary>
      <returns>シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
      <summary>このメンバーの詳細については、「<see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />」をご覧ください。</summary>
      <returns>コンテナーの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> インターフェイスへの参照。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />」をご覧ください。</summary>
      <param name="msg">ニーモニック用のメッセージおよび関連付けられたデータ。 このメッセージ構造を変更しないでください。 パフォーマンス上の理由から、これは参照渡しのみです。</param>
      <param name="modifiers">変換キー。</param>
      <returns>メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />」をご覧ください。</summary>
      <param name="sink">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> シンク。</param>
      <returns>格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> サイト。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />」をご覧ください。</summary>
      <param name="request">フォーカスを最初と最後のどちらのタブ位置に設定するかを指定します。</param>
      <returns>フォーカスが要求どおりに設定された場合は <see langword="true" />。タブ位置が存在しない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />」をご覧ください。</summary>
      <param name="msg">メッセージおよび関連付けられたデータ。 この構造体を変更しないでください。 パフォーマンス上の理由から、これは参照渡しのみです。</param>
      <param name="modifiers">変換キー。</param>
      <returns>メッセージがメソッドの実装によって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />」をご覧ください。</summary>
      <param name="msg">メッセージおよび関連付けられたデータ。 この構造体を変更しないでください。 パフォーマンス上の理由から、これは参照渡しのみです。</param>
      <param name="modifiers">変換キー。</param>
      <returns>メッセージが処理されたため <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> を呼び出さない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)">
      <summary>フォーカスをシンクの最初のタブ位置または最後のタブ位置のいずれかに設定します。</summary>
      <param name="request">フォーカスを最初と最後のどちらのタブ位置に設定するかを指定します。</param>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>キー押下メッセージのレベルでキーボード入力を処理します。</summary>
      <param name="msg">メッセージおよび関連付けられたデータ。 この構造体を変更しないでください。 パフォーマンス上の理由から、これは参照渡しのみです。</param>
      <param name="modifiers">変換キー。</param>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>
        <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> メソッドの呼び出し前に、WM_CHAR、WM_SYSCHAR、WM_DEADCHAR、および WM_SYSDEADCHAR 入力メッセージを処理します。</summary>
      <param name="msg">メッセージおよび関連付けられたデータ。 この構造体を変更しないでください。 パフォーマンス上の理由から、これは参照渡しのみです。</param>
      <param name="modifiers">変換キー。</param>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.UpdateWindowPos">
      <summary>要素の現在の状態に合わせて、子ウィンドウのサイズ、可視性、および位置を更新します。</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
      <summary>派生クラスでオーバーライドされると、ホストされた子ウィンドウのウィンドウ プロセス (ハンドル) にアクセスします。</summary>
      <param name="hwnd">ホストされたウィンドウのウィンドウ ハンドル。</param>
      <param name="msg">アクションの対象となるメッセージ。</param>
      <param name="wParam">メッセージの処理に関連する可能性のある情報。 通常、これは、フラグなどの小規模の情報を格納するために使用されます。</param>
      <param name="lParam">メッセージの処理に関連する可能性のある情報。 通常、これは、オブジェクトの参照に使用されます。</param>
      <param name="handled">イベント結果を処理済みとしてマークするかどうか。</param>
      <returns>子ウィンドウのウィンドウ ハンドル。</returns>
    </member>
    <member name="T:System.Windows.Interop.IErrorPage">
      <summary>相互運用コンテンツをホストし、Windows Presentation Foundation (WPF) の実行可能ファイルによって解釈される Windows Presentation Foundation (WPF) アプリケーションと、ホストが提供するエラー ページとのやりとりを定義します。</summary>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.DeploymentPath">
      <summary>アプリケーションの配置マニフェストへのパスを取得または設定します。</summary>
      <returns>アプリケーションの配置マニフェストへのパス。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorFlag">
      <summary>これがエラーを表すのか、または警告などの他の状態を表すのかを示す値を取得または設定します。 <see langword="true" /> はエラーを意味します。</summary>
      <returns>
        <see langword="true" /> はエラーを意味します。<see langword="false" /> は警告などの別の状態を意味します。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorText">
      <summary>エラーの詳細な説明を取得または設定します。</summary>
      <returns>エラーの説明。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorTitle">
      <summary>エラー ページの文字列タイトルを取得または設定します。</summary>
      <returns>エラー ページの文字列タイトル。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.GetWinFxCallback">
      <summary>
        <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> ハンドラーへの参照を取得または設定します。このハンドラーは、.NET Framework ランタイム ダウンロードに対する要求を処理できます。</summary>
      <returns>
        <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> ハンドラー</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.LogFilePath">
      <summary>エラー ログ ファイル (ある場合) の文字列パスを取得または設定します。</summary>
      <returns>関連付けられたエラー ファイルのパス。 空の文字列の場合があります。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.RefreshCallback">
      <summary>
        <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> ハンドラーへの参照を取得または設定します。このハンドラーは、エラー ページの更新を処理できます。</summary>
      <returns>エラー ページの更新を処理するための <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> ハンドラー。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.SupportUri">
      <summary>エラーに関連したサポート情報の Uniform Resource Identifier (URI) を取得または設定します。</summary>
      <returns>サポート情報に対するリンク。</returns>
    </member>
    <member name="T:System.Windows.Interop.IProgressPage">
      <summary>相互運用コンテンツをホストする Windows Presentation Foundation (WPF) アプリケーションと、ホストが提供する進行状況ページとのやりとりを定義します。</summary>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.ApplicationName">
      <summary>アプリケーションの名前を取得または設定します。</summary>
      <returns>進行状況ページを表示するアプリケーションの名前。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.DeploymentPath">
      <summary>アプリケーション配置マニフェストへの <see cref="T:System.Uri" /> パスを取得または設定します。</summary>
      <returns>アプリケーション配置マニフェストのパス。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.PublisherName">
      <summary>アプリケーションの発行元を取得または設定します。</summary>
      <returns>発行元を識別する文字列。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.RefreshCallback">
      <summary>
        <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> ハンドラーへの参照を取得または設定します。このハンドラーは、ユーザーが実行する更新コマンドを処理できます。</summary>
      <returns>コールバック参照。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.StopCallback">
      <summary>
        <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> ハンドラーへの参照を取得または設定します。このハンドラーは、ユーザーが実行する停止コマンドを処理できます。</summary>
      <returns>コールバック参照。</returns>
    </member>
    <member name="M:System.Windows.Interop.IProgressPage.UpdateProgress(System.Int64,System.Int64)">
      <summary>進行状況インジケーターの更新に使用できるアップロード進行状況の数値情報を提供します。</summary>
      <param name="bytesDownloaded">その時点までにダウンロードされた合計バイト数。</param>
      <param name="bytesTotal">アプリケーションでダウンロードする必要のある合計バイト数。</param>
    </member>
    <member name="T:System.Windows.Interop.WindowInteropHelper">
      <summary>Windows Presentation Foundation (WPF) と Win32 コードの相互運用を支援します。</summary>
    </member>
    <member name="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)">
      <summary>指定した Windows Presentation Foundation (WPF) ウィンドウの <see cref="T:System.Windows.Interop.WindowInteropHelper" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="window">WPF ウィンドウ オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
      <summary>ウィンドウの HWND がまだ作成されていない場合は HWND を作成します。</summary>
      <returns>HWND を表す <see cref="T:System.IntPtr" />。</returns>
    </member>
    <member name="P:System.Windows.Interop.WindowInteropHelper.Handle">
      <summary>この <see cref="T:System.Windows.Interop.WindowInteropHelper" /> を作成するために使用された Windows Presentation Foundation (WPF) ウィンドウのウィンドウ ハンドルを取得します。</summary>
      <returns>Windows Presentation Foundation (WPF) ウィンドウ ハンドル (HWND)。</returns>
    </member>
    <member name="P:System.Windows.Interop.WindowInteropHelper.Owner">
      <summary>Windows Presentation Foundation (WPF) オーナー ウィンドウのハンドルを取得または設定します。</summary>
      <returns>オーナー ウィンドウ ハンドル (HWND)。</returns>
    </member>
    <member name="T:System.Windows.LengthConverter">
      <summary>他の型のインスタンスと、オブジェクトの長さを表す <see cref="T:System.Double" /> のインスタンスの間の変換を行います。</summary>
    </member>
    <member name="M:System.Windows.LengthConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.LengthConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定した型から、オブジェクトの長さを表す <see cref="T:System.Double" /> に変換できるかどうかを判断します。</summary>
      <param name="typeDescriptorContext">コンポーネントに関するコンテキスト情報を提供します。</param>
      <param name="sourceType">変換するために評価するデータ型を識別します。</param>
      <returns>変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>オブジェクトの長さを表す <see cref="T:System.Double" /> から、指定した型に変換できるかどうかを判断します。</summary>
      <param name="typeDescriptorContext">コンポーネントに関するコンテキスト情報を提供します。</param>
      <param name="destinationType">変換するために評価するデータ型を識別します。</param>
      <returns>
        <paramref name="destinationType" /> に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>他のデータ型のインスタンスを、オブジェクトの長さを表す <see cref="T:System.Double" /> のインスタンスに変換します。</summary>
      <param name="typeDescriptorContext">コンポーネントに関するコンテキスト情報を提供します。</param>
      <param name="cultureInfo">変換時に維持されるカルチャ固有の情報を表します。</param>
      <param name="source">
        <see cref="T:System.Double" /> に変換されるオブジェクトを識別します。</param>
      <returns>変換の値である <see cref="T:System.Double" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> が <see langword="null" /> である場合に発生します。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> が <see langword="null" /> ではないが、変換に有効な型でない場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>他の型を、オブジェクトの長さを表す <see cref="T:System.Double" /> のインスタンスに変換します。</summary>
      <param name="typeDescriptorContext">コンテナーや <see cref="T:System.ComponentModel.PropertyDescriptor" /> など、コンポーネントのコンテキスト情報を表します。</param>
      <param name="cultureInfo">書記体系、使用する暦など、カルチャ固有の情報を識別します。</param>
      <param name="value">変換される <see cref="T:System.Object" /> を識別します。</param>
      <param name="destinationType">
        <see cref="T:System.Double" /> のこのインスタンスの変換先のデータ型。</param>
      <returns>変換の値である新しい <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> である場合に発生します。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が <see langword="null" /> ではないが <see cref="T:System.Windows.Media.Brush" /> でない場合か、または <paramref name="destinationType" /> が有効でない場合に発生します。</exception>
    </member>
    <member name="T:System.Windows.LineStackingStrategy">
      <summary>各行の行ボックスを決定する際に使用する機構を表します。</summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.BlockLineHeight">
      <summary>スタックの高さは、ブロック要素の "行の高さ" プロパティの値によって決定されます。</summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.MaxHeight">
      <summary>スタックの高さは、その行のインライン要素をすべて収容する最小値です (これらの要素が適切に配置されている場合)。</summary>
    </member>
    <member name="T:System.Windows.Localization">
      <summary>
        <see cref="T:System.Windows.Localization" /> クラスは、ローカリゼーション属性とコメントの添付プロパティを定義します。</summary>
    </member>
    <member name="F:System.Windows.Localization.AttributesProperty">
      <summary>
        <see cref="System.Windows.Localization.Attributes" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Localization.CommentsProperty">
      <summary>
        <see cref="System.Windows.Localization.Comments" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Localization.GetAttributes(System.Object)">
      <summary>指定した要素から <see cref="F:System.Windows.Localization.AttributesProperty" /> 添付プロパティの値を取得します。</summary>
      <param name="element">取得する添付プロパティを持つ要素を表す <see cref="T:System.Object" />。</param>
      <returns>ローカリゼーション属性を表す <see cref="T:System.String" /> 値。</returns>
    </member>
    <member name="M:System.Windows.Localization.GetComments(System.Object)">
      <summary>指定した要素から <see cref="F:System.Windows.Localization.CommentsProperty" /> 添付プロパティの値を取得します。</summary>
      <param name="element">取得する添付プロパティを持つ要素を表す <see cref="T:System.Object" />。</param>
      <returns>ローカリゼーション コメントを表す <see cref="T:System.String" /> 値。</returns>
    </member>
    <member name="M:System.Windows.Localization.SetAttributes(System.Object,System.String)">
      <summary>指定した要素の <see cref="F:System.Windows.Localization.AttributesProperty" /> 添付プロパティを設定します。</summary>
      <param name="element">設定する添付プロパティを持つ要素を表す <see cref="T:System.Object" />。</param>
      <param name="attributes">ローカリゼーション属性を指定する <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Windows.Localization.SetComments(System.Object,System.String)">
      <summary>指定した要素に <see cref="F:System.Windows.Localization.CommentsProperty" /> 添付プロパティを設定します。</summary>
      <param name="element">設定する添付プロパティを持つ要素を表す <see cref="T:System.Object" />。</param>
      <param name="comments">ローカリゼーション コメントを指定する <see cref="T:System.String" />。</param>
    </member>
    <member name="T:System.Windows.LogicalTreeHelper">
      <summary>論理ツリー内のオブジェクトのクエリを実行するために静的ヘルパー メソッドを提供します。</summary>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
      <summary>要求された UI 要素の表示を試行して、結果を報告するためにターゲット上で <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> イベントを発生させます。</summary>
      <param name="current">表示する UI 要素。</param>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
      <summary>指定された名前を持つオブジェクトを検索して返します。 検索は指定されたオブジェクトから開始され、論理ツリーのサブノードに続きます。</summary>
      <param name="logicalTreeNode">検索を開始するオブジェクト。 このオブジェクトは、<see cref="T:System.Windows.FrameworkElement" /> と <see cref="T:System.Windows.FrameworkContentElement" /> のどちらかである必要があります。</param>
      <param name="elementName">検索するオブジェクトの名前。</param>
      <returns>一致する名前が見つかった場合は、その名前を持つオブジェクト。論理ツリー内に一致する名前が見つからなかった場合は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
      <summary>論理ツリーを処理して、指定したオブジェクトの直接の子オブジェクトのコレクションを返します。</summary>
      <param name="current">論理ツリーの処理の起点になるオブジェクト。 これは <see cref="T:System.Windows.FrameworkElement" /> または <see cref="T:System.Windows.FrameworkContentElement" /> であることが求められます。</param>
      <returns>指定したオブジェクトの論理ツリーに属する直接の子オブジェクトの列挙可能なコレクション。</returns>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)">
      <summary>論理ツリーを処理して、指定した <see cref="T:System.Windows.FrameworkContentElement" /> の直接の子オブジェクトのコレクションを返します。</summary>
      <param name="current">論理ツリーの処理の起点になるオブジェクト。</param>
      <returns>論理ツリー内の <paramref name="current" /> から始まる、直接の子オブジェクトの列挙可能なコレクション。</returns>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)">
      <summary>論理ツリーを処理して、指定した <see cref="T:System.Windows.FrameworkElement" /> の直接の子オブジェクトのコレクションを返します。</summary>
      <param name="current">論理ツリーの処理の起点になるオブジェクト。</param>
      <returns>論理ツリー内の <paramref name="current" /> から始まる、直接の子オブジェクトの列挙可能なコレクション。</returns>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
      <summary>論理ツリーを処理して、指定したオブジェクトの親オブジェクトを返します。</summary>
      <param name="current">親オブジェクトを検索する対象となるオブジェクト。 これは、<see cref="T:System.Windows.FrameworkElement" /> または <see cref="T:System.Windows.FrameworkContentElement" /> である必要があります。</param>
      <returns>要求された親オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.LostFocusEventManager">
      <summary>
        <see cref="T:System.Windows.WeakEventManager" /> の実装を提供することにより、"弱いイベント リスナー パターン" を使用して <see cref="E:System.Windows.UIElement.LostFocus" /> イベントまたは <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントのリスナーを関連付けられるようにします。</summary>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})">
      <summary>指定されたソースで <see cref="E:System.Windows.UIElement.LostFocus" /> イベントまたは <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントが発生したときに呼び出されるイベント ハンドラーを追加します。</summary>
      <param name="source">
        <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントを発生させるソース オブジェクト。</param>
      <param name="handler">
        <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントを処理するデリゲート。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)">
      <summary>指定したリスナーを、指定したソースのリスナーのリストに追加します。</summary>
      <param name="source">イベントを持つオブジェクト。</param>
      <param name="listener">リスナーとして追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.NewListenerList">
      <summary>
        <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントのリスナーを格納する新しいオブジェクトを返します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントにリスナーを格納する新しいオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})">
      <summary>指定したソースから、指定したイベント ハンドラーを削除します。</summary>
      <param name="source">
        <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントを発生させるソース オブジェクト。</param>
      <param name="handler">
        <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントを処理するデリゲート。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)">
      <summary>指定したリスナーを、指定したソースのリスナーのリストから削除します。</summary>
      <param name="source">リスナーを削除するオブジェクト。</param>
      <param name="listener">削除するリスナー。</param>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.StartListening(System.Object)">
      <summary>指定したソースで <see cref="E:System.Windows.UIElement.LostFocus" /> イベントのリッスンを開始し、そのソースに内部クラスのハンドラーを関連付けます。</summary>
      <param name="source">永続 <see cref="E:System.Windows.UIElement.LostFocus" /> イベントのリッスンを開始するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.StopListening(System.Object)">
      <summary>指定したソースで <see cref="E:System.Windows.UIElement.LostFocus" /> イベントのリッスンを停止します。</summary>
      <param name="source">
        <see cref="E:System.Windows.UIElement.LostFocus" /> のリッスンを停止するソース オブジェクト。</param>
    </member>
    <member name="T:System.Windows.Markup.ComponentResourceKeyConverter">
      <summary>意図的に型変換経路を持たない <see cref="T:System.Windows.ComponentResourceKey" /> オブジェクトに対する型コンバーターを実装します。 この型コンバーターは、その動作を強制的に実行して報告します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.ComponentResourceKeyConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定したコンテキストを使用して、指定した型のオブジェクトを <see cref="T:System.Windows.ComponentResourceKey" /> のインスタンスに変換できるかどうかを判断します。 常に <see langword="false" /> を返します。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="sourceType">変換の評価対象となる型。</param>
      <returns>常に <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceType" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定したコンテキストを使用して、<see cref="T:System.Windows.ComponentResourceKey" /> のインスタンスを指定した型に変換できるかどうかを判断します。 常に <see langword="false" /> を返します。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="destinationType">変換の評価対象となる型。</param>
      <returns>常に <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したコンテキストを使用して、指定したオブジェクトから <see cref="T:System.Windows.ComponentResourceKey" /> への変換を試みます。 常に例外をスローします。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="culture">カルチャ固有の情報。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <returns>常に例外をスローします。</returns>
      <exception cref="T:System.NotSupportedException">変換を実行できません。</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したコンテキストを使用して、<see cref="T:System.Windows.ComponentResourceKey" /> から指定した型への変換を試みます。 常に例外をスローします。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="culture">カルチャ固有の情報。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <param name="destinationType">オブジェクトの変換後の型。</param>
      <returns>常に例外をスローします。</returns>
      <exception cref="T:System.NotSupportedException">変換を実行できません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が <see cref="T:System.Windows.ComponentResourceKey" /> 型ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> は <see langword="null" />です。</exception>
    </member>
    <member name="T:System.Windows.Markup.DependencyPropertyConverter">
      <summary>文字列から <see cref="T:System.Windows.DependencyProperty" /> オブジェクトに変換します。</summary>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.DependencyPropertyConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定した型のオブジェクトを <see cref="T:System.Windows.DependencyProperty" /> のインスタンスに変換できるかどうかを判断します。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="sourceType">変換の評価対象となる型。</param>
      <returns>このコンバーターが操作を実行できる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.DependencyProperty" /> のインスタンスを指定した型に変換できるかどうかを判断します。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="destinationType">変換の評価対象となる型。</param>
      <returns>このコンバーターが操作を実行できる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したコンテキストを使用して、指定したオブジェクトから <see cref="T:System.Windows.DependencyProperty" /> への変換を試みます。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="culture">カルチャ固有の情報。</param>
      <param name="source">変換対象のオブジェクト。</param>
      <returns>変換後のオブジェクト。 変換が成功した場合、これは <see cref="T:System.Windows.DependencyProperty" /> です。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> を変換できません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> または <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したコンテキストを使用して、<see cref="T:System.Windows.DependencyProperty" /> から指定した型への変換を試みます。 常に例外がスローされます。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="culture">カルチャ固有の情報。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <param name="destinationType">オブジェクトの変換後の型。</param>
      <returns>常に例外がスローされます。</returns>
      <exception cref="T:System.NotSupportedException">すべての場合。</exception>
    </member>
    <member name="T:System.Windows.Markup.EventSetterHandlerConverter">
      <summary>イベント setter ハンドラーの文字列名をデリゲート表現に変換します。</summary>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.EventSetterHandlerConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが、特定の型のオブジェクトを <see cref="T:System.Delegate" /> に変換できるかどうかを示す値を返します。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換元の型を表す <see cref="T:System.Type" />。</param>
      <returns>コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>コンバーターがオブジェクトを指定した型に変換できるかどうかを示す値を返します。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換先の型を表す <see cref="T:System.Type" />。</param>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定された文字列をイベント ハンドラーの新しい <see cref="T:System.Delegate" /> に変換します。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="cultureInfo">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="source">変換するソース文字列。</param>
      <returns>参照されたイベント ハンドラーを表す新しい <see cref="T:System.Delegate" />。</returns>
      <exception cref="T:System.NotSupportedException">必要なサービスは利用できません。

または -

特定の変換を実行できませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeDescriptorContext" /> または <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定した値オブジェクトを指定した型に変換します。 常に例外がスローされます。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="cultureInfo">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換する値。</param>
      <param name="destinationType">
        <paramref name="value" /> パラメーターの変換先の型。</param>
      <returns>常に例外がスローされます。</returns>
      <exception cref="T:System.NotSupportedException">常にスローされます。</exception>
    </member>
    <member name="T:System.Windows.Markup.IStyleConnector">
      <summary>コンパイルした XAML でイベントとイベント setter をアタッチするために WPF XAML パーサーが内部で使用するメソッドを提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.IStyleConnector.Connect(System.Int32,System.Object)">
      <summary>コンパイルしたコンテンツでイベント setter およびテンプレートにイベントをアタッチします。</summary>
      <param name="connectionId">イベント接続に使用する一意の接続 ID。</param>
      <param name="target">イベント接続のターゲット。</param>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver">
      <summary>バイナリ XAML (BAML) のクラスとプロパティのローカライズ可能な設定を解決します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.GetElementLocalizability(System.String,System.String)">
      <summary>指定した型の要素がローカライズ可能かどうか、およびローカライズ可能な場合はインラインの書式設定が可能かどうかを示す値を返します。</summary>
      <param name="assembly">ローカライズするBAML を格納するアセンブリの完全名。</param>
      <param name="className">ローカライズ情報の取得対象となる要素の完全クラス名。</param>
      <returns>指定したアセンブリおよび要素のローカライズ情報を格納するオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.GetPropertyLocalizability(System.String,System.String,System.String)">
      <summary>指定した型の要素の指定したプロパティがローカライズ可能かどうかを示す値を返します。</summary>
      <param name="assembly">ローカライズするBAML を格納するアセンブリの完全名。</param>
      <param name="className">ローカライズ情報の取得対象となる要素の完全クラス名。</param>
      <param name="property">ローカライズ情報の取得対象となるプロパティの名前。</param>
      <returns>プロパティがローカライズ可能かどうかやどのようにローカライズされるかを指定するオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.ResolveAssemblyFromClass(System.String)">
      <summary>指定したクラスを格納するアセンブリの完全名を返します。</summary>
      <param name="className">完全クラス名。</param>
      <returns>クラスを格納するアセンブリの完全名。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.ResolveFormattingTagToClass(System.String)">
      <summary>XAML で検出されなかった BAML タグの完全クラス名を返します。</summary>
      <param name="formattingTag">タグの名前。</param>
      <returns>タグに関連付けられている完全クラス名。</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizableResource">
      <summary>BAML ストリーム内のローカライズ可能なリソースを表します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.#ctor(System.String,System.String,System.Windows.LocalizationCategory,System.Boolean,System.Boolean)">
      <summary>ローカライズ可能な値、ローカリゼーション コメント、リソース カテゴリ、ローカリゼーション ロック ステータス、およびリソースを表示するかどうかを指定して、<see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="content">ローカライズ可能な値。</param>
      <param name="comments">ローカライズに使用されるコメント。</param>
      <param name="category">リソースの文字列カテゴリ。</param>
      <param name="modifiable">リソースを変更可能にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="readable">UI でテキストとして読むことが可能であるため、翻訳の目的でリソースを表示できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Category">
      <summary>リソースのローカライズのカテゴリを取得または設定します。</summary>
      <returns>ローカライズのカテゴリを表す列挙体の値。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Comments">
      <summary>リソースに関連付けられたローカリゼーション コメントを取得または設定します。</summary>
      <returns>ローカリゼーション コメント文字列。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Content">
      <summary>ローカライズ可能なコンテンツを取得または設定します。</summary>
      <returns>ローカライズ可能なコンテンツの文字列。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> オブジェクトがこのオブジェクトと等しいかどうかを判断します。</summary>
      <param name="other">同じかどうかを確認する対象の <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> オブジェクト。</param>
      <returns>
        <paramref name="other" /> がこのオブジェクトに等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.GetHashCode">
      <summary>このインスタンスのハッシュ コードである整数を返します。</summary>
      <returns>整数のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Modifiable">
      <summary>ローカライズ可能なリソースが変更可能かどうかを示す値を取得または設定します。</summary>
      <returns>リソースが変更可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Readable">
      <summary>リソースが翻訳用に表示されるかどうかを取得または設定します。</summary>
      <returns>リソースが翻訳用に表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> のローカライズ可能リソースの識別に使用されるキーを表します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.#ctor(System.String,System.String,System.String)">
      <summary>指定した UID、クラス名、およびプロパティ名を使用して、<see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="uid">ローカライズ可能リソースを持つ要素の UID。</param>
      <param name="className">バイナリ XAML (BAML) のローカライズ可能リソースのクラス名。</param>
      <param name="propertyName">BAML のローカライズ可能リソースのプロパティ名。</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.AssemblyName">
      <summary>
        <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.ClassName" /> で宣言されるローカライズ可能リソースの型を定義するアセンブリの名前を取得します。</summary>
      <returns>アセンブリの名前。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.ClassName">
      <summary>この <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> のクラス名コンポーネントを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> のクラス名コンポーネント。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Equals(System.Object)">
      <summary>オブジェクトが <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> のインスタンスと等価であるかどうかを比較します。</summary>
      <param name="other">等しいかどうかを比較するオブジェクト。</param>
      <returns>2 つのインスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Equals(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> の 2 つのインスタンスを比較し、等しいかどうかを確認します。</summary>
      <param name="other">等しいかどうかを比較する <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> のもう一方のインスタンス。</param>
      <returns>2 つのインスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.GetHashCode">
      <summary>このインスタンスのハッシュ コードである整数を返します。</summary>
      <returns>整数のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.PropertyName">
      <summary>この <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> のプロパティ名コンポーネントを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> のプロパティ名コンポーネント。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid">
      <summary>この <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> の UID コンポーネントを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> の UID コンポーネント。</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary">
      <summary>BAML レコード内のローカライズ可能なリソースをすべて格納します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Add(System.Windows.Markup.Localizer.BamlLocalizableResourceKey,System.Windows.Markup.Localizer.BamlLocalizableResource)">
      <summary>指定したキーおよび値を持つ項目を <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> に追加します。</summary>
      <param name="key">リソースのキー。</param>
      <param name="value">リソースが格納されているオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">同じキーを持つ項目が既に存在します。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Clear">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> オブジェクトからすべてのリソースを削除します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Contains(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>指定したキーを持つリソースが <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> オブジェクトに格納されているかどうかを確認します。</summary>
      <param name="key">検索するリソース キー。</param>
      <returns>指定したキーを持つリソースが <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> オブジェクトに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">key が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>指定したインデックスを開始位置として、<see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> オブジェクトの 1 次元配列に、<see cref="T:System.Collections.DictionaryEntry" /> オブジェクトの内容をコピーします。</summary>
      <param name="array">データを格納するオブジェクトの配列。</param>
      <param name="arrayIndex">開始インデックス値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="arrayIndex" /> がコピー先の配列の長さを超えています。

または -
<paramref name="arrayIndex" /> とコピー先配列長の間の残り配列スペースにコピーを収めることができません。</exception>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Count">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 内のローカライズ可能リソースの数を取得します。</summary>
      <returns>ローカライズ可能リソースの数。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.GetEnumerator">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> を反復処理する列挙子を返します。</summary>
      <returns>ディクショナリの内容を反復処理できる専用の <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.IsFixedSize">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> オブジェクトが固定サイズかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.IsReadOnly">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> オブジェクトが読み取り専用かどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Item(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>キーを指定して、ローカライズ可能リソースを取得または設定します。</summary>
      <param name="key">リソースのキー値。</param>
      <returns>リソースの値です。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Keys">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> オブジェクト内のすべてのキーを含むコレクションを取得します。</summary>
      <returns>オブジェクト内のすべてのキーを含むコレクション。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Remove(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>指定したローカライズ可能リソースを <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> から削除します。</summary>
      <param name="key">削除するリソースのキー。</param>
      <exception cref="T:System.ArgumentNullException">key が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.RootElementKey">
      <summary>ローカライズ可能なルート要素のキーを取得します。</summary>
      <returns>ローカライズ可能な場合は、ルート要素のキー。 それ以外の場合、値は <see langword="null" /> に設定されます。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />」をご覧ください。</summary>
      <param name="array">項目のコピー先となる、0 から始まる <see cref="T:System.Array" />。</param>
      <param name="index">指定した <see cref="T:System.Array" /> 内の、内容のコピー開始位置。</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#Count">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.Count" />」をご覧ください。</summary>
      <returns>コレクション内の項目数。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.IsSynchronized" />」をご覧ください。</summary>
      <returns>
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.ICollection.SyncRoot" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> のトピックを参照してください。</summary>
      <param name="key">追加する要素のキー。</param>
      <param name="value">
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> に追加するオブジェクト値。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Contains(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IDictionary.Contains(System.Object)" />」をご覧ください。</summary>
      <param name="key">ディクショナリ内で検索するキー。</param>
      <returns>
        <see cref="T:System.Object" /> が <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IDictionary.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションの反復処理に使用できる列挙子オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Item(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IDictionary.Item(System.Object)" />」をご覧ください。</summary>
      <param name="key">取得または設定する項目のキー。</param>
      <returns>指定したキーを持つ項目。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Remove(System.Object)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IDictionary.Remove(System.Object)" />」をご覧ください。</summary>
      <param name="key">
        <see cref="T:System.Object" /> から削除する <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Values">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 内のすべての値を格納しているコレクションを取得します。</summary>
      <returns>オブジェクト内のすべての値を含むコレクション。</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> オブジェクトのコンテンツを列挙可能な特殊な列挙子を定義します。</summary>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Current">
      <summary>コレクション内の現在のオブジェクトを取得します。</summary>
      <returns>現在のオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Entry">
      <summary>現在位置の <see cref="T:System.Collections.DictionaryEntry" /> オブジェクトを取得します。</summary>
      <returns>現在位置のエントリのキーと値が格納されているオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Key">
      <summary>現在のエントリのキーを取得します。</summary>
      <returns>現在のエントリのキー。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.MoveNext">
      <summary>コレクションの次の項目に移動します。</summary>
      <returns>列挙子が次の要素に正常に進む場合は <see langword="true" />。 残りの要素がない場合、このメソッドは <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Reset">
      <summary>列挙子を初期位置、つまりコレクションの最初のオブジェクトの前に戻します。</summary>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IDictionaryEnumerator#Key">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IDictionaryEnumerator.Key" />」をご覧ください。</summary>
      <returns>列挙体の現在の要素のキー。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IDictionaryEnumerator#Value">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IDictionaryEnumerator.Value" />」をご覧ください。</summary>
      <returns>列挙体の現在の要素の値。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IEnumerator#Current">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.IEnumerator.Current" />」をご覧ください。</summary>
      <returns>コレクション内の現在の要素。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Value">
      <summary>現在のエントリの値を取得します。</summary>
      <returns>現在のエントリの値。</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizer">
      <summary>BAML ファイルからリソースを抽出し、BAML ソースのローカライズ版を生成します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream)">
      <summary>指定された BAML ソース ストリームを使用して、<see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source">ローカライズする BAML 入力を格納するファイル ストリーム。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizabilityResolver)">
      <summary>指定されたローカライズ リゾルバーおよび BAML ソース ストリームを使用して、<see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source">ローカライズする BAML 入力を格納するファイル ストリーム。</param>
      <param name="resolver">
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" /> のインスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizabilityResolver,System.IO.TextReader)">
      <summary>指定されたローカライズ リゾルバー、BAML ソース ストリーム、および <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> を使用して、<see cref="T:System.IO.TextReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source">ローカライズする BAML 入力を格納するファイル ストリーム。</param>
      <param name="resolver">
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" /> のインスタンス。</param>
      <param name="comments">この BAML 入力に関連付けられたローカライズ XML コメントを読み取ります。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> で異常な状態が見つかった場合に発生します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.ExtractResources">
      <summary>BAML ストリームから、すべてのローカライズ可能リソースを抽出します。</summary>
      <returns>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> の形式で表される、BAML ストリームからのローカライズ可能リソースのコピー。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.OnErrorNotify(System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs)">
      <summary>
        <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> イベントを発生させます。</summary>
      <param name="e">必須のイベント引数。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.UpdateBaml(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizationDictionary)">
      <summary>リソースの更新を BAML ソースに適用し、更新されたバージョンを指定したストリームに書き込んで、ソース BAML のローカライズ版を作成します。</summary>
      <param name="target">更新された BAML を受け取るストリーム。</param>
      <param name="updates">ソース BAML に適用するリソースの更新。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> または <paramref name="updates" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerError">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> に発生する可能性があるエラー状態を指定します。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.DuplicateElement">
      <summary>ローカライズされた BAML に、同じ要素への参照が複数含まれています。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.DuplicateUid">
      <summary>複数の要素の <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" /> 値が同一です。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.IncompleteElementPlaceholder">
      <summary>要素代替に、不完全な子プレースホルダーが含まれています。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidCommentingXml">
      <summary>XML コメントの形式が不適切です。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidLocalizationAttributes">
      <summary>ローカリゼーション コメントのテキストに、無効な属性が含まれています。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidLocalizationComments">
      <summary>ローカリゼーション コメントのテキストに、無効なコメントが含まれています。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidUid">
      <summary>
        <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" /> が BAML ソースの要素に対応していません。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.MismatchedElements">
      <summary>代替とソースの不一致を示します。 代替には、ソースのすべての要素プレースホルダーが含まれている必要があります。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.SubstitutionAsPlaintext">
      <summary>要素のコンテンツの代替を XML として解析できないため、代替内の書式設定タグは認識されません。 代わりに、代替はプレーン テキストとして適用されます。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.UidMissingOnChildElement">
      <summary>子要素に <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" /> がありません。 そのため、親のコンテンツ文字列内のプレースホルダーとして表すことができません。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.UnknownFormattingTag">
      <summary>代替内の書式設定タグが認識されません。</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs">
      <summary>
        <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> イベントに対して必要なイベント データを提供します。</summary>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs.Error">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> で発生した特定のエラー状態を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> で発生したエラー状態を表す列挙体の値。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs.Key">
      <summary>エラー状態を生成したリソースに関連付けられているキーを取得します。</summary>
      <returns>エラー状態を生成したリソースに関連付けられているキー。</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventHandler">
      <summary>
        <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Markup.Localizer.ElementLocalizability">
      <summary>要素のローカライズ設定を BAML で表します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.ElementLocalizability.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.Localizer.ElementLocalizability" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.ElementLocalizability.#ctor(System.String,System.Windows.LocalizabilityAttribute)">
      <summary>指定した書式設定タグとローカライズ属性を使用して、<see cref="T:System.Windows.Markup.Localizer.ElementLocalizability" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="formattingTag">書式設定タグ名。 インライン書式設定を指定するには、このパラメーターに空でない値を割り当てます。</param>
      <param name="attribute">関連付けられた要素のローカライズ属性。</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.ElementLocalizability.Attribute">
      <summary>関連付けられた要素のローカライズ属性を取得または設定します。</summary>
      <returns>関連付けられた要素のローカライズ属性。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.ElementLocalizability.FormattingTag">
      <summary>関連付けられている要素の書式設定タグを取得または設定します。</summary>
      <returns>書式指定タグ文字列。</returns>
    </member>
    <member name="T:System.Windows.Markup.NamespaceMapEntry">
      <summary>
        <see cref="T:System.Windows.Markup.XamlTypeMapper" /> が XML 名前空間、CLR 名前空間、およびその CLR 名前空間の関連する型を格納するアセンブリの間の割り当てに使用する情報を提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.NamespaceMapEntry.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.NamespaceMapEntry" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.NamespaceMapEntry.#ctor(System.String,System.String,System.String)">
      <summary>指定された XML 名前空間、CLR 名前空間、およびアセンブリ情報を使用して、<see cref="T:System.Windows.Markup.NamespaceMapEntry" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlNamespace">XML 名前空間のマッピング プレフィックス。</param>
      <param name="assemblyName">XML 名前空間に割り当てる CLR 名前空間および型を格納しているアセンブリ。</param>
      <param name="clrNamespace">関連する型を格納しているアセンブリ内の CLR 名前空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> は <see langword="null" /> です

または -
<paramref name="assemblyName" /> は <see langword="null" /> です

または -
<paramref name="clrNamespace" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.AssemblyName">
      <summary>CLR 名前空間にある型を格納しているアセンブリ名を取得または設定します。</summary>
      <returns>アセンブリ名。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Markup.NamespaceMapEntry.AssemblyName" /> に設定されている値が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.ClrNamespace">
      <summary>割り当てる型を格納している CLR 名前空間を取得または設定します。</summary>
      <returns>CLR 名前空間。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Markup.NamespaceMapEntry.ClrNamespace" /> に設定されている値が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.XmlNamespace">
      <summary>割り当てる XML 名前空間のマッピング プレフィックスを取得または設定します。</summary>
      <returns>XML 名前空間のマッピング プレフィックス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Markup.NamespaceMapEntry.XmlNamespace" /> に設定されている値が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Windows.Markup.ParserContext">
      <summary>XAML パーサーが必要とするコンテキスト情報を提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.ParserContext" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.#ctor(System.Xml.XmlParserContext)">
      <summary>指定された <see cref="T:System.Windows.Markup.ParserContext" /> を使用して、<see cref="T:System.Xml.XmlParserContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlParserContext">新しい <see cref="T:System.Windows.Markup.ParserContext" /> の基となる XML 処理コンテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlParserContext" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.BaseUri">
      <summary>このコンテキストのベース URI を取得または設定します。</summary>
      <returns>ベース URI の文字列。</returns>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.op_Implicit(System.Windows.Markup.ParserContext)~System.Xml.XmlParserContext">
      <summary>XAML の <see cref="T:System.Windows.Markup.ParserContext" /> を <see cref="T:System.Xml.XmlParserContext" /> に変換します。</summary>
      <param name="parserContext">
        <see cref="T:System.Xml.XmlParserContext" /> に変換する XAML パーサー コンテキスト。</param>
      <returns>変換された XML パーサー コンテキスト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parserContext" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.ToXmlParserContext(System.Windows.Markup.ParserContext)">
      <summary>
        <see cref="T:System.Windows.Markup.ParserContext" /> を <see cref="T:System.Xml.XmlParserContext" /> に変換します。</summary>
      <param name="parserContext">
        <see cref="T:System.Xml.XmlParserContext" /> に変換するコンテキスト。</param>
      <returns>XML パーサー コンテキスト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parserContext" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XamlTypeMapper">
      <summary>この <see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用する <see cref="T:System.Windows.Markup.ParserContext" /> を取得または設定します。</summary>
      <returns>XAML 要素を CLR 型に割り当てるときに使用する型マッパー。</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlLang">
      <summary>このコンテキストの <see langword="xml:lang" /> 文字列を取得または設定します。</summary>
      <returns>
        <see langword="xml:lang" /> の文字列値。</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlnsDictionary">
      <summary>この XAML パーサー コンテキストの XAML 名前空間ディクショナリを取得します。</summary>
      <returns>XAML 名前空間ディクショナリ。</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlSpace">
      <summary>
        <see langword="xml:space" /> またはこのコンテキストの文字を取得または設定します。</summary>
      <returns>
        <see langword="xml:space" /> またはこのコンテキストの文字。</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupWriter">
      <summary>XAML 形式でオブジェクトを記述するためのメソッドを提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.Dispose">
      <summary>
        <see cref="T:System.Windows.Markup.Primitives.MarkupWriter" /> で使用したリソースを解放します。</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor(System.Object)">
      <summary>指定したオブジェクトから <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> のインスタンスを作成します。</summary>
      <param name="instance">シリアル化されたツリーのルートとなるオブジェクト。</param>
      <returns>オブジェクト ツリー内の移動を可能にするマークアップ オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor(System.Object,System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>指定したオブジェクトと指定したシリアル化マネージャーから <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> のインスタンスを作成します。</summary>
      <param name="instance">シリアル化されたツリーのルートとなるオブジェクト。</param>
      <param name="manager">シリアル化マネージャー。</param>
      <returns>オブジェクト ツリー内の移動を可能にするマークアップ オブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> または <paramref name="manager" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Windows.Markup.ResourceReferenceExpressionConverter">
      <summary>
        <see langword="ResourceReferenceExpression" /> のインスタンスと他の型との間の変換を行います。</summary>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.ResourceReferenceExpressionConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>コンバーターがソース オブジェクトを <see langword="ResourceReferenceExpression" /> オブジェクトに変換できるかどうかを示す値を返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換前の型。</param>
      <returns>コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>コンバーターが <see langword="ResourceReferenceExpression" /> オブジェクトを指定された型に変換できるかどうかを示す値を返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換後の型。</param>
      <returns>コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定した値を <see langword="ResourceReferenceExpression" /> 型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <returns>変換された値。</returns>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定した <see langword="ResourceReferenceExpression" /> オブジェクトを指定した型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <param name="destinationType">変換後の型。</param>
      <returns>変換された値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> は、<see langword="ResourceReferenceExpression" /> 型であることが必要です。</exception>
    </member>
    <member name="T:System.Windows.Markup.RoutedEventConverter">
      <summary>
        <see cref="T:System.Windows.RoutedEvent" /> オブジェクトを文字列から変換します。</summary>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.RoutedEventConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定した型のオブジェクトを <see cref="T:System.Windows.RoutedEvent" /> のインスタンスに変換できるかどうかを判断します。</summary>
      <param name="typeDescriptorContext">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="sourceType">変換の評価対象となる型。</param>
      <returns>このコンバーターが操作を実行できる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.RoutedEvent" /> のインスタンスを指定した型に変換できるかどうかを判断します。</summary>
      <param name="typeDescriptorContext">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="destinationType">変換の評価対象となる型。</param>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したコンテキストを使用して、指定したオブジェクトの <see cref="T:System.Windows.RoutedEvent" /> オブジェクトへの変換を試みます。</summary>
      <param name="typeDescriptorContext">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="cultureInfo">カルチャ固有の情報。</param>
      <param name="source">変換対象のオブジェクト。</param>
      <returns>変換の結果。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> は文字列でないか、変換することができません。</exception>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Windows.RoutedEvent" /> の指定した型への変換を試みます。 常に例外をスローします。</summary>
      <param name="typeDescriptorContext">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="cultureInfo">カルチャ固有の情報。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <param name="destinationType">オブジェクトの変換後の型。</param>
      <returns>常に例外がスローされます。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> を変換できません。 これは保存パス用の機能しているコンバーターではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> または <paramref name="destinationType" /> が <see langword="null" />です。</exception>
    </member>
    <member name="T:System.Windows.Markup.SetterTriggerConditionValueConverter">
      <summary>
        <see cref="T:System.Windows.Setter" /> 値を処理する <see cref="T:System.Windows.Trigger" />、<see cref="T:System.Windows.Condition" />、および <see cref="T:System.Windows.DependencyProperty" /> 型の型変換と同様の動作を提供します。 このコンバーターは、<see langword="ConvertFrom" /> のみをサポートします。</summary>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.SetterTriggerConditionValueConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>コンバーターがソース オブジェクトを副作用が生成された <see cref="T:System.Windows.Setter" />、<see cref="T:System.Windows.Trigger" />、または <see cref="T:System.Windows.Condition" /> に変換できるかどうかを示す値を返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換前の型。</param>
      <returns>コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>コンバーターが指定された型に変換できるかどうかを示す値を返します。 常に <see langword="false" /> を返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換後の型。</param>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>基になっている型コンバーターをコンテキストから取得できる場合は、変換されるソース値を変換します。 それ以外の場合は、変換されていないソースを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="source">変換対象のオブジェクト。</param>
      <returns>コンバーター オブジェクト。または、場合によっては、変換されていないソース。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> または <paramref name="source" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> サービスは利用できません。</exception>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したオブジェクトを指定した型に変換します。 常に例外をスローします。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <param name="destinationType">変換後の型。</param>
      <returns>常に例外がスローされます。</returns>
      <exception cref="T:System.InvalidOperationException">常にスローされます。</exception>
    </member>
    <member name="T:System.Windows.Markup.TemplateKeyConverter">
      <summary>意図的に型変換経路を持たない <see cref="T:System.Windows.TemplateKey" /> オブジェクトに対する型コンバーターを実装します。 この型コンバーターは、その動作を強制的に実行して報告します。</summary>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.TemplateKeyConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指定した型のオブジェクトを <see cref="T:System.Windows.TemplateKey" /> のインスタンスに変換できるかどうかを判断します。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="sourceType">変換の評価対象となる型。</param>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.TemplateKey" /> のインスタンスを指定した型に変換できるかどうかを判断します。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="destinationType">変換の評価対象となる型。</param>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したオブジェクト (文字列) の <see cref="T:System.Windows.TemplateKey" /> への変換を試みます。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="culture">カルチャ固有の情報。</param>
      <param name="source">変換対象のオブジェクト。</param>
      <returns>常に例外がスローされます。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> を変換できません。</exception>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したコンテキストを使用して、<see cref="T:System.Windows.TemplateKey" /> から指定した型への変換を試みます。</summary>
      <param name="context">このコンバーターの呼び出し元の環境に関する情報を提供する書式指定コンテキスト。</param>
      <param name="culture">カルチャ固有の情報。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <param name="destinationType">オブジェクトの変換後の型。</param>
      <returns>常に例外がスローされます。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> を変換できません。</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlDesignerSerializationManager">
      <summary>XAML デザイナー、または高度なシリアル化を必要とする他の呼び出し元による XAML シリアル化のためのサービスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDesignerSerializationManager.#ctor(System.Xml.XmlWriter)">
      <summary>
        <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlWriter">
        <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" /> の基礎として使用する XML ライター実装。</param>
    </member>
    <member name="P:System.Windows.Markup.XamlDesignerSerializationManager.XamlWriterMode">
      <summary>XAML ライター モードを取得または設定します。</summary>
      <returns>XAML ライター モード。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="T:System.Windows.Markup.XamlWriterMode" /> 列挙体の有効なメンバーではありません。</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlInstanceCreator">
      <summary>後でインスタンス化を実行するためにパーサー レコードを格納する方法を提供する抽象クラス。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlInstanceCreator.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.XamlInstanceCreator" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlInstanceCreator.CreateObject">
      <summary>派生クラスでオーバーライドされると、パーサー レコードを格納する新しいオブジェクトを作成します。</summary>
      <returns>作成されたオブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlParseException">
      <summary>WPF XAML パーサーからのパーサー固有の例外の例外クラスを表します。 この例外は、.NET Framework 3.0 および .NET Framework 3.5 からの XAML API または WPF XAML パーサーの操作で使用されるか、または <see cref="T:System.Windows.Markup.XamlReader" /> API を呼び出すことによって WPF XAML パーサーの特定の用途に使用されます。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">オブジェクトのシリアル化または逆シリアル化に必要な情報をすべて含みます。</param>
      <param name="context">シリアル化ストリームの転送元および転送先。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String)">
      <summary>指定した例外メッセージ文字列を使用して、<see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージ。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)">
      <summary>指定した例外メッセージ文字列と内部例外を使用して、<see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージ。</param>
      <param name="innerException">発生した最初の例外。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)">
      <summary>指定した例外メッセージ文字列、指定した行番号、および行の位置を使用して、<see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージ。</param>
      <param name="lineNumber">例外が発生した行番号。</param>
      <param name="linePosition">例外が発生した行内の位置。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
      <summary>指定した例外メッセージ、内部例外、行番号、および行の位置を使用して、<see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外メッセージ。</param>
      <param name="lineNumber">例外が発生した行番号。</param>
      <param name="linePosition">例外が発生した行内の位置。</param>
      <param name="innerException">発生した最初の例外。</param>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.BaseUri">
      <summary>例外がスローされたときのベース URI を取得します。</summary>
      <returns>パーサー コンテキストのベース URI。</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定した <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定することにより、指定したオブジェクトのシリアル化に必要なデータを取得します。</summary>
      <param name="info">シリアル化データを追加するシリアル化情報オブジェクト。</param>
      <param name="context">このシリアル化のシリアル化先。</param>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.KeyContext">
      <summary>例外が発生したディクショナリにある項目のキーの値を取得または設定します。</summary>
      <returns>関連する XAML の <see langword="x:Key" /> 値。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LineNumber">
      <summary>例外が発生した行番号を取得します。</summary>
      <returns>行番号。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LinePosition">
      <summary>例外が発生した行内の位置を取得します。</summary>
      <returns>行番号。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.NameContext">
      <summary>例外が発生したオブジェクトの XAML 名を取得または設定します。</summary>
      <returns>オブジェクトの XAML 名。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.UidContext">
      <summary>例外が発生したオブジェクトの x:Uid ディレクティブを取得または設定します。</summary>
      <returns>
        <see langword="Uid" /> 文字列の値。</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlReader">
      <summary>WPF の既定の XAML リーダーおよび関連付けられている XAML オブジェクト ライターを使用して、XAML 入力を読み取り、オブジェクト グラフを作成します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.XamlReader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.CancelAsync">
      <summary>非同期読み込み操作が保留中である場合、現在の非同期読み込み操作を中止します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.GetWpfSchemaContext">
      <summary>
        <see cref="T:System.Xaml.XamlSchemaContext" /> の WPF スキーマ コンテキスト設定を表す <see cref="T:System.Windows.Markup.XamlReader" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Xaml.XamlSchemaContext" /> の WPF スキーマ コンテキスト設定を表す <see cref="T:System.Windows.Markup.XamlReader" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream)">
      <summary>指定した <see cref="T:System.IO.Stream" /> 内の XAML 入力を読み取り、対応するオブジェクト ツリーのルートである <see cref="T:System.Object" /> を返します。</summary>
      <param name="stream">ストリーム形式の読み込む XAML。</param>
      <returns>作成されたオブジェクト ツリーのルートのオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)">
      <summary>指定した <see cref="T:System.IO.Stream" /> 内の XAML 入力を読み取り、対応するオブジェクト ツリーのルートであるオブジェクトを返します。</summary>
      <param name="stream">読み込む XAML 入力を格納しているストリーム。</param>
      <param name="parserContext">パーサーで使用するコンテキスト情報。</param>
      <returns>作成されたオブジェクト ツリーのルートとなるオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" /> です。

または -
<paramref name="parserContext" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)">
      <summary>指定した <see cref="T:System.Xaml.XamlReader" /> を使用して XAML 入力を読み取り、対応するオブジェクト ツリーのルートであるオブジェクトを返します。</summary>
      <param name="reader">
        <see cref="T:System.Xaml.XamlReader" /> オブジェクト。 入力 XAML で初期化されていることが求められます。</param>
      <returns>作成されたオブジェクト ツリーのルートとなるオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)">
      <summary>指定した <see cref="T:System.Xml.XmlReader" /> 内の XAML 入力を読み取り、対応するオブジェクト ツリーのルートであるオブジェクトを返します。</summary>
      <param name="reader">XAML 入力を既に XML 形式で読み込んでいる <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>作成されたオブジェクト ツリーのルートとなるオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)">
      <summary>指定した <see cref="T:System.IO.Stream" /> 内の XAML 入力を読み取り、対応するオブジェクト ツリーのルートを返します。</summary>
      <param name="stream">読み込む XAML 入力を格納しているストリーム。</param>
      <returns>作成されたオブジェクト ツリーのルートとなるオブジェクト。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">1 つの <see cref="T:System.Windows.Markup.XamlReader" /> で、複数の読み込み操作が同時に保留になります。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)">
      <summary>指定した <see cref="T:System.IO.Stream" /> 内の XAML 入力を読み取り、対応するオブジェクト ツリーのルートを返します。</summary>
      <param name="stream">読み込む XAML 入力を格納しているストリーム。</param>
      <param name="parserContext">パーサーで使用するコンテキスト情報。</param>
      <returns>作成されたオブジェクト ツリーのルート。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">1 つの <see cref="T:System.Windows.Markup.XamlReader" /> で、複数の読み込み操作が同時に実行されます。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)">
      <summary>指定した <see cref="T:System.Xml.XmlReader" /> 内の XAML 入力を読み取り、対応するオブジェクト ツリーのルートを返します。</summary>
      <param name="reader">XAML 入力を既に読み込んでいる (読み取っている) 既存の <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>作成されたオブジェクト ツリーのルート。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">1 つの <see cref="T:System.Windows.Markup.XamlReader" /> で、複数の読み込み操作が同時に実行されます。</exception>
    </member>
    <member name="E:System.Windows.Markup.XamlReader.LoadCompleted">
      <summary>非同期の読み込み操作の完了時に発生します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Parse(System.String)">
      <summary>指定したテキスト文字列内の XAML 入力を読み取り、指定したマークアップのルートに対応するオブジェクトを返します。</summary>
      <param name="xamlText">単一のテキスト文字列としての入力 XAML。</param>
      <returns>作成されたオブジェクト ツリーのルート。</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)">
      <summary>指定したテキスト文字列 (指定した <see cref="T:System.Windows.Markup.ParserContext" /> を使用) 内の XAML マークアップを読み取り、指定したマークアップのルートに対応するオブジェクトを返します。</summary>
      <param name="xamlText">単一のテキスト文字列としての入力 XAML。</param>
      <param name="parserContext">パーサーで使用するコンテキスト情報。</param>
      <returns>作成されたオブジェクト ツリーのルート。</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlTypeMapper">
      <summary>XAML 要素名をアセンブリ内の適切な CLR <see cref="T:System.Type" /> に割り当てます。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])">
      <summary>
        <see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用するアセンブリ名の配列を指定して、<see cref="T:System.Windows.Markup.XamlTypeMapper" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="assemblyNames">
        <see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用するアセンブリ名の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyNames" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
      <summary>指定されたアセンブリ名の配列と名前空間の割り当てを使用して、<see cref="T:System.Windows.Markup.XamlTypeMapper" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="assemblyNames">
        <see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用するアセンブリ名の配列。</param>
      <param name="namespaceMaps">
        <see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用する名前空間の割り当ての配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyNames" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
      <summary>XML 名前空間とアセンブリの CLR 名前空間の間の割り当てを定義し、それを <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 情報に追加します。</summary>
      <param name="xmlNamespace">XML 名前空間のプレフィックス。</param>
      <param name="clrNamespace">割り当てる型が含まれている CLR 名前空間。</param>
      <param name="assemblyName">CLR 名前空間を格納するアセンブリ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> は <see langword="null" /> です

または -
<paramref name="clrNamespace" /> は <see langword="null" /> です

または
<paramref name="assemblyName" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
      <summary>特定の内部型にアクセスするために完全な信頼で呼び出される <see cref="T:System.Windows.Markup.XamlTypeMapper" /> の派生型に対して、アクセス許可を要求します。</summary>
      <param name="type">アクセスする型。</param>
      <returns>内部型にアクセスできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
      <summary>指定されていない場合、使用する <see cref="T:System.Windows.Markup.XamlTypeMapper" /> のインスタンスを取得します。</summary>
      <returns>既定の型マッパー。</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
      <summary>指定された XML 名前空間プレフィックスおよび要素名を使用して、特定の XAML 要素が割り当てられる CLR <see cref="T:System.Type" /> を取得します。</summary>
      <param name="xmlNamespace">指定した XML 名前空間プレフィックス。</param>
      <param name="localName">割り当てられた <see cref="T:System.Type" /> を取得する XAML 要素の "ローカル" 名。 このコンテキストでの "ローカル" とは、提供された <paramref name="xmlNamespace" /> に対して割り当てられたものであることを意味します。</param>
      <returns>オブジェクトの <see cref="T:System.Type" />。割り当てを解決できない場合は、<see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> は <see langword="null" /> です

または -
<paramref name="localName" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
      <summary>アセンブリの読み込み時に使用するパスを指定します。</summary>
      <param name="assemblyName">拡張子やパスを指定しない、アセンブリの短い名前 (<see cref="P:System.Reflection.AssemblyName.Name" /> と等価)。</param>
      <param name="assemblyPath">アセンブリのファイル パス。 アセンブリのパスは、拡張子を含む完全なファイル パスである必要があります。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> は <see langword="null" /> です

または -
<paramref name="assemblyPath" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.Windows.Markup.XamlParseException">
        <paramref name="assemblyName" /> は <see cref="F:System.String.Empty" /> です

または -
<paramref name="assemblyPath" /> は <see cref="F:System.String.Empty" /> です

または
<paramref name="assemblyPath" /> は、拡張子を含むファイルの完全パスではありません。</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlWriter">
      <summary>指定されたランタイム オブジェクトの XAML マークアップへの制限された XAML シリアル化に使用できる単一の静的 <see cref="Overload:System.Windows.Markup.XamlWriter.Save" /> メソッド (複数のオーバーロード) を提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object)">
      <summary>指定されたオブジェクトとそのプロパティをシリアル化する XAML 文字列を返します。</summary>
      <param name="obj">シリアル化する要素。 通常、これはページまたはアプリケーションのルート要素です。</param>
      <returns>ストリームまたはファイルに書き込むことができる XAML 文字列。 指定された <paramref name="obj" /> 要素の下のすべての要素の論理ツリーがシリアル化されます。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.SecurityException">アプリケーションが完全信頼で実行されていません。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.IO.Stream)">
      <summary>XAML 情報を指定されたストリームに保存して、指定されたオブジェクトとそのプロパティをシリアル化します。</summary>
      <param name="obj">シリアル化する要素。 通常、これはページまたはアプリケーションのルート要素です。</param>
      <param name="stream">シリアル化される XAML 情報の保存先ストリーム。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> または <paramref name="stream" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.SecurityException">アプリケーションが完全信頼で実行されていません。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.IO.TextWriter)">
      <summary>提供された <see cref="T:System.IO.TextWriter" /> オブジェクトのソースとして XAML 情報を保存します。 これで、<see cref="T:System.IO.TextWriter" /> の出力を、指定されたオブジェクトとそのプロパティをシリアル化するために使用できるようになります。</summary>
      <param name="obj">シリアル化する要素。 通常、これはページまたはアプリケーションのルート要素です。</param>
      <param name="writer">シリアル化された XAML 情報の書き込み先である <see cref="T:System.IO.TextWriter" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> または <paramref name="writer" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.SecurityException">アプリケーションが完全信頼で実行されていません。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>カスタム シリアライザーに XAML 情報を保存します。 シリアライザーの出力は、指定されたオブジェクトとそのプロパティをシリアル化するために使用できます。</summary>
      <param name="obj">シリアル化する要素。 通常、これはページまたはアプリケーションのルート要素です。</param>
      <param name="manager">カスタム シリアル化の実装。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> または <paramref name="manager" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.SecurityException">アプリケーションが完全信頼で実行されていません。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.Xml.XmlWriter)">
      <summary>提供された <see cref="T:System.Xml.XmlWriter" /> オブジェクトのソースとして XAML 情報を保存します。 これで、<see cref="T:System.Xml.XmlWriter" /> の出力を、指定されたオブジェクトとそのプロパティをシリアル化するために使用できるようになります。</summary>
      <param name="obj">シリアル化する要素。 通常、これはページまたはアプリケーションのルート要素です。</param>
      <param name="xmlWriter">シリアル化される XAML 情報を書き込むために使用するライター。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> または <paramref name="xmlWriter" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.SecurityException">アプリケーションが完全信頼で実行されていません。</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlWriterMode">
      <summary>式である値 (バインディング宣言など) をシリアル化するための XAML ライター モードを指定します。</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterMode.Expression">
      <summary>
        <see cref="T:System.Windows.Expression" /> がシリアル化されます。</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterMode.Value">
      <summary>
        <see cref="T:System.Windows.Expression" /> の評価値がシリアル化されます。</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlWriterState">
      <summary>カスタム XAML ライターの使用可能な書き込み状態を記述します。</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterState.Finished">
      <summary>
        <see cref="T:System.Windows.Markup.XamlWriter" /> の操作が完了しました。</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterState.Starting">
      <summary>
        <see cref="T:System.Windows.Markup.XamlWriter" /> の操作が完了しました。</summary>
    </member>
    <member name="T:System.Windows.Markup.XmlAttributeProperties">
      <summary>
        <see cref="T:System.Windows.DependencyObject" /> の XML 言語関連属性をカプセル化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlNamespaceMaps(System.Windows.DependencyObject)">
      <summary>指定した <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 添付プロパティの値を取得します。</summary>
      <param name="dependencyObject">
        <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> プロパティを取得するオブジェクト。</param>
      <returns>指定したオブジェクトの <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlnsDefinition(System.Windows.DependencyObject)">
      <summary>指定した <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 添付プロパティの値を取得します。</summary>
      <param name="dependencyObject">
        <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 添付プロパティの値を取得するオブジェクト。</param>
      <returns>指定されたオブジェクトの <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 添付プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> は <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlnsDictionary(System.Windows.DependencyObject)">
      <summary>指定した <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 添付プロパティの値を取得します。</summary>
      <param name="dependencyObject">
        <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 添付プロパティの値を取得するオブジェクト。</param>
      <returns>指定されたオブジェクトの <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 添付プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace(System.Windows.DependencyObject)">
      <summary>指定した <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 添付プロパティの値を取得します。</summary>
      <param name="dependencyObject">
        <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 添付プロパティの値を取得するオブジェクト。</param>
      <returns>指定されたオブジェクトの <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 添付プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlNamespaceMaps(System.Windows.DependencyObject,System.String)">
      <summary>指定した <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 添付プロパティの値を設定します。</summary>
      <param name="dependencyObject">
        <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 添付プロパティの設定対象のオブジェクト。</param>
      <param name="value">設定する文字列値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlnsDefinition(System.Windows.DependencyObject,System.String)">
      <summary>指定した <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 添付プロパティの値を設定します。</summary>
      <param name="dependencyObject">
        <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> プロパティの設定対象のオブジェクト。</param>
      <param name="value">文字列形式の XML 名前空間定義。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlnsDictionary(System.Windows.DependencyObject,System.Windows.Markup.XmlnsDictionary)">
      <summary>指定した <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 添付プロパティの値を設定します。</summary>
      <param name="dependencyObject">
        <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 添付プロパティの設定対象のオブジェクト。</param>
      <param name="value">文字列形式の <see langword="xmlns" /> ディクショナリ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlSpace(System.Windows.DependencyObject,System.String)">
      <summary>指定した <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 添付プロパティの値を設定します。</summary>
      <param name="dependencyObject">
        <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 添付プロパティの設定対象のオブジェクト。</param>
      <param name="value">XML 空間に使用する文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps">
      <summary>.NET Framework 3.0 および .NET Framework 3.5 の WPF XAML パーサーで使用される XML 名前空間マップを格納している添付プロパティ値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMapsProperty">
      <summary>
        <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition">
      <summary>.NET Framework 3.0 および .NET Framework 3.5 の WPF XAML パーサーで使用される <see langword="xmlns" /> 定義を格納している添付プロパティ値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinitionProperty">
      <summary>
        <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary">
      <summary>.NET Framework 3.0 および .NET Framework 3.5 の WPF XAML パーサーで使用される <see langword="xmlns" /> ディクショナリを格納している添付プロパティ値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionaryProperty">
      <summary>
        <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace">
      <summary>
        <see langword="xml:space" /> プロパティのマップされた値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlSpaceProperty">
      <summary>
        <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDictionary">
      <summary>WPF での XAML 名前空間に対する xmlns のマッピングを格納するディクショナリを表します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.#ctor(System.Windows.Markup.XmlnsDictionary)">
      <summary>指定したディクショナリをコピー元として使用して、<see cref="T:System.Windows.Markup.XmlnsDictionary" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlnsDictionary">新しい <see cref="T:System.Windows.Markup.XmlnsDictionary" /> の基となるディクショナリ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlnsDictionary" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Add(System.Object,System.Object)">
      <summary>この <see cref="T:System.Windows.Markup.XmlnsDictionary" /> にプレフィックス URI ペアを追加します。</summary>
      <param name="prefix">追加する XAML 名前空間のプレフィックス。</param>
      <param name="xmlNamespace">プレフィックスの割り当て先の XAML 名前空間 URI。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="prefix" /> または <paramref name="xmlNamespace" /> が文字列ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> または <paramref name="xmlNamespace" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> はシールされています。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Add(System.String,System.String)">
      <summary>この <see cref="T:System.Windows.Markup.XmlnsDictionary" /> にプレフィックス URI ペアを追加します。</summary>
      <param name="prefix">この XML 名前空間のプレフィックス。</param>
      <param name="xmlNamespace">プレフィックスの割り当て先の XML 名前空間 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> または <paramref name="xmlNamespace" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> はシールされています。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Clear">
      <summary>この <see cref="T:System.Windows.Markup.XmlnsDictionary" /> からすべてのエントリを削除します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> はシールされています。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Contains(System.Object)">
      <summary>指定したプレフィックス キーがこの <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 内に存在するかどうかを示す値を返します。</summary>
      <param name="key">検索対象のプレフィックス キー。</param>
      <returns>要求されたプレフィックス キーがディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.CopyTo(System.Array,System.Int32)">
      <summary>指定した配列に、<see cref="T:System.Windows.Markup.XmlnsDictionary" /> 内のエントリをコピーします。</summary>
      <param name="array">テーブル データのコピー先の配列。</param>
      <param name="index">コピーの開始位置となる、コピー先配列内の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>指定した <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 配列に、<see cref="T:System.Collections.DictionaryEntry" /> 内のエントリをコピーします。</summary>
      <param name="array">テーブル データのコピー先の配列。</param>
      <param name="index">コピーの開始位置となる、コピー先配列内の 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Count">
      <summary>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 内の項目の数を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 内の項目数。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.DefaultNamespace">
      <summary>既定の XAML 名前空間に対応する XAML 名前空間を検索します。</summary>
      <returns>既定の XML 名前空間に対応する名前空間 (存在する場合)。存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetDictionaryEnumerator">
      <summary>この <see cref="T:System.Windows.Markup.XmlnsDictionary" /> を反復処理するディクショナリ列挙子を返します。</summary>
      <returns>このディクショナリのディクショナリ列挙子。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetEnumerator">
      <summary>この <see cref="T:System.Windows.Markup.XmlnsDictionary" /> を反復処理する列挙子を返します。</summary>
      <returns>このディクショナリの列挙子。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetNamespace(System.String)">
      <summary>提供されたプレフィックス文字列に対応する XAML 名前空間を取得します。</summary>
      <param name="prefix">XAML 名前空間を取得するプレフィックス。</param>
      <returns>要求された XAML 名前空間の URI。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetNamespacePrefixes">
      <summary>アクティブなスキーマ コンテキストで使用できる可能性のあるすべてのプレフィックス-XAML 名前空間のマッピング (<see cref="T:System.Xaml.NamespaceDeclaration" /> の値) を返します。</summary>
      <returns>
        <see cref="T:System.Xaml.NamespaceDeclaration" /> の値の列挙可能なセット。 具体的なプレフィックス文字列を取得するには、返された各値から <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> の値を取得します。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsFixedSize">
      <summary>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> のサイズが固定されているかどうかを示す値を取得します。</summary>
      <returns>サイズが固定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsReadOnly">
      <summary>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> が読み取り専用かどうかを示す値を取得します。</summary>
      <returns>ディクショナリが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsSynchronized">
      <summary>この <see cref="T:System.Windows.Markup.XmlnsDictionary" /> へのアクセスがスレッド セーフかどうかを示す値を取得します。</summary>
      <returns>このディクショナリへのアクセスがスレッド セーフである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Item(System.Object)">
      <summary>指定されたプレフィックスに関連付けられている XAML 名前空間 URI を取得または設定します。</summary>
      <param name="prefix">関連付けられている XML 名前空間 URI を取得または設定するプレフィックス。</param>
      <returns>対応する XAML 名前空間 URI。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="prefix" /> は文字列ではありません

または -
設定する値は文字列ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> は <see langword="null" /> です

または -
設定する値は <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Item(System.String)">
      <summary>指定されたプレフィックスに関連付けられている XAML 名前空間 URI を取得または設定します。</summary>
      <param name="prefix">関連付けられた名前空間を取得または設定するプレフィックス。</param>
      <returns>対応する XML 名前空間 URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> は <see langword="null" /> です

または -
設定する値は <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Keys">
      <summary>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> のすべてのキーのコレクションを取得します。</summary>
      <returns>ディクショナリのすべてのキーのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.LookupNamespace(System.String)">
      <summary>指定した XAML 名前空間プレフィックスに対応する XML 名前空間 URI を返します。</summary>
      <param name="prefix">検索対象の XAML 名前空間プレフィックス。</param>
      <returns>指定されたプレフィックスに対応する XAML 名前空間 URI (この <see cref="T:System.Windows.Markup.XmlnsDictionary" /> に存在する場合)。存在しない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.LookupPrefix(System.String)">
      <summary>指定した XAML 名前空間 URI に対応するプレフィックスを返します。</summary>
      <param name="xmlNamespace">検索対象の XAML 名前空間 URI。</param>
      <returns>指定された名前空間に対応する XML プレフィックス (存在する場合)。存在しない場合は <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.PopScope">
      <summary>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> のスコープをポップします。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> はシールされています。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.PushScope">
      <summary>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> のスコープをプッシュします。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> はシールされています。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Remove(System.Object)">
      <summary>指定されたプレフィックス キーを持つ項目を <see cref="T:System.Windows.Markup.XmlnsDictionary" /> から削除します。</summary>
      <param name="prefix">削除するプレフィックス キー。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> はシールされています。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Remove(System.String)">
      <summary>指定されたプレフィックス キーを持つ項目を <see cref="T:System.Windows.Markup.XmlnsDictionary" /> から削除します。</summary>
      <param name="prefix">削除するプレフィックス キー。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> はシールされています。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Seal">
      <summary>変更できないようにディクショナリをロックします。</summary>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Sealed">
      <summary>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> がシールされているかどうかを示す値を取得します。</summary>
      <returns>ディクショナリがシールされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.SyncRoot">
      <summary>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IDictionary.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IDictionaryEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Values">
      <summary>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> のすべての値のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> のすべての値のコレクション。</returns>
    </member>
    <member name="T:System.Windows.Media.AdornerHitTestResult">
      <summary>
        <see cref="M:System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point)" /> メソッドの呼び出しから返されるデータを表します。</summary>
    </member>
    <member name="P:System.Windows.Media.AdornerHitTestResult.Adorner">
      <summary>ヒットしたビジュアルを取得します。</summary>
      <returns>ヒットしたビジュアル。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.BeginStoryboard">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> を開始して、そのアニメーションを対象となるオブジェクトとプロパティに配布するトリガー アクション。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BeginStoryboard.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.HandoffBehavior">
      <summary>このストーリー ボードのアニメーション クロックを開始するための適切なハンドオフ動作を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 列挙値のいずれか。 既定値は <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> です。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Name">
      <summary>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> オブジェクトの名前を取得または設定します。 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> オブジェクトに名前を付けると、<see cref="T:System.Windows.Media.Animation.Storyboard" /> を開始後に制御できます。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> の名前。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard">
      <summary>この <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> が開始する <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> が開始する <see cref="T:System.Windows.Media.Animation.Storyboard" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ControllableStoryboardAction">
      <summary>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> アクションによって適用された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を操作します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ControllableStoryboardAction.BeginStoryboardName">
      <summary>対話的に制御する <see cref="T:System.Windows.Media.Animation.Storyboard" /> を開始した <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> の <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Name" /> を取得または設定します。</summary>
      <returns>対話的に制御する <see cref="T:System.Windows.Media.Animation.Storyboard" /> を開始した <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> の <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Name" />。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame">
      <summary>離散補間を使って、前のキー フレームの <see cref="T:System.Windows.Thickness" /> 値からそれ自体の <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> にアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>指定した終了値を使用して、<see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">キーフレームの終了値 (「ターゲット値」とも呼ばれます)。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>指定した終了値とキー時刻を使用して <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">キーフレームの終了値 (「ターゲット値」とも呼ばれます)。</param>
      <param name="keyTime">キーフレームのキー時刻。 キー時刻によりターゲット値に到達する時点が決まります。この時刻はキーフレームが終了する時点にもなります。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.CreateInstanceCore">
      <summary>
        <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> の新しいインスタンスを作成します。</summary>
      <returns>新しいインスタンス。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>離散補間を使用して、前のキー フレーム値と現在のキー フレーム値の間を補間します。</summary>
      <param name="baseValue">アニメーション化を開始する値。</param>
      <param name="keyFrameProgress">このキー フレームで経過した時間の比率を指定する 0.0 ～ 1.0 の値。</param>
      <returns>指定した基本値と進行を前提とした場合のこのキー フレームの出力値。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingThicknessKeyFrame">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> キー フレーム アニメーションへのイージング関数の関連付けを可能にするクラスです。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>指定した <see cref="T:System.Windows.Thickness" /> 値を使用して、<see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">初期 <see cref="T:System.Windows.Thickness" /> 値。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> 値とキー時刻を使用して、<see cref="T:System.Windows.Thickness" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">初期 <see cref="T:System.Windows.Thickness" /> 値。</param>
      <param name="keyTime">初期キー時刻。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> 値、キー時刻、およびイージング関数を使用して、<see cref="T:System.Windows.Thickness" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">初期 <see cref="T:System.Windows.Thickness" /> 値。</param>
      <param name="keyTime">初期キー時刻。</param>
      <param name="easingFunction">イージング関数。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.CreateInstanceCore">
      <summary>
        <see cref="T:System.Windows.Freezable" /> 派生クラスの新しいインスタンスを作成します。 派生クラスを作成するときには、このメソッドをオーバーライドする必要があります。</summary>
      <returns>新しいインスタンス。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction">
      <summary>キー フレームに適用されるイージング関数を取得または設定します。</summary>
      <returns>キー フレームに適用されるイージング関数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunctionProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>前のキー フレームの値と現在のキー フレームの値の間を、使用されるイージング関数に従い、指定した進行インクリメントを使用して補間します。</summary>
      <param name="baseValue">アニメーション化を開始する値。</param>
      <param name="keyFrameProgress">このキー フレームの経過時間の割合を示す 0.0 ～ 1.0 の値。</param>
      <returns>指定された基準値と進行状況が示された、このキー フレームの出力値。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearThicknessKeyFrame">
      <summary>線状補間を使用して、前のキー フレームの <see cref="T:System.Windows.Thickness" /> 値から独自の <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> にアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>指定した終了値を使用して、<see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">キー フレームの終了値 (「ターゲット値」)。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>指定した終了値とキー時刻を使用して <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">キー フレームの終了値 (「ターゲット値」)。</param>
      <param name="keyTime">キー フレームのキー時刻。 キー時刻によりターゲット値に到達する時点が決まります。この時刻はキー フレームが終了する時点にもなります。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.CreateInstanceCore">
      <summary>
        <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> の新しいインスタンスを作成します。</summary>
      <returns>新しいインスタンス。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>指定された進行状況の増分を使用して、以前のキー フレーム値と現在のキー フレーム値の間の線形補間を実行します。</summary>
      <param name="baseValue">アニメーション化を開始する値。</param>
      <param name="keyFrameProgress">このキー フレームの経過時間の割合を示す 0.0 ～ 1.0 の値。</param>
      <returns>指定された基準値と進行状況が示された、このキー フレームの出力値。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PauseStoryboard">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> を一時停止するトリガー アクション。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PauseStoryboard.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.PauseStoryboard" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.RemoveStoryboard">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> を削除するトリガー アクション。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RemoveStoryboard.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.RemoveStoryboard" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ResumeStoryboard">
      <summary>一時停止していた <see cref="T:System.Windows.Media.Animation.Storyboard" /> を再開するトリガー アクションをサポートします。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ResumeStoryboard.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ResumeStoryboard" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SeekStoryboard">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> のアクティブ期間内で指定時刻をシーク (指定時刻にスキップ) する機能を提供するトリガー アクション。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SeekStoryboard.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SeekStoryboard.Offset">
      <summary>ストーリーボードが、シーク操作の基点となる <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Origin" /> から前方または後方にどれだけ移動するかを示す値を取得または設定します。 .</summary>
      <returns>ストーリーボードを、シーク操作の基点となる <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Origin" /> から前方または後方にどれだけ移動するかを示す正または負の値。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SeekStoryboard.Origin">
      <summary>このシーク操作の <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> が適用される位置を取得または設定します。</summary>
      <returns>このシーク操作の <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> が適用される位置。 既定値は <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> です。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SeekStoryboard.ShouldSerializeOffset">
      <summary>この <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> の <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> プロパティをシリアル化するかどうかを示す値を返します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> の <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> プロパティをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> の速度を変更するトリガー アクション。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SetStoryboardSpeedRatio.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SetStoryboardSpeedRatio.SpeedRatio">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> の新しいアニメーション速度を古いアニメーション速度に対する比率で取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> の速度比率。 既定値は 1.0 です。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SkipStoryboardToFill">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> を保留期間の最後に進めるトリガー アクション。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SkipStoryboardToFill.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.SkipStoryboardToFill" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineThicknessKeyFrame">
      <summary>スプライン補間を使用して、前のキー フレームの <see cref="T:System.Windows.Thickness" /> 値から独自の <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> にアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>指定した終了値を使用して、<see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">キー フレームの終了値 (「ターゲット値」)。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>指定した終了値とキー時刻を使用して <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">キー フレームの終了値 (「ターゲット値」)。</param>
      <param name="keyTime">キー フレームのキー時刻。 キー時刻によりターゲット値に到達する時点が決まります。この時刻はキー フレームが終了する時点にもなります。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>指定した終了値、キー時刻、および <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> を使用して、<see cref="T:System.Windows.Media.Animation.KeySpline" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">キー フレームの終了値 (「ターゲット値」)。</param>
      <param name="keyTime">キー フレームのキー時刻。 キー時刻によりターゲット値に到達する時点が決まります。この時刻はキー フレームが終了する時点にもなります。</param>
      <param name="keySpline">キー フレームの <see cref="T:System.Windows.Media.Animation.KeySpline" />。 <see cref="T:System.Windows.Media.Animation.KeySpline" /> は、キー フレームのアニメーションの進行を定義するベジエ曲線を表します。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.CreateInstanceCore">
      <summary>
        <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> の新しいインスタンスを作成します。</summary>
      <returns>新しいインスタンス。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>スプライン補間を使用して、前のキー フレーム値から現在のキー フレーム値まで遷移します。</summary>
      <param name="baseValue">アニメーション化を開始する値。</param>
      <param name="keyFrameProgress">このキー フレームの経過時間の割合を示す 0.0 ～ 1.0 の値。</param>
      <returns>指定された基準値と進行状況が示された、このキー フレームの出力値。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline">
      <summary>このキー フレームのアニメーションの進行を定義する 2 つの制御点を取得または設定します。</summary>
      <returns>キー フレームの進行を定義する、3 次ベジエ曲線を指定する 2 つの制御点。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySplineProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.StopStoryboard">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> を停止するトリガー アクション。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StopStoryboard.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.StopStoryboard" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Storyboard">
      <summary>子アニメーションのオブジェクトやプロパティの対象化情報を提供するコンテナ タイムライン。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</summary>
      <param name="containingObject">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</summary>
      <param name="containingObject">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</param>
      <param name="isControllable">ストーリー ボードが対話的に制御可能である必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.Storyboard" /> を使用して、この <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> に関連付けられているアニメーションを対象に適用して開始します。</summary>
      <param name="containingObject">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</param>
      <param name="handoffBehavior">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.Storyboard" /> を使用して、この <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> に関連付けられているアニメーションを対象に適用して開始します。</summary>
      <param name="containingObject">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</param>
      <param name="handoffBehavior">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</param>
      <param name="isControllable">アニメーションを起動した後に、アニメーションを制御できるかどうか (一時停止できるかどうか) を宣言します。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</summary>
      <param name="containingObject">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</summary>
      <param name="containingObject">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</param>
      <param name="isControllable">ストーリー ボードが対話的に制御可能である必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</summary>
      <param name="containingObject">指定した <paramref name="frameworkTemplate" /> が適用されたオブジェクト。 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</param>
      <param name="frameworkTemplate">アニメーション化するテンプレート。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</summary>
      <param name="containingObject">指定した <paramref name="frameworkTemplate" /> が適用されたオブジェクト。  <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</param>
      <param name="frameworkTemplate">アニメーション化するテンプレート。</param>
      <param name="isControllable">ストーリー ボードが対話的に制御可能である必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</summary>
      <param name="containingObject">指定した <paramref name="frameworkTemplate" /> が適用されたオブジェクト。 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</param>
      <param name="frameworkTemplate">アニメーション化するテンプレート。</param>
      <param name="handoffBehavior">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</summary>
      <param name="containingObject">指定した <paramref name="frameworkTemplate" /> が適用されたオブジェクト。 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</param>
      <param name="frameworkTemplate">アニメーション化するテンプレート。</param>
      <param name="handoffBehavior">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</param>
      <param name="isControllable">ストーリー ボードが対話的に制御可能である必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.Storyboard" /> を使用して、この <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> に関連付けられているアニメーションを対象に適用して開始します。</summary>
      <param name="containingObject">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</param>
      <param name="handoffBehavior">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</summary>
      <param name="containingObject">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</param>
      <param name="handoffBehavior">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</param>
      <param name="isControllable">アニメーションを起動した後に、アニメーションを制御できるかどうか (一時停止できるかどうか) を宣言します。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Clone">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</summary>
      <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> である場合でも、<see langword="false" /> になります。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> クラスの新しいインスタンスを作成します。</summary>
      <returns>新しい <see cref="T:System.Windows.Media.Animation.Storyboard" /> インスタンス。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <returns>現在のグローバル速度。クロックが停止している場合は 0。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <returns>現在のグローバル速度。クロックが停止している場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <returns>現在のグローバル速度。クロックが停止している場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <returns>現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <returns>現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <returns>現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <returns>このクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は <see langword="null" />、またはこのクロックがアクティブであり、その <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> の <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> が <see cref="P:System.Windows.Duration.Forever" /> の場合は 0.0。それ以外の場合は、現在の反復におけるこのクロックの現在の進行状況を示す 0.0 ～ 1.0 の値。 値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <returns>このクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は <see langword="null" />、またはこのクロックがアクティブであり、その <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> の <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> が <see cref="P:System.Windows.Duration.Forever" /> の場合は 0.0。それ以外の場合は、現在の反復におけるこのクロックの現在の進行状況を示す 0.0 ～ 1.0 の値。 値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <returns>このクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は <see langword="null" />、またはこのクロックがアクティブであり、その <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> の <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> が <see cref="P:System.Windows.Duration.Forever" /> の場合は 0.0。それ以外の場合は、現在の反復におけるこのクロックの現在の進行状況を示す 0.0 ～ 1.0 の値。 値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <returns>このストーリーボード用に作成されたクロックの現在の状態 ( <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <returns>このストーリーボード用に作成されたクロックの現在の状態 ( <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <returns>このストーリーボード用に作成されたクロックの現在の状態 ( <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <returns>このストーリーボードのクロックが停止している (<see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />) 場合は <see langword="null" />。それ以外の場合は、ストーリーボードのクロックの現在の時刻。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <returns>このストーリーボードのクロックが停止している (<see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />) 場合は <see langword="null" />。それ以外の場合は、ストーリーボードのクロックの現在の時刻。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
      <summary>この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <returns>このストーリーボードのクロックが停止している (<see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />) 場合は <see langword="null" />。それ以外の場合は、ストーリーボードのクロックの現在の時刻。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused">
      <summary>この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <returns>この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <returns>この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)">
      <summary>指定した <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> 値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> の取得元となるタイムライン。</param>
      <returns>
        <paramref name="element" /> の対象となる依存関係オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)">
      <summary>指定した <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> 値を取得します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> の取得元となるタイムライン。</param>
      <returns>
        <paramref name="element" /> の対象となる依存関係オブジェクトの名前。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
      <summary>指定した <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> 値を取得します。</summary>
      <param name="element">
        <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" /> の取得元となる依存関係オブジェクト。</param>
      <returns>
        <paramref name="element" /> の対象となるプロパティ。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause">
      <summary>この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を一時停止します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられている、指定された <see cref="T:System.Windows.FrameworkContentElement" /> の <see cref="T:System.Windows.Media.Animation.Clock" /> を一時停止します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられている、指定された <see cref="T:System.Windows.FrameworkElement" /> の <see cref="T:System.Windows.Media.Animation.Clock" /> を一時停止します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove">
      <summary>この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" />オブジェクトを削除します。 この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、いったんアニメーション化された後は、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定には関係なく、このプロパティに影響しなくなります。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトを削除します。 この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、いったんアニメーション化された後は、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定には関係なく、このプロパティに影響しなくなります。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトを削除します。 この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、いったんアニメーション化された後は、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定には関係なく、このプロパティに影響しなくなります。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を再開します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を再開します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を再開します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定した位置までシークします。 <see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</summary>
      <param name="offset">タイムラインが前方または後方にどれだけ移動するかを示す正の値または負の値。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定した位置までシークします。 <see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</summary>
      <param name="offset">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</param>
      <param name="origin">
        <paramref name="offset" /> の適用元の位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定した位置までシークします。 <see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <param name="offset">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</param>
      <param name="origin">
        <paramref name="offset" /> の適用元の位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定した位置までシークします。 <see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <param name="offset">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</param>
      <param name="origin">
        <paramref name="offset" /> の適用元の位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</summary>
      <param name="offset">タイムラインが前方または後方にどれだけ移動するかを示す正の値または負の値。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</summary>
      <param name="offset">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</param>
      <param name="origin">
        <paramref name="offset" /> の適用元の位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <param name="offset">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</param>
      <param name="origin">
        <paramref name="offset" /> の適用元の位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <param name="offset">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</param>
      <param name="origin">
        <paramref name="offset" /> の適用元の位置。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> の対話的速度比率を設定します。</summary>
      <param name="speedRatio">ストーリーボードの新しい対話型速度比である 0 より大きい有限値。 この値をストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 値に掛けると、ストーリーボードの実効速度が決まります。 この値は、ストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> プロパティを上書きしません。 たとえば、<see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 のストーリーボードに対してこのメソッドを呼び出して、対話型速度比を 3 と指定すると、このストーリーボードの実効速度は 1.5 になります。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の対話型速度比を設定します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <param name="speedRatio">ストーリーボードの新しい対話型速度比である 0 より大きい有限値。 この値をストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 値に掛けると、ストーリーボードの実効速度が決まります。 この値は、ストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> プロパティを上書きしません。 たとえば、 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 のストーリーボードに対してこのメソッドを呼び出して、対話型速度比を 3 と指定すると、このストーリーボードの実効速度は 1.5 になります。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の対話型速度比を設定します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
      <param name="speedRatio">ストーリーボードの新しい対話型速度比である 0 より大きい有限値。 この値をストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 値に掛けると、ストーリーボードの実効速度が決まります。 この値は、ストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> プロパティを上書きしません。 たとえば、 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 のストーリーボードに対してこのメソッドを呼び出して、対話型速度比を 3 と指定すると、このストーリーボードの実効速度は 1.5 になります。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が、依存関係オブジェクトを対象にするように指定します。</summary>
      <param name="element">指定した依存関係オブジェクトを対象とする <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
      <param name="value">対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が指定した名前の依存関係オブジェクトを対象とするように指定します。</summary>
      <param name="element">指定した依存関係オブジェクトを対象とする <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
      <param name="name">対象とする依存関係オブジェクトの名前。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が、指定した依存関係プロパティを対象にするようにします。</summary>
      <param name="element">指定した依存関係プロパティを関連付ける <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
      <param name="path">アニメーション化する依存関係プロパティを示すパス。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill">
      <summary>このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時間をそのアクティブな期間の終わりに進めます。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
      <summary>このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時間をそのアクティブな期間の終わりに進めます。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
      <summary>このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時間をそのアクティブな期間の終わりに進めます。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を停止します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を停止します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
      <summary>この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を停止します。</summary>
      <param name="containingObject">
        <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。 このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.Target">
      <summary>アニメーション化するオブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetName">
      <summary>アニメーション化するオブジェクトの名前を取得または設定します。 オブジェクトは <see cref="T:System.Windows.FrameworkElement" />、<see cref="T:System.Windows.FrameworkContentElement" />、または <see cref="T:System.Windows.Freezable" /> である必要があります。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty">
      <summary>
        <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimation">
      <summary>指定した <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> に対する線形補間を使用して、2 つのターゲット値の間の <see cref="T:System.Windows.Thickness" /> プロパティの値をアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration)">
      <summary>指定された期間にわたって指定された値にアニメーションを付ける、<see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> クラスの新しいインスタンスを初期化します。 アニメーションの開始値は、アニメーションを付けるプロパティの基準値か、別のアニメーションからの出力になります。</summary>
      <param name="toValue">アニメーションの宛先値。</param>
      <param name="duration">アニメーションが最初から最後まで 1 回再生されるのにかかる時間の長さ。 詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> プロパティに関するトピックを参照してください。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>指定された期間にわたって指定された値までアニメーションを付け、指定された塗りつぶし動作がある、<see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> クラスの新しいインスタンスを初期化します。 アニメーションの開始値は、アニメーションを付けるプロパティの基準値か、別のアニメーションからの出力になります。</summary>
      <param name="toValue">アニメーションの宛先値。</param>
      <param name="duration">アニメーションが最初から最後まで 1 回再生されるのにかかる時間の長さ。 詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> プロパティに関するトピックを参照してください。</param>
      <param name="fillBehavior">アクティブでないときのアニメーションの動作を指定します。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration)">
      <summary>指定した開始値から指定した宛先値まで、指定された期間にわたってアニメーションを付ける、 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fromValue">アニメーションの開始値。</param>
      <param name="toValue">アニメーションの宛先値。</param>
      <param name="duration">アニメーションが最初から最後まで 1 回再生されるのにかかる時間の長さ。 詳細については、 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> プロパティに関するトピックを参照してください。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>指定した開始値から指定した宛先値まで、指定された期間にわたってアニメーションを付け、指定された塗りつぶし動作がある、<see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fromValue">アニメーションの開始値。</param>
      <param name="toValue">アニメーションの宛先値。</param>
      <param name="duration">アニメーションが最初から最後まで 1 回再生されるのにかかる時間の長さ。 詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> プロパティに関するトピックを参照してください。</param>
      <param name="fillBehavior">アクティブでないときのアニメーションの動作を指定します。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.By">
      <summary>アニメーションの開始値の変化値の総量を取得または設定します。</summary>
      <returns>アニメーションの開始値の変化値の総量。     既定値は NULL です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.ByProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.By" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.Clone">
      <summary>この <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</summary>
      <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> であった場合でも、<see langword="false" /> になります。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.CreateInstanceCore">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> の新しいインスタンスを作成します。</summary>
      <returns>新しいインスタンス。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction">
      <summary>このアニメーションに適用されているイージング関数を取得または設定します。</summary>
      <returns>このアニメーションに適用されているイージング機能。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.EasingFunctionProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.From">
      <summary>アニメーションの開始値を取得または設定します。</summary>
      <returns>アニメーションの開始値。 既定値は NULLです。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.FromProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.From" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> によって決定されたように、アニメーション化されているプロパティの現在の値を表す値を計算します。</summary>
      <param name="defaultOriginValue">アニメーションが独自の明示的な開始値を持たない場合に使用される、起点の推奨値。</param>
      <param name="defaultDestinationValue">アニメーションが独自の明示的な終了値を持たない場合に使用される、終点の推奨値。</param>
      <param name="animationClock">アニメーションで使用される <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> または <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> を生成する <see cref="T:System.Windows.Media.Animation.AnimationClock" />。</param>
      <returns>現在のアニメーションで決定されたとおりに計算されたプロパティ値。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.IsAdditive">
      <summary>対象プロパティの現在の値をこのアニメーションの開始値に追加するかどうかを示す値を取得または設定します。</summary>
      <returns>対象プロパティの現在の値をこのアニメーションの開始値に追加する場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.IsCumulative">
      <summary>アニメーションが繰り返されるときに、その値を累計するかどうかを指定する値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> のプロパティにより一定時間の再生が繰り返され、アニメーションがその値を累計する場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.To">
      <summary>アニメーションの終了値を取得または設定します。</summary>
      <returns>アニメーションの終了値。 既定値は NULL です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.ToProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.To" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimationBase">
      <summary>実装されている場合、<see cref="T:System.Windows.Thickness" /> 値をアニメーション化する抽象クラス。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimationBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.Clone">
      <summary>この <see cref="T:System.Windows.Media.Animation.ThicknessAnimationBase" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</summary>
      <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> であった場合でも、<see langword="false" /> になります。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>アニメーションの現在の値を取得します。</summary>
      <param name="defaultOriginValue">アニメーションに独自の開始値が設定されていない場合に提供する始点の値。</param>
      <param name="defaultDestinationValue">アニメーション自体に宛先値がない場合に、アニメーションに対して指定する宛先値。</param>
      <param name="animationClock">アニメーションが出力値を生成する際に使用する、<see cref="T:System.Windows.Media.Animation.AnimationClock" /> または <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> の値を生成できる <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</param>
      <returns>アニメーションの現在の値を取得します。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>アニメーションの現在の値を取得します。</summary>
      <param name="defaultOriginValue">アニメーションに独自の開始値が設定されていない場合に提供する始点の値。</param>
      <param name="defaultDestinationValue">アニメーション自体に宛先値がない場合に、アニメーションに対して指定する宛先値。</param>
      <param name="animationClock">アニメーションが出力値を生成する際に使用する、<see cref="T:System.Windows.Media.Animation.AnimationClock" /> または <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> の値を生成できる <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</param>
      <returns>このアニメーションの現在の値。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>ホスト アニメーションによって決定されたように、アニメーション化されているプロパティの現在の値を表す値を計算します。</summary>
      <param name="defaultOriginValue">アニメーションが独自の明示的な開始値を持たない場合に使用される、起点の推奨値。</param>
      <param name="defaultDestinationValue">アニメーションに独自の明示的な終了値が設定されていない場合に使用される、終点の推奨値。</param>
      <param name="animationClock">ホスト アニメーションで使用する <see cref="T:System.Windows.Media.Animation.AnimationClock" /> または <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> を生成する <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</param>
      <returns>このアニメーションの現在の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationBase.TargetPropertyType">
      <summary>このアニメーションで生成される値の型を取得します。</summary>
      <returns>このアニメーションで生成される値の型。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames">
      <summary>一連の <see cref="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames" /> に沿って <see cref="T:System.Windows.Thickness" /> プロパティの値をアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>子 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> をこの <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> に追加します。</summary>
      <param name="child">この <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> の子として追加されるオブジェクト。</param>
      <exception cref="T:System.ArgumentException">パラメーター <paramref name="child" /> が <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> ではありません。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.AddText(System.String)">
      <summary>この <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> の子としてテキスト文字列を追加します。</summary>
      <param name="childText">
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> に追加するテキスト。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> は子としてテキストを受け入れません。そのため、このメソッドでは、動作を派生クラスがオーバーライドしてテキストの追加を許可しない限り、この例外が発生します。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.Clone">
      <summary>この <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</summary>
      <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> であった場合でも、<see langword="false" /> になります。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>このインスタンスを指定された <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> の詳細なコピーにします。 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</summary>
      <param name="sourceFreezable">複製する <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>この <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの現在値の詳細コピーを作成します。 リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</summary>
      <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see langword="false" /> プロパティが <see cref="P:System.Windows.Freezable.IsFrozen" /> であった場合でも、<see langword="true" /> になります。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>現在のプロパティ値を使用して、このインスタンスを、指定した <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> の変更可能な詳細コピーにします。 リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</summary>
      <param name="sourceFreezable">複製する <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> の新しいインスタンスを作成します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> オブジェクトを変更不可能にします。または、変更不可能にできるかどうかを判断します。</summary>
      <param name="isChecking">このインスタンスを固定できるかどうかを確認する場合は <see langword="true" />。このインスタンスを固定する場合は <see langword="false" />。</param>
      <returns>
        <paramref name="isChecking" /> が true の場合、このインスタンスを読み取り専用にできるなら、このメソッドは <see langword="true" /> を返します。読み取り専用にできないなら <see langword="false" /> を返します。 <paramref name="isChecking" /> が false の場合、このインスタンスが現在読み取り専用であるなら、このメソッドは <see langword="true" /> を返します。このオブジェクトの固定された状態を変更し始めたことの副作用によって、これを読み取り専用にできない場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>このインスタンスを、指定した <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> オブジェクトの複製にします。</summary>
      <param name="source">複製する対象の <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>このインスタンスを、指定された <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> の凍結された複製にします。 リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</summary>
      <param name="source">コピーし、固定する <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>この <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> のインスタンスによって決定されたとおり、アニメーション化されているプロパティの現在の値を表す値を計算します。</summary>
      <param name="defaultOriginValue">アニメーションが独自の明示的な開始値を持たない場合に使用される、起点の推奨値。</param>
      <param name="defaultDestinationValue">アニメーションに独自の明示的な終了値が設定されていない場合に使用される、終点の推奨値。</param>
      <param name="animationClock">ホスト アニメーションで使用される <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> または <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> を生成する <see cref="T:System.Windows.Media.Animation.AnimationClock" />。</param>
      <returns>現在のインスタンスで決定されたとおりに計算されたプロパティ値。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>
        <see cref="T:System.Windows.Duration" /> プロパティが <see cref="P:System.Windows.Duration.Automatic" /> に設定されている場合は、カスタムの自然 <see cref="T:System.Windows.Duration" /> を提供します。</summary>
      <param name="clock">自然な期間が必要な <see cref="T:System.Windows.Media.Animation.Clock" />。</param>
      <returns>このアニメーションの最後のキー フレームが <see cref="T:System.Windows.Media.Animation.KeyTime" /> である場合、この値は <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" /> として使用されます。 それ以外の場合は、1 秒に設定されます。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.IsAdditive">
      <summary>アニメーションの出力値をアニメーション処理されるプロパティのベース値に追加するかどうかを指定する値を取得します。</summary>
      <returns>アニメーションにより出力値がアニメーション処理されるプロパティのベース値に (置換ではなく) 追加される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.IsCumulative">
      <summary>アニメーションが繰り返されるときに、その値を累計するかどうかを指定する値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> のプロパティにより一定時間の再生が繰り返され、アニメーションがその値を累計する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames">
      <summary>アニメーションを定義する <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> オブジェクトのコレクションを取得または設定します。</summary>
      <returns>アニメーションを定義する <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> オブジェクトのコレクション。 既定値は <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Empty" /> です。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.OnChanged">
      <summary>現在の <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> オブジェクトの変更時に呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames" /> のこのインスタンスの <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> プロパティの値がシリアル化された値でなければならない場合、true を返します。</summary>
      <returns>プロパティ値をシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="child">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="childText">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>この一連のアニメーションに関連付けられている、順序の付いたコレクション P:System.Windows.Media.Animation.IKeyFrameAnimation.KeyFrames を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Collections.IList" /> の <see cref="P:System.Windows.Media.Animation.IKeyFrameAnimation.KeyFrames" />。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessKeyFrame">
      <summary>実装される場合は、独自のターゲット値と <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> の補間メソッドでアニメーションのセグメントを定義する抽象クラス。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>指定したターゲット <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> を持つ <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">新しい <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> インスタンスの <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>指定したターゲット <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> と <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> を持つ、<see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">新しい <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> インスタンスの <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" />。</param>
      <param name="keyTime">新しい <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> インスタンスの <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.InterpolateValue(System.Windows.Thickness,System.Double)">
      <summary>提供された進行状況の増分での特定のキー フレームの補間値を返します。</summary>
      <param name="baseValue">アニメーション化を開始する値。</param>
      <param name="keyFrameProgress">このキー フレームの経過時間の割合を示す 0.0 ～ 1.0 の値。</param>
      <returns>指定された基準値と進行状況が示された、このキー フレームの出力値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="keyFrameProgress" /> が 0.0 から 1.0 の範囲にない場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>提供された進行状況の増分でキー フレームの値を計算します。</summary>
      <param name="baseValue">アニメーションを開始する値。通常は前のキー フレームの値。</param>
      <param name="keyFrameProgress">このキー フレームの経過時間の割合を示す 0.0 ～ 1.0 の値。</param>
      <returns>指定された基準値と進行状況が示された、このキー フレームの出力値。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime">
      <summary>キー フレームのターゲット <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> に到達する必要のある時間を取得または設定します。</summary>
      <returns>キー フレームの現在の値がその <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> プロパティと等しくなる時刻。 既定値は <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTimeProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>
        <see cref="T:System.Windows.Media.Animation.KeyTime" /> インスタンスに関連付けられた値を取得または設定します。</summary>
      <returns>このプロパティの現在の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value">
      <summary>キー フレームのターゲット値を取得または設定します。</summary>
      <returns>キー フレームのターゲット値。指定された <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> にある、このキー フレームの値です。 既定値は<c>0</c>です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessKeyFrame.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Add(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>コレクションの末尾に <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> を追加します。</summary>
      <param name="keyFrame">コレクションの末尾に <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> を追加します。</param>
      <returns>
        <paramref name="keyFrame" /> が追加された位置のインデックス。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Clear">
      <summary>コレクションからすべての <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> オブジェクトを削除します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Clone">
      <summary>この <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</summary>
      <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> であった場合でも、<see langword="false" /> になります。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>このインスタンスを指定された <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> の詳細なコピーにします。 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</summary>
      <param name="sourceFreezable">複製する <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>現在のプロパティ値を使用して、このインスタンスを、指定した <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> の変更可能な詳細コピーにします。 リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</summary>
      <param name="sourceFreezable">複製する <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Contains(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> がコレクションに含まれているかどうかを示す値を取得します。</summary>
      <param name="keyFrame">コレクション内で検索する <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。</param>
      <returns>コレクションに <paramref name="keyFrame" /> が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CopyTo(System.Windows.Media.Animation.ThicknessKeyFrame[],System.Int32)">
      <summary>コレクション内のすべての <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> オブジェクトを、指定した配列にコピーします。</summary>
      <param name="array">内容のコピー先の配列を識別します。</param>
      <param name="index">コレクションの内容のコピー先となる配列内のインデックス位置。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Count">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> に格納されているキー フレームの数を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> に格納されているキー フレームの数。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CreateInstanceCore">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />の新しい固定インスタンスを作成します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> の固定インスタンス。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Empty">
      <summary>空の <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />を取得します。</summary>
      <returns>空の <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> のこのインスタンスを読み取り専用にします。または、このインスタンスを読み取り専用にできるかどうかを確認します。</summary>
      <param name="isChecking">このインスタンスを固定できるかどうかを確認する場合は <see langword="true" />。このインスタンスを固定する場合は <see langword="false" />。</param>
      <returns>
        <paramref name="isChecking" /> が true の場合、このインスタンスを読み取り専用にできるなら、このメソッドは <see langword="true" /> を返します。読み取り専用にできないなら <see langword="false" /> を返します。 <paramref name="isChecking" /> が false の場合、このインスタンスが現在読み取り専用であるなら、このメソッドは <see langword="true" /> を返します。このオブジェクトの固定された状態を変更し始めたことの副作用によって、これを読み取り専用にできない場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>このインスタンスを、指定した <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> オブジェクトの複製にします。</summary>
      <param name="sourceFreezable">複製する対象の <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>現在のプロパティ値を使用して、このインスタンスを、指定した <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> の変更可能な詳細コピーにします。 リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</summary>
      <param name="sourceFreezable">複製する <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetEnumerator">
      <summary>コレクションを反復処理できる列挙子を返します。</summary>
      <returns>コレクションを反復処理できる <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IndexOf(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> を検索し、コレクション全体で最初に見つかった位置の 0 から始まるインデックス番号を返します。</summary>
      <param name="keyFrame">コレクション内で検索する <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。</param>
      <returns>コレクション全体内で <paramref name="keyFrame" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号。それ以外の場合は <c>-1</c>。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> をコレクション内の特定の場所に挿入します。</summary>
      <param name="index">
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> を挿入するインデックス位置。</param>
      <param name="keyFrame">コレクションに挿入する <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> オブジェクト。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsFixedSize">
      <summary>コレクションのサイズが変更できるかどうかを示す値を取得します。</summary>
      <returns>コレクションが固定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsReadOnly">
      <summary>コレクションが読み取り専用かどうかを示す値を取得します。</summary>
      <returns>コレクションが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsSynchronized">
      <summary>コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>コレクションへのアクセスが同期されている (スレッド セーフである) 場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> を取得または設定します。</summary>
      <param name="index">取得または設定する <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> の 0 から始まるインデックス番号。</param>
      <returns>指定されたインデックス位置にある <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。</returns>
      <exception cref="T:System.InvalidOperationException">コレクションが固定されている (<see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true" /> である) ため、そのコレクションを変更しようとしてもできません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満です。

または -
<paramref name="index" /> が <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Count" /> 以上になっています。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Remove(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> オブジェクトをコレクションから削除します。</summary>
      <param name="keyFrame">コレクションから削除する <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> を識別します。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> をコレクションから削除します。</summary>
      <param name="index">削除される <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> のインデックス位置。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.SyncRoot">
      <summary>コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>コレクションへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection" /> の要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
      <param name="array">
        <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.ICollection" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" /> に項目を追加します。</summary>
      <param name="keyFrame">
        <see cref="T:System.Collections.IList" /> に追加するオブジェクト。</param>
      <returns>新しい要素が挿入された位置、または項目がコレクションに挿入されなかったことを示す -1。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" /> に特定の値が格納されているかどうかを判断します。</summary>
      <param name="keyFrame">
        <see cref="T:System.Collections.IList" /> 内で検索するオブジェクト。</param>
      <returns>
        <see cref="T:System.Object" /> が <see cref="T:System.Collections.IList" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList" /> 内の特定の項目のインデックスを確認します。</summary>
      <param name="keyFrame">
        <see cref="T:System.Collections.IList" /> 内で検索するオブジェクト。</param>
      <returns>リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>指定したインデックスの <see cref="T:System.Collections.IList" /> に項目を挿入します。</summary>
      <param name="index">
        <c>value</c> を挿入する位置を示す、0 から始まるインデックス。</param>
      <param name="keyFrame">
        <see cref="T:System.Collections.IList" /> に挿入するオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns>指定したインデックス位置にある要素。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>特定のオブジェクトが <see cref="T:System.Collections.IList" /> 内にあるときに、最初に出現したものを削除します。</summary>
      <param name="keyFrame">
        <see cref="T:System.Collections.IList" /> から削除するオブジェクト。</param>
    </member>
    <member name="T:System.Windows.Media.TextOptions">
      <summary>要素内でのテキストの表示方法に影響を与える添付プロパティのセットを定義します。</summary>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextFormattingMode(System.Windows.DependencyObject)">
      <summary>指定された要素の <see cref="T:System.Windows.Media.TextFormattingMode" /> を取得します。</summary>
      <param name="element">
        <see cref="T:System.Windows.Media.TextFormattingMode" /> を取得する対象の要素。</param>
      <returns>
        <paramref name="element" /> の <see cref="T:System.Windows.Media.TextFormattingMode" />。</returns>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextHintingMode(System.Windows.DependencyObject)">
      <summary>指定された要素の <see cref="T:System.Windows.Media.TextHintingMode" /> を取得します。</summary>
      <param name="element">
        <see cref="T:System.Windows.Media.TextHintingMode" /> を取得する対象の要素。</param>
      <returns>
        <paramref name="element" /> の <see cref="T:System.Windows.Media.TextHintingMode" />。</returns>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextRenderingMode(System.Windows.DependencyObject)">
      <summary>指定された要素の <see cref="T:System.Windows.Media.TextRenderingMode" /> を取得します。</summary>
      <param name="element">
        <see cref="T:System.Windows.Media.TextRenderingMode" /> を取得する対象の要素。</param>
      <returns>
        <paramref name="element" /> の <see cref="T:System.Windows.Media.TextRenderingMode" />。</returns>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextFormattingMode(System.Windows.DependencyObject,System.Windows.Media.TextFormattingMode)">
      <summary>指定された要素の <see cref="T:System.Windows.Media.TextFormattingMode" /> を設定します。</summary>
      <param name="element">
        <see cref="T:System.Windows.Media.TextFormattingMode" /> を設定する対象の要素。</param>
      <param name="value">
        <paramref name="element" /> に設定する <see cref="T:System.Windows.Media.TextFormattingMode" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextHintingMode(System.Windows.DependencyObject,System.Windows.Media.TextHintingMode)">
      <summary>指定された要素の <see cref="T:System.Windows.Media.TextHintingMode" /> を設定します。</summary>
      <param name="element">
        <see cref="T:System.Windows.Media.TextHintingMode" /> を設定する対象の要素。</param>
      <param name="value">
        <paramref name="element" /> に設定する <see cref="T:System.Windows.Media.TextHintingMode" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextRenderingMode(System.Windows.DependencyObject,System.Windows.Media.TextRenderingMode)">
      <summary>指定された要素の <see cref="T:System.Windows.Media.TextRenderingMode" /> を設定します。</summary>
      <param name="element">
        <see cref="T:System.Windows.Media.TextRenderingMode" /> を設定する対象の要素。</param>
      <param name="value">
        <paramref name="element" /> に設定する <see cref="T:System.Windows.Media.TextRenderingMode" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextFormattingMode">
      <summary>要素の <see cref="T:System.Windows.Media.TextFormattingMode" /> を取得します。 これは添付プロパティです。</summary>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextFormattingModeProperty">
      <summary>
        <see cref="P:System.Windows.Media.TextOptions.TextFormattingMode" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextHintingMode">
      <summary>要素の <see cref="T:System.Windows.Media.TextHintingMode" /> を取得します。 これは添付プロパティです。</summary>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextHintingModeProperty">
      <summary>
        <see cref="P:System.Windows.Media.TextOptions.TextHintingMode" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextRenderingMode">
      <summary>要素の <see cref="T:System.Windows.Media.TextRenderingMode" /> を設定します。 これは添付プロパティです。</summary>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextRenderingModeProperty">
      <summary>
        <see cref="P:System.Windows.Media.TextOptions.TextRenderingMode" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.MediaScriptCommandRoutedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand" /> イベントおよび <see cref="E:System.Windows.Media.MediaPlayer.ScriptCommand" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.MediaScriptCommandRoutedEventArgs.ParameterType">
      <summary>実行されたスクリプト コマンドの型を取得します。</summary>
      <returns>実行されたスクリプト コマンドの型。</returns>
    </member>
    <member name="P:System.Windows.MediaScriptCommandRoutedEventArgs.ParameterValue">
      <summary>スクリプト コマンドの型に関連付けられている引数を取得します。</summary>
      <returns>スクリプト コマンドの型に関連付けられている引数。</returns>
    </member>
    <member name="T:System.Windows.MessageBox">
      <summary>メッセージ ボックスを表示します。</summary>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String)">
      <summary>メッセージを備え、結果を返すメッセージ ボックスを表示します。</summary>
      <param name="messageBoxText">表示するテキストを指定する <see cref="T:System.String" />。</param>
      <returns>ユーザーによってクリックされたメッセージ ボックス ボタンを指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String)">
      <summary>メッセージとタイトル バー キャプションを備え、結果を返すメッセージ ボックスを表示します。</summary>
      <param name="messageBoxText">表示するテキストを指定する <see cref="T:System.String" />。</param>
      <param name="caption">表示するタイトル バー キャプションを指定する <see cref="T:System.String" />。</param>
      <returns>ユーザーによってクリックされたメッセージ ボックス ボタンを指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>メッセージ、タイトル バー キャプション、およびボタンを備え、結果を返すメッセージ ボックスを表示します。</summary>
      <param name="messageBoxText">表示するテキストを指定する <see cref="T:System.String" />。</param>
      <param name="caption">表示するタイトル バー キャプションを指定する <see cref="T:System.String" />。</param>
      <param name="button">表示する 1 つ以上のボタンを指定する <see cref="T:System.Windows.MessageBoxButton" /> 値。</param>
      <returns>ユーザーによってクリックされたメッセージ ボックス ボタンを指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>メッセージ、タイトル バー キャプション、ボタン、およびアイコンを備え、結果を返すメッセージ ボックスを表示します。</summary>
      <param name="messageBoxText">表示するテキストを指定する <see cref="T:System.String" />。</param>
      <param name="caption">表示するタイトル バー キャプションを指定する <see cref="T:System.String" />。</param>
      <param name="button">表示する 1 つ以上のボタンを指定する <see cref="T:System.Windows.MessageBoxButton" /> 値。</param>
      <param name="icon">表示するアイコンを指定する <see cref="T:System.Windows.MessageBoxImage" /> 値。</param>
      <returns>ユーザーによってクリックされたメッセージ ボックス ボタンを指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>メッセージ、タイトル バー キャプション、ボタン、およびアイコンを備え、既定のメッセージ ボックスの結果を受け入れ、結果を返すメッセージ ボックスを表示します。</summary>
      <param name="messageBoxText">表示するテキストを指定する <see cref="T:System.String" />。</param>
      <param name="caption">表示するタイトル バー キャプションを指定する <see cref="T:System.String" />。</param>
      <param name="button">表示する 1 つ以上のボタンを指定する <see cref="T:System.Windows.MessageBoxButton" /> 値。</param>
      <param name="icon">表示するアイコンを指定する <see cref="T:System.Windows.MessageBoxImage" /> 値。</param>
      <param name="defaultResult">メッセージ ボックスの既定の結果を指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</param>
      <returns>ユーザーによってクリックされたメッセージ ボックス ボタンを指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
      <summary>メッセージ、タイトル バー キャプション、ボタン、およびアイコンを備え、既定のメッセージ ボックスの結果を受け入れ、指定されたオプションに準拠し、結果を返すメッセージ ボックスを表示します。</summary>
      <param name="messageBoxText">表示するテキストを指定する <see cref="T:System.String" />。</param>
      <param name="caption">表示するタイトル バー キャプションを指定する <see cref="T:System.String" />。</param>
      <param name="button">表示する 1 つ以上のボタンを指定する <see cref="T:System.Windows.MessageBoxButton" /> 値。</param>
      <param name="icon">表示するアイコンを指定する <see cref="T:System.Windows.MessageBoxImage" /> 値。</param>
      <param name="defaultResult">メッセージ ボックスの既定の結果を指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</param>
      <param name="options">オプションを指定する <see cref="T:System.Windows.MessageBoxOptions" /> 値オブジェクト。</param>
      <returns>ユーザーによってクリックされたメッセージ ボックス ボタンを指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String)">
      <summary>指定されたウィンドウの前面にメッセージ ボックスを表示します。 このメッセージ ボックスは、メッセージを表示し、結果を返します。</summary>
      <param name="owner">メッセージ ボックスのオーナー ウィンドウを表す <see cref="T:System.Windows.Window" />。</param>
      <param name="messageBoxText">表示するテキストを指定する <see cref="T:System.String" />。</param>
      <returns>ユーザーによってクリックされたメッセージ ボックス ボタンを指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String)">
      <summary>指定されたウィンドウの前面にメッセージ ボックスを表示します。 このメッセージ ボックスは、メッセージとタイトル バー キャプションを表示し、結果を返します。</summary>
      <param name="owner">メッセージ ボックスのオーナー ウィンドウを表す <see cref="T:System.Windows.Window" />。</param>
      <param name="messageBoxText">表示するテキストを指定する <see cref="T:System.String" />。</param>
      <param name="caption">表示するタイトル バー キャプションを指定する <see cref="T:System.String" />。</param>
      <returns>ユーザーによってクリックされたメッセージ ボックス ボタンを指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>指定されたウィンドウの前面にメッセージ ボックスを表示します。 このメッセージ ボックスは、メッセージ、タイトル バー キャプション、およびボタンを表示し、結果を返します。</summary>
      <param name="owner">メッセージ ボックスのオーナー ウィンドウを表す <see cref="T:System.Windows.Window" />。</param>
      <param name="messageBoxText">表示するテキストを指定する <see cref="T:System.String" />。</param>
      <param name="caption">表示するタイトル バー キャプションを指定する <see cref="T:System.String" />。</param>
      <param name="button">表示する 1 つ以上のボタンを指定する <see cref="T:System.Windows.MessageBoxButton" /> 値。</param>
      <returns>ユーザーによってクリックされたメッセージ ボックス ボタンを指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>指定されたウィンドウの前面にメッセージ ボックスを表示します。 このメッセージ ボックスは、メッセージ、タイトル バー キャプション、ボタン、およびアイコンを表示し、結果を返します。</summary>
      <param name="owner">メッセージ ボックスのオーナー ウィンドウを表す <see cref="T:System.Windows.Window" />。</param>
      <param name="messageBoxText">表示するテキストを指定する <see cref="T:System.String" />。</param>
      <param name="caption">表示するタイトル バー キャプションを指定する <see cref="T:System.String" />。</param>
      <param name="button">表示する 1 つ以上のボタンを指定する <see cref="T:System.Windows.MessageBoxButton" /> 値。</param>
      <param name="icon">表示するアイコンを指定する <see cref="T:System.Windows.MessageBoxImage" /> 値。</param>
      <returns>ユーザーによってクリックされたメッセージ ボックス ボタンを指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>指定されたウィンドウの前面にメッセージ ボックスを表示します。 このメッセージ ボックスは、メッセージ、タイトル バー キャプション、ボタン、およびアイコンを表示し、既定のメッセージ ボックスの結果を受け入れ、結果を返します。</summary>
      <param name="owner">メッセージ ボックスのオーナー ウィンドウを表す <see cref="T:System.Windows.Window" />。</param>
      <param name="messageBoxText">表示するテキストを指定する <see cref="T:System.String" />。</param>
      <param name="caption">表示するタイトル バー キャプションを指定する <see cref="T:System.String" />。</param>
      <param name="button">表示する 1 つ以上のボタンを指定する <see cref="T:System.Windows.MessageBoxButton" /> 値。</param>
      <param name="icon">表示するアイコンを指定する <see cref="T:System.Windows.MessageBoxImage" /> 値。</param>
      <param name="defaultResult">メッセージ ボックスの既定の結果を指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</param>
      <returns>ユーザーによってクリックされたメッセージ ボックス ボタンを指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</returns>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
      <summary>指定されたウィンドウの前面にメッセージ ボックスを表示します。 このメッセージ ボックスは、メッセージ、タイトル バー キャプション、ボタン、およびアイコンを表示し、既定のメッセージ ボックスの結果を受け入れ、指定されたオプションに準拠し、結果を返します。</summary>
      <param name="owner">メッセージ ボックスのオーナー ウィンドウを表す <see cref="T:System.Windows.Window" />。</param>
      <param name="messageBoxText">表示するテキストを指定する <see cref="T:System.String" />。</param>
      <param name="caption">表示するタイトル バー キャプションを指定する <see cref="T:System.String" />。</param>
      <param name="button">表示する 1 つ以上のボタンを指定する <see cref="T:System.Windows.MessageBoxButton" /> 値。</param>
      <param name="icon">表示するアイコンを指定する <see cref="T:System.Windows.MessageBoxImage" /> 値。</param>
      <param name="defaultResult">メッセージ ボックスの既定の結果を指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</param>
      <param name="options">オプションを指定する <see cref="T:System.Windows.MessageBoxOptions" /> 値オブジェクト。</param>
      <returns>ユーザーによってクリックされたメッセージ ボックス ボタンを指定する <see cref="T:System.Windows.MessageBoxResult" /> 値。</returns>
    </member>
    <member name="T:System.Windows.MessageBoxButton">
      <summary>メッセージ ボックスに表示されるボタンを指定します。 <see cref="Overload:System.Windows.MessageBox.Show" /> メソッドの引数として使用されます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OK">
      <summary>メッセージ ボックスに OK ボタンが表示されます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OKCancel">
      <summary>メッセージ ボックスに OK ボタンとキャンセル ボタンが表示されます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.YesNo">
      <summary>メッセージ ボックスにはいボタンといいえボタンが表示されます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.YesNoCancel">
      <summary>メッセージ ボックスにはいボタン、いいえボタン、キャンセル ボタンが表示されます。</summary>
    </member>
    <member name="T:System.Windows.MessageBoxImage">
      <summary>メッセージ ボックスで表示されるアイコンを指定します。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Asterisk">
      <summary>メッセージ ボックスには、円で囲んだ小文字の i から成るシンボルが含まれます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Error">
      <summary>メッセージ ボックスには、背景が赤い円で囲んだ白い X から成るシンボルが含まれます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Exclamation">
      <summary>メッセージ ボックスには、背景が黄色い三角で囲んだ感嘆符から成るシンボルが含まれます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Hand">
      <summary>メッセージ ボックスには、背景が赤い円で囲んだ白い X から成るシンボルが含まれます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Information">
      <summary>メッセージ ボックスには、円で囲んだ小文字の i から成るシンボルが含まれます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.None">
      <summary>メッセージ ボックスには、シンボルが含まれていません。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Question">
      <summary>メッセージ ボックスには、円で囲んだ疑問符から成るシンボルが含まれます。 疑問符は、質問の特定の種類を明確に表さず、メッセージの言い回しはどのメッセージの種類にも適用されるため、疑問符のメッセージ アイコンは推奨されなくなりました。 さらにユーザーは、疑問符シンボルをヘルプ情報シンボルと混同することがあります。 したがって、メッセージ ボックスには疑問符シンボルを使用しないでください。 システムは引き続き、下位互換性のためだけに、その組み込みをサポートします。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Stop">
      <summary>メッセージ ボックスには、背景が赤い円で囲んだ白い X から成るシンボルが含まれます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Warning">
      <summary>メッセージ ボックスには、背景が黄色い三角で囲んだ感嘆符から成るシンボルが含まれます。</summary>
    </member>
    <member name="T:System.Windows.MessageBoxOptions">
      <summary>メッセージ ボックスの特別な表示オプションを指定します。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.DefaultDesktopOnly">
      <summary>対話型のウィンドウ ステーションの既定のデスクトップにメッセージ ボックスが表示されます。 ユーザーにイベントを通知するために、.NET Framework の Windows サービス アプリケーションからメッセージ ボックスを表示することを指定します。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.None">
      <summary>オプションは設定されていません。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.RightAlign">
      <summary>メッセージ ボックスのテキストとタイトル バー キャプションが右揃えで表示されます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.RtlReading">
      <summary>テキスト、ボタン、アイコン、およびタイトル バーはすべて右から左に表示されます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.ServiceNotification">
      <summary>コンピューターにログオンしているユーザーがいない場合でも、現在アクティブなデスクトップにメッセージ ボックスが表示されます。 ユーザーにイベントを通知するために、.NET Framework の Windows サービス アプリケーションからメッセージ ボックスを表示することを指定します。</summary>
    </member>
    <member name="T:System.Windows.MessageBoxResult">
      <summary>ユーザーがクリックしたメッセージ ボックス ボタンを指定します。 <see cref="T:System.Windows.MessageBoxResult" /> は、<see cref="Overload:System.Windows.MessageBox.Show" /> メソッドによって返されます。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Cancel">
      <summary>メッセージ ボックスの結果値は [キャンセル].です。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.No">
      <summary>メッセージ ボックスの結果値は [いいえ] です。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.None">
      <summary>メッセージ ボックスは、結果を返しません。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.OK">
      <summary>メッセージ ボックスの結果値は [OK] です。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Yes">
      <summary>メッセージ ボックスの結果値は [はい] です。</summary>
    </member>
    <member name="T:System.Windows.MultiDataTrigger">
      <summary>バインドされたデータが一連の条件を満たしたときに、プロパティ値を適用するかアクションを実行するトリガーを表します。</summary>
    </member>
    <member name="M:System.Windows.MultiDataTrigger.#ctor">
      <summary>
        <see cref="T:System.Windows.MultiDataTrigger" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.MultiDataTrigger.Conditions">
      <summary>
        <see cref="T:System.Windows.Condition" /> オブジェクトのコレクションを取得します。 プロパティ値に対する変更は、コレクション内のすべての条件が満たされたときに適用されます。</summary>
      <returns>
        <see cref="T:System.Windows.Condition" /> オブジェクトのコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="P:System.Windows.MultiDataTrigger.Setters">
      <summary>
        <see cref="T:System.Windows.Setter" /> のすべての条件が満たされたときに適用するプロパティ値を表す <see cref="T:System.Windows.MultiDataTrigger" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Setter" /> オブジェクトのコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.MultiTrigger">
      <summary>一連の条件が満たされたときにプロパティ値を適用したりアクションを実行するトリガーを表します。</summary>
    </member>
    <member name="M:System.Windows.MultiTrigger.#ctor">
      <summary>
        <see cref="T:System.Windows.MultiTrigger" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.MultiTrigger.Conditions">
      <summary>
        <see cref="T:System.Windows.Condition" /> オブジェクトのコレクションを取得します。 プロパティ値に対する変更は、コレクション内のすべての条件が満たされたときに適用されます。</summary>
      <returns>既定値は空のコレクションです。</returns>
    </member>
    <member name="P:System.Windows.MultiTrigger.Setters">
      <summary>
        <see cref="T:System.Windows.Setter" /> のすべての条件が満たされたときに適用するプロパティ値を表す <see cref="T:System.Windows.MultiTrigger" /> オブジェクトのコレクションを取得します。</summary>
      <returns>既定値は NULL です。</returns>
    </member>
    <member name="M:System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="T:System.Windows.Navigation.CustomContentState">
      <summary>
        <see cref="T:System.Windows.Navigation.CustomContentState" /> は、後続の各ナビゲーションでソース コンテンツを再度読み込まなくても、単一のソース コンテンツの異なる状態間を移動できるようにします。</summary>
    </member>
    <member name="M:System.Windows.Navigation.CustomContentState.#ctor">
      <summary>
        <see cref="T:System.Windows.Navigation.CustomContentState" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.CustomContentState.JournalEntryName">
      <summary>ナビゲーション履歴に格納されるコンテンツの名前。 <see cref="P:System.Windows.Navigation.CustomContentState.JournalEntryName" /> の値は、<see cref="T:System.Windows.Navigation.NavigationWindow" />、<see cref="T:System.Windows.Controls.Frame" />、および Windows Internet Explorer 7 ナビゲーション UI に表示されます。</summary>
      <returns>ナビゲーション履歴に格納されるコンテンツの <see cref="T:System.String" /> 名。</returns>
    </member>
    <member name="M:System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)">
      <summary>ナビゲーションが発生したときに、コンテンツに状態を再適用するために呼び出されます。</summary>
      <param name="navigationService">この <see cref="T:System.Windows.Navigation.NavigationService" /> が適用されているコンテンツを処理するナビゲーターが所有している <see cref="T:System.Windows.Navigation.CustomContentState" />。</param>
      <param name="mode">
        <see cref="T:System.Windows.Navigation.NavigationMode" /> が適用されているコンテンツへのナビゲーションがどのように行われたかを指定する <see cref="T:System.Windows.Navigation.CustomContentState" />。</param>
    </member>
    <member name="T:System.Windows.Navigation.FragmentNavigationEventArgs">
      <summary>FragmentNavigation イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Fragment">
      <summary>Uniform Resource Identifier (URI) フラグメントを取得します。</summary>
      <returns>URI フラグメント。 このプロパティを空の文字列に設定した場合、既定ではコンテンツの最上部に移動します。</returns>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Handled">
      <summary>フラグメント ナビゲーションが処理されたかどうかを示す値を取得または設定します。</summary>
      <returns>ナビゲーションが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Navigator">
      <summary>
        <see cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" /> イベントを発生させたナビゲーター。</summary>
      <returns>コンテンツ フラグメントに移動しているナビゲーター (Internet Explorer、<see cref="T:System.Windows.Navigation.NavigationWindow" />、<see cref="T:System.Windows.Controls.Frame" />) を参照する <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Windows.Navigation.FragmentNavigationEventHandler">
      <summary>
        <see langword="FragmentNavigation" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Navigation.IProvideCustomContentState">
      <summary>コンテンツから移動する前にそのコンテンツのナビゲーション履歴エントリにカスタム状態を追加する必要があるクラスによって実装されます。</summary>
    </member>
    <member name="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState">
      <summary>ナビゲーション履歴のコンテンツに関連付けられる、カスタム状態クラスのインスタンスを返します。</summary>
      <returns>ナビゲーション履歴のコンテンツに関連付けられる、カスタム <see cref="T:System.Windows.Navigation.CustomContentState" /> クラスのインスタンス。</returns>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntry">
      <summary>"戻る" または "進む" ナビゲーション履歴のエントリを表します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Windows.Navigation.JournalEntry" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">シリアル化情報。</param>
      <param name="context">ストリーム コンテキスト。</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.CustomContentState">
      <summary>この履歴項目に関連付けられている <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクトを取得または設定します。</summary>
      <returns>この履歴項目に関連付けられている <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクト。 関連付けられているオブジェクトがない場合は、<see langword="null" /> が返されます。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetKeepAlive(System.Windows.DependencyObject)">
      <summary>指定された要素に対応する履歴項目の <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 添付プロパティを返します。</summary>
      <param name="dependencyObject">割り当てるプロパティ値の取得元の要素。</param>
      <returns>指定した要素に対応する履歴項目の <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 添付プロパティの値。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetName(System.Windows.DependencyObject)">
      <summary>指定した要素に対応する履歴項目の <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 添付プロパティを取得します。</summary>
      <param name="dependencyObject">添付プロパティ値の取得元の要素。</param>
      <returns>指定した要素に対応する履歴項目の <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 添付プロパティ。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このオブジェクトがシリアル化されるときに呼び出されます。</summary>
      <param name="info">対象となるオブジェクトのシリアル化に必要なデータ。</param>
      <param name="context">ストリーム コンテキスト。</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.KeepAlive">
      <summary>ナビゲーション履歴の履歴項目に移動した際に、その履歴項目のコンテンツが保持されるか、または再作成されるか示す値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntry.KeepAliveProperty">
      <summary>
        <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.Name">
      <summary>履歴項目の名前を取得または設定します。</summary>
      <returns>履歴項目の名前。</returns>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntry.NameProperty">
      <summary>
        <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.SetKeepAlive(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定した要素の <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 添付プロパティを設定します。</summary>
      <param name="dependencyObject">添付プロパティの値を設定する要素。</param>
      <param name="keepAlive">メモリに履歴項目を保持する場合は<see langword="true" /> 。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.SetName(System.Windows.DependencyObject,System.String)">
      <summary>指定した要素の <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 添付プロパティを設定します。</summary>
      <param name="dependencyObject">割り当てるプロパティ値を設定する要素。</param>
      <param name="name">添付プロパティに割り当てられる名前。</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.Source">
      <summary>移動先となったコンテンツの URI を取得または設定します。</summary>
      <returns>移動先となったコンテンツの URI。このエントリに URI が関連付けられていない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryListConverter">
      <summary>この型またはメンバーは、Microsoft .NET インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.#ctor">
      <summary>この型またはメンバーは、Microsoft .NET インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="value">バインディング ソースによって生成された値。</param>
      <param name="targetType">バインディング ターゲット プロパティの型。</param>
      <param name="parameter">使用するコンバーター パラメーター。</param>
      <param name="culture">コンバーターで使用するカルチャ。</param>
      <returns>変換された値。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>この型またはメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</summary>
      <param name="value">バインディング ターゲットによって生成された値。</param>
      <param name="targetType">バインディング ソース プロパティの型。</param>
      <param name="parameter">使用するコンバーター パラメーター。</param>
      <param name="culture">コンバーターで使用するカルチャ。</param>
      <returns>変換された値。</returns>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryPosition">
      <summary>ナビゲーション履歴におけるコンテンツの位置を、現在のコンテンツを基準にして指定します。 <see cref="T:System.Windows.Navigation.JournalEntryPosition" /> は <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" /> によって使用されます。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Back">
      <summary>現在のコンテンツを基準にして、コンテンツは "戻る" ナビゲーション履歴内にあります。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Current">
      <summary>コンテンツは現在のコンテンツです。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Forward">
      <summary>現在のコンテンツを基準にして、コンテンツは "進む" ナビゲーション履歴内にあります。</summary>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter">
      <summary>
        <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" /> は、"戻る" ナビゲーション履歴と "進む" ナビゲーション履歴 (<see cref="T:System.Windows.Controls.Frame" /> または <see cref="T:System.Windows.Navigation.NavigationWindow" /> によって公開) を、Windows Internet Explorer 7 スタイルの単一のナビゲーション メニューにマージします。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>2 つのナビゲーション履歴スタックをマージします。</summary>
      <param name="values">2 つのナビゲーション スタックの配列。</param>
      <param name="targetType">このパラメーターは使用されません。</param>
      <param name="parameter">このパラメーターは使用されません。</param>
      <param name="culture">このパラメーターは使用されません。</param>
      <returns>渡されたナビゲーション スタックがいずれも <see langword="null" /> でない場合は、ナビゲーション履歴スタックのマージされたリストを列挙処理するために使用できる <see cref="T:System.Collections.IEnumerable" />。 それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>実装されていません。</summary>
      <param name="value">このパラメーターは使用されません。</param>
      <param name="targetTypes">このパラメーターは使用されません。</param>
      <param name="parameter">このパラメーターは使用されません。</param>
      <param name="culture">このパラメーターは使用されません。</param>
      <returns>常に <see cref="F:System.Windows.Data.Binding.DoNothing" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.GetJournalEntryPosition(System.Windows.DependencyObject)">
      <summary>指定した要素の <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> 添付プロパティを取得します。</summary>
      <param name="element">添付プロパティ値の取得元の要素。</param>
      <returns>指定した要素に対応する履歴項目の <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> 添付プロパティの値。</returns>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition">
      <summary>エントリがナビゲーターの "戻る" ナビゲーション履歴内または "進む" ナビゲーション履歴内にあるか、あるいは現在のコンテンツであるかを指定する値を取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPositionProperty">
      <summary>
        <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.SetJournalEntryPosition(System.Windows.DependencyObject,System.Windows.Navigation.JournalEntryPosition)">
      <summary>指定した要素の <see cref="F:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPositionProperty" /> 添付プロパティを設定します。</summary>
      <param name="element">添付プロパティの値を設定する要素。</param>
      <param name="position">
        <see cref="T:System.Windows.Navigation.JournalEntryPosition" /> オブジェクトの位置。</param>
    </member>
    <member name="T:System.Windows.Navigation.JournalOwnership">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> が独自の履歴を使用するかどうかを指定します。 <see cref="T:System.Windows.Navigation.JournalOwnership" /> は、<see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> プロパティで使用されます。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.Automatic">
      <summary>この <see cref="T:System.Windows.Controls.Frame" /> が独自の履歴を作成および使用するかどうかは、その親によって異なります。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.OwnsJournal">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> は独自の履歴を保持します。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.UsesParentJournal">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> は、コンテンツ ツリー内で上位にある次に使用可能なナビゲーション ホストの履歴を使用します (使用できる場合)。 それ以外の場合は、ナビゲーション履歴は <see cref="T:System.Windows.Controls.Frame" /> に対して保持されません。</summary>
    </member>
    <member name="T:System.Windows.Navigation.LoadCompletedEventHandler">
      <summary>
        <see langword="LoadCompleted" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatedEventHandler">
      <summary>
        <see langword="Navigated" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventArgs">
      <summary>Navigating イベントにデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Content">
      <summary>移動先のコンテンツ オブジェクトへの参照を取得します。</summary>
      <returns>移動先のコンテンツ オブジェクトへの <see cref="T:System.Object" /> 参照。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave">
      <summary>移動元のページの "戻る" ナビゲーション履歴エントリに関連付けられている <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクトを取得または設定します。</summary>
      <returns>移動元のページの "戻る" ナビゲーション履歴エントリに関連付けられている <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData">
      <summary>ナビゲーションが開始されたときに渡されたオプション データの <see cref="T:System.Object" /> を取得します。</summary>
      <returns>ナビゲーションが開始されたときに渡されたオプション データの <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.IsNavigationInitiator">
      <summary>
        <see cref="T:System.Windows.Navigation.NavigationWindow" /> によって指定されるナビゲーター (<see cref="T:System.Windows.Controls.Frame" />、<see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator" />) がこのナビゲーションを処理しているのか、または親ナビゲーターが処理しているのかを示します。</summary>
      <returns>
        <see cref="T:System.Boolean" /> によって指定されるナビゲーターがこのナビゲーションを処理している場合は、<see langword="true" /> である <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator" /> 値。 それ以外の場合は (入れ子になった <see cref="T:System.Windows.Controls.Frame" /> のナビゲーション中など)、<see langword="false" /> が返されます。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode">
      <summary>発生しているナビゲーションの種類を示す <see cref="T:System.Windows.Navigation.NavigationMode" /> 値を取得します。</summary>
      <returns>発生しているナビゲーションの種類を示す <see cref="T:System.Windows.Navigation.NavigationMode" /> 値。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator">
      <summary>このイベントを発生させたナビゲーター。</summary>
      <returns>このイベントを発生させたナビゲーターである <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.TargetContentState">
      <summary>移動先のコンテンツに適用される <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクトを取得します。</summary>
      <returns>移動先のコンテンツに適用される <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri">
      <summary>移動先のコンテンツの Uniform Resource Identifier (URI) を取得します。</summary>
      <returns>移動先のコンテンツの <see cref="T:System.Uri" />。 オブジェクトに移動する場合、<see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri" /> は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.WebRequest">
      <summary>指定したコンテンツを要求するために使用される <see cref="T:System.Net.WebRequest" /> オブジェクトを取得します。</summary>
      <returns>指定したコンテンツを要求するために使用される <see cref="T:System.Net.WebRequest" /> オブジェクトを取得します。</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventHandler">
      <summary>
        <see langword="Navigating" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationEventArgs">
      <summary>
        <see cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted" />、<see cref="E:System.Windows.Navigation.NavigationWindow.Navigated" />、<see cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped" /> などのキャンセルできないナビゲーション イベントにデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Content">
      <summary>ターゲット ページのコンテンツのルート ノードを取得します。</summary>
      <returns>ターゲット ページのコンテンツのルート要素。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.ExtraData">
      <summary>オプションのユーザー定義データ オブジェクトを取得します。</summary>
      <returns>データ オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.IsNavigationInitiator">
      <summary>現在のナビゲーターがナビゲーションを開始したかどうか示す値を取得します。</summary>
      <returns>ナビゲーションが現在のフレーム内で開始された場合は <see langword="true" />。親ナビゲーターも移動中の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Navigator">
      <summary>イベントを発生させたナビゲーターを取得します。</summary>
      <returns>イベントを発生させたナビゲーター。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Uri">
      <summary>ターゲット ページの Uniform Resource Identifier (URI) を取得します。</summary>
      <returns>ターゲットページの URI。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.WebResponse">
      <summary>Web 応答を取得して、HTTP ヘッダーやその他のプロパティへのアクセスを許可します。</summary>
      <returns>Web 応答。</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationFailedEventArgs">
      <summary>NavigationFailed イベントにデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Exception">
      <summary>ナビゲーションが失敗した結果発生した <see cref="T:System.Exception" /> を取得します。</summary>
      <returns>ナビゲーションが失敗した結果発生した <see cref="T:System.Exception" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.ExtraData">
      <summary>ナビゲーションが開始されたときに渡されたオプション データの <see cref="T:System.Object" /> を取得します。</summary>
      <returns>ナビゲーションが開始されたときに渡されたオプション データの <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Handled">
      <summary>失敗したナビゲーションの例外が処理されたかどうかを取得または設定します。</summary>
      <returns>例外が処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" /> (既定値)。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Navigator">
      <summary>このイベントを発生させたナビゲーター。</summary>
      <returns>このイベントを発生させたナビゲーターである <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Uri">
      <summary>移動できなかったコンテンツの Uniform Resource Identifier (URI) を取得します。</summary>
      <returns>移動できなかったコンテンツの <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest">
      <summary>指定したコンテンツを要求するために使用された Web 要求を取得します。</summary>
      <returns>指定したコンテンツを要求するために使用された <see cref="T:System.Net.WebRequest" /> オブジェクトを取得します。 オブジェクトに移動する場合、<see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest" /> は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse">
      <summary>指定したコンテンツのダウンロードを試みた後に返された Web 応答を取得します。</summary>
      <returns>指定したコンテンツのダウンロードを試みた後に返された <see cref="T:System.Net.WebResponse" />。 ナビゲーションが失敗した場合、<see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse" /> は <see langword="null" /> です。</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationFailedEventHandler">
      <summary>
        <see langword="NavigationFailed" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationMode">
      <summary>行われているナビゲーションの種類を指定します。<see cref="T:System.Windows.Navigation.NavigationMode" /> は <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode" /> プロパティによって使用されます。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Back">
      <summary>"戻る" ナビゲーション履歴の一番最近のコンテンツへの移動。 GoBack メソッドが呼び出されたときに行われます。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Forward">
      <summary>"進む" ナビゲーション履歴の一番最近のコンテンツへの移動。 GoForward メソッドが呼び出されたときに行われます。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.New">
      <summary>新しいコンテンツへの移動。 Navigate メソッドが呼び出されたとき、または Source プロパティが設定されたときに行われます。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Refresh">
      <summary>現在のコンテンツの再読み込み。 Refresh メソッドが呼び出されたときに行われます。</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationProgressEventArgs">
      <summary>
        <see cref="E:System.Windows.Application.NavigationProgress" /> イベントおよび <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead">
      <summary>読み取られたバイト数を取得します。</summary>
      <returns>読み取られたバイト数。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes">
      <summary>最大バイト数を取得します。</summary>
      <returns>最大バイト数。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.Navigator">
      <summary>イベントを発生させたナビゲーターを取得します。</summary>
      <returns>イベントを発生させたナビゲーター。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.Uri">
      <summary>ターゲット ページの Uniform Resource Identifier (URI) を取得します。</summary>
      <returns>ターゲットページの URI。</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationProgressEventHandler">
      <summary>
        <see langword="NavigationProgress" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationService">
      <summary>ナビゲーションをサポートするメソッド、プロパティ、およびイベントを格納します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>
        <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクトを格納しているエントリを "戻る" ナビゲーション履歴に追加します。</summary>
      <param name="state">特定のコンテンツ フラグメントに関連付けられたアプリケーション定義の状態を表す <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクト。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> が <see langword="null" /> です。<see cref="T:System.Windows.Navigation.CustomContentState" /> から <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" /> オブジェクトが返されませんでした。</exception>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CanGoBack">
      <summary>"戻る" ナビゲーション履歴にエントリが 1 つ以上あるかどうかを示す値を取得します。</summary>
      <returns>"戻る" ナビゲーション履歴にエントリが 1 つ以上ある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CanGoForward">
      <summary>"進む" ナビゲーション履歴にエントリが 1 つ以上あるかどうかを示す値を取得します。</summary>
      <returns>"進む" ナビゲーション履歴にエントリが 1 つ以上ある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.Content">
      <summary>現在のコンテンツを格納しているオブジェクトへの参照を取得または設定します。</summary>
      <returns>現在のコンテンツを格納しているオブジェクトへの参照であるオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CurrentSource">
      <summary>最後に移動した先のコンテンツの URI を取得します。</summary>
      <returns>URI を使用して移動した場合は、最後に移動したコンテンツの <see cref="T:System.Uri" />。それ以外の場合は、<see langword="null" />ます。</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.FragmentNavigation">
      <summary>コンテンツ フラグメントへのナビゲーションが開始されると発生します。目的のフラグメントが現在のコンテンツにある場合は直ちに発生し、目的のフラグメントが別のコンテンツにある場合はソース XAML コンテンツが読み込まれた後に発生します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)">
      <summary>指定した <see cref="T:System.Windows.Navigation.NavigationService" /> がコンテンツに含まれているナビゲーターの <see cref="T:System.Windows.DependencyObject" /> への参照を取得します。</summary>
      <param name="dependencyObject">ナビゲーターによってホストされるコンテンツ内の <see cref="T:System.Windows.DependencyObject" />。</param>
      <returns>指定した <see cref="T:System.Windows.DependencyObject" /> がコンテンツに含まれているナビゲーターの <see cref="T:System.Windows.Navigation.NavigationService" /> への参照。場合によっては <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GoBack">
      <summary>"戻る" ナビゲーション履歴の最新のエントリに移動します (エントリが存在する場合)。</summary>
      <exception cref="T:System.InvalidOperationException">"戻る" ナビゲーション履歴にエントリがないときに <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> が呼び出されました。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GoForward">
      <summary>"進む" ナビゲーション履歴の最新のエントリに移動します (エントリが存在する場合)。</summary>
      <exception cref="T:System.InvalidOperationException">"進む" ナビゲーション履歴にエントリがないときに <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> が呼び出されました。</exception>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.LoadCompleted">
      <summary>移動先のコンテンツが読み込まれ、解析されて、描画が開始されると発生します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)">
      <summary>オブジェクトに格納されているコンテンツに非同期に移動します。</summary>
      <param name="root">移動先のコンテンツを格納しているオブジェクト。</param>
      <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)">
      <summary>オブジェクトに格納されているコンテンツに非同期に移動して、ナビゲーション中の処理に使用するデータを格納しているオブジェクトを渡します。</summary>
      <param name="root">移動先のコンテンツを格納しているオブジェクト。</param>
      <param name="navigationState">ナビゲーション中の処理に使用するデータを格納しているオブジェクト。</param>
      <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)">
      <summary>URI で指定されたコンテンツに非同期に移動します。</summary>
      <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
      <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)">
      <summary>URI にあるソース コンテンツに非同期に移動して、ナビゲーション中の処理に使用するデータを格納しているオブジェクトを渡します。</summary>
      <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
      <param name="navigationState">ナビゲーション中の処理に使用するデータを格納しているオブジェクト。</param>
      <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)">
      <summary>URI にあるソース コンテンツに非同期に移動して、ナビゲーション中の処理に使用するナビゲーションの状態を格納しているオブジェクトを渡し、コンテンツをサンドボックスに配置します。</summary>
      <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
      <param name="navigationState">ナビゲーション中の処理に使用するデータを格納しているオブジェクト。</param>
      <param name="sandboxExternalContent">コンテンツを (既定のインターネット ゾーン アクセス許可が設定された) 部分信頼セキュリティ サンドボックスにダウンロードする場合は <see langword="true" />。 既定値は、<see langword="false" /> です。</param>
      <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.Navigated">
      <summary>移動先のコンテンツが見つかったときに発生します。この時点で <see cref="P:System.Windows.Navigation.NavigationService.Content" /> プロパティからコンテンツを取得できますが、読み込みはまだ完了していない可能性があります。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.Navigating">
      <summary>新しいナビゲーションが要求されたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationFailed">
      <summary>要求されたコンテンツへの移動中にエラーが発生すると発生します。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationProgress">
      <summary>ナビゲーション進行状況の情報提供を目的として、ダウンロード中に定期的に発生します。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationStopped">
      <summary>
        <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> メソッドが呼び出されたときや、現在のナビゲーションの進行中に新しいナビゲーションが要求されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Refresh">
      <summary>現在のコンテンツを再度読み込みます。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.RemoveBackEntry">
      <summary>"戻る" 履歴から最新の履歴項目を削除します。</summary>
      <returns>"戻る" ナビゲーション履歴の最新の <see cref="T:System.Windows.Navigation.JournalEntry" /> (存在する場合)。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.Source">
      <summary>現在のコンテンツの URI (移動中の場合は移動先の新しいコンテンツの URI) を取得または設定します。</summary>
      <returns>現在のコンテンツの URI、または現在ナビゲートされているコンテンツを格納している <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.StopLoading">
      <summary>現在のナビゲーション要求に対応するコンテンツのダウンロードを中止します。</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationStoppedEventHandler">
      <summary>
        <see langword="NavigationStopped" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationUIVisibility">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> がナビゲーション クロムを表示するかどうかを指定します。 <see cref="T:System.Windows.Navigation.NavigationUIVisibility" /> は、<see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility" /> プロパティで使用されます。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Automatic">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> が独自の履歴を使用する場合はナビゲーション クロムが表示されます (<see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> を参照してください)。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Hidden">
      <summary>ナビゲーション クロムは表示されません。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Visible">
      <summary>ナビゲーション クロムが表示されます。</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationWindow">
      <summary>コンテンツ ナビゲーションをサポートするウィンドウを表します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.#ctor">
      <summary>
        <see cref="T:System.Windows.Navigation.NavigationWindow" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>
        <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクトを格納しているエントリを "戻る" ナビゲーション履歴に追加します。</summary>
      <param name="state">特定のコンテンツ フラグメントに関連付けられたアプリケーション定義の状態を表す <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクト。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> が <see langword="null" /> です。<see cref="T:System.Windows.Navigation.CustomContentState" /> から <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" /> オブジェクトが返されませんでした。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
      <exception cref="T:System.InvalidOperationException">このメソッドが呼び出されたとき。 これにより、XAML を使用して <see cref="T:System.Windows.Navigation.NavigationWindow" /> にコンテンツが追加されるのを防止できます。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddText(System.String)">
      <summary>オブジェクトにテキストを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
      <exception cref="T:System.ArgumentException">text パラメーターの値に空白以外の文字が含まれている場合。</exception>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.BackStack">
      <summary>
        <see cref="T:System.Collections.IEnumerable" /> の "戻る" ナビゲーション履歴のエントリを列挙するために使用する <see cref="T:System.Windows.Navigation.NavigationWindow" /> を取得します。</summary>
      <returns>1 つ以上のエントリが "戻る" ナビゲーション履歴に追加されている場合は <see cref="T:System.Collections.IEnumerable" />。エントリがない場合、または <see cref="T:System.Windows.Navigation.NavigationWindow" /> に独自のナビゲーション履歴がない場合は <see langword="null" />。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.BackStackProperty">
      <summary>
        <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CanGoBack">
      <summary>"戻る" ナビゲーション履歴にエントリが 1 つ以上あるかどうかを示す値を取得します。</summary>
      <returns>"戻る" ナビゲーション履歴にエントリが 1 つ以上ある場合は <see langword="true" />。"戻る" ナビゲーション履歴にエントリがない場合、または <see cref="T:System.Windows.Navigation.NavigationWindow" /> に独自のナビゲーション履歴がない場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.CanGoBackProperty">
      <summary>
        <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CanGoForward">
      <summary>"進む" ナビゲーション履歴にエントリが 1 つ以上あるかどうかを示す値を取得します。</summary>
      <returns>"進む" ナビゲーション履歴にエントリが 1 つ以上ある場合は <see langword="true" />。"進む" ナビゲーション履歴にエントリがない場合、または <see cref="T:System.Windows.Navigation.NavigationWindow" /> に独自のナビゲーション履歴がない場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.CanGoForwardProperty">
      <summary>
        <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CurrentSource">
      <summary>最後に移動した先のコンテンツの Uniform Resource Identifier (URI) を取得します。</summary>
      <returns>URI を使用して移動した場合、最後に移動したコンテンツの URI。それ以外の場合は、<see langword="null" />ます。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.ForwardStack">
      <summary>
        <see cref="T:System.Collections.IEnumerable" /> の "戻る" ナビゲーション履歴のエントリを列挙するために使用する <see cref="T:System.Windows.Navigation.NavigationWindow" /> を取得します。</summary>
      <returns>1 つ以上のエントリが "進む" ナビゲーション履歴に追加されている場合は <see cref="T:System.Collections.IEnumerable" />。エントリがない場合、または <see cref="T:System.Windows.Navigation.NavigationWindow" /> に独自のナビゲーション履歴がない場合は null。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.ForwardStackProperty">
      <summary>
        <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation">
      <summary>コンテンツ フラグメントへのナビゲーションが開始されると発生します。目的のフラグメントが現在のコンテンツにある場合は直ちに発生し、目的のフラグメントが別のコンテンツにある場合はソース XAML コンテンツが読み込まれた後に発生します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.GoBack">
      <summary>"戻る" ナビゲーション履歴の最新の項目に移動します。</summary>
      <exception cref="T:System.InvalidOperationException">"戻る" ナビゲーション履歴にエントリがないときに <see cref="M:System.Windows.Navigation.NavigationWindow.GoBack" /> が呼び出されました。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.GoForward">
      <summary>"進む" ナビゲーション履歴の最新の項目に移動します。</summary>
      <exception cref="T:System.InvalidOperationException">"進む" ナビゲーション履歴にエントリがないときに <see cref="M:System.Windows.Navigation.NavigationWindow.GoForward" /> が呼び出されました。</exception>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.LoadCompleted">
      <summary>移動先のコンテンツが読み込まれ、解析されて、描画が開始されると発生します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)">
      <summary>オブジェクトに格納されているコンテンツに非同期に移動します。</summary>
      <param name="content">移動先のコンテンツを格納している <see cref="T:System.Object" />。</param>
      <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)">
      <summary>オブジェクトに格納されているコンテンツに非同期に移動して、ナビゲーション中の処理に使用するデータを格納しているオブジェクトを渡します。</summary>
      <param name="content">移動先のコンテンツを格納している <see cref="T:System.Object" />。</param>
      <param name="extraData">ナビゲーション中の処理に使用するデータを格納している <see cref="T:System.Object" />。</param>
      <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)">
      <summary>Uniform Resource Identifier (URI) で指定されたコンテンツに非同期に移動します。</summary>
      <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
      <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)">
      <summary>Uniform Resource Identifier (URI) にあるソース コンテンツに非同期に移動して、ナビゲーション中の処理に使用するデータを格納しているオブジェクトを渡します。</summary>
      <param name="source">目的のコンテンツの URI で初期化された <see cref="T:System.Uri" /> オブジェクト。</param>
      <param name="extraData">ナビゲーション中の処理に使用するデータを格納している <see cref="T:System.Object" />。</param>
      <returns>ナビゲーションがキャンセルされない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.Navigated">
      <summary>移動先のコンテンツが見つかったときに発生します。この時点で <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティからコンテンツを取得できますが、読み込みはまだ完了していない可能性があります。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.Navigating">
      <summary>新しいナビゲーションが要求されたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationFailed">
      <summary>要求されたコンテンツにナビゲートするときにエラーが発生したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationProgress">
      <summary>ナビゲーション進行状況の情報提供を目的として、ダウンロード中に定期的に発生します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.NavigationService">
      <summary>コンテンツにナビゲーション サービスを提供するためにこの <see cref="T:System.Windows.Navigation.NavigationService" /> によって使用される <see cref="T:System.Windows.Navigation.NavigationWindow" /> を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Navigation.NavigationWindow" /> で使用されているナビゲーション サービス。</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationStopped">
      <summary>
        <see cref="M:System.Windows.Navigation.NavigationWindow.StopLoading" /> メソッドが呼び出されたときや、現在のナビゲーションの進行中に新しいナビゲーションが要求されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnApplyTemplate">
      <summary>ビジュアル ツリーのテンプレート生成が作成されると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnClosed(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Window.Closed" /> イベントを発生させます。</summary>
      <param name="args">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> に対応する <see cref="T:System.Windows.Navigation.NavigationWindow" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> に対応する <see cref="T:System.Windows.Navigation.NavigationWindow" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Refresh">
      <summary>現在のコンテンツを再度読み込みます。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.RemoveBackEntry">
      <summary>"戻る" 履歴から最新の履歴項目を削除します。</summary>
      <returns>"戻る" ナビゲーション履歴の最新の <see cref="T:System.Windows.Navigation.JournalEntry" /> (存在する場合)。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent">
      <summary>
        <see cref="T:System.Windows.Navigation.NavigationWindow" /> で外部の Extensible Application Markup Language (XAML) コンテンツが、(既定のインターネット ゾーン アクセス許可が設定された) 部分信頼のセキュリティ サンドボックス内に分離されるかどうかを示す値を取得または設定します。</summary>
      <returns>コンテンツが部分信頼セキュリティ サンドボックス内に分離される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.Security.SecurityException">アプリケーションが部分信頼で実行されているときに、<see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> が設定されています。</exception>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.SandboxExternalContentProperty">
      <summary>
        <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.ShouldSerializeContent">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI">
      <summary>
        <see cref="T:System.Windows.Navigation.NavigationWindow" /> のナビゲーション UI が表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>ナビゲーション UI が表示されている場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.ShowsNavigationUIProperty">
      <summary>
        <see cref="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.Source">
      <summary>現在のコンテンツの Uniform Resource Identifier (URI) (移動中の場合は移動先の新しいコンテンツの URI) を取得または設定します。</summary>
      <returns>現在のコンテンツの URI、または現在ナビゲートされているコンテンツ。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Navigation.NavigationWindow.Source" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.StopLoading">
      <summary>現在のナビゲーション要求に対応するコンテンツのダウンロードを中止します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.System#Windows#Markup#IUriContext#BaseUri">
      <summary>現在のコンテキストのベース URI (Uniform Resource Identifier) を取得または設定します。</summary>
      <returns>現在のコンテキストのベース URI。</returns>
    </member>
    <member name="T:System.Windows.Navigation.PageFunction`1">
      <summary>ページへのナビゲーションをメソッド呼び出しと類似した方法で処理できる、特別な種類のページを表します。</summary>
      <typeparam name="T">
        <see cref="T:System.Windows.Navigation.PageFunction`1" /> が呼び出し元に返す値の型。</typeparam>
    </member>
    <member name="M:System.Windows.Navigation.PageFunction`1.#ctor">
      <summary>
        <see cref="T:System.Windows.Navigation.PageFunction`1" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.PageFunction`1.OnReturn(System.Windows.Navigation.ReturnEventArgs{`0})">
      <summary>
        <see cref="T:System.Windows.Navigation.PageFunction`1" /> は、<see cref="M:System.Windows.Navigation.PageFunction`1.OnReturn(System.Windows.Navigation.ReturnEventArgs{`0})" /> を呼び出して呼び出し元に復帰し、<see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> オブジェクトを介して戻り値を渡します。</summary>
      <param name="e">
        <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> 戻り値 (<see cref="T:System.Windows.Navigation.PageFunction`1" />) を格納している <see cref="P:System.Windows.Navigation.ReturnEventArgs`1.Result" /> オブジェクト。</param>
    </member>
    <member name="E:System.Windows.Navigation.PageFunction`1.Return">
      <summary>呼び出された <see cref="T:System.Windows.Navigation.PageFunction`1" /> が復帰すると発生し、呼び出し元のページのみが処理できます。</summary>
    </member>
    <member name="T:System.Windows.Navigation.PageFunctionBase">
      <summary>すべてのページ関数クラスの親である抽象基本クラス。</summary>
    </member>
    <member name="M:System.Windows.Navigation.PageFunctionBase.#ctor">
      <summary>
        <see cref="T:System.Windows.Navigation.PageFunctionBase" /> 型の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Navigation.PageFunctionBase.RemoveFromJournal">
      <summary>ページ関数をナビゲーション履歴に追加しないようにする必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>ページ関数をナビゲーション履歴に追加しないようにする必要があるかどうかを示す <see cref="T:System.Boolean" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Navigation.PageFunctionBase.Start">
      <summary>
        <see cref="T:System.Windows.Navigation.PageFunction`1" /> が初めて移動先になったときに、このメソッドをオーバーライドして、そのページ関数を初期化します。</summary>
    </member>
    <member name="T:System.Windows.Navigation.RequestNavigateEventArgs">
      <summary>
        <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.Navigation.RequestNavigateEventArgs" /> クラスの新しいインスタンスを初期化します。 このコンストラクターは保護されています。</summary>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.#ctor(System.Uri,System.String)">
      <summary>Uniform Resource Identifier (URI) と対象の名前を使用して、<see cref="T:System.Windows.Navigation.RequestNavigateEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="uri">ターゲット URI。</param>
      <param name="target">対象の名前。</param>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>指定した送信元から指定したイベントのハンドラーを呼び出します。</summary>
      <param name="genericHandler">ハンドラーの名前。</param>
      <param name="genericTarget">イベントを発生させているオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Navigation.RequestNavigateEventArgs.Target">
      <summary>移動先のコンテンツをホストするナビゲーター。</summary>
      <returns>移動先のコンテンツをホストするナビゲーター (<see cref="T:System.Windows.Navigation.NavigationWindow" /> または <see cref="T:System.Windows.Controls.Frame" />)。</returns>
    </member>
    <member name="P:System.Windows.Navigation.RequestNavigateEventArgs.Uri">
      <summary>移動先のコンテンツの Uniform Resource Identifier (URI)。</summary>
      <returns>移動先のコンテンツの URI。</returns>
    </member>
    <member name="T:System.Windows.Navigation.RequestNavigateEventHandler">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> クラスの <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Navigation.ReturnEventArgs`1">
      <summary>
        <see cref="E:System.Windows.Navigation.PageFunction`1.Return" /> イベントのデータを提供します。</summary>
      <typeparam name="T">戻り値の型。</typeparam>
    </member>
    <member name="M:System.Windows.Navigation.ReturnEventArgs`1.#ctor">
      <summary>
        <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.ReturnEventArgs`1.#ctor(`0)">
      <summary>戻り値を指定して、<see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="result">返される値。</param>
    </member>
    <member name="P:System.Windows.Navigation.ReturnEventArgs`1.Result">
      <summary>ページ関数によって返される値を取得または設定します。</summary>
      <returns>ページ関数によって返される値。</returns>
    </member>
    <member name="T:System.Windows.Navigation.ReturnEventHandler`1">
      <summary>
        <see cref="E:System.Windows.Navigation.PageFunction`1.Return" /> クラスの <see cref="T:System.Windows.Navigation.PageFunction`1" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
      <typeparam name="T">イベントの型指定子。</typeparam>
    </member>
    <member name="T:System.Windows.NullableBoolConverter">
      <summary>
        <see cref="T:System.Nullable`1" /> 型との間で変換を行います (ジェネリックの <see cref="T:System.Boolean" /> 型の制約を使用)。</summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.NullableBoolConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>この型コンバーターが変換対象とするデータ型の標準値のコレクションを返します。</summary>
      <param name="context">コンテナーやプロパティ記述子などの、コンポーネントに関するコンテキスト情報を提供します。</param>
      <returns>有効値の標準セットが格納されているコレクション。 この実装の場合、有効な値は <see langword="true" />、<see langword="false" />、および <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <see cref="M:System.Windows.NullableBoolConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> から返された標準値のコレクションが、排他的なリストかどうかを示す値を返します。</summary>
      <param name="context">コンテナーやプロパティ記述子などの、コンポーネントに関するコンテキスト情報を提供します。</param>
      <returns>この実装は常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>リストから選択できる標準値セットをオブジェクトがサポートするかどうかを示す値を返します。</summary>
      <param name="context">コンテナーやプロパティ記述子などの、コンポーネントに関するコンテキスト情報を提供します。</param>
      <returns>この実装は常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="T:System.Windows.PowerLineStatus">
      <summary>システム電源が接続されているかどうか、またはシステム電源のステータスが不明であるかどうかを示します。</summary>
    </member>
    <member name="F:System.Windows.PowerLineStatus.Offline">
      <summary>システム電源がオンではありません。</summary>
    </member>
    <member name="F:System.Windows.PowerLineStatus.Online">
      <summary>システム電源がオンです。</summary>
    </member>
    <member name="F:System.Windows.PowerLineStatus.Unknown">
      <summary>システム電源のステータスを確認できません。</summary>
    </member>
    <member name="T:System.Windows.PropertyPath">
      <summary>プロパティを、別のプロパティまたは所有する型の下位のパスとして記述するためのデータ構造を実装します。 プロパティ パスは、オブジェクトへのデータ バインディングと、アニメーションのストーリーボードおよびタイムラインに使用されます。</summary>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.Object)">
      <summary>
        <see cref="T:System.Windows.PropertyPath" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parameter">共通言語ランタイム (CLR) プロパティまたは単一の依存関係プロパティへのパスを記述するプロパティ パス。</param>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
      <summary>指定したパスのトークン文字列とパラメーターを使用して、<see cref="T:System.Windows.PropertyPath" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">
        <see cref="P:System.Windows.PropertyPath.Path" /> をトークン化された形式で指定する文字列。</param>
      <param name="pathParameters">
        <see cref="P:System.Windows.PropertyPath.PathParameters" /> を設定するオブジェクトの配列。</param>
    </member>
    <member name="P:System.Windows.PropertyPath.Path">
      <summary>パスを記述する文字列を取得または設定します。</summary>
      <returns>パスを記述する文字列。</returns>
    </member>
    <member name="P:System.Windows.PropertyPath.PathParameters">
      <summary>パスがインデックス付きパラメーターを参照するときに使用するパラメーターのリストを取得します。</summary>
      <returns>パラメーターのリスト。</returns>
    </member>
    <member name="T:System.Windows.PropertyPathConverter">
      <summary>
        <see cref="T:System.Windows.PropertyPath" /> オブジェクトの型コンバーターを提供します。</summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.PropertyPathConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが、特定の型のオブジェクトを <see cref="T:System.Windows.PropertyPath" /> 型に変換できるかどうかを示す値を返します。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換元の型を表す <see cref="T:System.Type" />。</param>
      <returns>
        <paramref name="sourceType" /> の型が <see cref="T:System.String" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが、オブジェクトを <see cref="T:System.Windows.PropertyPath" /> 型に変換できるかどうかを示す値を返します。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換後の型を表す <see cref="T:System.Type" />。</param>
      <returns>
        <paramref name="destinationType" /> の型が <see cref="T:System.String" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定した値を <see cref="T:System.Windows.PropertyPath" /> 型に変換します。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="cultureInfo">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="source">
        <see cref="T:System.Windows.PropertyPath" /> に変換するオブジェクト。 文字列を指定する必要があります。</param>
      <returns>変換された <see cref="T:System.Windows.PropertyPath" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> に <see langword="null." /> が指定されました。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> は <see langword="null" /> ではありませんでしたが、予測された <see cref="T:System.String" /> 型でもありませんでした。</exception>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定した値オブジェクトを <see cref="T:System.Windows.PropertyPath" /> 型に変換します。</summary>
      <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="cultureInfo">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" /> 。</param>
      <param name="value">変換対象の <see cref="T:System.Windows.PropertyPath" />。</param>
      <param name="destinationType">変換先の型。 <see cref="T:System.String" /> 型を指定する必要があります。</param>
      <returns>変換後の <see cref="T:System.String" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> に <see langword="null" /> が指定されました。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> は <see langword="null" /> ではありませんでしたが、予測された <see cref="T:System.Windows.PropertyPath" /> 型でもありませんでした。

または -
<paramref name="destinationType" /> が <see cref="T:System.String" /> 型ではありませんでした。</exception>
    </member>
    <member name="T:System.Windows.ReasonSessionEnding">
      <summary>ユーザーのセッションが終了する理由を指定します。 <see cref="P:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding" /> プロパティで使用します。</summary>
    </member>
    <member name="F:System.Windows.ReasonSessionEnding.Logoff">
      <summary>セッションは、ユーザーがログオフしたため終了します。</summary>
    </member>
    <member name="F:System.Windows.ReasonSessionEnding.Shutdown">
      <summary>セッションは、ユーザーが Windows をシャットダウンしたため終了します。</summary>
    </member>
    <member name="T:System.Windows.RequestBringIntoViewEventArgs">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> ルーティング イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>型固有の方法でイベント ハンドラーを呼び出します。これにより、イベント システムの効率を高めることができます。</summary>
      <param name="genericHandler">型固有の方法で呼び出しを行うジェネリック ハンドラー。</param>
      <param name="genericTarget">ハンドラーを呼び出す対象。</param>
    </member>
    <member name="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject">
      <summary>イベントに応じて表示する必要があるオブジェクトを取得します。</summary>
      <returns>
        <see cref="M:System.Windows.FrameworkElement.BringIntoView" /> を呼び出したオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect">
      <summary>オブジェクトの座標空間における、表示する必要がある四角形の領域を取得します。</summary>
      <returns>要求された四角形の領域。</returns>
    </member>
    <member name="T:System.Windows.RequestBringIntoViewEventHandler">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.ResizeMode">
      <summary>ウィンドウのサイズが変更可能かどうか、および変更可能な場合はその方法を指定します。 <see cref="P:System.Windows.Window.ResizeMode" /> プロパティで使用します。</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.CanMinimize">
      <summary>ウィンドウは最小化および元のサイズへの復元だけが可能です。 最小化ボタンと最大化ボタンが表示されますが、最小化ボタンだけが有効になります。</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.CanResize">
      <summary>ウィンドウのサイズは変更できます。 最小化ボタンと最大化ボタンはどちらも表示され、有効になります。</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.CanResizeWithGrip">
      <summary>ウィンドウのサイズは変更できます。 最小化ボタンと最大化ボタンはどちらも表示され、有効になります。 サイズ変更グリップがウィンドウの右下隅に表示されます。</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.NoResize">
      <summary>ウィンドウのサイズは変更できません。 最小化ボタンと最大化ボタンはタイトル バーに表示されません。</summary>
    </member>
    <member name="T:System.Windows.ResourceDictionary">
      <summary>WPF アプリケーションのコンポーネントおよびその他の要素によって使用される WPF リソースを格納するハッシュ テーブルまたはディクショナリの実装を提供します。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.#ctor">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
      <summary>キーによってこの <see cref="T:System.Windows.ResourceDictionary" /> にリソースを追加します。</summary>
      <param name="key">追加するキーの名前。</param>
      <param name="value">追加するリソースの値。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.ResourceDictionary" /> はロックされているか、読み取り専用です。</exception>
      <exception cref="T:System.ArgumentException">同じキーを持つ要素が、<see cref="T:System.Collections.Hashtable" /> に既に存在します。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.BeginInit">
      <summary>この <see cref="T:System.Windows.ResourceDictionary" /> の初期化フェーズを開始します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.ResourceDictionary.BeginInit" /> を呼び出す前に、<see cref="M:System.Windows.ResourceDictionary.EndInit" /> が 2 回以上呼び出されました。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Clear">
      <summary>基本 <see cref="T:System.Windows.ResourceDictionary" /> のキー (および値) をすべて消去します。 この場合、マージされたディクショナリの項目は消去されません。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Contains(System.Object)">
      <summary>指定したキーの要素が <see cref="T:System.Windows.ResourceDictionary" /> に格納されているかどうかを確認します。</summary>
      <param name="key">
        <see cref="T:System.Windows.ResourceDictionary" /> 内で検索されるキー。</param>
      <returns>指定したキーの、キーと値のペアが <see cref="T:System.Windows.ResourceDictionary" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>1 次元の <see cref="T:System.Windows.ResourceDictionary" /> の指定したインデックスに <see cref="T:System.Collections.DictionaryEntry" /> の要素をコピーします。</summary>
      <param name="array">
        <see cref="T:System.Collections.DictionaryEntry" /> インスタンスから <see cref="T:System.Windows.ResourceDictionary" /> オブジェクトがコピーされる 1 次元配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
      <param name="arrayIndex">コピーの開始位置となる、<paramref name="array" /> の 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Count">
      <summary>基本 <see cref="T:System.Windows.ResourceDictionary" /> 内のエントリの数を取得します。</summary>
      <returns>基本ディクショナリ内の現在のエントリの数。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.DeferrableContent">
      <summary>リソース ディクショナリの遅延可能なコンテンツを取得または設定します。</summary>
      <returns>常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.EndInit">
      <summary>初期化フェーズを終了し、初期化フェーズでキーに対して行った変更がすべて考慮されるように前のツリーを無効にします。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.FindName(System.String)">
      <summary>このディクショナリの実装ではサポートされていません。</summary>
      <param name="name">要求されたオブジェクトの名前の識別子。</param>
      <returns>常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.IDictionaryEnumerator" /> を反復処理するために使用できる <see cref="T:System.Windows.ResourceDictionary" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.ResourceDictionary" /> の専用の列挙子。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.InvalidatesImplicitDataTemplateResources">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" /> オブジェクトにより発生した無効化により、<see cref="T:System.Windows.Controls.ContentPresenter" /> オブジェクトがテンプレートの選択を再評価するかどうかを示す値を取得または設定します。 無効化は、暗黙的なデータ テンプレート リソースが変更されたときに発生します。</summary>
      <returns>無効化によって <see cref="T:System.Windows.Controls.ContentPresenter" /> オブジェクトがテンプレートの選択を再評価する場合は <see langword="true" />。それ以外の場合は <see langword="false" /> です。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsFixedSize">
      <summary>この <see cref="T:System.Windows.ResourceDictionary" /> が固定サイズかどうかを取得します。</summary>
      <returns>ハッシュ テーブルが固定サイズの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsReadOnly">
      <summary>この <see cref="T:System.Windows.ResourceDictionary" /> が読み取り専用かどうかを取得します。</summary>
      <returns>ハッシュ テーブルが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Item(System.Object)">
      <summary>指定したキーに関連付けられている値を取得または設定します。</summary>
      <param name="key">取得または設定する目的のキー。</param>
      <returns>キーの値。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Keys">
      <summary>この <see cref="T:System.Windows.ResourceDictionary" /> に格納されているすべてのキーのコレクションを取得します。</summary>
      <returns>すべてのキーのコレクション。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.MergedDictionaries">
      <summary>マージされたディクショナリ内のさまざまなリソース ディクショナリを構成する、<see cref="T:System.Windows.ResourceDictionary" /> ディクショナリのコレクションを取得します。</summary>
      <returns>マージされたディクショナリのコレクション。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" /> がリソースの要求を受け取ると発生します。</summary>
      <param name="key">取得するリソースのキー。</param>
      <param name="value">要求したリソースの値。</param>
      <param name="canCache">リソースを保存して後で使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
      <summary>このディクショナリの実装ではサポートされていません。</summary>
      <param name="name">サポートされていません。</param>
      <param name="scopedElement">サポートされていません。</param>
      <exception cref="T:System.NotSupportedException">このメソッドが呼び出されると常に発生します。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Remove(System.Object)">
      <summary>指定したキーを持つエントリを基本ディクショナリから削除します。</summary>
      <param name="key">削除するエントリのキー。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.ResourceDictionary" /> はロックされているか、読み取り専用です。</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Source">
      <summary>リソースの読み込み元の Uniform Resource Identifier (URI) を取得または設定します。</summary>
      <returns>外部リソース ディクショナリのソースの場所。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />」をご覧ください。</summary>
      <param name="array">
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> からコピーされた項目を受け取る、0 から始まる <see cref="T:System.Array" />。</param>
      <param name="arrayIndex">指定した <see cref="T:System.Array" /> 内の、内容のコピー開始位置。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.IsSynchronized" />」をご覧ください。</summary>
      <returns>
        <see cref="T:System.Windows.ResourceDictionary" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.SyncRoot" />」をご覧ください。</summary>
      <returns>
        <see cref="T:System.Windows.ResourceDictionary" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri">
      <summary>このメンバーの詳細については、「<see cref="P:System.Windows.Markup.IUriContext.BaseUri" />」をご覧ください。</summary>
      <returns>現在のコンテキストのベース URI。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.UnregisterName(System.String)">
      <summary>このディクショナリの実装ではサポートされていません。</summary>
      <param name="name">サポートされていません。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Values">
      <summary>この <see cref="T:System.Windows.ResourceDictionary" /> に格納されているキーに関連付けられているすべての値のコレクションを取得します。</summary>
      <returns>すべての値のコレクション。</returns>
    </member>
    <member name="T:System.Windows.ResourceDictionaryLocation">
      <summary>テーマ リソース ディクショナリの配置場所を指定します。</summary>
    </member>
    <member name="F:System.Windows.ResourceDictionaryLocation.ExternalAssembly">
      <summary>テーマ ディクショナリは、テーマ設定する型を定義するアセンブリの外部のアセンブリ内にあります。 これに追加したテーマ名を使って元のアセンブリに基づく名前が付けられます (例: PresentationFramework.Luna.dll)。 これらのディクショナリでは、元のアセンブリと同じバージョンとキーを共有します。</summary>
    </member>
    <member name="F:System.Windows.ResourceDictionaryLocation.None">
      <summary>テーマ ディクショナリがありません。</summary>
    </member>
    <member name="F:System.Windows.ResourceDictionaryLocation.SourceAssembly">
      <summary>テーマ ディクショナリは、テーマ設定する型を定義するアセンブリ内にあります。</summary>
    </member>
    <member name="T:System.Windows.ResourceKey">
      <summary>各種リソース キーの抽象基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Windows.ResourceKey.#ctor">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> から派生したクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.ResourceKey.Assembly">
      <summary>このキーに関連付けられている値を検索するためのアセンブリのディクショナリを示すアセンブリ オブジェクトを取得します。</summary>
      <returns>リフレクション クラスとして取得されたアセンブリ。</returns>
    </member>
    <member name="M:System.Windows.ResourceKey.ProvideValue(System.IServiceProvider)">
      <summary>この <see cref="T:System.Windows.ResourceKey" /> を返します。 通常、このクラスのインスタンスはディクショナリのキーとして使用されます。</summary>
      <param name="serviceProvider">目的の値を提供するサービス実装。</param>
      <returns>このメソッドを呼び出すと、常にインスタンス自体が返されます。</returns>
    </member>
    <member name="T:System.Windows.ResourceReferenceKeyNotFoundException">
      <summary>マークアップ拡張機能リソースの解析中またはシリアル化中に、リソース参照キーが見つからない場合にスローされる例外です。</summary>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor">
      <summary>
        <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>指定したシリアル化情報とストリームのコンテキストを使用して、<see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">シリアル化プロセスからの具体的な情報。</param>
      <param name="context">例外がスローされた時点でのコンテキスト。</param>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor(System.String,System.Object)">
      <summary>指定したエラー メッセージとリソース キーを使用して、<see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">適切な説明メッセージ。</param>
      <param name="resourceKey">見つからなかったキー。</param>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>例外の詳細をデバッガーまたはダイアログに報告します。</summary>
      <param name="info">シリアル化プロセスからの具体的な情報。</param>
      <param name="context">例外がスローされた時点でのコンテキスト。</param>
    </member>
    <member name="P:System.Windows.ResourceReferenceKeyNotFoundException.Key">
      <summary>例外の原因となった、見つからなかったキーを取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="T:System.Windows.Resources.ContentTypes">
      <summary>コンテンツ タイプおよびリソースとして Extensible Application Markup Language (XAML) をサポートします。</summary>
    </member>
    <member name="M:System.Windows.Resources.ContentTypes.#ctor">
      <summary>
        <see cref="T:System.Windows.Resources.ContentTypes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:System.Windows.Resources.ContentTypes.XamlContentType">
      <summary>Extensible Application Markup Language (XAML) コンテンツ タイプを宣言します。</summary>
    </member>
    <member name="T:System.Windows.Resources.StreamResourceInfo">
      <summary>イメージなど、Windows Presentation Foundation (WPF) で使用されるストリーム リソースに関する情報を格納します。</summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor">
      <summary>
        <see cref="T:System.Windows.Resources.StreamResourceInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor(System.IO.Stream,System.String)">
      <summary>指定されたストリームに基づいて、<see cref="T:System.Windows.Resources.StreamResourceInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">参照ストリーム。</param>
      <param name="contentType">ストリームの Multipurpose Internet Mail Extensions (MIME) コンテンツ タイプ。</param>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.ContentType">
      <summary>ストリームのコンテンツ タイプを取得または設定します。</summary>
      <returns>Multipurpose Internet Mail Extensions (MIME) コンテンツ タイプ。</returns>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.Stream">
      <summary>リソースの実際のストリームを取得または設定します。</summary>
      <returns>リソースのストリーム。</returns>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventArgs`1">
      <summary>特定のルーティング イベントからの報告に従って、変更されたプロパティの前の値と現在の値を含む、値の変更に関するデータを依存関係プロパティに提供します。</summary>
      <typeparam name="T">変更された依存関係プロパティの型。</typeparam>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
      <summary>指定された古い値と新しい値を使用して、<see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oldValue">イベントが発生する前の、プロパティの以前の値。</param>
      <param name="newValue">イベント発生時のプロパティの現在値。</param>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0,System.Windows.RoutedEvent)">
      <summary>指定された古い値と新しい値、およびイベント識別子を使用して、<see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oldValue">イベントが発生する前の、プロパティの以前の値。</param>
      <param name="newValue">イベント発生時のプロパティの現在値。</param>
      <param name="routedEvent">この引数クラスが情報を持つルーティング イベントの識別子。</param>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>型固有の方法でイベント ハンドラーを呼び出します。これにより、イベント システムの効率を高めることができます。</summary>
      <param name="genericHandler">型固有の方法で呼び出しを行うジェネリック ハンドラー。</param>
      <param name="genericTarget">ハンドラーを呼び出す対象。</param>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue">
      <summary>プロパティ変更イベントで報告されたプロパティの新しい値を取得します。</summary>
      <returns>ジェネリック値。 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> の現実の実装では、このプロパティのジェネリック型は実装の制約型に置き換えられます。</returns>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue">
      <summary>プロパティ変更イベントで報告されたプロパティの以前の値を取得します。</summary>
      <returns>ジェネリック値。 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> の現実の実装では、このプロパティのジェネリック型は実装の制約型に置き換えられます。</returns>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventHandler`1">
      <summary>プロパティ値の変更を追跡するさまざまなルーティングされたイベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。 特定のイベント定義では、<see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> は型に制約され、制約の型パラメーターはデリゲート実装の型パラメーター制約に一致します。</param>
      <typeparam name="T">値の変更が報告されたプロパティ値の型。</typeparam>
    </member>
    <member name="T:System.Windows.SessionEndingCancelEventArgs">
      <summary>
        <see cref="E:System.Windows.Application.SessionEnding" /> イベントのイベント引数を格納します。</summary>
    </member>
    <member name="P:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding">
      <summary>セッションが終了する理由を示す値を取得します。</summary>
      <returns>セッションが終了した理由を示す <see cref="T:System.Windows.ReasonSessionEnding" /> 値。</returns>
    </member>
    <member name="T:System.Windows.SessionEndingCancelEventHandler">
      <summary>
        <see cref="E:System.Windows.Application.SessionEnding" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベントの引数と <see cref="T:System.Windows.SessionEndingCancelEventArgs" /> オブジェクト。</param>
    </member>
    <member name="T:System.Windows.Setter">
      <summary>プロパティ値を適用する setter を表します。</summary>
    </member>
    <member name="M:System.Windows.Setter.#ctor">
      <summary>
        <see cref="T:System.Windows.Setter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)">
      <summary>指定したプロパティと値を使用して、<see cref="T:System.Windows.Setter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="property">
        <see cref="T:System.Windows.DependencyProperty" /> を適用する <see cref="P:System.Windows.Setter.Value" />。</param>
      <param name="value">プロパティに適用する値。</param>
    </member>
    <member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object,System.String)">
      <summary>指定したプロパティ、値、およびターゲット名を使用して、<see cref="T:System.Windows.Setter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="property">
        <see cref="T:System.Windows.DependencyProperty" /> を適用する <see cref="P:System.Windows.Setter.Value" />。</param>
      <param name="value">プロパティに適用する値。</param>
      <param name="targetName">この <see cref="T:System.Windows.Setter" /> の対象となる子ノードの名前。</param>
    </member>
    <member name="P:System.Windows.Setter.Property">
      <summary>
        <see cref="P:System.Windows.Setter.Value" /> が適用されるプロパティを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.DependencyProperty" /> の適用対象の <see cref="P:System.Windows.Setter.Value" />。 既定値は NULL です。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Setter.Property" /> プロパティを <see langword="null" /> にすることはできません。</exception>
      <exception cref="T:System.ArgumentException">指定した <see cref="P:System.Windows.Setter.Property" /> プロパティは読み取り専用にできません。</exception>
      <exception cref="T:System.InvalidOperationException">指定した <see cref="P:System.Windows.Setter.Value" /> が、指定した <see cref="P:System.Windows.Setter.Property" /> の型に対して有効でない場合。</exception>
    </member>
    <member name="M:System.Windows.Setter.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
      <summary>マークアップ拡張機能によって <see cref="T:System.Windows.Setter" /> オブジェクトのプロパティの値が設定された場合の処理を行います。</summary>
      <param name="targetObject">マークアップ拡張機能によって値が設定されるオブジェクト。</param>
      <param name="eventArgs">マークアップ拡張機能の処理に関連したデータ。</param>
    </member>
    <member name="M:System.Windows.Setter.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)">
      <summary>型コンバーターによって <see cref="T:System.Windows.Setter" /> オブジェクトのプロパティの値が設定された場合の処理を行います。</summary>
      <param name="targetObject">型コンバーターによって値が設定されるオブジェクト。</param>
      <param name="eventArgs">型コンバーターの処理に関連したデータ。</param>
    </member>
    <member name="M:System.Windows.Setter.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>初期化の開始を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="M:System.Windows.Setter.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>初期化の完了を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="P:System.Windows.Setter.TargetName">
      <summary>この <see cref="T:System.Windows.Setter" /> の対象となるオブジェクトの名前を取得または設定します。</summary>
      <returns>既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Setter.Value">
      <summary>この <see cref="T:System.Windows.Setter" /> で指定されたプロパティに適用する値を取得または設定します。</summary>
      <returns>既定値は <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> です。</returns>
      <exception cref="T:System.ArgumentException">指定した <see cref="P:System.Windows.Setter.Value" /> に <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> が設定されている場合。</exception>
    </member>
    <member name="T:System.Windows.SetterBase">
      <summary>値 setter の基本クラスを表します。</summary>
    </member>
    <member name="M:System.Windows.SetterBase.CheckSealed">
      <summary>このオブジェクトが読み取り専用で変更できないかどうかをチェックします。</summary>
    </member>
    <member name="P:System.Windows.SetterBase.IsSealed">
      <summary>このオブジェクトが不変の状態であるかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" />このオブジェクトが不変の状態である場合は。それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="T:System.Windows.SetterBaseCollection">
      <summary>
        <see cref="T:System.Windows.SetterBase" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.SetterBaseCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.SetterBaseCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.SetterBaseCollection.IsSealed">
      <summary>このオブジェクトが読み取り専用の状態であるかどうかを示す値を取得します。</summary>
      <returns>このオブジェクトが読み取り専用の状態で変更できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Ellipse">
      <summary>楕円を描きます。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Ellipse.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Ellipse" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Ellipse.GeometryTransform">
      <summary>
        <see cref="P:System.Windows.Media.Transform.Identity" /> の <see cref="T:System.Windows.Media.Geometry" /> に描画前に適用される <see cref="T:System.Windows.Shapes.Ellipse" /> 変換の値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Transform.Identity" /> の <see cref="T:System.Windows.Media.Geometry" /> に描画前に適用される <see cref="T:System.Windows.Shapes.Ellipse" /> 変換の値。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Ellipse.RenderedGeometry">
      <summary>
        <see cref="T:System.Windows.Media.Geometry" /> の描画後の最終的な <see cref="T:System.Windows.Shapes.Ellipse" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Geometry" /> の描画後の最終的な <see cref="T:System.Windows.Shapes.Ellipse" />。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Line">
      <summary>2 点を結ぶ直線を描画します。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Line.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Line" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.X1">
      <summary>
        <see cref="T:System.Windows.Shapes.Line" /> の始点の x 座標を取得または設定します。</summary>
      <returns>線の始点の x 座標。 既定値は<c>0</c>です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X1Property">
      <summary>
        <see cref="P:System.Windows.Shapes.Line.X1" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.X2">
      <summary>
        <see cref="T:System.Windows.Shapes.Line" /> の終点の x 座標を取得または設定します。</summary>
      <returns>直線の終点の x 座標。 既定値は<c>0</c>です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X2Property">
      <summary>
        <see cref="P:System.Windows.Shapes.Line.X2" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y1">
      <summary>
        <see cref="T:System.Windows.Shapes.Line" /> の始点の y 座標を取得または設定します。</summary>
      <returns>直線の始点の y 座標。 既定値は<c>0</c>です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y1Property">
      <summary>
        <see cref="P:System.Windows.Shapes.Line.Y1" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y2">
      <summary>
        <see cref="T:System.Windows.Shapes.Line" /> の終点の y 座標を取得または設定します。</summary>
      <returns>直線の終点の y 座標。 既定値は<c>0</c>です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y2Property">
      <summary>
        <see cref="P:System.Windows.Shapes.Line.Y2" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Path">
      <summary>直線と曲線が連結して一続きになったものを描画します。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Path.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Path" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Path.Data">
      <summary>描画される図形を指定する <see cref="T:System.Windows.Media.Geometry" /> を取得または設定します。</summary>
      <returns>描画する図形の説明。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Path.DataProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Path.Data" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Polygon">
      <summary>多角形を描画します。これは、閉じた図形を形成する接続された一連の線です。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Polygon.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Polygon" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.FillRule">
      <summary>図形内部の塗りつぶし領域の判定方法を指定する <see cref="T:System.Windows.Media.FillRule" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.FillRule" /> 列挙値のいずれか。 既定値は、<see cref="F:System.Windows.Media.FillRule.EvenOdd" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.FillRuleProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Polygon.FillRule" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.Points">
      <summary>多角形の頂点を格納するコレクションを取得または設定します。</summary>
      <returns>多角形の頂点を示す <see cref="T:System.Windows.Point" /> 構造体のコレクション。 既定値は null 参照 (Visual Basic では <see langword="Nothing" />) です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.PointsProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Polygon.Points" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Polyline">
      <summary>接続された一連の直線を描画します。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Polyline.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Polyline" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.FillRule">
      <summary>図形内部の塗りつぶし領域の判定方法を指定する <see cref="T:System.Windows.Media.FillRule" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.FillRule" /> 列挙値のいずれか。 既定値は、<see cref="F:System.Windows.Media.FillRule.EvenOdd" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.FillRuleProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.Points">
      <summary>
        <see cref="T:System.Windows.Shapes.Polyline" /> の頂点を格納するコレクションを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Point" /> の頂点を記述する <see cref="T:System.Windows.Shapes.Polyline" />構造体のコレクション。 既定値は null 参照 (Visual Basic では<see langword="Nothing" /> ) です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.PointsProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Polyline.Points" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Rectangle">
      <summary>四角形を描きます。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Rectangle.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Rectangle" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.GeometryTransform">
      <summary>この <see cref="T:System.Windows.Media.Transform" /> に適用される <see cref="T:System.Windows.Shapes.Rectangle" /> を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Shapes.Rectangle" /> に適用される変換。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusX">
      <summary>四角形の角を丸めるのに使用される楕円の X 軸半径を取得または設定します。</summary>
      <returns>四角形の角を丸めるのに使用される楕円の X 軸半径。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusXProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Rectangle.RadiusX" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusY">
      <summary>四角形の角を丸めるのに使用される楕円の Y 軸半径を取得または設定します。</summary>
      <returns>四角形の角を丸めるのに使用される楕円の Y 軸半径。 既定値は<c>0</c>です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusYProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Rectangle.RadiusY" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RenderedGeometry">
      <summary>描画された最終的な図形を表す <see cref="T:System.Windows.Media.Geometry" /> オブジェクトを取得します。</summary>
      <returns>描画された最終的な図形。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Shape">
      <summary>
        <see cref="T:System.Windows.Shapes.Ellipse" />、<see cref="T:System.Windows.Shapes.Polygon" />、<see cref="T:System.Windows.Shapes.Rectangle" /> などの図形要素の基底クラスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Shape" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Shapes.Shape" /> および <see cref="P:System.Windows.Shapes.Shape.RenderedGeometry" /> プロパティを評価することによって <see cref="P:System.Windows.Shapes.Shape.Stretch" /> を配置します。</summary>
      <param name="finalSize">
        <see cref="T:System.Windows.Shapes.Shape" /> の評価後の最終的なサイズ。</param>
      <returns>配置された <see cref="T:System.Windows.Shapes.Shape" /> 要素の最終的なサイズ。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.DefiningGeometry">
      <summary>
        <see cref="T:System.Windows.Media.Geometry" /> の <see cref="T:System.Windows.Shapes.Shape" /> を表す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Shape" /> の <see cref="T:System.Windows.Media.Geometry" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Fill">
      <summary>図形の内部を描画する方法を指定する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>図形内部を描画する方法を示す <see cref="T:System.Windows.Media.Brush" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.FillProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.Fill" /> 依存関係プロパティを識別します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.GeometryTransform">
      <summary>
        <see cref="T:System.Windows.Media.Transform" /> のジオメトリに描画前に適用される <see cref="T:System.Windows.Shapes.Shape" /> を表す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Transform" /> のジオメトリに描画前に適用される <see cref="T:System.Windows.Shapes.Shape" />。</returns>
    </member>
    <member name="M:System.Windows.Shapes.Shape.MeasureOverride(System.Windows.Size)">
      <summary>配置前の最初のレイアウト パスの実行中に <see cref="T:System.Windows.Shapes.Shape" /> を測定します。</summary>
      <param name="constraint">上限にする最大 <see cref="T:System.Windows.Size" />。</param>
      <returns>
        <see cref="T:System.Windows.Size" /> の最大 <see cref="T:System.Windows.Shapes.Shape" />。</returns>
    </member>
    <member name="M:System.Windows.Shapes.Shape.OnRender(System.Windows.Media.DrawingContext)">
      <summary>
        <see cref="T:System.Windows.Shapes.Shape" /> 要素の既定の外観を変更するための手段を提供します。</summary>
      <param name="drawingContext">この <see cref="T:System.Windows.Media.DrawingContext" /> の描画パスの実行中に描画される <see cref="T:System.Windows.Shapes.Shape" /> オブジェクト。</param>
    </member>
    <member name="P:System.Windows.Shapes.Shape.RenderedGeometry">
      <summary>
        <see cref="T:System.Windows.Media.Geometry" /> の描画後の最終的な <see cref="T:System.Windows.Shapes.Shape" /> を表す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Geometry" /> の描画後の最終的な <see cref="T:System.Windows.Shapes.Shape" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stretch">
      <summary>シェイプによる割り当てられた領域の埋め方を説明する <see cref="T:System.Windows.Media.Stretch" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Stretch" /> 列挙値のいずれか。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StretchProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.Stretch" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stroke">
      <summary>
        <see cref="T:System.Windows.Shapes.Shape" /> の輪郭を描画する方法を指定する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Shape" /> の輪郭を描画する方法を指定する <see cref="T:System.Windows.Media.Brush" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashArray">
      <summary>図形のアウトラインの描画に使用されるダッシュと空白の破線パターンを示す <see cref="T:System.Double" /> 値のコレクションを取得または設定します。</summary>
      <returns>ダッシュと空白から成る破線パターンを指定する <see cref="T:System.Double" /> 値のコレクション。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashArrayProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashCap">
      <summary>破線 (ダッシュ) の端を描画する方法を指定する <see cref="T:System.Windows.Media.PenLineCap" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineCap" /> の列挙値の 1 つ。 既定値は、<see cref="F:System.Windows.Media.PenLineCap.Flat" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashCapProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashOffset">
      <summary>破線パターン内のダッシュの始点間の距離を指定する <see cref="T:System.Double" /> を取得または設定します。</summary>
      <returns>破線パターン内のダッシュの始点間の距離を表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeEndLineCap">
      <summary>線分の終点の <see cref="T:System.Windows.Shapes.Shape" /> を説明する <see cref="T:System.Windows.Media.PenLineCap" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineCap" />の列挙値の 1 つ。 既定値は、<see cref="F:System.Windows.Media.PenLineCap.Flat" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeEndLineCapProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeLineJoin">
      <summary>
        <see cref="T:System.Windows.Shapes.Shape" /> の頂点で使用される結合の種類を指定する <see cref="T:System.Windows.Media.PenLineJoin" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineJoin" /> の列挙値の 1 つ。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeLineJoinProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeMiterLimit">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 要素の <see cref="T:System.Windows.Shapes.Shape" /> の半分に対するマイタの長さの割合に関する制限を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 要素の <see cref="T:System.Windows.Shapes.Shape" /> に対するマイタの長さの割合に関する制限。 この値は、常に 1 以上の正数です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeMiterLimitProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.Stroke" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeStartLineCap">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.Stroke" /> の開始時に <see cref="T:System.Windows.Shapes.Shape" /> を説明する、<see cref="T:System.Windows.Media.PenLineCap" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineCap" /> 列挙値のいずれか。 既定値は、<see cref="F:System.Windows.Media.PenLineCap.Flat" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeStartLineCapProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeThickness">
      <summary>
        <see cref="T:System.Windows.Shapes.Shape" /> の輪郭の幅を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Shape" /> の輪郭の幅。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeThicknessProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpItem">
      <summary>
        <see cref="T:System.Windows.Shell.JumpPath" /> および <see cref="T:System.Windows.Shell.JumpTask" /> の基本クラスです。</summary>
    </member>
    <member name="P:System.Windows.Shell.JumpItem.CustomCategory">
      <summary>Windows 7 タスク バーのジャンプ リストで <see cref="T:System.Windows.Shell.JumpItem" /> のグループ化に使用されるカテゴリの名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Shell.JumpItem" /> のグループ化に使用されるカテゴリの名前。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpItemRejectionReason">
      <summary>
        <see cref="T:System.Windows.Shell.JumpItem" /> を Windows シェルによってジャンプ リストに追加できなかった理由を示します。</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.InvalidItem">
      <summary>
        <see cref="T:System.Windows.Shell.JumpItem" /> は無効なファイル パスを参照しています。または、オペレーティング システムでジャンプ リストがサポートされていません。</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.None">
      <summary>理由が特定されていません。</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.NoRegisteredHandler">
      <summary>アプリケーションが <see cref="T:System.Windows.Shell.JumpItem" /> のファイル名の拡張子を処理するように登録されていません。</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.RemovedByUser">
      <summary>該当の項目が以前はジャンプ リストにありましたが、ユーザーによって削除されました。</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpItemsRejectedEventArgs">
      <summary>
        <see cref="E:System.Windows.Shell.JumpList.JumpItemsRejected" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRejectedEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.Shell.JumpItemsRejectedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRejectedEventArgs.#ctor(System.Collections.Generic.IList{System.Windows.Shell.JumpItem},System.Collections.Generic.IList{System.Windows.Shell.JumpItemRejectionReason})">
      <summary>パラメーターを指定して、<see cref="T:System.Windows.Shell.JumpItemsRejectedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="rejectedItems">Windows シェルによってジャンプ リストに追加できなかったジャンプ リスト項目の一覧。</param>
      <param name="reasons">ジャンプ リスト項目をジャンプ リストに追加できなかった拒否理由の一覧。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rejectedItems" /> のカウントは、拒否 <paramref name="reasons" /> のカウントと等しくありません。</exception>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRejectedEventArgs.RejectedItems">
      <summary>Windows シェルによってジャンプ リストに追加できなかったジャンプ リスト項目の一覧を取得します。</summary>
      <returns>Windows シェルによってジャンプ リストに追加できなかったジャンプ リスト項目の一覧。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRejectedEventArgs.RejectionReasons">
      <summary>ジャンプ リスト項目をジャンプ リストに追加できなかった拒否理由の一覧を取得します。</summary>
      <returns>ジャンプ リスト項目をジャンプ リストに追加できなかった拒否理由の一覧。</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpItemsRemovedEventArgs">
      <summary>
        <see cref="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRemovedEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.Shell.JumpItemsRemovedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRemovedEventArgs.#ctor(System.Collections.Generic.IList{System.Windows.Shell.JumpItem})">
      <summary>パラメーターを指定して、<see cref="T:System.Windows.Shell.JumpItemsRemovedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="removedItems">
        <see cref="M:System.Windows.Shell.JumpList.Apply" /> が最後に呼び出された後に削除されたジャンプ リスト項目の一覧。</param>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRemovedEventArgs.RemovedItems">
      <summary>
        <see cref="M:System.Windows.Shell.JumpList.Apply" /> メソッドが最後に呼び出された後にユーザーによって削除されたジャンプ リスト項目の一覧を取得します。</summary>
      <returns>
        <see cref="M:System.Windows.Shell.JumpList.Apply" /> メソッドが最後に呼び出された後にユーザーによって削除されたジャンプ リスト項目の一覧。</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpList">
      <summary>Windows 7 タスク バー ボタンにメニューとして表示される項目およびタスクの一覧を表します。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.#ctor">
      <summary>
        <see cref="T:System.Windows.Shell.JumpList" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
      <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.Shell.JumpList" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="items">ジャンプ リスト内に表示される <see cref="T:System.Windows.Shell.JumpItem" /> オブジェクトのコレクション。</param>
      <param name="showFrequent">頻繁に使用される項目をジャンプ リストに表示するかどうかを示す値。</param>
      <param name="showRecent">最近使用された項目をジャンプ リストに表示するかどうかを示す値。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
      <summary>指定した項目のパスを、ジャンプ リストの [最近使ったもの] カテゴリに追加します。</summary>
      <param name="itemPath">ジャンプ リストに追加するパス。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
      <summary>指定したジャンプ パスを、ジャンプ リストの [最近使ったもの] カテゴリに追加します。</summary>
      <param name="jumpPath">ジャンプ リストに追加する <see cref="T:System.Windows.Shell.JumpPath" />。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)">
      <summary>指定したジャンプ タスクを、ジャンプ リストの [最近使ったもの] カテゴリに追加します。</summary>
      <param name="jumpTask">ジャンプ リストに追加する <see cref="T:System.Windows.Shell.JumpTask" />。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.Apply">
      <summary>現在の状態の <see cref="T:System.Windows.Shell.JumpList" /> を Windows シェルに送信します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Shell.JumpList" /> は、完全に初期化されていません。</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.BeginInit">
      <summary>
        <see cref="T:System.Windows.Shell.JumpList" /> の初期化の開始を通知します。</summary>
      <exception cref="T:System.InvalidOperationException">この <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> の呼び出しは、直前の <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> の呼び出しで入れ子になっています。</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.EndInit">
      <summary>
        <see cref="T:System.Windows.Shell.JumpList" /> の初期化の終了を通知します。</summary>
      <exception cref="T:System.NotSupportedException">この <see cref="M:System.Windows.Shell.JumpList.EndInit" /> の呼び出しは、<see cref="M:System.Windows.Shell.JumpList.BeginInit" /> の呼び出しとペアになっていません。</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
      <summary>アプリケーションに関連付けられている <see cref="T:System.Windows.Shell.JumpList" /> オブジェクトを返します。</summary>
      <param name="application">
        <see cref="T:System.Windows.Shell.JumpList" /> に関連付けられているアプリケーション。</param>
      <returns>指定したアプリケーションに関連付けられた <see cref="T:System.Windows.Shell.JumpList" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpList.JumpItems">
      <summary>ジャンプ リスト内に表示される <see cref="T:System.Windows.Shell.JumpItem" /> オブジェクトのコレクションを取得します。</summary>
      <returns>ジャンプ リスト内に表示される <see cref="T:System.Windows.Shell.JumpItem" /> オブジェクトのコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="E:System.Windows.Shell.JumpList.JumpItemsRejected">
      <summary>Windows シェルによってジャンプ リスト項目がジャンプ リストに正常に追加されない場合に発生します。</summary>
    </member>
    <member name="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser">
      <summary>以前からジャンプ リストにあったジャンプ項目がユーザーによってリストから削除された場合に発生します。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
      <summary>アプリケーションに関連付けられている <see cref="T:System.Windows.Shell.JumpList" /> オブジェクトを設定します。</summary>
      <param name="application">
        <see cref="T:System.Windows.Shell.JumpList" /> に関連付けられているアプリケーション。</param>
      <param name="value">アプリケーションに関連付ける <see cref="T:System.Windows.Shell.JumpList" />。</param>
    </member>
    <member name="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
      <summary>頻繁に使用される項目をジャンプ リストに表示するかどうかを示す値を取得または設定します。</summary>
      <returns>頻繁に使用される項目をジャンプ リストに表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpList.ShowRecentCategory">
      <summary>最近使用された項目をジャンプ リストに表示するかどうかを示す値を取得または設定します。</summary>
      <returns>最近使用された値をジャンプ リストに表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpPath">
      <summary>Windows 7 タスク バーのジャンプ リストに表示されるファイルへのリンクを表します。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpPath.#ctor">
      <summary>
        <see cref="T:System.Windows.Shell.JumpPath" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shell.JumpPath.Path">
      <summary>ジャンプ リストに含めるファイルへのパスを取得または設定します。</summary>
      <returns>ジャンプ リストに含めるファイルへのパス。</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpTask">
      <summary>Windows 7 タスク バーのジャンプ リストにアプリケーションへのショートカットを表します。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpTask.#ctor">
      <summary>
        <see cref="T:System.Windows.Shell.JumpTask" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.ApplicationPath">
      <summary>アプリケーションへのパスを取得または設定します。</summary>
      <returns>アプリケーションへのパス。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Arguments">
      <summary>起動時にアプリケーションに渡される引数を取得または設定します。</summary>
      <returns>起動時にアプリケーションに渡される引数。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Description">
      <summary>ジャンプ リストのタスクのツールヒントに表示されるテキストを取得または設定します。</summary>
      <returns>タスクのツールヒントに表示されるテキスト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.IconResourceIndex">
      <summary>リソースに埋め込まれたアイコンの 0 から始まるインデックスを取得または設定します。</summary>
      <returns>0 から始まるアイコンのインデックス。アイコンが使用されていない場合は -1 となります。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.IconResourcePath">
      <summary>ジャンプ リストに表示されるアイコンを含むリソースへのパスを取得または設定します。</summary>
      <returns>アイコンを含むリソースへのパス。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Title">
      <summary>ジャンプ リストのタスクに表示されるテキストを取得または設定します。</summary>
      <returns>ジャンプ リストのタスクに表示されるテキスト。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.WorkingDirectory">
      <summary>起動時にアプリケーションの作業ディレクトリを取得または設定します。</summary>
      <returns>起動時にアプリケーションの作業ディレクトリ。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="T:System.Windows.Shell.NonClientFrameEdges">
      <summary>ウィンドウ枠のどの縁がクライアントによって所有されないかを示す定数を指定します。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Bottom">
      <summary>下端は、クライアントによって所有されていません (値 = 8)。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Left">
      <summary>左端はクライアントによって所有されていません (値 = 1)。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.None">
      <summary>すべてのエッジは、クライアント (値 = 0) によって所有されます。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Right">
      <summary>右端は、クライアントによって所有されていません (値 = 4)。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Top">
      <summary>上端は、クライアントによって所有されていません (値 = 2)。</summary>
    </member>
    <member name="T:System.Windows.Shell.ResizeGripDirection">
      <summary>入力要素のサイズ変更グリップ動作の方向を示す定数を指定します。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Bottom">
      <summary>ウィンドウは下端からサイズが変更されます。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.BottomLeft">
      <summary>ウィンドウは左下隅からサイズが変更されます。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.BottomRight">
      <summary>ウィンドウは右下隅からサイズが変更されます。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Left">
      <summary>ウィンドウは左端からサイズが変更されます。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.None">
      <summary>サイズ変更動作は指定されていません。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Right">
      <summary>ウィンドウは右端からサイズが変更されます。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Top">
      <summary>ウィンドウは上端からサイズが変更されます。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.TopLeft">
      <summary>ウィンドウは左上隅からサイズが変更されます。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.TopRight">
      <summary>ウィンドウは右上隅からサイズが変更されます。</summary>
    </member>
    <member name="T:System.Windows.Shell.TaskbarItemInfo">
      <summary>タスク バーのサムネイルを表示する方法に関する情報を表します。</summary>
    </member>
    <member name="M:System.Windows.Shell.TaskbarItemInfo.#ctor">
      <summary>
        <see cref="T:System.Windows.Shell.TaskbarItemInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.Description">
      <summary>タスク バー項目のツールヒントのテキストを取得または設定します。</summary>
      <returns>タスク バー項目のツールヒントのテキスト。 既定値は空の文字列です。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.DescriptionProperty">
      <summary>
        <see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.Overlay">
      <summary>タスク バー ボタンのプログラム アイコン上に表示されるイメージを取得または設定します。</summary>
      <returns>タスク バー ボタンのプログラム アイコン上に表示されるイメージ。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.OverlayProperty">
      <summary>
        <see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ProgressState">
      <summary>プログレス インジケーターをタスク バー ボタンにどのように表示するかを示す値を取得または設定します。</summary>
      <returns>プログレス インジケーターをタスク バー ボタンにどのように表示するかを示す列挙値。 既定値は、<see cref="F:System.Windows.Shell.TaskbarItemProgressState.None" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty">
      <summary>
        <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue">
      <summary>タスク バー ボタンでプログレス インジケーターの完了状態を示す値を取得または設定します。</summary>
      <returns>タスク バー ボタンでプログレス インジケーターの完了状態を示す値。 既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty">
      <summary>
        <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos">
      <summary>
        <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> に関連付けられている <see cref="T:System.Windows.Window" /> オブジェクトのコレクションを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> に関連付けられた <see cref="T:System.Windows.Window" /> オブジェクトのコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty">
      <summary>
        <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin">
      <summary>タスク バー サムネイルに表示されるアプリケーション ウィンドウのクライアント領域の一部を指定する値を取得または設定します。</summary>
      <returns>タスク バー サムネイルに表示されるアプリケーション ウィンドウのクライアント領域の一部を指定する値。 既定値は空の <see cref="T:System.Windows.Thickness" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty">
      <summary>
        <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Shell.TaskbarItemProgressState">
      <summary>Windows タスク バーのプログレス インジケーターの状態を指定します。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Error">
      <summary>タスク バー ボタンに表示される赤のプログレス インジケーター。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Indeterminate">
      <summary>タスク バー ボタンに表示される点滅する緑のプログレス インジケーター。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.None">
      <summary>タスク バー ボタンにプログレス インジケーターが表示されません。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Normal">
      <summary>タスク バー ボタンに緑のプログレス インジケーターが表示されます。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Paused">
      <summary>タスク バー ボタンに黄色のプログレス インジケーターが表示されます。</summary>
    </member>
    <member name="T:System.Windows.Shell.ThumbButtonInfo">
      <summary>Windows 7 タスク バーのサムネイルにボタンを表示する方法に関する情報を表します。</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfo.#ctor">
      <summary>
        <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Shell.ThumbButtonInfo.Click">
      <summary>サムネイル ボタンがクリックされたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Command">
      <summary>このサムネイル ボタンがクリックされたときに呼び出すコマンドを取得または設定します。</summary>
      <returns>このサムネイル ボタンがクリックされたときに呼び出すコマンド。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter">
      <summary>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> プロパティに渡すパラメーターを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> プロパティに渡すパラメーター。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandParameterProperty">
      <summary>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandProperty">
      <summary>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget">
      <summary>指定したコマンドの発生元の要素を取得または設定します。</summary>
      <returns>指定したコマンドが実行される要素。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandTargetProperty">
      <summary>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Description">
      <summary>サムネイル ボタンのツールヒントに表示するテキストを取得または設定します。</summary>
      <returns>サムネイル ボタンのツールヒントに表示するテキスト。 既定値は空の文字列です。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.DescriptionProperty">
      <summary>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.Description" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked">
      <summary>サムネイル ボタンがクリックされたときにタスク バーのサムネイルを閉じるかどうかを示す値を取得または設定します。</summary>
      <returns>サムネイルを閉じる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.DismissWhenClickedProperty">
      <summary>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.ImageSource">
      <summary>サムネイル ボタンに表示されるイメージを取得または設定します。</summary>
      <returns>サムネイル ボタンに表示されるイメージ。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.ImageSourceProperty">
      <summary>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible">
      <summary>サムネイル ボタンの境界線を表示して強調表示するかどうかを示す値を取得または設定します。</summary>
      <returns>サムネイル ボタンの境界線を表示して強調表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisibleProperty">
      <summary>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled">
      <summary>サムネイル ボタンが有効になっているかどうかを示す値を取得または設定します。</summary>
      <returns>サムネイル ボタンが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive">
      <summary>ユーザーがサムネイル ボタンを対話的に操作できるかどうかを示す値を取得または設定します。</summary>
      <returns>ユーザーがサムネイル ボタンを対話的に操作できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsInteractiveProperty">
      <summary>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Visibility">
      <summary>サムネイル ボタンの表示状態を指定する値を取得または設定します。</summary>
      <returns>サムネイル ボタンの表示状態を指定する列挙値。 既定値は、<see cref="F:System.Windows.Visibility.Visible" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.VisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.Visibility" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Shell.ThumbButtonInfoCollection">
      <summary>
        <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> に関連付けられた <see cref="T:System.Windows.Window" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfoCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Shell.ThumbButtonInfoCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfoCollection.CreateInstanceCore">
      <summary>コレクションの新しいインスタンスを作成します。</summary>
      <returns>コレクションの新しいインスタンス。</returns>
    </member>
    <member name="T:System.Windows.Shell.WindowChrome">
      <summary>ウィンドウの非クライアント領域へのカスタマイズ設定を説明するオブジェクトを表します。</summary>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.#ctor">
      <summary>
        <see cref="T:System.Windows.Shell.WindowChrome" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.CaptionHeight">
      <summary>ウィンドウ上部のキャプション領域の高さを取得または設定します。</summary>
      <returns>キャプション領域の高さ。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.CaptionHeightProperty">
      <summary>
        <see cref="P:System.Windows.Shell.WindowChrome.CaptionHeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.CornerRadius">
      <summary>ウィンドウの角を丸める量を示す値を取得または設定します。</summary>
      <returns>角の丸みの量を示す値。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.CornerRadiusProperty">
      <summary>
        <see cref="P:System.Windows.Shell.WindowChrome.CornerRadius" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.CreateInstanceCore">
      <summary>
        <see cref="T:System.Windows.Shell.WindowChrome" /> クラスの新しいインスタンスを作成します。</summary>
      <returns>このクラスの新しいインスタンス。</returns>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(System.Windows.IInputElement)">
      <summary>指定した入力要素から <see cref="System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 添付プロパティの値を取得します。</summary>
      <param name="inputElement">プロパティ値の読み取り元の入力要素。</param>
      <returns>
        <see cref="System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 添付プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> は <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.GetResizeGripDirection(System.Windows.IInputElement)">
      <summary>指定した入力要素から <see cref="System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 添付プロパティの値を取得します。</summary>
      <param name="inputElement">プロパティ値の読み取り元の入力要素。</param>
      <returns>
        <see cref="System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 添付プロパティの値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.GetWindowChrome(System.Windows.Window)">
      <summary>指定された <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> から <see cref="T:System.Windows.Window" /> 添付プロパティの値を取得します。</summary>
      <param name="window">プロパティ値の読み取り元の <see cref="T:System.Windows.Window" />。</param>
      <returns>指定された <see cref="T:System.Windows.Shell.WindowChrome" /> にアタッチされている <see cref="T:System.Windows.Window" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="window" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness">
      <summary>-1 の均一な厚みを取得します。</summary>
      <returns>常に -1 の均一な厚み。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.GlassFrameThickness">
      <summary>ウィンドウの周囲のグラス境界線の幅を示す値を取得または設定します。</summary>
      <returns>ウィンドウの周りのグラス境界線の幅。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty">
      <summary>
        <see cref="P:System.Windows.Shell.WindowChrome.GlassFrameThickness" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty">
      <summary>
        <see cref="System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.NonClientFrameEdges">
      <summary>ウィンドウ フレームのどの外枠がクライアントによって所有されないかを示す値を取得または設定します。</summary>
      <returns>フレームのどの外枠がクライアントによって所有されないかを指定する列挙値のビットごとの組み合わせ。
登録済みの既定値は <see cref="F:System.Windows.Shell.NonClientFrameEdges.None" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
      <exception cref="T:System.ArgumentException">"Left"、"Right"、"Top"、"Bottom" は、有効な値ではありません。 少なくとも 1 つのエッジがクライアントに属している必要があります。</exception>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty">
      <summary>
        <see cref="P:System.Windows.Shell.WindowChrome.NonClientFrameEdges" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.ResizeBorderThickness">
      <summary>ウィンドウのサイズ変更に使用する境界線の幅を示す値を取得または設定します。</summary>
      <returns>ウィンドウのサイズ変更に使用する境界線の幅。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty">
      <summary>
        <see cref="P:System.Windows.Shell.WindowChrome.ResizeBorderThickness" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty">
      <summary>
        <see cref="System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(System.Windows.IInputElement,System.Boolean)">
      <summary>指定された入力要素の <see cref="System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 添付プロパティの値を設定します。</summary>
      <param name="inputElement">
        <see cref="System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 添付プロパティを設定する要素。</param>
      <param name="hitTestVisible">設定するプロパティ値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.SetResizeGripDirection(System.Windows.IInputElement,System.Windows.Shell.ResizeGripDirection)">
      <summary>指定された入力要素の <see cref="System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 添付プロパティの値を設定します。</summary>
      <param name="inputElement">
        <see cref="System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 添付プロパティを設定する要素。</param>
      <param name="direction">設定するプロパティ値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.SetWindowChrome(System.Windows.Window,System.Windows.Shell.WindowChrome)">
      <summary>指定した <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> の <see cref="T:System.Windows.Window" /> 添付プロパティの値を設定します。</summary>
      <param name="window">
        <see cref="T:System.Windows.Window" /> 添付プロパティの設定先の <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" />。</param>
      <param name="chrome">設定する <see cref="T:System.Windows.Shell.WindowChrome" /> のインスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="window" /> は <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons">
      <summary>Windows Aero のキャプション ボタンでヒット テストが有効になっているかどうかを示す値を取得または設定します。</summary>
      <returns>ヒット テストがキャプション ボタンで有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 登録済みの既定値は <see langword="true" /> です。 この値に影響する可能性があるものの詳細については、「 依存関係プロパティ値の優先順位」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty">
      <summary>
        <see cref="P:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.WindowChrome">
      <summary>ウィンドウにアタッチされた <see cref="T:System.Windows.Shell.WindowChrome" /> のインスタンスを取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.WindowChromeProperty">
      <summary>
        <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.ShutdownMode">
      <summary>アプリケーションのシャットダウン方法を指定します。 <see cref="P:System.Windows.Application.ShutdownMode" /> プロパティで使用します。</summary>
    </member>
    <member name="F:System.Windows.ShutdownMode.OnExplicitShutdown">
      <summary>アプリケーションは、<see cref="M:System.Windows.Application.Shutdown" /> が呼び出されたときにのみシャットダウンします。</summary>
    </member>
    <member name="F:System.Windows.ShutdownMode.OnLastWindowClose">
      <summary>アプリケーションは、最後のウィンドウが閉じるか、または <see cref="M:System.Windows.Application.Shutdown" /> が呼び出されたときにシャットダウンします。</summary>
    </member>
    <member name="F:System.Windows.ShutdownMode.OnMainWindowClose">
      <summary>アプリケーションは、メイン ウィンドウが閉じるか、または <see cref="M:System.Windows.Application.Shutdown" /> が呼び出されたときにシャットダウンします。</summary>
    </member>
    <member name="T:System.Windows.SizeChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> イベントに関連するデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.HeightChanged">
      <summary>サイズの <see cref="P:System.Windows.FrameworkElement.Height" /> コンポーネントが変更されたかどうかを示す値を取得します。</summary>
      <returns>サイズの <see cref="P:System.Windows.FrameworkElement.Height" /> コンポーネントが変更された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.SizeChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>型固有の方法でイベント ハンドラーを呼び出します。これにより、イベント システムの効率を高めることができます。</summary>
      <param name="genericHandler">型固有の方法で呼び出しを行うジェネリック ハンドラー。</param>
      <param name="genericTarget">ハンドラーを呼び出す対象。</param>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.NewSize">
      <summary>オブジェクトの新しい <see cref="T:System.Windows.Size" /> を取得します。</summary>
      <returns>オブジェクトの新しい <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.PreviousSize">
      <summary>オブジェクトの前の <see cref="T:System.Windows.Size" /> を取得します。</summary>
      <returns>オブジェクトの前の <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.WidthChanged">
      <summary>サイズの <see cref="P:System.Windows.FrameworkElement.Width" /> コンポーネントが変更されたかどうかを示す値を取得します。</summary>
      <returns>サイズの <see cref="P:System.Windows.FrameworkElement.Width" /> コンポーネントが変更された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.SizeChangedEventHandler">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.StartupEventArgs">
      <summary>
        <see cref="E:System.Windows.Application.Startup" /> イベントの引数を含みます。</summary>
    </member>
    <member name="P:System.Windows.StartupEventArgs.Args">
      <summary>コマンド プロンプトまたはデスクトップのいずれかからアプリケーションに渡されたコマンド ライン引数を取得します。</summary>
      <returns>コマンド プロンプトまたはデスクトップのいずれかからアプリケーションに渡されたコマンド ライン引数を格納する文字列配列。 コマンド ライン引数が渡されなかった場合は、項目を含まない文字列配列。</returns>
    </member>
    <member name="T:System.Windows.StartupEventHandler">
      <summary>
        <see cref="E:System.Windows.Application.Startup" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.StaticResourceExtension">
      <summary>XAML から作成された静的 (XAML 読み込み時) リソース参照をサポートするマークアップ拡張機能を実装します。</summary>
    </member>
    <member name="M:System.Windows.StaticResourceExtension.#ctor">
      <summary>
        <see cref="T:System.Windows.StaticResourceExtension" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.StaticResourceExtension.#ctor(System.Object)">
      <summary>指定した初期キーを使用して、<see cref="T:System.Windows.StaticResourceExtension" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="resourceKey">このマークアップ拡張機能が参照するリソースのキー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceKey" /> パラメーターは、マークアップ拡張機能の使用または明示的な構築のどちらを通じてでも、<see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.StaticResourceExtension.ProvideValue(System.IServiceProvider)">
      <summary>この拡張機能を適用するプロパティで設定するオブジェクトを返します。 <see cref="T:System.Windows.StaticResourceExtension" /> の場合、これは、<see cref="P:System.Windows.StaticResourceExtension.ResourceKey" /> で識別される、リソース ディクショナリで見つかったオブジェクトになります。</summary>
      <param name="serviceProvider">マークアップ拡張機能のサービスを提供できるオブジェクト。</param>
      <returns>マークアップ拡張機能によって提供される値が評価されるプロパティで設定するオブジェクトの値。</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="serviceProvider" /> は <see langword="null" /> であったか、必要なサービスを実装できませんでした。</exception>
    </member>
    <member name="P:System.Windows.StaticResourceExtension.ResourceKey">
      <summary>この静的リソース参照によって渡されるキー値を取得または設定します。 このキーは、リソース ディクショナリ内でそのキーに一致するオブジェクトを返すために使用されます。</summary>
      <returns>リソースのリソース キー。</returns>
      <exception cref="T:System.ArgumentNullException">マークアップ拡張機能の使用または明示的な構築のどちらを通じてでも、値を <see langword="null" /> として指定します。</exception>
    </member>
    <member name="T:System.Windows.Style">
      <summary>型のインスタンスの間でプロパティ、リソース、およびイベント ハンドラーを共有できるようにします。</summary>
    </member>
    <member name="M:System.Windows.Style.#ctor">
      <summary>
        <see cref="T:System.Windows.Style" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Style.#ctor(System.Type)">
      <summary>指定した <see cref="T:System.Windows.Style" /> で使用する <see cref="T:System.Type" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="targetType">スタイルの適用対象の型。</param>
    </member>
    <member name="M:System.Windows.Style.#ctor(System.Type,System.Windows.Style)">
      <summary>指定した <see cref="T:System.Windows.Style" /> で使用する、指定した <see cref="T:System.Type" /> に基づいた <see cref="T:System.Windows.Style" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="targetType">スタイルの適用対象の型。</param>
      <param name="basedOn">このスタイルの基になるスタイル。</param>
    </member>
    <member name="P:System.Windows.Style.BasedOn">
      <summary>現在のスタイルの基になる定義済みのスタイルを取得または設定します。</summary>
      <returns>現在のスタイルの基になる定義済みのスタイル。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Windows.Style.GetHashCode">
      <summary>この <see cref="T:System.Windows.Style" /> のハッシュ コードを返します。</summary>
      <returns>この <see cref="T:System.Windows.Style" /> のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Style.IsSealed">
      <summary>スタイルが読み取り専用で変更できないかどうかを示す値を取得します。</summary>
      <returns>スタイルがシールされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Style.RegisterName(System.String,System.Object)">
      <summary>現在の名前スコープに新しい名前とオブジェクトのペアを登録します。</summary>
      <param name="name">登録する名前。</param>
      <param name="scopedElement">指定した <paramref name="name" /> に対応付けるオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Style.Resources">
      <summary>このスタイルのスコープ内で使用できるリソースのコレクションを取得または設定します。</summary>
      <returns>このスタイルのスコープ内で使用できるリソース。</returns>
    </member>
    <member name="M:System.Windows.Style.Seal">
      <summary>このスタイルとすべてのファクトリおよびトリガーを変更できないようにロックします。</summary>
    </member>
    <member name="P:System.Windows.Style.Setters">
      <summary>
        <see cref="T:System.Windows.Setter" /> オブジェクトと <see cref="T:System.Windows.EventSetter" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Setter" /> オブジェクトと <see cref="T:System.Windows.EventSetter" /> オブジェクトのコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)">
      <summary>指定された識別名を持つオブジェクトを返します。</summary>
      <param name="name">要求されているオブジェクトの名前識別子。</param>
      <returns>見つかった場合はオブジェクト。 その名前のオブジェクトが見つからなかった場合は <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>指定されたアンビエント プロパティを現在のスコープで使用できるかどうかを照会します。</summary>
      <param name="propertyName">要求されたアンビエント プロパティの名前。</param>
      <returns>要求されたアンビエント プロパティを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Style.TargetType">
      <summary>このスタイルの対象となる型を取得または設定します。</summary>
      <returns>このスタイルの対象の型。</returns>
    </member>
    <member name="P:System.Windows.Style.Triggers">
      <summary>指定した条件に基づいてプロパティ値を適用する、<see cref="T:System.Windows.TriggerBase" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.TriggerBase" /> オブジェクトのコレクション。 既定値は空のコレクションです。</returns>
    </member>
    <member name="M:System.Windows.Style.UnregisterName(System.String)">
      <summary>名前スコープから名前オブジェクトのマッピングを削除します。</summary>
      <param name="name">削除するマッピングの名前。</param>
    </member>
    <member name="T:System.Windows.StyleTypedPropertyAttribute">
      <summary>クラス定義に適用される属性を表し、<see cref="P:System.Windows.Style.TargetType" /> 型のプロパティの <see cref="T:System.Windows.Style" /> を決定します。</summary>
    </member>
    <member name="M:System.Windows.StyleTypedPropertyAttribute.#ctor">
      <summary>
        <see cref="T:System.Windows.StyleTypedPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.Property">
      <summary>
        <see cref="T:System.Windows.Style" /> 型のプロパティの名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Style" /> 型のプロパティの名前。</returns>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.StyleTargetType">
      <summary>この属性が指定している <see cref="P:System.Windows.Style.TargetType" /> の <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property" /> を取得または設定します。</summary>
      <returns>この属性が指定している <see cref="P:System.Windows.Style.TargetType" /> の <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property" />。</returns>
    </member>
    <member name="T:System.Windows.SystemColors">
      <summary>システムの表示要素に対応したシステム カラー、システム ブラシ、およびシステム リソース キーを含みます。</summary>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderBrush">
      <summary>アクティブなウィンドウの境界線の色である <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> がアクティブなウィンドウの境界線の色に設定された <see cref="T:System.Windows.Media.SolidColorBrush" />。 この返されたブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true" /> であるため、これは変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderBrushKey">
      <summary>アクティブなウィンドウの境界線の描画に使用する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブなウィンドウの境界線の描画に使用する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderColor">
      <summary>アクティブなウィンドウの境界線の色である <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アクティブなウィンドウの境界線の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderColorKey">
      <summary>アクティブなウィンドウの境界線の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>アクティブなウィンドウの境界線の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionBrush">
      <summary>アクティブなウィンドウのタイトル バーの背景の色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーの背景色に設定された <see cref="T:System.Windows.Media.SolidColorBrush" /> を持つ <see cref="P:System.Windows.Media.SolidColorBrush.Color" />。 この返されたブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true" /> であるため、これは変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionBrushKey">
      <summary>アクティブなウィンドウのタイトル バーの背景の描画に使用する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーの背景の描画に使用する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionColor">
      <summary>アクティブなウィンドウのタイトル バーの背景色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionColorKey">
      <summary>アクティブなウィンドウのタイトル バーの背景の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーの背景の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextBrush">
      <summary>アクティブなウィンドウのタイトル バーのテキストの色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーのテキストの背景色に設定された <see cref="T:System.Windows.Media.SolidColorBrush" /> を持つ <see cref="P:System.Windows.Media.SolidColorBrush.Color" />。 この返されたブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true" /> であるため、これは変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextBrushKey">
      <summary>アクティブなウィンドウのタイトル バーのテキストを描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> の <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーのテキストを描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextColor">
      <summary>アクティブなウィンドウのタイトル バーのテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextColorKey">
      <summary>アクティブなウィンドウのタイトル バーのテキストの <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーのテキストの <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceBrush">
      <summary>アプリケーション作業領域の色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アプリケーション作業領域の色に設定された <see cref="T:System.Windows.Media.SolidColorBrush" /> を持つ <see cref="P:System.Windows.Media.SolidColorBrush.Color" />。 この返されたブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true" /> であるため、これは変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceBrushKey">
      <summary>アプリケーション作業領域を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アプリケーション作業領域を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceColor">
      <summary>アプリケーション ワークスペースの色である <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アプリケーション ワークスペースの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceColorKey">
      <summary>アプリケーション作業領域の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>アプリケーション作業領域の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlBrush">
      <summary>3D 表示要素の表面の色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>3D 表示要素の表面の色に設定された <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> を持つ <see cref="T:System.Windows.Media.SolidColorBrush" />。 この返されたブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true" /> であるため、これは変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlBrushKey">
      <summary>3 次元表示要素の表面を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> の <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>3 次元表示要素の表面を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlColor">
      <summary>3 次元表示要素の表面の色である <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>3 次元表示要素の表面の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlColorKey">
      <summary>3 次元表示要素の表面の <see cref="T:System.Windows.Media.Color" /> の <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>3 次元表示要素の表面の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkBrush">
      <summary>3D 表示要素の影の色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>3D 表示要素の影の色に設定された <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> を持つ <see cref="T:System.Windows.Media.SolidColorBrush" />。 この返されたブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true" /> であるため、これは変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkBrushKey">
      <summary>3 次元表示要素の影を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>3 次元表示要素の影を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkColor">
      <summary>3 次元表示要素の影の色である <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>3 次元表示要素の影の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkColorKey">
      <summary>3 次元表示要素の影の <see cref="T:System.Windows.Media.Color" /> の <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>3 次元表示要素の影の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkBrush">
      <summary>3 次元表示要素の暗いシャドウの色である <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> が 3 次元表示要素の暗いシャドウの色に設定された <see cref="T:System.Windows.Media.SolidColorBrush" />。 この返されたブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true" /> であるため、これは変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkBrushKey">
      <summary>3 次元表示要素の暗い影を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> の <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>3 次元表示要素の暗い影を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkColor">
      <summary>3 次元表示要素の暗い影の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>3 次元表示要素の暗い影の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkColorKey">
      <summary>3D 表示要素の強調表示色の暗い影 <see cref="T:System.Windows.Media.Color" /> の <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>3D 表示要素の暗い影 <see cref="T:System.Windows.Media.Color" /> のリソース キーを取得します。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightBrush">
      <summary>3 次元の表示要素のライト色である <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>3 次元の表示要素のライト色に設定される <see cref="T:System.Windows.Media.SolidColorBrush" /> とその <see cref="P:System.Windows.Media.SolidColorBrush.Color" />。 この返されたブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true" /> であるため、これは変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightBrushKey">
      <summary>3 次元表示要素の明るい領域を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>3 次元表示要素の明るい領域を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightColor">
      <summary>3 次元表示要素の明るい色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>3 次元表示要素の明るい色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightColorKey">
      <summary>3D 表示要素の強調表示 <see cref="T:System.Windows.Media.Color" /> の <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>3D 表示要素の強調表示 <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightBrush">
      <summary>3 次元表示要素の強調表示の色である <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>3 次元表示要素の強調表示の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightBrushKey">
      <summary>3 次元表示要素の強調表示を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>3 次元表示要素の強調表示を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightColor">
      <summary>3 次元表示要素の強調表示色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>3 次元表示要素の強調表示の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightColorKey">
      <summary>3D 表示要素の強調表示 <see cref="T:System.Windows.Media.Color" /> の <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>3D 表示要素の強調表示 <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextBrush">
      <summary>3 次元表示要素のテキストの色である <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>3 次元表示要素のテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextBrushKey">
      <summary>3 次元表示要素内のテキストを描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> の <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>3 次元表示要素内のテキストを描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextColor">
      <summary>3 次元表示要素のテキストの色である <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>3 次元表示要素のテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextColorKey">
      <summary>3 次元表示要素のテキストの <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>3 次元表示要素のテキストの <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopBrush">
      <summary>デスクトップの色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>デスクトップの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopBrushKey">
      <summary>デスクトップを描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>デスクトップを描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopColor">
      <summary>デスクトップの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>デスクトップの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopColorKey">
      <summary>デスクトップの <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>デスクトップの <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionBrush">
      <summary>アクティブなウィンドウのタイトル バーのグラデーションの右側の色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>グラデーションの右側の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionBrushKey">
      <summary>アクティブなウィンドウのタイトル バーのグラデーションの右側の色を表す <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーのグラデーションの右側の色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionColor">
      <summary>アクティブなウィンドウのタイトル バーのグラデーションの右側の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>グラデーションの右側の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionColorKey">
      <summary>アクティブなウィンドウのタイトル バーのグラデーションの右側の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーのグラデーションの右側の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionBrush">
      <summary>アクティブでないウィンドウのタイトル バーのグラデーションの右側の色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>グラデーションの右側の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionBrushKey">
      <summary>アクティブでないウィンドウのタイトル バーのグラデーションの右側の色を表す <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーの背景の描画に使用する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionColor">
      <summary>アクティブでないウィンドウのタイトル バーのグラデーションの右側の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>グラデーションの右側の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionColorKey">
      <summary>アクティブでないウィンドウのタイトル バーのグラデーションの右側の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーのグラデーションの右側の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextBrush">
      <summary>無効なテキストの色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>無効なテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextBrushKey">
      <summary>無効なテキストを描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>無効なテキストを描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextColor">
      <summary>無効なテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>無効なテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextColorKey">
      <summary>無効なテキストの <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>無効なテキストの <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightBrush">
      <summary>選択した項目の背景を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>選択した項目の背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightBrushKey">
      <summary>選択した項目の背景を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>選択した項目の背景を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightColor">
      <summary>選択した項目の背景色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>選択した項目の背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightColorKey">
      <summary>選択した項目の背景 <see cref="T:System.Windows.Media.Color" /> の <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>選択した項目の背景 <see cref="T:System.Windows.Media.Color" /> のリソースキー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextBrush">
      <summary>選択した項目のテキストの色である <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>選択した項目のテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextBrushKey">
      <summary>選択した項目のテキストを描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>選択した項目のテキストを描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextColor">
      <summary>選択した項目のテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>選択した項目のテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextColorKey">
      <summary>選択した項目のテキストの <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>選択した項目のテキストの <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackBrush">
      <summary>ホット トラッキング項目の指定に使用する色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>ホット トラッキング項目の指定に使用する色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackBrushKey">
      <summary>ホット トラッキング項目を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>ホット トラッキング項目を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackColor">
      <summary>ホット トラッキング項目の指定に使用する色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>ホット トラッキング項目の指定に使用する色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackColorKey">
      <summary>ホット トラッキング項目を指定する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>ホット トラッキング項目を指定する <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderBrush">
      <summary>アクティブでないウィンドウの境界線の色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブでないウィンドウの境界線の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderBrushKey">
      <summary>アクティブでないウィンドウの境界線を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブでないウィンドウの境界線を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderColor">
      <summary>アクティブでないウィンドウの境界線の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アクティブでないウィンドウの境界線の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderColorKey">
      <summary>アクティブでないウィンドウの境界線の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>アクティブでないウィンドウの境界線の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionBrush">
      <summary>アクティブでないウィンドウのタイトル バーの背景色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionBrushKey">
      <summary>アクティブでないウィンドウのタイトル バーの背景を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーの背景を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionColor">
      <summary>アクティブでないウィンドウのタイトル バーの背景色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionColorKey">
      <summary>アクティブでないウィンドウのタイトル バーの背景の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーの背景の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextBrush">
      <summary>アクティブでないウィンドウのタイトル バーのテキストの色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーのテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextBrushKey">
      <summary>アクティブでないウィンドウのタイトル バーのテキストを描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーのテキストを描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextColor">
      <summary>アクティブでないウィンドウのタイトル バーのテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーのテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextColorKey">
      <summary>アクティブでないウィンドウのタイトル バーのテキストの <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーのテキストの <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush">
      <summary>アクティブでない選択した項目の強調表示に使用する色である <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブでない選択した項目を強調表示にするために使用する色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightBrushKey">
      <summary>アクティブでない選択した項目の背景を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブでない選択した項目の背景を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" />。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush">
      <summary>アクティブでない選択した項目のテキストである <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>アクティブでない選択された項目のテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrushKey">
      <summary>アクティブでない選択された項目のテキストを塗りつぶす <see cref="T:System.Windows.Media.SolidColorBrush" /> の <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>アクティブでない選択された項目のテキストを描画するの。 <see cref="T:System.Windows.Media.SolidColorBrush" /><see cref="T:System.Windows.ResourceKey" /> このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoBrush">
      <summary>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> コントロールの背景色を表す <see cref="T:System.Windows.Controls.ToolTip" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> コントロールの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoBrushKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> コントロールの背景を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> の <see cref="T:System.Windows.Controls.ToolTip" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> コントロールの背景を描画する <see cref="T:System.Windows.Controls.ToolTip" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoColor">
      <summary>
        <see cref="T:System.Windows.Media.Color" /> コントロールの背景色を表す <see cref="T:System.Windows.Controls.ToolTip" /> 構造体を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> コントロールの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoColorKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> コントロールの背景の <see cref="T:System.Windows.Media.Color" /> の <see cref="T:System.Windows.Controls.ToolTip" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Color" /> コントロールの背景の <see cref="T:System.Windows.Controls.ToolTip" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextBrush">
      <summary>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> コントロールのテキストの色を表す <see cref="T:System.Windows.Controls.ToolTip" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> コントロールのテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextBrushKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> コントロールのテキストを描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> の <see cref="T:System.Windows.Controls.ToolTip" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> コントロールのテキストを描画する <see cref="T:System.Windows.Controls.ToolTip" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextColor">
      <summary>
        <see cref="T:System.Windows.Media.Color" /> コントロールのテキストの色を表す <see cref="T:System.Windows.Controls.ToolTip" /> 構造体を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> コントロールのテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextColorKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> コントロールのテキストの <see cref="T:System.Windows.Media.Color" /> の <see cref="T:System.Windows.Controls.ToolTip" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Color" /> コントロールのテキストの <see cref="T:System.Windows.Controls.ToolTip" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarBrush">
      <summary>メニュー バーの背景色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>メニュー バーの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarBrushKey">
      <summary>メニュー バーの背景を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>メニュー バーの背景を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarColor">
      <summary>メニュー バーの背景色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>メニュー バーの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarColorKey">
      <summary>メニュー バーの背景の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>メニュー バーの背景の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBrush">
      <summary>メニューの背景の色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>メニューの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBrushKey">
      <summary>メニューの背景を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>メニューの背景を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuColor">
      <summary>メニューの背景の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>メニューの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuColorKey">
      <summary>メニューの背景の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>メニューの背景の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightBrush">
      <summary>メニュー項目の強調表示に使用する色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>メニュー項目の強調表示に使用する色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightBrushKey">
      <summary>強調表示されたメニュー項目を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>強調表示されたメニュー項目を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightColor">
      <summary>メニュー項目の強調表示に使用する色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>メニュー項目の強調表示に使用する色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightColorKey">
      <summary>強調表示されたメニュー項目の背景の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>強調表示されたメニュー項目の背景の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextBrush">
      <summary>メニューのテキストの色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>メニューのテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextBrushKey">
      <summary>メニューのテキストを描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>メニューのテキストを描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextColor">
      <summary>メニューのテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>メニューのテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextColorKey">
      <summary>メニューのテキストの <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>メニューのテキストの <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarBrush">
      <summary>スクロール バーの背景色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>スクロール バーの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarBrushKey">
      <summary>スクロール バーの背景を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>スクロール バーの背景を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarColor">
      <summary>スクロール バーの背景色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>スクロール バーの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarColorKey">
      <summary>スクロール バーの背景の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>スクロール バーの背景の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowBrush">
      <summary>ウィンドウのクライアント領域の背景色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>ウィンドウのクライアント領域の背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowBrushKey">
      <summary>ウィンドウのクライアント領域の背景を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>ウィンドウのクライアント領域の背景を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowColor">
      <summary>ウィンドウのクライアント領域の背景色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>ウィンドウのクライアント領域の背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowColorKey">
      <summary>ウィンドウのクライアント領域の背景の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>ウィンドウのクライアント領域の背景の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameBrush">
      <summary>ウィンドウの枠の色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>ウィンドウ枠の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameBrushKey">
      <summary>ウィンドウ枠を描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>ウィンドウ枠を描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameColor">
      <summary>ウィンドウの枠の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>ウィンドウ枠の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameColorKey">
      <summary>ウィンドウ枠の <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>ウィンドウ枠の <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextBrush">
      <summary>ウィンドウのクライアント領域のテキストの色を表す <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>ウィンドウのクライアント領域のテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextBrushKey">
      <summary>ウィンドウのクライアント領域のテキストを描画する <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.SolidColorBrush" /> を取得します。</summary>
      <returns>ウィンドウのクライアント領域のテキストを描画する <see cref="T:System.Windows.Media.SolidColorBrush" /> のリソース キー。 このブラシの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" /> であるため、変更できません。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextColor">
      <summary>ウィンドウのクライアント領域のテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>ウィンドウのクライアント領域のテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextColorKey">
      <summary>ウィンドウのクライアント領域のテキストの <see cref="T:System.Windows.ResourceKey" /> の <see cref="T:System.Windows.Media.Color" /> を取得します。</summary>
      <returns>ウィンドウのクライアント領域のテキストの <see cref="T:System.Windows.Media.Color" /> のリソース キー。</returns>
    </member>
    <member name="T:System.Windows.SystemCommands">
      <summary>ウィンドウ管理に共通のルーティング コマンドを定義します。</summary>
    </member>
    <member name="M:System.Windows.SystemCommands.CloseWindow(System.Windows.Window)">
      <summary>指定されたウィンドウを閉じます。</summary>
      <param name="window">閉じるウィンドウ。</param>
    </member>
    <member name="P:System.Windows.SystemCommands.CloseWindowCommand">
      <summary>ウィンドウを閉じるコマンドを取得します。</summary>
      <returns>ウィンドウを閉じるコマンド。</returns>
    </member>
    <member name="M:System.Windows.SystemCommands.MaximizeWindow(System.Windows.Window)">
      <summary>指定されたウィンドウを最大表示します。</summary>
      <param name="window">最大化するウィンドウ。</param>
    </member>
    <member name="P:System.Windows.SystemCommands.MaximizeWindowCommand">
      <summary>ウィンドウを最大化するコマンドを取得します。</summary>
      <returns>ウィンドウを最大化するコマンド。</returns>
    </member>
    <member name="M:System.Windows.SystemCommands.MinimizeWindow(System.Windows.Window)">
      <summary>指定されたウィンドウを最小表示します。</summary>
      <param name="window">最小化するウィンドウ。</param>
    </member>
    <member name="P:System.Windows.SystemCommands.MinimizeWindowCommand">
      <summary>ウィンドウを最大化するコマンドを取得します。</summary>
      <returns>ウィンドウを最大化するコマンド。</returns>
    </member>
    <member name="M:System.Windows.SystemCommands.RestoreWindow(System.Windows.Window)">
      <summary>指定されたウィンドウを復元します。</summary>
      <param name="window">元に戻すウィンドウ。</param>
    </member>
    <member name="P:System.Windows.SystemCommands.RestoreWindowCommand">
      <summary>ウィンドウを復元するコマンドを取得します。</summary>
      <returns>ウィンドウを復元するコマンド。</returns>
    </member>
    <member name="M:System.Windows.SystemCommands.ShowSystemMenu(System.Windows.Window,System.Windows.Point)">
      <summary>指定されたウィンドウのシステム メニューを表示します。</summary>
      <param name="window">システム メニューを表示するウィンドウ。</param>
      <param name="screenLocation">システム メニューの場所。</param>
    </member>
    <member name="P:System.Windows.SystemCommands.ShowSystemMenuCommand">
      <summary>システム メニューを表示するコマンドを取得します。</summary>
      <returns>システム メニューを表示するコマンド。</returns>
    </member>
    <member name="T:System.Windows.SystemFonts">
      <summary>フォントに関連するシステム リソースを公開するプロパティが含まれます。</summary>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontFamily">
      <summary>最小化されていないウィンドウの、非クライアント領域のキャプションのフォント ファミリを決定するメトリックを取得します。</summary>
      <returns>フォント ファミリ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontFamilyKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.CaptionFontFamily" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontSize">
      <summary>最小化されていないウィンドウの、非クライアント領域のキャプションのフォント サイズを決定するメトリックを取得します。</summary>
      <returns>フォント サイズ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontSizeKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.CaptionFontSize" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontStyle">
      <summary>最小化されていないウィンドウの、非クライアント領域のキャプションのフォント スタイルを決定するメトリックを取得します。</summary>
      <returns>フォント スタイル。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontStyleKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.CaptionFontStyle" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontTextDecorations">
      <summary>最小化されていないウィンドウの、非クライアント領域のキャプションの文字装飾を決定するメトリックを取得します。</summary>
      <returns>文字の装飾のコレクション。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontTextDecorationsKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.CaptionFontTextDecorations" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontWeight">
      <summary>最小化されていないウィンドウの、非クライアント領域のキャプションのフォントの太さを決定するメトリックを取得します。</summary>
      <returns>フォントの太さ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontWeightKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.CaptionFontWeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontFamily">
      <summary>現在のアイコンタイトル フォントの論理フォント情報からフォント ファミリを取得します。</summary>
      <returns>フォント ファミリ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontFamilyKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.IconFontFamily" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontSize">
      <summary>現在のアイコンタイトル フォントの論理フォント情報からフォント サイズを取得します。</summary>
      <returns>フォント サイズ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontSizeKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.IconFontSize" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontStyle">
      <summary>現在のアイコンタイトル フォントの論理フォント情報からフォント スタイルを取得します。</summary>
      <returns>フォント スタイル。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontStyleKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.IconFontStyle" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontTextDecorations">
      <summary>現在のアイコンタイトル フォントの論理フォント情報から文字装飾を取得します。</summary>
      <returns>文字の装飾のコレクション。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontTextDecorationsKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.IconFontTextDecorations" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontWeight">
      <summary>現在のアイコンタイトル フォントの論理フォント情報からフォントの太さを取得します。</summary>
      <returns>フォントの太さ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontWeightKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.IconFontWeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontFamily">
      <summary>メニュー テキストのフォント ファミリを決定するメトリックを取得します。</summary>
      <returns>フォント ファミリ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontFamilyKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.MenuFontFamily" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontSize">
      <summary>メニュー テキストのフォント サイズを決定するメトリックを取得します。</summary>
      <returns>フォント サイズ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontSizeKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.MenuFontSize" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontStyle">
      <summary>メニュー テキストのフォント スタイルを決定するメトリックを取得します。</summary>
      <returns>フォント スタイル。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontStyleKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.MenuFontStyle" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontTextDecorations">
      <summary>メニュー テキストの文字装飾を決定するメトリックを取得します。</summary>
      <returns>文字の装飾のコレクション。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontTextDecorationsKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.MenuFontTextDecorations" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontWeight">
      <summary>メニュー テキストのフォントの太さを決定するメトリックを取得します。</summary>
      <returns>フォントの太さ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontWeightKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.MenuFontWeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontFamily">
      <summary>メッセージ ボックスのテキストのフォント ファミリを決定するメトリックを取得します。</summary>
      <returns>フォント ファミリ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontFamilyKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontSize">
      <summary>メッセージ ボックスのテキストのフォント サイズを決定するメトリックを取得します。</summary>
      <returns>フォント サイズ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontSizeKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontStyle">
      <summary>メッセージ ボックスのテキストのフォント スタイルを決定するメトリックを取得します。</summary>
      <returns>フォント スタイル。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontStyleKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontTextDecorations">
      <summary>メッセージ ボックスのテキストの文字装飾を決定するメトリックを取得します。</summary>
      <returns>文字の装飾のコレクション。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontTextDecorationsKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.MessageFontTextDecorations" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontWeight">
      <summary>メッセージ ボックスのテキストのフォントの太さを決定するメトリックを取得します。</summary>
      <returns>フォントの太さ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontWeightKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontFamily">
      <summary>最小化されていないウィンドウの、非クライアント領域の小さいキャプション テキストのフォント ファミリを決定するメトリックを取得します。</summary>
      <returns>フォント ファミリ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontFamilyKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.SmallCaptionFontFamily" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontSize">
      <summary>最小化されていないウィンドウの、非クライアント領域の小さいキャプション テキストのフォント サイズを決定するメトリックを取得します。</summary>
      <returns>フォント サイズ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontSizeKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.SmallCaptionFontSize" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontStyle">
      <summary>最小化されていないウィンドウの、非クライアント領域の小さいキャプション テキストのフォント スタイルを決定するメトリックを取得します。</summary>
      <returns>フォント スタイル。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontStyleKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.SmallCaptionFontStyle" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorations">
      <summary>最小化されていないウィンドウの、非クライアント領域の小さいキャプション テキストの文字装飾を決定するメトリックを取得します。</summary>
      <returns>文字の装飾のコレクション。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorationsKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorations" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontWeight">
      <summary>最小化されていないウィンドウの、非クライアント領域の小さいキャプション テキストのフォントの太さを決定するメトリックを取得します。</summary>
      <returns>フォントの太さ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontWeightKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.SmallCaptionFontWeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontFamily">
      <summary>最小化されていないウィンドウの、非クライアント領域のステータス バーおよびツールヒントで使用されるテキストのフォント ファミリを決定するメトリックを取得します。</summary>
      <returns>フォント ファミリ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontFamilyKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.StatusFontFamily" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontSize">
      <summary>最小化されていないウィンドウの、非クライアント領域のステータス バーおよびツールヒントで使用されるテキストのフォント サイズを決定するメトリックを取得します。</summary>
      <returns>フォント サイズ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontSizeKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.StatusFontSize" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontStyle">
      <summary>最小化されていないウィンドウの、非クライアント領域のステータス バーおよびツールヒントで使用されるテキストのフォント スタイルを決定するメトリックを取得します。</summary>
      <returns>フォント スタイル。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontStyleKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.StatusFontStyle" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontTextDecorations">
      <summary>最小化されていないウィンドウの、非クライアント領域のステータス バーおよびツールヒントで使用されるテキストの文字装飾を決定するメトリックを取得します。</summary>
      <returns>文字の装飾のコレクション。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontTextDecorationsKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.StatusFontTextDecorations" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontWeight">
      <summary>最小化されていないウィンドウの、非クライアント領域のステータス バーおよびツールヒントで使用されるテキストのフォントの太さを決定するメトリックを取得します。</summary>
      <returns>フォントの太さ。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontWeightKey">
      <summary>
        <see cref="P:System.Windows.SystemFonts.StatusFontWeight" /> プロパティの <see cref="T:System.Windows.ResourceKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="T:System.Windows.SystemParameters">
      <summary>システム設定を照会するために使用できるプロパティが含まれます。</summary>
    </member>
    <member name="P:System.Windows.SystemParameters.Border">
      <summary>ウィンドウのサイズ変更境界の幅を決定する、境界の乗数係数を取得します。</summary>
      <returns>乗数。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.BorderKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.Border" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.BorderWidth">
      <summary>最小化されていないウィンドウの非クライアント領域の境界線幅を決定するメトリックを取得します。</summary>
      <returns>境界線の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.BorderWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.BorderWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionHeight">
      <summary>最小化されていないウィンドウの非クライアント領域のキャプションの高さを決定するメトリックを取得します。</summary>
      <returns>キャプションの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.CaptionHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionWidth">
      <summary>最小化されていないウィンドウの非クライアント領域のキャプションの幅を決定するメトリックを取得します。</summary>
      <returns>キャプションの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.CaptionWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaretWidth">
      <summary>ピクセル単位で表されたエディット コントロールのキャレットの幅を取得します。</summary>
      <returns>キャレットの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaretWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.CaretWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ClientAreaAnimation">
      <summary>クライアント領域のアニメーション機能が有効かどうかを示す値を取得します。</summary>
      <returns>ブール値です。クライアント領域のアニメーションが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ClientAreaAnimationKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ClientAreaAnimation" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxAnimation">
      <summary>コンボ ボックスのスライドオープン効果が有効かどうかを示す値を取得します。</summary>
      <returns>有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxAnimationKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ComboBoxAnimation" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxPopupAnimation">
      <summary>コンボ ボックスの <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> プロパティのシステム値を取得します。</summary>
      <returns>ポップアップ アニメーションの値。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxPopupAnimationKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ComboBoxPopupAnimation" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorHeight">
      <summary>カーソルの高さ (ピクセル単位) を取得します。</summary>
      <returns>カーソルの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.CursorHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorShadow">
      <summary>カーソルの周りに影があるかどうかを示す値を取得します。</summary>
      <returns>影が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorShadowKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.CursorShadow" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorWidth">
      <summary>カーソルの幅 (ピクセル単位) を取得します。</summary>
      <returns>カーソルの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.CursorWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DragFullWindows">
      <summary>完全なウィンドウのドラッグが有効かどうかを示す値を取得します。</summary>
      <returns>完全なウィンドウのドラッグが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DragFullWindowsKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.DragFullWindows" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DropShadow">
      <summary>ドロップ シャドウ効果が有効かどうかを示す値を取得します。</summary>
      <returns>ドロップ シャドウ効果が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DropShadowKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.DropShadow" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight">
      <summary>ウィンドウを囲む枠の水平方向の境界線の高さを取得します。</summary>
      <returns>境界線の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth">
      <summary>ウィンドウを囲む枠の垂直方向の境界線の幅を取得します。</summary>
      <returns>境界線の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FlatMenu">
      <summary>ネイティブなメニューがフラットなメニューとして表示されるかどうかを示す値を取得します。</summary>
      <returns>フラットなメニュー表示形式が設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FlatMenuKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.FlatMenu" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderHeight">
      <summary>フォーカスを示す四角形の上端および下端の高さ (ピクセル単位) を取得します。</summary>
      <returns>端の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.FocusBorderHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderWidth">
      <summary>フォーカスを示す四角形の左端および右端の幅 (ピクセル単位) を取得します。</summary>
      <returns>端の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.FocusBorderWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusHorizontalBorderHeight">
      <summary>フォーカスを示す四角形の上端および下端の高さを取得します。</summary>
      <returns>端の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusHorizontalBorderHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.FocusHorizontalBorderHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusVerticalBorderWidth">
      <summary>フォーカスを示す四角形の左端および右端の幅を取得します。</summary>
      <returns>端の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusVerticalBorderWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.FocusVerticalBorderWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusVisualStyleKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see langword="FocusVisualStyle" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ForegroundFlashCount">
      <summary>[前面のウィンドウの設定] によって、前面切り替え要求を拒否する際にタスクバー ボタンが点滅する回数を取得します。</summary>
      <returns>点滅の回数。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ForegroundFlashCountKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ForegroundFlashCount" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenHeight">
      <summary>プライマリ ディスプレイ モニター上の全画面表示ウィンドウのクライアント領域の高さ (ピクセル単位) を取得します。</summary>
      <returns>クライアント領域の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.FullPrimaryScreenHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenWidth">
      <summary>プライマリ ディスプレイ モニター上の全画面表示ウィンドウのクライアント領域の幅 (ピクセル単位) を取得します。</summary>
      <returns>クライアント領域の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.FullPrimaryScreenWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.GradientCaptions">
      <summary>ウィンドウのタイトル バーのグラデーション効果が有効かどうかを示す値を取得します。</summary>
      <returns>グラデーション効果が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.GradientCaptionsKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.GradientCaptions" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HighContrast">
      <summary>ハイ コントラスト ユーザー補助機能に関する情報を取得します。</summary>
      <returns>HIGHCONTRASTON オプションが選択されている場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HighContrastKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.HighContrast" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth">
      <summary>水平スクロール バーの矢印ビットマップの幅 (ピクセル単位) を取得します。</summary>
      <returns>矢印ビットマップの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarHeight">
      <summary>水平スクロール バーの高さ (ピクセル単位) を取得します。</summary>
      <returns>スクロール バーの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth">
      <summary>水平スクロール バーの <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の幅 (ピクセル単位) を取得します。</summary>
      <returns>つまみの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HotTracking">
      <summary>メニュー バーにあるメニュー名のようなユーザー インターフェイス要素のホット トラッキングが有効かどうかを示す値を取得します。</summary>
      <returns>ホット トラッキングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HotTrackingKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.HotTracking" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridHeight">
      <summary>大きいアイコンが収まるグリッドの高さを取得します。</summary>
      <returns>グリッドの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IconGridHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridWidth">
      <summary>大きいアイコンが収まるグリッドの幅を取得します。</summary>
      <returns>グリッドの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IconGridWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHeight">
      <summary>アイコンの既定の高さを取得します。</summary>
      <returns>アイコンの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IconHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHorizontalSpacing">
      <summary>アイコン セルの幅 (ピクセル単位) を取得します。 大きいアイコン表示では、この四角形を使用してアイコンを整列します。</summary>
      <returns>アイコン セルの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHorizontalSpacingKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IconHorizontalSpacing" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconTitleWrap">
      <summary>アイコンタイトルの折り返しが有効かどうかを示す値を取得します。</summary>
      <returns>アイコンタイトルの折り返しが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconTitleWrapKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IconTitleWrap" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconVerticalSpacing">
      <summary>アイコン セルの高さ (ピクセル単位) を取得します。 大きいアイコン表示では、この四角形を使用してアイコンを整列します。</summary>
      <returns>アイコン セルの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconVerticalSpacingKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IconVerticalSpacing" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconWidth">
      <summary>アイコンの既定の幅を取得します。</summary>
      <returns>アイコンの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IconWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsGlassEnabled">
      <summary>グラス風のウィンドウ フレームが使用されているかどうかを示す値を取得します。</summary>
      <returns>グラスウィンドウフレームが使用されている場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsImmEnabled">
      <summary>Unicode アプリケーションで Unicode ベースの Input Method Editor (IME) を使用できる状態かどうかを示す値を取得します。</summary>
      <returns>入力方式マネージャーまたは入力方式エディター機能が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsImmEnabledKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IsImmEnabled" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMediaCenter">
      <summary>現在のオペレーティング システムが Microsoft Windows XP Media Center Edition かどうかを示す値を取得します。</summary>
      <returns>現在のオペレーティングシステムが Windows XP Media Center Edition である場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMediaCenterKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IsMediaCenter" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMenuDropRightAligned">
      <summary>ドロップダウン メニューが、対応するメニュー項目に対して右揃えに配置されているかどうかを示す値を取得します。</summary>
      <returns>ドロップダウン メニューが右揃えの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMenuDropRightAlignedKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IsMenuDropRightAligned" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMiddleEastEnabled">
      <summary>システムがヘブライ語やアラビア語に対応しているかどうかを示す値を取得します。</summary>
      <returns>システムがヘブライ語およびアラビア語に対応している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMiddleEastEnabledKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IsMiddleEastEnabled" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMousePresent">
      <summary>マウスが取り付けられているかどうかを示す値を取得します。</summary>
      <returns>マウスが取り付けられている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMousePresentKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IsMousePresent" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMouseWheelPresent">
      <summary>取り付けられているマウスに垂直スクロール ホイールがあるかどうかを示す値を取得します。</summary>
      <returns>取り付けられているマウスに垂直スクロール ホイールがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMouseWheelPresentKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IsMouseWheelPresent" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsPenWindows">
      <summary>Microsoft Windows for Pen Computing 拡張機能がインストールされているかどうかを示す値を取得します。</summary>
      <returns>Pen Computing 拡張機能がインストールされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsPenWindowsKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IsPenWindows" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemotelyControlled">
      <summary>現在のセッションがリモート制御されているかどうかを示す値を取得します。</summary>
      <returns>現在のセッションがリモート制御されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemotelyControlledKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IsRemotelyControlled" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemoteSession">
      <summary>呼び出し元のプロセスがターミナル サービスのクライアント セッションに関連付けられているかどうかを示す値を取得します。</summary>
      <returns>呼び出し元のプロセスがターミナル サービスのクライアント セッションに関連付けられている場合は <see langword="true" />。呼び出し元のプロセスがターミナル サーバーのコンソール セッションに関連付けられている場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemoteSessionKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IsRemoteSession" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsSlowMachine">
      <summary>コンピューターがローエンドの (低速な) プロセッサを搭載しているかどうかを示す値を取得します。</summary>
      <returns>コンピューターがローエンドの (低速な) プロセッサを搭載している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsSlowMachineKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IsSlowMachine" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsTabletPC">
      <summary>現在のオペレーティング システムが Microsoft Windows XP Tablet PC Edition かどうかを示す値を取得します。</summary>
      <returns>現在のオペレーティングシステムが Windows XP Tablet PC Edition の場合は <see langword="true" />それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsTabletPCKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.IsTabletPC" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KanjiWindowHeight">
      <summary>2 バイト文字を使用するシステムの画面下部にある漢字ウィンドウの高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>ウィンドウの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KanjiWindowHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.KanjiWindowHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardCues">
      <summary>メニュー アクセス キーに常に下線を付けるかどうかを示す値を取得します。</summary>
      <returns>メニュー アクセス キーに常に下線を付ける場合は <see langword="true" />。メニューがキーボードによってアクティブにされた場合にのみ下線を付ける場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardCuesKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.KeyboardCues" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardDelay">
      <summary>キーボードの繰り返し遅延設定を取得します。値の範囲は、0 (約 250 ミリ秒の遅延) ～ 3 (約 1 秒の遅延) になります。</summary>
      <returns>キーボードの繰り返し遅延設定。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardDelayKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.KeyboardDelay" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardPreference">
      <summary>ユーザーがマウス操作よりもキーボード操作を優先するかどうか、および、通常は非表示のキーボード インターフェイスをアプリケーションに表示するのかどうかを示す値を取得します。</summary>
      <returns>ユーザーがキーボードに依存している場合は <see langword="true" />それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardPreferenceKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.KeyboardPreference" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardSpeed">
      <summary>キーボードの繰り返し速度設定を取得します。値の範囲は、0 (1 秒に約 2.5 回の繰り返し) ～ 31 (1 秒に約 30 回の繰り返し) になります。</summary>
      <returns>キーボードの繰り返し速度設定。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardSpeedKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.KeyboardSpeed" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ListBoxSmoothScrolling">
      <summary>リスト ボックスのスムーズ スクロール効果が有効かどうかを示す値を取得します。</summary>
      <returns>スムーズ スクロール効果が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ListBoxSmoothScrollingKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ListBoxSmoothScrolling" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight">
      <summary>プライマリ ディスプレイ モニター上の最大化されたトップレベル ウィンドウの高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>ウィンドウの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth">
      <summary>プライマリ ディスプレイ モニター上の最大化されたトップレベル ウィンドウの幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>ウィンドウの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackHeight">
      <summary>キャプションとサイズ変更境界があるウィンドウの最大の高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>ウィンドウの最大の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MaximumWindowTrackHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackWidth">
      <summary>キャプションとサイズ変更境界があるウィンドウの最大の幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>ウィンドウの最大の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MaximumWindowTrackWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuAnimation">
      <summary>メニューのアニメーション機能が有効かどうかを示す値を取得します。</summary>
      <returns>メニューのアニメーションが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuAnimationKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MenuAnimation" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuBarHeight">
      <summary>単一行のメニュー バーの高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>メニュー バーの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuBarHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MenuBarHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonHeight">
      <summary>メニュー バー ボタンの高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>メニュー バー ボタンの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MenuButtonHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonWidth">
      <summary>メニュー バー ボタンの幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>メニュー バー ボタンの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MenuButtonWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkHeight">
      <summary>メニューの既定のチェック マークのビットマップの高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>ビットマップの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MenuCheckmarkHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkWidth">
      <summary>メニューの既定のチェック マークのビットマップの幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>ビットマップの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MenuCheckmarkWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuDropAlignment">
      <summary>ポップアップ メニューを、対応するメニュー項目の左側に配置するか、右側に配置するかを示す値を取得します。</summary>
      <returns>左側に配置する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuDropAlignmentKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MenuDropAlignment" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuFade">
      <summary>メニュー フェード アニメーションが有効かどうかを示す値を取得します。</summary>
      <returns>フェード アニメーションが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuFadeKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MenuFade" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuHeight">
      <summary>メニューの高さを決定するメトリックを取得します。</summary>
      <returns>メニューの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MenuHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuPopupAnimation">
      <summary>メニューの <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> プロパティのシステム値を取得します。</summary>
      <returns>ポップアップ アニメーションのプロパティ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuPopupAnimationKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MenuPopupAnimation" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuShowDelay">
      <summary>マウスのカーソルがサブメニュー項目の上に置かれてから、ショートカット メニューが表示されるまでの待ち時間 (ミリ秒単位) を取得します。</summary>
      <returns>遅延時間。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuShowDelayKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MenuShowDelay" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuWidth">
      <summary>メニューの幅を決定するメトリックを取得します。</summary>
      <returns>メニューの幅 (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MenuWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizeAnimation">
      <summary>ユーザー操作に関連付けられているアニメーション効果を取得します。</summary>
      <returns>[ウィンドウアニメーションを最小化する] 機能が有効になっている場合に <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizeAnimationKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MinimizeAnimation" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridHeight">
      <summary>最小化されたウィンドウのグリッド セルの高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>最小化されたウィンドウのグリッド セルの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MinimizedGridHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridWidth">
      <summary>最小化されたウィンドウのグリッド セルの幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>最小化されたウィンドウのグリッド セルの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MinimizedGridWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowHeight">
      <summary>最小化されたウィンドウの高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>最小化されたウィンドウの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MinimizedWindowHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowWidth">
      <summary>最小化されたウィンドウの幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>最小化されたウィンドウの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MinimizedWindowWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumHorizontalDragDistance">
      <summary>ドラッグ操作の開始前にマウス ポインターの一定範囲の移動を許容するための、ドラッグ ポイントを中心とする四角形の幅を取得します。</summary>
      <returns>四角形の幅 (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumVerticalDragDistance">
      <summary>ドラッグ操作の開始前にマウス ポインターの一定範囲の移動を許容するための、ドラッグ ポイントを中心とする四角形の高さを取得します。</summary>
      <returns>四角形の高さ (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowHeight">
      <summary>ウィンドウの最小の高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>ウィンドウの最小の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MinimumWindowHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackHeight">
      <summary>ウィンドウの最小のトラッキングの高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>ウィンドウの最小のトラッキングの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MinimumWindowTrackHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackWidth">
      <summary>ウィンドウの最小のトラッキングの幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>ウィンドウの最小のトラッキングの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MinimumWindowTrackWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowWidth">
      <summary>ウィンドウの最小の幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>ウィンドウの最小の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MinimumWindowWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverHeight">
      <summary>マウスのポイント イベントを生成するために、マウス ポインターが収まっている必要のある四角形の高さ (ピクセル単位) を取得します。</summary>
      <returns>マウスのポイント イベントに使用される四角形の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MouseHoverHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverTime">
      <summary>マウスのポイント イベントを生成するために、静止領域内にマウス ポインターがとどまっている必要がある時間 (ミリ秒単位) を取得します。</summary>
      <returns>マウスのポイント イベントを生成するために、静止領域内にマウスがとどまっている必要がある時間 (ミリ秒単位)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverTimeKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MouseHoverTime" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverWidth">
      <summary>マウスのポイント イベントを生成するために、マウス ポインターが収まっている必要のある四角形の幅 (ピクセル単位) を取得します。</summary>
      <returns>マウスのポイント イベントに使用される四角形の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.MouseHoverWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.NavigationChromeStyleKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.NavigationChromeStyleKey" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PowerLineStatus">
      <summary>システム電源が接続されているか、システム電源のステータスが不明であるかを示す値を取得します。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PowerLineStatusKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.PowerLineStatus" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenHeight">
      <summary>プライマリ ディスプレイ モニターの画面の高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>画面の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.PrimaryScreenHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenWidth">
      <summary>プライマリ ディスプレイ モニターの画面の幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>画面の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.PrimaryScreenWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight">
      <summary>サイズを変更できるウィンドウの周囲にある水平サイズ変更境界の高さ (太さ) をピクセル単位で示す値を取得します。</summary>
      <returns>境界の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth">
      <summary>サイズを変更できるウィンドウの周囲にある垂直サイズ変更境界の幅 (太さ) をピクセル単位で示す値を取得します。</summary>
      <returns>境界の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollHeight">
      <summary>最小化されていないウィンドウの非クライアント領域のスクロールの高さを決定するメトリックを取得します。</summary>
      <returns>スクロールの高さ (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ScrollHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollWidth">
      <summary>最小化されていないウィンドウの非クライアント領域のスクロールの幅を決定するメトリックを取得します。</summary>
      <returns>スクロールの幅 (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ScrollWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SelectionFade">
      <summary>選択フェード効果が有効かどうかを示す値を取得します。</summary>
      <returns>フェード効果が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SelectionFadeKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.SelectionFade" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ShowSounds">
      <summary>ユーザーが情報を視覚的形式で要求しているかどうかを示す値を取得します。</summary>
      <returns>ユーザーが、通常はオーディオ形式のみで情報を提示しているアプリケーションに対して、視覚的に情報を提示するように要求する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ShowSoundsKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ShowSounds" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionHeight">
      <summary>最小化されていないウィンドウの非クライアント領域の小さいキャプションの高さを決定するメトリックを取得します。</summary>
      <returns>キャプションの高さ (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.SmallCaptionHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionWidth">
      <summary>最小化されていないウィンドウの非クライアント領域の小さいキャプションの幅を決定するメトリックを取得します。</summary>
      <returns>キャプションの幅 (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.SmallCaptionWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconHeight">
      <summary>小さいアイコンの推奨される高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>アイコンの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.SmallIconHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconWidth">
      <summary>小さいアイコンの推奨される幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>アイコンの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.SmallIconWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight">
      <summary>小さいキャプション ボタンの高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>キャプション ボタンの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth">
      <summary>小さいキャプション ボタンの幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>キャプション ボタンの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SnapToDefaultButton">
      <summary>既定値にスナップ ボタンが有効かどうかを示す値を取得します。 有効な場合、マウスのカーソルはダイアログ ボックスの既定のボタン ( [OK] や [適用] など) に自動的に移動します。</summary>
      <returns>この機能が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SnapToDefaultButtonKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.SnapToDefaultButton" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="E:System.Windows.SystemParameters.StaticPropertyChanged">
      <summary>プロパティの 1 つが変更されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.SystemParameters.StylusHotTracking">
      <summary>スタイラスのホット トラッキングが有効かどうかを示す値を取得します。</summary>
      <returns>スタイラスのホット トラッキングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.StylusHotTrackingKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.StylusHotTracking" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SwapButtons">
      <summary>左右のマウス ボタンの機能が入れ替わっているかどうかを示す値を取得します。</summary>
      <returns>左右のマウス ボタンの機能が入れ替わっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SwapButtonsKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.SwapButtons" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickHorizontalBorderHeight">
      <summary>3-D 境界線の高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>境界の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickHorizontalBorderHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ThickHorizontalBorderHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickVerticalBorderWidth">
      <summary>3-D 境界線の幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>境界の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickVerticalBorderWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ThickVerticalBorderWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinHorizontalBorderHeight">
      <summary>ウィンドウの水平方向の境界線の高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>境界の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinHorizontalBorderHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ThinHorizontalBorderHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinVerticalBorderWidth">
      <summary>ウィンドウの垂直方向の境界線の幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>境界の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinVerticalBorderWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ThinVerticalBorderWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipAnimation">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> アニメーションが有効かどうかを示す値を取得します。</summary>
      <returns>ツールヒント アニメーションが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipAnimationKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ToolTipAnimation" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipFade">
      <summary>ツールヒント アニメーションで、フェード効果とスライド効果のどちらが使用されるかを示す値を取得します。</summary>
      <returns>フェード効果が使用される場合は <see langword="true" />。スライド効果が使用される場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipFadeKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ToolTipFade" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipPopupAnimation">
      <summary>ツールヒントの <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> プロパティのシステム値を取得します。</summary>
      <returns>ポップアップ アニメーションのプロパティのシステム値。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipPopupAnimationKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.ToolTipPopupAnimation" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UIEffects">
      <summary>すべての ユーザー インターフェイス (UI) 効果が有効かどうかを示す値を取得します。</summary>
      <returns>すべての <see langword="true" /> 効果が有効な場合は UI。無効な場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UIEffectsKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.UIEffects" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UxThemeColor">
      <summary>色のテーマ名を取得します。</summary>
      <returns>色のテーマの名前。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UxThemeName">
      <summary>テーマ名を取得します。</summary>
      <returns>テーマ名。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeight">
      <summary>垂直スクロール バーの矢印ビットマップの高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>ビットマップの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeight">
      <summary>垂直スクロール バーのつまみの高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>つまみの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarWidth">
      <summary>垂直スクロール バーの幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>スクロール バーの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.VerticalScrollBarWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenHeight">
      <summary>仮想画面の高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>仮想画面の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.VirtualScreenHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenLeft">
      <summary>仮想画面の左側の座標を示す値を取得します。</summary>
      <returns>画面座標 (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenLeftKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.VirtualScreenLeft" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenTop">
      <summary>仮想画面の上部の座標を示す値を取得します。</summary>
      <returns>画面座標 (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenTopKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.VirtualScreenTop" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenWidth">
      <summary>仮想画面の幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>仮想画面の幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.VirtualScreenWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WheelScrollLines">
      <summary>マウス ホイールを回転したときにスクロールする行数を示す値を取得します。</summary>
      <returns>行数。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WheelScrollLinesKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.WheelScrollLines" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonHeight">
      <summary>ウィンドウのタイトル バーのボタンの高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>キャプション ボタンの高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.WindowCaptionButtonHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonWidth">
      <summary>ウィンドウのタイトル バーのボタンの幅 (ピクセル単位) を示す値を取得します。</summary>
      <returns>キャプション ボタンの幅。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonWidthKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.WindowCaptionButtonWidth" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionHeight">
      <summary>キャプション領域の高さ (ピクセル単位) を示す値を取得します。</summary>
      <returns>キャプション領域の高さ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionHeightKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.WindowCaptionHeight" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCornerRadius">
      <summary>ウィンドウの角の半径を取得します。</summary>
      <returns>ウィンドウの角の丸みの程度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowGlassBrush">
      <summary>グラス風のウィンドウ フレームを描画するブラシを取得します。</summary>
      <returns>グラス風のウィンドウ フレームを描画するブラシ。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowGlassColor">
      <summary>グラス風のウィンドウ フレームの描画に使用されている色を取得します。</summary>
      <returns>グラス風のウィンドウ フレームを描画する際に使用される色。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowNonClientFrameThickness">
      <summary>ウィンドウの非クライアント領域のサイズを取得します。</summary>
      <returns>ウィンドウの非クライアント領域のサイズ。デバイス非依存単位 (1/96 インチ)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowResizeBorderThickness">
      <summary>ウィンドウ周囲のサイズ変更境界線のサイズを取得します。</summary>
      <returns>ウィンドウ周囲のサイズ変更境界線のサイズ。デバイス非依存単位 (1/96 インチ)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WorkArea">
      <summary>プライマリ ディスプレイ モニター上の作業領域のサイズを取得します。</summary>
      <returns>仮想画面の座標として示された作業領域の座標を受け取る <see langword="RECT" /> 構造体。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WorkAreaKey">
      <summary>
        <see cref="T:System.Windows.ResourceKey" /> プロパティの <see cref="P:System.Windows.SystemParameters.WorkArea" /> を取得します。</summary>
      <returns>リソース キー。</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExpression">
      <summary>
        <see cref="T:System.Windows.TemplateBindingExtension" /> のランタイム インスタンスを記述します。</summary>
    </member>
    <member name="P:System.Windows.TemplateBindingExpression.TemplateBindingExtension">
      <summary>この式インスタンスの <see cref="T:System.Windows.TemplateBindingExtension" /> オブジェクトを取得します。</summary>
      <returns>この式インスタンスのテンプレート バインディング拡張。</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExpressionConverter">
      <summary>シリアル化中に <see cref="T:System.Windows.TemplateBindingExpression" /> インスタンスからマークアップ拡張機能を構築するために使用される型コンバーター。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExpressionConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.TemplateBindingExpressionConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが指定のコンテキストを使用して、オブジェクトを指定の型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 実装。</param>
      <param name="destinationType">変換出力の目的の型。</param>
      <returns>コンバーターが要求された変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 <see cref="T:System.Windows.Markup.MarkupExtension" /> の <paramref name="destinationType" /> だけが <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.TemplateBindingExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定した値オブジェクトを <see cref="T:System.Windows.Markup.MarkupExtension" /> 型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 実装。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。 null 参照が渡された場合は、現在のカルチャが使用されます。</param>
      <param name="value">変換する値。</param>
      <param name="destinationType">変換後の型。</param>
      <returns>変換された値。</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExtension">
      <summary>テンプレート内のプロパティ値と、template 宣言されたコントロールで公開されているその他のプロパティ値の間におけるバインディングをサポートするマークアップ拡張機能を実装します。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtension.#ctor">
      <summary>
        <see cref="T:System.Windows.TemplateBindingExtension" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtension.#ctor(System.Windows.DependencyProperty)">
      <summary>バインディングのソースになっている依存関係プロパティが指定された、<see cref="T:System.Windows.TemplateBindingExtension" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="property">バインドされるプロパティの識別子。</param>
    </member>
    <member name="P:System.Windows.TemplateBindingExtension.Converter">
      <summary>バインディングのソースとターゲットの間で解釈を行うコンバーターを取得または設定します。</summary>
      <returns>コンバーター実装。 この値は、既定では <see langword="null" /> になり、通常はバインディングのオプション パラメーターとして指定されます。</returns>
    </member>
    <member name="P:System.Windows.TemplateBindingExtension.ConverterParameter">
      <summary>コンバーターに渡すパラメーターを取得または設定します。</summary>
      <returns>コンバーター実装によって参照される、バインドされるパラメーター。 既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.TemplateBindingExtension.Property">
      <summary>バインドされるプロパティを取得または設定します。</summary>
      <returns>バインドされる依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.TemplateBindingExtension.ProvideValue(System.IServiceProvider)">
      <summary>このマークアップ拡張機能で使用するターゲット オブジェクトのプロパティ上の値として設定するオブジェクトを返します。 <see cref="T:System.Windows.TemplateBindingExtension" /> の場合は、バインディングをサポートする、式 (<see cref="T:System.Windows.TemplateBindingExpression" />) になります。</summary>
      <param name="serviceProvider">マークアップ拡張機能のサービスを提供できるオブジェクト。 この実装では、<see langword="null" /> でもかまいません。</param>
      <returns>バインディングをサポートする式。</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExtensionConverter">
      <summary>シリアル化中にインスタンスから <see cref="T:System.Windows.TemplateBindingExtension" /> を構築するために使用される型コンバーター。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtensionConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.TemplateBindingExtensionConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが指定のコンテキストを使用して、オブジェクトを指定の型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 実装。</param>
      <param name="destinationType">変換出力の目的の型。</param>
      <returns>コンバーターが要求された変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> の <paramref name="destinationType" /> のみが <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.TemplateBindingExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定した値オブジェクトを、指定した型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 実装。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。 null 参照が渡された場合は、現在のカルチャが使用されます。</param>
      <param name="value">変換する値。</param>
      <param name="destinationType">変換後の型。</param>
      <returns>変換された値。</returns>
    </member>
    <member name="T:System.Windows.TemplateContent">
      <summary>テンプレートで XAML リーダーおよび XAML ライターとやり取りするときにコンテンツの遅延に使用する、記録ロジックと再生ロジックを実装します。</summary>
    </member>
    <member name="T:System.Windows.TemplateContentLoader">
      <summary>WPF XAML のテンプレートに対して定義されている XAML コンテンツの読み込みを遅延させるために <see cref="T:System.Xaml.XamlDeferringLoader" /> を実装します。</summary>
    </member>
    <member name="M:System.Windows.TemplateContentLoader.#ctor">
      <summary>
        <see cref="T:System.Windows.TemplateContentLoader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.TemplateContentLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary>
        <see cref="T:System.Xaml.XamlReader" /> およびサービス プロバイダーの必要な特定のサービスに基づいて、XAML コンテンツを遅延モードで読み込みます。</summary>
      <param name="xamlReader">
        <see cref="M:System.Windows.TemplateContentLoader.Save(System.Object,System.IServiceProvider)" /> の呼び出しによって返される開始リーダー。</param>
      <param name="serviceProvider">必要なサービスのサービス プロバイダー。</param>
      <returns>入力 <see cref="T:System.Xaml.XamlReader" /> のノード ストリームのルート オブジェクト。 具体的には、これは <see cref="T:System.Windows.TemplateContent" /> インスタンスです。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlReader" /> または <paramref name="serviceProvider" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="serviceProvider" /> は、必要なサービスを提供しません。</exception>
    </member>
    <member name="M:System.Windows.TemplateContentLoader.Save(System.Object,System.IServiceProvider)">
      <summary>使用しないでください。常に例外がスローされます。</summary>
      <param name="value">遅延読み込みをコミットする入力値。</param>
      <param name="serviceProvider">必要なサービスのサービス プロバイダー。</param>
      <returns>常に例外がスローされます。</returns>
      <exception cref="T:System.NotSupportedException">常にスローされます。</exception>
    </member>
    <member name="T:System.Windows.TemplateKey">
      <summary>データ テンプレートのリソース キーとして使用する場合に、データ テンプレートを検索プロセスに追加することを許可します。</summary>
    </member>
    <member name="M:System.Windows.TemplateKey.#ctor(System.Windows.TemplateKey.TemplateType)">
      <summary>指定したテンプレートの型を使用して、<see cref="T:System.Windows.TemplateKey" /> クラスの新しいインスタンスを初期化します。 このコンストラクターは保護されています。</summary>
      <param name="templateType">該当するテンプレートの型を指定する <see cref="T:System.Windows.TemplateKey.TemplateType" /> 値。</param>
    </member>
    <member name="M:System.Windows.TemplateKey.#ctor(System.Windows.TemplateKey.TemplateType,System.Object)">
      <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.TemplateKey" /> クラスの新しいインスタンスを初期化します。 このコンストラクターは保護されています。</summary>
      <param name="templateType">該当するテンプレートの型を指定する <see cref="T:System.Windows.TemplateKey.TemplateType" /> 値。</param>
      <param name="dataType">該当するテンプレートがデザインされている型。</param>
    </member>
    <member name="P:System.Windows.TemplateKey.Assembly">
      <summary>テンプレート定義を含むアセンブリを取得または設定します。</summary>
      <returns>テンプレートが定義されているアセンブリ。</returns>
    </member>
    <member name="P:System.Windows.TemplateKey.DataType">
      <summary>テンプレートがデザインされている型を取得または設定します。</summary>
      <returns>表示するためにテンプレートに使用されるオブジェクトの種類を指定する。または、テンプレートでXML表示するためにXML使用されるデータのタグ名を指定する文字列。 <see cref="T:System.Type" /></returns>
    </member>
    <member name="M:System.Windows.TemplateKey.Equals(System.Object)">
      <summary>指定したインスタンスが、<see cref="T:System.Windows.TemplateKey" /> のこのインスタンスと同一であるかどうかを示す値を返します。</summary>
      <param name="o">等しいかどうかを比較するオブジェクト。</param>
      <returns>2 つのインスタンスが同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.TemplateKey.GetHashCode">
      <summary>
        <see cref="T:System.Windows.TemplateKey" /> のこのインスタンスのハッシュ コードを返します。</summary>
      <returns>
        <see cref="T:System.Windows.TemplateKey" /> のこのインスタンスのハッシュ コード。</returns>
    </member>
    <member name="M:System.Windows.TemplateKey.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="M:System.Windows.TemplateKey.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
    </member>
    <member name="T:System.Windows.TemplateKey.TemplateType">
      <summary>
        <see cref="T:System.Windows.TemplateKey" /> を使用するテンプレートのさまざまな型について説明します。</summary>
    </member>
    <member name="F:System.Windows.TemplateKey.TemplateType.DataTemplate">
      <summary>
        <see cref="T:System.Windows.DataTemplate" /> である型。</summary>
    </member>
    <member name="F:System.Windows.TemplateKey.TemplateType.TableTemplate">
      <summary>
        <see langword="TableTemplate" /> である型。 これは、使用されなくなっています。</summary>
    </member>
    <member name="M:System.Windows.TemplateKey.ToString">
      <summary>この <see cref="T:System.Windows.TemplateKey" /> の文字列表現を返します。</summary>
      <returns>この <see cref="T:System.Windows.TemplateKey" /> の文字列表現。</returns>
    </member>
    <member name="T:System.Windows.TemplatePartAttribute">
      <summary>テンプレートに使用される名前付きパーツの型を識別するためにクラス定義に適用される属性を表します。</summary>
    </member>
    <member name="M:System.Windows.TemplatePartAttribute.#ctor">
      <summary>
        <see cref="T:System.Windows.TemplatePartAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Name">
      <summary>定義済みのパーツ名を取得または設定します。</summary>
      <returns>定義済みのパーツ名。</returns>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Type">
      <summary>この属性で識別する名前付きパーツの型を取得または設定します。</summary>
      <returns>この属性で識別する名前付きパーツの型。</returns>
    </member>
    <member name="T:System.Windows.TemplateVisualStateAttribute">
      <summary>コントロールが取ることのできる状態と、そのコントロールの <see cref="T:System.Windows.VisualState" /> に <see cref="T:System.Windows.Controls.ControlTemplate" /> を追加できることを指定します。</summary>
    </member>
    <member name="M:System.Windows.TemplateVisualStateAttribute.#ctor">
      <summary>
        <see cref="T:System.Windows.TemplateVisualStateAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.GroupName">
      <summary>状態が属するグループの名前を取得または設定します。</summary>
      <returns>状態が属する <see cref="T:System.Windows.VisualStateGroup" /> の名前。</returns>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.Name">
      <summary>コントロールが取ることのできる状態の名前を取得または設定します。</summary>
      <returns>コントロールが取ることのできる状態の名前。</returns>
    </member>
    <member name="T:System.Windows.ThemeDictionaryExtension">
      <summary>アプリケーション作成者が現在のシステム テーマに基づいてコントロールのスタイルをカスタマイズできるようにする、マークアップ拡張機能を実装します。</summary>
    </member>
    <member name="M:System.Windows.ThemeDictionaryExtension.#ctor">
      <summary>
        <see cref="T:System.Windows.ThemeDictionaryExtension" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.ThemeDictionaryExtension.#ctor(System.String)">
      <summary>指定したアセンブリ名を使用して、<see cref="T:System.Windows.ThemeDictionaryExtension" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="assemblyName">アセンブリ名を表す文字列。</param>
    </member>
    <member name="P:System.Windows.ThemeDictionaryExtension.AssemblyName">
      <summary>特定のテーマに適用するディクショナリを識別するための特定の名前付け規則を設定する文字列を、取得または設定します。</summary>
      <returns>アセンブリ名を表す文字列。</returns>
    </member>
    <member name="M:System.Windows.ThemeDictionaryExtension.ProvideValue(System.IServiceProvider)">
      <summary>この拡張機能を適用するプロパティで設定するオブジェクトを返します。 <see cref="T:System.Windows.ThemeDictionaryExtension" /> の場合、これは特定のテーマ ディクショナリ拡張機能の URI 値です。</summary>
      <param name="serviceProvider">マークアップ拡張機能のサービスを提供できるオブジェクト。 このサービスには、<see cref="T:System.Windows.Markup.IXamlTypeResolver" /> の結果を提供することが求められます。</param>
      <returns>拡張機能が適用されたプロパティで設定するオブジェクト値。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.ThemeDictionaryExtension.AssemblyName" /> プロパティが <see langword="null" /> です。 構築中または <see cref="M:System.Windows.ThemeDictionaryExtension.ProvideValue(System.IServiceProvider)" /> メソッドを使用する前に、この値を設定する必要があります。

または -
<paramref name="serviceProvider" /> が <see langword="null" /> であるか、または <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> のサービスを提供しません。

または -
<paramref name="serviceProvider" /> で指定された対象の型が <see cref="P:System.Windows.ResourceDictionary.Source" /> と一致しません。</exception>
    </member>
    <member name="T:System.Windows.ThemeInfoAttribute">
      <summary>アセンブリ用のテーマ ディクショナリが格納される場所を指定します。</summary>
    </member>
    <member name="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
      <summary>
        <see cref="T:System.Windows.ThemeInfoAttribute" /> クラスの新しいインスタンスを初期化して、アセンブリ内の型用のテーマ ディクショナリの場所を定義する属性を作成します。</summary>
      <param name="themeDictionaryLocation">テーマ固有のリソースの場所。</param>
      <param name="genericDictionaryLocation">テーマ固有ではないジェネリックなリソースの場所。</param>
    </member>
    <member name="P:System.Windows.ThemeInfoAttribute.GenericDictionaryLocation">
      <summary>テーマ固有ではないジェネリックなリソースの場所。</summary>
      <returns>ジェネリックな <see cref="T:System.Windows.ResourceDictionaryLocation" /> の <see cref="T:System.Windows.ResourceDictionary" />。</returns>
    </member>
    <member name="P:System.Windows.ThemeInfoAttribute.ThemeDictionaryLocation">
      <summary>テーマ固有のリソースの場所。</summary>
      <returns>テーマ固有の <see cref="T:System.Windows.ResourceDictionaryLocation" /> の <see cref="T:System.Windows.ResourceDictionary" />。</returns>
    </member>
    <member name="T:System.Windows.Thickness">
      <summary>四角形の枠の太さについて記述します。 4 つの <see cref="T:System.Double" /> 値は、それぞれ四角形の 4 つの辺 <see cref="P:System.Windows.Thickness.Left" />、<see cref="P:System.Windows.Thickness.Top" />、<see cref="P:System.Windows.Thickness.Right" />、および <see cref="P:System.Windows.Thickness.Bottom" /> を示します。</summary>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double)">
      <summary>各辺に均一な長さを指定して <see cref="T:System.Windows.Thickness" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="uniformLength">外接する四角形の 4 つの辺すべてに均一に適用される長さ。</param>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>特定の長さ (<see cref="T:System.Double" /> として提供されている) が四角形の各側に適用されている <see cref="T:System.Windows.Thickness" /> 構造の新しいインスタンスを初期化します。</summary>
      <param name="left">四角形の左側の太さ。</param>
      <param name="top">四角形の上側の太さ。</param>
      <param name="right">四角形の右側の太さ。</param>
      <param name="bottom">四角形の下側の太さ。</param>
    </member>
    <member name="P:System.Windows.Thickness.Bottom">
      <summary>外接する四角形の底辺の幅 (ピクセル単位) を取得または設定します。</summary>
      <returns>この <see cref="T:System.Double" /> のインスタンスについて、外接する四角形の底辺の幅 (ピクセル単位) を表す <see cref="T:System.Windows.Thickness" />。 1 ピクセルは 0.26mm (1/96 インチ) に相当します。 既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Object)">
      <summary>この <see cref="T:System.Windows.Thickness" /> 構造体を別の <see cref="T:System.Object" /> と比較して、等しいかどうかを確認します。</summary>
      <param name="obj">比較対象のオブジェクト。</param>
      <returns>2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Windows.Thickness)">
      <summary>この <see cref="T:System.Windows.Thickness" /> 構造体を別の <see cref="T:System.Windows.Thickness" /> 構造体と比較して、等しいかどうかを確認します。</summary>
      <param name="thickness">等価であることを比較する <see cref="T:System.Windows.Thickness" /> のインスタンス。</param>
      <returns>
        <see cref="T:System.Windows.Thickness" /> の 2 つのインスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Thickness.GetHashCode">
      <summary>この構造体のハッシュ コードを返します。</summary>
      <returns>
        <see cref="T:System.Windows.Thickness" /> のこのインスタンスのハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Left">
      <summary>外接する四角形の左辺の幅 (ピクセル単位) を取得または設定します。</summary>
      <returns>この <see cref="T:System.Double" /> のインスタンスについて、外接する四角形の左辺の幅 (ピクセル単位) を表す <see cref="T:System.Windows.Thickness" />。 1 ピクセルは 1/96 インチに相当します。 既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)">
      <summary>2 つの <see cref="T:System.Windows.Thickness" /> 構造体の値を比較して、等しいかどうかを確認します。</summary>
      <param name="t1">比較する最初の構造体。</param>
      <param name="t2">比較する、もう一方の構造体。</param>
      <returns>
        <see cref="T:System.Windows.Thickness" /> の 2 つのインスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)">
      <summary>2 つの <see cref="T:System.Windows.Thickness" /> 構造体を比較し、等しくないかどうかを確認します。</summary>
      <param name="t1">比較する最初の構造体。</param>
      <param name="t2">比較する、もう一方の構造体。</param>
      <returns>
        <see cref="T:System.Windows.Thickness" /> の 2 つのインスタンスが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Right">
      <summary>外接する四角形の右辺の幅 (ピクセル単位) を取得または設定します。</summary>
      <returns>この <see cref="T:System.Double" /> のインスタンスについて、外接する四角形の右辺の幅 (ピクセル単位) を表す <see cref="T:System.Windows.Thickness" />。 1 ピクセルは 0.26mm (1/96 インチ) に相当します。 既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Top">
      <summary>外接する四角形の上辺の幅 (ピクセル単位) を取得または設定します。</summary>
      <returns>この <see cref="T:System.Double" /> のインスタンスについて、外接する四角形の上辺の幅 (ピクセル単位) を表す <see cref="T:System.Windows.Thickness" />。 1 ピクセルは 0.26mm (1/96 インチ) に相当します。 既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.Thickness.ToString">
      <summary>
        <see cref="T:System.Windows.Thickness" /> 構造体の文字列表現を返します。</summary>
      <returns>
        <see cref="T:System.String" /> 値を表す <see cref="T:System.Windows.Thickness" />。</returns>
    </member>
    <member name="T:System.Windows.ThicknessConverter">
      <summary>
        <see cref="T:System.Windows.Thickness" /> のインスタンスとその他の型の間で変換します。</summary>
    </member>
    <member name="M:System.Windows.ThicknessConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.ThicknessConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.ThicknessConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>型コンバーターが、指定した型から <see cref="T:System.Windows.Thickness" /> のインスタンスを作成できるかどうかを判断します。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報。</param>
      <param name="sourceType">型コンバーターが変換のために評価する変換元の型。</param>
      <returns>型コンバーターが、指定した型から <see cref="T:System.Windows.Thickness" /> のインスタンスを作成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.ThicknessConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>型コンバーターが、<see cref="T:System.Windows.Thickness" /> のインスタンスを別の型に変換できるかどうかを判断します。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報。</param>
      <param name="destinationType">型コンバーターが変換のために <see cref="T:System.Windows.Thickness" /> のこのインスタンスを評価するときの変換先の型。</param>
      <returns>型コンバーターが <see cref="T:System.Windows.Thickness" /> のこのインスタンスを <paramref name="destinationType" /> に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.ThicknessConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したオブジェクトから <see cref="T:System.Windows.Thickness" /> のインスタンスを作成しようとします。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報。</param>
      <param name="cultureInfo">変換対象の型の <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="source">変換対象の <paramref name="source" /><see cref="T:System.Object" />。</param>
      <returns>変換された <paramref name="source" /> から作成された <see cref="T:System.Windows.Thickness" /> のインスタンス。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> オブジェクトは null 参照 (Visual Basic では <see langword="Nothing" />) です。</exception>
      <exception cref="T:System.ArgumentException">例のオブジェクトが null 参照ではなく、<see cref="T:System.Windows.Thickness" /> に変換できる正しい型ではありません。</exception>
    </member>
    <member name="M:System.Windows.ThicknessConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Windows.Thickness" /> のインスタンスの指定した型への変換を試みます。</summary>
      <param name="typeDescriptorContext">型のコンテキスト情報。</param>
      <param name="cultureInfo">変換対象の型の <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換対象の <see cref="T:System.Windows.Thickness" /> のインスタンス。</param>
      <param name="destinationType">
        <see cref="T:System.Windows.Thickness" /> のこのインスタンスの変換先の型。</param>
      <returns>型コンバーターが <see cref="T:System.Windows.Thickness" /> のインスタンスを変換するときに作成される型。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> オブジェクトが null 参照 (<see langword="Nothing" />) ではなく、Brush ではありません。または、<paramref name="destinationType" /> が変換先の有効な型の 1 つではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> オブジェクトが null 参照です。</exception>
    </member>
    <member name="T:System.Windows.Trigger">
      <summary>条件付きでプロパティ値を適用するか、アクションを実行するトリガーを表します。</summary>
    </member>
    <member name="M:System.Windows.Trigger.#ctor">
      <summary>
        <see cref="T:System.Windows.Trigger" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Trigger.Property">
      <summary>トリガーの <see cref="P:System.Windows.Trigger.Value" /> プロパティと比較される値を返すプロパティを取得または設定します。 この比較は参照の等価性チェックです。</summary>
      <returns>要素のプロパティ値を返す <see cref="T:System.Windows.DependencyProperty" />。 既定値は <see langword="null" /> です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Windows.Style" /> に、<see cref="T:System.Windows.Trigger" /> プロパティを参照する <see cref="T:System.Windows.Style" /> を含めることはできません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Trigger" /> は、使用中には変更できません。</exception>
    </member>
    <member name="M:System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)">
      <summary>型コンバーターによって <see cref="T:System.Windows.Trigger" /> オブジェクトのプロパティの値が設定された場合の処理を行います。</summary>
      <param name="targetObject">型コンバーターによって値が設定されるオブジェクト。</param>
      <param name="eventArgs">型コンバーターの処理に関連したデータ。</param>
    </member>
    <member name="P:System.Windows.Trigger.Setters">
      <summary>指定した条件が満たされたときに適用するプロパティ値を表す <see cref="T:System.Windows.Setter" /> オブジェクトのコレクションを取得します。</summary>
      <returns>既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Trigger.SourceName">
      <summary>関連付けられている setter を適用するプロパティを含むオブジェクトの名前を取得または設定します。</summary>
      <returns>既定のプロパティは <see langword="null" /> です。 このプロパティが <see langword="null" /> の場合、<see cref="P:System.Windows.Trigger.Property" /> プロパティは、このスタイルまたはテンプレートが適用される要素 (スタイルが設定される親またはテンプレートが適用される親) に関して評価されます。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Trigger" /> は、使用中には変更できません。</exception>
    </member>
    <member name="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>初期化の開始を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>初期化の完了を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>子オブジェクトを追加します。</summary>
      <param name="value">追加する子オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
      <param name="text">オブジェクトに追加するテキスト。</param>
    </member>
    <member name="P:System.Windows.Trigger.Value">
      <summary>要素のプロパティ値と比較する値を取得または設定します。 この比較は参照の等価性チェックです。</summary>
      <returns>既定値は <see langword="null" /> です。 「例外」も参照してください。</returns>
      <exception cref="T:System.ArgumentException">バインディングなどの式はサポートされていません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Trigger" /> は、使用中には変更できません。</exception>
    </member>
    <member name="T:System.Windows.TriggerAction">
      <summary>トリガーに対して実行するアクションを表します。</summary>
    </member>
    <member name="T:System.Windows.TriggerActionCollection">
      <summary>
        <see cref="T:System.Windows.TriggerAction" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.TriggerActionCollection" /> クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.#ctor(System.Int32)">
      <summary>指定した初期サイズを持つ、<see cref="T:System.Windows.TriggerActionCollection" /> クラスのインスタンスを初期化します。</summary>
      <param name="initialSize">コレクションのサイズ。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Add(System.Windows.TriggerAction)">
      <summary>項目をコレクションに追加します。</summary>
      <param name="value">追加する <see cref="T:System.Windows.TriggerAction" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Contains(System.Windows.TriggerAction)">
      <summary>指定した <see cref="T:System.Windows.TriggerAction" /> オブジェクトがコレクションに含まれているかどうかを示す値を返します。</summary>
      <param name="value">コレクション内で検索する <see cref="T:System.Windows.TriggerAction" /> オブジェクト。</param>
      <returns>
        <see cref="T:System.Windows.TriggerAction" /> オブジェクトがコレクション内で見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.CopyTo(System.Windows.TriggerAction[],System.Int32)">
      <summary>指定したインデックスを開始位置として、指定した配列にコレクション項目をコピーします。</summary>
      <param name="array">コレクションから項目がコピーされる 1 次元配列。 配列では、0 から始まるインデックスを使用する必要があります。</param>
      <param name="index">コピーの開始位置となる、<paramref name="array" /> の 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.Count">
      <summary>コレクション内の項目の数を取得します。</summary>
      <returns>コレクションに格納されている項目の数。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.IndexOf(System.Windows.TriggerAction)">
      <summary>コレクション内の指定した項目のインデックスを返します。</summary>
      <param name="value">コレクション内で検索する <see cref="T:System.Windows.TriggerAction" /> オブジェクト。</param>
      <returns>
        <see cref="T:System.Windows.TriggerAction" /> オブジェクトがコレクション内で見つかった場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Insert(System.Int32,System.Windows.TriggerAction)">
      <summary>コレクション内の指定したインデックスに、指定した項目を挿入します。</summary>
      <param name="index">
        <paramref name="value" /> を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">コレクションに挿入する <see cref="T:System.Windows.TriggerAction" /> オブジェクト。</param>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.IsReadOnly">
      <summary>コレクションが読み取り専用かどうかを示す値を取得します。</summary>
      <returns>コレクションが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にある項目を取得または設定します。</summary>
      <param name="index">取得または設定する項目の、0 から始まるインデックス。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Windows.TriggerAction" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Remove(System.Windows.TriggerAction)">
      <summary>コレクション内で最初に見つかった指定のオブジェクトを削除します。</summary>
      <param name="value">コレクションから削除する <see cref="T:System.Windows.TriggerAction" /> オブジェクト。</param>
      <returns>アイテムが正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 また、このメソッドは、<see cref="T:System.Windows.TriggerActionCollection" /> にアイテムが見つからなかった場合も false を返します。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.RemoveAt(System.Int32)">
      <summary>コレクション内の指定したインデックス位置にある項目を削除します。</summary>
      <param name="index">削除する項目の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="array">コレクションから項目がコピーされる 1 次元配列。 配列では、0 から始まるインデックスを使用する必要があります。</param>
      <param name="index">コピーの開始位置となる、<paramref name="array" /> の 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Add(System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">
        <see cref="T:System.Object" /> に追加する <see cref="T:System.Collections.IList" />。</param>
      <returns>新しい要素が挿入された位置。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">
        <see cref="T:System.Collections.IList" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>
        <see cref="T:System.Object" /> が <see cref="T:System.Collections.IList" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">
        <see cref="T:System.Collections.IList" /> 内で検索される <see cref="T:System.Object" />。</param>
      <returns>リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="index">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value">
        <see cref="T:System.Collections.IList" /> に挿入する <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#IList#IsFixedSize">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <returns>
        <see langword="true" /> が固定サイズの場合は <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="index">取得または設定する項目の、0 から始まるインデックス。</param>
      <returns>指定したインデックス位置にあるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="value">
        <see cref="T:System.Object" /> から削除する <see cref="T:System.Collections.IList" />。</param>
    </member>
    <member name="T:System.Windows.TriggerBase">
      <summary>
        <see cref="T:System.Windows.Style" /> オブジェクト内の条件値を指定するための基本クラスを表します。</summary>
    </member>
    <member name="P:System.Windows.TriggerBase.EnterActions">
      <summary>トリガー オブジェクトがアクティブになったときに適用する <see cref="T:System.Windows.TriggerAction" /> オブジェクトのコレクションを取得します。 このプロパティは <see cref="T:System.Windows.EventTrigger" /> クラスには適用されません。</summary>
      <returns>既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.TriggerBase.ExitActions">
      <summary>トリガー オブジェクトが非アクティブになったときに適用する <see cref="T:System.Windows.TriggerAction" /> オブジェクトのコレクションを取得します。 このプロパティは <see cref="T:System.Windows.EventTrigger" /> クラスには適用されません。</summary>
      <returns>既定値は <see langword="null" /> です。</returns>
    </member>
    <member name="T:System.Windows.TriggerCollection">
      <summary>
        <see cref="T:System.Windows.TriggerBase" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="P:System.Windows.TriggerCollection.IsSealed">
      <summary>このコレクションが読み取り専用で変更できないかどうかを示す値を取得します。</summary>
      <returns>コレクションが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.ValueSource">
      <summary>
        <see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" /> から返された情報を報告します。</summary>
    </member>
    <member name="P:System.Windows.ValueSource.BaseValueSource">
      <summary>依存関係プロパティ システムに値を提供したソースを報告する、<see cref="T:System.Windows.BaseValueSource" /> 列挙体の値を取得します。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.ValueSource.Equals(System.Object)">
      <summary>この <see cref="T:System.Windows.ValueSource" /> が、指定したオブジェクトに等しいかどうかを示す値を返します。</summary>
      <param name="o">この <see cref="T:System.Windows.ValueSource" /> と比較するオブジェクト。</param>
      <returns>提供されたオブジェクトが現在の <see cref="T:System.Windows.ValueSource" /> と等価である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.ValueSource.GetHashCode">
      <summary>この <see cref="T:System.Windows.ValueSource" /> のハッシュ コードを返します。</summary>
      <returns>32 ビット符号なし整数ハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsAnimated">
      <summary>プロパティがアニメーション化されているかどうかを宣言する値を取得します。</summary>
      <returns>プロパティがアニメーション化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsCoerced">
      <summary>この値が依存関係プロパティに適用される <see cref="T:System.Windows.CoerceValueCallback" /> 実装から生成されたものかどうかを宣言する値を取得します。</summary>
      <returns>値が依存関係プロパティに適用される <see cref="T:System.Windows.CoerceValueCallback" /> 実装から生成されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsCurrent">
      <summary>値が <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> メソッドによって設定されているかどうかを取得します。</summary>
      <returns>値が <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> メソッドによって設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsExpression">
      <summary>この値が評価された式から生成されたものであるかどうかを宣言する値を取得します。 このような式には、バインディングをサポートする <see cref="T:System.Windows.Data.BindingExpression" /> や、DynamicResource マークアップ拡張をサポートする内部式があります。</summary>
      <returns>値が評価された式から導き出された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
      <summary>2 つの <see cref="T:System.Windows.ValueSource" /> インスタンスの値が同一かどうかを判断します。</summary>
      <param name="vs1">比較対象となる最初の <see cref="T:System.Windows.ValueSource" />。</param>
      <param name="vs2">比較対象となる 2 番目の <see cref="T:System.Windows.ValueSource" />。</param>
      <returns>2 つの <see cref="T:System.Windows.ValueSource" /> インスタンスが等価である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
      <summary>2 つの <see cref="T:System.Windows.ValueSource" /> インスタンスの値が同一でないかどうかを判断します。</summary>
      <param name="vs1">比較対象となる最初の <see cref="T:System.Windows.ValueSource" />。</param>
      <param name="vs2">比較対象となる 2 番目の <see cref="T:System.Windows.ValueSource" />。</param>
      <returns>2 つの <see cref="T:System.Windows.ValueSource" /> インスタンスが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.VerticalAlignment">
      <summary>親のレイアウト スロット内での子要素の縦方向の配置方法または拡大方法を表します。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Bottom">
      <summary>子要素を、親のレイアウト スロットの下端に揃えて配置します。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Center">
      <summary>子要素を、親のレイアウト スロットの中央に揃えて配置します。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Stretch">
      <summary>子要素を、親のレイアウト スロット全体に引き伸ばします。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Top">
      <summary>子要素を、親のレイアウト スロットの上端に揃えて配置します。</summary>
    </member>
    <member name="T:System.Windows.VisualState">
      <summary>コントロールが特定の状態のときの外観を表します。</summary>
    </member>
    <member name="M:System.Windows.VisualState.#ctor">
      <summary>
        <see cref="T:System.Windows.VisualState" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.VisualState.Name">
      <summary>
        <see cref="T:System.Windows.VisualState" /> の名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.VisualState" /> の名前。</returns>
    </member>
    <member name="P:System.Windows.VisualState.Storyboard">
      <summary>コントロールが <see cref="T:System.Windows.Media.Animation.Storyboard" /> で表される状態のときに、コントロールの外観を定義する <see cref="T:System.Windows.VisualState" /> を取得または設定します。</summary>
      <returns>コントロールが <see cref="T:System.Windows.VisualState" /> で表される状態のときに、コントロールの外観を定義するストーリーボード。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="T:System.Windows.VisualStateChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> イベントおよび <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.Control">
      <summary>状態が遷移している要素を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.VisualStateGroup" /> が <see cref="T:System.Windows.Controls.ControlTemplate" /> 内にある場合は、状態が遷移している要素。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.NewState">
      <summary>要素の遷移先または遷移後の状態を取得します。</summary>
      <returns>要素の遷移先または遷移後の状態。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.OldState">
      <summary>要素の遷移元または遷移前の状態を取得します。</summary>
      <returns>要素の遷移元または遷移前の状態。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.StateGroupsRoot">
      <summary>
        <see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</returns>
    </member>
    <member name="T:System.Windows.VisualStateGroup">
      <summary>一度に 1 つしか選択できない <see cref="T:System.Windows.VisualState" /> オブジェクトと、ある状態から別の状態に遷移するために使用する <see cref="T:System.Windows.VisualTransition" /> オブジェクトを格納します。</summary>
    </member>
    <member name="M:System.Windows.VisualStateGroup.#ctor">
      <summary>
        <see cref="T:System.Windows.VisualStateGroup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.VisualStateGroup.CurrentState">
      <summary>コントロールに現在適用されている <see cref="T:System.Windows.VisualState" /> を取得します。</summary>
      <returns>コントロールに現在適用されている <see cref="T:System.Windows.VisualState" />。</returns>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanged">
      <summary>コントロールが別の状態に遷移した後に発生します。</summary>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanging">
      <summary>コントロールが別の状態への遷移を開始したときに発生します。</summary>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Name">
      <summary>
        <see cref="T:System.Windows.VisualStateGroup" /> の名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.VisualStateGroup" /> の名前。</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.States">
      <summary>同時に指定できない <see cref="T:System.Windows.VisualState" /> オブジェクトのコレクションを取得します。</summary>
      <returns>同時に指定できない <see cref="T:System.Windows.VisualState" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Transitions">
      <summary>
        <see cref="T:System.Windows.VisualTransition" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.VisualTransition" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="T:System.Windows.VisualStateManager">
      <summary>コントロールの状態を遷移するための状態とロジックを管理します。</summary>
    </member>
    <member name="M:System.Windows.VisualStateManager.#ctor">
      <summary>
        <see cref="T:System.Windows.VisualStateManager" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.VisualStateManager.CustomVisualStateManager">
      <summary>コントロールの状態を遷移させる <see cref="T:System.Windows.VisualStateManager" /> オブジェクトを取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty">
      <summary>
        <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
      <summary>
        <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 添付プロパティを取得します。</summary>
      <param name="obj">
        <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 添付プロパティの取得元の要素。</param>
      <returns>コントロールの状態を切り替える表示状態マネージャー。</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
      <summary>
        <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 添付プロパティを取得します。</summary>
      <param name="obj">
        <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 添付プロパティの取得元の要素。</param>
      <returns>指定したオブジェクトに関連付けられた <see cref="T:System.Windows.VisualStateGroup" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
      <summary>要素を 2 つの状態の間で遷移させます。 このメソッドを使用して、コントロールによって定義された状態ではなく、アプリケーションによって定義された状態に遷移します。</summary>
      <param name="stateGroupsRoot">
        <see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</param>
      <param name="stateName">切り替え先の状態。</param>
      <param name="useTransitions">
        <see cref="T:System.Windows.VisualTransition" /> オブジェクトを使用して状態を遷移させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>コントロールが新しい状態に正常に遷移した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroupsRoot" /> が <see langword="null" /> です。

または -
<paramref name="stateName" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
      <summary>コントロールを 2 つの状態間で切り替えます。 <see cref="T:System.Windows.Controls.ControlTemplate" /> を持つコントロールの状態を遷移させるには、このメソッドを使用します。</summary>
      <param name="control">状態を遷移するコントロール。</param>
      <param name="stateName">切り替え先の状態。</param>
      <param name="useTransitions">
        <see cref="T:System.Windows.VisualTransition" /> オブジェクトを使用して状態を遷移させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>コントロールが新しい状態に正常に遷移した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> は <see langword="null" />です。

または -
<paramref name="stateName" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
      <summary>コントロールは 2 つの状態の間で遷移します。</summary>
      <param name="control">状態を遷移するコントロール。</param>
      <param name="stateGroupsRoot">
        <see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</param>
      <param name="stateName">遷移後の状態の名前。</param>
      <param name="group">状態が属する <see cref="T:System.Windows.VisualStateGroup" />。</param>
      <param name="state">遷移後の状態の表現。</param>
      <param name="useTransitions">
        <see cref="T:System.Windows.VisualTransition" /> オブジェクトを使用して状態を遷移させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>コントロールが新しい状態に正常に遷移した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
      <summary>指定された <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> オブジェクトで <see cref="T:System.Windows.VisualStateGroup" /> イベントを発生させます。</summary>
      <param name="stateGroup">
        <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> イベントが発生したオブジェクト。</param>
      <param name="oldState">コントロールの遷移元の状態。</param>
      <param name="newState">コントロールの遷移先の状態。</param>
      <param name="control">状態が遷移しているコントロール。</param>
      <param name="stateGroupsRoot">
        <see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroupsRoot" /> は <see langword="null" />です。

または -
<paramref name="newState" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
      <summary>指定された <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> オブジェクトで <see cref="T:System.Windows.VisualStateGroup" /> イベントを発生させます。</summary>
      <param name="stateGroup">
        <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> イベントが発生したオブジェクト。</param>
      <param name="oldState">コントロールの遷移元の状態。</param>
      <param name="newState">コントロールの遷移先の状態。</param>
      <param name="control">状態が遷移しているコントロール。</param>
      <param name="stateGroupsRoot">
        <see cref="T:System.Windows.VisualStateManager" /> を含んでいるルート要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroupsRoot" /> は <see langword="null" />です。

または -
<paramref name="newState" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
      <summary>
        <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 添付プロパティを設定します。</summary>
      <param name="obj">プロパティを設定するオブジェクト。</param>
      <param name="value">コントロールの状態を切り替える表示状態マネージャー。</param>
    </member>
    <member name="P:System.Windows.VisualStateManager.VisualStateGroups">
      <summary>
        <see cref="T:System.Windows.VisualStateGroup" /> オブジェクトのコレクションを取得または設定します。</summary>
    </member>
    <member name="F:System.Windows.VisualStateManager.VisualStateGroupsProperty">
      <summary>
        <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.VisualTransition">
      <summary>コントロールの状態が遷移するときに発生する視覚的な動作を表します。</summary>
    </member>
    <member name="M:System.Windows.VisualTransition.#ctor">
      <summary>
        <see cref="T:System.Windows.VisualTransition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.VisualTransition.From">
      <summary>遷移する前の <see cref="T:System.Windows.VisualState" /> の名前を取得または設定します。</summary>
      <returns>遷移する前の <see cref="T:System.Windows.VisualState" /> の名前。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedDuration">
      <summary>状態の遷移に必要な時間を取得または設定します。</summary>
      <returns>状態の遷移に必要な時間。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedEasingFunction">
      <summary>状態間の遷移に使用するカスタムの数式を取得または設定します。</summary>
      <returns>状態間の遷移に使用するカスタムの数式。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.Storyboard">
      <summary>遷移が行われたときに発生する <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得または設定します。</summary>
      <returns>遷移が行われたときに発生する <see cref="T:System.Windows.Media.Animation.Storyboard" />。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.To">
      <summary>遷移した後の <see cref="T:System.Windows.VisualState" /> の名前を取得または設定します。</summary>
      <returns>遷移先の <see cref="T:System.Windows.VisualState" /> の名前。</returns>
    </member>
    <member name="T:System.Windows.Window">
      <summary>ウィンドウおよびダイアログ ボックスの作成、構成、表示、および有効期間の管理を可能にします。</summary>
    </member>
    <member name="M:System.Windows.Window.#ctor">
      <summary>
        <see cref="T:System.Windows.Window" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Window.Activate">
      <summary>ウィンドウを前面にしてアクティブ化することを試みます。</summary>
      <returns>
        <see cref="T:System.Windows.Window" /> が正常にアクティブにされた場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="E:System.Windows.Window.Activated">
      <summary>ウィンドウがフォアグラウンド ウィンドウになったときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Window.AllowsTransparency">
      <summary>ウィンドウのクライアント領域が透過性をサポートするかどうかを示す値を取得または設定します。</summary>
      <returns>ウィンドウで透過性がサポートされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Window.WindowStyle" /> 値が <see cref="F:System.Windows.WindowStyle.None" /> 以外に設定されたウィンドウ。</exception>
    </member>
    <member name="F:System.Windows.Window.AllowsTransparencyProperty">
      <summary>
        <see cref="P:System.Windows.Window.AllowsTransparency" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)">
      <summary>ウィンドウとその子要素を配置したり、サイズを設定したりするには、このメソッドをオーバーライドします。</summary>
      <param name="arrangeBounds">ウィンドウがウィンドウ自体とその子を配置するために使用する、最終的なサイズを反映する <see cref="T:System.Windows.Size" />。</param>
      <returns>使用された実際のサイズを反映する <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Window.Close">
      <summary>
        <see cref="T:System.Windows.Window" /> を手動で閉じます。</summary>
    </member>
    <member name="E:System.Windows.Window.Closed">
      <summary>ウィンドウが閉じるときに発生します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.UIElement.Visibility" /> が設定されているか、ウィンドウを閉じている間に <see cref="M:System.Windows.Window.Show" />、<see cref="M:System.Windows.Window.ShowDialog" />、または <see cref="M:System.Windows.Window.Hide" /> が呼び出されました。</exception>
    </member>
    <member name="E:System.Windows.Window.Closing">
      <summary>
        <see cref="M:System.Windows.Window.Close" /> が呼び出された直後に発生します。これを処理して、ウィンドウが閉じるのをキャンセルすることができます。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.UIElement.Visibility" /> が設定されているか、ウィンドウを閉じている間に <see cref="M:System.Windows.Window.Show" />、<see cref="M:System.Windows.Window.ShowDialog" />、または <see cref="M:System.Windows.Window.Close" /> が呼び出されました。</exception>
    </member>
    <member name="E:System.Windows.Window.ContentRendered">
      <summary>ウィンドウのコンテンツがレンダリングされた後に発生します。</summary>
    </member>
    <member name="E:System.Windows.Window.Deactivated">
      <summary>ウィンドウが背景ウィンドウになったときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Window.DialogResult">
      <summary>ダイアログ ボックスの結果値を取得または設定します。この値は、<see cref="M:System.Windows.Window.ShowDialog" /> メソッドから返される値です。</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> 型の <see cref="T:System.Boolean" /> 値。 既定値は、<see langword="false" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Window.DialogResult" /> を呼び出すことによってウィンドウが開かれる前に <see cref="M:System.Windows.Window.ShowDialog" /> が設定されます。

または -
<see cref="P:System.Windows.Window.DialogResult" /> を呼び出すことによって開かれたウィンドウに <see cref="M:System.Windows.Window.Show" /> が設定されます。</exception>
    </member>
    <member name="E:System.Windows.Window.DpiChanged">
      <summary>Window が表示されている画面の DPI が変更されたあとに発生します。</summary>
    </member>
    <member name="F:System.Windows.Window.DpiChangedEvent">
      <summary>画面 Window の DPI が変更中であるときの <see cref="T:System.Windows.RoutedEvent" />。</summary>
    </member>
    <member name="M:System.Windows.Window.DragMove">
      <summary>ウィンドウのクライアント領域の表示部分でマウスの左ボタンを押したままにすることにより、ウィンドウをドラッグできるようにします。</summary>
      <exception cref="T:System.InvalidOperationException">マウスの左ボタンが押されていません。</exception>
    </member>
    <member name="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)">
      <summary>依存関係オブジェクトが存在するコンテンツ ツリーをホストする <see cref="T:System.Windows.Window" /> オブジェクトへの参照を返します。</summary>
      <param name="dependencyObject">依存関係オブジェクト。</param>
      <returns>ホスト ウィンドウへの <see cref="T:System.Windows.Window" /> 参照。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Window.Hide">
      <summary>ウィンドウを非表示にします。</summary>
      <exception cref="T:System.InvalidOperationException">閉じている途中 (<see cref="M:System.Windows.Window.Hide" />) または閉じた (<see cref="E:System.Windows.Window.Closing" />) ウィンドウに対して <see cref="E:System.Windows.Window.Closed" /> が呼び出されている。</exception>
    </member>
    <member name="P:System.Windows.Window.Icon">
      <summary>ウィンドウのアイコンを取得または設定します。</summary>
      <returns>アイコンを表す <see cref="T:System.Windows.Media.ImageSource" /> オブジェクト。</returns>
    </member>
    <member name="F:System.Windows.Window.IconProperty">
      <summary>
        <see cref="P:System.Windows.Window.Icon" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Window.IsActive">
      <summary>ウィンドウがアクティブかどうかを示す値を取得します。</summary>
      <returns>ウィンドウがアクティブの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="F:System.Windows.Window.IsActiveProperty">
      <summary>
        <see cref="P:System.Windows.Window.IsActive" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Window.Left">
      <summary>ウィンドウの左端の位置を、デスクトップとの関係で取得または設定します。</summary>
      <returns>ウィンドウの左端の位置。単位は論理単位 (1/96 インチ)。</returns>
    </member>
    <member name="F:System.Windows.Window.LeftProperty">
      <summary>
        <see cref="P:System.Windows.Window.Left" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Window.LocationChanged">
      <summary>ウィンドウの場所が変更されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Window.LogicalChildren">
      <summary>ウィンドウの論理上の子要素に対する列挙子を取得します。</summary>
      <returns>ウィンドウの論理上の子要素に対する <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
      <summary>ウィンドウのサイズを測定するには、このメソッドをオーバーライドします。</summary>
      <param name="availableSize">このウィンドウが子に提供できる有効なサイズを反映する <see cref="T:System.Windows.Size" />。 値として無限大を指定すると、ウィンドウのサイズをあらゆるコンテンツに合わせることができます。</param>
      <returns>このウィンドウが、子のサイズの計算に基づいて、レイアウト時に必要だと判断するサイズを反映する <see cref="T:System.Windows.Size" />。</returns>
    </member>
    <member name="M:System.Windows.Window.OnActivated(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Window.Activated" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnClosed(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Window.Closed" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>
        <see cref="E:System.Windows.Window.Closing" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldContent">古いコンテンツ ツリーのルートへの参照。</param>
      <param name="newContent">新しいコンテンツ ツリーのルートへの参照。</param>
    </member>
    <member name="M:System.Windows.Window.OnContentRendered(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Window.ContentRendered" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnCreateAutomationPeer">
      <summary>この <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> に対応する <see cref="T:System.Windows.Window" /> オブジェクトを作成して返します。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> に対応する <see cref="T:System.Windows.Window" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Window.OnDeactivated(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Window.Deactivated" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
      <summary>このウィンドウが表示される DPI が変更するときに呼び出されます。</summary>
      <param name="oldDpi">以前の DPI スケール設定。</param>
      <param name="newDpi">新規の DPI スケール設定。</param>
    </member>
    <member name="M:System.Windows.Window.OnLocationChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Window.LocationChanged" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> イベントが発生すると呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Window.SourceInitialized" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnStateChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Window.StateChanged" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>この <see cref="T:System.Windows.Window" /> オブジェクトの <see cref="T:System.Windows.Media.VisualCollection" /> が変更されると呼び出されます。</summary>
      <param name="visualAdded">コレクションに追加された <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="visualRemoved">コレクションから削除された <see cref="T:System.Windows.Media.Visual" />。</param>
    </member>
    <member name="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>ウィンドウの親が変更されると呼び出されます。</summary>
      <param name="oldParent">直前の親。 <see cref="T:System.Windows.DependencyObject" /> の直前の親が存在しない場合は null に設定されます。</param>
    </member>
    <member name="P:System.Windows.Window.OwnedWindows">
      <summary>このウィンドウがオーナー ウィンドウとなっているウィンドウのコレクションを取得します。</summary>
      <returns>このウィンドウがオーナー ウィンドウとなっているウィンドウへの参照を含む <see cref="T:System.Windows.WindowCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Window.Owner">
      <summary>この <see cref="T:System.Windows.Window" /> を所有する <see cref="T:System.Windows.Window" /> を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Window" /> のオーナー ウィンドウを表す <see cref="T:System.Windows.Window" /> オブジェクト。</returns>
      <exception cref="T:System.ArgumentException">ウィンドウがそのウィンドウ自体を所有しようとしています。

または -

2 つのウィンドウが相互に所有しようとしています。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Window.Owner" /> プロパティが、表示されているウィンドウで <see cref="M:System.Windows.Window.ShowDialog" /> を使用して設定されています。

または -
<see cref="P:System.Windows.Window.Owner" /> プロパティが、まだ表示されていないウィンドウに設定されています。</exception>
    </member>
    <member name="P:System.Windows.Window.ResizeMode">
      <summary>サイズ変更モードを取得または設定します。</summary>
      <returns>サイズ変更モードを指定する <see cref="T:System.Windows.ResizeMode" /> 値。</returns>
    </member>
    <member name="F:System.Windows.Window.ResizeModeProperty">
      <summary>
        <see cref="P:System.Windows.Window.ResizeMode" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Window.RestoreBounds">
      <summary>最小化または最大化される前のウィンドウのサイズと位置を取得します。</summary>
      <returns>最小化または最大化される前のウィンドウのサイズと位置を指定する <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="M:System.Windows.Window.Show">
      <summary>ウィンドウを開き、開いたウィンドウが閉じるのを待機せずに制御を戻します。</summary>
      <exception cref="T:System.InvalidOperationException">閉じている途中 (<see cref="M:System.Windows.Window.Show" />) または閉じた (<see cref="E:System.Windows.Window.Closing" />) ウィンドウに対して <see cref="E:System.Windows.Window.Closed" /> が呼び出されている。</exception>
    </member>
    <member name="P:System.Windows.Window.ShowActivated">
      <summary>ウィンドウをアクティブ状態で初期表示するかどうかを示す値を取得または設定します。</summary>
      <returns>ウィンドウを初期表示するときにアクティブ化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="F:System.Windows.Window.ShowActivatedProperty">
      <summary>
        <see cref="P:System.Windows.Window.ShowActivated" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Window.ShowDialog">
      <summary>ウィンドウを開き、開いたウィンドウが閉じた場合にのみ制御を戻します。</summary>
      <returns>アクティビティが受け入れられた (<see langword="true" />) か、取り消された (<see langword="false" />) かを示す <see cref="T:System.Nullable`1" /> 型の <see cref="T:System.Boolean" /> 値。 この戻り値は、ウィンドウが閉じる前の <see cref="P:System.Windows.Window.DialogResult" /> プロパティの値です。</returns>
      <exception cref="T:System.InvalidOperationException">閉じている途中 (<see cref="M:System.Windows.Window.ShowDialog" />) または閉じた (<see cref="E:System.Windows.Window.Closing" />) ウィンドウに対して <see cref="E:System.Windows.Window.Closed" /> が呼び出されている。</exception>
    </member>
    <member name="P:System.Windows.Window.ShowInTaskbar">
      <summary>ウィンドウにタスク バー ボタンがあるかどうかを示す値を取得または設定します。</summary>
      <returns>ウィンドウにタスク バー ボタンがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 ブラウザー内でウィンドウがホストされている場合は適用されません。</returns>
    </member>
    <member name="F:System.Windows.Window.ShowInTaskbarProperty">
      <summary>
        <see cref="P:System.Windows.Window.ShowInTaskbar" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Window.SizeToContent">
      <summary>ウィンドウのサイズがコンテンツのサイズに合わせて自動的に調整されるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.SizeToContent" /> 値。 既定値は、<see cref="F:System.Windows.SizeToContent.Manual" /> です。</returns>
    </member>
    <member name="F:System.Windows.Window.SizeToContentProperty">
      <summary>
        <see cref="P:System.Windows.Window.SizeToContent" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="E:System.Windows.Window.SourceInitialized">
      <summary>このイベントは、Win32 との相互運用をサポートするために発生します。 以下を参照してください。<see cref="T:System.Windows.Interop.HwndSource" /></summary>
    </member>
    <member name="E:System.Windows.Window.StateChanged">
      <summary>ウィンドウの <see cref="P:System.Windows.Window.WindowState" /> プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Window.TaskbarItemInfo">
      <summary>
        <see cref="T:System.Windows.Window" /> の Windows 7 タスク バーのサムネイルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Window" /> の Windows 7 タスク バーのサムネイル。</returns>
    </member>
    <member name="F:System.Windows.Window.TaskbarItemInfoProperty">
      <summary>
        <see cref="P:System.Windows.Window.TaskbarItemInfo" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Window.Title">
      <summary>ウィンドウのタイトルを取得または設定します。</summary>
      <returns>ウィンドウのタイトルを格納する <see cref="T:System.String" />。</returns>
    </member>
    <member name="F:System.Windows.Window.TitleProperty">
      <summary>
        <see cref="P:System.Windows.Window.Title" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Window.Top">
      <summary>ウィンドウの上端の位置を、デスクトップとの関係で取得または設定します。</summary>
      <returns>ウィンドウの上端の位置。単位は論理単位 (1/96 インチ)。</returns>
    </member>
    <member name="P:System.Windows.Window.Topmost">
      <summary>ウィンドウが最上位 z オーダーで表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>ウィンドウが最上位の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="F:System.Windows.Window.TopmostProperty">
      <summary>
        <see cref="P:System.Windows.Window.Topmost" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Window.TopProperty">
      <summary>
        <see cref="P:System.Windows.Window.Top" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Window.WindowStartupLocation">
      <summary>最初に表示するときのウィンドウの位置を取得または設定します。</summary>
      <returns>ウィンドウが最初に表示されたときの左上の位置を指定する <see cref="T:System.Windows.WindowStartupLocation" /> 値。 既定値は、<see cref="F:System.Windows.WindowStartupLocation.Manual" /> です。</returns>
    </member>
    <member name="P:System.Windows.Window.WindowState">
      <summary>ウィンドウが元のサイズに戻されているか、最小化されているか、最大化されているかを示す値を取得または設定します。</summary>
      <returns>ウィンドウが元のサイズに戻されているか、最小化されているか、最大化されているかを判断する <see cref="T:System.Windows.WindowState" />。 既定値は、<see cref="F:System.Windows.WindowState.Normal" /> (元のサイズに戻されている) です。</returns>
    </member>
    <member name="F:System.Windows.Window.WindowStateProperty">
      <summary>
        <see cref="P:System.Windows.Window.WindowState" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Window.WindowStyle">
      <summary>ウィンドウの枠線のスタイルを取得または設定します。</summary>
      <returns>ウィンドウの境界線スタイルを指定する <see cref="T:System.Windows.WindowStyle" />。 既定値は、<see cref="F:System.Windows.WindowStyle.SingleBorderWindow" /> です。</returns>
    </member>
    <member name="F:System.Windows.Window.WindowStyleProperty">
      <summary>
        <see cref="P:System.Windows.Window.WindowStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.WindowCollection">
      <summary>
        <see cref="T:System.Windows.Window" /> オブジェクトのコレクションを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Windows.WindowCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.WindowCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.WindowCollection.CopyTo(System.Windows.Window[],System.Int32)">
      <summary>指定したインデックスを開始位置として、コレクション内の各 <see cref="T:System.Windows.Window" /> オブジェクトを配列にコピーします。</summary>
      <param name="array">コレクション内の <see cref="T:System.Windows.Window" /> オブジェクトのコピー先となる、<see cref="T:System.Windows.Window" /> 型の配列。</param>
      <param name="index">コピーを開始するコレクション内の位置。</param>
    </member>
    <member name="P:System.Windows.WindowCollection.Count">
      <summary>
        <see cref="T:System.Windows.Window" /> に含まれる <see cref="T:System.Windows.WindowCollection" /> オブジェクトの数を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Window" /> に含まれる <see cref="T:System.Windows.WindowCollection" /> オブジェクトの数。</returns>
    </member>
    <member name="M:System.Windows.WindowCollection.GetEnumerator">
      <summary>コレクション内の <see cref="T:System.Collections.IEnumerator" /> オブジェクトを列挙するために使用できる <see cref="T:System.Windows.Window" /> を返します。</summary>
      <returns>コレクション内の <see cref="T:System.Collections.IEnumerator" /> オブジェクトを列挙するために使用できる <see cref="T:System.Windows.Window" />。</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.IsSynchronized">
      <summary>
        <see cref="T:System.Windows.WindowCollection" /> オブジェクトがスレッド セーフであるかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" />オブジェクトがスレッドセーフである場合は。それ以外<see langword="false" />の場合は。</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.Item(System.Int32)">
      <summary>指定したインデックスにある <see cref="T:System.Windows.Window" /> または <see cref="T:System.Windows.Navigation.NavigationWindow" /> オブジェクトを取得します。</summary>
      <param name="index">指定した <see cref="T:System.Windows.Window" /> または <see cref="T:System.Windows.Navigation.NavigationWindow" /> のインデックス。</param>
      <returns>
        <see cref="T:System.Windows.Window" /> または <see cref="T:System.Windows.Navigation.NavigationWindow" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.SyncRoot">
      <summary>コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>コレクションへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> のトピックを参照してください。</summary>
      <param name="array">
        <see cref="T:System.Windows.WindowCollection" /> からコピーされた項目を受け取る、0 から始まる <see cref="T:System.Array" />。</param>
      <param name="index">指定した <see cref="T:System.Array" /> 内の、内容のコピー開始位置。</param>
    </member>
    <member name="T:System.Windows.WindowStartupLocation">
      <summary>
        <see cref="T:System.Windows.Window" /> を最初に開いたときに表示される位置を指定します。 <see cref="P:System.Windows.Window.WindowStartupLocation" /> プロパティで使用します。</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.CenterOwner">
      <summary>
        <see cref="T:System.Windows.Window" /> の初期表示位置は、それを所有する <see cref="T:System.Windows.Window" /> (<see cref="P:System.Windows.Window.Owner" /> プロパティで指定) の中央です。</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.CenterScreen">
      <summary>
        <see cref="T:System.Windows.Window" /> の初期表示位置は、マウス カーソルが表示されている画面の中央です。</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.Manual">
      <summary>
        <see cref="T:System.Windows.Window" /> の初期表示位置は、コードから設定されるか、または Windows の既定の位置に従います。</summary>
    </member>
    <member name="T:System.Windows.WindowState">
      <summary>ウィンドウを最小化するか、最大化するか、元のサイズに戻すかを指定します。 <see cref="P:System.Windows.Window.WindowState" /> プロパティで使用します。</summary>
    </member>
    <member name="F:System.Windows.WindowState.Maximized">
      <summary>ウィンドウを最大化します。</summary>
    </member>
    <member name="F:System.Windows.WindowState.Minimized">
      <summary>ウィンドウを最小化します。</summary>
    </member>
    <member name="F:System.Windows.WindowState.Normal">
      <summary>ウィンドウを元に戻します。</summary>
    </member>
    <member name="T:System.Windows.WindowStyle">
      <summary>
        <see cref="T:System.Windows.Window" /> の境界線の種類を指定します。 <see cref="P:System.Windows.Window.WindowStyle" /> プロパティで使用します。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.None">
      <summary>クライアント領域のみが表示され、タイトル バーと境界線は表示されません。 <see cref="T:System.Windows.Navigation.NavigationWindow" /> が <see cref="P:System.Windows.Window.WindowStyle" /> の <see cref="F:System.Windows.WindowStyle.None" /> には、ナビゲーション ユーザー インターフェイス (UI) が表示されます。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.SingleBorderWindow">
      <summary>1 つの境界線を含むウィンドウ。 これが既定値です。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.ThreeDBorderWindow">
      <summary>3-D 境界線を含むウィンドウ。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.ToolWindow">
      <summary>固定ツール ウィンドウ。</summary>
    </member>
    <member name="T:System.Windows.WrapDirection">
      <summary>オブジェクトの周りでコンテンツをラップする際に使用できる方向を指定します。</summary>
    </member>
    <member name="F:System.Windows.WrapDirection.Both">
      <summary>コンテンツはオブジェクトの両側でフローします。</summary>
    </member>
    <member name="F:System.Windows.WrapDirection.Left">
      <summary>コンテンツはオブジェクトの左側でのみフローします。</summary>
    </member>
    <member name="F:System.Windows.WrapDirection.None">
      <summary>コンテンツはオブジェクトの周囲でフローしません。</summary>
    </member>
    <member name="F:System.Windows.WrapDirection.Right">
      <summary>コンテンツはオブジェクトの右側でのみフローします。</summary>
    </member>
  </members>
</doc>