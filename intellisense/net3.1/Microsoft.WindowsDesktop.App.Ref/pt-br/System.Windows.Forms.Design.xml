<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Forms.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary>Estende o comportamento do modo de design de um componente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary>Obtém as listas de ação de tempo de design com suporte pelo componente associado ao designer.</summary>
      <returns>As listas de ação de tempo de design com suporte do componente associado ao designer.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary>Obtém a coleção de componentes associados ao componente gerenciado pelo designer.</summary>
      <returns>Os componentes associados ao componente gerenciado pelo designer.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary>Obtém o componente que deste designer está criando.</summary>
      <returns>O componente gerenciado pelo designer.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary>Libera todos os recursos usados pelo <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary>Cria uma assinatura de método no arquivo de código-fonte para o evento padrão no componente e navega o cursor do usuário para essa localização.</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">Uma tentativa de fazer check-out de um arquivo verificado em um programa de gerenciamento do código-fonte falhou.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary>Tenta recuperar o tipo de serviço especificado do site no modo de design do componente do designer.</summary>
      <param name="serviceType">O tipo de serviço a ser solicitado.</param>
      <returns>Um objeto que implementará o serviço solicitado ou <see langword="null" />, se o serviço não puder ser resolvido.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary>Obtém um atributo que indica o tipo de herança do componente associado.</summary>
      <returns>O <see cref="T:System.ComponentModel.InheritanceAttribute" /> para o componente associado.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary>Obtém um valor que indica se este componente é herdado.</summary>
      <returns>
        <see langword="true" /> se o componente for herdado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepara o designer para exibir, editar e criar o componente especificado.</summary>
      <param name="component">O componente para este designer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Reinicializa um componente existente.</summary>
      <param name="defaultValues">Um dicionário de nome/valor de valores padrão a ser aplicado a propriedades. Poderá ser <see langword="null" /> se nenhum valor padrão for especificado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Inicializa um componente recém-criado.</summary>
      <param name="defaultValues">Um dicionário de nome/valor de valores padrão a ser aplicado a propriedades. Poderá ser <see langword="null" /> se nenhum valor padrão for especificado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary>Inicializa as configurações de um componente importado que já foi inicializado para as configurações que não sejam os padrões.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary>Obtém o <see cref="T:System.ComponentModel.InheritanceAttribute" /> do <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> especificado.</summary>
      <param name="toInvoke">O <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> cujo atributo de herança será recuperado.</param>
      <returns>O <see cref="T:System.ComponentModel.InheritanceAttribute" /> do designer especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary>Define as propriedades padrão do componente.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary>Obtém o componente pai para este designer.</summary>
      <returns>O componente pai desse designer ou <see langword="null" /> se esse designer for o componente raiz.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Permite que um designer altere ou remova itens do conjunto de atributos que ele expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">Os atributos para a classe do componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Permite que um designer altere ou remova itens do conjunto de eventos que ele expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">Os eventos para a classe do componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>Permite que um designer altere ou remova itens do conjunto de propriedades que ele expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">As propriedades da classe do componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Permite um designer seja adicionado ao conjunto de atributos que ele expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">Os atributos para a classe do componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Permite um designer seja adicionado ao conjunto de eventos que ele expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">Os eventos para a classe do componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Permite que um designer adicione ao conjunto de propriedades que ele expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">As propriedades da classe do componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>Notifica o <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> de que este componente foi alterado.</summary>
      <param name="member">Um <see cref="T:System.ComponentModel.MemberDescriptor" /> que indica o membro que foi alterado.</param>
      <param name="oldValue">O valor antigo do membro.</param>
      <param name="newValue">O novo valor do membro.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary>Notifica o <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> de que este componente está prestes a ser alterado.</summary>
      <param name="member">Um <see cref="T:System.ComponentModel.MemberDescriptor" /> que indica o membro que está prestes a ser alterado.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary>Obtém uma coleção de valores de propriedade que substituem as configurações do usuário.</summary>
      <returns>Um <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> que indica as propriedades de sombra do documento de design.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary>Representa uma coleção de propriedades de sombra que devem substituir valores padrão ou atribuídos herdados para propriedades específicas. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary>Indica se uma propriedade que corresponde ao nome especificado existe na coleção.</summary>
      <param name="propertyName">O nome da propriedade a ser verificada na coleção.</param>
      <returns>
        <see langword="true" /> se a propriedade existir na coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary>Obtém ou define o objeto no índice especificado.</summary>
      <param name="propertyName">O nome da propriedade a ser acessada na coleção.</param>
      <returns>O valor da propriedade especificada, se existir na coleção. Caso contrário, o valor será recuperado do valor atual da propriedade não sombreada.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Para obter uma descrição desse membro, consulte o método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes">Os objetos <see cref="T:System.Attribute" /> para a classe do componente. As chaves no dicionário de atributos são os valores <see cref="P:System.Attribute.TypeId" /> dos atributos.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>Para obter uma descrição desse membro, consulte o método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events">Os objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representam os eventos da classe do componente. As chaves no dicionário de eventos são nomes de evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>Para obter uma descrição desse membro, consulte o método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties">Os objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representam as propriedades da classe do componente. As chaves no dicionário de propriedades são nomes de propriedade.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Para obter uma descrição desse membro, consulte o método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes">Os objetos <see cref="T:System.Attribute" /> para a classe do componente. As chaves no dicionário de atributos são os valores <see cref="P:System.Attribute.TypeId" /> dos atributos.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>Para obter uma descrição desse membro, consulte o método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events">Os objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representam os eventos da classe do componente. As chaves no dicionário de eventos são nomes de evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>Para obter uma descrição desse membro, consulte o método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties">Os objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representam as propriedades da classe do componente. As chaves no dicionário de propriedades são nomes de propriedade.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary>Para obter uma descrição desse membro, consulte o propriedade <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" />.</summary>
      <returns>Um <see cref="T:System.Collections.ICollection" /> que contém a coleção de <see cref="T:System.ComponentModel.Design.IDesigner" /> designers contidos no designer pai atual.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary>Para obter uma descrição desse membro, consulte o propriedade <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" />.</summary>
      <returns>Um <see cref="T:System.ComponentModel.Design.IDesigner" /> que representa o designer pai ou <see langword="null" /> se não houver nenhum pai.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary>Obtém os verbos de tempo de design com suporte pelo componente associado ao designer.</summary>
      <returns>Uma <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> de objetos <see cref="T:System.ComponentModel.Design.DesignerVerb" /> ou <see langword="null" /> se nenhum verbo do designer estiver disponível. Essa implementação padrão sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary>Representa um item de cabeçalho estático em um painel de marcações inteligentes. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> usando a cadeia de caracteres de nome fornecida.</summary>
      <param name="displayName">O texto a ser exibido para o cabeçalho.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> usando as cadeias de caracteres de nome e de categoria fornecidas.</summary>
      <param name="displayName">O texto a ser exibido para o cabeçalho.</param>
      <param name="category">O <see cref="T:System.String" /> que diferencia maiúsculas de minúsculas que define os agrupamentos de entradas de painel.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary>Fornece a classe base para tipos que representam um item do painel no painel de marcações inteligentes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</summary>
      <param name="displayName">O texto do painel para este item.</param>
      <param name="category">O <see cref="T:System.String" /> que diferencia maiúsculas de minúsculas que define os agrupamentos de entradas de painel.</param>
      <param name="description">Texto suplementar para este item, potencialmente usados em dicas de ferramenta ou a barra de status.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary>Obtém ou define um valor que indica se você deseja permitir que este item seja colocado em um grupo de itens que têm o mesmo valor da propriedade <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" />.</summary>
      <returns>
        <see langword="true" />Se o item puder ser agrupado; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary>Obtém o nome do grupo para um item.</summary>
      <returns>Uma cadeia de caracteres que representa o grupo do qual o item é membro.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary>Obtém o texto suplementar para o item.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o texto descritivo para o item.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary>Obtém o texto para esse item.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o texto de exibição do item.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary>Obtém uma referência a uma coleção que pode ser usada para armazenar pares chave-valor definidos pelo programador.</summary>
      <returns>Uma coleção que implementa <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary>Obtém ou define um valor que indica se esse item aparece na exibição de código-fonte.</summary>
      <returns>
        <see langword="true" />Se este item aparecer no modo de exibição de código-fonte; caso contrário <see langword="false" />,. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary>Representa uma coleção de objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> .</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Adiciona o <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> fornecido à coleção atual.</summary>
      <param name="value">O <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> a ser adicionado.</param>
      <returns>O índice <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> no qual o valor foi adicionado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Determina se o <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contém um elemento específico.</summary>
      <param name="value">O <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> a ser localizado no <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contém o valor especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary>Copia os elementos da coleção atual para a matriz especificada, começando no índice de matriz especificado.</summary>
      <param name="array">A matriz <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> unidimensional que é o destino dos elementos copiados da coleção atual. A matriz deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Determina o índice de um item específico na coleção.</summary>
      <param name="value">O <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> a ser localizado na coleção.</param>
      <returns>O índice baseado em zero da primeira ocorrência de <paramref name="value" /> em todo o <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />, se encontrado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary>Insere um elemento no <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />, no índice especificado.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> deve ser inserido.</param>
      <param name="value">O <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> a ser inserido.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary>Obtém ou define o elemento no índice especificado.</summary>
      <param name="index">O índice baseado em zero do elemento.</param>
      <returns>O <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> no índice especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Remove a primeira ocorrência de um objeto específico do <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
      <param name="value">O <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> a ser removido de <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary>Fornece a classe base para tipos que definem uma lista de itens usados para criar um painel de marcação inteligente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="component">Um componente relacionado ao <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary>Obtém ou define um valor que indica se o painel de marcações inteligentes deve ser exibido automaticamente quando ele é criado.</summary>
      <returns>
        <see langword="true" />Se o painel deve ser mostrado quando o componente proprietário é criado; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary>Obtém o componente relacionado a <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns>Um componente relacionado ao <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary>Retorna um objeto que representa um serviço fornecido pelo componente associado ao <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="serviceType">Um serviço fornecido pelo <see cref="T:System.ComponentModel.Component" />.</param>
      <returns>Um <see cref="T:System.Object" /> que representa um serviço fornecido pelo <see cref="T:System.ComponentModel.Component" />. Esse valor é <see langword="null" /> se o <see cref="T:System.ComponentModel.Component" /> não fornece o serviço especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary>Retorna a coleção de objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> contidos na lista.</summary>
      <returns>A matriz <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que contém os itens nessa lista.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary>Representa uma coleção de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> .</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> com as configurações padrão.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> com os itens de painel especificados.</summary>
      <param name="value">A matriz de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> para popular a coleção.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary>Adiciona o <see cref="T:System.ComponentModel.Design.DesignerActionList" /> fornecido à coleção atual.</summary>
      <param name="value">O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a ser adicionado.</param>
      <returns>A posição na qual o novo elemento é inserido na lista interna da coleção.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary>Adiciona os elementos da matriz <see cref="T:System.ComponentModel.Design.DesignerActionList" /> fornecida ao fim da coleção atual.</summary>
      <param name="value">A matriz de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a ser adicionada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Adiciona os elementos da <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> fornecida ao fim da coleção atual.</summary>
      <param name="value">O <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary>Indica se a coleção contém um valor específico.</summary>
      <param name="value">O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a ser pesquisado.</param>
      <returns>
        <see langword="true" /> se a coleção contiver o valor especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary>Copia os elementos da coleção atual para a matriz especificada, começando no índice de matriz especificado.</summary>
      <param name="array">A matriz unidimensional do tipo <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que é o destino dos elementos copiados da coleção atual. A matriz deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.
- ou -
O número de elementos na coleção atual é maior que o espaço disponível do <paramref name="index" /> no final da matriz de destino.</exception>
      <exception cref="T:System.InvalidCastException">Ocorreu um problema ao converter os elementos da coleção atual para o tipo da matriz de destino, talvez como resultado de um downcast com falha.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary>Determina o índice de um item específico na coleção.</summary>
      <param name="value">O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a ser localizado na coleção.</param>
      <returns>O índice de <paramref name="value" /> se encontrado na lista interna; caso contrário, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary>Insere o <see cref="T:System.ComponentModel.Design.DesignerActionList" /> fornecido na coleção na posição especificada.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> deve ser inserido.</param>
      <param name="value">O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a ser inserido na coleção.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que 0 ou maior que a contagem de elementos na coleção atual.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary>Obtém ou define o elemento no índice especificado.</summary>
      <param name="index">O índice baseado em zero do elemento.</param>
      <returns>O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> no índice especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary>Executa processos personalizados adicionais ao validar um valor.</summary>
      <param name="value">O objeto a ser validado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>Remove a primeira ocorrência de um <see cref="T:System.ComponentModel.Design.DesignerActionList" /> específico da coleção.</summary>
      <param name="value">O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a ser removido da coleção atual.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary>Fornece dados para o evento de <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> .</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />.</summary>
      <param name="relatedObject">O objeto associado à coleção.</param>
      <param name="changeType">Um valor que especifica se um <see cref="T:System.ComponentModel.Design.DesignerActionList" /> foi adicionado ou removido da coleção.</param>
      <param name="actionLists">A coleção de elementos de lista depois que a ação foi aplicada.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>Obtém a coleção de objetos de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> associados a este evento.</summary>
      <returns>Um <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que representa o estado atual da coleção.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>Obtém um sinalizador que indica se um elemento foi adicionado ou removido da coleção de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns>Um <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" /> que indica o tipo de alteração.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>Obtém o objeto associado à coleção de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns>O <see cref="T:System.Object" /> associado ao gerenciado <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary>Representa o método que manipulará o evento de <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> de <see cref="T:System.ComponentModel.Design.DesignerActionService" />. Essa classe não pode ser herdada.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary>Especifica o tipo de alteração que ocorrem em uma coleção de objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary>Um ou mais objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> foram adicionados à coleção.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary>Um ou mais objetos <see cref="T:System.ComponentModel.Design.DesignerActionList" /> foram removidos da coleção.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary>Representa um item do painel de marcações inteligentes que está associado a um método em uma classe derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> com os nomes de exibição e de método especificados.</summary>
      <param name="actionList">O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contém o método ao qual este item está associado.</param>
      <param name="memberName">O nome que diferencia maiúsculas e minúsculas do método na classe derivado de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a ser invocado por meio do item do painel.</param>
      <param name="displayName">O texto do painel para este item.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> com os nomes de método e de exibição especificados e um sinalizador que indica se o item deve aparecer em outros contextos de interface do usuário.</summary>
      <param name="actionList">O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contém o método ao qual este item está associado.</param>
      <param name="memberName">O nome que diferencia maiúsculas e minúsculas do método na classe derivado de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a ser invocado por meio do item do painel.</param>
      <param name="displayName">O texto do painel para este item.</param>
      <param name="includeAsDesignerVerb">Um sinalizador que especifica se também devemos tratar o método associado como um verbo do designer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> com os nomes de exibição, de método e de categoria especificados.</summary>
      <param name="actionList">O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contém o método ao qual este item está associado.</param>
      <param name="memberName">O nome que diferencia maiúsculas e minúsculas do método na classe derivado de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a ser invocado por meio do item do painel.</param>
      <param name="displayName">O texto do painel para este item.</param>
      <param name="category">O <see cref="T:System.String" /> que diferencia maiúsculas e minúsculas usado para agrupar itens semelhantes no painel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> com os nomes de exibição, de método e de categoria especificados e um sinalizador que indica se o item deve aparecer em outros contextos de interface do usuário.</summary>
      <param name="actionList">O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contém o método ao qual este item está associado.</param>
      <param name="memberName">O nome que diferencia maiúsculas e minúsculas do método na classe derivado de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a ser invocado por meio do item do painel.</param>
      <param name="displayName">O texto do painel para este item.</param>
      <param name="category">O <see cref="T:System.String" /> que diferencia maiúsculas e minúsculas usado para agrupar itens semelhantes no painel.</param>
      <param name="includeAsDesignerVerb">Um sinalizador que especifica se também devemos tratar o método associado como um verbo do designer para o componente associado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> com o texto de exibição e de descrição e os nomes de categoria e de método especificados.</summary>
      <param name="actionList">O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contém o método ao qual este item está associado.</param>
      <param name="memberName">O nome que diferencia maiúsculas e minúsculas do método na classe derivado de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a ser invocado por meio do item do painel.</param>
      <param name="displayName">O texto do painel para este item.</param>
      <param name="category">O <see cref="T:System.String" /> que diferencia maiúsculas e minúsculas usado para agrupar itens semelhantes no painel.</param>
      <param name="description">Texto suplementar para este item, usado em dicas de ferramenta ou na barra de status.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> com o texto de exibição e de descrição e os nomes de método e de categoria especificados, bem como um sinalizador que indica se o item deve aparecer em outros contextos de interface do usuário.</summary>
      <param name="actionList">O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contém o método ao qual este item está associado.</param>
      <param name="memberName">O nome que diferencia maiúsculas e minúsculas do método na classe derivado de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a ser invocado por meio do item do painel.</param>
      <param name="displayName">O texto do painel para este item.</param>
      <param name="category">O <see cref="T:System.String" /> que diferencia maiúsculas e minúsculas usado para agrupar itens semelhantes no painel.</param>
      <param name="description">Texto suplementar para este item, usado em dicas de ferramenta ou na barra de status.</param>
      <param name="includeAsDesignerVerb">Um sinalizador que especifica se também devemos tratar o método associado como um verbo do designer para o componente associado.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary>Obtém um valor que indica que o <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> deve aparecer em outros contextos de interface do usuário.</summary>
      <returns>
        <see langword="true" />Se o item deve ser usado em menus de atalho; caso contrário <see langword="false" />,. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary>O método associado ao <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> é executado programaticamente.</summary>
      <exception cref="T:System.InvalidOperationException">O método nomeado em <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> não pode ser localizado.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary>Obtém o nome do método com o qual este <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> está associado.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o nome do método associado.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary>Obtém ou define um componente que contribui com os respectivos objetos <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> para o painel atual.</summary>
      <returns>O componente que contribui, que deve ter um designer associado que forneça itens.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary>Representa um item do painel que está associado a uma propriedade em uma classe derivada de <see cref="T:System.ComponentModel.Design.DesignerActionList" />. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> com os nomes de exibição e de propriedade especificados.</summary>
      <param name="memberName">O nome que diferencia maiúsculas e minúsculas da propriedade associada a este item de painel.</param>
      <param name="displayName">O texto do painel para este item.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> com o texto de exibição e os nomes de categoria e de propriedade especificados.</summary>
      <param name="memberName">O nome que diferencia maiúsculas e minúsculas da propriedade associada a este item de painel.</param>
      <param name="displayName">O texto do painel para este item.</param>
      <param name="category">O <see cref="T:System.String" /> que diferencia maiúsculas e minúsculas usado para agrupar itens semelhantes no painel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> com o texto de exibição e de descrição e os nomes de categoria e de propriedade especificados.</summary>
      <param name="memberName">O nome que diferencia maiúsculas e minúsculas da propriedade associada a este item de painel.</param>
      <param name="displayName">O texto do painel para este item.</param>
      <param name="category">O <see cref="T:System.String" /> que diferencia maiúsculas e minúsculas usado para agrupar itens semelhantes no painel.</param>
      <param name="description">Texto suplementar para este item, usado em dicas de ferramenta ou na barra de status.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary>Obtém o nome da propriedade à qual este item está associado.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o nome da propriedade associada.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary>Obtém ou define um componente que contribui com os respectivos itens no painel atual.</summary>
      <returns>O componente que contribui, que deve ter um designer associado que <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> fornece objetos.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary>Estabelece um serviço de tempo de design que gerencia a coleção de objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> para os componentes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
      <param name="serviceProvider">O provedor de serviços para o ambiente de tempo de design atual.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>Adiciona um <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à coleção atual de marcações inteligentes gerenciadas.</summary>
      <param name="comp">O <see cref="T:System.ComponentModel.IComponent" /> com o qual associar as marcações inteligentes.</param>
      <param name="actionList">O <see cref="T:System.ComponentModel.Design.DesignerActionList" /> que contém os novos itens de marcação inteligente a serem adicionados.</param>
      <exception cref="T:System.ArgumentNullException">Um ou ambos os parâmetros são <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Adiciona um <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> à coleção atual de marcações inteligentes gerenciadas.</summary>
      <param name="comp">O <see cref="T:System.ComponentModel.IComponent" /> com o qual associar as marcações inteligentes.</param>
      <param name="designerActionListCollection">O <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contém os novos itens de marcação inteligente a serem adicionados.</param>
      <exception cref="T:System.ArgumentNullException">Um ou ambos os parâmetros são <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary>Libera todos os componentes de gerenciamento e limpa todas as listas de marcação inteligente do modelo de push.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary>Determina se o serviço de marcação inteligente atual gerencia as listas de ação para o componente especificado.</summary>
      <param name="comp">O <see cref="T:System.ComponentModel.IComponent" /> a ser pesquisado.</param>
      <returns>
        <see langword="true" /> se o componente é gerenciado pelo serviço atual; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> é <see langword="null" />.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary>Ocorre quando um <see cref="T:System.ComponentModel.Design.DesignerActionList" /> é removido ou adicionado para qualquer componente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary>Libera todos os recursos usados pela classe <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.ComponentModel.Design.DesignerActionService" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary>Retorna a coleção de listas de itens de marcações inteligentes associadas a um componente.</summary>
      <param name="component">O componente ao qual as marcações inteligentes são associadas.</param>
      <returns>A coleção de marcações inteligentes para o componente especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.Windows.Forms.Design.ComponentActionsType)">
      <param name="component" />
      <param name="type" />
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Recupera as marcações inteligentes do modelo de pull associadas ao componente.</summary>
      <param name="component">O componente ao qual as marcações inteligentes são associadas.</param>
      <param name="actionLists">A coleção à qual adicionar as marcações inteligentes associadas.</param>
      <exception cref="T:System.ArgumentNullException">Um ou ambos os parâmetros são <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Recupera as marcações inteligentes do modelo de push associadas ao componente.</summary>
      <param name="component">O componente ao qual as marcações inteligentes são associadas.</param>
      <param name="actionLists">A coleção à qual adicionar as marcações inteligentes associadas.</param>
      <exception cref="T:System.ArgumentNullException">Um ou ambos os parâmetros são <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>Remove a lista de marcações inteligentes de todos os componentes gerenciados pelo serviço atual.</summary>
      <param name="actionList">A lista de marcações inteligentes a ser removida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actionList" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary>Remove todas as listas de marcações inteligentes associadas ao componente especificado.</summary>
      <param name="comp">O componente do qual desassociar as marcações inteligentes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>Remove a lista de marcações inteligentes especificada do componente especificado.</summary>
      <param name="comp">O componente do qual desassociar as marcações inteligentes.</param>
      <param name="actionList">A lista de marcações inteligentes a ser removida.</param>
      <exception cref="T:System.ArgumentNullException">Um ou ambos os parâmetros são <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary>Representa um item de texto estático em um painel de marcações inteligentes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" />.</summary>
      <param name="displayName">O texto do painel para este item.</param>
      <param name="category">A categoria usada para agrupar itens semelhantes no painel.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary>Gerencia a IU (interface do usuário) para um painel de marcações inteligentes. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary>Ocorre quando uma solicitação é feita para mostrar ou ocultar um painel de marcações inteligentes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary>Libera todos os recursos usados pela classe <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary>Oculta o painel de marcações inteligentes para um componente.</summary>
      <param name="component">O componente cujo painel de marcações inteligentes deve ser ocultada.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary>Atualiza o painel de marcações inteligentes.</summary>
      <param name="component">O <see cref="T:System.ComponentModel.IComponent" /> a atualizar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary>Indica se o painel de marcações inteligentes deve ser mostrado automaticamente.</summary>
      <param name="component">O <see cref="T:System.ComponentModel.IComponent" /> a ser exibido automaticamente.</param>
      <returns>
        <see langword="true" /> para mostrar automaticamente o painel de marcações inteligentes; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary>Exibe o painel de marcações inteligentes para um componente.</summary>
      <param name="component">O componente cujo painel de marcações inteligentes deve ser mostrado.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary>Fornece dados para o evento de <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> .</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />.</summary>
      <param name="relatedObject">O objeto associado ao painel.</param>
      <param name="changeType">Um valor que especifica se o painel está sendo exibido ou oculto.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary>Obtém um sinalizador que indica se o painel de marcações inteligentes está sendo exibido ou oculto.</summary>
      <returns>Um <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" /> que indica o estado do painel.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary>Obtém o objeto associado ao painel de marcações inteligentes.</summary>
      <returns>O <see cref="T:System.Object" /> associado ao painel de marcas inteligentes.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary>Representa o método que manipulará o evento de <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> de <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
      <param name="sender">O <see cref="T:System.Object" /> que acionou o evento.</param>
      <param name="e">As informações específicas do evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary>Especifica o estado de exibição de um painel de marcações inteligentes.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary>O painel de marcações inteligentes está sendo oculto.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary>O painel de marcações inteligentes está sendo atualizado.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary>O painel de marcações inteligentes está sendo exibido.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary>Representa uma classe base para as ferramentas de tempo de design, não derivadas de <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, que fornecem funcionalidades de verbo do designer ou de marcações inteligente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary>Inicializa uma instância da classe <see cref="T:System.ComponentModel.Design.DesignerCommandSet" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary>Obtém a coleção de todas as marcações inteligentes associadas ao componente projetado.</summary>
      <returns>Um <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> que contém as marcas inteligentes para o componente projetado associado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary>Retorna uma coleção de objetos de comando.</summary>
      <param name="name">O tipo de coleção a retornar, indicando um <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> ou um <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />.</param>
      <returns>Uma coleção que contém o tipo especificado – <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ou <see cref="T:System.ComponentModel.Design.DesignerVerb" /> – de objetos de comando. A implementação base sempre retorna <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary>Obtém a coleção de todos os verbos de designer associados ao componente projetado.</summary>
      <returns>Um <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> que contém os verbos do designer para o componente projetado associado.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary>Apresenta uma interface do usuário para a criação de componentes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="parentProvider">O provedor de serviço pai ou <see langword="null" /> se não houver nenhum pai usado para resolver serviços.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="parentProvider">O provedor de serviço pai ou <see langword="null" /> se não houver nenhum pai usado para resolver serviços.</param>
      <param name="rootComponentType">O tipo de componente raiz a ser criado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="rootComponentType">O tipo de componente raiz a ser criado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary>Inicia o processo de carregamento com o carregador de designer fornecido.</summary>
      <param name="loader">O carregador de designer a ser usado para carregar o designer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary>Inicia o processo de carregamento.</summary>
      <param name="rootComponentType">O tipo de componente a ser criado no modo de design.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponentType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary>Obtém a implementação de <see cref="T:System.ComponentModel.IContainer" /> na superfície de design.</summary>
      <returns>A implementação de <see cref="T:System.ComponentModel.IContainer" /> dentro da superfície de design.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary>Cria uma instância de um componente.</summary>
      <param name="componentType">O tipo de componente a ser criado.</param>
      <returns>O componente recém-criado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary>Cria um designer quando um componente é adicionado ao contêiner.</summary>
      <param name="component">O componente para o qual o designer deve ser criado.</param>
      <param name="rootDesigner">
        <see langword="true" /> para criar um designer raiz; <see langword="false" /> para criar um designer normal.</param>
      <returns>Uma instância do designer solicitado ou <see langword="null" />, se nenhum designer correspondente pôde ser encontrado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary>Cria uma instância do tipo fornecido.</summary>
      <param name="type">O tipo a ser criado.</param>
      <returns>O objeto recém-criado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary>Cria um contêiner adequado para aninhar controles ou componentes.</summary>
      <param name="owningComponent">O componente que gerencia o contêiner aninhado.</param>
      <returns>O contêiner aninhado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary>Cria um contêiner adequado para aninhar controles ou componentes.</summary>
      <param name="owningComponent">O componente que gerencia o contêiner aninhado.</param>
      <param name="containerName">Um nome adicional para o contêiner aninhado.</param>
      <returns>O contêiner aninhado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary>Libera os recursos usados pelo <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary>Libera os recursos usados pelo <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary>Ocorre quando a superfície de design é descartada.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary>Obtém um valor que indica se a Lista de Erros de Tempo de Design está carregando.</summary>
      <returns>
        <see langword="true" /> se o tempo de Design lista de erros está sendo carregado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary>Serializa alterações para a superfície de design.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary>Ocorre quando uma chamada é feita para o método <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> de <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary>Obtém um serviço de contêiner de serviço.</summary>
      <param name="serviceType">O tipo de serviço a ser recuperado.</param>
      <returns>Um objeto que implementa <paramref name="serviceType" /> ou é uma classe derivada dele ou então <see langword="null" />, se o serviço não existe no contêiner de serviço.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary>Obtém um valor que indica se a superfície de design está atualmente carregada.</summary>
      <returns>
        <see langword="true" /> se a superfície de design está carregada no momento; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary>Ocorre após a conclusão do carregamento do designer.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary>Retorna uma coleção de carregamento de erros ou uma coleção nula.</summary>
      <returns>Um <see cref="T:System.Collections.ICollection" /> de erros de carregamento.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary>Ocorre quando o designer está prestes a ser carregado.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary>Aciona o evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />.</summary>
      <param name="e">Um <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary>Aciona o evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" />.</summary>
      <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary>Aciona o evento <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" />.</summary>
      <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary>Aciona o evento <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" />.</summary>
      <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary>Aciona o evento <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />.</summary>
      <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary>Obtém o contêiner de serviço.</summary>
      <returns>O contêiner de serviço que fornece todos os serviços para os designers contidos na superfície de design.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary>Ocorre quando o descarregamento de um designer foi concluído.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary>Ocorre quando um designer está prestes a ser descarregado.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary>Obtém a exibição do designer raiz.</summary>
      <returns>A exibição do designer raiz.</returns>
      <exception cref="T:System.InvalidOperationException">A superfície de design não está carregando, o carregador de designer ainda não criou um designer raiz ou o carregamento da superfície de design foi concluído, mas falhou. Mais informações podem estar disponíveis no <see cref="P:System.Exception.InnerException" />.</exception>
      <exception cref="T:System.NotSupportedException">O designer foi carregado, mas não oferece uma exibição compatível com essa superfície de design.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary>Ocorre quando o método <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> foi chamado em <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary>Representa a coleção de exceções.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="exceptions">Uma matriz do tipo <see cref="T:System.Exception" /> que contém os objetos usados para popular a coleção.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary>Obtém uma matriz de objetos <see cref="T:System.Exception" /> que representa a coleção de exceções.</summary>
      <returns>Uma matriz de <see cref="T:System.Exception" /> que representa a coleção de exceções.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula um <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar o <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser preenchido com dados.</param>
      <param name="context">O destino (consulte <see cref="T:System.Runtime.Serialization.StreamingContext" />) dessa serialização.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary>Define os serviços de resolução de nome de tipo de vários destinos em um ambiente de tempo de design.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary>Resolve um tipo para a estrutura de destino para um nome qualificado pelo assembly.</summary>
      <param name="type">O tipo a ser resolvido.</param>
      <returns>O <see cref="P:System.Type.AssemblyQualifiedName" /> para <paramref name="type" /> na estrutura de destino.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary>Fornece um conjunto de métodos para identificar os componentes herdados.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Adiciona os componentes herdados pelo componente especificado ao <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="component">O componente a pesquisar para os componentes herdados a adicionar o contêiner especificado.</param>
      <param name="container">O contêiner ao qual adicionar os componentes herdados.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Adiciona os componentes do tipo especificado que são herdados pelo componente especificado para o <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="type">O tipo base a ser pesquisado.</param>
      <param name="component">O componente a pesquisar para os componentes herdados a adicionar o contêiner especificado.</param>
      <param name="container">O contêiner ao qual adicionar os componentes herdados.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary>Libera todos os recursos usados pelo <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.ComponentModel.Design.InheritanceService" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>Obtém o atributo de herança do componente especificado.</summary>
      <param name="component">O componente para o qual recuperar o atributo de herança.</param>
      <returns>Um <see cref="T:System.ComponentModel.InheritanceAttribute" /> que descreve o nível de herança do qual esse componente é proveniente.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary>Indica se o membro especificado deve ser ignorado.</summary>
      <param name="member">O membro a verificar. Esse membro é um <see cref="T:System.Reflection.FieldInfo" /> ou um <see cref="T:System.Reflection.MethodInfo" />.</param>
      <param name="component">A instância do componente à qual este membro está associado.</param>
      <returns>
        <see langword="true" /> se o membro especificado precisar ser incluído no conjunto de componentes herdados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary>Fornece dados para o evento de <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> . Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />.</summary>
      <param name="succeeded">
        <see langword="true" /> para indicar que a carga do designer foi bem-sucedida; caso contrário, <see langword="false" />.</param>
      <param name="errors">Uma coleção de erros que ocorreram durante o carregamento do designer.</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary>Obtém uma coleção de erros que ocorreram durante o carregamento do designer.</summary>
      <returns>Uma coleção de erros que ocorreram durante o carregamento do designer.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary>Obtém um valor que indica se a carga do designer foi bem-sucedida.</summary>
      <returns>
        <see langword="true" />Se o carregamento do designer foi bem-sucedido; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary>Representa o método que manipulará o evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> da classe <see cref="T:System.ComponentModel.Design.DesignSurface" />. Essa classe não pode ser herdada.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary>Especifica a estrutura de destino de um projeto.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" />.</summary>
      <param name="targetFrameworkMoniker">A estrutura de destino do projeto.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary>Obtém a estrutura de destino do projeto.</summary>
      <returns>A estrutura de destino do projeto.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary>Serializa um conjunto de componentes em um repositório de serialização.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> usando o provedor de serviços para resolver serviços.</summary>
      <param name="provider">Um <see cref="T:System.IServiceProvider" /> a ser usado para resolver serviços.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary>Cria um novo <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <returns>Um novo repositório de serialização.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>Desserializa o repositório indicado para produzir uma coleção de objetos.</summary>
      <param name="store">O <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> do qual os objetos serão desserializados.</param>
      <returns>Uma coleção de componentes desserializados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> não é um tipo de repositório de serialização com suporte. Use um repositório retornado por <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>Desserializa o repositório fornecido e popula o <see cref="T:System.ComponentModel.IContainer" /> fornecido com objetos <see cref="T:System.ComponentModel.IComponent" /> desserializados.</summary>
      <param name="store">O <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> do qual os objetos serão desserializados.</param>
      <param name="container">Um contêiner ao qual objetos <see cref="T:System.ComponentModel.IComponent" /> serão adicionados.</param>
      <returns>Uma coleção de componentes desserializados.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> ou <paramref name="container" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> não é um tipo de repositório de serialização com suporte. Use um repositório retornado por <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>Desserializa o <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> fornecido para o contêiner fornecido aplicando, opcionalmente, valores de propriedade padrão.</summary>
      <param name="store">O <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> do qual os objetos serão desserializados.</param>
      <param name="container">Um contêiner de objetos aos quais os dados serão aplicados.</param>
      <param name="validateRecycledTypes">
        <see langword="true" /> para validar o tipo reciclado; caso contrário, <see langword="false" />.</param>
      <param name="applyDefaults">
        <see langword="true" /> para aplicar os valores de propriedade padrão; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> ou <paramref name="container" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> não é um tipo de repositório de serialização com suporte. Use um repositório retornado por <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>Carrega um <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> do fluxo fornecido.</summary>
      <param name="stream">O fluxo do qual carregar o <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</param>
      <returns>O <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> carregado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="stream" /> dá suporte a busca, mas seu tamanho é 0.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Serializa o objeto fornecido para o <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> fornecido.</summary>
      <param name="store">O <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> para o qual <paramref name="value" /> será serializado.</param>
      <param name="value">O objeto a ser serializado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> está fechado ou <paramref name="store" /> não é um tipo de repositório de serialização compatível. Use um repositório retornado por <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Serializa o objeto fornecido, considerando valores de propriedade padrão.</summary>
      <param name="store">O <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> para o qual <paramref name="value" /> será serializado.</param>
      <param name="value">O objeto a ser serializado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> está fechado ou <paramref name="store" /> não é um tipo de repositório de serialização compatível. Use um repositório retornado por <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializa o membro fornecido no objeto especificado.</summary>
      <param name="store">O <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> para o qual <paramref name="member" /> será serializado.</param>
      <param name="owningObject">O objeto que detém o <paramref name="member" />.</param>
      <param name="member">O membro fornecido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />, <paramref name="owningObject" /> ou <paramref name="member" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> está fechado ou <paramref name="store" /> não é um tipo suportado de repositório de serialização. Use um repositório retornado por <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializa o membro fornecido no objeto fornecido, mas também serializa o membro se ele contém o valor da propriedade padrão.</summary>
      <param name="store">O <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> para o qual <paramref name="member" /> será serializado.</param>
      <param name="owningObject">O objeto que detém o <paramref name="member" />.</param>
      <param name="member">O membro fornecido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />, <paramref name="owningObject" /> ou <paramref name="member" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> está fechado ou <paramref name="store" /> não é um tipo suportado de repositório de serialização. Use um repositório retornado por <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary>Serializa um grafo de objeto em uma série de instruções CodeDOM. Essa classe fornece uma classe base abstrata para um serializador.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Desserializa o objeto CodeDOM serializado especificado em um objeto.</summary>
      <param name="manager">Uma interface do gerenciador de serialização que é usada durante o processo de desserialização.</param>
      <param name="codeObject">Um objeto CodeDOM serializado para desserializar.</param>
      <returns>O objeto CodeDOM desserializado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="codeObject" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeObject" /> é um elemento de código sem suporte.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>Desserializa uma única instrução.</summary>
      <param name="manager">O gerenciador de serialização a ser usado para serialização.</param>
      <param name="statement">A instrução a ser desserializada.</param>
      <returns>Uma instância de objeto resultante da desserialização de <paramref name="statement" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary>Determina a qual grupo de instruções a instrução fornecida deve pertencer.</summary>
      <param name="statement">O <see cref="T:System.CodeDom.CodeStatement" /> para a qual determinar o grupo.</param>
      <param name="expression">Um <see cref="T:System.CodeDom.CodeExpression" /> que <paramref name="statement" /> foi reduzido para.</param>
      <param name="targetType">O <see cref="T:System.Type" /> de <paramref name="statement" />.</param>
      <returns>O nome do componente com que <paramref name="statement" /> deve ser agrupado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializa o objeto especificado em um objeto CodeDOM.</summary>
      <param name="manager">O gerenciador de serialização a ser usado durante a serialização.</param>
      <param name="value">O objeto a ser serializado.</param>
      <returns>Um objeto CodeDOM que representa o objeto que foi serializado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializa o objeto fornecido, considerando valores padrão.</summary>
      <param name="manager">O gerenciador de serialização a ser usado para serialização.</param>
      <param name="value">O objeto a ser serializado.</param>
      <returns>Um objeto CodeDom que representa <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializa o membro fornecido no objeto especificado.</summary>
      <param name="manager">O gerenciador de serialização a ser usado para serialização.</param>
      <param name="owningObject">O objeto ao qual é <paramref name="member" /> anexado.</param>
      <param name="member">O nome do membro a serializar.</param>
      <returns>Um <see cref="T:System.CodeDom.CodeStatementCollection" /> que representa o estado serializado do <paramref name="member" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="owningObject" /> ou <paramref name="member" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> não é um tipo serializável.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializa o membro fornecido, considerando valores padrão.</summary>
      <param name="manager">O gerenciador de serialização a ser usado para serialização.</param>
      <param name="owningObject">O objeto ao qual é <paramref name="member" /> anexado.</param>
      <param name="member">O nome do membro a serializar.</param>
      <returns>Um objeto CodeDom que representa <paramref name="member" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="owningObject" /> ou <paramref name="member" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> não é um tipo serializável.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializa o valor especificado para uma expressão CodeDOM.</summary>
      <param name="manager">O gerenciador de serialização a ser usado durante a serialização.</param>
      <param name="value">O objeto a ser serializado.</param>
      <returns>O valor serializado. Isso retorna <see langword="null" /> se nenhuma expressão de referência pode ser obtida para o valor especificado ou se o valor não pode ser serializado.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary>Fornece uma classe base para as classes <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary>Desserializa a expressão especificada em um objeto na memória.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="name">O nome do objeto que resulta da expressão. Pode ser <see langword="null" /> se não é necessário nomear o objeto.</param>
      <param name="expression">O <see cref="T:System.CodeDom.CodeExpression" /> a interpretar.</param>
      <returns>Um objeto resultante da interpretação de <paramref name="expression" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary>Retorna uma instância do tipo fornecido.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="type">O <see cref="T:System.Type" /> da instância a retornar.</param>
      <param name="parameters">A lista de parâmetros a serem transmitidos ao construtor para <paramref name="type" />.</param>
      <param name="name">O nome do objeto desserializado.</param>
      <param name="addToContainer">
        <see langword="true" /> para adicionar esse objeto para o contêiner de design; caso contrário, <see langword="false" />. O objeto deve implementar <see cref="T:System.ComponentModel.IComponent" /> para que isso tenha algum efeito.</param>
      <returns>Uma instância de <paramref name="type" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Desserializa as propriedades em determinado objeto do grupo de recursos da cultura invariável.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="value">O objeto do qual as propriedades devem ser desserializadas.</param>
      <param name="filter">Uma matriz de <see cref="T:System.Attribute" /> que filtra as propriedades que serão desserializadas.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>Desserializa uma instrução, interpretando e executando uma instrução de CodeDOM.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="statement">O <see cref="T:System.CodeDom.CodeStatement" /> a ser desserializado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Obtém uma coleção de atributos conforme definido na versão de destino do projeto do .NET Framework.</summary>
      <param name="manager">O gerenciador de serialização.</param>
      <param name="type">O tipo de destino.</param>
      <returns>Uma coleção de atributos conforme definido na versão de destino do projeto do .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Obtém uma coleção de atributos conforme definido na versão de destino do projeto do .NET Framework.</summary>
      <param name="manager">O gerenciador de serialização.</param>
      <param name="instance">Um objeto do tipo de destino.</param>
      <returns>Uma coleção de atributos conforme definido na versão de destino do projeto do .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Obtém uma coleção de eventos conforme definido na versão de destino do projeto do .NET Framework.</summary>
      <param name="manager">O gerenciador de serialização.</param>
      <param name="instance">Um objeto do tipo de destino.</param>
      <param name="attributes">Uma matriz de atributos para passar para a versão de destino do .NET Framework.</param>
      <returns>Uma coleção de eventos conforme definido na versão de destino do projeto do .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Retorna uma expressão para o objeto fornecido.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="value">O objeto para o qual obter uma expressão.</param>
      <returns>Um <see cref="T:System.CodeDom.CodeExpression" /> representando <paramref name="value" /> ou <see langword="null" />, se não houver nenhuma expressão existente para <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Obtém uma coleção de propriedades conforme definido na versão de destino do projeto do .NET Framework.</summary>
      <param name="manager">O gerenciador de serialização.</param>
      <param name="instance">Um objeto do tipo de destino.</param>
      <param name="attributes">Uma matriz de atributos para passar para a versão de destino do .NET Framework.</param>
      <returns>Uma coleção de propriedades conforme definido na versão de destino do projeto do .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Obtém um tipo de reflexão gerado com base em metadados de tipo.</summary>
      <param name="manager">O gerenciador de serialização.</param>
      <param name="type">O tipo do qual usar metadados.</param>
      <returns>Um tipo de reflexão gerado com base nos metadados de <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Obtém um tipo de reflexão gerado com base em metadados de objeto.</summary>
      <param name="manager">O gerenciador de serialização.</param>
      <param name="instance">O objeto do qual usar metadados.</param>
      <returns>Um tipo de reflexão gerado com base nos metadados de <paramref name="object" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Localiza um serializador para o valor do objeto especificado.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="value">O objeto que especifica o serializador a recuperar.</param>
      <returns>Um <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> que é apropriado para <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Localiza um serializador para o tipo especificado.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="valueType">O <see cref="T:System.Type" /> que especifica o serializador a recuperar.</param>
      <returns>Um <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> que é apropriado para <paramref name="valueType" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="valueType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary>Obtém um <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> que está ciente da versão de destino do .NET Framework, para uso na filtragem de tipo.</summary>
      <param name="provider">O serviço de provedor de descrição de tipo.</param>
      <param name="instance">Um objeto do qual o serviço de provedor de descrição de tipo pode ser derivado se <paramref name="provider" /> é <see langword="null" />.</param>
      <returns>Um provedor de descrição de tipo ciente do .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Retorna um nome exclusivo para o objeto fornecido.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="value">O objeto para o qual o nome será recuperado.</param>
      <returns>Um nome exclusivo para o <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Retorna um valor que indica se o objeto fornecido foi serializado.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="value">O objeto a ser testado para serialização anterior.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> foi serializado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>Retorna um valor que indica se o objeto fornecido foi serializado, considerando opcionalmente expressões predefinidas.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="value">O objeto a ser testado para serialização anterior.</param>
      <param name="honorPreset">
        <see langword="true" /> para incluir expressões predefinidas; caso contrário, <see langword="false" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> foi serializado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary>Retorna uma expressão que representa a criação do objeto especificado.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="value">O objeto a ser serializado.</param>
      <param name="isComplete">
        <see langword="true" /> se <paramref name="value" /> foi totalmente serializado; caso contrário, <see langword="false" />.</param>
      <returns>Uma expressão que representa a criação de <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary>Serializa o evento especificado na coleção de instruções especificada.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="statements">O <see cref="T:System.CodeDom.CodeStatementCollection" /> no qual o evento será serializado.</param>
      <param name="value">O objeto ao qual <paramref name="descriptor" /> está associado.</param>
      <param name="descriptor">Um <see cref="T:System.ComponentModel.EventDescriptor" /> especificando o evento a serializar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> ou <paramref name="descriptor" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> não está disponível.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Serializa os eventos especificados na coleção de instruções especificada.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="statements">O <see cref="T:System.CodeDom.CodeStatementCollection" /> no qual o evento será serializado.</param>
      <param name="value">O objeto no qual eventos serão serializados.</param>
      <param name="filter">Uma matriz de <see cref="T:System.Attribute" /> que filtra quais eventos serão serializados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" /> ou <paramref name="statements" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Serializa as propriedades no objeto especificado na coleção de instruções especificada.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="statements">O <see cref="T:System.CodeDom.CodeStatementCollection" /> no qual as propriedades serão serializadas.</param>
      <param name="value">O objeto no qual as propriedades serão serializadas.</param>
      <param name="filter">Uma matriz de <see cref="T:System.Attribute" /> que filtra as propriedades que serão serializadas.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" /> ou <paramref name="statements" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Serializa as propriedades no objeto fornecido para o pacote de recursos da cultura invariável.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="statements">Não usado.</param>
      <param name="value">O objeto cujas propriedades serão serializadas.</param>
      <param name="filter">Uma matriz de <see cref="T:System.Attribute" /> que filtra as propriedades que serão serializadas.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" /> ou <paramref name="statements" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary>Serializa uma propriedade no objeto especificado.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="statements">O <see cref="T:System.CodeDom.CodeStatementCollection" /> no qual a propriedade será serializada.</param>
      <param name="value">O objeto no qual a propriedade será serializada.</param>
      <param name="propertyToSerialize">A propriedade a serializar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> ou <paramref name="propertyToSerialize" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>Serializa o objeto fornecido em um pacote de recursos usando o nome do recurso especificado.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="resourceName">O nome do pacote de recursos no qual <paramref name="value" /> será serializado.</param>
      <param name="value">O objeto a ser serializado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>Serializa o objeto fornecido em um pacote de recursos usando o nome do recurso especificado.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="resourceName">O nome do pacote de recursos no qual <paramref name="value" /> será serializado.</param>
      <param name="value">O objeto a ser serializado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializa o objeto fornecido em uma expressão.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="value">O objeto a ser serializado. Pode ser <see langword="null" />.</param>
      <returns>Um objeto <see cref="T:System.CodeDom.CodeExpression" /> se <paramref name="value" /> pode ser serializado; caso contrário, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializa o objeto fornecido em uma expressão.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="value">O objeto a ser serializado.</param>
      <returns>Um <see cref="T:System.CodeDom.CodeExpression" /> contendo <paramref name="value" /> como uma expressão serializada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>Serializa o objeto fornecido em uma expressão apropriada para a cultura invariável.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="value">O objeto a ser serializado.</param>
      <param name="ensureInvariant">
        <see langword="true" /> para serializar para a cultura invariável; caso contrário, <see langword="false" />.</param>
      <returns>Um <see cref="T:System.CodeDom.CodeExpression" /> contendo <paramref name="value" /> como uma expressão serializada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary>Associa um objeto com uma expressão.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="value">O objeto a ser serializado.</param>
      <param name="expression">O <see cref="T:System.CodeDom.CodeExpression" /> com o qual associar <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" /> ou <paramref name="expression" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>Associa um objeto com uma expressão especificando, opcionalmente, uma expressão predefinida.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado para serialização.</param>
      <param name="value">O objeto a ser serializado.</param>
      <param name="expression">O <see cref="T:System.CodeDom.CodeExpression" /> com o qual associar <paramref name="value" />.</param>
      <param name="isPreset">
        <see langword="true" /> para especificar uma expressão predefinida; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary>A exceção que é gerada quando informações de número de linha estão disponíveis para um erro de serialização.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> usando a exceção especificada e as informações de linha.</summary>
      <param name="ex">A exceção para lançar.</param>
      <param name="linePragma">Um <see cref="T:System.CodeDom.CodeLinePragma" /> que indica o local em que a exceção ocorreu.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />.</summary>
      <param name="ex">A exceção para lançar.</param>
      <param name="manager">O objeto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> do qual extrair o contexto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> usando a mensagem especificada e as informações de linha.</summary>
      <param name="message">Uma mensagem que descreve a exceção.</param>
      <param name="linePragma">Um <see cref="T:System.CodeDom.CodeLinePragma" /> que indica o local em que a exceção ocorreu.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />.</summary>
      <param name="message">Uma mensagem que descreve a exceção.</param>
      <param name="manager">O objeto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> do qual extrair o contexto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Define o objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com o nome do parâmetro e informações adicionais de exceção.</summary>
      <param name="info">Armazena os dados que estavam sendo usados para serializar ou desserializar o objeto que o <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> estava serializando ou desserializando.</param>
      <param name="context">Descreve a origem e o destino do fluxo que gerou a exceção, além de um meio para que a serialização retenha esse contexto e um contexto adicional definido pelo chamador.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary>Obtém ou define as informações de linha para o erro associado a essa exceção.</summary>
      <returns>Um <see cref="T:System.CodeDom.CodeLinePragma" /> que indica as informações de linha para o erro.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary>Serializa coleções.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary>Verifica o suporte à serialização pelo <paramref name="method" />.</summary>
      <param name="method">O <see cref="T:System.Reflection.MethodInfo" /> a verificar quanto a atributos de serialização.</param>
      <returns>
        <see langword="true" /> se o <paramref name="method" /> dá suporte à serialização; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializa a determinada coleção em um objeto CodeDOM.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado durante a serialização.</param>
      <param name="value">O objeto a ser serializado.</param>
      <returns>Um objeto CodeDOM que representa <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Serializa a coleção especificada.</summary>
      <param name="manager">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> a ser usado durante a serialização.</param>
      <param name="targetExpression">O <see cref="T:System.CodeDom.CodeExpression" /> que se refere à coleção</param>
      <param name="targetType">O <see cref="T:System.Type" /> da coleção.</param>
      <param name="originalCollection">A coleção para serializar.</param>
      <param name="valuesToSerialize">Os valores para serializar.</param>
      <returns>Coleção serializada se o processo de serialização foi bem-sucedido; caso contrário, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" /> ou <paramref name="valuesToSerialize" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary>Fornece uma implementação da interface <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> com o provedor de serviços fornecido.</summary>
      <param name="provider">Um <see cref="T:System.IServiceProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary>Obtém ou define o contêiner para este gerenciador de serialização.</summary>
      <returns>O <see cref="T:System.ComponentModel.IContainer" /> para o qual o Gerenciador de serialização adicionará componentes.</returns>
      <exception cref="T:System.InvalidOperationException">O gerenciador de serialização tem uma sessão de serialização ativa.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Cria uma instância de um tipo.</summary>
      <param name="type">O tipo do qual criar uma instância.</param>
      <param name="arguments">Os parâmetros do construtor do tipo. Isso pode ser <see langword="null" /> ou uma coleção vazia para invocar o construtor sem parâmetros.</param>
      <param name="name">Um nome a ser dado ao objeto. Se for <see langword="null" />, o objeto não terá um nome, a menos que o objeto seja adicionado a um contêiner e o contêiner forneça um nome ao objeto.</param>
      <param name="addToContainer">
        <see langword="true" /> para adicionar o objeto ao contêiner, se o objeto implementa <see cref="T:System.ComponentModel.IComponent" />; caso contrário, <see langword="false" />.</param>
      <returns>Uma nova instância do tipo especificado por <paramref name="type" />.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="type" /> não tem um construtor que aceite parâmetros contidos em <paramref name="arguments" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary>Cria uma nova sessão de serialização.</summary>
      <returns>Um <see cref="T:System.IDisposable" /> que representa uma nova sessão de serialização.</returns>
      <exception cref="T:System.InvalidOperationException">O gerenciador de serialização já está dentro de uma sessão. Esta versão do <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> não dá suporte a sessões simultâneas.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary>Obtém a lista de erros que ocorreram durante a serialização ou desserialização.</summary>
      <returns>A lista de erros que ocorreram durante a serialização ou desserialização.</returns>
      <exception cref="T:System.InvalidOperationException">Essa propriedade foi acessada fora de uma sessão de serialização.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary>Obtém o tipo correspondente ao nome do tipo especificado.</summary>
      <param name="typeName">O nome do tipo a ser obtido.</param>
      <returns>O tipo especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>Obtém o serializador para o tipo de objeto especificado.</summary>
      <param name="objectType">O tipo de objeto para o qual recuperar o serializador.</param>
      <param name="serializerType">O tipo do serializador a ser recuperado.</param>
      <returns>O serializador para <paramref name="objectType" /> ou, se ele não for encontrado, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> ou <paramref name="serializerType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary>Obtém o serviço solicitado.</summary>
      <param name="serviceType">O tipo de serviço a ser recuperado.</param>
      <returns>O serviço solicitado ou <see langword="null" /> se o serviço não puder ser resolvido.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary>Obtém o tipo solicitado.</summary>
      <param name="typeName">O nome do tipo a ser recuperado.</param>
      <returns>O tipo solicitado ou, se o tipo não pode ser resolvido, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary>Aciona o evento <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />.</summary>
      <param name="e">Um <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary>Aciona o evento <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />.</summary>
      <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary>Aciona o evento <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />.</summary>
      <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary>Obtém ou define um valor que indica se o método <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> deve verificar a presença do nome fornecido no contêiner.</summary>
      <returns>
        <see langword="true" />Se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> passará o nome do componente fornecido; <see langword="false" /> se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />  o irá verificar a presença do nome fornecido no contêiner. O padrão é <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Essa propriedade foi alterada de dentro de uma sessão de serialização.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary>Obtém o objeto que deve ser usado para fornecer as propriedades a propriedade <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> do gerenciador de serialização.</summary>
      <returns>O objeto que deve ser usado para fornecer propriedades para a propriedade do <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> Gerenciador de serialização.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary>Obtém ou define um valor que indica se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> sempre criará uma instância de um tipo.</summary>
      <returns>
        <see langword="true" />Se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> retornará a instância existente; <see langword="false" /> se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />  criará uma nova instância de um tipo. O padrão é <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">O gerenciador de serialização tem uma sessão de serialização ativa.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary>Ocorre quando uma sessão é criada.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary>Ocorre quando uma sessão é descartada.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Adiciona um provedor de serialização personalizado ao gerenciador de serialização.</summary>
      <param name="provider">O provedor de serialização a ser adicionado.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary>Obtém a pilha de contexto para esta sessão de serialização.</summary>
      <returns>Um <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> que armazena dados.</returns>
      <exception cref="T:System.InvalidOperationException">Essa propriedade foi acessada fora de uma sessão de serialização.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Implementa o método <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />.</summary>
      <param name="type">O tipo de dados a ser criado.</param>
      <param name="arguments">Os argumentos a serem passados ao construtor desse tipo.</param>
      <param name="name">O nome do objeto. Esse nome pode ser usado para acessar o objeto posteriormente por meio de <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />. Se <see langword="null" /> for passado, o objeto ainda assim será criado, mas não poderá ser acessado por nome.</param>
      <param name="addToContainer">
        <see langword="true" /> para adicionar esse objeto para o contêiner de design. O objeto deve implementar <see cref="T:System.ComponentModel.IComponent" /> para que isso tenha algum efeito.</param>
      <returns>A instância de objeto recém-criada.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>Recupera uma instância de um objeto criado do nome especificado.</summary>
      <param name="name">O nome do objeto a ser recuperado.</param>
      <returns>Uma instância do objeto com o nome fornecido ou <see langword="null" />, se nenhum objeto com esse nome pode ser encontrado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Essa propriedade foi acessada fora de uma sessão de serialização.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>Recupera um nome para o objeto especificado.</summary>
      <param name="value">O objeto para o qual recuperar o nome.</param>
      <returns>O nome do objeto ou <see langword="null" /> se o objeto não tiver um nome.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Essa propriedade foi acessada fora de uma sessão de serialização.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary>Obtém um serializador do tipo solicitado para o tipo de objeto especificado.</summary>
      <param name="objectType">O tipo do objeto para o qual obter o serializador.</param>
      <param name="serializerType">O tipo do serializador a ser recuperado.</param>
      <returns>Uma instância do serializador solicitado ou <see langword="null" /> se nenhum serializador adequado pode ser localizado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary>Obtém um tipo do nome especificado.</summary>
      <param name="typeName">O nome totalmente qualificado do tipo a ser carregado.</param>
      <returns>Uma instância do tipo ou <see langword="null" /> se o tipo não pode ser carregado.</returns>
      <exception cref="T:System.InvalidOperationException">Essa propriedade foi acessada fora de uma sessão de serialização.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>Implementa a propriedade <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</summary>
      <returns>Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contém as propriedades a serem serializadas.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Remove um provedor de serialização adicionado anteriormente.</summary>
      <param name="provider">O <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> a ser removido.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary>Usado para relatar um erro recuperável na serialização.</summary>
      <param name="errorInformation">Um objeto que contém as informações de erro, geralmente do tipo <see cref="T:System.String" /> ou <see cref="T:System.Exception" />.</param>
      <exception cref="T:System.InvalidOperationException">Essa propriedade foi acessada fora de uma sessão de serialização.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>Ocorre quando <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> não consegue localizar o nome especificado na tabela de nomes do gerenciador de serialização.</summary>
      <exception cref="T:System.InvalidOperationException">O Gerenciador de serialização não tem uma sessão de serialização ativa.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>Ocorre quando a serialização é concluída.</summary>
      <exception cref="T:System.InvalidOperationException">O Gerenciador de serialização não tem uma sessão de serialização ativa.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>Define o nome para o objeto especificado.</summary>
      <param name="instance">O objeto cujo nome definir.</param>
      <param name="name">Um <see cref="T:System.String" /> usado como o nome do objeto.</param>
      <exception cref="T:System.ArgumentNullException">Um ou ambos os parâmetros são <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O objeto especificado por instância já tem um nome ou <paramref name="name" /> já está em uso por outro objeto nomeado.</exception>
      <exception cref="T:System.InvalidOperationException">Essa propriedade foi acessada fora de uma sessão de serialização.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary>Para obter uma descrição desse membro, consulte o método <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</summary>
      <param name="serviceType">Um objeto que especifica o tipo de objeto de serviço a ser obtido.</param>
      <returns>Um objeto de serviço do tipo <paramref name="serviceType" />.
- ou -
<see langword="null" /> se não houver nenhum objeto de serviço do tipo <paramref name="serviceType" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary>Obtém ou define um valor que indica se o método <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verificará se os nomes correspondentes se referem ao mesmo tipo.</summary>
      <returns>
        <see langword="true" />Se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> o verificar tipos; caso contrário <see langword="false" /> , se não tiver. O padrão é <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">O gerenciador de serialização tem uma sessão de serialização ativa.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary>Fornece uma maneira de passar o estado de contexto entre serializadores. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> com a expressão e proprietário fornecidos.</summary>
      <param name="expression">A expressão de código fornecida.</param>
      <param name="expressionType">O tipo da expressão de código fornecida.</param>
      <param name="owner">O proprietário da expressão de código fornecida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />, <paramref name="expressionType" /> ou <paramref name="owner" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> com um valor atual.</summary>
      <param name="expression">A expressão de código fornecida.</param>
      <param name="expressionType">O tipo da expressão de código fornecida.</param>
      <param name="owner">O proprietário da expressão de código fornecida.</param>
      <param name="presetValue">O valor predefinido da expressão de código fornecida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />, <paramref name="expressionType" /> ou <paramref name="owner" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary>Obtém a expressão que esse contexto representa.</summary>
      <returns>A expressão que esse contexto representa.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary>Obtém o <see cref="T:System.Type" /> da expressão.</summary>
      <returns>O <see cref="T:System.Type" /> da expressão.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary>Obtém o objeto que possui essa expressão.</summary>
      <returns>O objeto que possui esta expressão.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary>Obtém o valor predefinido de uma expressão.</summary>
      <returns>O valor predefinido dessa expressão ou <see langword="null" /> , se não for atribuído.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary>Fornece a classe base para serializar uma primitiva de reflexão no gráfico do objeto.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary>Serializa o descritor de membro fornecido no valor fornecido para uma coleção de instruções.</summary>
      <param name="manager">O gerenciador de serialização a ser usado para serialização.</param>
      <param name="value">O objeto ao qual o membro está associado.</param>
      <param name="descriptor">O descritor do membro a ser serializado.</param>
      <param name="statements">O <see cref="T:System.CodeDom.CodeStatementCollection" /> na qual <paramref name="descriptor" /> é serializado.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Determina se o membro fornecido deve ser serializado.</summary>
      <param name="manager">O gerenciador de serialização a ser usado para serialização.</param>
      <param name="value">O objeto ao qual o membro está associado.</param>
      <param name="descriptor">O descritor do membro a ser serializado.</param>
      <returns>
        <see langword="true" /> se o membro descrito por <paramref name="descriptor" /> precisar ser serializado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary>Contém uma tabela de instruções que é oferecida pelo <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary>Determina se a tabela contém o proprietário da instrução fornecido.</summary>
      <param name="statementOwner">O proprietário da coleção de instrução.</param>
      <returns>
        <see langword="true" /> se <paramref name="statementOwner" /> estiver na tabela; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary>Retorna um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary>Obtém a coleção de instruções para o proprietário especificado.</summary>
      <param name="statementOwner">O proprietário da coleção de instrução.</param>
      <returns>A coleção de instruções <paramref name="statementOwner" />para, <see langword="null" /> ou <paramref name="statementOwner" /> se não estiver na tabela.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary>Preenche a tabela de instrução com uma coleção de proprietários de instrução.</summary>
      <param name="statementOwners">Uma coleção de proprietários de instrução a adicionar à tabela.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary>Preenche a tabela de instrução com um proprietário da instrução.</summary>
      <param name="owner">O proprietário de instrução a adicionar à tabela.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Para obter uma descrição desse membro, consulte o método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary>Um <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> adiciona um contexto raiz para fornecer uma definição do objeto raiz. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.RootContext" />.</summary>
      <param name="expression">A expressão que representa o objeto raiz no grafo de objeto.</param>
      <param name="value">O objeto raiz do grafo de objeto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary>Obtém a expressão que representa o objeto raiz no grafo de objeto.</summary>
      <returns>Um <see cref="T:System.CodeDom.CodeExpression" /> que representa o objeto raiz no grafo do objeto.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary>Obtém o objeto raiz do grafo de objeto.</summary>
      <returns>O objeto raiz do grafo de objeto.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary>Especifica que os serializadores devem lidar com valores padrão. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> com a opção de associação a um membro específico.</summary>
      <param name="member">O membro ao qual este contexto está associado. Pode ser <see langword="null" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary>Obtém o membro ao qual este contexto está associado.</summary>
      <returns>O membro ao qual esse contexto está associado ou <see langword="null" /> se o contexto está associado a todos os membros de um objeto.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary>Obtém um valor que indica se o membro fornecido deve ser serializado neste contexto.</summary>
      <param name="member">O membro a ser examinado para serialização.</param>
      <returns>
        <see langword="true" /> se o membro fornecido precisar ser serializado neste contexto; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary>Fornece um local no qual as instruções podem ser serializadas. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary>Obtém uma coleção de instruções oferecidas pelo contexto de instrução.</summary>
      <returns>Uma <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> instrução de contenção oferecida pelo contexto da declaração.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary>Serializa um objeto para um novo tipo.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Desserializa a declaração de tipo especificada.</summary>
      <param name="manager">O gerenciador de serialização a ser usado para serialização.</param>
      <param name="declaration">Declaração de tipo a ser usada para serialização.</param>
      <returns>O objeto raiz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="typeDecl" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>Retorna o método em que as instruções usadas para serializar o membro são armazenadas.</summary>
      <param name="manager">O gerenciador de serialização a ser usado para serialização.</param>
      <param name="declaration">A declaração de tipo a ser usada para serialização.</param>
      <param name="value">O valor a ser usado para serialização.</param>
      <returns>O método usado para emitir todo o código de inicialização para o membro especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="typeDecl" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Retorna uma matriz de métodos a ser interpretada durante a desserialização.</summary>
      <param name="manager">O gerenciador de serialização a ser usado para serialização.</param>
      <param name="declaration">A declaração de tipo a ser usada para serialização.</param>
      <returns>Uma matriz <see cref="T:System.CodeDom.CodeMemberMethod" /> de métodos a ser interpretada durante a desserialização.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="typeDecl" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>Serializa a raiz do objeto, criando uma nova declaração de tipo que define a raiz.</summary>
      <param name="manager">O gerenciador de serialização a ser usado para serialização.</param>
      <param name="root">O objeto a ser serializado.</param>
      <param name="members">Coleção opcional de membros. Pode ser <see langword="null" /> ou vazio.</param>
      <returns>Um <see cref="T:System.CodeDom.CodeTypeDeclaration" /> que define o objeto raiz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="root" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary>Especifica a funcionalidade genérica de desfazer/refazer em tempo de design.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <param name="provider">Um provedor de serviço de gerenciamento do domínio pai.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Um serviço necessário não foi encontrado. Consulte <see cref="T:System.ComponentModel.Design.UndoEngine" /> para ver os serviços necessários. Se você tiver removido esse serviço, lembre-se de substituí-lo.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>Adiciona um <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> à pilha de desfazer.</summary>
      <param name="unit">A unidade de desfazer a ser adicionada</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary>Cria um novo <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="name">O nome da unidade a ser criada.</param>
      <param name="primary">
        <see langword="true" /> para criar a primeira de uma série de unidades aninhadas; <see langword="false" /> para criar as unidades aninhadas subsequentes.</param>
      <returns>Um novo <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> com um nome especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>Descarta um <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="unit">A unidade a ser descartada.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary>Libera todos os recursos usados pelo <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.ComponentModel.Design.UndoEngine" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary>Habilita ou desabilita o <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.ComponentModel.Design.UndoEngine" /> estiver habilitado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary>Obtém o serviço solicitado.</summary>
      <param name="serviceType">O tipo de serviço a ser recuperado.</param>
      <returns>O serviço solicitado, se encontrado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="serviceType" /> é necessário, mas não pode ser encontrado. Se você tiver removido esse serviço, lembre-se de substituí-lo.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary>Obtém o serviço solicitado.</summary>
      <param name="serviceType">O tipo de serviço a ser recuperado.</param>
      <returns>O serviço solicitado ou <see langword="null" /> se o serviço solicitado não for encontrado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary>Aciona o evento <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" />.</summary>
      <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary>Aciona o evento <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" />.</summary>
      <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary>Ocorre imediatamente antes de uma ação de desfazer ser executada.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary>Indica se uma ação de desfazer está em andamento.</summary>
      <returns>
        <see langword="true" />se uma ação de desfazer estiver em andamento; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary>Ocorre imediatamente depois de uma ação de desfazer ser executada.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary>Encapsula uma unidade de trabalho que um usuário pode desfazer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="engine">O mecanismo de desfazer que é proprietário dessa unidade de desfazer.</param>
      <param name="name">O nome dessa unidade de desfazer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="engine" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary>Recebe uma chamada do mecanismo de desfazer para fechar essa unidade.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />.</summary>
      <param name="e">Um <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />.</summary>
      <param name="e">Um <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</summary>
      <param name="e">Um <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</summary>
      <param name="e">Um <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />.</summary>
      <param name="e">Um <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />.</summary>
      <param name="e">Um <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary>Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
      <param name="e">Um <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary>Obtém uma instância do serviço solicitado.</summary>
      <param name="serviceType">O tipo de serviço a ser recuperado.</param>
      <returns>Uma instância do serviço determinado ou <see langword="null" /> se o serviço não puder ser resolvido.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary>Obtém um valor que indica se <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> não contém eventos.</summary>
      <returns>
        <see langword="true" />Se o <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> não contiver nenhum evento; <see langword="false" />caso contrário,.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary>Obtém o nome do <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <returns>O nome do <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary>Retorna um <see cref="T:System.String" /> que representa o nome atual da unidade.</summary>
      <returns>Um <see cref="T:System.String" /> que representa o nome atual da unidade.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary>Executa uma ação de desfazer ou refazer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary>Chamado por um <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> para executar uma ação de desfazer.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary>Obtém o pai <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />.</summary>
      <returns>O <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> ao qual este <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> está anexado.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary>Expõe uma coleção de itens de caixa de ferramentas.</summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary>Obtém uma coleção de objetos <see cref="T:System.Drawing.Design.ToolboxItem" /> .</summary>
      <returns>Uma coleção de objetos <see cref="T:System.Drawing.Design.ToolboxItem" /> .</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary>Fornece métodos e propriedades para gerenciar e consultar a caixa de ferramentas no ambiente de desenvolvimento.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary>Adiciona um novo criador de item de caixa de ferramentas para um formato de dados especificado.</summary>
      <param name="creator">Um <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> que pode criar um componente quando o item de caixa de ferramentas é invocado.</param>
      <param name="format">O formato de dados que o criador trata.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Adiciona um novo criador de item de caixa de ferramentas para um formato de dados e o host de designer especificados.</summary>
      <param name="creator">Um <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> que pode criar um componente quando o item de caixa de ferramentas é invocado.</param>
      <param name="format">O formato de dados que o criador trata.</param>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que representa o host de designer a ser associado ao criador.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary>Adiciona o item de caixa de ferramentas vinculado ao projeto especificado à caixa de ferramentas.</summary>
      <param name="toolboxItem">O <see cref="T:System.Drawing.Design.ToolboxItem" /> vinculado a ser adicionado à caixa de ferramentas.</param>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> do documento de design atual.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Adiciona o item de caixa de ferramentas vinculado ao projeto especificado à caixa de ferramentas na categoria especificada.</summary>
      <param name="toolboxItem">O <see cref="T:System.Drawing.Design.ToolboxItem" /> vinculado a ser adicionado à caixa de ferramentas.</param>
      <param name="category">A categoria de item de caixa de ferramentas à qual adicionar o item de caixa de ferramentas.</param>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> do documento de design atual.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Adiciona o item de caixa de ferramentas especificado à caixa de ferramentas.</summary>
      <param name="toolboxItem">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser adicionado à caixa de ferramentas.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>Adiciona o item de caixa de ferramentas especificado à caixa de ferramentas na categoria especificada.</summary>
      <param name="toolboxItem">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser adicionado à caixa de ferramentas.</param>
      <param name="category">A categoria de item de caixa de ferramentas à qual adicionar o <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary>Obtém os nomes de todas as categorias de ferramenta atualmente na caixa de ferramentas.</summary>
      <returns>Um <see cref="T:System.Drawing.Design.CategoryNameCollection" /> que contém as categorias de ferramenta.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary>Obtém um item de caixa de ferramentas do objeto especificado que representa um item de caixa de ferramentas no formato serializado.</summary>
      <param name="serializedObject">O objeto que contém o <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser recuperado.</param>
      <returns>O <see cref="T:System.Drawing.Design.ToolboxItem" /> criado do objeto serializado.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Obtém um item de caixa de ferramentas do objeto especificado que representa um item de caixa de ferramentas no formato serializado, usando o host de designer especificado.</summary>
      <param name="serializedObject">O objeto que contém o <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser recuperado.</param>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> a ser associado a este <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>O <see cref="T:System.Drawing.Design.ToolboxItem" /> criado da desserialização.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary>Obtém o item de caixa de ferramentas selecionado no momento.</summary>
      <returns>O <see cref="T:System.Drawing.Design.ToolboxItem" /> que está selecionado no momento ou <see langword="null" /> se nenhum item de caixa de ferramentas foi selecionado.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary>Obtém o item de caixa de ferramentas selecionado no momento se ele estiver disponível para todos os designers ou se ele dá suporte ao designer especificado.</summary>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> ao qual a ferramenta selecionada deve estar associada para ser retornada.</param>
      <returns>O <see cref="T:System.Drawing.Design.ToolboxItem" /> que está selecionado no momento ou <see langword="null" /> se nenhum item de caixa de ferramentas estiver selecionado no momento.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary>Obtém a coleção inteira de itens de caixa de ferramentas da caixa de ferramentas.</summary>
      <returns>Um <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> que contém os itens de caixa de ferramentas atual.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary>Obtém a coleção de itens de caixa de ferramentas que estão associados ao host de designer especificado na caixa de ferramentas.</summary>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que está associado aos itens da caixa de ferramentas a serem recuperados.</param>
      <returns>Um <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> que contém os itens da caixa de ferramentas atual que estão associados ao host de designer especificado.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary>Obtém uma coleção de itens de caixa de ferramentas da caixa de ferramentas que corresponde à categoria especificada.</summary>
      <param name="category">A categoria de item de caixa de ferramentas da qual recuperar todos os itens de caixa de ferramentas.</param>
      <returns>Um <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> que contém os itens da caixa de ferramentas atual que estão associados à categoria especificada.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Obtém a coleção de itens de caixa de ferramentas que estão associados ao host de designer e à categoria especificados na caixa de ferramentas.</summary>
      <param name="category">A categoria de item de caixa de ferramentas da qual recuperar os itens de caixa de ferramentas.</param>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que está associado aos itens da caixa de ferramentas a serem recuperados.</param>
      <returns>Um <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> que contém os itens da caixa de ferramentas atual que estão associados ao host de designer e à categoria especificados.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary>Obtém um valor que indica se o objeto especificado que representa um item de caixa de ferramentas serializado corresponde aos atributos especificados.</summary>
      <param name="serializedObject">O objeto que contém o <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser recuperado.</param>
      <param name="filterAttributes">Um <see cref="T:System.Collections.ICollection" /> que contém os atributos para os quais testar o objeto serializado.</param>
      <returns>
        <see langword="true" /> se o objeto corresponder aos atributos especificados, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Obtém um valor que indica se o objeto especificado que representa um item de caixa de ferramentas serializado que pode ser usado pelo host de designer especificado.</summary>
      <param name="serializedObject">O objeto que contém o <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser recuperado.</param>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para testar quanto ao suporte ao <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>
        <see langword="true" /> se o objeto especificado for compatível com o host de designer especificado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary>Obtém um valor que indica se o objeto especificado é um item de caixa de ferramentas serializado.</summary>
      <param name="serializedObject">O objeto a ser inspecionado.</param>
      <returns>
        <see langword="true" /> se o objeto contiver um objeto de item de caixa de ferramentas, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Obtém um valor que indica se o objeto especificado é um item de caixa de ferramentas serializado, usando o host de designer especificado.</summary>
      <param name="serializedObject">O objeto a ser inspecionado.</param>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que está fazendo esta solicitação.</param>
      <returns>
        <see langword="true" /> se o objeto contiver um objeto de item de caixa de ferramentas, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary>Atualiza o estado dos itens de caixa de ferramentas.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary>Remove um criador de item de caixa de ferramentas adicionado anteriormente do formato de dados especificado.</summary>
      <param name="format">O formato de dados do criador a ser removido.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Remove um criador de caixa de ferramentas adicionado anteriormente que está associado ao formato de dados especificado e o host de designer especificado.</summary>
      <param name="format">O formato de dados do criador a ser removido.</param>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que é associado ao criado a ser removido.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Remove o item da caixa de ferramentas especificado da caixa de ferramentas.</summary>
      <param name="toolboxItem">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser removido da caixa de ferramentas.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>Remove o item da caixa de ferramentas especificado da caixa de ferramentas.</summary>
      <param name="toolboxItem">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser removido da caixa de ferramentas.</param>
      <param name="category">A categoria de item de caixa de ferramentas da qual remover <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary>Obtém ou define o nome da categoria de ferramenta selecionada na caixa de ferramentas.</summary>
      <returns>O nome da categoria selecionada no momento.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary>Notifica o serviço de caixa de ferramentas de que a ferramenta selecionada foi usada.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Obtém um objeto serializável que representa o item de caixa de ferramentas especificado.</summary>
      <param name="toolboxItem">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser serializado.</param>
      <returns>Um objeto que representa o <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary>Define o cursor do aplicativo atual para um cursor que representa a ferramenta selecionada no momento.</summary>
      <returns>
        <see langword="true" /> se o cursor for definido pela ferramenta selecionada no momento, <see langword="false" /> se não houver nenhuma ferramenta selecionada e o cursor for definido como o cursor padrão do Windows.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Seleciona o item da caixa de ferramentas especificado.</summary>
      <param name="toolboxItem">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser selecionado.</param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary>Define uma interface para a configurar o item selecionado da caixa de ferramentas e indicar se um designer é compatível com um item específico da caixa de ferramentas.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Obtém um valor que indica se a ferramenta especificada é compatível com o designer atual.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser testado quanto à compatibilidade com a caixa de ferramentas.</param>
      <returns>
        <see langword="true" /> se a ferramenta for compatível com a caixa de ferramentas e puder ser habilitada; <see langword="false" /> se o designer do documento não souber como usar a ferramenta.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Seleciona a ferramenta especificada.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser selecionado.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary>Fornece dados para o evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> que ocorre quando os componentes são adicionados à caixa de ferramentas.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />.</summary>
      <param name="components">Os componentes a serem incluídos na caixa de ferramentas.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary>Obtém ou define uma matriz que contém os componentes a serem adicionados à caixa de ferramentas.</summary>
      <returns>Uma matriz do tipo <see cref="T:System.ComponentModel.IComponent" /> que indica os componentes a serem adicionados à caixa de ferramentas.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary>Representa o método que manipula o evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary>Fornece dados para o evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> que ocorre quando os componentes são adicionados à caixa de ferramentas.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />.</summary>
      <param name="host">O host de designer que está fazendo a solicitação.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary>Obtém ou define uma instância do <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que fez a solicitação para criar componentes de caixa de ferramentas.</summary>
      <returns>O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> que fez a solicitação para criar componentes da caixa de <see langword="null" /> ferramentas ou se nenhum host do designer foi fornecido ao item da caixa de ferramentas.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary>Representa o método que manipula o evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary>Fornece uma implementação básica de um item de caixa de ferramentas.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Design.ToolboxItem" /> que cria o tipo de componente especificado.</summary>
      <param name="toolType">O tipo do <see cref="T:System.ComponentModel.IComponent" /> que o item de caixa de ferramenta cria.</param>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Drawing.Design.ToolboxItem" /> foi bloqueado.</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary>Obtém ou define o nome do assembly que contém o tipo ou os tipos que o item de caixa de ferramentas cria.</summary>
      <returns>Um <see cref="T:System.Reflection.AssemblyName" /> que indica o assembly que contém o tipo ou os tipos a serem criados.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary>Obtém ou define um bitmap para representar o item de caixa de ferramentas na caixa de ferramentas.</summary>
      <returns>Um <see cref="T:System.Drawing.Bitmap" /> que representa o item da caixa de ferramentas na caixa de ferramentas.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary>Gera uma exceção se o item de caixa de ferramentas está bloqueado no momento.</summary>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Drawing.Design.ToolboxItem" /> está bloqueado.</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary>Obtém ou define o nome da empresa para este <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>Um <see cref="T:System.String" /> que especifica a empresa para esse <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary>Ocorre imediatamente após a criação de componentes.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary>Ocorre quando os componentes estão prestes a ser criados.</summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary>Obtém o tipo de componente para este <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>Um <see cref="T:System.String" /> que especifica o tipo de componente para este <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary>Cria os componentes que o item de caixa de ferramentas está configurado para criar.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> criados.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary>Cria os componentes que o item de caixa de ferramentas está configurado para criar, usando o host de designer especificado.</summary>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> a ser usado ao criar componentes.</param>
      <returns>Uma matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> criados.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary>Cria os componentes que o item de caixa de ferramentas está configurado para criar, usando o host de designer especificado e os valores padrão.</summary>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> a ser usado ao criar componentes.</param>
      <param name="defaultValues">Um dicionário de pares nome-valor da propriedade dos valores padrão com os quais inicializar o componente.</param>
      <returns>Uma matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> criados.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>Cria um componente ou uma matriz de componentes quando o item de caixa de ferramentas é invocado.</summary>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para hospedar o item de caixa de ferramentas.</param>
      <returns>Uma matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> criados.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary>Cria uma matriz de componentes quando o item de caixa de ferramentas é invocado.</summary>
      <param name="host">O host de designer a ser usado ao criar componentes.</param>
      <param name="defaultValues">Um dicionário de pares nome-valor da propriedade dos valores padrão com os quais inicializar o componente.</param>
      <returns>Uma matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> criados.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary>Obtém ou define o <see cref="T:System.Reflection.AssemblyName" /> para o item de caixa de ferramentas.</summary>
      <returns>Uma matriz de objetos de <see cref="T:System.Reflection.AssemblyName" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary>Obtém ou define a descrição para este <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>Um <see cref="T:System.String" /> que especifica a descrição para este <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Carrega o estado do item da caixa de ferramentas do objeto de informações de serialização especificado.</summary>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> do qual carregar.</param>
      <param name="context">Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que indica as características do fluxo.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary>Obtém ou define o nome de exibição desse item de caixa de ferramentas.</summary>
      <returns>O nome de exibição do item da caixa de ferramentas.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary>Determina se duas instâncias <see cref="T:System.Drawing.Design.ToolboxItem" /> são iguais.</summary>
      <param name="obj">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser comparado com o <see cref="T:System.Drawing.Design.ToolboxItem" /> atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado for igual ao <see cref="T:System.Drawing.Design.ToolboxItem" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary>Obtém ou define o filtro que determina se o item de caixa de ferramentas pode ser usado em um componente de destino.</summary>
      <returns>Um <see cref="T:System.Collections.ICollection" /> de <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" /> objetos.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary>Filtra um valor da propriedade antes de retorná-lo.</summary>
      <param name="propertyName">O nome da propriedade a ser filtrada.</param>
      <param name="value">O valor em relação ao qual filtrar a propriedade.</param>
      <returns>Um valor da propriedade filtrado.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary>Retorna o código hash para essa instância.</summary>
      <returns>Um código hash do <see cref="T:System.Drawing.Design.ToolboxItem" /> atual.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary>Habilita o acesso ao tipo associado ao item de caixa de ferramentas.</summary>
      <param name="host">O host de designer a ser consultado quanto a <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />.</param>
      <returns>O tipo associado ao item de caixa de ferramentas.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary>Cria uma instância do tipo especificado, opcionalmente usando um nome de assembly e host de designer especificados.</summary>
      <param name="host">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> para o documento atual. Ele pode ser <see langword="null" />.</param>
      <param name="assemblyName">Um <see cref="T:System.Reflection.AssemblyName" /> que indica o assembly que contém o tipo a ser carregado. Ele pode ser <see langword="null" />.</param>
      <param name="typeName">O nome do tipo do qual criar uma instância.</param>
      <param name="reference">Um valor que indica se deve ou não adicionar uma referência ao assembly que contém o tipo especificado ao conjunto de referências do host de designer.</param>
      <returns>Uma instância do tipo especificado, se puder ser localizado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> não está especificado.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary>Inicializa o item de caixa de ferramentas atual com o tipo especificado a ser criado.</summary>
      <param name="type">O <see cref="T:System.Type" /> que o item de caixa de ferramentas cria.</param>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Drawing.Design.ToolboxItem" /> foi bloqueado.</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary>Obtém um valor que indica se o item de caixa de ferramentas é transitório.</summary>
      <returns>
        <see langword="true" />, se esse item da caixa de ferramentas não deve ser armazenado em nenhum banco de dados de caixa de ferramentas quando um aplicativo que está fornecendo uma caixa de ferramentas é fechado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary>Bloqueia o item de caixa de ferramentas e impede alterações em suas propriedades.</summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary>Obtém um valor que indica se o <see cref="T:System.Drawing.Design.ToolboxItem" /> está bloqueado no momento.</summary>
      <returns>
        <see langword="true" /> se o item da caixa de ferramentas está bloqueado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />.</summary>
      <param name="args">Um <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />.</summary>
      <param name="args">Um <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary>Obtém ou define o bitmap original que será usado na caixa de ferramentas para este item.</summary>
      <returns>Um <see cref="T:System.Drawing.Bitmap" /> que representa o item da caixa de ferramentas na caixa de ferramentas.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary>Obtém um dicionário de propriedades.</summary>
      <returns>Um dicionário de pares de nome/valor (os nomes são nomes de propriedade e os valores são valores de propriedade).</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Salva o estado do item da caixa de ferramentas para o objeto de informações de serialização especificado.</summary>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser salvo.</param>
      <param name="context">Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que indica as características do fluxo.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Para obter uma descrição desse membro, consulte o método <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser preenchido com dados.</param>
      <param name="context">O destino (consulte <see cref="T:System.Runtime.Serialization.StreamingContext" />) dessa serialização.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary>Retorna um <see cref="T:System.String" /> que representa o <see cref="T:System.Drawing.Design.ToolboxItem" /> atual.</summary>
      <returns>Um <see cref="T:System.String" /> que representa o <see cref="T:System.Drawing.Design.ToolboxItem" /> atual.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary>Obtém ou define o nome totalmente qualificado do tipo de <see cref="T:System.ComponentModel.IComponent" /> que o item de caixa de ferramentas cria quando invocado.</summary>
      <returns>O nome do tipo totalmente qualificado do tipo de componente que esse item da caixa de ferramentas cria.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary>Valida que um objeto é de um determinado tipo.</summary>
      <param name="propertyName">O nome da propriedade a ser validada.</param>
      <param name="value">Valor opcional em relação ao qual validar.</param>
      <param name="expectedType">O tipo esperado da propriedade.</param>
      <param name="allowNull">
        <see langword="true" /> para permitir <see langword="null" />, caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" /> e <paramref name="allowNull" /> é <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> não é o tipo especificado por <paramref name="expectedType" />.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary>Valida uma propriedade antes de ela ser atribuída ao dicionário de propriedades.</summary>
      <param name="propertyName">O nome da propriedade a ser validada.</param>
      <param name="value">O valor em relação ao qual validar.</param>
      <returns>O valor usado para executar a validação.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" /> e <paramref name="propertyName" /> é "IsTransient".</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary>Obtém a versão desta <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>Um <see cref="T:System.String" /> que especifica a versão para este <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary>Representa uma coleção de itens de caixa de ferramentas.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> usando a matriz de itens de caixa de ferramentas especificada.</summary>
      <param name="value">Uma matriz do tipo <see cref="T:System.Drawing.Design.ToolboxItem" /> que contém os itens de caixa de ferramentas para preencher a coleção.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> usando a coleção especificada.</summary>
      <param name="value">Um <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> para preencher a nova coleção.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary>Indica se a coleção contém o <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado.</summary>
      <param name="value">Um <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser pesquisado na coleção.</param>
      <returns>
        <see langword="true" /> se a coleção contiver o objeto especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary>Copia a coleção para a matriz especificada, começando com o índice de destino especificado.</summary>
      <param name="array">A matriz para a qual copiar.</param>
      <param name="index">O índice para o qual começar a copiar.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary>Obtém o índice do <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado, se ele existir na coleção.</summary>
      <param name="value">Um <see cref="T:System.Drawing.Design.ToolboxItem" /> cujo índice será obtido na coleção.</param>
      <returns>O índice do <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary>Obtém o <see cref="T:System.Drawing.Design.ToolboxItem" /> no índice especificado.</summary>
      <param name="index">O índice do objeto a ser obtido ou definido.</param>
      <returns>A <see cref="T:System.Drawing.Design.ToolboxItem" /> em cada índice válido na coleção.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary>Fornece um mecanismo de retorno de chamada que pode criar um <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="serializedObject">O objeto que contém os dados para os quais criar um <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <param name="format">O nome do formato de dados da área de transferência para o qual criar um <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>O objeto <see cref="T:System.Drawing.Design.ToolboxItem" /> desserializado especificado por <paramref name="serializedObject" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UCOMITypeLib">
      <summary>Use <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" /> em seu lugar.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>Recupera a cadeia de caracteres de documentação da biblioteca, o nome e o caminho completos do arquivo de Ajuda e o identificador de contexto do tópico de Ajuda da biblioteca no arquivo de Ajuda.</summary>
      <param name="index">Índice da descrição do tipo cuja documentação será retornada.</param>
      <param name="strName">Retorna uma cadeia de caracteres que contém o nome do item especificado.</param>
      <param name="strDocString">Retorna uma cadeia de caracteres que contém a cadeia de caracteres de documentação do item especificado.</param>
      <param name="dwHelpContext">Retorna o identificador de contexto de Ajuda associado ao item especificado.</param>
      <param name="strHelpFile">Retorna uma cadeia de caracteres que contém o nome totalmente qualificado do arquivo de Ajuda.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)">
      <summary>Recupera a estrutura que contém os atributos da biblioteca.</summary>
      <param name="ppTLibAttr">No retorno bem-sucedido, uma estrutura que contém os atributos da biblioteca.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoCount">
      <summary>Retorna o número de descrições de tipo na biblioteca de tipos.</summary>
      <returns>O número de descrições de tipo na biblioteca de tipos.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary>Recupera o tipo de uma descrição de tipo.</summary>
      <param name="index">O índice da descrição de tipo na biblioteca de tipos</param>
      <param name="pTKind">Uma referência à enumeração <see langword="TYPEKIND" /> da descrição do tipo.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.IsName(System.String,System.Int32)">
      <summary>Indica se uma cadeia de caracteres passada contém o nome de um tipo ou membro descrito na biblioteca.</summary>
      <param name="szNameBuf">A cadeia de caracteres a ser testada.</param>
      <param name="lHashVal">O valor de hash de <paramref name="szNameBuf" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="szNameBuf" /> for encontrado na biblioteca de tipos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary>Libera o <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> obtido originalmente de <see cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr">O <see langword="TLIBATTR" /> a ser liberado.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary>Importa os controles ActiveX e gera um wrapper que pode ser acessado por um designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
      <param name="options">Um <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> que indica as opções para o importador de controle ActiveX usar.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary>Fornece métodos para resolver referências a bibliotecas do ActiveX, bibliotecas de tipos ou assemblies COM ou assemblies gerenciados.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>Resolve uma referência à biblioteca de tipos especificada que contém um controle ActiveX.</summary>
      <param name="typeLib">Um <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> para o qual resolver uma referência.</param>
      <returns>Um caminho totalmente qualificado para um assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary>Resolve uma referência ao assembly especificado que contém um componente COM.</summary>
      <param name="name">Um <see cref="T:System.Reflection.AssemblyName" /> que indica que o assembly para o qual resolver uma referência.</param>
      <returns>Um caminho totalmente qualificado para um assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>Resolve uma referência à biblioteca de tipos especificada que contém um componente COM.</summary>
      <param name="typeLib">Um <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> para o qual resolver uma referência.</param>
      <returns>Um caminho totalmente qualificado para um assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary>Resolve uma referência para o assembly especificado.</summary>
      <param name="assemName">O nome do assembly para o qual resolver uma referência.</param>
      <returns>Um caminho totalmente qualificado para um assembly.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary>Representa um conjunto de opções para um <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary>Especifica se o assembly gerado tem nome forte e será assinado posteriormente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary>Especifica se as fontes do wrapper da biblioteca de tipos devem ser geradas.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary>Especifica se deve ser apenas usada a entrada da linha de comando em vez de confiar em uma versão registrada.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary>Especifica o caminho para o arquivo que contém o contêiner de chaves de nome forte para os assemblies gerados.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary>Especifica o caminho para o arquivo que contém a chave de nome forte para os assemblies gerados.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary>Especifica o nome forte usado para os assemblies gerados.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary>Especifica se os erros são transmitidos no formato MSBuild (Microsoft Build Engine).</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary>Indica se o logotipo da ferramenta do importador do ActiveX será exibido quando o controle for importado.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary>Especifica o caminho para o diretório no qual os assemblies gerados serão criados.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary>Especifica o nome de arquivo para o qual wrapper do controle ActiveX será gerado.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary>Especifica se os arquivos existentes devem ser substituídos ao gerar assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary>Especifica a chave pública usada para assinar os assemblies gerados.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary>Especifica o <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> a ser usado para resolver os tipos e as referências ao gerar assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary>Especifica se a compilação será feita no modo sem confirmação, que gera menos informações exibidas em tempo de compilação.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary>Especifica se a compilação será feita no modo detalhado, que gera mais informações exibidas em tempo de compilação.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary>Gerencia uma coleção de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> relacionados à interface do usuário. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary>Obtém ou define o <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> associado ao <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
      <returns>O <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> associado ao <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> está habilitado.</summary>
      <returns>
        <see langword="true" />, se o <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> estiver habilitado; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary>Obtém a coleção <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>Uma coleção de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> .</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary>Força o <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> a atualizar sua janela de adorno.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary>Força o <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> a atualizar sua janela de adorno dentro do <see cref="T:System.Drawing.Rectangle" /> determinado.</summary>
      <param name="rectangle">A área a ser invalidada.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary>Força o <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> a atualizar sua janela de adorno dentro do <see cref="T:System.Drawing.Region" /> determinado.</summary>
      <param name="region">O <see cref="T:System.Drawing.Region" /> a ser invalidado.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary>Representa os objetos <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> gerenciados por um <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> com o <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> determinado.</summary>
      <param name="callParentBehavior">
        <see langword="true" /> se o comportamento pai deve ser chamado se ele existir; caso contrário, <see langword="false" />.</param>
      <param name="behaviorService">O <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> a ser usado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callParentBehavior" /> é <see langword="true" /> e <paramref name="behaviorService" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary>Obtém o cursor que deve ser exibido para este comportamento.</summary>
      <returns>Um <see cref="T:System.Windows.Forms.Cursor" /> que representa o cursor que deve ser exibido para esse comportamento.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary>Obtém um valor que indica se os objetos <see cref="T:System.ComponentModel.Design.MenuCommand" /> devem ser desabilitados.</summary>
      <returns>
        <see langword="true" />se todos <see cref="T:System.ComponentModel.Design.MenuCommand" /> os objetos que o designer recebe devem ter Estados definidos como <c>Enabled = False</c> quando isso <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> estiver ativo; <see langword="false" />caso contrário,.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>Intercepta comandos.</summary>
      <param name="commandId">Um objeto <see cref="T:System.ComponentModel.Design.CommandID" />.</param>
      <returns>Um <see cref="T:System.ComponentModel.Design.MenuCommand" />. Por padrão, <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> retorna <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Permite um comportamento do tipo "arrastar e soltar" personalizado.</summary>
      <param name="g">Um objeto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> no qual invocar um comportamento do tipo "arrastar e soltar".</param>
      <param name="e">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Permite um comportamento do tipo "drag-enter" personalizado.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> no qual invocar um comportamento do tipo "drag-enter".</param>
      <param name="e">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>Permite um comportamento do tipo "drag-leave" personalizado.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> no qual invocar um comportamento do tipo "drag-leave".</param>
      <param name="e">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Permite um comportamento do tipo "drag-over" personalizado.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> no qual invocar um comportamento do tipo "drag-over".</param>
      <param name="e">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Permite um comportamento de comentários do tipo "arrastar e soltar" personalizado.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> no qual invocar um comportamento do tipo "arrastar e soltar".</param>
      <param name="e">Um <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>Chamado pela janela de adorno quando ela perde a captura do mouse.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> no qual invocar um comportamento do tipo "arrastar e soltar".</param>
      <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Chamado quando qualquer mensagem de clique duplo entra na janela de adorno do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">Um valor <see cref="T:System.Windows.Forms.MouseButtons" /> que indica qual botão foi clicado.</param>
      <param name="mouseLoc">O local no qual o clique ocorreu.</param>
      <returns>
        <see langword="true" /> se a mensagem foi manipulada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Chamado quando qualquer mensagem de mouse para baixo entra na janela de adorno do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">Um valor <see cref="T:System.Windows.Forms.MouseButtons" /> que indica qual botão foi clicado.</param>
      <param name="mouseLoc">O local no qual o clique ocorreu.</param>
      <returns>
        <see langword="true" /> se a mensagem foi manipulada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Chamado quando qualquer mensagem de entrada do mouse entra na janela de adorno do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns>
        <see langword="true" /> se a mensagem foi manipulada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary>Chamado quando qualquer mensagem de passagem do mouse entra na janela de adorno do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="mouseLoc">O local no qual a focalização ocorreu.</param>
      <returns>
        <see langword="true" /> se a mensagem foi manipulada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Chamado quando qualquer mensagem de saída do mouse entra na janela de adorno do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns>
        <see langword="true" /> se a mensagem foi manipulada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Chamado quando qualquer mensagem de movimentação do mouse entra na janela de adorno do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">Um valor <see cref="T:System.Windows.Forms.MouseButtons" /> que indica qual botão foi clicado.</param>
      <param name="mouseLoc">O local no qual a movimentação ocorreu.</param>
      <returns>
        <see langword="true" /> se a mensagem foi manipulada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary>Chamado quando qualquer mensagem de mouse para cima entra na janela de adorno do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">Um valor <see cref="T:System.Windows.Forms.MouseButtons" /> que indica qual botão foi clicado.</param>
      <returns>
        <see langword="true" /> se a mensagem foi manipulada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>Envia este evento do tipo "arrastar e soltar" da janela de adorno para o <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> apropriado ou <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> com teste de clique.</summary>
      <param name="g">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="e">Um <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary>Fornece dados para os eventos de <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> e de <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> .</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />.</summary>
      <param name="dragComponents">O <see cref="T:System.Collections.ICollection" /> de objetos <see cref="T:System.ComponentModel.IComponent" /> sendo arrastados no momento.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary>Obtém a lista de objetos <see cref="T:System.ComponentModel.IComponent" /> sendo arrastados no momento.</summary>
      <returns>O <see cref="T:System.Collections.ICollection" /> de objetos <see cref="T:System.ComponentModel.IComponent" /> sendo arrastados no momento.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary>Representa o método que manipularão os eventos <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> e <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> de um <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />. Essa classe não pode ser herdada.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary>Gerencia a interface do usuário no designer. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary>Obtém o <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>Uma coleção de adorno.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary>Obtém o <see cref="T:System.Drawing.Graphics" /> para a janela de adorno.</summary>
      <returns>O <see cref="T:System.Drawing.Graphics" /> para a janela de adorno.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary>Converte um <see cref="T:System.Drawing.Point" /> na janela de adorno em coordenadas da tela.</summary>
      <param name="p">O valor <see cref="T:System.Drawing.Point" /> a ser transformado.</param>
      <returns>O valor <see cref="T:System.Drawing.Point" /> transformado, em coordenadas de tela.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary>Obtém o local da janela de adorno em coordenadas da tela.</summary>
      <returns>O local, no canto superior esquerdo da janela de adorno, em coordenadas da tela.</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary>Ocorre quando o <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> inicia uma operação do tipo "arrastar e soltar".</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary>Retorna o <see cref="T:System.Drawing.Rectangle" /> delimitador de um <see cref="T:System.Windows.Forms.Control" />.</summary>
      <param name="c">O <see cref="T:System.Windows.Forms.Control" /> a ser movido.</param>
      <returns>O <see cref="T:System.Drawing.Rectangle" /> delimitador de um <see cref="T:System.Windows.Forms.Control" /> convertido nas coordenadas da janela de adorno.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary>Retorna o local de um <see cref="T:System.Windows.Forms.Control" /> convertido nas coordenadas da janela de adorno.</summary>
      <param name="c">O <see cref="T:System.Windows.Forms.Control" /> a ser movido.</param>
      <returns>Um valor <see cref="T:System.Drawing.Point" /> que indica o local do <paramref name="c" /> em coordenadas da janela de adorno.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary>Obtém o <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> na parte superior da pilha de comportamento sem removê-lo.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> Na parte superior da pilha de comportamento.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary>Libera todos os recursos usados pelo <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary>Ocorre quando o <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> conclui uma operação de arrastar.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Retorna o <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> imediatamente após o <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> determinado na pilha de comportamento.</summary>
      <param name="behavior">O <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que precede o <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> a ser retornado.</param>
      <returns>O <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> imediatamente após o <paramref name="behavior" /> na pilha de comportamento ou <see langword="null" /> se não houver nenhum comportamento a seguir.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary>Invalida a janela de adorno do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary>Invalida, dentro da janela de adorno, a área especificada do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="rect">A área retangular a ser invalidada.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary>Invalida, dentro da janela de adorno, a área especificada do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="r">A região a ser invalidada.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary>Converte um ponto no sistema de coordenadas de um identificador nas coordenadas da janela de adorno.</summary>
      <param name="handle">O identificador de uma janela de adorno.</param>
      <param name="pt">Um <see cref="T:System.Drawing.Point" /> no sistema de coordenadas de um identificador.</param>
      <returns>Um <see cref="T:System.Drawing.Point" /> nas coordenadas da janela de adorno.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Remove e retorna o <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> na parte superior da pilha.</summary>
      <param name="behavior">O <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> a ser removido da pilha.</param>
      <returns>O <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> que foi removido da pilha.</returns>
      <exception cref="T:System.InvalidOperationException">A pilha <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> está vazia.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Efetua push de um <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> para a pilha de comportamento.</summary>
      <param name="behavior">O <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> a ter o push efetuado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Efetua push de um <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> para a pilha de comportamento e atribui a captura do mouse ao comportamento.</summary>
      <param name="behavior">O <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> a ter o push efetuado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary>Converte um ponto em coordenadas da tela nas coordenadas da janela de adorno do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="p">O valor <see cref="T:System.Drawing.Point" /> a ser transformado.</param>
      <returns>O valor <see cref="T:System.Drawing.Point" /> transformado, em coordenadas da janela de adorno.</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary>Ocorre quando a seleção atual deve ser atualizada.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary>Sincroniza todos os glifos de seleção.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary>Armazena objetos <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> em uma coleção fortemente tipada.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> com a matriz determinada.</summary>
      <param name="value">Uma matriz de tipo <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> para popular a coleção.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> com a referência a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> determinada.</summary>
      <param name="behaviorService">Uma referência a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> de um <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> existente.</summary>
      <param name="value">Um <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> do qual popular a coleção.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Adiciona um <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> com o valor especificado ao <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">O <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> a ser adicionado ao final da coleção.</param>
      <returns>O índice no qual o novo elemento foi inserido.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>Copia os elementos de uma matriz para o final do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">Uma matriz de tipo <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> a ser copiada para o final da coleção</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Adiciona o conteúdo de outro <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> ao final da coleção.</summary>
      <param name="value">Um <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> a ser adicionado ao final da coleção.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Obtém um valor que indica se a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> contém o <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> especificado.</summary>
      <param name="value">O <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> a ser localizado.</param>
      <returns>
        <see langword="true" /> se o item <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> estiver contido na coleção; caso contrário, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary>Copia os valores <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> para uma <see cref="T:System.Array" /> unidimensional no índice especificado.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos valores copiados do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <param name="index">O índice em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.
- ou -
O número de elementos na <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> é maior que o espaço disponível entre <paramref name="index" /> e o final da <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> é menor que o limite inferior de <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary>Retorna um enumerador que pode ser iterado por meio da instância <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para a instância <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Retorna o índice de um <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> no <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">O <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> a ser localizado.</param>
      <returns>O índice do <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> de <paramref name="value" /> na <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, se encontrado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Insere um <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> no <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> no índice especificado.</summary>
      <param name="index">O índice de base zero em que <paramref name="value" /> deve ser inserido.</param>
      <param name="value">O <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> a ser inserido.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary>Obtém ou define o elemento no índice especificado.</summary>
      <param name="index">O índice baseado em zero do elemento.</param>
      <returns>O <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> elemento especificado por <paramref name="index" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Remove um <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> específico do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">O <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> a ser removido de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> não foi encontrado na coleção.</exception>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary>Dá suporte à iteração em um <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" />.</summary>
      <param name="mappings">O <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> para o qual criar o enumerador.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary>Obtém o elemento atual no <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>O elemento atual no <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary>Avança o enumerador para o próximo elemento do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>
        <see langword="true" /> se o enumerador tiver avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador tiver passado do final da coleção.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary>Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>Para obter uma descrição desse membro, consulte o propriedade <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>O <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> atual na coleção.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary>Associa um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> a seu componente.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="relatedComponent">O componente ao qual o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está associado.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="relatedComponent">O componente ao qual o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está associado.</param>
      <param name="behavior">O <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> com o qual o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está associado.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary>Indica se um clique do mouse no ponto especificado deve ser manipulado pelo <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="p">Um ponto no qual realizar teste de clique.</param>
      <returns>Um <see cref="T:System.Windows.Forms.Cursor" /> se o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> for associado a <paramref name="p" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>Fornece a lógica de pintura.</summary>
      <param name="pe">Um <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contém o <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" /> do <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary>Obtém o componente associado ao <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>Um <see cref="T:System.ComponentModel.IComponent" /> associado <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> ao.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary>Associa um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> a seu controle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="bounds">Um <see cref="T:System.Drawing.Rectangle" /> que representa os limites do <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor">Um <see cref="T:System.Windows.Forms.Cursor" /> que representa o cursor que será exibido quando o ponteiro do mouse estiver sobre o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent">O componente ao qual o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está associado.</param>
      <param name="behavior">O <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> com o qual o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está associado.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="bounds">Um <see cref="T:System.Drawing.Rectangle" /> que representa os limites do <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor">Um <see cref="T:System.Windows.Forms.Cursor" /> que representa o cursor que será exibido quando o ponteiro do mouse estiver sobre o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent">O componente ao qual o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está associado.</param>
      <param name="designer">Um <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> com o qual o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está associado.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary>Obtém os limites do <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>Um <see cref="T:System.Drawing.Rectangle" /> que representa os limites <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />do.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary>Indica se um clique do mouse no ponto especificado deve ser manipulado pelo <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="p">Um ponto para fazer o teste de clique.</param>
      <returns>Um <see cref="T:System.Windows.Forms.Cursor" /> se o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> for associado a <paramref name="p" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary>Representa uma única entidade de interface do usuário gerenciada por um <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior">O <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associado ao <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. Pode ser <see langword="null" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary>Obtém o <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associado ao <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>O <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associado <see langword="null" /> ao, ou se não houver nenhum comportamento. <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /></returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary>Obtém os limites do <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>Um <see cref="T:System.Drawing.Rectangle" /> que representa os limites <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />do.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary>Fornece lógica de teste de clique.</summary>
      <param name="p">Um ponto no qual realizar teste de clique.</param>
      <returns>Um <see cref="T:System.Windows.Forms.Cursor" /> se o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> for associado a <paramref name="p" />; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>Fornece a lógica de pintura.</summary>
      <param name="pe">Um <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Altera o <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associado ao <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior">Um <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> a ser associado ao <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary>Armazena objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> em uma coleção fortemente tipada.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> com a matriz <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> fornecida.</summary>
      <param name="value">Uma matriz de tipo <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> para popular a coleção.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> com base em outra <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">Um <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> para popular a coleção.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Adiciona um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> com o valor especificado à <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">Um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> a ser adicionado ao final da coleção.</param>
      <returns>O índice no qual o novo elemento foi inserido.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>Copia os elementos de uma matriz para o final da <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">Uma matriz de tipo <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> a ser copiada para o final da coleção.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>Adiciona o conteúdo de outro <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> ao final da coleção.</summary>
      <param name="value">Um <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> a ser adicionado ao final da coleção.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Obtém um valor que indica se a <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> contém o <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> especificado.</summary>
      <param name="value">O <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> a ser localizado.</param>
      <returns>
        <see langword="true" /> se o item <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> estiver contido na coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary>Copia os valores <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> para uma <see cref="T:System.Array" /> unidimensional no índice especificado.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos valores copiados do <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
      <param name="index">O índice em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Retorna o índice de um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> na <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">O <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> a ser localizado.</param>
      <returns>O índice do <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> de <paramref name="value" /> na <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, se encontrado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Insere um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> no <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> no índice especificado.</summary>
      <param name="index">O índice de base zero em que <paramref name="value" /> deve ser inserido.</param>
      <param name="value">O <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> a ser inserido.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary>Obtém ou define o elemento no índice especificado.</summary>
      <param name="index">O índice baseado em zero do elemento.</param>
      <returns>O elemento <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> no índice especificado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Remove um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> específico do <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">O <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> a ser removido de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary>Descreve o estado de seleção de designer de um <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary>O <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> não está selecionado.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary>O <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> está selecionado.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary>O <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> é a seleção primária.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary>Representa os segmentos de linha horizontal e vertical que são criados dinamicamente na interface do usuário para ajudar no layout em tempo de design dos controles em um contêiner. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> usando o tipo de guia de alinhamento e deslocamento especificados.</summary>
      <param name="type">O <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> a ser criado. Descreve a posição e a orientação relativas da guia de alinhamento.</param>
      <param name="offset">A posição da guia de alinhamento, em pixels, relativa à origem superior esquerda do controle proprietário.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> usando o tipo de guia de alinhamento, o deslocamento e o nome do filtro especificados.</summary>
      <param name="type">O <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> a ser criado. Descreve a posição e a orientação relativas da guia de alinhamento.</param>
      <param name="offset">A posição da guia de alinhamento, em pixels, relativa à origem superior esquerda do controle proprietário.</param>
      <param name="filter">Um <see cref="T:System.String" /> usado para especificar uma categoria definida pelo programador de guias de alinhamento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> usando o tipo de guia de alinhamento, o deslocamento, o nome do filtro e a prioridade especificados.</summary>
      <param name="type">O <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> a ser criado. Descreve a posição e a orientação relativas da guia de alinhamento.</param>
      <param name="offset">A posição da guia de alinhamento, em pixels, relativa à origem superior esquerda do controle proprietário.</param>
      <param name="filter">Um <see cref="T:System.String" /> usado para especificar uma categoria definida pelo programador de guias de alinhamento.</param>
      <param name="priority">O <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> da guia de alinhamento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> usando o tipo de guia de alinhamento, o deslocamento e a prioridade especificados.</summary>
      <param name="type">O <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> a ser criado. Descreve a posição e a orientação relativas da guia de alinhamento.</param>
      <param name="offset">A posição da guia de alinhamento, em pixels, relativa à origem superior esquerda do controle proprietário.</param>
      <param name="priority">O <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> da guia de alinhamento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary>Ajusta a propriedade <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> da guia de alinhamento.</summary>
      <param name="adjustment">O número de pixels pelo qual alterar o deslocamento de guia de alinhamento.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary>Obtém a categoria de filtro definida pelo programador associada a esta guia de alinhamento.</summary>
      <returns>Um <see cref="T:System.String" /> que define a categoria do filtro. O padrão é <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary>Obtém um valor que indica se a guia de alinhamento tem uma orientação horizontal.</summary>
      <returns>
        <see langword="true" />se SnapLine for horizontal; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary>Obtém um valor que indica se a guia de alinhamento tem uma orientação vertical.</summary>
      <returns>
        <see langword="true" />se SnapLine for vertical; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary>Obtém o número de pixels de deslocamento da guia de alinhamento em relação à origem do controle associado.</summary>
      <returns>O deslocamento, em pixels, do SnapLine.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary>Obtém um valor que indica a importância relativa da guia de alinhamento.</summary>
      <returns>Um <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> que representa a categoria de prioridade de um snapline.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary>Retorna um valor que indica se o <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> especificado deve ser encaixado em outro <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</summary>
      <param name="line1">O <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> especificado.</param>
      <param name="line2">O <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> no qual o <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> especificado deve se encaixar.</param>
      <returns>
        <see langword="true" /> se <paramref name="line1" /> precisar ser encaixado em <paramref name="line2" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary>Obtém o tipo de guia de alinhamento, que indica o local e a orientação gerais.</summary>
      <returns>Um <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> que representa a orientação e o local geral, em relação ao controle de bordas, de um snapline.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary>Retorna uma representação de cadeia de caracteres da guia de alinhamento atual.</summary>
      <returns>Um <see cref="T:System.String" /> que representa o <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> atual.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary>Especifica a importância relativa de uma guia de alinhamento.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary>A categoria de prioridade é equivalente à prioridade mais alta de todas as guias de alinhamento atuais. Indica que essa categoria de guia de alinhamento sempre deve estar ativa.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary>A categoria de prioridade mais alta.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary>A categoria de prioridade mais baixa.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary>A categoria de prioridade intermediária.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary>Especifica a orientação e o local relativo de uma guia de alinhamento.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary>Uma guia de alinhamento horizontal geralmente associada a um recurso interno primário de um controle; por exemplo, a base da cadeia de caracteres de texto em um controle <see cref="T:System.Windows.Forms.Label" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary>Uma guia de alinhamento horizontal normalmente alinhada à borda inferior de um controle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary>Uma guia de alinhamento horizontal normalmente não associada a uma borda de um controle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary>Uma guia de alinhamento vertical normalmente alinhada à borda esquerda de um controle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary>Uma guia de alinhamento vertical normalmente alinhada à borda direita de um controle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary>Uma guia de alinhamento horizontal normalmente alinhada à borda superior de um controle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary>Uma guia de alinhamento vertical normalmente não associada a uma borda de um controle.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentActionsType" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.All" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Component" />
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Service" />
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary>A classe do designer base para estender o comportamento do modo de design de um documento de design raiz que dá suporte a componentes aninhados.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary>Obtém o controle para o designer.</summary>
      <returns>O <see cref="T:System.Windows.Forms.Control" /> designer está editando.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Obtém um valor que indica se a ferramenta especificada tem suporte pelo designer.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser testado para suporte à caixa de ferramentas.</param>
      <returns>
        <see langword="true" /> se a ferramenta deve ser habilitada na caixa de ferramentas; <see langword="false" /> se o designer do documento não saber como usar a ferramenta.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Inicializa o designer com o componente especificado.</summary>
      <param name="component">O <see cref="T:System.ComponentModel.IComponent" /> a ser associado ao designer.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Ajusta o conjunto de propriedades que o componente exporá por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">Um <see cref="T:System.Collections.IDictionary" /> que contém as propriedades da classe do componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology">Um <see cref="T:System.ComponentModel.Design.ViewTechnology" /> que indica uma tecnologia de exibição específica.</param>
      <returns>Um objeto que representa a exibição para este designer.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>Uma matriz de valores <see cref="T:System.ComponentModel.Design.ViewTechnology" /> com suporte.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component">O componente cujos atributos devem ser filtrados.</param>
      <param name="attributes">Um dicionário de atributos que pode ser modificado.</param>
      <returns>
        <see langword="true" /> se o conjunto de atributos filtrados deve ser armazenado em cache; <see langword="false" /> se o serviço de filtro deve consultar novamente.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component">O componente para o qual filtrar os eventos.</param>
      <param name="events">Um dicionário de eventos que pode ser modificado.</param>
      <returns>
        <see langword="true" /> se o conjunto de eventos filtrados deve ser armazenado em cache; <see langword="false" /> se o serviço de filtro deve consultar novamente.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component">O componente para o qual filtrar as propriedades.</param>
      <param name="properties">Um dicionário de propriedades que pode ser modificado.</param>
      <returns>
        <see langword="true" /> se o conjunto de propriedades filtradas deve ser armazenado em cache; <see langword="false" /> se o serviço de filtro deve consultar novamente.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser testado quanto à compatibilidade com a caixa de ferramentas.</param>
      <returns>
        <see langword="true" /> se a ferramenta for compatível com a caixa de ferramentas e puder ser habilitada; <see langword="false" /> se o designer do documento não souber como usar a ferramenta.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser selecionado.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary>Obtém ou define um valor que indica se a bandeja de componentes para o designer está em modo de organização automática.</summary>
      <returns>
        <see langword="true" />se a bandeja de componentes para o designer estiver no modo de organização automática; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary>Obtém ou define um valor que indica se a bandeja de componentes para o designer está em modo de ícones grandes.</summary>
      <returns>
        <see langword="true" />se a bandeja de componentes para o designer estiver no modo de ícone grande; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary>Fornece o comportamento da bandeja de componentes de um designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.ComponentTray" /> usando o provedor de serviço e o designer especificados.</summary>
      <param name="mainDesigner">O <see cref="T:System.ComponentModel.Design.IDesigner" /> que é o designer principal ou do documento para o projeto atual.</param>
      <param name="serviceProvider">Um <see cref="T:System.IServiceProvider" /> que pode ser usado para obter serviços de tempo de design.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary>Adiciona um componente à bandeja.</summary>
      <param name="component">O <see cref="T:System.ComponentModel.IComponent" /> a ser adicionado à bandeja.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary>Obtém ou define um valor que indica se os itens da bandeja são alinhados automaticamente.</summary>
      <returns>
        <see langword="true" /> se os itens da bandeja forem organizados automaticamente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>Obtém um valor que indica se a ferramenta especificada pode ser usada para criar um novo componente.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser testado.</param>
      <returns>
        <see langword="true" /> se a ferramenta especificada puder ser usada para criar um componente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary>Obtém um valor que indica se o componente especificado pode ser exibido.</summary>
      <param name="component">O <see cref="T:System.ComponentModel.IComponent" /> a ser testado.</param>
      <returns>
        <see langword="true" /> se o componente puder ser exibido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary>Obtém o número de componentes contidos na bandeja.</summary>
      <returns>O número de componentes na bandeja.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>Cria um componente do item da caixa de ferramentas especificada, adiciona o componente ao documento atual e exibe uma representação para o componente na bandeja de componentes.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> do qual criar um componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary>Exibe uma mensagem de erro para o usuário com informações sobre a exceção especificada.</summary>
      <param name="e">A exceção sobre a qual exibir informações.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Windows.Forms.Design.ComponentTray" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary>Obtém o local do componente especificado, relativo ao canto superior esquerdo da bandeja de componentes.</summary>
      <param name="receiver">O <see cref="T:System.ComponentModel.IComponent" /> do qual recuperar o local.</param>
      <returns>Um <see cref="T:System.Drawing.Point" /> que indica as coordenadas do componente especificado ou um <see cref="T:System.Drawing.Point" /> vazio se o componente especificado não puder ser encontrado na bandeja de componentes. Um <see cref="T:System.Drawing.Point" /> vazio tem uma propriedade <see cref="P:System.Drawing.Point.IsEmpty" /> igual a <see langword="true" /> e normalmente tem as propriedades <see cref="P:System.Drawing.Point.X" /> e <see cref="P:System.Drawing.Point.Y" /> que são cada uma igual a zero.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary>Semelhante a <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />, este método retorna o próximo componente na bandeja, considerando um componente inicial.</summary>
      <param name="component">O componente do qual iniciar a enumeração.</param>
      <param name="forward">
        <see langword="true" /> para enumerar para frente por meio da lista; caso contrário, <see langword="false" /> para enumerar para trás.</param>
      <returns>O próximo componente na bandeja de componentes ou <see langword="null" />, se o final da lista for encontrado (ou o início, se <paramref name="forward" /> for <see langword="false" />).</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary>Obtém o tipo de serviço solicitado.</summary>
      <param name="serviceType">O tipo do serviço a ser recuperado.</param>
      <returns>Uma instância do serviço solicitado ou <see langword="null" />, se o serviço não puder ser localizado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary>Obtém o valor da propriedade de extensão <see langword="Location" />.</summary>
      <param name="receiver">O <see cref="T:System.ComponentModel.IComponent" /> que recebe a propriedade de extensor do local.</param>
      <returns>Um <see cref="T:System.Drawing.Point" /> que representa o local do <paramref name="receiver" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary>Testa um componente quanto a presença na bandeja de componentes.</summary>
      <param name="comp">O componente a ser testado quanto a presença na bandeja de componentes.</param>
      <returns>
        <see langword="true" /> se <paramref name="comp" /> estiver sendo exibido na bandeja; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Chamado quando um objeto que foi arrastado é solto na bandeja de componentes.</summary>
      <param name="de">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Chamado quando um objeto é arrastado sobre a bandeja de componentes e entrou na área.</summary>
      <param name="de">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary>Chamado quando um objeto é arrastado para fora da área sobre a bandeja de componentes.</summary>
      <param name="e">Um <see cref="T:System.EventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Chamado quando um objeto é arrastado sobre a bandeja de componentes.</summary>
      <param name="de">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Chamado durante uma operação do tipo "arrastar e soltar" OLE para oferecer uma oportunidade para a bandeja de componentes fornecer comentários para o usuário sobre os resultados de soltar um objeto em um ponto específico.</summary>
      <param name="gfevent">Um <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Aciona o evento <see cref="E:System.Windows.Forms.Control.Layout" />.</summary>
      <param name="levent">Um <see cref="T:System.Windows.Forms.LayoutEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary>Chamado quando uma operação de seleção de arrastar do mouse é cancelada.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Chamado quando o mouse é clicado duas vezes na bandeja de componentes.</summary>
      <param name="e">Um <see cref="T:System.EventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Chamado quando o botão do mouse é pressionado.</summary>
      <param name="e">Um <see cref="T:System.Windows.Forms.MouseEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Chamado quando a posição do cursor do mouse foi alterada.</summary>
      <param name="e">Um <see cref="T:System.Windows.Forms.MouseEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Chamado quando o botão do mouse foi solto.</summary>
      <param name="e">Um <see cref="T:System.Windows.Forms.MouseEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Chamado quando a exibição da bandeja de componentes deve ser atualizada.</summary>
      <param name="pe">Um <see cref="T:System.Windows.Forms.PaintEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary>Chamado para definir o cursor do mouse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary>Remove o componente especificado da bandeja.</summary>
      <param name="component">O <see cref="T:System.ComponentModel.IComponent" /> a ser removido da bandeja.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>Define o local do componente especificado no local especificado.</summary>
      <param name="receiver">O <see cref="T:System.ComponentModel.IComponent" /> cujo local deve ser definido.</param>
      <param name="location">Um <see cref="T:System.Drawing.Point" /> que indica o novo local do componente especificado.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>Define o valor da propriedade de extensão <see langword="Location" />.</summary>
      <param name="receiver">O <see cref="T:System.ComponentModel.IComponent" /> que recebe a propriedade de extensor do local.</param>
      <param name="location">Um <see cref="T:System.Drawing.Point" /> que representa o local do <paramref name="receiver" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary>Obtém ou define um valor que indica se a bandeja exibe um ícone grande para representar cada componente na bandeja.</summary>
      <returns>
        <see langword="true" /> se ícones grandes forem exibidos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />.</summary>
      <param name="extendee">O objeto para receber as propriedades do extensor.</param>
      <returns>
        <see langword="true" /> se este objeto puder fornecer propriedades de extensão ao objeto especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary>Processa mensagens do Windows.</summary>
      <param name="m">O <see cref="T:System.Windows.Forms.Message" /> a processar.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary>Estende o comportamento do modo de design de um <see cref="T:System.Windows.Forms.Control" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary>Especifica o objeto de acessibilidade do designer.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary>Obtém o <see cref="T:System.Windows.Forms.AccessibleObject" /> atribuído ao controle.</summary>
      <returns>O <see cref="T:System.Windows.Forms.AccessibleObject" /> atribuído ao controle.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary>Obtém a coleção de componentes associados ao componente gerenciado pelo designer.</summary>
      <returns>Os componentes associados ao componente gerenciado pelo designer.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary>Obtém ou define um valor que indica se redimensionar a alocação de identificador depende do valor da propriedade <see cref="P:System.Windows.Forms.Control.AutoSize" />.</summary>
      <returns>
        <see langword="true" /> se a alocação de identificador de redimensionamento depende do valor das propriedades <see cref="P:System.Windows.Forms.Control.AutoSize" /> e <see langword="AutoSizeMode" />; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary>Processa mensagens do Windows.</summary>
      <param name="m">O <see cref="T:System.Windows.Forms.Message" /> a processar.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary>Obtém o <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> do ambiente de design.</summary>
      <returns>O <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />ou <see langword="null" /> se o serviço não estiver disponível.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary>Indica se esse controle do designer pode ter o controle do designer especificado como pai.</summary>
      <param name="parentDesigner">O <see cref="T:System.ComponentModel.Design.IDesigner" /> que gerencia o controle a ser verificado.</param>
      <returns>
        <see langword="true" /> se o controle gerenciado pelo designer especificado puder ser pai do controle gerenciado por esse designer. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary>Obtém o controle que o designer está criando.</summary>
      <returns>O controle que o designer está projetando.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary>Fornece um <see cref="T:System.Windows.Forms.AccessibleObject" /> para o <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> usando o designer e o controle especificados.</summary>
      <param name="designer">O <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> do objeto acessível.</param>
      <param name="control">O <see cref="T:System.Windows.Forms.Control" /> do objeto acessível.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary>Obtém os pontos que definem os limites do objeto acessível para o designer.</summary>
      <returns>Um <see cref="T:System.Drawing.Rectangle" /> que indica os limites do objeto acessível para o designer.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary>Obtém uma cadeia de caracteres que descreve a ação padrão do objeto especificado.</summary>
      <returns>Uma descrição da ação padrão para um objeto especificado.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary>Obtém uma cadeia de caracteres que descreve a aparência do objeto especificado.</summary>
      <returns>Uma descrição da aparência visual do objeto para o usuário ou <see langword="null" /> se o objeto não tiver uma descrição.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>Recupera o filho acessível correspondente ao índice especificado.</summary>
      <param name="index">O índice baseado em zero do filho acessível.</param>
      <returns>Um <see cref="T:System.Windows.Forms.AccessibleObject" /> que representa o filho acessível correspondente ao índice especificado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary>Recupera o número de filhos que pertencem a um objeto acessível.</summary>
      <returns>O número de filhos que pertencem a um objeto acessível.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary>Recupera o objeto que tem o foco do teclado.</summary>
      <returns>Um <see cref="T:System.Windows.Forms.AccessibleObject" /> que especifica o filho focalizado atualmente. Esse método retorna o objeto de chamada se o próprio objeto estiver focalizado. Retorna <see langword="null" /> se nenhum objeto tiver foco.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary>Recupera o filho selecionado no momento.</summary>
      <returns>Um <see cref="T:System.Windows.Forms.AccessibleObject" /> que representa o filho selecionado no momento. Esse método retorna o objeto de chamada se o próprio objeto é selecionado. Retorna <see langword="null" /> se nenhum filho está selecionado no momento e o próprio objeto não tem o foco.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>Recupera o objeto filho nas coordenadas da tela especificadas.</summary>
      <param name="x">A coordenada horizontal da tela.</param>
      <param name="y">A coordenada vertical da tela.</param>
      <returns>Um <see cref="T:System.Windows.Forms.AccessibleObject" /> que representa o objeto filho nas coordenadas de tela determinadas. Este método retornará o objeto de chamada se o próprio objeto estiver no local especificado. Retorna <see langword="null" /> se nenhum objeto estiver no local testado.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary>Obtém ou define o nome do objeto.</summary>
      <returns>O nome do objeto ou <see langword="null" /> se a propriedade não tiver sido definida.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary>Obtém o pai de um objeto acessível.</summary>
      <returns>Um <see cref="T:System.Windows.Forms.AccessibleObject" /> que representa o pai de um objeto acessível ou <see langword="null" /> , se não houver nenhum objeto pai.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary>Obtém a função deste objeto acessível.</summary>
      <returns>Um dos <see cref="T:System.Windows.Forms.AccessibleRole" /> valores, ou <see cref="F:System.Windows.Forms.AccessibleRole.None" /> se nenhuma função tiver sido especificada.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary>Obtém o estado deste objeto acessível.</summary>
      <returns>Um dos <see cref="T:System.Windows.Forms.AccessibleStates" /> valores, ou <see cref="F:System.Windows.Forms.AccessibleStates.None" />, se nenhum estado tiver sido definido.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary>Obtém ou define o valor de um objeto acessível.</summary>
      <returns>O valor de um objeto acessível ou <see langword="null" /> se o objeto não tiver um valor definido.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary>Fornece o processamento padrão para mensagens do Windows.</summary>
      <param name="m">O <see cref="T:System.Windows.Forms.Message" /> a processar.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary>Exibe informações sobre a exceção especificada para o usuário.</summary>
      <param name="e">O <see cref="T:System.Exception" /> a ser exibido.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary>Habilita a funcionalidade de tempo de design para um controle filho.</summary>
      <param name="child">O controle filho para o qual o modo de design será habilitado.</param>
      <param name="name">O nome do conforme <paramref name="child" /> exposto ao usuário final.</param>
      <returns>
        <see langword="true" /> se o controle filho puder ser habilitado para o tempo de design; <see langword="false" /> se a infraestrutura de hospedagem não dá suporte a ele.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> ou <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary>Habilita ou desabilita o suporte do tipo "arrastar e soltar" do controle que está sendo criado.</summary>
      <param name="value">
        <see langword="true" /> para habilitar o suporte do tipo "arrastar e soltar" do controle. <see langword="false" /> se o controle não deve ter suporte do tipo "arrastar e soltar". O padrão é <see langword="false" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary>Obtém um valor que indica se retângulos de arraste podem ser desenhados neste componente do designer.</summary>
      <returns>
        <see langword="true" /> se os retângulos de arrastar podem ser desenhados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Retorna um <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> que representa os limites desse controle.</summary>
      <param name="selectionType">Um valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica o estado da seleção.</param>
      <returns>Um <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> que representa os limites desse controle.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Obtém uma coleção de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que representam as bordas de seleção e as alças de captura de um controle padrão.</summary>
      <param name="selectionType">Um valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica o estado da seleção.</param>
      <returns>Uma coleção de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> .</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>Indica se um clique do mouse no ponto especificado deve ser manipulado pelo controle.</summary>
      <param name="point">Um <see cref="T:System.Drawing.Point" /> que indica a posição em que o mouse foi clicado, em coordenadas de tela.</param>
      <returns>
        <see langword="true" /> se um clique em um ponto especificado será manipulado pelo controle. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary>Encaminha mensagens dos controles filho do controle especificado para o designer.</summary>
      <param name="firstChild">O primeiro filho <see cref="T:System.Windows.Forms.Control" /> a ser processado. Esse método pode se chamar recursivamente para os filhos do controle.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary>Obtém o <see cref="T:System.ComponentModel.InheritanceAttribute" /> do designer.</summary>
      <returns>
        <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> se o designer é um designer raiz; caso contrário, o valor da propriedade <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> do designer pai.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Inicializa o designer com o componente especificado.</summary>
      <param name="component">O <see cref="T:System.ComponentModel.IComponent" /> ao qual o designer será associado. Esse componente sempre deve ser uma instância de <see cref="T:System.Windows.Forms.Control" /> ou derivar dele.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Reinicializa um componente existente.</summary>
      <param name="defaultValues">Um dicionário de nome/valor de valores padrão a ser aplicado a propriedades. Poderá ser <see langword="null" /> se nenhum valor padrão for especificado.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Inicializa um componente recém-criado.</summary>
      <param name="defaultValues">Um dicionário de nome/valor de valores padrão a ser aplicado a propriedades. Poderá ser <see langword="null" /> se nenhum valor padrão for especificado.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary>Retorna o designer de controle interno com o índice especificado no <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <param name="internalControlIndex">Um índice especificado para selecionar o designer de controle interno. Esse índice é baseado em zero.</param>
      <returns>Um <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> no índice especificado.</returns>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary>Define um local <see cref="T:System.Drawing.Point" /> que representa os valores de um <see cref="T:System.Drawing.Point" /> inválido.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary>Retorna o número de designers de controle interno no <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns>O número de designers de controle interno no <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>Mostra o menu de contexto e oferece uma oportunidade de executar processamento adicional quando o menu de contexto está prestes a ser exibido.</summary>
      <param name="x">A coordenada x em que o menu de contexto será exibido.</param>
      <param name="y">A coordenada y em que o menu de contexto será exibido.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary>Oferece uma oportunidade de executar processamento adicional imediatamente após a criação da alça de controle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>Recebe uma chamada para limpar uma operação do tipo "arrastar e soltar".</summary>
      <param name="de">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Recebe uma chamada quando um objeto do tipo "arrastar e soltar" é solto no modo de exibição do designer do controle.</summary>
      <param name="de">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Recebe uma chamada quando uma operação do tipo "arrastar e soltar" entra no modo de exibição do designer do controle.</summary>
      <param name="de">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>Recebe uma chamada quando uma operação do tipo "arrastar e soltar" deixa o modo de exibição do designer do controle.</summary>
      <param name="e">Um <see cref="T:System.EventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Recebe uma chamada quando um objeto do tipo "arrastar e soltar" é arrastado sobre o modo de exibição do designer do controle.</summary>
      <param name="de">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Recebe uma chamada quando uma operação do tipo "arrastar e soltar" está em andamento para fornecer dicas visuais com base no local do mouse enquanto uma operação do tipo "arrastar" está em andamento.</summary>
      <param name="e">Um <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>Recebe uma chamada em resposta quando o botão esquerdo do mouse é pressionado e segurado enquanto está sobre o componente.</summary>
      <param name="x">A posição x do mouse nas coordenadas de tela.</param>
      <param name="y">A posição y do mouse nas coordenadas de tela.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>Recebe uma chamada no final de uma operação do tipo "arrastar e soltar" para concluir ou cancelar a operação.</summary>
      <param name="cancel">
        <see langword="true" /> para cancelar o arraste, <see langword="false" /> para confirmá-lo.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>Recebe uma chamada para cada movimento do mouse durante uma operação do tipo "arrastar e soltar".</summary>
      <param name="x">A posição x do mouse nas coordenadas de tela.</param>
      <param name="y">A posição y do mouse nas coordenadas de tela.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary>Recebe uma chamada quando o mouse entra pela primeira vez no controle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary>Recebe uma chamada depois que o mouse passa sobre o controle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary>Recebe uma chamada quando o mouse entra pela primeira vez no controle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>Recebe uma chamada quando o controle que o designer está gerenciando pinta sua superfície, para que o designer possa pintar quaisquer adornos adicionais sobre o controle.</summary>
      <param name="pe">Um <see cref="T:System.Windows.Forms.PaintEventArgs" /> que o designer pode usar para desenhar no controle.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary>Chamado quando o designer é inicializado.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary>Recebe uma chamada cada vez que o cursor precisa ser definido.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary>Obtém o componente pai do <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns>O componente pai para o <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; caso contrário, <see langword="null" /> se não houver nenhum componente pai.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary>Obtém um valor que indica se o <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> permitirá que o alinhamento da guia de alinhamento durante uma operação do tipo arrastar.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> permitirá o alinhamento de snapline durante uma operação de arrastar quando o controle de arrastar primário estiver sobre este designer; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Ajusta o conjunto de propriedades que o componente expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">Um <see cref="T:System.Collections.IDictionary" /> que contém as propriedades da classe do componente.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary>Obtém as regras de seleção que indicam os recursos de movimentação de um componente.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary>Obtém uma lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representam os pontos de alinhamento significativos desse controle.</summary>
      <returns>Uma lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representa pontos de alinhamento significativos para este controle.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary>Encaminha mensagens dos filhos do controle especificado para cada controle em vez de para um designer pai.</summary>
      <param name="firstChild">O primeiro filho <see cref="T:System.Windows.Forms.Control" /> a ser processado. Esse método pode se chamar recursivamente para os filhos do controle.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Processa mensagens do Windows e, opcionalmente, encaminha-as para o controle.</summary>
      <param name="m">O <see cref="T:System.Windows.Forms.Message" /> a processar.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary>Fornece acesso para obter e definir valores de opção de um designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.DesignerOptions" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary>Obtém ou define um valor que habilita ou desabilita a edição in-loco para controles <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
      <returns>
        <see langword="true" />se a edição in-loco para <see cref="T:System.Windows.Forms.ToolStrip" /> controles estiver habilitada; caso contrário,. <see langword="false" /> O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary>Obtém ou define um <see cref="T:System.Drawing.Size" /> que representa as dimensões de uma unidade de grade.</summary>
      <returns>Um <see cref="T:System.Drawing.Size" /> que representa as dimensões de uma unidade de grade.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary>Obtém ou define um valor que especifica se um designer mostra automaticamente o painel de marcações inteligentes do componente na criação.</summary>
      <returns>
        <see langword="true" />para permitir que o painel de marca inteligente de um componente seja aberto automaticamente após a criação; caso contrário <see langword="false" />,. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary>Obtém ou define um valor que habilita ou desabilita a grade no designer.</summary>
      <returns>
        <see langword="true" />se a grade estiver habilitada; caso contrário <see langword="false" />,. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary>Obtém ou define um valor que habilita ou desabilita a colocação automática dos controles em coordenadas de grade.</summary>
      <returns>
        <see langword="true" />Se o ajuste estiver habilitado; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary>Obtém ou define um valor que habilita ou desabilita o cache de componente.</summary>
      <returns>
        <see langword="true" />Se o cache de componentes estiver habilitado; caso contrário <see langword="false" />,. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary>Obtém ou define um valor que habilita ou desabilita as marcações inteligentes no designer.</summary>
      <returns>
        <see langword="true" />Se as marcas inteligentes no designer estiverem habilitadas; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary>Obtém ou define um valor que habilita ou desabilita as guias de alinhamento no designer.</summary>
      <returns>
        <see langword="true" />se snaplines no designer estiverem habilitadas; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary>Classe de designer base para estender o comportamento do modo de design de um <see cref="T:System.Windows.Forms.Control" /> e fornecer a ele uma exibição do modo de design no nível raiz que dá suporte a controles aninhados e que deve receber mensagens de rolagem.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.DocumentDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>Verifica a existência de um serviço do editor de menu e cria um se ainda não existir.</summary>
      <param name="c">O <see cref="T:System.ComponentModel.IComponent" /> para garantir que haja um serviço de menu de contexto.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Obtém um <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> que representa os objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="selectionType">Um valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica o estado da seleção.</param>
      <returns>Uma coleção de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> .</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Indica se a ferramenta especificada é compatível com o designer.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser testado para suporte à caixa de ferramentas.</param>
      <returns>
        <see langword="true" /> se a ferramenta deve ser habilitada na caixa de ferramentas; <see langword="false" /> se o designer do documento não saber como usar a ferramenta.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Inicializa o designer com o componente especificado.</summary>
      <param name="component">O <see cref="T:System.ComponentModel.IComponent" /> a ser associado ao designer.</param>
    </member>
    <member name="F:System.Windows.Forms.Design.DocumentDesigner.menuEditorService">
      <summary>Inicializa a variável menuEditorService para <see langword="null" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>Chamado quando o menu de contexto deve ser exibido.</summary>
      <param name="x">A coordenada de tela horizontal na qual exibir o menu de contexto.</param>
      <param name="y">A coordenada de tela vertical na qual exibir o menu de contexto.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary>Chamado imediatamente depois que o identificador para o designer foi criado.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Ajusta o conjunto de propriedades que o componente expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">Um <see cref="T:System.Collections.IDictionary" /> que contém as propriedades da classe do componente.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary>Obtém o <see cref="T:System.Windows.Forms.Design.SelectionRules" /> para o designer.</summary>
      <returns>Uma combinação bit a bit dos valores <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology">Um <see cref="T:System.ComponentModel.Design.ViewTechnology" /> que indica uma tecnologia de exibição específica.</param>
      <returns>Um objeto que representa a exibição para este designer.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>Uma matriz de valores de <see cref="T:System.ComponentModel.Design.ViewTechnology" /> com suporte.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser testado para o suporte à caixa de ferramentas.</param>
      <returns>
        <see langword="true" /> se a ferramenta for compatível com a caixa de ferramentas e puder ser habilitada; <see langword="false" /> se o designer do documento não souber como usar a ferramenta.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> a ser selecionado.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Seleciona a ferramenta especificada.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> para o qual criar um componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Processa mensagens do Windows.</summary>
      <param name="m">O <see cref="T:System.Windows.Forms.Message" /> a processar.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary>Fornece uma maneira sistemática de gerenciar manipuladores de eventos para o documento atual.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.EventHandlerService" />.</summary>
      <param name="focusWnd">O <see cref="T:System.Windows.Forms.Control" /> que está sendo projetado.</param>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary>Dispara um evento OnEventHandlerChanged.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary>Obtém o controle ao qual os manipuladores de eventos estão anexados.</summary>
      <returns>O <see cref="T:System.Windows.Forms.Control" /> que foi anexado por meio do construtor.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary>Obtém o manipulador de eventos ativo no momento do tipo especificado.</summary>
      <param name="handlerType">O tipo do manipulador a ser obtido.</param>
      <returns>Uma instância do manipulador ou <see langword="null" /> se não houver nenhum manipulador do tipo solicitado.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary>Remove o manipulador especificado mais recente da pilha.</summary>
      <param name="handler">O manipulador a ser removido da pilha.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary>Efetua push em um novo manipulador de eventos na pilha.</summary>
      <param name="handler">O manipulador a ser adicionado à pilha.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary>Define um método para obter informações sobre como deve ser o tema das barras de rolagem das janelas quando exibidas no designer do Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary>Obtém uma enumeração de objetos <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" /> que representam janelas e como deve ser o tema de suas barras de rolagem quando exibidas no designer do Visual Studio.</summary>
      <returns>Uma enumeração de objetos que representam janelas e como deve ser o tema de suas barras de rolagem quando exibidas no designer do Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary>Serializa os dicionários de cadeia de caracteres.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Desserializa o objeto CodeDOM (Modelo de Objeto do Documento de Código) serializado em um objeto.</summary>
      <param name="manager">Uma interface do gerenciador de serialização que é usada durante o processo de desserialização.</param>
      <param name="codeObject">Um objeto CodeDOM serializado para desserializar.</param>
      <returns>O objeto CodeDOM desserializado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> ou <paramref name="codeObject" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializa o objeto especificado em um objeto CodeDOM (Modelo de Objeto do Documento de código).</summary>
      <param name="manager">O gerenciador de serialização a ser usado durante a serialização.</param>
      <param name="value">O objeto a ser serializado.</param>
      <returns>Um objeto CodeDOM que representa o objeto que foi serializado.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.IMenuEditorService">
      <summary>Fornece acesso ao menu de edição de serviço.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.GetMenu">
      <summary>Obtém o menu atual.</summary>
      <returns>O <see cref="T:System.Windows.Forms.Menu" /> atual.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.IsActive">
      <summary>Indica se o menu atual está ativo.</summary>
      <returns>
        <see langword="true" /> se o menu atual estiver ativo no momento; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.MessageFilter(System.Windows.Forms.Message@)">
      <summary>Permite que o serviço de editor intercepte mensagens Win32.</summary>
      <param name="m">O <see cref="T:System.Windows.Forms.Message" /> a processar.</param>
      <returns>
        <see langword="true" /> se a mensagem for para o controle; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetMenu(System.Windows.Forms.Menu)">
      <summary>Define o menu especificado visível no formulário.</summary>
      <param name="menu">O <see cref="T:System.Windows.Forms.Menu" /> a ser renderizado.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetSelection(System.Windows.Forms.MenuItem)">
      <summary>Define o item de menu selecionado do menu atual.</summary>
      <param name="item">Um <see cref="T:System.Windows.Forms.MenuItem" /> para definir como o item de menu selecionado no momento.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary>Define um conjunto de campos <see cref="T:System.ComponentModel.Design.CommandID" /> em que cada um corresponde a uma função de comando fornecida pelo ambiente de host.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.MenuCommands" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o menu da bandeja de componentes.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o menu do contêiner.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar a página de propriedades do designer.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador do rótulo de edição.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla cancelar.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla padrão.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla final.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla de página inicial.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador de invocação de marcação inteligente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla mover para baixo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla mover para a esquerda.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla mover para a direita.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla mover para cima.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla deslocar para baixo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla de deslocamento de redução da altura.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla de deslocamento de aumento da altura.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla deslocar para a esquerda.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla deslocar para a direita.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla deslocar para cima.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla de deslocamento de redução da largura.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla de deslocamento de aumento da largura.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla de reverter o cancelamento.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla selecionar próximo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla selecionar anterior.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla SHIFT-END.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla SHIFT-HOME.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla de tamanho de redução da altura.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla de tamanho de aumento da altura.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla de tamanho de redução da largura.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla de tamanho de aumento da largura.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o manipulador da tecla de seleção da ordem de tabulação.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o menu de seleção.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para definir o retângulo de status.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para definir o texto do retângulo de status.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary>Um <see cref="T:System.ComponentModel.Design.CommandID" /> que pode ser usado para acessar o menu de seleção de bandeja.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary>Estende o comportamento do modo de design de um <see cref="T:System.Windows.Forms.Control" /> que dá suporte a controles aninhados.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary>Adiciona guias de alinhamento de preenchimento.</summary>
      <param name="snapLines">Um <see cref="T:System.Collections.ArrayList" /> que contém objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary>Obtém um valor que indica se os controles selecionados terão o parentesco redefinido.</summary>
      <returns>
        <see langword="true" /> se os controles que foram selecionados por laço na superfície do designer serão redirecionados para o controle desse designer.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary>Obtém um valor que indica se uma caixa de arrastar genérica deve ser desenhada ao arrastar o item da caixa de ferramentas sobre a superfície de designer.</summary>
      <returns>
        <see langword="true" /> se uma caixa de arrastar genérico deve ser desenhada ao arrastar um item de Toolbox sobre a superfície do designer; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary>Obtém um valor que indica se a ordem z de controles arrastados deve ser mantida quando solto em um <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
      <returns>
        <see langword="true" /> se a ordem z de controles arrastados deve ser mantida quando descartada em um <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary>Chamado quando um componente é adicionado ao contêiner pai.</summary>
      <param name="component">O componente a ser testado quanto a erros.</param>
      <returns>
        <see langword="true" /> se <paramref name="component" /> puder ser adicionado, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary>Indica se o controle especificado pode ser um filho do controle gerenciado por este designer.</summary>
      <param name="control">O <see cref="T:System.Windows.Forms.Control" /> a ser testado.</param>
      <returns>
        <see langword="true" /> se o controle especificado puder ser um filho do controle gerenciado por este designer, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary>Indica se o controle gerenciado pelo designer especificado pode ser um filho do controle gerenciado por este designer.</summary>
      <param name="controlDesigner">O designer para o controle a ser testado.</param>
      <returns>
        <see langword="true" /> se o controle gerenciado pelo designer especificado puder ser um filho do controle gerenciado por esse designer, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary>Cria um componente ou controle da ferramenta especificada e o adiciona ao documento de design atual.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> do qual criar um componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary>Cria um componente ou controle da ferramenta especificada e o adiciona ao documento de design atual no local especificado.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> do qual criar um componente.</param>
      <param name="location">O <see cref="T:System.Drawing.Point" />, em coordenadas de tela de exibição de tempo de design, no qual centralizar o componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary>Cria um componente ou controle da ferramenta especificada e o adiciona ao documento de design atual dentro dos limites do retângulo especificado.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> do qual criar um componente.</param>
      <param name="bounds">Um <see cref="T:System.Drawing.Rectangle" /> indicando o local e o tamanho do componente criado da ferramenta. Os valores <see cref="P:System.Drawing.Rectangle.X" /> e <see cref="P:System.Drawing.Rectangle.Y" /> do <see cref="T:System.Drawing.Rectangle" /> indicam as coordenadas de tela de exibição de tempo de design do canto superior esquerdo do componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Fornece a funcionalidade básica para todos os métodos <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> do qual criar um componente.</param>
      <param name="x">A posição horizontal, nas coordenadas de exibição de tempo de design, do local do canto esquerdo da ferramenta se um tamanho for especificado, a posição horizontal do centro da ferramenta se nenhum tamanho for especificado.</param>
      <param name="y">A posição vertical, nas coordenadas de exibição de tempo de design, do local do canto superior da ferramenta se um tamanho for especificado, a posição vertical do centro da ferramenta se nenhum tamanho for especificado.</param>
      <param name="width">A largura da ferramenta. Esse parâmetro é ignorado se o parâmetro <paramref name="hasSize" /> está definido como <see langword="false" />.</param>
      <param name="height">A altura da ferramenta. Esse parâmetro é ignorado se o parâmetro <paramref name="hasSize" /> está definido como <see langword="false" />.</param>
      <param name="hasLocation">
        <see langword="true" /> se um local para o componente for especificado, <see langword="false" /> se o componente deve ser posicionado no centro do controle selecionado no momento.</param>
      <param name="hasSize">
        <see langword="true" /> se um tamanho para o componente for especificado, <see langword="false" /> se os valores de altura e largura padrão do componente devem ser usados.</param>
      <returns>Uma matriz de componentes criados da ferramenta.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary>Obtém o local padrão para um controle adicionado ao designer.</summary>
      <returns>Um <see cref="T:System.Drawing.Point" /> que indica o local padrão para um controle adicionado ao designer.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary>Obtém ou define um valor que indica se uma grade deve ser desenhada no controle para este designer.</summary>
      <returns>
        <see langword="true" /> se uma grade deve ser desenhada no controle no designer; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary>Obtém um valor que indica se retângulos de arraste são desenhados pelo designer.</summary>
      <returns>
        <see langword="true" /> se os retângulos de arrastar forem desenhados; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary>Obtém o controle do designer do componente especificado.</summary>
      <param name="component">O componente para o qual recuperar o controle.</param>
      <returns>O <see cref="T:System.Windows.Forms.Control" /> ao qual o componente especificado pertence.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Obtém ou define um glifo que representa os limites do controle.</summary>
      <param name="selectionType">Um valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica o estado da seleção.</param>
      <returns>Um glifo que representa os limites do controle.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Obtém uma coleção de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que representam as bordas de seleção e as alças de captura de um controle padrão.</summary>
      <param name="selectionType">Um valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica o estado da seleção.</param>
      <returns>Uma coleção de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> .</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary>Usado derivando classes para determinar se ele retorna o controle sendo criado ou algum outro <see cref="T:System.ComponentModel.Container" /> durante a adição do componente a ele.</summary>
      <param name="component">O componente para o qual recuperar o <see cref="T:System.Windows.Forms.Control" /> pai.</param>
      <returns>O <see cref="T:System.Windows.Forms.Control" /> pai do componente.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary>Atualiza a posição do retângulo especificado, ajustando-o para o alinhamento de grade se o modo de alinhamento de grade está habilitado.</summary>
      <param name="originalRect">Um <see cref="T:System.Drawing.Rectangle" /> indicando a posição inicial do componente sendo atualizado.</param>
      <param name="dragRect">Um <see cref="T:System.Drawing.Rectangle" /> que indica a nova posição do componente.</param>
      <param name="updateSize">
        <see langword="true" /> para atualizar o tamanho do retângulo se houve alguma alteração, caso contrário, <see langword="false" />.</param>
      <returns>Um retângulo que indica a posição do componente em coordenadas de tela de exibição de tempo de design. Se nenhuma alteração tiver sido feita, esse método retorna o retângulo original.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary>Obtém ou define o tamanho de cada quadrado da grade que é desenhada quando o designer está no modo de desenho de grade.</summary>
      <returns>Um <see cref="T:System.Drawing.Size" /> que representa o tamanho de cada quadrado da grade desenhada em um formulário ou controle de usuário.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Size" /> está fora do intervalo permitido para <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />. O valor mínimo padrão é 2 e o valor máximo padrão é 200.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Inicializa o designer com o componente especificado.</summary>
      <param name="component">O <see cref="T:System.ComponentModel.IComponent" /> a ser associado ao designer.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Inicializa um componente recém-criado.</summary>
      <param name="defaultValues">Um dicionário de nome/valor de valores padrão a ser aplicado a propriedades. Poderá ser <see langword="null" /> se nenhum valor padrão for especificado.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary>Cria uma ferramenta do <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado.</summary>
      <param name="toInvoke">O <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> com o qual a ferramenta deve ser usada.</param>
      <param name="tool">O <see cref="T:System.Drawing.Design.ToolboxItem" /> do qual criar uma ferramenta.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary>Obtém um valor que indica se o designer tem uma ferramenta válida durante uma operação do tipo arrastar.</summary>
      <returns>A ferramenta que está sendo arrastada, se estiver criando um componente, ou <see langword="null" /> se não houver nenhuma ferramenta.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>Chamado para limpar uma operação do tipo "arrastar e soltar".</summary>
      <param name="de">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Chamado quando um objeto do tipo "arrastar e soltar" é solto no modo de exibição do designer do controle.</summary>
      <param name="de">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Chamado quando uma operação do tipo "arrastar e soltar" entra na exibição do designer do controle.</summary>
      <param name="de">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>Chamado quando uma operação do tipo "arrastar e soltar" sai da exibição do designer do controle.</summary>
      <param name="e">Um <see cref="T:System.EventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Chamado quando um objeto do tipo "arrastar e soltar" é arrastado sobre a exibição do designer do controle.</summary>
      <param name="de">Um <see cref="T:System.Windows.Forms.DragEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>Chamada em resposta quando o botão esquerdo do mouse é pressionado e segurado enquanto está sobre o componente.</summary>
      <param name="x">A coordenada X do mouse nas coordenadas de tela.</param>
      <param name="y">A coordenada Y do mouse nas coordenadas de tela.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>Chamado no final de uma operação do tipo "arrastar e soltar" para concluir ou cancelar a operação.</summary>
      <param name="cancel">
        <see langword="true" /> para cancelar a operação de arrastar, <see langword="false" /> para confirmá-lo.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>Chamada para cada movimento do mouse durante uma operação do tipo "arrastar e soltar".</summary>
      <param name="x">A coordenada X do mouse nas coordenadas de tela.</param>
      <param name="y">A coordenada Y do mouse nas coordenadas de tela.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>Chamada quando o controle que o designer está gerenciando pinta sua superfície para que o designer possa pintar quaisquer adornos adicionais sobre o controle.</summary>
      <param name="pe">Um <see cref="T:System.Windows.Forms.PaintEventArgs" /> que fornece dados para o evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary>Fornece uma oportunidade para alterar o cursor do mouse atual.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Ajusta o conjunto de propriedades que o componente exporá por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">Um <see cref="T:System.Collections.IDictionary" /> que contém as propriedades da classe do componente.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary>Obtém uma lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representam os pontos de alinhamento significativos desse controle.</summary>
      <returns>Uma lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representa pontos de alinhamento significativos para este controle.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary>Classe base do designer para estender o comportamento de um <see cref="T:System.Windows.Forms.Control" /> que deve receber mensagens de rolagem.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>Indica se um clique do mouse no ponto especificado deve ser manipulado pelo controle.</summary>
      <param name="pt">Um <see cref="T:System.Drawing.Point" /> que indica a posição em que o mouse foi clicado, em coordenadas de tela.</param>
      <returns>
        <see langword="true" /> se um clique em um ponto especificado será manipulado pelo controle. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Processa mensagens do Windows e passa mensagens WM_HSCROLL e WM_VSCROLL para o controle em tempo de design.</summary>
      <param name="m">O <see cref="T:System.Windows.Forms.Message" /> a processar.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary>Define os identificadores que são usados para indicar as regras de seleção de um componente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary>Indica que o componente é compatível com dimensionamento em todos os trajetos.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary>Indica que o componente é compatível com redimensionamento vindo da parte inferior.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary>Indica que o componente é compatível com redimensionamento vindo da esquerda.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary>Indica que o componente está bloqueado para o contêiner dele. Substitui os sinalizadores de bit <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" /> e <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> dessa enumeração.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary>Indica que o componente é compatível com uma propriedade de local que permite que ele seja movido na tela.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary>Indica ausência de atributos de seleção especiais.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary>Indica que o componente é compatível com redimensionamento vindo da direita.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary>Indica que o componente é compatível com redimensionamento vindo da parte superior.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary>Indica que o componente tem alguma forma de interface do usuário visível e o serviço de seleção está desenhando uma borda de seleção ao redor dessa interface do usuário. Se um componente selecionado tem essa regra definida, você pode presumir que o componente implementa <see cref="T:System.ComponentModel.IComponent" /> e que está associado a uma instância do designer correspondente.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary>Um valor que indica se as barras de rolagem de uma janela e seus filhos serão com tema quando exibido no designer do Visual Studio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary>A janela e todos os seus filhos terá barras de rolagem com tema.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary>A janela e todos os seus filhos não poderá ser com tema.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary>A janela terá com tema barras de rolagem, mas todos os seus filhos não ser com tema.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary>Representa uma janela e um valor que indica qual deve ser o tema das barras de rolagem quando exibidas no designer do Visual Studio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary>O identificador da janela.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary>Um valor que indica qual deve ser o tema das barras de rolagem da janela quando exibidas no designer do Visual Studio.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary>Fornece acesso para obter e definir valores de opção de um Designer de Formulários do Windows.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary>Obtém o <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> exposto pelo <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
      <returns>O <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> exposto <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> pelo.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>Popula uma <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</summary>
      <param name="options">A coleção a ser populada.</param>
    </member>
  </members>
</doc>