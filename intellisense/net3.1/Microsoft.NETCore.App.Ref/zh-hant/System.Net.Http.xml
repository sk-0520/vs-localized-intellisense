<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary>提供以位元組陣列為基礎的 HTTP 內容。</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary>初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 類別的新執行個體。</summary>
      <param name="content">用來初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 的內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 類別的新執行個體。</summary>
      <param name="content">用來初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 的內容。</param>
      <param name="offset">
        <paramref name="content" /> 參數中用來初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 的位移 (以位元組為單位)。</param>
      <param name="count">
        <paramref name="content" />中的位元組數目（從用來初始化<see cref="T:System.Net.Http.ByteArrayContent" /> 的<paramref name="offset" />參數開始）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 參數小於零。
-或-
<paramref name="offset" /> 參數大於 <paramref name="content" /> 參數指定的內容長度。
-或-
<paramref name="count" /> 參數小於零。
-或-
<paramref name="count" /> 參數大於 <paramref name="content" /> 參數指定的內容長度，減去 <paramref name="offset" /> 參數。</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary>以非同步作業方式建立用於讀取的 HTTP 內容資料流，而其備份存放區是 <see cref="T:System.Net.Http.ByteArrayContent" /> 中的記憶體。</summary>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>以非同步作業方式序列化並寫入建構函式中提供的位元組陣列至 HTTP 內容資料流。</summary>
      <param name="stream">目標資料流。</param>
      <param name="context">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary>判斷位元組陣列是否有有效的位元組長度。</summary>
      <param name="length">位元組陣列的位元組長度。</param>
      <returns>若 <paramref name="length" /> 為有效的長度則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary>指定如何提供用戶端憑證。</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary>
        <see cref="T:System.Net.Http.HttpClientHandler" /> 會嘗試自動提供所有可用的用戶端憑證。</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary>應用程式會以手動方式提供用戶端憑證給 <see cref="T:System.Net.Http.WebRequestHandler" />。 這個值為預設值。</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary>HTTP 處理常式的類型，這些處理常式會將 HTTP 回應訊息的處理委派給另一個處理常式，也稱為內部處理常式。</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary>建立 <see cref="T:System.Net.Http.DelegatingHandler" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>使用特定的內部處理常式，建立 <see cref="T:System.Net.Http.DelegatingHandler" /> 類別的新執行個體。</summary>
      <param name="innerHandler">負責處理 HTTP 回應訊息的內部處理常式。</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Net.Http.DelegatingHandler" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary>取得或設定處理 HTTP 回應訊息的內部處理常式。</summary>
      <returns>HTTP 回應訊息的內部處理常式。</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>以非同步作業方式將 HTTP 要求傳送到內部處理常式，以傳送到伺服器。</summary>
      <param name="request">要傳送至伺服器的 HTTP 要求訊息。</param>
      <param name="cancellationToken">用於取消作業的取消語彙基元。</param>
      <returns>工作物件，表示非同步作業。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary>使用 application/x-www-form-urlencoded MIME 類型編碼之名稱/值 Tuple 的容器。</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>使用特定名稱/值組集合，初始化 <see cref="T:System.Net.Http.FormUrlEncodedContent" /> 類別的新執行個體。</summary>
      <param name="nameValueCollection">名稱/值組的集合。</param>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary>表示 Authorization、ProxyAuthorization、WWW-Authenticate 和 Proxy 驗證標頭值中的驗證資訊。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 類別的新執行個體。</summary>
      <param name="scheme">用於授權的配置。</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 類別的新執行個體。</summary>
      <param name="scheme">用於授權的配置。</param>
      <param name="parameter">認證，包含所要求資源的使用者代理程式驗證資訊。</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary>取得包含所要求資源的使用者代理程式之驗證資訊的認證。</summary>
      <returns>包含驗證資訊的認證。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 執行個體。</summary>
      <param name="input">表示驗證標頭值資訊的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的驗證標頭值資訊。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary>取得用於授權的配置。</summary>
      <returns>用於授權的配置。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary>代表 Cache-Control 標頭的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see langword="true" /> 和目前的物件相等，則為 <see cref="T:System.Object" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary>快取擴充語彙基元，每個都具有一個選擇性的指派值。</summary>
      <returns>快取擴充語彙基元的集合，每個都具有一個選擇性的指派值。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary>HTTP 用戶端願意接受回應的最長期限 (以秒為單位) 。</summary>
      <returns>時間 (秒)。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary>HTTP 用戶端是否願意接受已超過其到期時間的回應。</summary>
      <returns>如果 HTTP 用戶端願意接受已超過其到期時間的回應，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary>最大時間 (秒)，HTTP 用戶端願意接受超過其到期時間的回應。</summary>
      <returns>時間 (秒)。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary>HTTP 用戶端願意接受回應的有效存留期 (以秒為單位)。</summary>
      <returns>時間 (秒)。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary>當快取項目過時時，原始伺服器是否需要在任何後續使用中重新驗證快取項目。</summary>
      <returns>當項目過時時，如果原始伺服器需要在任何後續使用中重新驗證快取項目則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary>HTTP 用戶端是否願意接受快取回應。</summary>
      <returns>
        <see langword="true" />，如果 HTTP 用戶端不願意接受快取的回應，則為，否則，<see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary>HTTP 回應上的 cache-control 標頭欄位中，"no-cache" 指示詞內的欄位名稱集合。</summary>
      <returns>欄位名稱的集合。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary>快取是否不得儲存 HTTP 要求訊息或任何回應的任一部分。</summary>
      <returns>
        <see langword="true" /> 如果快取不得儲存 HTTP 要求訊息或任何回應的任何部分，則為，否則，<see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary>快取或 Proxy 是否不得變更實體主體的任一部分。</summary>
      <returns>如果快取或 Proxy 不得變更實體主體的任一部分則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary>快取是否應該使用與 HTTP 要求的其他限制式一致的快取項目來回應，或者使用 504 (閘道逾時) 狀態回應。</summary>
      <returns>如果快取應該使用與 HTTP 要求的其他限制式一致的快取項目來回應，或者使用 504 (閘道逾時) 狀態回應，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 執行個體。</summary>
      <param name="input">代表快取控制標頭值資訊的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的快取控制標頭值資訊。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary>是否所有或部分 HTTP 回應訊息是針對單一使用者，因此共用快取不得快取。</summary>
      <returns>如果 HTTP 回應訊息是針對單一使用者，因此共用快取不得快取，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary>HTTP 回應上的 cache-control 標頭欄位中，"private" 指示詞內的集合欄位名稱。</summary>
      <returns>欄位名稱的集合。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary>當快取項目對於共用使用者代理程式快取變成過時時，原始伺服器是否需要在任何後續使用中重新驗證快取項目。</summary>
      <returns>
        <see langword="true" /> 表示當快取對於共用使用者代理程式快取變成過時時，原始伺服器需要在任何後續使用中重新驗證快取項目；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary>HTTP 回應是否可由任何快取進行快取，即使它通常不可快取，或只能在非共用快取內進行快取。</summary>
      <returns>如果 HTTP 可由任何快取進行快取，則為 <see langword="true" /> (即使通常為不可快取，或僅在非共用快取內可快取)；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary>HTTP 回應中的共用最長使用期限 (以秒為單位)，可覆寫 cache-control 標頭中或者共用快取之 Expires 標頭中的 "max-age" 指示詞。</summary>
      <returns>時間 (秒)。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 版本。</param>
      <returns>如果 <see langword="true" /> 是有效的 <paramref name="input" /> 資訊，則為 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary>代表 Content-Disposition 標頭的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="source">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="dispositionType">包含 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 的字串。</param>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary>檔案建立的日期。</summary>
      <returns>檔案建立日期。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary>內容主體部分的配置類型。</summary>
      <returns>配置類型。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary>建議建構檔案名稱的方式，以在實體卸離並儲存在不同的檔案中時用來儲存訊息承載。</summary>
      <returns>建議的檔案名稱。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary>一項關於如何建構檔案名稱的建議，以在實體卸離並儲存在不同的檔案中時用來儲存訊息內容。</summary>
      <returns>格式為 filename* 的建議檔案名稱。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary>檔案最近修改的日期。</summary>
      <returns>檔案修改日期。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary>內容主體部分的名稱。</summary>
      <returns>內容主體部分的名稱。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary>包含內容配置標頭的一組參數。</summary>
      <returns>參數的集合。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 執行個體。</summary>
      <param name="input">字串，代表內容配置標頭值資訊。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的內容配置標頭值資訊。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary>檔案上次讀取日期。</summary>
      <returns>上次讀取日期。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary>檔案的估計大小 (以位元組為單位)。</summary>
      <returns>估計大小 (以位元組為單位)。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary>代表 Content-Range 標頭的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 類別的新執行個體。</summary>
      <param name="length">範圍的起始和結束點 (以位元組表示)。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 類別的新執行個體。</summary>
      <param name="from">要開始傳送資料的位置 (位元組)。</param>
      <param name="to">要停止傳送資料的位置 (以位元組表示)。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 類別的新執行個體。</summary>
      <param name="from">要開始傳送資料的位置 (位元組)。</param>
      <param name="to">要停止傳送資料的位置 (以位元組表示)。</param>
      <param name="length">範圍的起始和結束點 (以位元組表示)。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary>判斷指定的物件是否等於目前的 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary>取得要開始傳送資料的位置。</summary>
      <returns>要開始傳送資料的位置 (位元組)。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary>取得 Content-Range 標頭是否已指定長度。</summary>
      <returns>如果 Content-Range 已指定長度，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary>取得 Content-Range 是否已指定範圍。</summary>
      <returns>如果 Content-Range 已指定範圍，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary>取得完整實體內容的長度。</summary>
      <returns>完整實體內容的長度。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 執行個體。</summary>
      <param name="input">代表內容範圍標頭值資訊的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的內容範圍標頭值資訊。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary>取得要停止傳送資料的位置。</summary>
      <returns>要停止傳送資料的位置。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary>使用的範圍單位。</summary>
      <returns>包含範圍單位的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary>代表 entity-tag 標頭值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 類別的新執行個體。</summary>
      <param name="tag">包含 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 的字串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 類別的新執行個體。</summary>
      <param name="tag">包含 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 的字串。</param>
      <param name="isWeak">表示這個實體標記標頭是否為弱式驗證程式的值。 如果實體標記標頭是弱式驗證程式，則應該將 <paramref name="isWeak" /> 設定為 <see langword="true" />。 如果實體標記標頭是強式驗證程式，則應該將 <paramref name="isWeak" /> 設定為 <see langword="false" />。</param>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary>取得實體標記標頭值。</summary>
      <returns>傳回 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary>取得實體標記前面是否加上弱式指標。</summary>
      <returns>如果實體標記前面加上弱式指標則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 執行個體。</summary>
      <param name="input">代表實體標記標頭值資訊的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的實體標記標頭值資訊。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary>取得模糊的加引號字串。</summary>
      <returns>模糊的加引號字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary>表示內容標頭集合，如 RFC 2616 中的定義。</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary>取得 HTTP 回應的 <see langword="Allow" /> 內容標頭值。</summary>
      <returns>HTTP 回應上 <see langword="Allow" /> 標頭的值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary>取得 HTTP 回應的 <see langword="Content-Disposition" /> 內容標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Content-Disposition" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary>取得 HTTP 回應的 <see langword="Content-Encoding" /> 內容標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Content-Encoding" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary>取得 HTTP 回應的 <see langword="Content-Language" /> 內容標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Content-Language" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary>取得或設定 HTTP 回應的 <see langword="Content-Length" /> 內容標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Content-Length" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary>取得或設定 HTTP 回應的 <see langword="Content-Location" /> 內容標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Content-Location" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary>取得或設定 HTTP 回應的 <see langword="Content-MD5" /> 內容標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Content-MD5" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary>取得或設定 HTTP 回應的 <see langword="Content-Range" /> 內容標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Content-Range" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary>取得或設定 HTTP 回應的 <see langword="Content-Type" /> 內容標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Content-Type" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary>取得或設定 HTTP 回應的 <see langword="Expires" /> 內容標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Expires" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary>取得或設定 HTTP 回應的 <see langword="Last-Modified" /> 內容標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Last-Modified" /> 內容標頭值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary>標頭及其值的集合，如 RFC 2616 中所定義。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>將指定的標頭及其值加入至 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中。</summary>
      <param name="name">要加入至集合的標頭。</param>
      <param name="values">要加入至集合的標頭值清單。</param>
      <exception cref="T:System.ArgumentException">名稱不可為 Null 或空白。</exception>
      <exception cref="T:System.ArgumentNullException">值不可為 Null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">標頭名稱使用錯誤。 請確認要求標頭搭配 HttpRequestMessage 物件使用；回應標頭搭配 HttpResponseMessage 物件使用；而內容標頭則搭配 HttpContent 物件使用。</exception>
      <exception cref="T:System.FormatException">標頭名稱格式無效。
-或-
標頭值中的新行字元後面必須接著空白字元。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary>將指定的標頭及其值加入至 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中。</summary>
      <param name="name">要加入至集合的標頭。</param>
      <param name="value">標頭的內容。</param>
      <exception cref="T:System.ArgumentException">名稱不可為 Null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException">標頭名稱使用錯誤。 請確認要求標頭搭配 HttpRequestMessage 物件使用；回應標頭搭配 HttpResponseMessage 物件使用；而內容標頭則搭配 HttpContent 物件使用。</exception>
      <exception cref="T:System.FormatException">標頭名稱格式無效。
-或-
標頭值中的新行字元後面必須接著空白字元。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary>移除 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中的所有標頭。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary>傳回在 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中是否有特定的標頭。</summary>
      <param name="name">特定的標頭。</param>
      <returns>
        <see langword="true" /> 表示在集合中存在指定的標頭；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary>傳回可以逐一查看 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 執行個體的列舉值。</summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 的列舉程式。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary>傳回 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中儲存之指定標頭的所有標頭值。</summary>
      <param name="name">要傳回值的指定標頭。</param>
      <returns>標頭字串的陣列。</returns>
      <exception cref="T:System.InvalidOperationException">找不到標頭。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary>從 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中移除指定的標頭。</summary>
      <param name="name">要從集合中移除的標頭名稱。</param>
      <returns>傳回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>取得可以逐一查看 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 的列舉程式。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 實作的執行個體，可逐一查看 <see cref="T:System.Net.Http.Headers.HttpHeaders" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>傳回的值指示指定的標頭及其值是否未驗證提供的資訊便加入 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合。</summary>
      <param name="name">要加入至集合的標頭。</param>
      <param name="values">標頭的值。</param>
      <returns>如果指定的標頭 <paramref name="name" /> 和 <paramref name="values" /> 可以加入集合則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary>傳回的值指示指定的標頭及其值是否未驗證提供的資訊便加入 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合。</summary>
      <param name="name">要加入至集合的標頭。</param>
      <param name="value">標頭的內容。</param>
      <returns>如果指定的標頭 <paramref name="name" /> 和 <paramref name="value" /> 可以加入集合則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary>如果指定的標頭和指定值儲存於 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中，則會傳回。</summary>
      <param name="name">指定的標頭。</param>
      <param name="values">指定的標頭值。</param>
      <returns>
        <see langword="true" /> 為指定的標頭 <paramref name="name" /> 且 <see langword="values" /> 儲存於集合中；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary>代表標頭值的集合。</summary>
      <typeparam name="T">標頭集合類型。</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary>將項目加入至 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。</summary>
      <param name="item">要加入至標頭集合中的項目。</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary>移除 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 的所有項目。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary>判斷 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 是否包含項目。</summary>
      <param name="item">尋找標頭集合的項目。</param>
      <returns>如果項目包含在 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 執行個體中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary>從目標陣列的指定索引開始，將整個 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 複製到相容的一維 <see cref="T:System.Array" />。</summary>
      <param name="array">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 複製過來之項目的目的端。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary>取得 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 中的標頭數目。</summary>
      <returns>集合中的標頭數目</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary>傳回在 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 中逐一查看的列舉值。</summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 執行個體的列舉程式。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary>取得值，這個值指出 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />執行個體是否為唯讀。</summary>
      <returns>如果 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 執行個體是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary>剖析項目並將其加入至 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。</summary>
      <param name="input">要加入的項目。</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary>從 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 移除指定的項目。</summary>
      <param name="item">要移除的項目。</param>
      <returns>如果 <paramref name="item" /> 已從 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 執行個體移除則為 <see langword="true" />；否則為 <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回在 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 中逐一查看的列舉值。</summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 執行個體的列舉程式。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 物件的字串。 物件。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary>判斷是否可以剖析輸入並加入到 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。</summary>
      <param name="input">要驗證的項目。</param>
      <returns>如果 <paramref name="input" /> 可以剖析並加入到 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 執行個體，則為 <see langword="true" />；否則為 <see langword="false" /></returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary>表示要求標頭集合，如 RFC 2616 中的定義。</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary>取得 HTTP 要求的 <see langword="Accept" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Accept" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary>取得 HTTP 要求的 <see langword="Accept-Charset" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Accept-Charset" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary>取得 HTTP 要求的 <see langword="Accept-Encoding" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Accept-Encoding" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary>取得 HTTP 要求的 <see langword="Accept-Language" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Accept-Language" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary>取得或設定 HTTP 要求的 <see langword="Authorization" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Authorization" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary>取得或設定 HTTP 要求的 <see langword="Cache-Control" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Cache-Control" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary>取得 HTTP 要求的 <see langword="Connection" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Connection" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary>取得或設定一個值，以指示 HTTP 要求的 <see langword="Connection" /> 標頭是否包含 Close。</summary>
      <returns>如果 <see langword="Connection" /> 標頭包含 Close 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary>取得或設定 HTTP 要求的 <see langword="Date" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Date" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary>取得 HTTP 要求的 <see langword="Expect" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Expect" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary>取得或設定值，指示 HTTP 要求的 <see langword="Expect" /> 標頭是否包含 Continue。</summary>
      <returns>如果 <see langword="Expect" /> 標頭包含 Continue，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary>取得或設定 HTTP 要求的 <see langword="From" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="From" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary>取得或設定 HTTP 要求的 <see langword="Host" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Host" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary>取得 HTTP 要求的 <see langword="If-Match" /> 標頭值。</summary>
      <returns>傳回 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。
HTTP 要求的 <see langword="If-Match" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary>取得或設定 HTTP 要求的 <see langword="If-Modified-Since" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="If-Modified-Since" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary>取得 HTTP 要求的 <see langword="If-None-Match" /> 標頭值。</summary>
      <returns>取得 HTTP 要求的 <see langword="If-None-Match" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary>取得或設定 HTTP 要求的 <see langword="If-Range" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="If-Range" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary>取得或設定 HTTP 要求的 <see langword="If-Unmodified-Since" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="If-Unmodified-Since" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary>取得或設定 HTTP 要求的 <see langword="Max-Forwards" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Max-Forwards" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary>取得 HTTP 要求的 <see langword="Pragma" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Pragma" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary>取得或設定 HTTP 要求的 <see langword="Proxy-Authorization" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Proxy-Authorization" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary>取得或設定 HTTP 要求的 <see langword="Range" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Range" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary>取得或設定 HTTP 要求的 <see langword="Referer" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Referer" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary>取得 HTTP 要求的 <see langword="TE" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="TE" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary>取得 HTTP 要求的 <see langword="Trailer" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Trailer" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary>取得 HTTP 要求的 <see langword="Transfer-Encoding" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Transfer-Encoding" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary>取得或設定一個值，以指示 HTTP 要求的 <see langword="Transfer-Encoding" /> 標頭是否包含區塊。</summary>
      <returns>如果 <see langword="Transfer-Encoding" /> 標頭包含區塊則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary>取得 HTTP 要求的 <see langword="Upgrade" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Upgrade" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary>取得 HTTP 要求的 <see langword="User-Agent" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="User-Agent" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary>取得 HTTP 要求的 <see langword="Via" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Via" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary>取得 HTTP 要求的 <see langword="Warning" /> 標頭值。</summary>
      <returns>HTTP 要求的 <see langword="Warning" /> 標頭值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary>表示回應標頭集合，如 RFC 2616 中的定義。</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary>取得 HTTP 回應的 <see langword="Accept-Ranges" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Accept-Ranges" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary>取得或設定 HTTP 回應的 <see langword="Age" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Age" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary>取得或設定 HTTP 回應的 <see langword="Cache-Control" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Cache-Control" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary>取得 HTTP 回應的 <see langword="Connection" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Connection" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary>取得或設定一個值，以指示 HTTP 回應的 <see langword="Connection" /> 標頭是否包含 Close。</summary>
      <returns>如果<see langword="true" /> 標頭包含 Close 則為 <see langword="Connection" /> ，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary>取得或設定 HTTP 回應的 <see langword="Date" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Date" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary>取得或設定 HTTP 回應的 <see langword="ETag" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="ETag" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary>取得或設定 HTTP 回應的 <see langword="Location" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Location" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary>取得 HTTP 回應的 <see langword="Pragma" /> 標頭值。</summary>
      <returns>傳回 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。
HTTP 回應的 <see langword="Pragma" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary>取得 HTTP 回應的 <see langword="Proxy-Authenticate" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Proxy-Authenticate" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary>取得或設定 HTTP 回應的 <see langword="Retry-After" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Retry-After" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary>取得 HTTP 回應的 <see langword="Server" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Server" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary>取得 HTTP 回應的 <see langword="Trailer" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Trailer" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary>取得 HTTP 回應的 <see langword="Transfer-Encoding" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Transfer-Encoding" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary>取得或設定一個值，以指示 HTTP 回應的 <see langword="Transfer-Encoding" /> 標頭是否包含區塊。</summary>
      <returns>如果 <see langword="Transfer-Encoding" /> 標頭包含區塊則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary>取得 HTTP 回應的 <see langword="Upgrade" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Upgrade" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary>取得 HTTP 回應的 <see langword="Vary" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Vary" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary>取得 HTTP 回應的 <see langword="Via" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Via" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary>取得 HTTP 回應的 <see langword="Warning" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="Warning" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary>取得 HTTP 回應的 <see langword="WWW-Authenticate" /> 標頭值。</summary>
      <returns>HTTP 回應的 <see langword="WWW-Authenticate" /> 標頭值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary>表示用於依 RFC 2616 所定義之內容類型標頭的媒體類型。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 類別的新執行個體。</summary>
      <param name="source">用來初始化新執行個體的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 物件。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 類別的新執行個體。</summary>
      <param name="mediaType">表示為字串以初始化新執行個體的來源。</param>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary>取得或設定字元集。</summary>
      <returns>字元集。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary>取得或設定媒體類型標頭值。</summary>
      <returns>媒體類型標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary>取得或設定媒體類型標頭值參數。</summary>
      <returns>媒體類型標頭值參數。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 執行個體。</summary>
      <param name="input">代表媒體類型標頭值資訊的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的媒體類型標頭值資訊。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary>表示具有用於內容類型標頭之其他品質係數的媒體類型。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 類別的新執行個體。</summary>
      <param name="mediaType">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />，表示為字串以初始化新執行個體。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 類別的新執行個體。</summary>
      <param name="mediaType">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />，表示為字串以初始化新執行個體。</param>
      <param name="quality">與這個標頭值相關聯的品質。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 執行個體。</summary>
      <param name="input">代表包含 quality 標頭值資訊之媒體類型的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />不是包含 quality 標頭值資訊的有效媒體類型。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary>取得或設定 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />的品質值。</summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 物件的品質值。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary>表示用於各種依 RFC 2616 所定義之標頭的名稱/值組。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 類別的新執行個體。</summary>
      <param name="source">用來初始化新執行個體的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 物件。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 類別的新執行個體。</summary>
      <param name="name">標頭名稱。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 類別的新執行個體。</summary>
      <param name="name">標頭名稱。</param>
      <param name="value">標頭值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary>取得標頭名稱。</summary>
      <returns>標頭名稱。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 執行個體。</summary>
      <param name="input">代表名稱值標頭值資訊的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的名稱值標頭值資訊。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary>取得標頭值。</summary>
      <returns>標頭值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary>表示搭配參數用於各種依 RFC 2616 所定義之標頭的名稱/值組。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 類別的新執行個體。</summary>
      <param name="source">用來初始化新執行個體的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 物件。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 類別的新執行個體。</summary>
      <param name="name">標頭名稱。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 類別的新執行個體。</summary>
      <param name="name">標頭名稱。</param>
      <param name="value">標頭值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary>從 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 物件取得參數。</summary>
      <returns>包含下列參數的集合。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 執行個體。</summary>
      <param name="input">代表包含參數標頭值資訊之名稱值的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是包含參數標頭值資訊的有效名稱值。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary>表示使用者代理程式標頭中的產品語彙基元值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 類別的新執行個體。</summary>
      <param name="name">產品名稱。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 類別的新執行個體。</summary>
      <param name="name">產品名稱值。</param>
      <param name="version">產品版本值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary>取得產品語彙基元的名稱。</summary>
      <returns>產品語彙基元的名稱。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 執行個體。</summary>
      <param name="input">字串，代表產品標頭值資訊。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary>取得產品語彙基元的版本。</summary>
      <returns>產品語彙基元的版本。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary>代表一個值，它可以是 User-Agent 標頭中的一項產品或註解。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 類別的新執行個體。</summary>
      <param name="product">用來初始化新執行個體的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 物件。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 類別的新執行個體。</summary>
      <param name="comment">註解值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 類別的新執行個體。</summary>
      <param name="productName">產品名稱值。</param>
      <param name="productVersion">產品版本值。</param>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary>從 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 物件取得註解。</summary>
      <returns>此 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 的註解值。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 執行個體。</summary>
      <param name="input">字串，代表產品資訊標頭值資訊。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的產品資訊標頭值資訊。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary>從 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 物件取得產品。</summary>
      <returns>來自這個 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 的產品值。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary>表示 If-Range 標頭值，它可以是日期/時間或是實體標記值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="date">用來初始化新執行個體的日期值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="entityTag">用來初始化新執行個體的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 物件。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="entityTag">實體標記，表示為用來初始化新執行個體的字串。</param>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary>從 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件取得日期。</summary>
      <returns>來自 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件的日期。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary>取得 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件的實體標記。</summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件的實體標記。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 執行個體。</summary>
      <param name="input">字串，代表範圍條件標頭值資訊。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的範圍條件標頭值資訊。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary>表示 Range 標頭值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>使用位元組範圍初始化 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 類別的新執行個體。</summary>
      <param name="from">要開始傳送資料的位置。</param>
      <param name="to">要停止傳送資料的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> 大於 <paramref name="to" />
-或-
<paramref name="from" /> 或 <paramref name="to" /> 小於 0。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 執行個體。</summary>
      <param name="input">代表 range 標頭值資訊的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的 range 標頭值資訊。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary>從 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件取得指定的範圍。</summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件中的範圍。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary>從 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件取得單元。</summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件的單元。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary>表示 Range 標頭值中的位元組範圍。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 類別的新執行個體。</summary>
      <param name="from">要開始傳送資料的位置。</param>
      <param name="to">要停止傳送資料的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> 大於 <paramref name="to" />
-或-
<paramref name="from" /> 或 <paramref name="to" /> 小於 0。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary>取得要開始傳送資料的位置。</summary>
      <returns>要開始傳送資料的位置。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary>取得要停止傳送資料的位置。</summary>
      <returns>要停止傳送資料的位置。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary>表示 Retry-After 標頭值，它可以是日期/時間或是 timespan 值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="date">用來初始化新執行個體的日期及時間位移。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="delta">用來初始化新執行個體的差異，以秒為單位。</param>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary>取得 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件的日期和時間位移。</summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件的日期和時間位移。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary>取得來自 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件的差異 (以秒為單位)。</summary>
      <returns>來自 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件的差異 (以秒為單位)。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 執行個體。</summary>
      <param name="input">字串，代表重試狀態標頭值資訊。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的重試狀態標頭值資訊。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary>代表具有選擇性品質的字串標頭值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 類別的新執行個體。</summary>
      <param name="value">用來初始化新執行個體的字串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 類別的新執行個體。</summary>
      <param name="value">用來初始化新執行個體的字串。</param>
      <param name="quality">用來初始化新執行個體的品質因素。</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary>判斷指定的物件是否等於目前的 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 執行個體。</summary>
      <param name="input">代表 quality 標頭值資訊的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是含有 quality 標頭值資訊的有效字串。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary>從 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件取得品質係數。</summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件中的品質係數。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary>從 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件取得字串值。</summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件中的字串值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary>表示 accept-encoding 標頭值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 類別的新執行個體。</summary>
      <param name="source">用來初始化新執行個體的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 物件。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 類別的新執行個體。</summary>
      <param name="value">用來初始化新執行個體的字串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary>判斷指定的物件是否等於目前的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary>取得 transfer-coding 參數。</summary>
      <returns>transfer-coding 參數。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 執行個體。</summary>
      <param name="input">代表 transfer-coding 標頭值資訊的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" />不是有效的 transfer-coding 標頭值資訊。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary>取得傳輸編碼的值。</summary>
      <returns>傳輸編碼的值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary>表示含選擇性品質係數的 Accept-Encoding 標頭值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 類別的新執行個體。</summary>
      <param name="value">用來初始化新執行個體的字串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 類別的新執行個體。</summary>
      <param name="value">用來初始化新執行個體的字串。</param>
      <param name="quality">品質係數的值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 執行個體。</summary>
      <param name="input">代表傳輸編碼值資訊的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是包含品質標頭值資訊的有效傳輸編碼。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary>從 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 取得品質係數。</summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 中的品質係數。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary>表示 Via 標頭的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 類別的新執行個體。</summary>
      <param name="protocolVersion">接收的通訊協定的通訊協定版本。</param>
      <param name="receivedBy">接收要求或回應的主機和連接埠。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 類別的新執行個體。</summary>
      <param name="protocolVersion">接收的通訊協定的通訊協定版本。</param>
      <param name="receivedBy">接收要求或回應的主機和連接埠。</param>
      <param name="protocolName">接收的通訊協定的通訊協定名稱。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 類別的新執行個體。</summary>
      <param name="protocolVersion">接收的通訊協定的通訊協定版本。</param>
      <param name="receivedBy">接收要求或回應的主機和連接埠。</param>
      <param name="protocolName">接收的通訊協定的通訊協定名稱。</param>
      <param name="comment">用來識別收件者 Proxy 或閘道之軟體的註解欄位。</param>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary>取得用來識別收件者 Proxy 或閘道之軟體的註解欄位。</summary>
      <returns>用來識別收件者 Proxy 或閘道之軟體的註解欄位。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 執行個體。</summary>
      <param name="input">代表 via 標頭值資訊的字串。</param>
      <returns>
        <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的 via 標頭值資訊。</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary>取得已接收的通訊協定的通訊協定名稱。</summary>
      <returns>通訊協定名稱。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary>取得已接收之通訊協定的通訊協定版本。</summary>
      <returns>通訊協定版本。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary>取得接收要求或回應的主機和連接埠。</summary>
      <returns>接收要求或回應的主機和連接埠。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 執行個體的複本。</summary>
      <returns>目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 版本。</param>
      <returns>如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary>代表 Warning 標頭所使用的警告值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 類別的新執行個體。</summary>
      <param name="code">特定的警告碼。</param>
      <param name="agent">附加警告的主機。</param>
      <param name="text">加上引號的字串，其中包含警告文字。</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary>初始化 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 類別的新執行個體。</summary>
      <param name="code">特定的警告碼。</param>
      <param name="agent">附加警告的主機。</param>
      <param name="text">加上引號的字串，其中包含警告文字。</param>
      <param name="date">警告的日期/時間戳記。</param>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary>取得附加警告的主機。</summary>
      <returns>附加警告的主機。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary>取得特定的警告碼。</summary>
      <returns>特定的警告碼。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary>取得警告的日期/時間戳記。</summary>
      <returns>警告的日期/時間戳記。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 物件。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的 <see langword="true" /> 和目前的物件相等，則為 <see cref="T:System.Object" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary>做為 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 物件的雜湊函式。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary>將字串轉換為 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 執行個體。</summary>
      <param name="input">表示驗證標頭值資訊的字串。</param>
      <returns>傳回 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> 不是有效的驗證標頭值資訊。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary>建立新物件，為目前 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 執行個體的複本。</summary>
      <returns>傳回目前執行個體的複本。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary>取得加上引號的字串，其中包含警告文字。</summary>
      <returns>加上引號的字串，其中包含警告文字。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary>傳回表示目前 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary>判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 資訊。</summary>
      <param name="input">要驗證的字串。</param>
      <param name="parsedValue">字串的 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 版本。</param>
      <returns>如果 <see langword="true" /> 是有效的 <paramref name="input" /> 資訊，則為 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary>提供基底類別，用於傳送 HTTP 要求，以及從 URI 所識別的資源接收 HTTP 回應。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary>使用當處置此執行個體時會處置的 <see cref="T:System.Net.Http.HttpClient" /> 來初始化 <see cref="T:System.Net.Http.HttpClientHandler" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>使用指定的處理常式初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體。 當處置此執行個體時會處置該處理常式。</summary>
      <param name="handler">要用來傳送要求的 HTTP 處理常式堆疊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary>使用提供的處理常式初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體，並指定當處置此執行個體時是否應該處置該處理常式。</summary>
      <param name="handler">負責處理 HTTP 回應訊息的 <see cref="T:System.Net.Http.HttpMessageHandler" />。</param>
      <param name="disposeHandler">如果內部處理常式應由 <see langword="true" />HttpClient.Dispose 處置，則為 ，如果您想要重複使用內部處理常式，則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary>取得或設定網際網路在傳送要求時使用的統一資源識別項 (URI) 基礎位址。</summary>
      <returns>傳送要求時所使用之網際網路資源的統一資源識別元 (URI) 基底位址。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary>取消此執行個體上的所有擱置要求。</summary>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary>取得或設定全域 HTTP Proxy。</summary>
      <returns>具現化 <see cref="T:System.Net.HttpWebRequest" />之每個呼叫所使用的 proxy。</returns>
      <exception cref="T:System.ArgumentNullException">傳遞的值不能是 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary>取得應該與每個要求一併傳送的處理常方式。</summary>
      <returns>應該藉由每個要求傳送的標頭。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary>取得或設定用於這個 <see cref="T:System.Net.Http.HttpClient" /> 執行個體所提出後續要求的預設 HTTP 版本。</summary>
      <returns>此 <see cref="T:System.Net.Http.HttpClient" /> 實例所提出之任何要求所使用的預設版本。</returns>
      <exception cref="T:System.ArgumentNullException">在設定作業中，<see langword="DefaultRequestVersion" /> 是 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Http.HttpClient" /> 執行個體已啟動一或多個要求。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Http.HttpClient" /> 執行個體已經過處置。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary>以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 DELETE 要求和取消權杖至指定的 Uri。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="cancellationToken">其他物件或執行緒可用來接收取消通知的取消權杖。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary>以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 DELETE 要求和取消權杖至指定的 Uri。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="cancellationToken">其他物件或執行緒可用來接收取消通知的取消權杖。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Net.Http.HttpClient" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary>以非同步作業的方式，將 GET 要求傳送至指定的 URI。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary>以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項至指定的 Uri。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="completionOption">HTTP 完成選項值，表示作業應該被視為已完成。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項以及取消語彙基元至指定的 Uri。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="completionOption">HTTP 完成選項值，表示作業應該被視為已完成。</param>
      <param name="cancellationToken">其他物件或執行緒可用來接收取消通知的取消權杖。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 GET 要求和取消權杖至指定的 Uri。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="cancellationToken">其他物件或執行緒可用來接收取消通知的取消權杖。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary>以非同步作業的方式，將 GET 要求傳送至指定的 URI。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary>以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項至指定的 Uri。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="completionOption">HTTP 完成選項值，表示作業應該被視為已完成。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項以及取消語彙基元至指定的 Uri。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="completionOption">HTTP 完成選項值，表示作業應該被視為已完成。</param>
      <param name="cancellationToken">其他物件或執行緒可用來接收取消通知的取消權杖。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 GET 要求和取消權杖至指定的 Uri。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="cancellationToken">其他物件或執行緒可用來接收取消通知的取消權杖。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary>將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應主體。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary>將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應內容。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary>將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary>將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary>將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary>將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary>取得或設定由於讀取回應內容時緩衝的最大位元組數。</summary>
      <returns>讀取回應內容時要緩衝處理的位元組數目上限。 此屬性的預設值是 2 GB。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的大小小於或等於零。</exception>
      <exception cref="T:System.InvalidOperationException">作業已經在目前的執行個體上啟動。</exception>
      <exception cref="T:System.ObjectDisposedException">目前的執行個體已經過處置。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary>以非同步作業的方式，將 PATCH 要求傳送至指定為字串的 URI。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="content">傳送至伺服器的 HTTP 要求內容。</param>
      <returns>代表非同步作業的工作物件。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，將 PATCH 要求和取消權杖傳送至以字串表示的 URI。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="content">傳送至伺服器的 HTTP 要求內容。</param>
      <param name="cancellationToken">其他物件或執行緒可用來接收取消通知的取消權杖。</param>
      <returns>代表非同步作業的工作物件。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>以非同步作業的方式傳送 PATCH 要求。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="content">傳送至伺服器的 HTTP 要求內容。</param>
      <returns>代表非同步作業的工作物件。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 PATCH 要求和取消語彙基元。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="content">傳送至伺服器的 HTTP 要求內容。</param>
      <param name="cancellationToken">其他物件或執行緒可用來接收取消通知的取消權杖。</param>
      <returns>代表非同步作業的工作物件。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary>以非同步作業的方式，將 POST 要求傳送至指定的 URI。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="content">傳送至伺服器的 HTTP 要求內容。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 POST 要求和取消語彙基元。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="content">傳送至伺服器的 HTTP 要求內容。</param>
      <param name="cancellationToken">其他物件或執行緒可用來接收取消通知的取消權杖。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>以非同步作業的方式，將 POST 要求傳送至指定的 URI。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="content">傳送至伺服器的 HTTP 要求內容。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 POST 要求和取消語彙基元。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="content">傳送至伺服器的 HTTP 要求內容。</param>
      <param name="cancellationToken">其他物件或執行緒可用來接收取消通知的取消權杖。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary>以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="content">傳送至伺服器的 HTTP 要求內容。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 PUT 要求和取消語彙基元。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="content">傳送至伺服器的 HTTP 要求內容。</param>
      <param name="cancellationToken">其他物件或執行緒可用來接收取消通知的取消權杖。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary>以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="content">傳送至伺服器的 HTTP 要求內容。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 PUT 要求和取消語彙基元。</summary>
      <param name="requestUri">傳送要求的目的 URI。</param>
      <param name="content">傳送至伺服器的 HTTP 要求內容。</param>
      <param name="cancellationToken">其他物件或執行緒可用來接收取消通知的取消權杖。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary>以非同步作業的方式，傳送 HTTP 要求。</summary>
      <param name="request">要傳送的 HTTP 要求訊息。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary>以非同步作業的方式，傳送 HTTP 要求。</summary>
      <param name="request">要傳送的 HTTP 要求訊息。</param>
      <param name="completionOption">當作業應該完成時 (可取得回應時或讀取整個回應內容之後)。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 HTTP 要求。</summary>
      <param name="request">要傳送的 HTTP 要求訊息。</param>
      <param name="completionOption">當作業應該完成時 (可取得回應時或讀取整個回應內容之後)。</param>
      <param name="cancellationToken">用於取消作業的取消語彙基元。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 HTTP 要求。</summary>
      <param name="request">要傳送的 HTTP 要求訊息。</param>
      <param name="cancellationToken">用於取消作業的取消語彙基元。</param>
      <returns>代表非同步作業的工作物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary>取得或設定要求逾時前等候的時間長度。</summary>
      <returns>要求逾時前等候的時間長度。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的逾時值小於或等於零，而且不是 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</exception>
      <exception cref="T:System.InvalidOperationException">作業已經在目前的執行個體上啟動。</exception>
      <exception cref="T:System.ObjectDisposedException">目前的執行個體已經過處置。</exception>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary>.NET Framework 和 .NET Core 2.0 及更舊版本中 <see cref="T:System.Net.Http.HttpClient" /> 使用的預設訊息處理常式。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary>建立 <see cref="T:System.Net.Http.HttpClientHandler" /> 類別的執行個體。</summary>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary>取得或設定值，這個值指出此處理常式是否應該接在重新導向回應之後。</summary>
      <returns>
        <see langword="true" />如果處理常式應該遵循重新導向回應，則為;否則<see langword="false" />為。 預設值為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary>取得或設定解壓縮方法的類型，此為 HTTP 內容回應的自動解壓縮處理常式所使用。</summary>
      <returns>處理常式所使用的自動解壓縮方法。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary>取得或設定值，指出是否根據憑證授權撤銷清單來檢查憑證。</summary>
      <returns>如果檢查憑證撤銷清單，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
      <exception cref="T:System.PlatformNotSupportedException">僅限 .NET Framework 4.7.1：這個屬性未實作。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary>取得或設定值，表示憑證是否會從憑證存放區自動選取，或呼叫端是否允許傳入特定用戶端憑證。</summary>
      <returns>與此處理常式相關聯的安全性憑證集合。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary>取得為伺服器相關聯要求的安全憑證集合。</summary>
      <returns>執行以憑證為基礎的用戶端驗證時，呈現給伺服器的 X509CertificateCollection。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary>取得或設定處理常式用來儲存伺服器 cookie 的 cookie 容器。</summary>
      <returns>處理常式用來儲存伺服器 cookie 的 cookie 容器。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary>取得或設定這個處理常式所用的驗證資訊。</summary>
      <returns>與處理常式相關聯的驗證認證。 預設為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary>取得一律傳回 <see langword="true" /> 的快取委派。</summary>
      <returns>一律傳回 <see langword="true" /> 的快取委派。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary>使用預設 (系統) Proxy 時，取得或設定要提交至預設 Proxy 伺服器進行驗證的認證。 只有當 <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> 設定為 <see langword="true" /> 且 <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> 設定為 <see langword="null" /> 時，才使用預設 Proxy。</summary>
      <returns>向預設 proxy 伺服器驗證要求所需的認證。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Net.Http.HttpClientHandler" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary>取得或設定處理常式追蹤的最大重新導向數目。</summary>
      <returns>處理常式追蹤的最大重新導向回應數目。 預設值為 50。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary>取得或設定使用 <see cref="T:System.Net.Http.HttpClient" /> 物件提出要求時，所允許的同時連線 數目上限 (每個伺服器端點)。 請注意，此限制是按照每個伺服器端點計算，例如值 256 允許 http://www.adatum.com/ 使用 256 個同時連線，而 http://www.adventure-works.com/ 另有 256 個同時連線。</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpClient" />物件所允許的最大並行連接數目（每個伺服器端點）。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary>取得或設定此處理常式所使用最大要求內容的緩衝區大小。</summary>
      <returns>最大要求內容緩衝區大小 (以位元組為單位)。 預設值為 2 GB。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary>取得或設定回應標頭的最大長度，以 KB (1024 位元組) 為單位。 比方說，如果值為 64，則最大回應標頭長度允許有 65536 個位元組。</summary>
      <returns>回應標頭的最大長度（以 kb （1024位元組）為單位）。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary>取得或設定值，這個值指出處理常式是否隨著要求傳送授權標頭。</summary>
      <returns>
        <see langword="true" /> 表示處理常式在進行驗證後隨同要求傳送 HTTP 授權標頭，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary>取得 <see cref="T:System.Net.Http.HttpClient" /> 要求之自訂屬性的可寫入字典 (也就是對應)。 字典會初始化為空字典。您可以插入及查詢自訂處理常式和特殊處理的索引鍵/值組。</summary>
      <returns>自訂屬性的可寫入字典。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary>取得或設定處理常式所使用的 Proxy 資訊。</summary>
      <returns>處理常式所使用的 Proxy 資訊。 預設值為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>根據 <see cref="T:System.Net.Http.HttpRequestMessage" /> 提供的資訊建立 <see cref="T:System.Net.Http.HttpResponseMessage" /> 的執行個體，做為不封鎖作業。</summary>
      <param name="request">HTTP 要求訊息。</param>
      <param name="cancellationToken">取消作業的取消語彙基元。</param>
      <returns>工作物件，表示非同步作業。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary>取得或設定驗證伺服器憑證的回呼方法。</summary>
      <returns>驗證伺服器憑證的回呼方法。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary>取得或設定 TLS/SSL 通訊協定，其是由 HttpClientHandler 物件管理之 <see cref="T:System.Net.Http.HttpClient" /> 物件所使用。</summary>
      <returns>
        <see cref="T:System.Security.Authentication.SslProtocols" /> 列舉型別中定義的一個值。</returns>
      <exception cref="T:System.PlatformNotSupportedException">僅限 .NET Framework 4.7.1：這個屬性未實作。</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary>取得值，表示處理常式是否支援自動回應內容解壓縮。</summary>
      <returns>如果此處理常式支援自動回應內容解壓縮，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary>取得值，這個值指出處理常式是否支援 Proxy 設定。</summary>
      <returns>如果處理常式支援 Proxy 設定，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary>取得值，這個值指出處理常式是否支援 <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> 和 <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> 屬性的組態設定。</summary>
      <returns>如果處理常式支援 <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> 和 <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> 屬性的組態設定，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary>取得或設定值，表示處理常式是否使用 <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> 屬性來儲存伺服器 Cookie 並在傳送要求時使用這些 Cookie。</summary>
      <returns>如果處理常式支援使用 <see langword="true" /> 屬性來儲存伺服器 Cookie 並在傳送要求時使用這些 Cookie，則為 <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary>取得或設定值，控制是否隨著處理常式的要求傳送預設認證。</summary>
      <returns>如果使用預設認證，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary>取得或設定值，指出處理常式是否針對要求使用 Proxy。</summary>
      <returns>如果處理常式應該針對要求使用 Proxy，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary>表示 <see cref="T:System.Net.Http.HttpClient" /> 作業應該在取得回應之後立即視為已完成，或在讀取整個回應訊息 (包括內容) 之後視為已完成。</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary>在讀取包括內容的完整回應之後，操作應該完成。</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary>一旦回應可使用而標頭也已讀取後，就應完成作業。 尚未讀取內容。</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary>代表 HTTP 實體內容和內容標頭的基底類別。</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary>初始化 <see cref="T:System.Net.Http.HttpContent" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary>將 HTTP 內容序列化成位元組資料流，然後複製到 <paramref name="stream" /> 參數所提供的資料流物件。</summary>
      <param name="stream">目標資料流。</param>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>將 HTTP 內容序列化成位元組資料流，然後複製到 <paramref name="stream" /> 參數所提供的資料流物件。</summary>
      <param name="stream">目標資料流。</param>
      <param name="context">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary>以非同步作業方式將 HTTP 內容序列化為記憶體資料流。</summary>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary>釋放 Unmanaged 資源，並處置 <see cref="T:System.Net.Http.HttpContent" /> 所使用的 Managed 資源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Net.Http.HttpContent" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary>取得 HTTP 內容標頭，如 RFC 2616 中所定義。</summary>
      <returns>內容標頭，如 RFC 2616 中所定義。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary>以非同步作業方式將 HTTP 內容序列化至記憶體緩衝區。</summary>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary>以非同步作業方式將 HTTP 內容序列化至記憶體緩衝區。</summary>
      <param name="maxBufferSize">要使用之緩衝區的大小上限，以位元組為單位。</param>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary>以非同步作業方式將位元組陣列的 HTTP 內容序列化。</summary>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary>以非同步作業方式將 HTTP 內容序列化，並傳回代表內容的資料流。</summary>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary>以非同步作業方式將 HTTP 內容序列化為字串。</summary>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>以非同步作業方式將 HTTP 內容序列化為資料流。</summary>
      <param name="stream">目標資料流。</param>
      <param name="context">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary>判斷 HTTP 內容是否有有效的位元組長度。</summary>
      <param name="length">HTTP 內容的位元組長度。</param>
      <returns>若 <paramref name="length" /> 為有效的長度則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary>HTTP 訊息處理常式的基底類型。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary>初始化 <see cref="T:System.Net.Http.HttpMessageHandler" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary>釋放 Unmanaged 資源，並處置 <see cref="T:System.Net.Http.HttpMessageHandler" /> 所使用的 Managed 資源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Net.Http.HttpMessageHandler" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 HTTP 要求。</summary>
      <param name="request">要傳送的 HTTP 要求訊息。</param>
      <param name="cancellationToken">用於取消作業的取消語彙基元。</param>
      <returns>工作物件，表示非同步作業。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary>特定類別，允許應用程式呼叫 HTTP 處理常式鏈結的 <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>使用特定 <see cref="T:System.Net.Http.HttpMessageInvoker" />，初始化 <see cref="T:System.Net.Http.HttpMessageHandler" /> 類別的執行個體。</summary>
      <param name="handler">負責處理 HTTP 回應訊息的 <see cref="T:System.Net.Http.HttpMessageHandler" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary>使用特定 <see cref="T:System.Net.Http.HttpMessageInvoker" />，初始化 <see cref="T:System.Net.Http.HttpMessageHandler" /> 類別的執行個體。</summary>
      <param name="handler">負責處理 HTTP 回應訊息的 <see cref="T:System.Net.Http.HttpMessageHandler" />。</param>
      <param name="disposeHandler">如果內部處理常式應由 Dispose() 處置則為 <see langword="true" />，如果您想要重複使用內部處理常式則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary>釋放 Unmanaged 資源，並處置 <see cref="T:System.Net.Http.HttpMessageInvoker" /> 所使用的 Managed 資源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Net.Http.HttpMessageInvoker" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>以非同步作業的方式，傳送 HTTP 要求。</summary>
      <param name="request">要傳送的 HTTP 要求訊息。</param>
      <param name="cancellationToken">用於取消作業的取消語彙基元。</param>
      <returns>工作物件，表示非同步作業。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary>協助程式類別，用於擷取和比較標準 HTTP 方法，以及建立新的 HTTP 方法。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary>使用特定 HTTP 方法，初始化 <see cref="T:System.Net.Http.HttpMethod" /> 類別的新執行個體。</summary>
      <param name="method">HTTP 方法。</param>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary>表示 HTTP DELETE 通訊協定方法。</summary>
      <returns>傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary>判斷指定的 <see cref="T:System.Net.Http.HttpMethod" /> 是否等於目前的 <see cref="T:System.Object" />。</summary>
      <param name="other">要與目前物件比較的 HTTP 方法。</param>
      <returns>如果指定的物件等於目前的物件，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Object" />。</summary>
      <param name="obj">要與目前物件比較的物件。</param>
      <returns>如果指定的物件等於目前的物件，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary>表示 HTTP GET 通訊協定方法。</summary>
      <returns>傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary>作為此類型的雜湊函式。</summary>
      <returns>目前 <see cref="T:System.Object" /> 的雜湊碼。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary>表示 HTTP HEAD 通訊協定方法。 HEAD 方法與 GET 相同，除了伺服器只在回應中傳回訊息標頭，不含訊息主體。</summary>
      <returns>傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary>HTTP 方法。</summary>
      <returns>HTTP 方法，表示為 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary>用來比較兩個 <see cref="T:System.Net.Http.HttpMethod" /> 物件的等號比較運算子。</summary>
      <param name="left">等號比較運算子左邊的 <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <param name="right">等號比較運算子右邊的 <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <returns>如果指定的 <paramref name="left" /> 和 <paramref name="right" /> 參數相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary>用來比較兩個 <see cref="T:System.Net.Http.HttpMethod" /> 物件的不等比較運算子。</summary>
      <param name="left">不等比較運算子左邊的 <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <param name="right">不等比較運算子右邊的 <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <returns>如果指定的 <paramref name="left" /> 和 <paramref name="right" /> 參數不相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary>表示 HTTP OPTIONS 通訊協定方法。</summary>
      <returns>傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch" />
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary>表示 HTTP POST 通訊協定方法，用來公佈新實體至 URI 做為新增項目。</summary>
      <returns>傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary>表示 HTTP PUT 通訊協定方法，用來取代 URI 所識別的實體。</summary>
      <returns>傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary>傳回代表目前物件的字串。</summary>
      <returns>表示目前物件的字串。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary>表示 HTTP TRACE 通訊協定方法。</summary>
      <returns>傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary>
        <see cref="T:System.Net.Http.HttpClient" /> 及 <see cref="T:System.Net.Http.HttpMessageHandler" /> 類別所擲回之例外狀況的基底類別。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary>初始化 <see cref="T:System.Net.Http.HttpRequestException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary>使用描述目前例外狀況的特定訊息，初始化 <see cref="T:System.Net.Http.HttpRequestException" /> 類別的新執行個體。</summary>
      <param name="message">描述目前例外狀況的訊息。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary>使用描述目前例外狀況和內部例外狀況的特定訊息，初始化 <see cref="T:System.Net.Http.HttpRequestException" /> 類別的新執行個體。</summary>
      <param name="message">描述目前例外狀況的訊息。</param>
      <param name="inner">內部例外狀況。</param>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary>代表 HTTP 要求訊息。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary>初始化 <see cref="T:System.Net.Http.HttpRequestMessage" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary>使用 HTTP 方法和要求 <see cref="T:System.Net.Http.HttpRequestMessage" />，初始化 <see cref="T:System.Uri" /> 類別的新執行個體。</summary>
      <param name="method">HTTP 方法。</param>
      <param name="requestUri">字串，表示要求 <see cref="T:System.Uri" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary>使用 HTTP 方法和要求 <see cref="T:System.Net.Http.HttpRequestMessage" />，初始化 <see cref="T:System.Uri" /> 類別的新執行個體。</summary>
      <param name="method">HTTP 方法。</param>
      <param name="requestUri">要求的 <see cref="T:System.Uri" />。</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary>取得或設定 HTTP 訊息內容。</summary>
      <returns>訊息內容</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary>釋放 Unmanaged 資源，並處置 <see cref="T:System.Net.Http.HttpRequestMessage" /> 所使用的 Managed 資源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Net.Http.HttpRequestMessage" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary>取得 HTTP 要求標頭的集合。</summary>
      <returns>HTTP 要求標頭的集合。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary>取得或設定 HTTP 要求訊息使用的 HTTP 方法。</summary>
      <returns>要求訊息使用的 HTTP 方法。 預設值為 GET 方法。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary>取得 HTTP 要求的屬性集。</summary>
      <returns>傳回 <see cref="T:System.Collections.Generic.IDictionary`2" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary>取得或設定使用於 HTTP 要求的 <see cref="T:System.Uri" />。</summary>
      <returns>使用於 HTTP 要求的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary>傳回代表目前物件的字串。</summary>
      <returns>目前物件的字串表示。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary>取得或設定 HTTP 訊息版本。</summary>
      <returns>HTTP 訊息版本。 除非您的目標是 .NET Core 2.1 或2.2，否則預設值是<c>1.1</c>。 在此情況下，預設值為<c>2.0</c>。</returns>
    </member>
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary>表示包含狀態碼及資料的 HTTP 回應訊息。</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary>初始化 <see cref="T:System.Net.Http.HttpResponseMessage" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary>使用特定 <see cref="T:System.Net.Http.HttpResponseMessage" />，初始化 <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> 類別的新執行個體。</summary>
      <param name="statusCode">HTTP 回應的狀態碼。</param>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary>取得或設定 HTTP 回應訊息的內容。</summary>
      <returns>HTTP 回應訊息的內容。</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary>釋放 Unmanaged 資源，並處置 <see cref="T:System.Net.Http.HttpResponseMessage" /> 所使用的 Unmanaged 資源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Net.Http.HttpResponseMessage" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary>如果 HTTP 回應的 <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" /> 屬性是 <see langword="false" />，即會擲回例外狀況。</summary>
      <returns>表示呼叫成功的 HTTP 回應訊息。</returns>
      <exception cref="T:System.Net.Http.HttpRequestException">HTTP 回應失敗。</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary>取得 HTTP 回應標頭的集合。</summary>
      <returns>HTTP 回應標頭的集合。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary>取得指示 HTTP 回應是否成功的值。</summary>
      <returns>如果 <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> 的範圍是200-299，則為 <see langword="true" />;否則，<see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary>取得或設定通常由伺服器連同狀態碼傳送的原因片語。</summary>
      <returns>伺服器所傳送的原因片語。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary>取得或設定導致此回應訊息的要求訊息。</summary>
      <returns>導致此回應訊息的要求訊息。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary>取得或設定 HTTP 回應的狀態碼。</summary>
      <returns>HTTP 回應的狀態碼。</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary>傳回代表目前物件的字串。</summary>
      <returns>目前物件的字串表示。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary>取得包含在 HTTP 回應中的尾端標頭集合。</summary>
      <returns>HTTP 回應中尾端標頭的集合。</returns>
      <exception cref="T:System.Net.Http.HttpRequestException">PROTOCOL_ERROR：HTTP/2 回應包含尾端標頭框架中的虛擬標頭。</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary>取得或設定 HTTP 訊息版本。</summary>
      <returns>HTTP 訊息版本。 預設為 1.1。</returns>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary>處理常式的基底型別，這些處理常式僅對要求和 (或) 回應訊息執行一些小型處理。</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary>建立 <see cref="T:System.Net.Http.MessageProcessingHandler" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary>使用特定的內部處理常式，建立 <see cref="T:System.Net.Http.MessageProcessingHandler" /> 類別的執行個體。</summary>
      <param name="innerHandler">負責處理 HTTP 回應訊息的內部處理常式。</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>針對傳送到伺服器的每個要求執行處理。</summary>
      <param name="request">要處理的 HTTP 要求訊息。</param>
      <param name="cancellationToken">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <returns>已處理的 HTTP 要求訊息。</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary>針對來自伺服器的每個回應進行處理。</summary>
      <param name="response">要處理的 HTTP 回應訊息。</param>
      <param name="cancellationToken">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <returns>已處理的 HTTP 回應訊息。</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>以非同步作業方式將 HTTP 要求傳送到內部處理常式，以傳送到伺服器。</summary>
      <param name="request">要傳送至伺服器的 HTTP 要求訊息。</param>
      <param name="cancellationToken">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <returns>工作物件，表示非同步作業。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary>提供使用 multipart/* 內容類型規格進行序列化之 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary>建立 <see cref="T:System.Net.Http.MultipartContent" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary>建立 <see cref="T:System.Net.Http.MultipartContent" /> 類別的新執行個體。</summary>
      <param name="subtype">多部分內容的子型別。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="subtype" /> 曾為 <see langword="null" />，或只包含空白字元。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary>建立 <see cref="T:System.Net.Http.MultipartContent" /> 類別的新執行個體。</summary>
      <param name="subtype">多部分內容的子類型。</param>
      <param name="boundary">多重內容的界限字串。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="subtype" /> 為 <see langword="null" />，或是空字串。
<paramref name="boundary" /> 曾為 <see langword="null" />，或只包含空白字元。
-或-
<paramref name="boundary" /> 以空白字元結束。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="boundary" /> 的長度曾大於 70。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary>將多重部分 HTTP 內容加入至使用 multipart/* 內容類型規格進行序列化之 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合。</summary>
      <param name="content">要新增至集合中的 HTTP 內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary>以非同步作業使用 multipart/* 編碼將 HTTP 內容序列化為資料流。</summary>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Net.Http.MultipartContent" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary>傳回列舉程式，逐一查看使用 multipart/* 內容類型規格進行序列化的 <see cref="T:System.Net.Http.HttpContent" /> 物件集合。</summary>
      <returns>可用於逐一查看集合的物件。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>以非同步作業方式將多部分 HTTP 內容序列化為資料流。</summary>
      <param name="stream">目標資料流。</param>
      <param name="context">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /> 方法的明確實作。</summary>
      <returns>可用於逐一查看集合的物件。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary>判斷 HTTP 多部分內容是否具備有效的位元組長度。</summary>
      <param name="length">HTTP 內容的位元組長度。</param>
      <returns>若 <paramref name="length" /> 為有效的長度則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary>提供使用多重/表單資料 MIME 類型編碼內容的容器。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary>建立 <see cref="T:System.Net.Http.MultipartFormDataContent" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary>建立 <see cref="T:System.Net.Http.MultipartFormDataContent" /> 類別的新執行個體。</summary>
      <param name="boundary">多重表單資料內容的界限字串。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="boundary" /> 為 <see langword="null" /> 或僅包含空白字元。
-或-
<paramref name="boundary" /> 以空白字元結束。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="boundary" /> 的長度大於 70。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary>將 HTTP 內容加入至 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合，會序列化為 multipart/form-data MIME 類型。</summary>
      <param name="content">要新增至集合中的 HTTP 內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary>將 HTTP 內容加入至 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合，會序列化為 multipart/form-data MIME 類型。</summary>
      <param name="content">要新增至集合中的 HTTP 內容。</param>
      <param name="name">要為 HTTP 內容加入的名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 為 <see langword="null" /> 或僅包含空白字元。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary>將 HTTP 內容加入至 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合，會序列化為 multipart/form-data MIME 類型。</summary>
      <param name="content">要新增至集合中的 HTTP 內容。</param>
      <param name="name">要為 HTTP 內容加入的名稱。</param>
      <param name="fileName">要加入至集合中的 HTTP 內容的檔案名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 為 <see langword="null" /> 或僅包含空白字元。
-或-
<paramref name="fileName" /> 為 <see langword="null" /> 或僅包含空白字元。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent" />
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <param name="content" />
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary>提供 .NET Core 2.1 及更新版本中 <see cref="T:System.Net.Http.HttpClient" /> 使用的預設訊息處理常式。</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary>取得或設定解壓縮方法的類型，此為 HTTP 內容回應的自動解壓縮處理常式所使用。</summary>
      <returns>自動解壓縮 HTTP 內容回應的處理常式所使用的解壓縮方法類型。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary>取得或設定受管理的 Cookie 容器物件。</summary>
      <returns>受控 cookie 容器物件。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials" />
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary>在使用預設 (系統) Proxy 時，取得或設定用來提交到預設 Proxy 伺服器進行驗證的認證。</summary>
      <returns>用來向驗證 proxy 驗證使用者的認證。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary>取得或設定允許的 HTTP 重新導向的數目上限。</summary>
      <returns>允許的 HTTP 重新導向數目上限。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary>取得或設定單一伺服器允許的同時 TCP 連線數目上限。</summary>
      <returns>允許單一伺服器的同時 TCP 連線數上限。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary>取得或設定可從回應中清空的資料的數量上限 (以位元組為單位)。</summary>
      <returns>可以從回應中清空的最大資料量（以位元組為單位）。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary>取得或設定回應標頭的最大長度，以 KB (1024 位元組) 為單位。</summary>
      <returns>伺服器回應中標頭部分的大小上限（以 kb 為單位）。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary>取得或設定集區中的連線須閒置多久時間，才會視為可重複使用。</summary>
      <returns>集區中連接的最大閒置時間。 此屬性的預設值為2分鐘。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的值小於 <see cref="F:System.TimeSpan.Zero" /> 或等於 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</exception>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime" />
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary>取得或設定值，這個值指出處理常式是否隨著要求傳送授權標頭。</summary>
      <returns>
        <see langword="true" />如果處理常式與要求一起傳送授權標頭，則為，否則為<see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary>在 <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" /> 屬性為 <see langword="true" /> 時，取得或設定自訂 Proxy。</summary>
      <returns>自訂 proxy。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary>取得或設定一組用於用戶端 TLS 驗證的選項。</summary>
      <returns>用於用戶端 TLS 驗證的一組選項。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies" />
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy" />
    <member name="T:System.Net.Http.StreamContent">
      <summary>提供以資料流為基礎的 HTTP 內容。</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary>建立 <see cref="T:System.Net.Http.StreamContent" /> 類別的新執行個體。</summary>
      <param name="content">用來初始化 <see cref="T:System.Net.Http.StreamContent" /> 的內容。</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary>建立 <see cref="T:System.Net.Http.StreamContent" /> 類別的新執行個體。</summary>
      <param name="content">用來初始化 <see cref="T:System.Net.Http.StreamContent" /> 的內容。</param>
      <param name="bufferSize">
        <see cref="T:System.Net.Http.StreamContent" /> 的緩衝區大小 (以位元組為單位)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="content" /> 以前是 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> 小於或等於零。</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary>以非同步作業方式將 HTTP 資料流內容寫入記憶體資料流。</summary>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Net.Http.StreamContent" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>以非同步作業方式將 HTTP 內容序列化為資料流。</summary>
      <param name="stream">目標資料流。</param>
      <param name="context">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <returns>工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary>判斷資料流內容是否有有效的位元組長度。</summary>
      <param name="length">資料流內容的位元組長度。</param>
      <returns>若 <see langword="true" /> 為有效的長度則為 <paramref name="length" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary>根據字串提供 HTTP 內容。</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary>建立 <see cref="T:System.Net.Http.StringContent" /> 類別的新執行個體。</summary>
      <param name="content">用來初始化 <see cref="T:System.Net.Http.StringContent" />的內容。</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary>建立 <see cref="T:System.Net.Http.StringContent" /> 類別的新執行個體。</summary>
      <param name="content">用來初始化 <see cref="T:System.Net.Http.StringContent" /> 的內容。</param>
      <param name="encoding">要用於內容的編碼方式。</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary>建立 <see cref="T:System.Net.Http.StringContent" /> 類別的新執行個體。</summary>
      <param name="content">用來初始化 <see cref="T:System.Net.Http.StringContent" /> 的內容。</param>
      <param name="encoding">要用於內容的編碼方式。</param>
      <param name="mediaType">要用於內容的媒體類型。</param>
    </member>
  </members>
</doc>