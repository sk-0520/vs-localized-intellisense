<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Collections.NonGeneric</name>
  </assembly>
  <members>
    <member name="T:System.Collections.CaseInsensitiveComparer">
      <summary>Compare deux objets pour contrôler leur équivalence, en ignorant la casse des chaînes.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CaseInsensitiveComparer" /> à l'aide de <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CaseInsensitiveComparer" /> à l'aide du <see cref="T:System.Globalization.CultureInfo" /> spécifié.</summary>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser pour le nouveau <see cref="T:System.Collections.CaseInsensitiveComparer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)">
      <summary>Exécute une comparaison sans respect de la casse de deux objets du même type et retourne une valeur indiquant si l'un est inférieur, égal ou supérieur à l'autre.</summary>
      <param name="a">Premier objet à comparer.</param>
      <param name="b">Deuxième objet à comparer.</param>
      <returns>Entier signé qui indique les valeurs relatives de <paramref name="a" /> et <paramref name="b" />, comme indiqué dans le tableau suivant.
  Value 
  Signification 
  Inférieure à zéro 
 <paramref name="a" /> est inférieur à <paramref name="b" />, sans respect de la casse.  
  
  Zéro 
 <paramref name="a" /> est égal à <paramref name="b" />, sans respect de la casse.  
  
  Supérieure à zéro 
 <paramref name="a" /> est supérieur à <paramref name="b" />, sans respect de la casse.</returns>
      <exception cref="T:System.ArgumentException">Ni <paramref name="a" /> ni <paramref name="b" /> n'implémente l'interface <see cref="T:System.IComparable" />.
ou
<paramref name="a" /> et <paramref name="b" /> sont de types différents.</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.Default">
      <summary>Obtient une instance de <see cref="T:System.Collections.CaseInsensitiveComparer" /> associée au <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours et toujours disponible.</summary>
      <returns>Instance de <see cref="T:System.Collections.CaseInsensitiveComparer" /> associée au <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant">
      <summary>Obtient une instance de <see cref="T:System.Collections.CaseInsensitiveComparer" /> associée à <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> et toujours disponible.</summary>
      <returns>Instance de <see cref="T:System.Collections.CaseInsensitiveComparer" /> associée à <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</returns>
    </member>
    <member name="T:System.Collections.CaseInsensitiveHashCodeProvider">
      <summary>Fournit un code de hachage pour un objet en utilisant un algorithme de hachage qui ignore la casse des chaînes.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> à l'aide de <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> à l'aide du <see cref="T:System.Globalization.CultureInfo" /> spécifié.</summary>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser pour le nouveau <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
      <summary>Obtient une instance de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> associée au <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours et toujours disponible.</summary>
      <returns>Instance de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> associée au <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
      <summary>Obtient une instance de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> associée à <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> et toujours disponible.</summary>
      <returns>Instance de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> associée à <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</returns>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
      <summary>Retourne un code de hachage pour un objet donné, en utilisant un algorithme de hachage qui ignore la casse des chaînes.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> pour lequel un code de hachage doit être retourné.</param>
      <returns>Code de hachage pour l'objet donné à l'aide d'un algorithme de hachage qui ignore la casse des chaînes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.CollectionBase">
      <summary>Fournit la classe de base <see langword="abstract" /> pour une collection fortement typée.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CollectionBase" /> avec la capacité initiale par défaut.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CollectionBase" /> avec la capacité spécifiée.</summary>
      <param name="capacity">Nombre d'éléments que la nouvelle liste peut initialement stocker.</param>
    </member>
    <member name="P:System.Collections.CollectionBase.Capacity">
      <summary>Obtient ou définit le nombre d'éléments que <see cref="T:System.Collections.CollectionBase" /> peut contenir.</summary>
      <returns>Nombre initial d'éléments que <see cref="T:System.Collections.CollectionBase" /> peut contenir.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur affectée à <see cref="P:System.Collections.CollectionBase.Capacity" /> est inférieure à <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n’y a pas assez de mémoire disponible sur le système.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.Clear">
      <summary>Supprime tous les objets de l'instance de <see cref="T:System.Collections.CollectionBase" />. Cette méthode ne peut pas être substituée.</summary>
    </member>
    <member name="P:System.Collections.CollectionBase.Count">
      <summary>Obtient le nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.CollectionBase" />. Cette propriété ne peut pas être remplacée.</summary>
      <returns>Nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.CollectionBase" />. La récupération de la valeur de cette propriété est une opération O(1).</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de l'instance <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour l'instance du <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.InnerList">
      <summary>Obtient <see cref="T:System.Collections.ArrayList" /> contenant la liste des éléments dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> représentant l'instance de <see cref="T:System.Collections.CollectionBase" /> elle-même. La récupération de la valeur de cette propriété est une opération O(1).</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.List">
      <summary>Obtient <see cref="T:System.Collections.IList" /> contenant la liste des éléments dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.IList" /> représentant l'instance de <see cref="T:System.Collections.CollectionBase" /> elle-même.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClear">
      <summary>Effectue des traitements personnalisés supplémentaires pendant l’effacement du contenu de l’instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClearComplete">
      <summary>Exécute des processus personnalisés supplémentaires après l'effacement du contenu de l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
      <summary>Exécute les processus personnalisés supplémentaires avant l'insertion d'un nouvel élément dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Index de base zéro au niveau duquel insérer <paramref name="value" />.</param>
      <param name="value">Nouvelle valeur de l'élément à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
      <summary>Exécute les processus personnalisés supplémentaires après l'insertion d'un nouvel élément dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Index de base zéro au niveau duquel insérer <paramref name="value" />.</param>
      <param name="value">Nouvelle valeur de l'élément à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires lors de la suppression d'un élément de l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> peut être trouvé.</param>
      <param name="value">Valeur de l'élément à supprimer de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires après la suppression d'un élément de l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> peut être trouvé.</param>
      <param name="value">Valeur de l'élément à supprimer de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires avant la définition d'une valeur dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="oldValue" /> peut être trouvé.</param>
      <param name="oldValue">Valeur à remplacer par <paramref name="newValue" />.</param>
      <param name="newValue">Nouvelle valeur de l'élément à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires après la définition d'une valeur dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="oldValue" /> peut être trouvé.</param>
      <param name="oldValue">Valeur à remplacer par <paramref name="newValue" />.</param>
      <param name="newValue">Nouvelle valeur de l'élément à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnValidate(System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires lors de la validation d'une valeur.</summary>
      <param name="value">Objet à valider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
      <summary>Supprime l'élément à l'index spécifié de l'instance de <see cref="T:System.Collections.CollectionBase" />. Cette méthode n'est pas substituable.</summary>
      <param name="index">Index de base zéro de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.

ou -
<paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie l'ensemble de l'objet <see cref="T:System.Collections.CollectionBase" /> vers un objet <see cref="T:System.Array" /> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.CollectionBase" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.

ou -
Le nombre d’éléments dans le <see cref="T:System.Collections.CollectionBase" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException">Le type du <see cref="T:System.Collections.CollectionBase" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary>Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.CollectionBase" /> est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.CollectionBase" /> est synchronisé (thread-safe) ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
      <summary>Ajoute un objet à la fin de la <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à ajouter à la fin de <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns>Index <see cref="T:System.Collections.CollectionBase" /> auquel <paramref name="value" /> a été ajouté.</returns>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.CollectionBase" /> est en lecture seule.

ou -
<see cref="T:System.Collections.CollectionBase" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
      <summary>Détermine si <see cref="T:System.Collections.CollectionBase" /> contient un élément spécifique.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Collections.CollectionBase" /> contient le <paramref name="value" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
      <summary>Recherche le <see cref="T:System.Object" /> spécifié et retourne l’index de base zéro de la première occurrence dans l’ensemble du <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns>Index de base zéro de la première occurrence de <paramref name="value" /> dans l'ensemble du <see cref="T:System.Collections.CollectionBase" />, s'il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Insère un élément dans la classe <see cref="T:System.Collections.CollectionBase" /> au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
      <param name="value">
        <see cref="T:System.Object" /> à insérer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.

ou -
<paramref name="index" /> est supérieur à <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.CollectionBase" /> est en lecture seule.

ou -
<see cref="T:System.Collections.CollectionBase" /> est de taille fixe.</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.CollectionBase" /> est de taille fixe.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Collections.CollectionBase" /> est de taille fixe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.CollectionBase" /> est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Collections.CollectionBase" /> est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
      <summary>Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à obtenir ou à définir.</param>
      <returns>Élément au niveau de l'index spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.

ou -
<paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
      <summary>Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à supprimer de <see cref="T:System.Collections.CollectionBase" />.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="value" /> est introuvable dans l'objet <see cref="T:System.Collections.CollectionBase" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.CollectionBase" /> est en lecture seule.

ou -
<see cref="T:System.Collections.CollectionBase" /> est de taille fixe.</exception>
    </member>
    <member name="T:System.Collections.DictionaryBase">
      <summary>Fournit la classe de base <see langword="abstract" /> pour une collection fortement typée de paires clé/valeur.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.Clear">
      <summary>Efface le contenu de l'instance <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
      <summary>Copie les entrées des éléments <see cref="T:System.Collections.DictionaryBase" /> dans un <see cref="T:System.Array" /> à une dimension à l'index spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> à une dimension qui constitue la destination des objets <see cref="T:System.Collections.DictionaryEntry" /> copiés à partir de l'instance de <see cref="T:System.Collections.DictionaryBase" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.

ou -
Le nombre d’éléments dans le <see cref="T:System.Collections.DictionaryBase" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException">Le type du <see cref="T:System.Collections.DictionaryBase" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.Count">
      <summary>Obtient le nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Dictionary">
      <summary>Obtient la liste des éléments contenus dans l’instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> représentant l'instance de <see cref="T:System.Collections.DictionaryBase" /> elle-même.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.GetEnumerator">
      <summary>Retourne <see cref="T:System.Collections.IDictionaryEnumerator" /> qui itère au sein de l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionaryEnumerator" /> pour l'instance du <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.InnerHashtable">
      <summary>Obtient la liste des éléments contenus dans l’instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" /> représentant l'instance de <see cref="T:System.Collections.DictionaryBase" /> elle-même.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClear">
      <summary>Effectue des traitements personnalisés supplémentaires avant l'effacement du contenu de l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClearComplete">
      <summary>Exécute des processus personnalisés supplémentaires après l'effacement du contenu de l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
      <summary>Obtient l'élément correspondant à la clé et la valeur spécifiées dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clé de l'élément à obtenir.</param>
      <param name="currentValue">Valeur actuelle de l'élément associé à <paramref name="key" />.</param>
      <returns>
        <see cref="T:System.Object" /> contenant l'élément avec la clé et la valeur spécifiées.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
      <summary>Exécute les processus personnalisés supplémentaires avant l'insertion d'un nouvel élément dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clé de l'élément à insérer.</param>
      <param name="value">Valeur de l'élément à insérer.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
      <summary>Exécute les processus personnalisés supplémentaires après l'insertion d'un nouvel élément dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clé de l'élément à insérer.</param>
      <param name="value">Valeur de l'élément à insérer.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
      <summary>Effectue des traitements personnalisés supplémentaires avant la suppression d'un élément de l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clé de l'élément à supprimer.</param>
      <param name="value">Valeur de l’élément à supprimer.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires après la suppression d'un élément de l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clé de l'élément à supprimer.</param>
      <param name="value">Valeur de l’élément à supprimer.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires avant la définition d'une valeur dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clé de l'élément à trouver.</param>
      <param name="oldValue">Ancienne valeur de l'élément associé à <paramref name="key" />.</param>
      <param name="newValue">Nouvelle valeur de l'élément associé à <paramref name="key" />.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires après la définition d'une valeur dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clé de l'élément à trouver.</param>
      <param name="oldValue">Ancienne valeur de l'élément associé à <paramref name="key" />.</param>
      <param name="newValue">Nouvelle valeur de l'élément associé à <paramref name="key" />.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
      <summary>Effectue des traitements personnalisés supplémentaires lors de la validation de l'élément correspondant à la clé et la valeur spécifiées.</summary>
      <param name="key">Clé de l'élément à valider.</param>
      <param name="value">Valeur de l'élément à valider.</param>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
      <summary>Obtient une valeur indiquant si l'accès à un objet <see cref="T:System.Collections.DictionaryBase" /> est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à l'objet <see cref="T:System.Collections.DictionaryBase" /> est synchronisé (thread-safe) ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à un objet <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Objet pouvant être utilisé pour synchroniser l’accès à l’objet <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Ajoute un élément avec la clé et la valeur spécifiées dans <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clé de l'élément à ajouter.</param>
      <param name="value">Valeur de l'élément à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un élément possédant la même clé existe déjà dans <see cref="T:System.Collections.DictionaryBase" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.DictionaryBase" /> est en lecture seule.

ou -
<see cref="T:System.Collections.DictionaryBase" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Détermine si <see cref="T:System.Collections.DictionaryBase" /> contient une clé spécifique.</summary>
      <param name="key">Clé à rechercher dans <see cref="T:System.Collections.DictionaryBase" />.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Collections.DictionaryBase" /> contient un élément correspondant à la clé spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
      <summary>Obtient une valeur indiquant si un objet <see cref="T:System.Collections.DictionaryBase" /> est de taille fixe.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Collections.DictionaryBase" /> est de taille fixe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
      <summary>Obtient une valeur indiquant si un objet <see cref="T:System.Collections.DictionaryBase" /> est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Collections.DictionaryBase" /> est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
      <summary>Obtient ou définit la valeur associée à la clé spécifiée.</summary>
      <param name="key">Clé dont la valeur doit être obtenue ou définie.</param>
      <returns>Valeur associée à la clé spécifiée. Si la clé spécifiée est introuvable, la tentative d'obtention retourne <see langword="null" /> et la tentative de définition crée un nouvel élément avec la clé spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La propriété est définie et <see cref="T:System.Collections.DictionaryBase" /> est en lecture seule.

ou -
La propriété est définie, <paramref name="key" /> n’existe pas dans la collection et <see cref="T:System.Collections.DictionaryBase" /> a une taille fixe.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
      <summary>Obtient un objet <see cref="T:System.Collections.ICollection" /> contenant les clés de l'objet <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Objet <see cref="T:System.Collections.ICollection" /> contenant les clés de l'objet <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Supprime l'élément avec la clé spécifiée d'<see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clé de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.DictionaryBase" /> est en lecture seule.

ou -
<see cref="T:System.Collections.DictionaryBase" /> est de taille fixe.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
      <summary>Obtient un objet <see cref="T:System.Collections.ICollection" /> contenant les valeurs de l'objet <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Objet <see cref="T:System.Collections.ICollection" /> contenant les valeurs de l'objet <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un <see cref="T:System.Collections.IEnumerator" /> qui itère au sein de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="T:System.Collections.Queue">
      <summary>Représente une collection d’objets premier entré, premier sorti.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" /> qui est vide, possède la capacité initiale par défaut et utilise le facteur de croissance par défaut.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" /> qui contient des éléments copiés à partir de la collection spécifiée, possède la capacité initiale correspondant au nombre d'éléments copiés et utilise le facteur de croissance par défaut.</summary>
      <param name="col">
        <see cref="T:System.Collections.ICollection" /> à partir duquel les éléments sont copiés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="col" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" /> qui est vide, possède la capacité initiale spécifiée et utilise le facteur de croissance par défaut.</summary>
      <param name="capacity">Nombre initial d'éléments que <see cref="T:System.Collections.Queue" /> peut contenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" /> qui est vide, possède la capacité initiale spécifiée et utilise le facteur de croissance spécifié.</summary>
      <param name="capacity">Nombre initial d'éléments que <see cref="T:System.Collections.Queue" /> peut contenir.</param>
      <param name="growFactor">Facteur d'augmentation de la capacité de <see cref="T:System.Collections.Queue" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> est inférieur à zéro.

ou -
<paramref name="growFactor" /> est inférieur à 1.0 ou supérieur à 10.0.</exception>
    </member>
    <member name="M:System.Collections.Queue.Clear">
      <summary>Supprime tous les objets du <see cref="T:System.Collections.Queue" />.</summary>
    </member>
    <member name="M:System.Collections.Queue.Clone">
      <summary>Crée une copie superficielle de <see cref="T:System.Collections.Queue" />.</summary>
      <returns>Copie superficielle de <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Contains(System.Object)">
      <summary>Détermine si le <see cref="T:System.Collections.Queue" /> contient un élément.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.Queue" />. La valeur peut être <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> existe dans <see cref="T:System.Collections.Queue" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
      <summary>Copie les éléments <see cref="T:System.Collections.Queue" /> dans un <see cref="T:System.Array" /> unidimensionnel existant, en commençant au niveau de l'index de tableau spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Queue" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.

ou -
Le nombre d’éléments dans le <see cref="T:System.Collections.Queue" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Le type du <see cref="T:System.Collections.Queue" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.Queue.Count">
      <summary>Obtient le nombre d'éléments contenus dans le <see cref="T:System.Collections.Queue" />.</summary>
      <returns>Nombre d'éléments contenus dans <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Dequeue">
      <summary>Supprime et renvoie l'objet au début de la <see cref="T:System.Collections.Queue" />.</summary>
      <returns>Objet supprimé du début de la <see cref="T:System.Collections.Queue" />.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="T:System.Collections.Queue" /> est vide.</exception>
    </member>
    <member name="M:System.Collections.Queue.Enqueue(System.Object)">
      <summary>Ajoute un objet à la fin de la <see cref="T:System.Collections.Queue" />.</summary>
      <param name="obj">Objet à ajouter à <see cref="T:System.Collections.Queue" />. La valeur peut être <see langword="null" />.</param>
    </member>
    <member name="M:System.Collections.Queue.GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de <see cref="T:System.Collections.Queue" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="P:System.Collections.Queue.IsSynchronized">
      <summary>Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.Queue" /> est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.Queue" /> est synchronisé (thread-safe) ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Peek">
      <summary>Renvoie l'objet situé au début de la <see cref="T:System.Collections.Queue" /> sans le supprimer.</summary>
      <returns>Objet situé au début de la <see cref="T:System.Collections.Queue" />.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="T:System.Collections.Queue" /> est vide.</exception>
    </member>
    <member name="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
      <summary>Retourne un nouvel objet <see cref="T:System.Collections.Queue" /> thread-safe encapsulant la file d'attente d'origine.</summary>
      <param name="queue">
        <see cref="T:System.Collections.Queue" /> à synchroniser.</param>
      <returns>Wrapper <see cref="T:System.Collections.Queue" /> synchronisé (thread-safe).</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="queue" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Queue.SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.Queue" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.ToArray">
      <summary>Copie les éléments <see cref="T:System.Collections.Queue" /> vers un nouveau tableau.</summary>
      <returns>Nouveau tableau contenant les éléments copiés à partir de <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.TrimToSize">
      <summary>Définit la capacité au nombre réel d'éléments dans <see cref="T:System.Collections.Queue" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Queue" /> est en lecture seule.</exception>
    </member>
    <member name="T:System.Collections.ReadOnlyCollectionBase">
      <summary>Fournit la classe de base <see langword="abstract" /> pour une collection en lecture seule non générique fortement typée.</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.Count">
      <summary>Obtient le nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns>Nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.ReadOnlyCollectionBase" />. La récupération de la valeur de cette propriété est une opération O(1).</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de l'instance <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour l'instance du <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.InnerList">
      <summary>Obtient la liste des éléments contenus dans l’instance de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> représentant l'instance de <see cref="T:System.Collections.ReadOnlyCollectionBase" /> elle-même.</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie l'ensemble de l'objet <see cref="T:System.Collections.ReadOnlyCollectionBase" /> vers un objet <see cref="T:System.Array" /> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ReadOnlyCollectionBase" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.

ou -
Le nombre d’éléments dans le <see cref="T:System.Collections.ReadOnlyCollectionBase" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException">Le type du <see cref="T:System.Collections.ReadOnlyCollectionBase" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary>Obtient une valeur indiquant si l'accès à un objet <see cref="T:System.Collections.ReadOnlyCollectionBase" /> est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à l'objet <see cref="T:System.Collections.ReadOnlyCollectionBase" /> est synchronisé (thread-safe) ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à un objet <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns>Objet pouvant être utilisé pour synchroniser l’accès à l’objet <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</returns>
    </member>
    <member name="T:System.Collections.SortedList">
      <summary>Représente une collection de paires clé/valeur triées par les clés et accessible par clé et par index.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui est vide, possède la capacité initiale par défaut et est triée suivant l'interface <see cref="T:System.IComparable" /> implémentée par chaque clé ajoutée à l'objet <see cref="T:System.Collections.SortedList" />.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui est vide, possède la capacité initiale par défaut et est triée suivant l'interface <see cref="T:System.Collections.IComparer" /> spécifiée.</summary>
      <param name="comparer">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison de clés.

ou -
<see langword="null" /> pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</param>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui est vide, possède la capacité initiale spécifiée et est triée suivant l'interface <see cref="T:System.Collections.IComparer" /> spécifiée.</summary>
      <param name="comparer">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison de clés.

ou -
<see langword="null" /> pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</param>
      <param name="capacity">Nombre initial d'éléments que l'objet <see cref="T:System.Collections.SortedList" /> peut contenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> est inférieur à zéro.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire disponible est insuffisante pour créer un objet <see cref="T:System.Collections.SortedList" /> avec le <paramref name="capacity" /> spécifié.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui contient des éléments copiés à partir du dictionnaire spécifié, possède la capacité initiale correspondant au nombre d'éléments copiés et est triée suivant l'interface <see cref="T:System.IComparable" /> implémentée par chaque clé.</summary>
      <param name="d">Implémentation de <see cref="T:System.Collections.IDictionary" /> à copier vers un nouvel objet <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Un ou plusieurs éléments de <paramref name="d" /> n’implémentent pas l’interface <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui contient des éléments copiés à partir du dictionnaire spécifié, possède la capacité initiale correspondant au nombre d'éléments copiés et est triée suivant l'interface <see cref="T:System.Collections.IComparer" /> spécifiée.</summary>
      <param name="d">Implémentation de <see cref="T:System.Collections.IDictionary" /> à copier vers un nouvel objet <see cref="T:System.Collections.SortedList" />.</param>
      <param name="comparer">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison de clés.

ou -
<see langword="null" /> pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="comparer" /> est <see langword="null" /> et un ou plusieurs éléments de <paramref name="d" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui est vide, possède la capacité initiale spécifiée et est triée suivant l'interface <see cref="T:System.IComparable" /> implémentée par chaque clé ajoutée à l'objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="initialCapacity">Nombre initial d'éléments que l'objet <see cref="T:System.Collections.SortedList" /> peut contenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCapacity" /> est inférieur à zéro.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire disponible est insuffisante pour créer un objet <see cref="T:System.Collections.SortedList" /> avec le <paramref name="initialCapacity" /> spécifié.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Add(System.Object,System.Object)">
      <summary>Ajoute un élément avec la clé et la valeur spécifiées dans un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key">Clé de l'élément à ajouter.</param>
      <param name="value">Valeur de l'élément à ajouter. La valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un élément possédant le <paramref name="key" /> spécifié existe déjà dans l'objet <see cref="T:System.Collections.SortedList" />.

ou -
<see cref="T:System.Collections.SortedList" /> est défini pour utiliser l'interface <see cref="T:System.IComparable" /> et <paramref name="key" /> n'implémente pas l'interface <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.SortedList" /> est en lecture seule.

ou -
<see cref="T:System.Collections.SortedList" /> est de taille fixe.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire disponible est insuffisante pour ajouter l'élément à <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le comparateur lève une exception.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Capacity">
      <summary>Obtient ou définit la capacité d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Nombre d'éléments que l'objet <see cref="T:System.Collections.SortedList" /> peut contenir.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur assignée est inférieure ou égale au nombre actuel d'éléments dans l'objet <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n’y a pas assez de mémoire disponible sur le système.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clear">
      <summary>Supprime tous les éléments d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.

ou -
<see cref="T:System.Collections.SortedList" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clone">
      <summary>Crée une copie superficielle d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Copie superficielle de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Contains(System.Object)">
      <summary>Détermine si un objet <see cref="T:System.Collections.SortedList" /> contient une clé spécifique.</summary>
      <param name="key">Clé à rechercher dans l'objet <see cref="T:System.Collections.SortedList" />.</param>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> contient un élément avec le <paramref name="key" /> spécifié ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le comparateur lève une exception.</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsKey(System.Object)">
      <summary>Détermine si un objet <see cref="T:System.Collections.SortedList" /> contient une clé spécifique.</summary>
      <param name="key">Clé à rechercher dans l'objet <see cref="T:System.Collections.SortedList" />.</param>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> contient un élément avec le <paramref name="key" /> spécifié ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le comparateur lève une exception.</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsValue(System.Object)">
      <summary>Détermine si un objet <see cref="T:System.Collections.SortedList" /> contient une valeur spécifique.</summary>
      <param name="value">Valeur à trouver dans l'objet <see cref="T:System.Collections.SortedList" />. La valeur peut être <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> contient un élément avec le <paramref name="value" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
      <summary>Copie des éléments <see cref="T:System.Collections.SortedList" /> dans un objet <see cref="T:System.Array" /> unidimensionnel, en commençant à l'index spécifié dans le tableau.</summary>
      <param name="array">Objet <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des objets <see cref="T:System.Collections.DictionaryEntry" /> copiés à partir de <see cref="T:System.Collections.SortedList" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="arrayIndex">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.

ou -
Le nombre d'éléments de l'objet <see cref="T:System.Collections.SortedList" /> source est supérieur à la quantité d'espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException">Le type du <see cref="T:System.Collections.SortedList" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Count">
      <summary>Obtient le nombre d'éléments contenus dans un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Nombre d'éléments contenus dans l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetByIndex(System.Int32)">
      <summary>Obtient la valeur à l'index spécifié d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index">Index de base zéro de la valeur à obtenir.</param>
      <returns>Valeur à l'index spécifié de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> sort de la plage d'index valides pour l'objet <see cref="T:System.Collections.SortedList" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetEnumerator">
      <summary>Retourne un objet <see cref="T:System.Collections.IDictionaryEnumerator" /> qui itère a sein d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Objet <see cref="T:System.Collections.IDictionaryEnumerator" /> de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKey(System.Int32)">
      <summary>Obtient la clé à l'index spécifié d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index">Index de base zéro de la clé à obtenir.</param>
      <returns>Clé à l'index spécifié de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> sort de la plage d'index valides pour l'objet <see cref="T:System.Collections.SortedList" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetKeyList">
      <summary>Obtient les clés d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Objet <see cref="T:System.Collections.IList" /> contenant les clés de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetValueList">
      <summary>Obtient les valeurs d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Objet <see cref="T:System.Collections.IList" /> contenant les valeurs de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfKey(System.Object)">
      <summary>Retourne l'index de base zéro de la clé spécifiée dans un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key">Clé à rechercher dans l'objet <see cref="T:System.Collections.SortedList" />.</param>
      <returns>Index de base zéro du paramètre <paramref name="key" />, si <paramref name="key" /> se trouve dans l'objet <see cref="T:System.Collections.SortedList" /> ; sinon, -1.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le comparateur lève une exception.</exception>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfValue(System.Object)">
      <summary>Retourne l'index de base zéro de la première occurrence de la valeur spécifiée dans un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="value">Valeur à trouver dans l'objet <see cref="T:System.Collections.SortedList" />. La valeur peut être <see langword="null" />.</param>
      <returns>Index de base zéro de la première occurrence du paramètre <paramref name="value" />, si <paramref name="value" /> se trouve dans l'objet <see cref="T:System.Collections.SortedList" /> ; sinon, -1.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsFixedSize">
      <summary>Obtient une valeur indiquant si un objet <see cref="T:System.Collections.SortedList" /> est de taille fixe.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> est de taille fixe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsReadOnly">
      <summary>Obtient une valeur indiquant si un objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsSynchronized">
      <summary>Obtient une valeur indiquant si l'accès à un objet <see cref="T:System.Collections.SortedList" /> est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à l'objet <see cref="T:System.Collections.SortedList" /> est synchronisé (thread-safe) ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Item(System.Object)">
      <summary>Obtient ou définit la valeur associée à une clé spécifique dans un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key">Clé dont la valeur doit être obtenue ou définie.</param>
      <returns>Valeur associée au paramètre <paramref name="key" /> dans l'objet <see cref="T:System.Collections.SortedList" />, si <paramref name="key" /> existe ; sinon, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La propriété est définie et l'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.

ou -
La propriété est définie, <paramref name="key" /> n’existe pas dans la collection et <see cref="T:System.Collections.SortedList" /> a une taille fixe.</exception>
      <exception cref="T:System.OutOfMemoryException">La mémoire disponible est insuffisante pour ajouter l'élément à <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le comparateur lève une exception.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Keys">
      <summary>Obtient les clés d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Objet <see cref="T:System.Collections.ICollection" /> contenant les clés de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Remove(System.Object)">
      <summary>Supprime d'un objet <see cref="T:System.Collections.SortedList" /> l'élément ayant la clé spécifiée.</summary>
      <param name="key">Clé de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.

ou -
<see cref="T:System.Collections.SortedList" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Collections.SortedList.RemoveAt(System.Int32)">
      <summary>Supprime l'élément à l'index spécifié d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index">Index de base zéro de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> sort de la plage d'index valides pour l'objet <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.SortedList" /> est en lecture seule.

ou -
<see cref="T:System.Collections.SortedList" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
      <summary>Remplace la valeur à l'index spécifié dans un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index">Index de base zéro au niveau duquel enregistrer <paramref name="value" />.</param>
      <param name="value">
        <see cref="T:System.Object" /> à enregistrer dans l'objet <see cref="T:System.Collections.SortedList" />. La valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> sort de la plage d'index valides pour l'objet <see cref="T:System.Collections.SortedList" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
      <summary>Retourne un wrapper synchronisé (thread-safe) pour un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="list">Objet <see cref="T:System.Collections.SortedList" /> à synchroniser.</param>
      <returns>Wrapper synchronisé (thread-safe) pour l'objet <see cref="T:System.Collections.SortedList" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.SortedList.SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Objet pouvant être utilisé pour synchroniser l’accès à l’objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un <see cref="T:System.Collections.IEnumerator" /> qui itère au sein de <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.TrimToSize">
      <summary>Affecte à la capacité le nombre réel d'éléments d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.

ou -
<see cref="T:System.Collections.SortedList" /> est de taille fixe.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Values">
      <summary>Obtient les valeurs d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Objet <see cref="T:System.Collections.ICollection" /> contenant les valeurs de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="T:System.Collections.Specialized.CollectionsUtil">
      <summary>Crée des collections qui ignorent la casse dans les chaînes.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Specialized.CollectionsUtil" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <summary>Crée une nouvelle instance ne respectant pas la casse de la classe <see cref="T:System.Collections.Hashtable" /> avec la capacité initiale par défaut.</summary>
      <returns>Nouvelle instance ne respectant pas la casse de la classe <see cref="T:System.Collections.Hashtable" /> avec la capacité initiale par défaut.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
      <summary>Copie les entrées du dictionnaire spécifié dans une nouvelle instance de la classe <see cref="T:System.Collections.Hashtable" /> avec la même capacité initiale que le nombre d'entrées copiées.</summary>
      <param name="d">
        <see cref="T:System.Collections.IDictionary" /> à copier vers un nouveau <see cref="T:System.Collections.Hashtable" /> qui ne respecte pas la casse.</param>
      <returns>Nouvelle instance ne respectant pas la casse de la classe <see cref="T:System.Collections.Hashtable" /> contenant les entrées du <see cref="T:System.Collections.IDictionary" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
      <summary>Crée une nouvelle instance ne respectant pas la casse de la classe <see cref="T:System.Collections.Hashtable" /> avec la capacité initiale spécifiée.</summary>
      <param name="capacity">Nombre approximatif d'entrées que <see cref="T:System.Collections.Hashtable" /> peut contenir initialement.</param>
      <returns>Nouvelle instance ne respectant pas la casse de la classe <see cref="T:System.Collections.Hashtable" /> avec la capacité initiale spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
      <summary>Crée une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui ignore la casse des chaînes.</summary>
      <returns>Nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui ignore la casse des chaînes.</returns>
    </member>
    <member name="T:System.Collections.Stack">
      <summary>Représente une simple collection non générique d’objets de type dernier entré, premier sorti (LIFO).</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Stack" /> qui est vide et possède la capacité initiale par défaut.</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Stack" /> qui contient des éléments copiés à partir de la collection spécifiée et qui possède la capacité initiale correspondant au nombre d'éléments copiés.</summary>
      <param name="col">
        <see cref="T:System.Collections.ICollection" /> à partir duquel les éléments sont copiés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="col" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Stack" /> qui est vide et possède une capacité égale à la plus grande valeur parmi la capacité initiale spécifiée et la capacité initiale par défaut.</summary>
      <param name="initialCapacity">Nombre initial d'éléments que <see cref="T:System.Collections.Stack" /> peut contenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCapacity" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.Collections.Stack.Clear">
      <summary>Supprime tous les objets du <see cref="T:System.Collections.Stack" />.</summary>
    </member>
    <member name="M:System.Collections.Stack.Clone">
      <summary>Crée une copie superficielle de <see cref="T:System.Collections.Stack" />.</summary>
      <returns>Copie superficielle de <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Contains(System.Object)">
      <summary>Détermine si le <see cref="T:System.Collections.Stack" /> contient un élément.</summary>
      <param name="obj">Objet à rechercher dans <see cref="T:System.Collections.Stack" />. La valeur peut être <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> existe dans <see cref="T:System.Collections.Stack" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
      <summary>Copie <see cref="T:System.Collections.Stack" /> dans un <see cref="T:System.Array" /> unidimensionnel existant commençant à l'index de tableau spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Stack" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.

ou -
Le nombre d’éléments dans le <see cref="T:System.Collections.Stack" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException">Le type du <see cref="T:System.Collections.Stack" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.Stack.Count">
      <summary>Obtient le nombre d'éléments contenus dans le <see cref="T:System.Collections.Stack" />.</summary>
      <returns>Nombre d'éléments contenus dans <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.GetEnumerator">
      <summary>Retourne un <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Collections.Stack" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="P:System.Collections.Stack.IsSynchronized">
      <summary>Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.Stack" /> est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.Stack" /> est synchronisé (thread-safe) ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Peek">
      <summary>Retourne l'objet situé en haut de <see cref="T:System.Collections.Stack" /> sans le supprimer.</summary>
      <returns>
        <see cref="T:System.Object" /> situé en haut de <see cref="T:System.Collections.Stack" />.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="T:System.Collections.Stack" /> est vide.</exception>
    </member>
    <member name="M:System.Collections.Stack.Pop">
      <summary>Supprime et retourne l'objet en haut de <see cref="T:System.Collections.Stack" />.</summary>
      <returns>
        <see cref="T:System.Object" /> supprimé du haut de <see cref="T:System.Collections.Stack" />.</returns>
      <exception cref="T:System.InvalidOperationException">La <see cref="T:System.Collections.Stack" /> est vide.</exception>
    </member>
    <member name="M:System.Collections.Stack.Push(System.Object)">
      <summary>Insère un objet en haut de <see cref="T:System.Collections.Stack" />.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> sur lequel un push doit être exécuté dans <see cref="T:System.Collections.Stack" />. La valeur peut être <see langword="null" />.</param>
    </member>
    <member name="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
      <summary>Retourne un wrapper synchronisé (thread-safe) pour <see cref="T:System.Collections.Stack" />.</summary>
      <param name="stack">
        <see cref="T:System.Collections.Stack" /> à synchroniser.</param>
      <returns>Wrapper synchronisé (thread-safe) autour de <see cref="T:System.Collections.Stack" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stack" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Stack.SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.Stack" />.</summary>
      <returns>
        <see cref="T:System.Object" /> pouvant être utilisé pour synchroniser l’accès à <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.ToArray">
      <summary>Copie <see cref="T:System.Collections.Stack" /> vers un nouveau tableau.</summary>
      <returns>Nouveau tableau contenant les copies des éléments de <see cref="T:System.Collections.Stack" />.</returns>
    </member>
  </members>
</doc>