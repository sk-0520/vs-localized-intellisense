<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets.Client</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ClientWebSocket">
      <summary>Fournit un client pour la connexion aux services WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Abort">
      <summary>Abandonne la connexion et annule les opérations d’E/S en attente.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Ferme l’instance de <see cref="T:System.Net.WebSockets.ClientWebSocket" /> en tant qu’opération asynchrone.</summary>
      <param name="closeStatus">État de fermeture de WebSocket.</param>
      <param name="statusDescription">Description de l’état de fermeture.</param>
      <param name="cancellationToken">Jeton d’annulation utilisé pour propager la notification d’annulation de cette opération.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Fermer la sortie de l’instance <see cref="T:System.Net.WebSockets.ClientWebSocket" /> comme opération asynchrone.</summary>
      <param name="closeStatus">État de fermeture de WebSocket.</param>
      <param name="statusDescription">Description de l’état de fermeture.</param>
      <param name="cancellationToken">Jeton d’annulation utilisé pour propager la notification d’annulation de cette opération.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatus">
      <summary>Obtient la cause de l’initiation du protocole de transfert de fermeture sur l’instance de <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>Cause de l’initiation du protocole de transfert de fermeture.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription">
      <summary>Obtient une description de la cause de la fermeture de l’instance de <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>Description de la cause de la fermeture de l’instance de <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Se connecter à un serveur WebSocket en tant qu’opération asynchrone.</summary>
      <param name="uri">URI du serveur WebSocket auquel se connecter.</param>
      <param name="cancellationToken">Jeton d’annulation utilisé pour propager la notification indiquant que l’opération doit être annulée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Dispose">
      <summary>Libère les ressources non managées utilisées par l’instance <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.Options">
      <summary>Obtient les options de WebSocket pour l’instance de <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>Options de WebSocket pour l’instance de <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>Reçoit les données sur <see cref="T:System.Net.WebSockets.ClientWebSocket" /> en tant qu’opération asynchrone.</summary>
      <param name="buffer">Mémoire tampon utilisée pour recevoir la réponse.</param>
      <param name="cancellationToken">Jeton d’annulation utilisé pour propager la notification indiquant que cette opération doit être annulée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Net.WebSockets.ClientWebSocket" /> n’est pas connecté.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Reçoit les données sur <see cref="T:System.Net.WebSockets.ClientWebSocket" /> en tant qu’opération asynchrone.</summary>
      <param name="buffer">Zone de mémoire devant recevoir la réponse.</param>
      <param name="cancellationToken">Jeton d’annulation utilisé pour propager la notification indiquant que cette opération doit être annulée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Net.WebSockets.ClientWebSocket" /> n’est pas connecté.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Envoie des données sur <see cref="T:System.Net.WebSockets.ClientWebSocket" /> en tant qu’opération asynchrone.</summary>
      <param name="buffer">Mémoire tampon qui contient le message à envoyer.</param>
      <param name="messageType">Une des valeurs de l’énumération qui spécifie si la mémoire tampon est en texte clair ou au format binaire.</param>
      <param name="endOfMessage">
        <see langword="true" /> pour indiquer qu’il s’agit de l’envoi asynchrone final ; sinon, <see langword="false" />.</param>
      <param name="cancellationToken">Jeton d’annulation utilisé pour propager la notification indiquant que cette opération doit être annulée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Net.WebSockets.ClientWebSocket" /> n’est pas connecté.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Envoie des données sur <see cref="T:System.Net.WebSockets.ClientWebSocket" /> à partir d’une plage de mémoire d’octets en lecture seule en tant qu’opération asynchrone.</summary>
      <param name="buffer">Zone de mémoire contenant le message à envoyer.</param>
      <param name="messageType">Une des valeurs de l’énumération qui spécifie si la mémoire tampon est en texte clair ou au format binaire.</param>
      <param name="endOfMessage">
        <see langword="true" /> pour indiquer qu’il s’agit de l’envoi asynchrone final ; sinon, <see langword="false" />.</param>
      <param name="cancellationToken">Jeton d’annulation utilisé pour propager la notification indiquant que cette opération doit être annulée.</param>
      <returns>Objet tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Net.WebSockets.ClientWebSocket" /> n’est pas connecté.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.State">
      <summary>Obtient l’état de WebSocket de l’instance <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>État de WebSocket de l’instance <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.SubProtocol">
      <summary>Obtient le sous-protocole WebSocket pris en charge pour l’instance de <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>Sous-protocole WebSocket pris en charge.</returns>
    </member>
    <member name="T:System.Net.WebSockets.ClientWebSocketOptions">
      <summary>Options à utiliser avec un objet <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)">
      <summary>Ajoute un sous-protocole devant être négocié pendant la négociation de connexion WebSocket.</summary>
      <param name="subProtocol">Sous-protocole WebSocket à ajouter.</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates">
      <summary>Obtient ou définit une collection de certificats côté client.</summary>
      <returns>Collection de certificats côté client.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Cookies">
      <summary>Obtient ou définit les cookies associés à la requête.</summary>
      <returns>Cookies associés à la requête.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Credentials">
      <summary>Obtient ou définit les informations d'identification du client.</summary>
      <returns>Informations d'identification du client.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval">
      <summary>Obtient ou définit l’intervalle de conservation du protocole WebSocket.</summary>
      <returns>Intervalle de conservation du protocole WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Proxy">
      <summary>Obtient ou définit le proxy pour les demandes WebSocket.</summary>
      <returns>Proxy pour les demandes WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.RemoteCertificateValidationCallback">
      <summary>Obtient ou définit le rappel de valider un certificat de serveur.</summary>
      <returns>Une fonction de rappel pour valider le certificat de serveur.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)">
      <summary>Définit les paramètres de la mémoire tampon du client.</summary>
      <param name="receiveBufferSize">Taille, en octets, de la mémoire tampon de réception client.</param>
      <param name="sendBufferSize">Taille, en octets, de la mémoire tampon d'envoi client.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})">
      <summary>Définit les paramètres de la mémoire tampon du client.</summary>
      <param name="receiveBufferSize">Taille, en octets, de la mémoire tampon de réception client.</param>
      <param name="sendBufferSize">Taille, en octets, de la mémoire tampon d'envoi client.</param>
      <param name="buffer">Mémoire tampon de réception à utiliser.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)">
      <summary>Crée un en-tête de demande HTTP et sa valeur.</summary>
      <param name="headerName">Nom de l’en-tête HTTP.</param>
      <param name="headerValue">Valeur de l’en-tête HTTP.</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials">
      <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui indique si les informations d'identification par défaut doivent être utilisées pendant l'établissement de liaison WebSocket.</summary>
      <returns>
        <see langword="true" /> si les informations d’identification par défaut doivent être utilisées pendant le protocole de transfert WebSocket ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
  </members>
</doc>